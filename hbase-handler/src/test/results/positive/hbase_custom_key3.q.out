PREHOOK: query: CREATE TABLE hbase_ck_5(key struct<col1:string,col2:string,col3:string>, value string)
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES (
    "hbase.table.name" = "hbase_custom3",
    "hbase.columns.mapping" = ":key,cf:string",
    "hbase.composite.key.factory"="org.apache.hadoop.hive.hbase.SampleHBaseKeyFactory3")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@hbase_ck_5
POSTHOOK: query: CREATE TABLE hbase_ck_5(key struct<col1:string,col2:string,col3:string>, value string)
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES (
    "hbase.table.name" = "hbase_custom3",
    "hbase.columns.mapping" = ":key,cf:string",
    "hbase.composite.key.factory"="org.apache.hadoop.hive.hbase.SampleHBaseKeyFactory3")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@hbase_ck_5
PREHOOK: query: from src tablesample (5 rows)
insert into table hbase_ck_5 select
struct(
  cast(key as string),
  cast(cast(key + 1000 as int) as string),
  cast(cast(key + 2000 as int) as string)),
value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@hbase_ck_5
POSTHOOK: query: from src tablesample (5 rows)
insert into table hbase_ck_5 select
struct(
  cast(key as string),
  cast(cast(key + 1000 as int) as string),
  cast(cast(key + 2000 as int) as string)),
value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@hbase_ck_5
PREHOOK: query: select * from hbase_ck_5
PREHOOK: type: QUERY
PREHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
POSTHOOK: query: select * from hbase_ck_5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
{"col1":"165","col2":"1165","col3":"2165"}	val_165
{"col1":"238","col2":"1238","col3":"2238"}	val_238
{"col1":"27","col2":"1027","col3":"2027"}	val_27
{"col1":"311","col2":"1311","col3":"2311"}	val_311
{"col1":"86","col2":"1086","col3":"2086"}	val_86
PREHOOK: query: explain
select * from hbase_ck_5 where key.col1 = '238' AND key.col2 = '1238'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from hbase_ck_5 where key.col1 = '238' AND key.col2 = '1238'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: hbase_ck_5
          filterExpr: ((key.col1 = '238') and (key.col2 = '1238')) (type: boolean)
          Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          Filter Operator
            predicate: ((key.col1 = '238') and (key.col2 = '1238')) (type: boolean)
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Select Operator
              expressions: key (type: struct<col1:string,col2:string,col3:string>), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              ListSink

PREHOOK: query: select * from hbase_ck_5 where key.col1 = '238' AND key.col2 = '1238'
PREHOOK: type: QUERY
PREHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
POSTHOOK: query: select * from hbase_ck_5 where key.col1 = '238' AND key.col2 = '1238'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
{"col1":"238","col2":"1238","col3":"2238"}	val_238
PREHOOK: query: explain
select * from hbase_ck_5 where key.col1 >= '165' AND key.col1 < '27'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from hbase_ck_5 where key.col1 >= '165' AND key.col1 < '27'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: hbase_ck_5
          Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          Filter Operator
            predicate: ((key.col1 >= '165') and (key.col1 < '27')) (type: boolean)
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Select Operator
              expressions: key (type: struct<col1:string,col2:string,col3:string>), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              ListSink

PREHOOK: query: select * from hbase_ck_5 where key.col1 >= '165' AND key.col1 < '27'
PREHOOK: type: QUERY
PREHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
POSTHOOK: query: select * from hbase_ck_5 where key.col1 >= '165' AND key.col1 < '27'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
{"col1":"165","col2":"1165","col3":"2165"}	val_165
{"col1":"238","col2":"1238","col3":"2238"}	val_238
PREHOOK: query: explain
select * from hbase_ck_5 where key.col1 > '100' AND key.col2 >= '1238'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from hbase_ck_5 where key.col1 > '100' AND key.col2 >= '1238'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: hbase_ck_5
          Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          Filter Operator
            predicate: ((key.col1 > '100') and (key.col2 >= '1238')) (type: boolean)
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Select Operator
              expressions: key (type: struct<col1:string,col2:string,col3:string>), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              ListSink

PREHOOK: query: select * from hbase_ck_5 where key.col1 > '100' AND key.col2 >= '1238'
PREHOOK: type: QUERY
PREHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
POSTHOOK: query: select * from hbase_ck_5 where key.col1 > '100' AND key.col2 >= '1238'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
{"col1":"238","col2":"1238","col3":"2238"}	val_238
{"col1":"311","col2":"1311","col3":"2311"}	val_311
PREHOOK: query: explain
select * from hbase_ck_5 where key.col1 < '50' AND key.col2 >= '3238'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from hbase_ck_5 where key.col1 < '50' AND key.col2 >= '3238'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: hbase_ck_5
          Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          Filter Operator
            predicate: ((key.col1 < '50') and (key.col2 >= '3238')) (type: boolean)
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Select Operator
              expressions: key (type: struct<col1:string,col2:string,col3:string>), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              ListSink

PREHOOK: query: select * from hbase_ck_5 where key.col1 < '50' AND key.col2 >= '3238'
PREHOOK: type: QUERY
PREHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
POSTHOOK: query: select * from hbase_ck_5 where key.col1 < '50' AND key.col2 >= '3238'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hbase_ck_5
#### A masked pattern was here ####
