/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.hadoop.hive.metastore.api;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.1)")
@org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public class WMTrigger implements org.apache.thrift.TBase<WMTrigger, WMTrigger._Fields>, java.io.Serializable, Cloneable, Comparable<WMTrigger> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WMTrigger");

  private static final org.apache.thrift.protocol.TField RESOURCE_PLAN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("resourcePlanName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TRIGGER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("triggerName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TRIGGER_EXPRESSION_FIELD_DESC = new org.apache.thrift.protocol.TField("triggerExpression", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ACTION_EXPRESSION_FIELD_DESC = new org.apache.thrift.protocol.TField("actionExpression", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField IS_IN_UNMANAGED_FIELD_DESC = new org.apache.thrift.protocol.TField("isInUnmanaged", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField NS_FIELD_DESC = new org.apache.thrift.protocol.TField("ns", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WMTriggerStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WMTriggerTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable java.lang.String resourcePlanName; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String triggerName; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String triggerExpression; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String actionExpression; // optional
  private boolean isInUnmanaged; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String ns; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RESOURCE_PLAN_NAME((short)1, "resourcePlanName"),
    TRIGGER_NAME((short)2, "triggerName"),
    TRIGGER_EXPRESSION((short)3, "triggerExpression"),
    ACTION_EXPRESSION((short)4, "actionExpression"),
    IS_IN_UNMANAGED((short)5, "isInUnmanaged"),
    NS((short)6, "ns");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESOURCE_PLAN_NAME
          return RESOURCE_PLAN_NAME;
        case 2: // TRIGGER_NAME
          return TRIGGER_NAME;
        case 3: // TRIGGER_EXPRESSION
          return TRIGGER_EXPRESSION;
        case 4: // ACTION_EXPRESSION
          return ACTION_EXPRESSION;
        case 5: // IS_IN_UNMANAGED
          return IS_IN_UNMANAGED;
        case 6: // NS
          return NS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ISINUNMANAGED_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.TRIGGER_EXPRESSION,_Fields.ACTION_EXPRESSION,_Fields.IS_IN_UNMANAGED,_Fields.NS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESOURCE_PLAN_NAME, new org.apache.thrift.meta_data.FieldMetaData("resourcePlanName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TRIGGER_NAME, new org.apache.thrift.meta_data.FieldMetaData("triggerName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TRIGGER_EXPRESSION, new org.apache.thrift.meta_data.FieldMetaData("triggerExpression", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACTION_EXPRESSION, new org.apache.thrift.meta_data.FieldMetaData("actionExpression", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_IN_UNMANAGED, new org.apache.thrift.meta_data.FieldMetaData("isInUnmanaged", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.NS, new org.apache.thrift.meta_data.FieldMetaData("ns", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WMTrigger.class, metaDataMap);
  }

  public WMTrigger() {
  }

  public WMTrigger(
    java.lang.String resourcePlanName,
    java.lang.String triggerName)
  {
    this();
    this.resourcePlanName = resourcePlanName;
    this.triggerName = triggerName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WMTrigger(WMTrigger other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetResourcePlanName()) {
      this.resourcePlanName = other.resourcePlanName;
    }
    if (other.isSetTriggerName()) {
      this.triggerName = other.triggerName;
    }
    if (other.isSetTriggerExpression()) {
      this.triggerExpression = other.triggerExpression;
    }
    if (other.isSetActionExpression()) {
      this.actionExpression = other.actionExpression;
    }
    this.isInUnmanaged = other.isInUnmanaged;
    if (other.isSetNs()) {
      this.ns = other.ns;
    }
  }

  public WMTrigger deepCopy() {
    return new WMTrigger(this);
  }

  @Override
  public void clear() {
    this.resourcePlanName = null;
    this.triggerName = null;
    this.triggerExpression = null;
    this.actionExpression = null;
    setIsInUnmanagedIsSet(false);
    this.isInUnmanaged = false;
    this.ns = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getResourcePlanName() {
    return this.resourcePlanName;
  }

  public void setResourcePlanName(@org.apache.thrift.annotation.Nullable java.lang.String resourcePlanName) {
    this.resourcePlanName = resourcePlanName;
  }

  public void unsetResourcePlanName() {
    this.resourcePlanName = null;
  }

  /** Returns true if field resourcePlanName is set (has been assigned a value) and false otherwise */
  public boolean isSetResourcePlanName() {
    return this.resourcePlanName != null;
  }

  public void setResourcePlanNameIsSet(boolean value) {
    if (!value) {
      this.resourcePlanName = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTriggerName() {
    return this.triggerName;
  }

  public void setTriggerName(@org.apache.thrift.annotation.Nullable java.lang.String triggerName) {
    this.triggerName = triggerName;
  }

  public void unsetTriggerName() {
    this.triggerName = null;
  }

  /** Returns true if field triggerName is set (has been assigned a value) and false otherwise */
  public boolean isSetTriggerName() {
    return this.triggerName != null;
  }

  public void setTriggerNameIsSet(boolean value) {
    if (!value) {
      this.triggerName = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTriggerExpression() {
    return this.triggerExpression;
  }

  public void setTriggerExpression(@org.apache.thrift.annotation.Nullable java.lang.String triggerExpression) {
    this.triggerExpression = triggerExpression;
  }

  public void unsetTriggerExpression() {
    this.triggerExpression = null;
  }

  /** Returns true if field triggerExpression is set (has been assigned a value) and false otherwise */
  public boolean isSetTriggerExpression() {
    return this.triggerExpression != null;
  }

  public void setTriggerExpressionIsSet(boolean value) {
    if (!value) {
      this.triggerExpression = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getActionExpression() {
    return this.actionExpression;
  }

  public void setActionExpression(@org.apache.thrift.annotation.Nullable java.lang.String actionExpression) {
    this.actionExpression = actionExpression;
  }

  public void unsetActionExpression() {
    this.actionExpression = null;
  }

  /** Returns true if field actionExpression is set (has been assigned a value) and false otherwise */
  public boolean isSetActionExpression() {
    return this.actionExpression != null;
  }

  public void setActionExpressionIsSet(boolean value) {
    if (!value) {
      this.actionExpression = null;
    }
  }

  public boolean isIsInUnmanaged() {
    return this.isInUnmanaged;
  }

  public void setIsInUnmanaged(boolean isInUnmanaged) {
    this.isInUnmanaged = isInUnmanaged;
    setIsInUnmanagedIsSet(true);
  }

  public void unsetIsInUnmanaged() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISINUNMANAGED_ISSET_ID);
  }

  /** Returns true if field isInUnmanaged is set (has been assigned a value) and false otherwise */
  public boolean isSetIsInUnmanaged() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISINUNMANAGED_ISSET_ID);
  }

  public void setIsInUnmanagedIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISINUNMANAGED_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNs() {
    return this.ns;
  }

  public void setNs(@org.apache.thrift.annotation.Nullable java.lang.String ns) {
    this.ns = ns;
  }

  public void unsetNs() {
    this.ns = null;
  }

  /** Returns true if field ns is set (has been assigned a value) and false otherwise */
  public boolean isSetNs() {
    return this.ns != null;
  }

  public void setNsIsSet(boolean value) {
    if (!value) {
      this.ns = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case RESOURCE_PLAN_NAME:
      if (value == null) {
        unsetResourcePlanName();
      } else {
        setResourcePlanName((java.lang.String)value);
      }
      break;

    case TRIGGER_NAME:
      if (value == null) {
        unsetTriggerName();
      } else {
        setTriggerName((java.lang.String)value);
      }
      break;

    case TRIGGER_EXPRESSION:
      if (value == null) {
        unsetTriggerExpression();
      } else {
        setTriggerExpression((java.lang.String)value);
      }
      break;

    case ACTION_EXPRESSION:
      if (value == null) {
        unsetActionExpression();
      } else {
        setActionExpression((java.lang.String)value);
      }
      break;

    case IS_IN_UNMANAGED:
      if (value == null) {
        unsetIsInUnmanaged();
      } else {
        setIsInUnmanaged((java.lang.Boolean)value);
      }
      break;

    case NS:
      if (value == null) {
        unsetNs();
      } else {
        setNs((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RESOURCE_PLAN_NAME:
      return getResourcePlanName();

    case TRIGGER_NAME:
      return getTriggerName();

    case TRIGGER_EXPRESSION:
      return getTriggerExpression();

    case ACTION_EXPRESSION:
      return getActionExpression();

    case IS_IN_UNMANAGED:
      return isIsInUnmanaged();

    case NS:
      return getNs();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RESOURCE_PLAN_NAME:
      return isSetResourcePlanName();
    case TRIGGER_NAME:
      return isSetTriggerName();
    case TRIGGER_EXPRESSION:
      return isSetTriggerExpression();
    case ACTION_EXPRESSION:
      return isSetActionExpression();
    case IS_IN_UNMANAGED:
      return isSetIsInUnmanaged();
    case NS:
      return isSetNs();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof WMTrigger)
      return this.equals((WMTrigger)that);
    return false;
  }

  public boolean equals(WMTrigger that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_resourcePlanName = true && this.isSetResourcePlanName();
    boolean that_present_resourcePlanName = true && that.isSetResourcePlanName();
    if (this_present_resourcePlanName || that_present_resourcePlanName) {
      if (!(this_present_resourcePlanName && that_present_resourcePlanName))
        return false;
      if (!this.resourcePlanName.equals(that.resourcePlanName))
        return false;
    }

    boolean this_present_triggerName = true && this.isSetTriggerName();
    boolean that_present_triggerName = true && that.isSetTriggerName();
    if (this_present_triggerName || that_present_triggerName) {
      if (!(this_present_triggerName && that_present_triggerName))
        return false;
      if (!this.triggerName.equals(that.triggerName))
        return false;
    }

    boolean this_present_triggerExpression = true && this.isSetTriggerExpression();
    boolean that_present_triggerExpression = true && that.isSetTriggerExpression();
    if (this_present_triggerExpression || that_present_triggerExpression) {
      if (!(this_present_triggerExpression && that_present_triggerExpression))
        return false;
      if (!this.triggerExpression.equals(that.triggerExpression))
        return false;
    }

    boolean this_present_actionExpression = true && this.isSetActionExpression();
    boolean that_present_actionExpression = true && that.isSetActionExpression();
    if (this_present_actionExpression || that_present_actionExpression) {
      if (!(this_present_actionExpression && that_present_actionExpression))
        return false;
      if (!this.actionExpression.equals(that.actionExpression))
        return false;
    }

    boolean this_present_isInUnmanaged = true && this.isSetIsInUnmanaged();
    boolean that_present_isInUnmanaged = true && that.isSetIsInUnmanaged();
    if (this_present_isInUnmanaged || that_present_isInUnmanaged) {
      if (!(this_present_isInUnmanaged && that_present_isInUnmanaged))
        return false;
      if (this.isInUnmanaged != that.isInUnmanaged)
        return false;
    }

    boolean this_present_ns = true && this.isSetNs();
    boolean that_present_ns = true && that.isSetNs();
    if (this_present_ns || that_present_ns) {
      if (!(this_present_ns && that_present_ns))
        return false;
      if (!this.ns.equals(that.ns))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetResourcePlanName()) ? 131071 : 524287);
    if (isSetResourcePlanName())
      hashCode = hashCode * 8191 + resourcePlanName.hashCode();

    hashCode = hashCode * 8191 + ((isSetTriggerName()) ? 131071 : 524287);
    if (isSetTriggerName())
      hashCode = hashCode * 8191 + triggerName.hashCode();

    hashCode = hashCode * 8191 + ((isSetTriggerExpression()) ? 131071 : 524287);
    if (isSetTriggerExpression())
      hashCode = hashCode * 8191 + triggerExpression.hashCode();

    hashCode = hashCode * 8191 + ((isSetActionExpression()) ? 131071 : 524287);
    if (isSetActionExpression())
      hashCode = hashCode * 8191 + actionExpression.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsInUnmanaged()) ? 131071 : 524287);
    if (isSetIsInUnmanaged())
      hashCode = hashCode * 8191 + ((isInUnmanaged) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetNs()) ? 131071 : 524287);
    if (isSetNs())
      hashCode = hashCode * 8191 + ns.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(WMTrigger other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetResourcePlanName(), other.isSetResourcePlanName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResourcePlanName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resourcePlanName, other.resourcePlanName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTriggerName(), other.isSetTriggerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTriggerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.triggerName, other.triggerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTriggerExpression(), other.isSetTriggerExpression());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTriggerExpression()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.triggerExpression, other.triggerExpression);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetActionExpression(), other.isSetActionExpression());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActionExpression()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actionExpression, other.actionExpression);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIsInUnmanaged(), other.isSetIsInUnmanaged());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsInUnmanaged()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInUnmanaged, other.isInUnmanaged);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNs(), other.isSetNs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ns, other.ns);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WMTrigger(");
    boolean first = true;

    sb.append("resourcePlanName:");
    if (this.resourcePlanName == null) {
      sb.append("null");
    } else {
      sb.append(this.resourcePlanName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("triggerName:");
    if (this.triggerName == null) {
      sb.append("null");
    } else {
      sb.append(this.triggerName);
    }
    first = false;
    if (isSetTriggerExpression()) {
      if (!first) sb.append(", ");
      sb.append("triggerExpression:");
      if (this.triggerExpression == null) {
        sb.append("null");
      } else {
        sb.append(this.triggerExpression);
      }
      first = false;
    }
    if (isSetActionExpression()) {
      if (!first) sb.append(", ");
      sb.append("actionExpression:");
      if (this.actionExpression == null) {
        sb.append("null");
      } else {
        sb.append(this.actionExpression);
      }
      first = false;
    }
    if (isSetIsInUnmanaged()) {
      if (!first) sb.append(", ");
      sb.append("isInUnmanaged:");
      sb.append(this.isInUnmanaged);
      first = false;
    }
    if (isSetNs()) {
      if (!first) sb.append(", ");
      sb.append("ns:");
      if (this.ns == null) {
        sb.append("null");
      } else {
        sb.append(this.ns);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetResourcePlanName()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'resourcePlanName' is unset! Struct:" + toString());
    }

    if (!isSetTriggerName()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'triggerName' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WMTriggerStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WMTriggerStandardScheme getScheme() {
      return new WMTriggerStandardScheme();
    }
  }

  private static class WMTriggerStandardScheme extends org.apache.thrift.scheme.StandardScheme<WMTrigger> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WMTrigger struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RESOURCE_PLAN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resourcePlanName = iprot.readString();
              struct.setResourcePlanNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TRIGGER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.triggerName = iprot.readString();
              struct.setTriggerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TRIGGER_EXPRESSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.triggerExpression = iprot.readString();
              struct.setTriggerExpressionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ACTION_EXPRESSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.actionExpression = iprot.readString();
              struct.setActionExpressionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IS_IN_UNMANAGED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isInUnmanaged = iprot.readBool();
              struct.setIsInUnmanagedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ns = iprot.readString();
              struct.setNsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WMTrigger struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.resourcePlanName != null) {
        oprot.writeFieldBegin(RESOURCE_PLAN_NAME_FIELD_DESC);
        oprot.writeString(struct.resourcePlanName);
        oprot.writeFieldEnd();
      }
      if (struct.triggerName != null) {
        oprot.writeFieldBegin(TRIGGER_NAME_FIELD_DESC);
        oprot.writeString(struct.triggerName);
        oprot.writeFieldEnd();
      }
      if (struct.triggerExpression != null) {
        if (struct.isSetTriggerExpression()) {
          oprot.writeFieldBegin(TRIGGER_EXPRESSION_FIELD_DESC);
          oprot.writeString(struct.triggerExpression);
          oprot.writeFieldEnd();
        }
      }
      if (struct.actionExpression != null) {
        if (struct.isSetActionExpression()) {
          oprot.writeFieldBegin(ACTION_EXPRESSION_FIELD_DESC);
          oprot.writeString(struct.actionExpression);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsInUnmanaged()) {
        oprot.writeFieldBegin(IS_IN_UNMANAGED_FIELD_DESC);
        oprot.writeBool(struct.isInUnmanaged);
        oprot.writeFieldEnd();
      }
      if (struct.ns != null) {
        if (struct.isSetNs()) {
          oprot.writeFieldBegin(NS_FIELD_DESC);
          oprot.writeString(struct.ns);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WMTriggerTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WMTriggerTupleScheme getScheme() {
      return new WMTriggerTupleScheme();
    }
  }

  private static class WMTriggerTupleScheme extends org.apache.thrift.scheme.TupleScheme<WMTrigger> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WMTrigger struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.resourcePlanName);
      oprot.writeString(struct.triggerName);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetTriggerExpression()) {
        optionals.set(0);
      }
      if (struct.isSetActionExpression()) {
        optionals.set(1);
      }
      if (struct.isSetIsInUnmanaged()) {
        optionals.set(2);
      }
      if (struct.isSetNs()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetTriggerExpression()) {
        oprot.writeString(struct.triggerExpression);
      }
      if (struct.isSetActionExpression()) {
        oprot.writeString(struct.actionExpression);
      }
      if (struct.isSetIsInUnmanaged()) {
        oprot.writeBool(struct.isInUnmanaged);
      }
      if (struct.isSetNs()) {
        oprot.writeString(struct.ns);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WMTrigger struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.resourcePlanName = iprot.readString();
      struct.setResourcePlanNameIsSet(true);
      struct.triggerName = iprot.readString();
      struct.setTriggerNameIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.triggerExpression = iprot.readString();
        struct.setTriggerExpressionIsSet(true);
      }
      if (incoming.get(1)) {
        struct.actionExpression = iprot.readString();
        struct.setActionExpressionIsSet(true);
      }
      if (incoming.get(2)) {
        struct.isInUnmanaged = iprot.readBool();
        struct.setIsInUnmanagedIsSet(true);
      }
      if (incoming.get(3)) {
        struct.ns = iprot.readString();
        struct.setNsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

