// automatically generated by the FlatBuffers compiler, do not modify

package org.apache.hadoop.hive.metastore.fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FbFileBlock extends Table {
  public static FbFileBlock getRootAsFbFileBlock(ByteBuffer _bb) { return getRootAsFbFileBlock(_bb, new FbFileBlock()); }
  public static FbFileBlock getRootAsFbFileBlock(ByteBuffer _bb, FbFileBlock obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FbFileBlock __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long offset() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long length() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : -1L; }
  public String hosts(int j) { int o = __offset(8); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int hostsLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }

  public static int createFbFileBlock(FlatBufferBuilder builder,
      long offset,
      long length,
      int hostsOffset) {
    builder.startObject(3);
    FbFileBlock.addLength(builder, length);
    FbFileBlock.addOffset(builder, offset);
    FbFileBlock.addHosts(builder, hostsOffset);
    return FbFileBlock.endFbFileBlock(builder);
  }

  public static void startFbFileBlock(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addOffset(FlatBufferBuilder builder, long offset) { builder.addLong(0, offset, 0L); }
  public static void addLength(FlatBufferBuilder builder, long length) { builder.addLong(1, length, -1L); }
  public static void addHosts(FlatBufferBuilder builder, int hostsOffset) { builder.addOffset(2, hostsOffset, 0); }
  public static int createHostsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startHostsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endFbFileBlock(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

