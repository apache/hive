This file contains information for developers and testers.

Testing metastore installation and upgrade against databases beyond Derby:
There are integration tests for testing installation and upgrade of the
metastore on MySQL (actually MariaDB is used), Oracle, Postgres, and SQLServer.
These tests are not run by default because they take several minutes each and
they require the developer to download the JDBC driver for Oracle.
They are run in the integration-test phase.

Each ITest runs two tests, one that installs the latest version of the
database and one that installs the latest version minus one and then upgrades
the database.

To run one of the tests you will need to explicitly turn on integration testing,
in the Oracle case specify the location of the JDBC driver, and optionally
specify which test you want to run.  To run all of the tests do:

mvn verify -Ditest.jdbc.jars=_oracle_jar_path -DskipITests=false -Dtest=nosuch

To run just one test, do

mvn verify -DskipITests=false -Dit.test=ITestMysql -Dtest=nosuch

You can download the Oracle driver at 
http://www.oracle.com/technetwork/database/features/jdbc/index-091264.html

If you wish to use one of these containers to run your own tests against a
non-Derby version of the metastore, you can do that as well.  You must specify
that only the install test be run (change -Dit.test=ITestMysql in the example
above to -Dit.test=ITestMysql#install) and tell it to leave the docker container
running by adding -Dmetastore.itest.no.stop.container=true.  You will then need
to stop and remove the container yourself once you have finished.  The container
is recreated for each run of the test, so you cannot rerun the test until you
have stopped and removed it.  You can construct the connection values to put in
metastore-site.xml from the information in the appropriate ITest file (e.g.,
from ITestMysql you can find that the JDBC URL is
"jdbc:mysql://localhost:3306/hivedb", the JDBC driver is
"org.mariadb.jdbc.Driver", and the password is "hivepassword".  The user is
always "hiveuser".

