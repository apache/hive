<?php
namespace org\apache\hadoop\hive\serde;

/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

final class Constant extends \Thrift\Type\TConstant
{
    static protected $SERIALIZATION_LIB;
    static protected $SERIALIZATION_CLASS;
    static protected $SERIALIZATION_FORMAT;
    static protected $SERIALIZATION_DDL;
    static protected $SERIALIZATION_NULL_FORMAT;
    static protected $SERIALIZATION_ESCAPE_CRLF;
    static protected $SERIALIZATION_LAST_COLUMN_TAKES_REST;
    static protected $SERIALIZATION_SORT_ORDER;
    static protected $SERIALIZATION_NULL_SORT_ORDER;
    static protected $SERIALIZATION_USE_JSON_OBJECTS;
    static protected $SERIALIZATION_ENCODING;
    static protected $FIELD_DELIM;
    static protected $COLLECTION_DELIM;
    static protected $LINE_DELIM;
    static protected $MAPKEY_DELIM;
    static protected $QUOTE_CHAR;
    static protected $ESCAPE_CHAR;
    static protected $HEADER_COUNT;
    static protected $FOOTER_COUNT;
    static protected $VOID_TYPE_NAME;
    static protected $BOOLEAN_TYPE_NAME;
    static protected $TINYINT_TYPE_NAME;
    static protected $SMALLINT_TYPE_NAME;
    static protected $INT_TYPE_NAME;
    static protected $BIGINT_TYPE_NAME;
    static protected $FLOAT_TYPE_NAME;
    static protected $DOUBLE_TYPE_NAME;
    static protected $STRING_TYPE_NAME;
    static protected $CHAR_TYPE_NAME;
    static protected $VARCHAR_TYPE_NAME;
    static protected $DATE_TYPE_NAME;
    static protected $DATETIME_TYPE_NAME;
    static protected $TIMESTAMP_TYPE_NAME;
    static protected $DECIMAL_TYPE_NAME;
    static protected $BINARY_TYPE_NAME;
    static protected $INTERVAL_YEAR_MONTH_TYPE_NAME;
    static protected $INTERVAL_DAY_TIME_TYPE_NAME;
    static protected $TIMESTAMPLOCALTZ_TYPE_NAME;
    static protected $LIST_TYPE_NAME;
    static protected $MAP_TYPE_NAME;
    static protected $STRUCT_TYPE_NAME;
    static protected $UNION_TYPE_NAME;
    static protected $LIST_COLUMNS;
    static protected $LIST_COLUMN_TYPES;
    static protected $LIST_PARTITION_COLUMNS;
    static protected $LIST_PARTITION_COLUMN_TYPES;
    static protected $TIMESTAMP_FORMATS;
    static protected $COLUMN_NAME_DELIMITER;
    static protected $PrimitiveTypes;
    static protected $CollectionTypes;
    static protected $IntegralTypes;

    protected static function init_SERIALIZATION_LIB()
    {
        return "serialization.lib";
    }

    protected static function init_SERIALIZATION_CLASS()
    {
        return "serialization.class";
    }

    protected static function init_SERIALIZATION_FORMAT()
    {
        return "serialization.format";
    }

    protected static function init_SERIALIZATION_DDL()
    {
        return "serialization.ddl";
    }

    protected static function init_SERIALIZATION_NULL_FORMAT()
    {
        return "serialization.null.format";
    }

    protected static function init_SERIALIZATION_ESCAPE_CRLF()
    {
        return "serialization.escape.crlf";
    }

    protected static function init_SERIALIZATION_LAST_COLUMN_TAKES_REST()
    {
        return "serialization.last.column.takes.rest";
    }

    protected static function init_SERIALIZATION_SORT_ORDER()
    {
        return "serialization.sort.order";
    }

    protected static function init_SERIALIZATION_NULL_SORT_ORDER()
    {
        return "serialization.sort.order.null";
    }

    protected static function init_SERIALIZATION_USE_JSON_OBJECTS()
    {
        return "serialization.use.json.object";
    }

    protected static function init_SERIALIZATION_ENCODING()
    {
        return "serialization.encoding";
    }

    protected static function init_FIELD_DELIM()
    {
        return "field.delim";
    }

    protected static function init_COLLECTION_DELIM()
    {
        return "collection.delim";
    }

    protected static function init_LINE_DELIM()
    {
        return "line.delim";
    }

    protected static function init_MAPKEY_DELIM()
    {
        return "mapkey.delim";
    }

    protected static function init_QUOTE_CHAR()
    {
        return "quote.delim";
    }

    protected static function init_ESCAPE_CHAR()
    {
        return "escape.delim";
    }

    protected static function init_HEADER_COUNT()
    {
        return "skip.header.line.count";
    }

    protected static function init_FOOTER_COUNT()
    {
        return "skip.footer.line.count";
    }

    protected static function init_VOID_TYPE_NAME()
    {
        return "void";
    }

    protected static function init_BOOLEAN_TYPE_NAME()
    {
        return "boolean";
    }

    protected static function init_TINYINT_TYPE_NAME()
    {
        return "tinyint";
    }

    protected static function init_SMALLINT_TYPE_NAME()
    {
        return "smallint";
    }

    protected static function init_INT_TYPE_NAME()
    {
        return "int";
    }

    protected static function init_BIGINT_TYPE_NAME()
    {
        return "bigint";
    }

    protected static function init_FLOAT_TYPE_NAME()
    {
        return "float";
    }

    protected static function init_DOUBLE_TYPE_NAME()
    {
        return "double";
    }

    protected static function init_STRING_TYPE_NAME()
    {
        return "string";
    }

    protected static function init_CHAR_TYPE_NAME()
    {
        return "char";
    }

    protected static function init_VARCHAR_TYPE_NAME()
    {
        return "varchar";
    }

    protected static function init_DATE_TYPE_NAME()
    {
        return "date";
    }

    protected static function init_DATETIME_TYPE_NAME()
    {
        return "datetime";
    }

    protected static function init_TIMESTAMP_TYPE_NAME()
    {
        return "timestamp";
    }

    protected static function init_DECIMAL_TYPE_NAME()
    {
        return "decimal";
    }

    protected static function init_BINARY_TYPE_NAME()
    {
        return "binary";
    }

    protected static function init_INTERVAL_YEAR_MONTH_TYPE_NAME()
    {
        return "interval_year_month";
    }

    protected static function init_INTERVAL_DAY_TIME_TYPE_NAME()
    {
        return "interval_day_time";
    }

    protected static function init_TIMESTAMPLOCALTZ_TYPE_NAME()
    {
        return "timestamp with local time zone";
    }

    protected static function init_LIST_TYPE_NAME()
    {
        return "array";
    }

    protected static function init_MAP_TYPE_NAME()
    {
        return "map";
    }

    protected static function init_STRUCT_TYPE_NAME()
    {
        return "struct";
    }

    protected static function init_UNION_TYPE_NAME()
    {
        return "uniontype";
    }

    protected static function init_LIST_COLUMNS()
    {
        return "columns";
    }

    protected static function init_LIST_COLUMN_TYPES()
    {
        return "columns.types";
    }

    protected static function init_LIST_PARTITION_COLUMNS()
    {
        return "partition.columns";
    }

    protected static function init_LIST_PARTITION_COLUMN_TYPES()
    {
        return "partition.columns.types";
    }

    protected static function init_TIMESTAMP_FORMATS()
    {
        return "timestamp.formats";
    }

    protected static function init_COLUMN_NAME_DELIMITER()
    {
        return "column.name.delimiter";
    }

    protected static function init_PrimitiveTypes()
    {
        return array(
            "void" => true,
            "boolean" => true,
            "tinyint" => true,
            "smallint" => true,
            "int" => true,
            "bigint" => true,
            "float" => true,
            "double" => true,
            "string" => true,
            "varchar" => true,
            "char" => true,
            "date" => true,
            "datetime" => true,
            "timestamp" => true,
            "interval_year_month" => true,
            "interval_day_time" => true,
            "decimal" => true,
            "binary" => true,
            "timestamp with local time zone" => true,
        );
    }

    protected static function init_CollectionTypes()
    {
        return array(
            "array" => true,
            "map" => true,
        );
    }

    protected static function init_IntegralTypes()
    {
        return array(
            "tinyint" => true,
            "smallint" => true,
            "int" => true,
            "bigint" => true,
        );
    }
}
