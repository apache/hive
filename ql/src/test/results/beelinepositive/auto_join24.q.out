Saving all output to "!!{outputDirectory}!!/auto_join24.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/auto_join24.q
>>>  set hive.auto.convert.join = true;
No rows affected 
>>>  
>>>  create table tst1(key STRING, cnt INT);
No rows affected 
>>>  
>>>  INSERT OVERWRITE TABLE tst1 
SELECT a.key, count(1) FROM src a group by a.key;
'_col0','_col1'
No rows selected 
>>>  
>>>  explain 
SELECT sum(a.cnt)  FROM tst1 a JOIN tst1 b ON a.key = b.key;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME tst1) a) (TOK_TABREF (TOK_TABNAME tst1) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL a) cnt))))))'
''
'STAGE DEPENDENCIES:'
'  Stage-6 is a root stage , consists of Stage-7, Stage-8, Stage-1'
'  Stage-7 has a backup stage: Stage-1'
'  Stage-4 depends on stages: Stage-7'
'  Stage-2 depends on stages: Stage-1, Stage-4, Stage-5'
'  Stage-8 has a backup stage: Stage-1'
'  Stage-5 depends on stages: Stage-8'
'  Stage-1'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-6'
'    Conditional Operator'
''
'  Stage: Stage-7'
'    Map Reduce Local Work'
'      Alias -> Map Local Tables:'
'        b '
'          Fetch Operator'
'            limit: -1'
'      Alias -> Map Local Operator Tree:'
'        b '
'          TableScan'
'            alias: b'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {cnt}'
'                1 '
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'              Position of Big Table: 0'
''
'  Stage: Stage-4'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        a '
'          TableScan'
'            alias: a'
'            Map Join Operator'
'              condition map:'
'                   Inner Join 0 to 1'
'              condition expressions:'
'                0 {cnt}'
'                1 '
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'              outputColumnNames: _col1'
'              Position of Big Table: 0'
'              Select Operator'
'                expressions:'
'                      expr: _col1'
'                      type: int'
'                outputColumnNames: _col1'
'                Group By Operator'
'                  aggregations:'
'                        expr: sum(_col1)'
'                  bucketGroup: false'
'                  mode: hash'
'                  outputColumnNames: _col0'
'                  File Output Operator'
'                    compressed: false'
'                    GlobalTableId: 0'
'                    table:'
'                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
'      Local Work:'
'        Map Reduce Local Work'
''
'  Stage: Stage-2'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        file:!!{hive.exec.scratchdir}!! '
'            Reduce Output Operator'
'              sort order: '
'              tag: -1'
'              value expressions:'
'                    expr: _col0'
'                    type: bigint'
'      Reduce Operator Tree:'
'        Group By Operator'
'          aggregations:'
'                expr: sum(VALUE._col0)'
'          bucketGroup: false'
'          mode: mergepartial'
'          outputColumnNames: _col0'
'          Select Operator'
'            expressions:'
'                  expr: _col0'
'                  type: bigint'
'            outputColumnNames: _col0'
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-8'
'    Map Reduce Local Work'
'      Alias -> Map Local Tables:'
'        a '
'          Fetch Operator'
'            limit: -1'
'      Alias -> Map Local Operator Tree:'
'        a '
'          TableScan'
'            alias: a'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {cnt}'
'                1 '
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'              Position of Big Table: 1'
''
'  Stage: Stage-5'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        b '
'          TableScan'
'            alias: b'
'            Map Join Operator'
'              condition map:'
'                   Inner Join 0 to 1'
'              condition expressions:'
'                0 {cnt}'
'                1 '
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'              outputColumnNames: _col1'
'              Position of Big Table: 1'
'              Select Operator'
'                expressions:'
'                      expr: _col1'
'                      type: int'
'                outputColumnNames: _col1'
'                Group By Operator'
'                  aggregations:'
'                        expr: sum(_col1)'
'                  bucketGroup: false'
'                  mode: hash'
'                  outputColumnNames: _col0'
'                  File Output Operator'
'                    compressed: false'
'                    GlobalTableId: 0'
'                    table:'
'                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
'      Local Work:'
'        Map Reduce Local Work'
''
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        a '
'          TableScan'
'            alias: a'
'            Reduce Output Operator'
'              key expressions:'
'                    expr: key'
'                    type: string'
'              sort order: +'
'              Map-reduce partition columns:'
'                    expr: key'
'                    type: string'
'              tag: 0'
'              value expressions:'
'                    expr: cnt'
'                    type: int'
'        b '
'          TableScan'
'            alias: b'
'            Reduce Output Operator'
'              key expressions:'
'                    expr: key'
'                    type: string'
'              sort order: +'
'              Map-reduce partition columns:'
'                    expr: key'
'                    type: string'
'              tag: 1'
'      Reduce Operator Tree:'
'        Join Operator'
'          condition map:'
'               Inner Join 0 to 1'
'          condition expressions:'
'            0 {VALUE._col1}'
'            1 '
'          handleSkewJoin: false'
'          outputColumnNames: _col1'
'          Select Operator'
'            expressions:'
'                  expr: _col1'
'                  type: int'
'            outputColumnNames: _col1'
'            Group By Operator'
'              aggregations:'
'                    expr: sum(_col1)'
'              bucketGroup: false'
'              mode: hash'
'              outputColumnNames: _col0'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 0'
'                table:'
'                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: -1'
''
''
224 rows selected 
>>>  
>>>  SELECT sum(a.cnt)  FROM tst1 a JOIN tst1 b ON a.key = b.key;
'_c0'
'500'
1 row selected 
>>>  
>>>  
>>>  !record
