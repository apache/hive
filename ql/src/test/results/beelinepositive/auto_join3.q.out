Saving all output to "!!{outputDirectory}!!/auto_join3.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/auto_join3.q
>>>  set hive.auto.convert.join = true;
No rows affected 
>>>  
>>>  CREATE TABLE dest1(key INT, value STRING) STORED AS TEXTFILE;
No rows affected 
>>>  
>>>  explain 
FROM src src1 JOIN src src2 ON (src1.key = src2.key) JOIN src src3 ON (src1.key = src3.key) 
INSERT OVERWRITE TABLE dest1 SELECT src1.key, src3.value;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_JOIN (TOK_TABREF (TOK_TABNAME src) src1) (TOK_TABREF (TOK_TABNAME src) src2) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key))) (TOK_TABREF (TOK_TABNAME src) src3) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src3) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) value)))))'
''
'STAGE DEPENDENCIES:'
'  Stage-8 is a root stage , consists of Stage-9, Stage-10, Stage-11, Stage-1'
'  Stage-9 has a backup stage: Stage-1'
'  Stage-5 depends on stages: Stage-9'
'  Stage-0 depends on stages: Stage-1, Stage-5, Stage-6, Stage-7'
'  Stage-2 depends on stages: Stage-0'
'  Stage-10 has a backup stage: Stage-1'
'  Stage-6 depends on stages: Stage-10'
'  Stage-11 has a backup stage: Stage-1'
'  Stage-7 depends on stages: Stage-11'
'  Stage-1'
''
'STAGE PLANS:'
'  Stage: Stage-8'
'    Conditional Operator'
''
'  Stage: Stage-9'
'    Map Reduce Local Work'
'      Alias -> Map Local Tables:'
'        src2 '
'          Fetch Operator'
'            limit: -1'
'        src3 '
'          Fetch Operator'
'            limit: -1'
'      Alias -> Map Local Operator Tree:'
'        src2 '
'          TableScan'
'            alias: src2'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {key}'
'                1 '
'                2 {value}'
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'                2 [Column[key]]'
'              Position of Big Table: 0'
'        src3 '
'          TableScan'
'            alias: src3'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {key}'
'                1 '
'                2 {value}'
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'                2 [Column[key]]'
'              Position of Big Table: 0'
''
'  Stage: Stage-5'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src1 '
'          TableScan'
'            alias: src1'
'            Map Join Operator'
'              condition map:'
'                   Inner Join 0 to 1'
'                   Inner Join 0 to 2'
'              condition expressions:'
'                0 {key}'
'                1 '
'                2 {value}'
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'                2 [Column[key]]'
'              outputColumnNames: _col0, _col9'
'              Position of Big Table: 0'
'              Select Operator'
'                expressions:'
'                      expr: _col0'
'                      type: string'
'                      expr: _col9'
'                      type: string'
'                outputColumnNames: _col0, _col1'
'                Select Operator'
'                  expressions:'
'                        expr: UDFToInteger(_col0)'
'                        type: int'
'                        expr: _col1'
'                        type: string'
'                  outputColumnNames: _col0, _col1'
'                  File Output Operator'
'                    compressed: false'
'                    GlobalTableId: 1'
'                    table:'
'                        input format: org.apache.hadoop.mapred.TextInputFormat'
'                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                        name: auto_join3.dest1'
'      Local Work:'
'        Map Reduce Local Work'
''
'  Stage: Stage-0'
'    Move Operator'
'      tables:'
'          replace: true'
'          table:'
'              input format: org.apache.hadoop.mapred.TextInputFormat'
'              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'              name: auto_join3.dest1'
''
'  Stage: Stage-2'
'    Stats-Aggr Operator'
''
'  Stage: Stage-10'
'    Map Reduce Local Work'
'      Alias -> Map Local Tables:'
'        src1 '
'          Fetch Operator'
'            limit: -1'
'        src3 '
'          Fetch Operator'
'            limit: -1'
'      Alias -> Map Local Operator Tree:'
'        src1 '
'          TableScan'
'            alias: src1'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {key}'
'                1 '
'                2 {value}'
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'                2 [Column[key]]'
'              Position of Big Table: 1'
'        src3 '
'          TableScan'
'            alias: src3'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {key}'
'                1 '
'                2 {value}'
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'                2 [Column[key]]'
'              Position of Big Table: 1'
''
'  Stage: Stage-6'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src2 '
'          TableScan'
'            alias: src2'
'            Map Join Operator'
'              condition map:'
'                   Inner Join 0 to 1'
'                   Inner Join 0 to 2'
'              condition expressions:'
'                0 {key}'
'                1 '
'                2 {value}'
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'                2 [Column[key]]'
'              outputColumnNames: _col0, _col9'
'              Position of Big Table: 1'
'              Select Operator'
'                expressions:'
'                      expr: _col0'
'                      type: string'
'                      expr: _col9'
'                      type: string'
'                outputColumnNames: _col0, _col1'
'                Select Operator'
'                  expressions:'
'                        expr: UDFToInteger(_col0)'
'                        type: int'
'                        expr: _col1'
'                        type: string'
'                  outputColumnNames: _col0, _col1'
'                  File Output Operator'
'                    compressed: false'
'                    GlobalTableId: 1'
'                    table:'
'                        input format: org.apache.hadoop.mapred.TextInputFormat'
'                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                        name: auto_join3.dest1'
'      Local Work:'
'        Map Reduce Local Work'
''
'  Stage: Stage-11'
'    Map Reduce Local Work'
'      Alias -> Map Local Tables:'
'        src1 '
'          Fetch Operator'
'            limit: -1'
'        src2 '
'          Fetch Operator'
'            limit: -1'
'      Alias -> Map Local Operator Tree:'
'        src1 '
'          TableScan'
'            alias: src1'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {key}'
'                1 '
'                2 {value}'
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'                2 [Column[key]]'
'              Position of Big Table: 2'
'        src2 '
'          TableScan'
'            alias: src2'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {key}'
'                1 '
'                2 {value}'
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'                2 [Column[key]]'
'              Position of Big Table: 2'
''
'  Stage: Stage-7'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src3 '
'          TableScan'
'            alias: src3'
'            Map Join Operator'
'              condition map:'
'                   Inner Join 0 to 1'
'                   Inner Join 0 to 2'
'              condition expressions:'
'                0 {key}'
'                1 '
'                2 {value}'
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'                2 [Column[key]]'
'              outputColumnNames: _col0, _col9'
'              Position of Big Table: 2'
'              Select Operator'
'                expressions:'
'                      expr: _col0'
'                      type: string'
'                      expr: _col9'
'                      type: string'
'                outputColumnNames: _col0, _col1'
'                Select Operator'
'                  expressions:'
'                        expr: UDFToInteger(_col0)'
'                        type: int'
'                        expr: _col1'
'                        type: string'
'                  outputColumnNames: _col0, _col1'
'                  File Output Operator'
'                    compressed: false'
'                    GlobalTableId: 1'
'                    table:'
'                        input format: org.apache.hadoop.mapred.TextInputFormat'
'                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                        name: auto_join3.dest1'
'      Local Work:'
'        Map Reduce Local Work'
''
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src1 '
'          TableScan'
'            alias: src1'
'            Reduce Output Operator'
'              key expressions:'
'                    expr: key'
'                    type: string'
'              sort order: +'
'              Map-reduce partition columns:'
'                    expr: key'
'                    type: string'
'              tag: 0'
'              value expressions:'
'                    expr: key'
'                    type: string'
'        src2 '
'          TableScan'
'            alias: src2'
'            Reduce Output Operator'
'              key expressions:'
'                    expr: key'
'                    type: string'
'              sort order: +'
'              Map-reduce partition columns:'
'                    expr: key'
'                    type: string'
'              tag: 1'
'        src3 '
'          TableScan'
'            alias: src3'
'            Reduce Output Operator'
'              key expressions:'
'                    expr: key'
'                    type: string'
'              sort order: +'
'              Map-reduce partition columns:'
'                    expr: key'
'                    type: string'
'              tag: 2'
'              value expressions:'
'                    expr: value'
'                    type: string'
'      Reduce Operator Tree:'
'        Join Operator'
'          condition map:'
'               Inner Join 0 to 1'
'               Inner Join 0 to 2'
'          condition expressions:'
'            0 {VALUE._col0}'
'            1 '
'            2 {VALUE._col1}'
'          handleSkewJoin: false'
'          outputColumnNames: _col0, _col9'
'          Select Operator'
'            expressions:'
'                  expr: _col0'
'                  type: string'
'                  expr: _col9'
'                  type: string'
'            outputColumnNames: _col0, _col1'
'            Select Operator'
'              expressions:'
'                    expr: UDFToInteger(_col0)'
'                    type: int'
'                    expr: _col1'
'                    type: string'
'              outputColumnNames: _col0, _col1'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 1'
'                table:'
'                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                    name: auto_join3.dest1'
''
''
367 rows selected 
>>>  
>>>  FROM src src1 JOIN src src2 ON (src1.key = src2.key) JOIN src src3 ON (src1.key = src3.key) 
INSERT OVERWRITE TABLE dest1 SELECT src1.key, src3.value;
'_col0','_col1'
No rows selected 
>>>  
>>>  SELECT sum(hash(dest1.key,dest1.value)) FROM dest1;
'_c0'
'344360994461'
1 row selected 
>>>  !record
