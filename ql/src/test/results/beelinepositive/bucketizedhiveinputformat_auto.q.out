Saving all output to "!!{outputDirectory}!!/bucketizedhiveinputformat_auto.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/bucketizedhiveinputformat_auto.q
>>>  CREATE TABLE bucket_small (key string, value string) partitioned by (ds string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE;
No rows affected 
>>>  load data local inpath '../data/files/srcsortbucket1outof4.txt' INTO TABLE bucket_small partition(ds='2008-04-08');
No rows affected 
>>>  load data local inpath '../data/files/srcsortbucket2outof4.txt' INTO TABLE bucket_small partition(ds='2008-04-08');
No rows affected 
>>>  
>>>  CREATE TABLE bucket_big (key string, value string) partitioned by (ds string) CLUSTERED BY (key) SORTED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE;
No rows affected 
>>>  load data local inpath '../data/files/srcsortbucket1outof4.txt' INTO TABLE bucket_big partition(ds='2008-04-08');
No rows affected 
>>>  load data local inpath '../data/files/srcsortbucket2outof4.txt' INTO TABLE bucket_big partition(ds='2008-04-08');
No rows affected 
>>>  load data local inpath '../data/files/srcsortbucket3outof4.txt' INTO TABLE bucket_big partition(ds='2008-04-08');
No rows affected 
>>>  load data local inpath '../data/files/srcsortbucket4outof4.txt' INTO TABLE bucket_big partition(ds='2008-04-08');
No rows affected 
>>>  
>>>  load data local inpath '../data/files/srcsortbucket1outof4.txt' INTO TABLE bucket_big partition(ds='2008-04-09');
No rows affected 
>>>  load data local inpath '../data/files/srcsortbucket2outof4.txt' INTO TABLE bucket_big partition(ds='2008-04-09');
No rows affected 
>>>  load data local inpath '../data/files/srcsortbucket3outof4.txt' INTO TABLE bucket_big partition(ds='2008-04-09');
No rows affected 
>>>  load data local inpath '../data/files/srcsortbucket4outof4.txt' INTO TABLE bucket_big partition(ds='2008-04-09');
No rows affected 
>>>  
>>>  set hive.optimize.bucketmapjoin = true;
No rows affected 
>>>  select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key;
'_c1'
'928'
1 row selected 
>>>  
>>>  set hive.optimize.bucketmapjoin.sortedmerge = true;
No rows affected 
>>>  select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key;
'_c1'
'928'
1 row selected 
>>>  
>>>  set hive.input.format = org.apache.hadoop.hive.ql.io.HiveInputFormat;
No rows affected 
>>>  select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key;
'_c1'
'928'
1 row selected 
>>>  !record
