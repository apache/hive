Saving all output to "!!{outputDirectory}!!/auto_join26.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/auto_join26.q
>>>  CREATE TABLE dest_j1(key INT, cnt INT);
No rows affected 
>>>  set hive.auto.convert.join = true;
No rows affected 
>>>  EXPLAIN 
INSERT OVERWRITE TABLE dest_j1 
SELECT x.key, count(1) FROM src1 x JOIN src y ON (x.key = y.key) group by x.key;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src1) x) (TOK_TABREF (TOK_TABNAME src) y) (= (. (TOK_TABLE_OR_COL x) key) (. (TOK_TABLE_OR_COL y) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest_j1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL x) key)) (TOK_SELEXPR (TOK_FUNCTION count 1))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL x) key))))'
''
'STAGE DEPENDENCIES:'
'  Stage-7 is a root stage , consists of Stage-8, Stage-9, Stage-1'
'  Stage-8 has a backup stage: Stage-1'
'  Stage-5 depends on stages: Stage-8'
'  Stage-2 depends on stages: Stage-1, Stage-5, Stage-6'
'  Stage-0 depends on stages: Stage-2'
'  Stage-3 depends on stages: Stage-0'
'  Stage-9 has a backup stage: Stage-1'
'  Stage-6 depends on stages: Stage-9'
'  Stage-1'
''
'STAGE PLANS:'
'  Stage: Stage-7'
'    Conditional Operator'
''
'  Stage: Stage-8'
'    Map Reduce Local Work'
'      Alias -> Map Local Tables:'
'        y '
'          Fetch Operator'
'            limit: -1'
'      Alias -> Map Local Operator Tree:'
'        y '
'          TableScan'
'            alias: y'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {key}'
'                1 '
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'              Position of Big Table: 0'
''
'  Stage: Stage-5'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        x '
'          TableScan'
'            alias: x'
'            Map Join Operator'
'              condition map:'
'                   Inner Join 0 to 1'
'              condition expressions:'
'                0 {key}'
'                1 '
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'              outputColumnNames: _col0'
'              Position of Big Table: 0'
'              Select Operator'
'                expressions:'
'                      expr: _col0'
'                      type: string'
'                outputColumnNames: _col0'
'                Group By Operator'
'                  aggregations:'
'                        expr: count(1)'
'                  bucketGroup: false'
'                  keys:'
'                        expr: _col0'
'                        type: string'
'                  mode: hash'
'                  outputColumnNames: _col0, _col1'
'                  File Output Operator'
'                    compressed: false'
'                    GlobalTableId: 0'
'                    table:'
'                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
'      Local Work:'
'        Map Reduce Local Work'
''
'  Stage: Stage-2'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        file:!!{hive.exec.scratchdir}!! '
'            Reduce Output Operator'
'              key expressions:'
'                    expr: _col0'
'                    type: string'
'              sort order: +'
'              Map-reduce partition columns:'
'                    expr: _col0'
'                    type: string'
'              tag: -1'
'              value expressions:'
'                    expr: _col1'
'                    type: bigint'
'      Reduce Operator Tree:'
'        Group By Operator'
'          aggregations:'
'                expr: count(VALUE._col0)'
'          bucketGroup: false'
'          keys:'
'                expr: KEY._col0'
'                type: string'
'          mode: mergepartial'
'          outputColumnNames: _col0, _col1'
'          Select Operator'
'            expressions:'
'                  expr: _col0'
'                  type: string'
'                  expr: _col1'
'                  type: bigint'
'            outputColumnNames: _col0, _col1'
'            Select Operator'
'              expressions:'
'                    expr: UDFToInteger(_col0)'
'                    type: int'
'                    expr: UDFToInteger(_col1)'
'                    type: int'
'              outputColumnNames: _col0, _col1'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 1'
'                table:'
'                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                    name: auto_join26.dest_j1'
''
'  Stage: Stage-0'
'    Move Operator'
'      tables:'
'          replace: true'
'          table:'
'              input format: org.apache.hadoop.mapred.TextInputFormat'
'              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'              name: auto_join26.dest_j1'
''
'  Stage: Stage-3'
'    Stats-Aggr Operator'
''
'  Stage: Stage-9'
'    Map Reduce Local Work'
'      Alias -> Map Local Tables:'
'        x '
'          Fetch Operator'
'            limit: -1'
'      Alias -> Map Local Operator Tree:'
'        x '
'          TableScan'
'            alias: x'
'            HashTable Sink Operator'
'              condition expressions:'
'                0 {key}'
'                1 '
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'              Position of Big Table: 1'
''
'  Stage: Stage-6'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        y '
'          TableScan'
'            alias: y'
'            Map Join Operator'
'              condition map:'
'                   Inner Join 0 to 1'
'              condition expressions:'
'                0 {key}'
'                1 '
'              handleSkewJoin: false'
'              keys:'
'                0 [Column[key]]'
'                1 [Column[key]]'
'              outputColumnNames: _col0'
'              Position of Big Table: 1'
'              Select Operator'
'                expressions:'
'                      expr: _col0'
'                      type: string'
'                outputColumnNames: _col0'
'                Group By Operator'
'                  aggregations:'
'                        expr: count(1)'
'                  bucketGroup: false'
'                  keys:'
'                        expr: _col0'
'                        type: string'
'                  mode: hash'
'                  outputColumnNames: _col0, _col1'
'                  File Output Operator'
'                    compressed: false'
'                    GlobalTableId: 0'
'                    table:'
'                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
'      Local Work:'
'        Map Reduce Local Work'
''
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        x '
'          TableScan'
'            alias: x'
'            Reduce Output Operator'
'              key expressions:'
'                    expr: key'
'                    type: string'
'              sort order: +'
'              Map-reduce partition columns:'
'                    expr: key'
'                    type: string'
'              tag: 0'
'              value expressions:'
'                    expr: key'
'                    type: string'
'        y '
'          TableScan'
'            alias: y'
'            Reduce Output Operator'
'              key expressions:'
'                    expr: key'
'                    type: string'
'              sort order: +'
'              Map-reduce partition columns:'
'                    expr: key'
'                    type: string'
'              tag: 1'
'      Reduce Operator Tree:'
'        Join Operator'
'          condition map:'
'               Inner Join 0 to 1'
'          condition expressions:'
'            0 {VALUE._col0}'
'            1 '
'          handleSkewJoin: false'
'          outputColumnNames: _col0'
'          Select Operator'
'            expressions:'
'                  expr: _col0'
'                  type: string'
'            outputColumnNames: _col0'
'            Group By Operator'
'              aggregations:'
'                    expr: count(1)'
'              bucketGroup: false'
'              keys:'
'                    expr: _col0'
'                    type: string'
'              mode: hash'
'              outputColumnNames: _col0, _col1'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 0'
'                table:'
'                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
''
''
263 rows selected 
>>>  
>>>  INSERT OVERWRITE TABLE dest_j1 
SELECT  x.key, count(1) FROM src1 x JOIN src y ON (x.key = y.key) group by x.key;
'_col0','_col1'
No rows selected 
>>>  
>>>  select * from dest_j1 x order by x.key;
'key','cnt'
'66','1'
'98','2'
'128','3'
'146','2'
'150','1'
'213','2'
'224','2'
'238','2'
'255','2'
'273','3'
'278','2'
'311','3'
'369','3'
'401','5'
'406','4'
15 rows selected 
>>>  !record
