Saving all output to "!!{outputDirectory}!!/nestedvirtual.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/nestedvirtual.q
>>>  CREATE TABLE pokes (foo INT, bar STRING);
No rows affected 
>>>  create table pokes2(foo INT, bar STRING);
No rows affected 
>>>  
>>>  create table jssarma_nilzma_bad as select a.val, a.filename, a.offset from (select hash(foo) as val, INPUT__FILE__NAME as filename, BLOCK__OFFSET__INSIDE__FILE as  offset from pokes) a join pokes2 b on (a.val = b.foo);
'val','filename','offset'
No rows selected 
>>>  
>>>  drop table jssarma_nilzma_bad;
No rows affected 
>>>  
>>>  drop table pokes;
No rows affected 
>>>  drop table pokes2;
No rows affected 
>>>  CREATE TABLE pokes (foo INT, bar STRING);
No rows affected 
>>>  create table pokes2(foo INT, bar STRING);
No rows affected 
>>>  
>>>  create table jssarma_nilzma_bad as select a.val, a.filename, a.offset from (select hash(foo) as val, INPUT__FILE__NAME as filename, BLOCK__OFFSET__INSIDE__FILE as  offset from pokes) a join pokes2 b on (a.val = b.foo);
'val','filename','offset'
No rows selected 
>>>  
>>>  drop table jssarma_nilzma_bad;
No rows affected 
>>>  
>>>  drop table pokes;
No rows affected 
>>>  drop table pokes2;
No rows affected 
>>>  CREATE TABLE pokes (foo INT, bar STRING);
No rows affected 
>>>  create table pokes2(foo INT, bar STRING);
No rows affected 
>>>  
>>>  create table jssarma_nilzma_bad as select a.val, a.filename, a.offset from (select hash(foo) as val, INPUT__FILE__NAME as filename, BLOCK__OFFSET__INSIDE__FILE as  offset from pokes) a join pokes2 b on (a.val = b.foo);
'val','filename','offset'
No rows selected 
>>>  
>>>  drop table jssarma_nilzma_bad;
No rows affected 
>>>  
>>>  drop table pokes;
No rows affected 
>>>  drop table pokes2;
No rows affected 
>>>  !record
