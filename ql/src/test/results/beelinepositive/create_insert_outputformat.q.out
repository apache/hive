Saving all output to "!!{outputDirectory}!!/create_insert_outputformat.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/create_insert_outputformat.q
>>>  
>>>  
>>>  CREATE TABLE table_test_output_format(key INT, value STRING) STORED AS 
INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat';
No rows affected 
>>>  
>>>  FROM src 
INSERT OVERWRITE TABLE table_test_output_format SELECT src.key, src.value LIMIT 10;
'_col0','_col1'
No rows selected 
>>>  describe table_test_output_format;
'col_name','data_type','comment'
'key','int',''
'value','string',''
2 rows selected 
>>>  
>>>  
>>>  
>>>  CREATE TABLE table_test_output_format_sequencefile(key INT, value STRING) STORED AS 
INPUTFORMAT 'org.apache.hadoop.mapred.SequenceFileInputFormat' 
OUTPUTFORMAT 'org.apache.hadoop.mapred.SequenceFileOutputFormat';
No rows affected 
>>>  
>>>  FROM src 
INSERT OVERWRITE TABLE table_test_output_format_sequencefile SELECT src.key, src.value LIMIT 10;
'_col0','_col1'
No rows selected 
>>>  describe table_test_output_format_sequencefile;
'col_name','data_type','comment'
'key','int',''
'value','string',''
2 rows selected 
>>>  
>>>  
>>>  
>>>  CREATE TABLE table_test_output_format_hivesequencefile(key INT, value STRING) STORED AS 
INPUTFORMAT 'org.apache.hadoop.mapred.SequenceFileInputFormat' 
OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat';
No rows affected 
>>>  
>>>  FROM src 
INSERT OVERWRITE TABLE table_test_output_format_hivesequencefile SELECT src.key, src.value LIMIT 10;
'_col0','_col1'
No rows selected 
>>>  describe table_test_output_format_hivesequencefile;
'col_name','data_type','comment'
'key','int',''
'value','string',''
2 rows selected 
>>>  
>>>  !record
