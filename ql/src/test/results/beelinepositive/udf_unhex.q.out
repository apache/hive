Saving all output to "!!{outputDirectory}!!/udf_unhex.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/udf_unhex.q
>>>  DESCRIBE FUNCTION unhex;
'tab_name'
'unhex(str) - Converts hexadecimal argument to string'
1 row selected 
>>>  DESCRIBE FUNCTION EXTENDED unhex;
'tab_name'
'unhex(str) - Converts hexadecimal argument to string'
'Performs the inverse operation of HEX(str). That is, it interprets'
'each pair of hexadecimal digits in the argument as a number and'
'converts it to the character represented by the number. The'
'resulting characters are returned as a binary string.'
''
'Example:'
'> SELECT UNHEX('4D7953514C') from src limit 1;'
''MySQL''
'> SELECT UNHEX(HEX('string')) from src limit 1;'
''string''
'> SELECT HEX(UNHEX('1267')) from src limit 1;'
''1267''
''
'The characters in the argument string must be legal hexadecimal'
'digits: '0' .. '9', 'A' .. 'F', 'a' .. 'f'. If UNHEX() encounters'
'any nonhexadecimal digits in the argument, it returns NULL. Also,'
'if there are an odd number of characters a leading 0 is appended.'
18 rows selected 
>>>  
>>>  -- Good inputs
>>>  
>>>  SELECT 
unhex('4D7953514C'), 
unhex('31323637'), 
unhex('61'), 
unhex('2D34'), 
unhex('') 
FROM src limit 1;
'_c0','_c1','_c2','_c3','_c4'
'MySQL','1267','a','-4',''
1 row selected 
>>>  
>>>  -- Bad inputs
>>>  SELECT 
unhex('MySQL'), 
unhex('G123'), 
unhex('\0') 
FROM src limit 1;
'_c0','_c1','_c2'
'','',''
1 row selected 
>>>  !record
