Saving all output to "!!{outputDirectory}!!/ppd_outer_join4.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/ppd_outer_join4.q
>>>  set hive.optimize.ppd=true;
No rows affected 
>>>  set hive.ppd.remove.duplicatefilters=false;
No rows affected 
>>>  
>>>  EXPLAIN 
FROM 
src a 
LEFT OUTER JOIN 
src b 
ON (a.key = b.key) 
RIGHT OUTER JOIN 
src c 
ON (a.key = c.key) 
SELECT a.key, a.value, b.key, b.value, c.key 
WHERE a.key > '10' AND a.key < '20' AND b.key > '15' AND b.key < '25' AND sqrt(c.key) <> 13 ;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_LEFTOUTERJOIN (TOK_TABREF (TOK_TABNAME src) a) (TOK_TABREF (TOK_TABNAME src) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key))) (TOK_TABREF (TOK_TABNAME src) c) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL c) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) value)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) value)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) key))) (TOK_WHERE (AND (AND (AND (AND (> (. (TOK_TABLE_OR_COL a) key) '10') (< (. (TOK_TABLE_OR_COL a) key) '20')) (> (. (TOK_TABLE_OR_COL b) key) '15')) (< (. (TOK_TABLE_OR_COL b) key) '25')) (<> (TOK_FUNCTION sqrt (. (TOK_TABLE_OR_COL c) key)) 13)))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        a '
'          TableScan'
'            alias: a'
'            Filter Operator'
'              predicate:'
'                  expr: (sqrt(key) <> 13)'
'                  type: boolean'
'              Reduce Output Operator'
'                key expressions:'
'                      expr: key'
'                      type: string'
'                sort order: +'
'                Map-reduce partition columns:'
'                      expr: key'
'                      type: string'
'                tag: 0'
'                value expressions:'
'                      expr: key'
'                      type: string'
'                      expr: value'
'                      type: string'
'        b '
'          TableScan'
'            alias: b'
'            Filter Operator'
'              predicate:'
'                  expr: (sqrt(key) <> 13)'
'                  type: boolean'
'              Reduce Output Operator'
'                key expressions:'
'                      expr: key'
'                      type: string'
'                sort order: +'
'                Map-reduce partition columns:'
'                      expr: key'
'                      type: string'
'                tag: 1'
'                value expressions:'
'                      expr: key'
'                      type: string'
'                      expr: value'
'                      type: string'
'        c '
'          TableScan'
'            alias: c'
'            Filter Operator'
'              predicate:'
'                  expr: (sqrt(key) <> 13)'
'                  type: boolean'
'              Reduce Output Operator'
'                key expressions:'
'                      expr: key'
'                      type: string'
'                sort order: +'
'                Map-reduce partition columns:'
'                      expr: key'
'                      type: string'
'                tag: 2'
'                value expressions:'
'                      expr: key'
'                      type: string'
'      Reduce Operator Tree:'
'        Join Operator'
'          condition map:'
'               Left Outer Join0 to 1'
'               Right Outer Join0 to 2'
'          condition expressions:'
'            0 {VALUE._col0} {VALUE._col1}'
'            1 {VALUE._col0} {VALUE._col1}'
'            2 {VALUE._col0}'
'          handleSkewJoin: false'
'          outputColumnNames: _col0, _col1, _col4, _col5, _col8'
'          Filter Operator'
'            predicate:'
'                expr: (((((_col0 > '10') and (_col0 < '20')) and (_col4 > '15')) and (_col4 < '25')) and (sqrt(_col8) <> 13))'
'                type: boolean'
'            Select Operator'
'              expressions:'
'                    expr: _col0'
'                    type: string'
'                    expr: _col1'
'                    type: string'
'                    expr: _col4'
'                    type: string'
'                    expr: _col5'
'                    type: string'
'                    expr: _col8'
'                    type: string'
'              outputColumnNames: _col0, _col1, _col2, _col3, _col4'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 0'
'                table:'
'                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: -1'
''
''
112 rows selected 
>>>  
>>>  FROM 
src a 
LEFT OUTER JOIN 
src b 
ON (a.key = b.key) 
RIGHT OUTER JOIN 
src c 
ON (a.key = c.key) 
SELECT a.key, a.value, b.key, b.value, c.key 
WHERE a.key > '10' AND a.key < '20' AND b.key > '15' AND b.key < '25' AND sqrt(c.key) <> 13 ;
'key','value','key','value','key'
'150','val_150','150','val_150','150'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'153','val_153','153','val_153','153'
'155','val_155','155','val_155','155'
'156','val_156','156','val_156','156'
'157','val_157','157','val_157','157'
'158','val_158','158','val_158','158'
'160','val_160','160','val_160','160'
'162','val_162','162','val_162','162'
'163','val_163','163','val_163','163'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'166','val_166','166','val_166','166'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'168','val_168','168','val_168','168'
'17','val_17','17','val_17','17'
'170','val_170','170','val_170','170'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'177','val_177','177','val_177','177'
'178','val_178','178','val_178','178'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'180','val_180','180','val_180','180'
'181','val_181','181','val_181','181'
'183','val_183','183','val_183','183'
'186','val_186','186','val_186','186'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'189','val_189','189','val_189','189'
'19','val_19','19','val_19','19'
'190','val_190','190','val_190','190'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'192','val_192','192','val_192','192'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'194','val_194','194','val_194','194'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'196','val_196','196','val_196','196'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'2','val_2','2','val_2','2'
230 rows selected 
>>>  
>>>  set hive.ppd.remove.duplicatefilters=true;
No rows affected 
>>>  
>>>  EXPLAIN 
FROM 
src a 
LEFT OUTER JOIN 
src b 
ON (a.key = b.key) 
RIGHT OUTER JOIN 
src c 
ON (a.key = c.key) 
SELECT a.key, a.value, b.key, b.value, c.key 
WHERE a.key > '10' AND a.key < '20' AND b.key > '15' AND b.key < '25' AND sqrt(c.key) <> 13 ;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_LEFTOUTERJOIN (TOK_TABREF (TOK_TABNAME src) a) (TOK_TABREF (TOK_TABNAME src) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key))) (TOK_TABREF (TOK_TABNAME src) c) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL c) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) value)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) value)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) key))) (TOK_WHERE (AND (AND (AND (AND (> (. (TOK_TABLE_OR_COL a) key) '10') (< (. (TOK_TABLE_OR_COL a) key) '20')) (> (. (TOK_TABLE_OR_COL b) key) '15')) (< (. (TOK_TABLE_OR_COL b) key) '25')) (<> (TOK_FUNCTION sqrt (. (TOK_TABLE_OR_COL c) key)) 13)))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        a '
'          TableScan'
'            alias: a'
'            Filter Operator'
'              predicate:'
'                  expr: (sqrt(key) <> 13)'
'                  type: boolean'
'              Reduce Output Operator'
'                key expressions:'
'                      expr: key'
'                      type: string'
'                sort order: +'
'                Map-reduce partition columns:'
'                      expr: key'
'                      type: string'
'                tag: 0'
'                value expressions:'
'                      expr: key'
'                      type: string'
'                      expr: value'
'                      type: string'
'        b '
'          TableScan'
'            alias: b'
'            Filter Operator'
'              predicate:'
'                  expr: (sqrt(key) <> 13)'
'                  type: boolean'
'              Reduce Output Operator'
'                key expressions:'
'                      expr: key'
'                      type: string'
'                sort order: +'
'                Map-reduce partition columns:'
'                      expr: key'
'                      type: string'
'                tag: 1'
'                value expressions:'
'                      expr: key'
'                      type: string'
'                      expr: value'
'                      type: string'
'        c '
'          TableScan'
'            alias: c'
'            Filter Operator'
'              predicate:'
'                  expr: (sqrt(key) <> 13)'
'                  type: boolean'
'              Reduce Output Operator'
'                key expressions:'
'                      expr: key'
'                      type: string'
'                sort order: +'
'                Map-reduce partition columns:'
'                      expr: key'
'                      type: string'
'                tag: 2'
'                value expressions:'
'                      expr: key'
'                      type: string'
'      Reduce Operator Tree:'
'        Join Operator'
'          condition map:'
'               Left Outer Join0 to 1'
'               Right Outer Join0 to 2'
'          condition expressions:'
'            0 {VALUE._col0} {VALUE._col1}'
'            1 {VALUE._col0} {VALUE._col1}'
'            2 {VALUE._col0}'
'          handleSkewJoin: false'
'          outputColumnNames: _col0, _col1, _col4, _col5, _col8'
'          Filter Operator'
'            predicate:'
'                expr: ((((_col4 > '15') and (_col4 < '25')) and (_col0 > '10')) and (_col0 < '20'))'
'                type: boolean'
'            Select Operator'
'              expressions:'
'                    expr: _col0'
'                    type: string'
'                    expr: _col1'
'                    type: string'
'                    expr: _col4'
'                    type: string'
'                    expr: _col5'
'                    type: string'
'                    expr: _col8'
'                    type: string'
'              outputColumnNames: _col0, _col1, _col2, _col3, _col4'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 0'
'                table:'
'                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: -1'
''
''
112 rows selected 
>>>  
>>>  FROM 
src a 
LEFT OUTER JOIN 
src b 
ON (a.key = b.key) 
RIGHT OUTER JOIN 
src c 
ON (a.key = c.key) 
SELECT a.key, a.value, b.key, b.value, c.key 
WHERE a.key > '10' AND a.key < '20' AND b.key > '15' AND b.key < '25' AND sqrt(c.key) <> 13 ;
'key','value','key','value','key'
'150','val_150','150','val_150','150'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'152','val_152','152','val_152','152'
'153','val_153','153','val_153','153'
'155','val_155','155','val_155','155'
'156','val_156','156','val_156','156'
'157','val_157','157','val_157','157'
'158','val_158','158','val_158','158'
'160','val_160','160','val_160','160'
'162','val_162','162','val_162','162'
'163','val_163','163','val_163','163'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'164','val_164','164','val_164','164'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'165','val_165','165','val_165','165'
'166','val_166','166','val_166','166'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'167','val_167','167','val_167','167'
'168','val_168','168','val_168','168'
'17','val_17','17','val_17','17'
'170','val_170','170','val_170','170'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'172','val_172','172','val_172','172'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'174','val_174','174','val_174','174'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'175','val_175','175','val_175','175'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'176','val_176','176','val_176','176'
'177','val_177','177','val_177','177'
'178','val_178','178','val_178','178'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'179','val_179','179','val_179','179'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'18','val_18','18','val_18','18'
'180','val_180','180','val_180','180'
'181','val_181','181','val_181','181'
'183','val_183','183','val_183','183'
'186','val_186','186','val_186','186'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'187','val_187','187','val_187','187'
'189','val_189','189','val_189','189'
'19','val_19','19','val_19','19'
'190','val_190','190','val_190','190'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'191','val_191','191','val_191','191'
'192','val_192','192','val_192','192'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'193','val_193','193','val_193','193'
'194','val_194','194','val_194','194'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'195','val_195','195','val_195','195'
'196','val_196','196','val_196','196'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'197','val_197','197','val_197','197'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'199','val_199','199','val_199','199'
'2','val_2','2','val_2','2'
230 rows selected 
>>>  !record
