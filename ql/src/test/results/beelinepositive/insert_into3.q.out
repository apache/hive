Saving all output to "!!{outputDirectory}!!/insert_into3.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/insert_into3.q
>>>  DROP TABLE insert_into3a;
No rows affected 
>>>  DROP TABLE insert_into3b;
No rows affected 
>>>  
>>>  CREATE TABLE insert_into3a (key int, value string);
No rows affected 
>>>  CREATE TABLE insert_into3b (key int, value string);
No rows affected 
>>>  
>>>  EXPLAIN FROM src INSERT INTO TABLE insert_into3a SELECT * LIMIT 50 
INSERT INTO TABLE insert_into3b SELECT * LIMIT 100;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_INSERT_INTO (TOK_TAB (TOK_TABNAME insert_into3a))) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_LIMIT 50)) (TOK_INSERT (TOK_INSERT_INTO (TOK_TAB (TOK_TABNAME insert_into3b))) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_LIMIT 100)))'
''
'STAGE DEPENDENCIES:'
'  Stage-2 is a root stage'
'  Stage-0 depends on stages: Stage-2'
'  Stage-3 depends on stages: Stage-0'
'  Stage-4 depends on stages: Stage-2'
'  Stage-1 depends on stages: Stage-4'
'  Stage-5 depends on stages: Stage-1'
''
'STAGE PLANS:'
'  Stage: Stage-2'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src '
'          TableScan'
'            alias: src'
'            Select Operator'
'              expressions:'
'                    expr: key'
'                    type: string'
'                    expr: value'
'                    type: string'
'              outputColumnNames: _col0, _col1'
'              Limit'
'                Reduce Output Operator'
'                  sort order: '
'                  tag: -1'
'                  value expressions:'
'                        expr: _col0'
'                        type: string'
'                        expr: _col1'
'                        type: string'
'            Select Operator'
'              expressions:'
'                    expr: key'
'                    type: string'
'                    expr: value'
'                    type: string'
'              outputColumnNames: _col0, _col1'
'              Limit'
'                File Output Operator'
'                  compressed: false'
'                  GlobalTableId: 0'
'                  table:'
'                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
'      Reduce Operator Tree:'
'        Extract'
'          Limit'
'            Select Operator'
'              expressions:'
'                    expr: UDFToInteger(_col0)'
'                    type: int'
'                    expr: _col1'
'                    type: string'
'              outputColumnNames: _col0, _col1'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 1'
'                table:'
'                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                    name: insert_into3.insert_into3a'
''
'  Stage: Stage-0'
'    Move Operator'
'      tables:'
'          replace: true'
'          table:'
'              input format: org.apache.hadoop.mapred.TextInputFormat'
'              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'              name: insert_into3.insert_into3a'
''
'  Stage: Stage-3'
'    Stats-Aggr Operator'
''
'  Stage: Stage-4'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        file:!!{hive.exec.scratchdir}!! '
'            Reduce Output Operator'
'              sort order: '
'              tag: -1'
'              value expressions:'
'                    expr: _col0'
'                    type: string'
'                    expr: _col1'
'                    type: string'
'      Reduce Operator Tree:'
'        Extract'
'          Limit'
'            Select Operator'
'              expressions:'
'                    expr: UDFToInteger(_col0)'
'                    type: int'
'                    expr: _col1'
'                    type: string'
'              outputColumnNames: _col0, _col1'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 2'
'                table:'
'                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                    name: insert_into3.insert_into3b'
''
'  Stage: Stage-1'
'    Move Operator'
'      tables:'
'          replace: true'
'          table:'
'              input format: org.apache.hadoop.mapred.TextInputFormat'
'              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'              name: insert_into3.insert_into3b'
''
'  Stage: Stage-5'
'    Stats-Aggr Operator'
''
''
125 rows selected 
>>>  FROM src INSERT INTO TABLE insert_into3a SELECT * LIMIT 50 
INSERT INTO TABLE insert_into3b SELECT * LIMIT 100;
'_col0','_col1'
No rows selected 
>>>  SELECT SUM(HASH(c)) FROM ( 
SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3a 
) t;
'_c0'
'7813690682'
1 row selected 
>>>  SELECT SUM(HASH(c)) FROM ( 
SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3b 
) t;
'_c0'
'10226524244'
1 row selected 
>>>  
>>>  EXPLAIN FROM src INSERT OVERWRITE TABLE insert_into3a SELECT * LIMIT 10 
INSERT INTO TABLE insert_into3b SELECT * LIMIT 10;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME insert_into3a))) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_LIMIT 10)) (TOK_INSERT (TOK_INSERT_INTO (TOK_TAB (TOK_TABNAME insert_into3b))) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_LIMIT 10)))'
''
'STAGE DEPENDENCIES:'
'  Stage-2 is a root stage'
'  Stage-0 depends on stages: Stage-2'
'  Stage-3 depends on stages: Stage-0'
'  Stage-4 depends on stages: Stage-2'
'  Stage-1 depends on stages: Stage-4'
'  Stage-5 depends on stages: Stage-1'
''
'STAGE PLANS:'
'  Stage: Stage-2'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src '
'          TableScan'
'            alias: src'
'            Select Operator'
'              expressions:'
'                    expr: key'
'                    type: string'
'                    expr: value'
'                    type: string'
'              outputColumnNames: _col0, _col1'
'              Limit'
'                Reduce Output Operator'
'                  sort order: '
'                  tag: -1'
'                  value expressions:'
'                        expr: _col0'
'                        type: string'
'                        expr: _col1'
'                        type: string'
'            Select Operator'
'              expressions:'
'                    expr: key'
'                    type: string'
'                    expr: value'
'                    type: string'
'              outputColumnNames: _col0, _col1'
'              Limit'
'                File Output Operator'
'                  compressed: false'
'                  GlobalTableId: 0'
'                  table:'
'                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
'      Reduce Operator Tree:'
'        Extract'
'          Limit'
'            Select Operator'
'              expressions:'
'                    expr: UDFToInteger(_col0)'
'                    type: int'
'                    expr: _col1'
'                    type: string'
'              outputColumnNames: _col0, _col1'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 1'
'                table:'
'                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                    name: insert_into3.insert_into3a'
''
'  Stage: Stage-0'
'    Move Operator'
'      tables:'
'          replace: true'
'          table:'
'              input format: org.apache.hadoop.mapred.TextInputFormat'
'              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'              name: insert_into3.insert_into3a'
''
'  Stage: Stage-3'
'    Stats-Aggr Operator'
''
'  Stage: Stage-4'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        file:!!{hive.exec.scratchdir}!! '
'            Reduce Output Operator'
'              sort order: '
'              tag: -1'
'              value expressions:'
'                    expr: _col0'
'                    type: string'
'                    expr: _col1'
'                    type: string'
'      Reduce Operator Tree:'
'        Extract'
'          Limit'
'            Select Operator'
'              expressions:'
'                    expr: UDFToInteger(_col0)'
'                    type: int'
'                    expr: _col1'
'                    type: string'
'              outputColumnNames: _col0, _col1'
'              File Output Operator'
'                compressed: false'
'                GlobalTableId: 2'
'                table:'
'                    input format: org.apache.hadoop.mapred.TextInputFormat'
'                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'                    name: insert_into3.insert_into3b'
''
'  Stage: Stage-1'
'    Move Operator'
'      tables:'
'          replace: true'
'          table:'
'              input format: org.apache.hadoop.mapred.TextInputFormat'
'              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
'              name: insert_into3.insert_into3b'
''
'  Stage: Stage-5'
'    Stats-Aggr Operator'
''
''
125 rows selected 
>>>  FROM src INSERT OVERWRITE TABLE insert_into3a SELECT * LIMIT 10 
INSERT INTO TABLE insert_into3b SELECT * LIMIT 10;
'_col0','_col1'
No rows selected 
>>>  SELECT SUM(HASH(c)) FROM ( 
SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3a 
) t;
'_c0'
'-826625916'
1 row selected 
>>>  SELECT SUM(HASH(c)) FROM ( 
SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into3b 
) t;
'_c0'
'-826625916'
1 row selected 
>>>  
>>>  DROP TABLE insert_into3a;
No rows affected 
>>>  DROP TABLE insert_into3b;
No rows affected 
>>>  !record
