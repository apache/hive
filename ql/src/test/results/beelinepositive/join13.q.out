Saving all output to "!!{outputDirectory}!!/join13.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/join13.q
>>>  EXPLAIN 
SELECT src1.c1, src2.c4 
FROM 
(SELECT src.key as c1, src.value as c2 from src) src1 
JOIN 
(SELECT src.key as c3, src.value as c4 from src) src2 
ON src1.c1 = src2.c3 AND src1.c1 < 100 
JOIN 
(SELECT src.key as c5, src.value as c6 from src) src3 
ON src1.c1 + src2.c3 = src3.c5 AND src3.c5 < 200;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_JOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value) c2)))) src1) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value) c4)))) src2) (AND (= (. (TOK_TABLE_OR_COL src1) c1) (. (TOK_TABLE_OR_COL src2) c3)) (< (. (TOK_TABLE_OR_COL src1) c1) 100))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key) c5) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value) c6)))) src3) (AND (= (+ (. (TOK_TABLE_OR_COL src1) c1) (. (TOK_TABLE_OR_COL src2) c3)) (. (TOK_TABLE_OR_COL src3) c5)) (< (. (TOK_TABLE_OR_COL src3) c5) 200)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) c4)))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-2 depends on stages: Stage-1'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        src1:src '
'          TableScan'
'            alias: src'
'            Filter Operator'
'              predicate:'
'                  expr: (key < 100.0)'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: key'
'                      type: string'
'                outputColumnNames: _col0'
'                Reduce Output Operator'
'                  key expressions:'
'                        expr: _col0'
'                        type: string'
'                  sort order: +'
'                  Map-reduce partition columns:'
'                        expr: _col0'
'                        type: string'
'                  tag: 0'
'                  value expressions:'
'                        expr: _col0'
'                        type: string'
'        src2:src '
'          TableScan'
'            alias: src'
'            Filter Operator'
'              predicate:'
'                  expr: (key < 100.0)'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: key'
'                      type: string'
'                      expr: value'
'                      type: string'
'                outputColumnNames: _col0, _col1'
'                Reduce Output Operator'
'                  key expressions:'
'                        expr: _col0'
'                        type: string'
'                  sort order: +'
'                  Map-reduce partition columns:'
'                        expr: _col0'
'                        type: string'
'                  tag: 1'
'                  value expressions:'
'                        expr: _col0'
'                        type: string'
'                        expr: _col1'
'                        type: string'
'      Reduce Operator Tree:'
'        Join Operator'
'          condition map:'
'               Inner Join 0 to 1'
'          condition expressions:'
'            0 {VALUE._col0}'
'            1 {VALUE._col0} {VALUE._col1}'
'          handleSkewJoin: false'
'          outputColumnNames: _col0, _col2, _col3'
'          File Output Operator'
'            compressed: false'
'            GlobalTableId: 0'
'            table:'
'                input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
''
'  Stage: Stage-2'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        $INTNAME '
'            Reduce Output Operator'
'              key expressions:'
'                    expr: (_col0 + _col2)'
'                    type: double'
'              sort order: +'
'              Map-reduce partition columns:'
'                    expr: (_col0 + _col2)'
'                    type: double'
'              tag: 0'
'              value expressions:'
'                    expr: _col3'
'                    type: string'
'                    expr: _col0'
'                    type: string'
'        src3:src '
'          TableScan'
'            alias: src'
'            Filter Operator'
'              predicate:'
'                  expr: (key < 200.0)'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: key'
'                      type: string'
'                outputColumnNames: _col0'
'                Reduce Output Operator'
'                  key expressions:'
'                        expr: UDFToDouble(_col0)'
'                        type: double'
'                  sort order: +'
'                  Map-reduce partition columns:'
'                        expr: UDFToDouble(_col0)'
'                        type: double'
'                  tag: 1'
'      Reduce Operator Tree:'
'        Join Operator'
'          condition map:'
'               Inner Join 0 to 1'
'          condition expressions:'
'            0 {VALUE._col1} {VALUE._col2}'
'            1 '
'          handleSkewJoin: false'
'          outputColumnNames: _col1, _col2'
'          Select Operator'
'            expressions:'
'                  expr: _col2'
'                  type: string'
'                  expr: _col1'
'                  type: string'
'            outputColumnNames: _col0, _col1'
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: -1'
''
''
147 rows selected 
>>>  
>>>  SELECT src1.c1, src2.c4 
FROM 
(SELECT src.key as c1, src.value as c2 from src) src1 
JOIN 
(SELECT src.key as c3, src.value as c4 from src) src2 
ON src1.c1 = src2.c3 AND src1.c1 < 100 
JOIN 
(SELECT src.key as c5, src.value as c6 from src) src3 
ON src1.c1 + src2.c3 = src3.c5 AND src3.c5 < 200;
'c1','c4'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'0','val_0'
'2','val_2'
'4','val_4'
'5','val_5'
'5','val_5'
'5','val_5'
'5','val_5'
'5','val_5'
'5','val_5'
'5','val_5'
'5','val_5'
'5','val_5'
'9','val_9'
'9','val_9'
'10','val_10'
'12','val_12'
'12','val_12'
'12','val_12'
'12','val_12'
'12','val_12'
'12','val_12'
'12','val_12'
'12','val_12'
'15','val_15'
'15','val_15'
'15','val_15'
'15','val_15'
'17','val_17'
'27','val_27'
'33','val_33'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'35','val_35'
'37','val_37'
'37','val_37'
'37','val_37'
'37','val_37'
'41','val_41'
'42','val_42'
'42','val_42'
'42','val_42'
'42','val_42'
'42','val_42'
'42','val_42'
'42','val_42'
'42','val_42'
'43','val_43'
'57','val_57'
'58','val_58'
'58','val_58'
'58','val_58'
'58','val_58'
'64','val_64'
'64','val_64'
'64','val_64'
'67','val_67'
'67','val_67'
'67','val_67'
'67','val_67'
'67','val_67'
'67','val_67'
'67','val_67'
'67','val_67'
'69','val_69'
'69','val_69'
'69','val_69'
'69','val_69'
'76','val_76'
'76','val_76'
'76','val_76'
'76','val_76'
'76','val_76'
'76','val_76'
'76','val_76'
'76','val_76'
'78','val_78'
'80','val_80'
'82','val_82'
'82','val_82'
'83','val_83'
'83','val_83'
'83','val_83'
'83','val_83'
'84','val_84'
'84','val_84'
'84','val_84'
'84','val_84'
'85','val_85'
'86','val_86'
'86','val_86'
'87','val_87'
'87','val_87'
'90','val_90'
'90','val_90'
'90','val_90'
'90','val_90'
'90','val_90'
'90','val_90'
'90','val_90'
'90','val_90'
'90','val_90'
'95','val_95'
'95','val_95'
'95','val_95'
'95','val_95'
'96','val_96'
'97','val_97'
'97','val_97'
'97','val_97'
'97','val_97'
'98','val_98'
'98','val_98'
'98','val_98'
'98','val_98'
164 rows selected 
>>>  !record
