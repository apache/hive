Saving all output to "!!{outputDirectory}!!/nullgroup4.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/nullgroup4.q
>>>  set hive.map.aggr=true;
No rows affected 
>>>  set hive.groupby.skewindata=true;
No rows affected 
>>>  
>>>  explain 
select count(1), count(distinct x.value) from src x where x.key = 9999;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) x)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION count 1)) (TOK_SELEXPR (TOK_FUNCTIONDI count (. (TOK_TABLE_OR_COL x) value)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL x) key) 9999))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-2 depends on stages: Stage-1'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        x '
'          TableScan'
'            alias: x'
'            Filter Operator'
'              predicate:'
'                  expr: (key = 9999.0)'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: value'
'                      type: string'
'                outputColumnNames: value'
'                Group By Operator'
'                  aggregations:'
'                        expr: count(1)'
'                        expr: count(DISTINCT value)'
'                  bucketGroup: false'
'                  keys:'
'                        expr: value'
'                        type: string'
'                  mode: hash'
'                  outputColumnNames: _col0, _col1, _col2'
'                  Reduce Output Operator'
'                    key expressions:'
'                          expr: _col0'
'                          type: string'
'                    sort order: +'
'                    Map-reduce partition columns:'
'                          expr: _col0'
'                          type: string'
'                    tag: -1'
'                    value expressions:'
'                          expr: _col1'
'                          type: bigint'
'                          expr: _col2'
'                          type: bigint'
'      Reduce Operator Tree:'
'        Group By Operator'
'          aggregations:'
'                expr: count(VALUE._col0)'
'                expr: count(DISTINCT KEY._col0:0._col0)'
'          bucketGroup: false'
'          mode: partials'
'          outputColumnNames: _col0, _col1'
'          File Output Operator'
'            compressed: false'
'            GlobalTableId: 0'
'            table:'
'                input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
''
'  Stage: Stage-2'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        file:!!{hive.exec.scratchdir}!! '
'            Reduce Output Operator'
'              sort order: '
'              tag: -1'
'              value expressions:'
'                    expr: _col0'
'                    type: bigint'
'                    expr: _col1'
'                    type: bigint'
'      Reduce Operator Tree:'
'        Group By Operator'
'          aggregations:'
'                expr: count(VALUE._col0)'
'                expr: count(VALUE._col1)'
'          bucketGroup: false'
'          mode: final'
'          outputColumnNames: _col0, _col1'
'          Select Operator'
'            expressions:'
'                  expr: _col0'
'                  type: bigint'
'                  expr: _col1'
'                  type: bigint'
'            outputColumnNames: _col0, _col1'
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: -1'
''
''
102 rows selected 
>>>  
>>>  select count(1), count(distinct x.value) from src x where x.key = 9999;
'_c0','_c1'
'0','0'
1 row selected 
>>>  
>>>  set hive.map.aggr=true;
No rows affected 
>>>  set hive.groupby.skewindata=false;
No rows affected 
>>>  
>>>  explain 
select count(1), count(distinct x.value) from src x where x.key = 9999;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) x)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION count 1)) (TOK_SELEXPR (TOK_FUNCTIONDI count (. (TOK_TABLE_OR_COL x) value)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL x) key) 9999))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        x '
'          TableScan'
'            alias: x'
'            Filter Operator'
'              predicate:'
'                  expr: (key = 9999.0)'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: value'
'                      type: string'
'                outputColumnNames: value'
'                Group By Operator'
'                  aggregations:'
'                        expr: count(1)'
'                        expr: count(DISTINCT value)'
'                  bucketGroup: false'
'                  keys:'
'                        expr: value'
'                        type: string'
'                  mode: hash'
'                  outputColumnNames: _col0, _col1, _col2'
'                  Reduce Output Operator'
'                    key expressions:'
'                          expr: _col0'
'                          type: string'
'                    sort order: +'
'                    tag: -1'
'                    value expressions:'
'                          expr: _col1'
'                          type: bigint'
'                          expr: _col2'
'                          type: bigint'
'      Reduce Operator Tree:'
'        Group By Operator'
'          aggregations:'
'                expr: count(VALUE._col0)'
'                expr: count(DISTINCT KEY._col0:0._col0)'
'          bucketGroup: false'
'          mode: mergepartial'
'          outputColumnNames: _col0, _col1'
'          Select Operator'
'            expressions:'
'                  expr: _col0'
'                  type: bigint'
'                  expr: _col1'
'                  type: bigint'
'            outputColumnNames: _col0, _col1'
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: -1'
''
''
71 rows selected 
>>>  
>>>  select count(1), count(distinct x.value) from src x where x.key = 9999;
'_c0','_c1'
'0','0'
1 row selected 
>>>  
>>>  set hive.map.aggr=false;
No rows affected 
>>>  set hive.groupby.skewindata=true;
No rows affected 
>>>  
>>>  explain 
select count(1), count(distinct x.value) from src x where x.key = 9999;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) x)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION count 1)) (TOK_SELEXPR (TOK_FUNCTIONDI count (. (TOK_TABLE_OR_COL x) value)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL x) key) 9999))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-2 depends on stages: Stage-1'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        x '
'          TableScan'
'            alias: x'
'            Filter Operator'
'              predicate:'
'                  expr: (key = 9999.0)'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: value'
'                      type: string'
'                outputColumnNames: value'
'                Reduce Output Operator'
'                  key expressions:'
'                        expr: value'
'                        type: string'
'                  sort order: +'
'                  Map-reduce partition columns:'
'                        expr: value'
'                        type: string'
'                  tag: -1'
'                  value expressions:'
'                        expr: 1'
'                        type: int'
'      Reduce Operator Tree:'
'        Group By Operator'
'          aggregations:'
'                expr: count(VALUE._col0)'
'                expr: count(DISTINCT KEY._col0:0._col0)'
'          bucketGroup: false'
'          mode: partial1'
'          outputColumnNames: _col0, _col1'
'          File Output Operator'
'            compressed: false'
'            GlobalTableId: 0'
'            table:'
'                input format: org.apache.hadoop.mapred.SequenceFileInputFormat'
'                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat'
''
'  Stage: Stage-2'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        file:!!{hive.exec.scratchdir}!! '
'            Reduce Output Operator'
'              sort order: '
'              tag: -1'
'              value expressions:'
'                    expr: _col0'
'                    type: bigint'
'                    expr: _col1'
'                    type: bigint'
'      Reduce Operator Tree:'
'        Group By Operator'
'          aggregations:'
'                expr: count(VALUE._col0)'
'                expr: count(VALUE._col1)'
'          bucketGroup: false'
'          mode: final'
'          outputColumnNames: _col0, _col1'
'          Select Operator'
'            expressions:'
'                  expr: _col0'
'                  type: bigint'
'                  expr: _col1'
'                  type: bigint'
'            outputColumnNames: _col0, _col1'
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: -1'
''
''
90 rows selected 
>>>  
>>>  select count(1), count(distinct x.value) from src x where x.key = 9999;
'_c0','_c1'
'0','0'
1 row selected 
>>>  
>>>  set hive.map.aggr=false;
No rows affected 
>>>  set hive.groupby.skewindata=false;
No rows affected 
>>>  
>>>  explain 
select count(1), count(distinct x.value) from src x where x.key = 9999;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) x)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION count 1)) (TOK_SELEXPR (TOK_FUNCTIONDI count (. (TOK_TABLE_OR_COL x) value)))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL x) key) 9999))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-0 is a root stage'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        x '
'          TableScan'
'            alias: x'
'            Filter Operator'
'              predicate:'
'                  expr: (key = 9999.0)'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: value'
'                      type: string'
'                outputColumnNames: value'
'                Reduce Output Operator'
'                  key expressions:'
'                        expr: value'
'                        type: string'
'                  sort order: +'
'                  tag: -1'
'                  value expressions:'
'                        expr: 1'
'                        type: int'
'      Reduce Operator Tree:'
'        Group By Operator'
'          aggregations:'
'                expr: count(VALUE._col0)'
'                expr: count(DISTINCT KEY._col0:0._col0)'
'          bucketGroup: false'
'          mode: complete'
'          outputColumnNames: _col0, _col1'
'          Select Operator'
'            expressions:'
'                  expr: _col0'
'                  type: bigint'
'                  expr: _col1'
'                  type: bigint'
'            outputColumnNames: _col0, _col1'
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-0'
'    Fetch Operator'
'      limit: -1'
''
''
59 rows selected 
>>>  
>>>  select count(1), count(distinct x.value) from src x where x.key = 9999;
'_c0','_c1'
'0','0'
1 row selected 
>>>  !record
