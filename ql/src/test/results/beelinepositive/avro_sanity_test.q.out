Saving all output to "!!{outputDirectory}!!/avro_sanity_test.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/avro_sanity_test.q
>>>  -- verify that we can actually read avro files
>>>  CREATE TABLE doctors 
ROW FORMAT 
SERDE 'org.apache.hadoop.hive.serde2.avro.AvroSerDe' 
STORED AS 
INPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerInputFormat' 
OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerOutputFormat' 
TBLPROPERTIES ('avro.schema.literal'='{ 
"namespace": "testing.hive.avro.serde", 
"name": "doctors", 
"type": "record", 
"fields": [ 
{ 
"name":"number", 
"type":"int", 
"doc":"Order of playing the role" 
}, 
{ 
"name":"first_name", 
"type":"string", 
"doc":"first name of actor playing role" 
}, 
{ 
"name":"last_name", 
"type":"string", 
"doc":"last name of actor playing role" 
} 
] 
}');
No rows affected 
>>>  
>>>  DESCRIBE doctors;
'col_name','data_type','comment'
'number','int','from deserializer'
'first_name','string','from deserializer'
'last_name','string','from deserializer'
3 rows selected 
>>>  
>>>  LOAD DATA LOCAL INPATH '../data/files/doctors.avro' INTO TABLE doctors;
No rows affected 
>>>  
>>>  SELECT * FROM doctors ORDER BY number;
'number','first_name','last_name'
'1','William','Hartnell'
'2','Patrick','Troughton'
'3','Jon','Pertwee'
'4','Tom','Baker'
'5','Peter','Davison'
'6','Colin','Baker'
'7','Sylvester','McCoy'
'8','Paul','McGann'
'9','Christopher','Eccleston'
'10','David','Tennant'
'11','Matt','Smith'
11 rows selected 
>>>  
>>>  !record
