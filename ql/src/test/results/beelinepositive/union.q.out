Saving all output to "!!{outputDirectory}!!/union.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/union.q
>>>  -- union case: both subqueries are map jobs on same input, followed by filesink
>>>  
>>>  EXPLAIN 
FROM ( 
FROM src select src.key, src.value WHERE src.key < 100 
UNION ALL 
FROM src SELECT src.* WHERE src.key > 100 
) unioninput 
INSERT OVERWRITE DIRECTORY '../build/ql/test/data/warehouse/union.out' SELECT unioninput.*;
'Explain'
'ABSTRACT SYNTAX TREE:'
'  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME src)))) (TOK_WHERE (> (. (TOK_TABLE_OR_COL src) key) 100))))) unioninput)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR '../build/ql/test/data/warehouse/union.out')) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME unioninput))))))'
''
'STAGE DEPENDENCIES:'
'  Stage-1 is a root stage'
'  Stage-6 depends on stages: Stage-1 , consists of Stage-3, Stage-2, Stage-4'
'  Stage-3'
'  Stage-0 depends on stages: Stage-3, Stage-2, Stage-5'
'  Stage-2'
'  Stage-4'
'  Stage-5 depends on stages: Stage-4'
''
'STAGE PLANS:'
'  Stage: Stage-1'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        null-subquery1:unioninput-subquery1:src '
'          TableScan'
'            alias: src'
'            Filter Operator'
'              predicate:'
'                  expr: (key < 100.0)'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: key'
'                      type: string'
'                      expr: value'
'                      type: string'
'                outputColumnNames: _col0, _col1'
'                Union'
'                  Select Operator'
'                    expressions:'
'                          expr: _col0'
'                          type: string'
'                          expr: _col1'
'                          type: string'
'                    outputColumnNames: _col0, _col1'
'                    File Output Operator'
'                      compressed: false'
'                      GlobalTableId: 1'
'                      table:'
'                          input format: org.apache.hadoop.mapred.TextInputFormat'
'                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
'        null-subquery2:unioninput-subquery2:src '
'          TableScan'
'            alias: src'
'            Filter Operator'
'              predicate:'
'                  expr: (key > 100.0)'
'                  type: boolean'
'              Select Operator'
'                expressions:'
'                      expr: key'
'                      type: string'
'                      expr: value'
'                      type: string'
'                outputColumnNames: _col0, _col1'
'                Union'
'                  Select Operator'
'                    expressions:'
'                          expr: _col0'
'                          type: string'
'                          expr: _col1'
'                          type: string'
'                    outputColumnNames: _col0, _col1'
'                    File Output Operator'
'                      compressed: false'
'                      GlobalTableId: 1'
'                      table:'
'                          input format: org.apache.hadoop.mapred.TextInputFormat'
'                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-6'
'    Conditional Operator'
''
'  Stage: Stage-3'
'    Move Operator'
'      files:'
'          hdfs directory: true'
'          destination: file:!!{hive.exec.scratchdir}!!'
''
'  Stage: Stage-0'
'    Move Operator'
'      files:'
'          hdfs directory: true'
'          destination: ../build/ql/test/data/warehouse/union.out'
''
'  Stage: Stage-2'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        file:!!{hive.exec.scratchdir}!! '
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-4'
'    Map Reduce'
'      Alias -> Map Operator Tree:'
'        file:!!{hive.exec.scratchdir}!! '
'            File Output Operator'
'              compressed: false'
'              GlobalTableId: 0'
'              table:'
'                  input format: org.apache.hadoop.mapred.TextInputFormat'
'                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
''
'  Stage: Stage-5'
'    Move Operator'
'      files:'
'          hdfs directory: true'
'          destination: file:!!{hive.exec.scratchdir}!!'
''
''
117 rows selected 
>>>  
>>>  FROM ( 
FROM src select src.key, src.value WHERE src.key < 100 
UNION ALL 
FROM src SELECT src.* WHERE src.key > 100 
) unioninput 
INSERT OVERWRITE DIRECTORY '../build/ql/test/data/warehouse/union.out' SELECT unioninput.*;
'key','value'
No rows selected 
>>>  
>>>  dfs -cat ../build/ql/test/data/warehouse/union.out/*;
No rows affected 
>>>  !record
