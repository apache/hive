Saving all output to "!!{outputDirectory}!!/udf_hex.q.raw". Enter "record" with no arguments to stop it.
>>>  !run !!{qFileDirectory}!!/udf_hex.q
>>>  DESCRIBE FUNCTION hex;
'tab_name'
'hex(n or str) - Convert the argument to hexadecimal '
1 row selected 
>>>  DESCRIBE FUNCTION EXTENDED hex;
'tab_name'
'hex(n or str) - Convert the argument to hexadecimal '
'If the argument is a string, returns two hex digits for each character in the string.'
'If the argument is a number, returns the hexadecimal representation.'
'Example:'
'  > SELECT hex(17) FROM src LIMIT 1;'
'  'H1''
'  > SELECT hex('Facebook') FROM src LIMIT 1;'
'  '46616365626F6F6B''
8 rows selected 
>>>  
>>>  -- If the argument is a string, hex should return a string containing two hex
>>>  -- digits for every character in the input.
>>>  SELECT 
hex('Facebook'), 
hex('\0'), 
hex('qwertyuiopasdfghjkl') 
FROM src LIMIT 1;
'_c0','_c1','_c2'
'46616365626F6F6B','00','71776572747975696F706173646667686A6B6C'
1 row selected 
>>>  
>>>  -- If the argument is a number, hex should convert it to hexadecimal.
>>>  SELECT 
hex(1), 
hex(0), 
hex(4207849477) 
FROM src LIMIT 1;
'_c0','_c1','_c2'
'1','0','FACEB005'
1 row selected 
>>>  
>>>  -- Negative numbers should be treated as two's complement (64 bit).
>>>  SELECT hex(-5) FROM src LIMIT 1;
'_c0'
'FFFFFFFFFFFFFFFB'
1 row selected 
>>>  !record
