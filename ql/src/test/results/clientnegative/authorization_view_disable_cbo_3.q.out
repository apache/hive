PREHOOK: query: create table src_autho_test as select * from src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@src_autho_test
POSTHOOK: query: create table src_autho_test as select * from src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@src_autho_test
POSTHOOK: Lineage: src_autho_test.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: src_autho_test.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create view v as select * from src_autho_test
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src_autho_test
PREHOOK: Output: database:default
PREHOOK: Output: default@v
POSTHOOK: query: create view v as select * from src_autho_test
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src_autho_test
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v
POSTHOOK: Lineage: v.key SIMPLE [(src_autho_test)src_autho_test.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: v.value SIMPLE [(src_autho_test)src_autho_test.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: grant select(key) on table src_autho_test to user hive_test_user
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: default@src_autho_test
POSTHOOK: query: grant select(key) on table src_autho_test to user hive_test_user
POSTHOOK: type: GRANT_PRIVILEGE
POSTHOOK: Output: default@src_autho_test
PREHOOK: query: grant select(key) on v to user hive_test_user
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: default@v
POSTHOOK: query: grant select(key) on v to user hive_test_user
POSTHOOK: type: GRANT_PRIVILEGE
POSTHOOK: Output: default@v
Authorization failed:No privilege 'Select' found for inputs { database:default, table:v, columnName:value}. Use SHOW GRANT to get more details.
