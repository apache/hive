PREHOOK: query: CREATE CONNECTOR IF NOT EXISTS derby_test
TYPE 'derby'
URL 'jdbc:derby:./target/db_for_connectortest.db;create=true'
COMMENT 'test derby connector'
WITH DCPROPERTIES (
"hive.sql.dbcp.username"="APP",
"hive.sql.dbcp.password"="mine")
PREHOOK: type: CREATEDATACONNECTOR
PREHOOK: Output: connector:derby_test
POSTHOOK: query: CREATE CONNECTOR IF NOT EXISTS derby_test
TYPE 'derby'
URL 'jdbc:derby:./target/db_for_connectortest.db;create=true'
COMMENT 'test derby connector'
WITH DCPROPERTIES (
"hive.sql.dbcp.username"="APP",
"hive.sql.dbcp.password"="mine")
POSTHOOK: type: CREATEDATACONNECTOR
POSTHOOK: Output: connector:derby_test
PREHOOK: query: SHOW CONNECTORS
PREHOOK: type: SHOWDATACONNECTORS
POSTHOOK: query: SHOW CONNECTORS
POSTHOOK: type: SHOWDATACONNECTORS
derby_test
PREHOOK: query: CREATE REMOTE DATABASE db_derby USING derby_test with DBPROPERTIES("connector.remoteDbName"="APP")
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:db_derby
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: CREATE REMOTE DATABASE db_derby USING derby_test with DBPROPERTIES("connector.remoteDbName"="APP")
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:db_derby
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
db_derby
default
PREHOOK: query: USE db_derby
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:db_derby
POSTHOOK: query: USE db_derby
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:db_derby
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:db_derby
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:db_derby
TESTTABLE1
TESTTABLE2
PREHOOK: query: DROP TABLE TESTTABLE1
PREHOOK: type: DROPTABLE
PREHOOK: Input: db_derby@TESTTABLE1
PREHOOK: Output: db_derby@TESTTABLE1
FAILED: Execution Error, return code 40000 from org.apache.hadoop.hive.ql.ddl.DDLTask. MetaException(message:Drop table in REMOTE database db_derby is not allowed)
