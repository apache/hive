PREHOOK: query: create temporary table alter_rename_partition_src_temp ( col1 string ) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alter_rename_partition_src_temp
POSTHOOK: query: create temporary table alter_rename_partition_src_temp ( col1 string ) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alter_rename_partition_src_temp
PREHOOK: query: load data local inpath '../../data/files/test.dat' overwrite into table alter_rename_partition_src_temp
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@alter_rename_partition_src_temp
POSTHOOK: query: load data local inpath '../../data/files/test.dat' overwrite into table alter_rename_partition_src_temp
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@alter_rename_partition_src_temp
PREHOOK: query: create temporary table alter_rename_partition_temp ( col1 string ) partitioned by (pcol1 string , pcol2 string) stored as sequencefile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alter_rename_partition_temp
POSTHOOK: query: create temporary table alter_rename_partition_temp ( col1 string ) partitioned by (pcol1 string , pcol2 string) stored as sequencefile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alter_rename_partition_temp
PREHOOK: query: insert overwrite table alter_rename_partition_temp partition (pcol1='old_part1:', pcol2='old_part2:') select col1 from alter_rename_partition_src_temp
PREHOOK: type: QUERY
PREHOOK: Input: default@alter_rename_partition_src_temp
PREHOOK: Output: default@alter_rename_partition_temp@pcol1=old_part1%3A/pcol2=old_part2%3A
POSTHOOK: query: insert overwrite table alter_rename_partition_temp partition (pcol1='old_part1:', pcol2='old_part2:') select col1 from alter_rename_partition_src_temp
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter_rename_partition_src_temp
POSTHOOK: Output: default@alter_rename_partition_temp@pcol1=old_part1%3A/pcol2=old_part2%3A
POSTHOOK: Lineage: alter_rename_partition_temp PARTITION(pcol1=old_part1:,pcol2=old_part2:).col1 SIMPLE [(alter_rename_partition_src_temp)alter_rename_partition_src_temp.FieldSchema(name:col1, type:string, comment:null), ]
PREHOOK: query: alter table alter_rename_partition_temp add partition(pcol1='new_part1:', pcol2='new_part2:')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@alter_rename_partition_temp
POSTHOOK: query: alter table alter_rename_partition_temp add partition(pcol1='new_part1:', pcol2='new_part2:')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@alter_rename_partition_temp
POSTHOOK: Output: default@alter_rename_partition_temp@pcol1=new_part1%3A/pcol2=new_part2%3A
PREHOOK: query: alter table alter_rename_partition_temp partition (pcol1='old_part1:', pcol2='old_part2:') rename to partition (pcol1='new_part1:', pcol2='new_part2:')
PREHOOK: type: ALTERTABLE_RENAMEPART
PREHOOK: Input: default@alter_rename_partition_temp
PREHOOK: Output: default@alter_rename_partition_temp@pcol1=new_part1%3A/pcol2=new_part2%3A
PREHOOK: Output: default@alter_rename_partition_temp@pcol1=old_part1%3A/pcol2=old_part2%3A
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. Unable to rename partition. Partition pcol1=new_part1%3A/pcol2=new_part2%3A already exists
