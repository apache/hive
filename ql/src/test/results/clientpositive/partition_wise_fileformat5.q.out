PREHOOK: query: create table partition_test_partitioned(key string, value string) partitioned by (dt string)
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table partition_test_partitioned(key string, value string) partitioned by (dt string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@partition_test_partitioned
PREHOOK: query: alter table partition_test_partitioned set fileformat rcfile
PREHOOK: type: ALTERTABLE_FILEFORMAT
PREHOOK: Input: default@partition_test_partitioned
PREHOOK: Output: default@partition_test_partitioned
POSTHOOK: query: alter table partition_test_partitioned set fileformat rcfile
POSTHOOK: type: ALTERTABLE_FILEFORMAT
POSTHOOK: Input: default@partition_test_partitioned
POSTHOOK: Output: default@partition_test_partitioned
PREHOOK: query: insert overwrite table partition_test_partitioned partition(dt=101) select * from src1
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Output: default@partition_test_partitioned@dt=101
POSTHOOK: query: insert overwrite table partition_test_partitioned partition(dt=101) select * from src1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Output: default@partition_test_partitioned@dt=101
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: alter table partition_test_partitioned set fileformat Sequencefile
PREHOOK: type: ALTERTABLE_FILEFORMAT
PREHOOK: Input: default@partition_test_partitioned
PREHOOK: Output: default@partition_test_partitioned
POSTHOOK: query: alter table partition_test_partitioned set fileformat Sequencefile
POSTHOOK: type: ALTERTABLE_FILEFORMAT
POSTHOOK: Input: default@partition_test_partitioned
POSTHOOK: Output: default@partition_test_partitioned
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table partition_test_partitioned partition(dt=102) select * from src1
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Output: default@partition_test_partitioned@dt=102
POSTHOOK: query: insert overwrite table partition_test_partitioned partition(dt=102) select * from src1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Output: default@partition_test_partitioned@dt=102
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select dt, count(1) from partition_test_partitioned where dt is not null group by dt
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_test_partitioned
PREHOOK: Input: default@partition_test_partitioned@dt=101
PREHOOK: Input: default@partition_test_partitioned@dt=102
#### A masked pattern was here ####
POSTHOOK: query: select dt, count(1) from partition_test_partitioned where dt is not null group by dt
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_test_partitioned
POSTHOOK: Input: default@partition_test_partitioned@dt=101
POSTHOOK: Input: default@partition_test_partitioned@dt=102
#### A masked pattern was here ####
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
101	25
102	25
PREHOOK: query: insert overwrite table partition_test_partitioned partition(dt=103) select * from src1
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Output: default@partition_test_partitioned@dt=103
POSTHOOK: query: insert overwrite table partition_test_partitioned partition(dt=103) select * from src1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Output: default@partition_test_partitioned@dt=103
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=103).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=103).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select dt, count(1) from partition_test_partitioned where dt is not null group by dt
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_test_partitioned
PREHOOK: Input: default@partition_test_partitioned@dt=101
PREHOOK: Input: default@partition_test_partitioned@dt=102
PREHOOK: Input: default@partition_test_partitioned@dt=103
#### A masked pattern was here ####
POSTHOOK: query: select dt, count(1) from partition_test_partitioned where dt is not null group by dt
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_test_partitioned
POSTHOOK: Input: default@partition_test_partitioned@dt=101
POSTHOOK: Input: default@partition_test_partitioned@dt=102
POSTHOOK: Input: default@partition_test_partitioned@dt=103
#### A masked pattern was here ####
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=103).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=103).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
101	25
102	25
103	25
