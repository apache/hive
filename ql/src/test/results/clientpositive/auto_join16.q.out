PREHOOK: query: explain
SELECT sum(hash(subq.key, tab.value)) 
FROM 
(select a.key, a.value from src a where a.key > 10 ) subq 
JOIN src tab 
ON (subq.key = tab.key and subq.key > 20 and subq.value = tab.value) 
where tab.value < 200
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT sum(hash(subq.key, tab.value)) 
FROM 
(select a.key, a.value from src a where a.key > 10 ) subq 
JOIN src tab 
ON (subq.key = tab.key and subq.key > 20 and subq.value = tab.value) 
where tab.value < 200
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) a)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) value))) (TOK_WHERE (> (. (TOK_TABLE_OR_COL a) key) 10)))) subq) (TOK_TABREF (TOK_TABNAME src) tab) (and (and (= (. (TOK_TABLE_OR_COL subq) key) (. (TOK_TABLE_OR_COL tab) key)) (> (. (TOK_TABLE_OR_COL subq) key) 20)) (= (. (TOK_TABLE_OR_COL subq) value) (. (TOK_TABLE_OR_COL tab) value))))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION hash (. (TOK_TABLE_OR_COL subq) key) (. (TOK_TABLE_OR_COL tab) value))))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL tab) value) 200))))

STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-2 depends on stages: Stage-4
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        tab 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        tab 
          TableScan
            alias: tab
            Filter Operator
              predicate:
                  expr: ((key > 20.0) and (value < 200.0))
                  type: boolean
              HashTable Sink Operator
                condition expressions:
                  0 {_col0}
                  1 {value}
                handleSkewJoin: false
                keys:
                  0 [Column[_col0], Column[_col1]]
                  1 [Column[key], Column[value]]
                Position of Big Table: 0

  Stage: Stage-4
    Map Reduce
      Alias -> Map Operator Tree:
        subq:a 
          TableScan
            alias: a
            Filter Operator
              predicate:
                  expr: (((key > 10.0) and (key > 20.0)) and (value < 200.0))
                  type: boolean
              Select Operator
                expressions:
                      expr: key
                      type: string
                      expr: value
                      type: string
                outputColumnNames: _col0, _col1
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  condition expressions:
                    0 {_col0}
                    1 {value}
                  handleSkewJoin: false
                  keys:
                    0 [Column[_col0], Column[_col1]]
                    1 [Column[key], Column[value]]
                  outputColumnNames: _col0, _col3
                  Position of Big Table: 0
                  Select Operator
                    expressions:
                          expr: _col0
                          type: string
                          expr: _col3
                          type: string
                    outputColumnNames: _col0, _col3
                    Group By Operator
                      aggregations:
                            expr: sum(hash(_col0,_col3))
                      bucketGroup: false
                      mode: hash
                      outputColumnNames: _col0
                      File Output Operator
                        compressed: false
                        GlobalTableId: 0
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
      Local Work:
        Map Reduce Local Work

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
            Reduce Output Operator
              sort order: 
              tag: -1
              value expressions:
                    expr: _col0
                    type: bigint
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          mode: mergepartial
          outputColumnNames: _col0
          Select Operator
            expressions:
                  expr: _col0
                  type: bigint
            outputColumnNames: _col0
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: SELECT sum(hash(subq.key, tab.value)) 
FROM 
(select a.key, a.value from src a where a.key > 10 ) subq 
JOIN src tab 
ON (subq.key = tab.key and subq.key > 20 and subq.value = tab.value) 
where tab.value < 200
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(subq.key, tab.value)) 
FROM 
(select a.key, a.value from src a where a.key > 10 ) subq 
JOIN src tab 
ON (subq.key = tab.key and subq.key > 20 and subq.value = tab.value) 
where tab.value < 200
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
NULL
