PREHOOK: query: drop table ba_test
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table ba_test
POSTHOOK: type: DROPTABLE
PREHOOK: query: -- Tests everything in binary_table_colserde.q + uses LazyBinaryColumnarSerde

create table ba_test (ba_key binary, ba_val binary) stored as rcfile
PREHOOK: type: CREATETABLE
POSTHOOK: query: -- Tests everything in binary_table_colserde.q + uses LazyBinaryColumnarSerde

create table ba_test (ba_key binary, ba_val binary) stored as rcfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@ba_test
PREHOOK: query: alter table ba_test set serde 'org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe'
PREHOOK: type: ALTERTABLE_SERIALIZER
PREHOOK: Input: default@ba_test
PREHOOK: Output: default@ba_test
POSTHOOK: query: alter table ba_test set serde 'org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe'
POSTHOOK: type: ALTERTABLE_SERIALIZER
POSTHOOK: Input: default@ba_test
POSTHOOK: Output: default@ba_test
PREHOOK: query: describe extended ba_test
PREHOOK: type: DESCTABLE
POSTHOOK: query: describe extended ba_test
POSTHOOK: type: DESCTABLE
# col_name            	data_type           	comment             
	 	 
ba_key              	binary              	from deserializer   
ba_val              	binary              	from deserializer   
	 	 
#### A masked pattern was here ####
PREHOOK: query: from src insert overwrite table ba_test select cast (src.key as binary), cast (src.value as binary)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@ba_test
POSTHOOK: query: from src insert overwrite table ba_test select cast (src.key as binary), cast (src.value as binary)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@ba_test
POSTHOOK: Lineage: ba_test.ba_key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: ba_test.ba_val EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select ba_key, ba_val from ba_test order by ba_key limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@ba_test
#### A masked pattern was here ####
POSTHOOK: query: select ba_key, ba_val from ba_test order by ba_key limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@ba_test
#### A masked pattern was here ####
POSTHOOK: Lineage: ba_test.ba_key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: ba_test.ba_val EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
100	val_100
103	val_103
103	val_103
104	val_104
104	val_104
PREHOOK: query: drop table ba_test
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@ba_test
PREHOOK: Output: default@ba_test
POSTHOOK: query: drop table ba_test
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@ba_test
POSTHOOK: Output: default@ba_test
POSTHOOK: Lineage: ba_test.ba_key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: ba_test.ba_val EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
