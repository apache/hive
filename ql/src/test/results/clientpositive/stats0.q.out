PREHOOK: query: CREATE TABLE stats_non_partitioned (key string, value string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stats_non_partitioned
POSTHOOK: query: CREATE TABLE stats_non_partitioned (key string, value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stats_non_partitioned
PREHOOK: query: explain extended
insert overwrite table stats_non_partitioned
select * from src
PREHOOK: type: QUERY
POSTHOOK: query: explain extended
insert overwrite table stats_non_partitioned
select * from src
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 1
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                      bucket_count -1
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.stats_non_partitioned
                      numFiles 0
                      numRows 0
                      rawDataSize 0
                      serialization.ddl struct stats_non_partitioned { string key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 0
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.stats_non_partitioned
                TotalFiles: 1
                GatherStats: true
                MultiFileSpray: false
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string)
                outputColumnNames: key, value
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(key, 'hll'), compute_stats(value, 'hll')
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
                    tag: -1
                    value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
                    auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              bucketing_version 2
              column.name.delimiter ,
              columns key,value
              columns.comments 'default','default'
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 500
              rawDataSize 5312
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 'default','default'
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 500
                rawDataSize 5312
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [src]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1
                  columns.types struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types string:string
#### A masked pattern was here ####
                name default.stats_non_partitioned
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct stats_non_partitioned { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.stats_non_partitioned

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value
          Column Types: string, string
          Table: default.stats_non_partitioned
          Is Table Level Stats: true

PREHOOK: query: insert overwrite table stats_non_partitioned
select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@stats_non_partitioned
POSTHOOK: query: insert overwrite table stats_non_partitioned
select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@stats_non_partitioned
POSTHOOK: Lineage: stats_non_partitioned.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: stats_non_partitioned.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: desc extended stats_non_partitioned
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_non_partitioned
POSTHOOK: query: desc extended stats_non_partitioned
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_non_partitioned
key                 	string              	                    
value               	string              	                    
	 	 
#### A masked pattern was here ####
PREHOOK: query: select * from stats_non_partitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_non_partitioned
#### A masked pattern was here ####
POSTHOOK: query: select * from stats_non_partitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_non_partitioned
#### A masked pattern was here ####
238	val_238
86	val_86
311	val_311
27	val_27
165	val_165
409	val_409
255	val_255
278	val_278
98	val_98
484	val_484
265	val_265
193	val_193
401	val_401
150	val_150
273	val_273
224	val_224
369	val_369
66	val_66
128	val_128
213	val_213
146	val_146
406	val_406
429	val_429
374	val_374
152	val_152
469	val_469
145	val_145
495	val_495
37	val_37
327	val_327
281	val_281
277	val_277
209	val_209
15	val_15
82	val_82
403	val_403
166	val_166
417	val_417
430	val_430
252	val_252
292	val_292
219	val_219
287	val_287
153	val_153
193	val_193
338	val_338
446	val_446
459	val_459
394	val_394
237	val_237
482	val_482
174	val_174
413	val_413
494	val_494
207	val_207
199	val_199
466	val_466
208	val_208
174	val_174
399	val_399
396	val_396
247	val_247
417	val_417
489	val_489
162	val_162
377	val_377
397	val_397
309	val_309
365	val_365
266	val_266
439	val_439
342	val_342
367	val_367
325	val_325
167	val_167
195	val_195
475	val_475
17	val_17
113	val_113
155	val_155
203	val_203
339	val_339
0	val_0
455	val_455
128	val_128
311	val_311
316	val_316
57	val_57
302	val_302
205	val_205
149	val_149
438	val_438
345	val_345
129	val_129
170	val_170
20	val_20
489	val_489
157	val_157
378	val_378
221	val_221
92	val_92
111	val_111
47	val_47
72	val_72
4	val_4
280	val_280
35	val_35
427	val_427
277	val_277
208	val_208
356	val_356
399	val_399
169	val_169
382	val_382
498	val_498
125	val_125
386	val_386
437	val_437
469	val_469
192	val_192
286	val_286
187	val_187
176	val_176
54	val_54
459	val_459
51	val_51
138	val_138
103	val_103
239	val_239
213	val_213
216	val_216
430	val_430
278	val_278
176	val_176
289	val_289
221	val_221
65	val_65
318	val_318
332	val_332
311	val_311
275	val_275
137	val_137
241	val_241
83	val_83
333	val_333
180	val_180
284	val_284
12	val_12
230	val_230
181	val_181
67	val_67
260	val_260
404	val_404
384	val_384
489	val_489
353	val_353
373	val_373
272	val_272
138	val_138
217	val_217
84	val_84
348	val_348
466	val_466
58	val_58
8	val_8
411	val_411
230	val_230
208	val_208
348	val_348
24	val_24
463	val_463
431	val_431
179	val_179
172	val_172
42	val_42
129	val_129
158	val_158
119	val_119
496	val_496
0	val_0
322	val_322
197	val_197
468	val_468
393	val_393
454	val_454
100	val_100
298	val_298
199	val_199
191	val_191
418	val_418
96	val_96
26	val_26
165	val_165
327	val_327
230	val_230
205	val_205
120	val_120
131	val_131
51	val_51
404	val_404
43	val_43
436	val_436
156	val_156
469	val_469
468	val_468
308	val_308
95	val_95
196	val_196
288	val_288
481	val_481
457	val_457
98	val_98
282	val_282
197	val_197
187	val_187
318	val_318
318	val_318
409	val_409
470	val_470
137	val_137
369	val_369
316	val_316
169	val_169
413	val_413
85	val_85
77	val_77
0	val_0
490	val_490
87	val_87
364	val_364
179	val_179
118	val_118
134	val_134
395	val_395
282	val_282
138	val_138
238	val_238
419	val_419
15	val_15
118	val_118
72	val_72
90	val_90
307	val_307
19	val_19
435	val_435
10	val_10
277	val_277
273	val_273
306	val_306
224	val_224
309	val_309
389	val_389
327	val_327
242	val_242
369	val_369
392	val_392
272	val_272
331	val_331
401	val_401
242	val_242
452	val_452
177	val_177
226	val_226
5	val_5
497	val_497
402	val_402
396	val_396
317	val_317
395	val_395
58	val_58
35	val_35
336	val_336
95	val_95
11	val_11
168	val_168
34	val_34
229	val_229
233	val_233
143	val_143
472	val_472
322	val_322
498	val_498
160	val_160
195	val_195
42	val_42
321	val_321
430	val_430
119	val_119
489	val_489
458	val_458
78	val_78
76	val_76
41	val_41
223	val_223
492	val_492
149	val_149
449	val_449
218	val_218
228	val_228
138	val_138
453	val_453
30	val_30
209	val_209
64	val_64
468	val_468
76	val_76
74	val_74
342	val_342
69	val_69
230	val_230
33	val_33
368	val_368
103	val_103
296	val_296
113	val_113
216	val_216
367	val_367
344	val_344
167	val_167
274	val_274
219	val_219
239	val_239
485	val_485
116	val_116
223	val_223
256	val_256
263	val_263
70	val_70
487	val_487
480	val_480
401	val_401
288	val_288
191	val_191
5	val_5
244	val_244
438	val_438
128	val_128
467	val_467
432	val_432
202	val_202
316	val_316
229	val_229
469	val_469
463	val_463
280	val_280
2	val_2
35	val_35
283	val_283
331	val_331
235	val_235
80	val_80
44	val_44
193	val_193
321	val_321
335	val_335
104	val_104
466	val_466
366	val_366
175	val_175
403	val_403
483	val_483
53	val_53
105	val_105
257	val_257
406	val_406
409	val_409
190	val_190
406	val_406
401	val_401
114	val_114
258	val_258
90	val_90
203	val_203
262	val_262
348	val_348
424	val_424
12	val_12
396	val_396
201	val_201
217	val_217
164	val_164
431	val_431
454	val_454
478	val_478
298	val_298
125	val_125
431	val_431
164	val_164
424	val_424
187	val_187
382	val_382
5	val_5
70	val_70
397	val_397
480	val_480
291	val_291
24	val_24
351	val_351
255	val_255
104	val_104
70	val_70
163	val_163
438	val_438
119	val_119
414	val_414
200	val_200
491	val_491
237	val_237
439	val_439
360	val_360
248	val_248
479	val_479
305	val_305
417	val_417
199	val_199
444	val_444
120	val_120
429	val_429
169	val_169
443	val_443
323	val_323
325	val_325
277	val_277
230	val_230
478	val_478
178	val_178
468	val_468
310	val_310
317	val_317
333	val_333
493	val_493
460	val_460
207	val_207
249	val_249
265	val_265
480	val_480
83	val_83
136	val_136
353	val_353
172	val_172
214	val_214
462	val_462
233	val_233
406	val_406
133	val_133
175	val_175
189	val_189
454	val_454
375	val_375
401	val_401
421	val_421
407	val_407
384	val_384
256	val_256
26	val_26
134	val_134
67	val_67
384	val_384
379	val_379
18	val_18
462	val_462
492	val_492
100	val_100
298	val_298
9	val_9
341	val_341
498	val_498
146	val_146
458	val_458
362	val_362
186	val_186
285	val_285
348	val_348
167	val_167
18	val_18
273	val_273
183	val_183
281	val_281
344	val_344
97	val_97
469	val_469
315	val_315
84	val_84
28	val_28
37	val_37
448	val_448
152	val_152
348	val_348
307	val_307
194	val_194
414	val_414
477	val_477
222	val_222
126	val_126
90	val_90
169	val_169
403	val_403
400	val_400
200	val_200
97	val_97
PREHOOK: query: CREATE TABLE stats_partitioned(key string, value string) partitioned by (ds string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stats_partitioned
POSTHOOK: query: CREATE TABLE stats_partitioned(key string, value string) partitioned by (ds string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stats_partitioned
PREHOOK: query: explain
insert overwrite table stats_partitioned partition (ds='1')
select * from src
PREHOOK: type: QUERY
POSTHOOK: query: explain
insert overwrite table stats_partitioned partition (ds='1')
select * from src
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.stats_partitioned
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), '1' (type: string)
                outputColumnNames: key, value, ds
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(key, 'hll'), compute_stats(value, 'hll')
                  keys: ds (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col1 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col0 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 1
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.stats_partitioned

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: string, string
          Table: default.stats_partitioned

PREHOOK: query: insert overwrite table stats_partitioned partition (ds='1')
select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@stats_partitioned@ds=1
POSTHOOK: query: insert overwrite table stats_partitioned partition (ds='1')
select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@stats_partitioned@ds=1
POSTHOOK: Lineage: stats_partitioned PARTITION(ds=1).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: stats_partitioned PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: show partitions stats_partitioned
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@stats_partitioned
POSTHOOK: query: show partitions stats_partitioned
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@stats_partitioned
ds=1
PREHOOK: query: select * from stats_partitioned where ds is not null
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_partitioned
PREHOOK: Input: default@stats_partitioned@ds=1
#### A masked pattern was here ####
POSTHOOK: query: select * from stats_partitioned where ds is not null
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_partitioned
POSTHOOK: Input: default@stats_partitioned@ds=1
#### A masked pattern was here ####
238	val_238	1
86	val_86	1
311	val_311	1
27	val_27	1
165	val_165	1
409	val_409	1
255	val_255	1
278	val_278	1
98	val_98	1
484	val_484	1
265	val_265	1
193	val_193	1
401	val_401	1
150	val_150	1
273	val_273	1
224	val_224	1
369	val_369	1
66	val_66	1
128	val_128	1
213	val_213	1
146	val_146	1
406	val_406	1
429	val_429	1
374	val_374	1
152	val_152	1
469	val_469	1
145	val_145	1
495	val_495	1
37	val_37	1
327	val_327	1
281	val_281	1
277	val_277	1
209	val_209	1
15	val_15	1
82	val_82	1
403	val_403	1
166	val_166	1
417	val_417	1
430	val_430	1
252	val_252	1
292	val_292	1
219	val_219	1
287	val_287	1
153	val_153	1
193	val_193	1
338	val_338	1
446	val_446	1
459	val_459	1
394	val_394	1
237	val_237	1
482	val_482	1
174	val_174	1
413	val_413	1
494	val_494	1
207	val_207	1
199	val_199	1
466	val_466	1
208	val_208	1
174	val_174	1
399	val_399	1
396	val_396	1
247	val_247	1
417	val_417	1
489	val_489	1
162	val_162	1
377	val_377	1
397	val_397	1
309	val_309	1
365	val_365	1
266	val_266	1
439	val_439	1
342	val_342	1
367	val_367	1
325	val_325	1
167	val_167	1
195	val_195	1
475	val_475	1
17	val_17	1
113	val_113	1
155	val_155	1
203	val_203	1
339	val_339	1
0	val_0	1
455	val_455	1
128	val_128	1
311	val_311	1
316	val_316	1
57	val_57	1
302	val_302	1
205	val_205	1
149	val_149	1
438	val_438	1
345	val_345	1
129	val_129	1
170	val_170	1
20	val_20	1
489	val_489	1
157	val_157	1
378	val_378	1
221	val_221	1
92	val_92	1
111	val_111	1
47	val_47	1
72	val_72	1
4	val_4	1
280	val_280	1
35	val_35	1
427	val_427	1
277	val_277	1
208	val_208	1
356	val_356	1
399	val_399	1
169	val_169	1
382	val_382	1
498	val_498	1
125	val_125	1
386	val_386	1
437	val_437	1
469	val_469	1
192	val_192	1
286	val_286	1
187	val_187	1
176	val_176	1
54	val_54	1
459	val_459	1
51	val_51	1
138	val_138	1
103	val_103	1
239	val_239	1
213	val_213	1
216	val_216	1
430	val_430	1
278	val_278	1
176	val_176	1
289	val_289	1
221	val_221	1
65	val_65	1
318	val_318	1
332	val_332	1
311	val_311	1
275	val_275	1
137	val_137	1
241	val_241	1
83	val_83	1
333	val_333	1
180	val_180	1
284	val_284	1
12	val_12	1
230	val_230	1
181	val_181	1
67	val_67	1
260	val_260	1
404	val_404	1
384	val_384	1
489	val_489	1
353	val_353	1
373	val_373	1
272	val_272	1
138	val_138	1
217	val_217	1
84	val_84	1
348	val_348	1
466	val_466	1
58	val_58	1
8	val_8	1
411	val_411	1
230	val_230	1
208	val_208	1
348	val_348	1
24	val_24	1
463	val_463	1
431	val_431	1
179	val_179	1
172	val_172	1
42	val_42	1
129	val_129	1
158	val_158	1
119	val_119	1
496	val_496	1
0	val_0	1
322	val_322	1
197	val_197	1
468	val_468	1
393	val_393	1
454	val_454	1
100	val_100	1
298	val_298	1
199	val_199	1
191	val_191	1
418	val_418	1
96	val_96	1
26	val_26	1
165	val_165	1
327	val_327	1
230	val_230	1
205	val_205	1
120	val_120	1
131	val_131	1
51	val_51	1
404	val_404	1
43	val_43	1
436	val_436	1
156	val_156	1
469	val_469	1
468	val_468	1
308	val_308	1
95	val_95	1
196	val_196	1
288	val_288	1
481	val_481	1
457	val_457	1
98	val_98	1
282	val_282	1
197	val_197	1
187	val_187	1
318	val_318	1
318	val_318	1
409	val_409	1
470	val_470	1
137	val_137	1
369	val_369	1
316	val_316	1
169	val_169	1
413	val_413	1
85	val_85	1
77	val_77	1
0	val_0	1
490	val_490	1
87	val_87	1
364	val_364	1
179	val_179	1
118	val_118	1
134	val_134	1
395	val_395	1
282	val_282	1
138	val_138	1
238	val_238	1
419	val_419	1
15	val_15	1
118	val_118	1
72	val_72	1
90	val_90	1
307	val_307	1
19	val_19	1
435	val_435	1
10	val_10	1
277	val_277	1
273	val_273	1
306	val_306	1
224	val_224	1
309	val_309	1
389	val_389	1
327	val_327	1
242	val_242	1
369	val_369	1
392	val_392	1
272	val_272	1
331	val_331	1
401	val_401	1
242	val_242	1
452	val_452	1
177	val_177	1
226	val_226	1
5	val_5	1
497	val_497	1
402	val_402	1
396	val_396	1
317	val_317	1
395	val_395	1
58	val_58	1
35	val_35	1
336	val_336	1
95	val_95	1
11	val_11	1
168	val_168	1
34	val_34	1
229	val_229	1
233	val_233	1
143	val_143	1
472	val_472	1
322	val_322	1
498	val_498	1
160	val_160	1
195	val_195	1
42	val_42	1
321	val_321	1
430	val_430	1
119	val_119	1
489	val_489	1
458	val_458	1
78	val_78	1
76	val_76	1
41	val_41	1
223	val_223	1
492	val_492	1
149	val_149	1
449	val_449	1
218	val_218	1
228	val_228	1
138	val_138	1
453	val_453	1
30	val_30	1
209	val_209	1
64	val_64	1
468	val_468	1
76	val_76	1
74	val_74	1
342	val_342	1
69	val_69	1
230	val_230	1
33	val_33	1
368	val_368	1
103	val_103	1
296	val_296	1
113	val_113	1
216	val_216	1
367	val_367	1
344	val_344	1
167	val_167	1
274	val_274	1
219	val_219	1
239	val_239	1
485	val_485	1
116	val_116	1
223	val_223	1
256	val_256	1
263	val_263	1
70	val_70	1
487	val_487	1
480	val_480	1
401	val_401	1
288	val_288	1
191	val_191	1
5	val_5	1
244	val_244	1
438	val_438	1
128	val_128	1
467	val_467	1
432	val_432	1
202	val_202	1
316	val_316	1
229	val_229	1
469	val_469	1
463	val_463	1
280	val_280	1
2	val_2	1
35	val_35	1
283	val_283	1
331	val_331	1
235	val_235	1
80	val_80	1
44	val_44	1
193	val_193	1
321	val_321	1
335	val_335	1
104	val_104	1
466	val_466	1
366	val_366	1
175	val_175	1
403	val_403	1
483	val_483	1
53	val_53	1
105	val_105	1
257	val_257	1
406	val_406	1
409	val_409	1
190	val_190	1
406	val_406	1
401	val_401	1
114	val_114	1
258	val_258	1
90	val_90	1
203	val_203	1
262	val_262	1
348	val_348	1
424	val_424	1
12	val_12	1
396	val_396	1
201	val_201	1
217	val_217	1
164	val_164	1
431	val_431	1
454	val_454	1
478	val_478	1
298	val_298	1
125	val_125	1
431	val_431	1
164	val_164	1
424	val_424	1
187	val_187	1
382	val_382	1
5	val_5	1
70	val_70	1
397	val_397	1
480	val_480	1
291	val_291	1
24	val_24	1
351	val_351	1
255	val_255	1
104	val_104	1
70	val_70	1
163	val_163	1
438	val_438	1
119	val_119	1
414	val_414	1
200	val_200	1
491	val_491	1
237	val_237	1
439	val_439	1
360	val_360	1
248	val_248	1
479	val_479	1
305	val_305	1
417	val_417	1
199	val_199	1
444	val_444	1
120	val_120	1
429	val_429	1
169	val_169	1
443	val_443	1
323	val_323	1
325	val_325	1
277	val_277	1
230	val_230	1
478	val_478	1
178	val_178	1
468	val_468	1
310	val_310	1
317	val_317	1
333	val_333	1
493	val_493	1
460	val_460	1
207	val_207	1
249	val_249	1
265	val_265	1
480	val_480	1
83	val_83	1
136	val_136	1
353	val_353	1
172	val_172	1
214	val_214	1
462	val_462	1
233	val_233	1
406	val_406	1
133	val_133	1
175	val_175	1
189	val_189	1
454	val_454	1
375	val_375	1
401	val_401	1
421	val_421	1
407	val_407	1
384	val_384	1
256	val_256	1
26	val_26	1
134	val_134	1
67	val_67	1
384	val_384	1
379	val_379	1
18	val_18	1
462	val_462	1
492	val_492	1
100	val_100	1
298	val_298	1
9	val_9	1
341	val_341	1
498	val_498	1
146	val_146	1
458	val_458	1
362	val_362	1
186	val_186	1
285	val_285	1
348	val_348	1
167	val_167	1
18	val_18	1
273	val_273	1
183	val_183	1
281	val_281	1
344	val_344	1
97	val_97	1
469	val_469	1
315	val_315	1
84	val_84	1
28	val_28	1
37	val_37	1
448	val_448	1
152	val_152	1
348	val_348	1
307	val_307	1
194	val_194	1
414	val_414	1
477	val_477	1
222	val_222	1
126	val_126	1
90	val_90	1
169	val_169	1
403	val_403	1
400	val_400	1
200	val_200	1
97	val_97	1
PREHOOK: query: describe extended stats_partitioned partition (ds='1')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_partitioned
POSTHOOK: query: describe extended stats_partitioned partition (ds='1')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_partitioned
key                 	string              	                    
value               	string              	                    
ds                  	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
	 	 
#### A masked pattern was here ####
PREHOOK: query: describe extended stats_partitioned
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_partitioned
POSTHOOK: query: describe extended stats_partitioned
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_partitioned
key                 	string              	                    
value               	string              	                    
ds                  	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
	 	 
#### A masked pattern was here ####
PREHOOK: query: drop table stats_non_partitioned
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@stats_non_partitioned
PREHOOK: Output: default@stats_non_partitioned
POSTHOOK: query: drop table stats_non_partitioned
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@stats_non_partitioned
POSTHOOK: Output: default@stats_non_partitioned
PREHOOK: query: drop table stats_partitioned
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@stats_partitioned
PREHOOK: Output: default@stats_partitioned
POSTHOOK: query: drop table stats_partitioned
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@stats_partitioned
POSTHOOK: Output: default@stats_partitioned
PREHOOK: query: CREATE TABLE stats_non_partitioned (key string, value string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stats_non_partitioned
POSTHOOK: query: CREATE TABLE stats_non_partitioned (key string, value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stats_non_partitioned
PREHOOK: query: explain extended
insert overwrite table stats_non_partitioned
select * from src
PREHOOK: type: QUERY
POSTHOOK: query: explain extended
insert overwrite table stats_non_partitioned
select * from src
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1 , consists of Stage-4, Stage-3, Stage-5
  Stage-4
  Stage-0 depends on stages: Stage-4, Stage-3, Stage-6
  Stage-2 depends on stages: Stage-0
  Stage-3
  Stage-5
  Stage-6 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 1
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                      bucket_count -1
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.stats_non_partitioned
                      numFiles 0
                      numRows 0
                      rawDataSize 0
                      serialization.ddl struct stats_non_partitioned { string key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 0
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.stats_non_partitioned
                TotalFiles: 1
                GatherStats: true
                MultiFileSpray: false
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string)
                outputColumnNames: key, value
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(key, 'hll'), compute_stats(value, 'hll')
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
                    tag: -1
                    value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
                    auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: src
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              bucketing_version 2
              column.name.delimiter ,
              columns key,value
              columns.comments 'default','default'
              columns.types string:string
#### A masked pattern was here ####
              name default.src
              numFiles 1
              numRows 500
              rawDataSize 5312
              serialization.ddl struct src { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 5812
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 'default','default'
                columns.types string:string
#### A masked pattern was here ####
                name default.src
                numFiles 1
                numRows 500
                rawDataSize 5312
                serialization.ddl struct src { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 5812
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src
            name: default.src
      Truncated Path -> Alias:
        /src [src]
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1
                  columns.types struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-4
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types string:string
#### A masked pattern was here ####
                name default.stats_non_partitioned
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct stats_non_partitioned { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.stats_non_partitioned

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value
          Column Types: string, string
          Table: default.stats_non_partitioned
          Is Table Level Stats: true

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                    bucket_count -1
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.stats_non_partitioned
                    numFiles 0
                    numRows 0
                    rawDataSize 0
                    serialization.ddl struct stats_non_partitioned { string key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 0
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.stats_non_partitioned
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -ext-10002
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              bucketing_version 2
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types string:string
#### A masked pattern was here ####
              name default.stats_non_partitioned
              numFiles 0
              numRows 0
              rawDataSize 0
              serialization.ddl struct stats_non_partitioned { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 0
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types string:string
#### A masked pattern was here ####
                name default.stats_non_partitioned
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct stats_non_partitioned { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.stats_non_partitioned
            name: default.stats_non_partitioned
      Truncated Path -> Alias:
#### A masked pattern was here ####

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                    bucket_count -1
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.stats_non_partitioned
                    numFiles 0
                    numRows 0
                    rawDataSize 0
                    serialization.ddl struct stats_non_partitioned { string key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 0
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.stats_non_partitioned
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -ext-10002
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              bucketing_version 2
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types string:string
#### A masked pattern was here ####
              name default.stats_non_partitioned
              numFiles 0
              numRows 0
              rawDataSize 0
              serialization.ddl struct stats_non_partitioned { string key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 0
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types string:string
#### A masked pattern was here ####
                name default.stats_non_partitioned
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct stats_non_partitioned { string key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.stats_non_partitioned
            name: default.stats_non_partitioned
      Truncated Path -> Alias:
#### A masked pattern was here ####

  Stage: Stage-6
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: insert overwrite table stats_non_partitioned
select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@stats_non_partitioned
POSTHOOK: query: insert overwrite table stats_non_partitioned
select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@stats_non_partitioned
POSTHOOK: Lineage: stats_non_partitioned.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: stats_non_partitioned.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: desc extended stats_non_partitioned
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_non_partitioned
POSTHOOK: query: desc extended stats_non_partitioned
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_non_partitioned
key                 	string              	                    
value               	string              	                    
	 	 
#### A masked pattern was here ####
PREHOOK: query: select * from stats_non_partitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_non_partitioned
#### A masked pattern was here ####
POSTHOOK: query: select * from stats_non_partitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_non_partitioned
#### A masked pattern was here ####
238	val_238
86	val_86
311	val_311
27	val_27
165	val_165
409	val_409
255	val_255
278	val_278
98	val_98
484	val_484
265	val_265
193	val_193
401	val_401
150	val_150
273	val_273
224	val_224
369	val_369
66	val_66
128	val_128
213	val_213
146	val_146
406	val_406
429	val_429
374	val_374
152	val_152
469	val_469
145	val_145
495	val_495
37	val_37
327	val_327
281	val_281
277	val_277
209	val_209
15	val_15
82	val_82
403	val_403
166	val_166
417	val_417
430	val_430
252	val_252
292	val_292
219	val_219
287	val_287
153	val_153
193	val_193
338	val_338
446	val_446
459	val_459
394	val_394
237	val_237
482	val_482
174	val_174
413	val_413
494	val_494
207	val_207
199	val_199
466	val_466
208	val_208
174	val_174
399	val_399
396	val_396
247	val_247
417	val_417
489	val_489
162	val_162
377	val_377
397	val_397
309	val_309
365	val_365
266	val_266
439	val_439
342	val_342
367	val_367
325	val_325
167	val_167
195	val_195
475	val_475
17	val_17
113	val_113
155	val_155
203	val_203
339	val_339
0	val_0
455	val_455
128	val_128
311	val_311
316	val_316
57	val_57
302	val_302
205	val_205
149	val_149
438	val_438
345	val_345
129	val_129
170	val_170
20	val_20
489	val_489
157	val_157
378	val_378
221	val_221
92	val_92
111	val_111
47	val_47
72	val_72
4	val_4
280	val_280
35	val_35
427	val_427
277	val_277
208	val_208
356	val_356
399	val_399
169	val_169
382	val_382
498	val_498
125	val_125
386	val_386
437	val_437
469	val_469
192	val_192
286	val_286
187	val_187
176	val_176
54	val_54
459	val_459
51	val_51
138	val_138
103	val_103
239	val_239
213	val_213
216	val_216
430	val_430
278	val_278
176	val_176
289	val_289
221	val_221
65	val_65
318	val_318
332	val_332
311	val_311
275	val_275
137	val_137
241	val_241
83	val_83
333	val_333
180	val_180
284	val_284
12	val_12
230	val_230
181	val_181
67	val_67
260	val_260
404	val_404
384	val_384
489	val_489
353	val_353
373	val_373
272	val_272
138	val_138
217	val_217
84	val_84
348	val_348
466	val_466
58	val_58
8	val_8
411	val_411
230	val_230
208	val_208
348	val_348
24	val_24
463	val_463
431	val_431
179	val_179
172	val_172
42	val_42
129	val_129
158	val_158
119	val_119
496	val_496
0	val_0
322	val_322
197	val_197
468	val_468
393	val_393
454	val_454
100	val_100
298	val_298
199	val_199
191	val_191
418	val_418
96	val_96
26	val_26
165	val_165
327	val_327
230	val_230
205	val_205
120	val_120
131	val_131
51	val_51
404	val_404
43	val_43
436	val_436
156	val_156
469	val_469
468	val_468
308	val_308
95	val_95
196	val_196
288	val_288
481	val_481
457	val_457
98	val_98
282	val_282
197	val_197
187	val_187
318	val_318
318	val_318
409	val_409
470	val_470
137	val_137
369	val_369
316	val_316
169	val_169
413	val_413
85	val_85
77	val_77
0	val_0
490	val_490
87	val_87
364	val_364
179	val_179
118	val_118
134	val_134
395	val_395
282	val_282
138	val_138
238	val_238
419	val_419
15	val_15
118	val_118
72	val_72
90	val_90
307	val_307
19	val_19
435	val_435
10	val_10
277	val_277
273	val_273
306	val_306
224	val_224
309	val_309
389	val_389
327	val_327
242	val_242
369	val_369
392	val_392
272	val_272
331	val_331
401	val_401
242	val_242
452	val_452
177	val_177
226	val_226
5	val_5
497	val_497
402	val_402
396	val_396
317	val_317
395	val_395
58	val_58
35	val_35
336	val_336
95	val_95
11	val_11
168	val_168
34	val_34
229	val_229
233	val_233
143	val_143
472	val_472
322	val_322
498	val_498
160	val_160
195	val_195
42	val_42
321	val_321
430	val_430
119	val_119
489	val_489
458	val_458
78	val_78
76	val_76
41	val_41
223	val_223
492	val_492
149	val_149
449	val_449
218	val_218
228	val_228
138	val_138
453	val_453
30	val_30
209	val_209
64	val_64
468	val_468
76	val_76
74	val_74
342	val_342
69	val_69
230	val_230
33	val_33
368	val_368
103	val_103
296	val_296
113	val_113
216	val_216
367	val_367
344	val_344
167	val_167
274	val_274
219	val_219
239	val_239
485	val_485
116	val_116
223	val_223
256	val_256
263	val_263
70	val_70
487	val_487
480	val_480
401	val_401
288	val_288
191	val_191
5	val_5
244	val_244
438	val_438
128	val_128
467	val_467
432	val_432
202	val_202
316	val_316
229	val_229
469	val_469
463	val_463
280	val_280
2	val_2
35	val_35
283	val_283
331	val_331
235	val_235
80	val_80
44	val_44
193	val_193
321	val_321
335	val_335
104	val_104
466	val_466
366	val_366
175	val_175
403	val_403
483	val_483
53	val_53
105	val_105
257	val_257
406	val_406
409	val_409
190	val_190
406	val_406
401	val_401
114	val_114
258	val_258
90	val_90
203	val_203
262	val_262
348	val_348
424	val_424
12	val_12
396	val_396
201	val_201
217	val_217
164	val_164
431	val_431
454	val_454
478	val_478
298	val_298
125	val_125
431	val_431
164	val_164
424	val_424
187	val_187
382	val_382
5	val_5
70	val_70
397	val_397
480	val_480
291	val_291
24	val_24
351	val_351
255	val_255
104	val_104
70	val_70
163	val_163
438	val_438
119	val_119
414	val_414
200	val_200
491	val_491
237	val_237
439	val_439
360	val_360
248	val_248
479	val_479
305	val_305
417	val_417
199	val_199
444	val_444
120	val_120
429	val_429
169	val_169
443	val_443
323	val_323
325	val_325
277	val_277
230	val_230
478	val_478
178	val_178
468	val_468
310	val_310
317	val_317
333	val_333
493	val_493
460	val_460
207	val_207
249	val_249
265	val_265
480	val_480
83	val_83
136	val_136
353	val_353
172	val_172
214	val_214
462	val_462
233	val_233
406	val_406
133	val_133
175	val_175
189	val_189
454	val_454
375	val_375
401	val_401
421	val_421
407	val_407
384	val_384
256	val_256
26	val_26
134	val_134
67	val_67
384	val_384
379	val_379
18	val_18
462	val_462
492	val_492
100	val_100
298	val_298
9	val_9
341	val_341
498	val_498
146	val_146
458	val_458
362	val_362
186	val_186
285	val_285
348	val_348
167	val_167
18	val_18
273	val_273
183	val_183
281	val_281
344	val_344
97	val_97
469	val_469
315	val_315
84	val_84
28	val_28
37	val_37
448	val_448
152	val_152
348	val_348
307	val_307
194	val_194
414	val_414
477	val_477
222	val_222
126	val_126
90	val_90
169	val_169
403	val_403
400	val_400
200	val_200
97	val_97
PREHOOK: query: CREATE TABLE stats_partitioned(key string, value string) partitioned by (ds string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stats_partitioned
POSTHOOK: query: CREATE TABLE stats_partitioned(key string, value string) partitioned by (ds string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stats_partitioned
PREHOOK: query: explain
insert overwrite table stats_partitioned partition (ds='1')
select * from src
PREHOOK: type: QUERY
POSTHOOK: query: explain
insert overwrite table stats_partitioned partition (ds='1')
select * from src
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1 , consists of Stage-4, Stage-3, Stage-5
  Stage-4
  Stage-0 depends on stages: Stage-4, Stage-3, Stage-6
  Stage-2 depends on stages: Stage-0
  Stage-3
  Stage-5
  Stage-6 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.stats_partitioned
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), '1' (type: string)
                outputColumnNames: key, value, ds
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(key, 'hll'), compute_stats(value, 'hll')
                  keys: ds (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col1 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col0 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-4
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 1
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.stats_partitioned

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: string, string
          Table: default.stats_partitioned

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.stats_partitioned

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.stats_partitioned

  Stage: Stage-6
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: insert overwrite table stats_partitioned partition (ds='1')
select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@stats_partitioned@ds=1
POSTHOOK: query: insert overwrite table stats_partitioned partition (ds='1')
select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@stats_partitioned@ds=1
POSTHOOK: Lineage: stats_partitioned PARTITION(ds=1).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: stats_partitioned PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: show partitions stats_partitioned
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@stats_partitioned
POSTHOOK: query: show partitions stats_partitioned
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@stats_partitioned
ds=1
PREHOOK: query: select * from stats_partitioned where ds is not null
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_partitioned
PREHOOK: Input: default@stats_partitioned@ds=1
#### A masked pattern was here ####
POSTHOOK: query: select * from stats_partitioned where ds is not null
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_partitioned
POSTHOOK: Input: default@stats_partitioned@ds=1
#### A masked pattern was here ####
238	val_238	1
86	val_86	1
311	val_311	1
27	val_27	1
165	val_165	1
409	val_409	1
255	val_255	1
278	val_278	1
98	val_98	1
484	val_484	1
265	val_265	1
193	val_193	1
401	val_401	1
150	val_150	1
273	val_273	1
224	val_224	1
369	val_369	1
66	val_66	1
128	val_128	1
213	val_213	1
146	val_146	1
406	val_406	1
429	val_429	1
374	val_374	1
152	val_152	1
469	val_469	1
145	val_145	1
495	val_495	1
37	val_37	1
327	val_327	1
281	val_281	1
277	val_277	1
209	val_209	1
15	val_15	1
82	val_82	1
403	val_403	1
166	val_166	1
417	val_417	1
430	val_430	1
252	val_252	1
292	val_292	1
219	val_219	1
287	val_287	1
153	val_153	1
193	val_193	1
338	val_338	1
446	val_446	1
459	val_459	1
394	val_394	1
237	val_237	1
482	val_482	1
174	val_174	1
413	val_413	1
494	val_494	1
207	val_207	1
199	val_199	1
466	val_466	1
208	val_208	1
174	val_174	1
399	val_399	1
396	val_396	1
247	val_247	1
417	val_417	1
489	val_489	1
162	val_162	1
377	val_377	1
397	val_397	1
309	val_309	1
365	val_365	1
266	val_266	1
439	val_439	1
342	val_342	1
367	val_367	1
325	val_325	1
167	val_167	1
195	val_195	1
475	val_475	1
17	val_17	1
113	val_113	1
155	val_155	1
203	val_203	1
339	val_339	1
0	val_0	1
455	val_455	1
128	val_128	1
311	val_311	1
316	val_316	1
57	val_57	1
302	val_302	1
205	val_205	1
149	val_149	1
438	val_438	1
345	val_345	1
129	val_129	1
170	val_170	1
20	val_20	1
489	val_489	1
157	val_157	1
378	val_378	1
221	val_221	1
92	val_92	1
111	val_111	1
47	val_47	1
72	val_72	1
4	val_4	1
280	val_280	1
35	val_35	1
427	val_427	1
277	val_277	1
208	val_208	1
356	val_356	1
399	val_399	1
169	val_169	1
382	val_382	1
498	val_498	1
125	val_125	1
386	val_386	1
437	val_437	1
469	val_469	1
192	val_192	1
286	val_286	1
187	val_187	1
176	val_176	1
54	val_54	1
459	val_459	1
51	val_51	1
138	val_138	1
103	val_103	1
239	val_239	1
213	val_213	1
216	val_216	1
430	val_430	1
278	val_278	1
176	val_176	1
289	val_289	1
221	val_221	1
65	val_65	1
318	val_318	1
332	val_332	1
311	val_311	1
275	val_275	1
137	val_137	1
241	val_241	1
83	val_83	1
333	val_333	1
180	val_180	1
284	val_284	1
12	val_12	1
230	val_230	1
181	val_181	1
67	val_67	1
260	val_260	1
404	val_404	1
384	val_384	1
489	val_489	1
353	val_353	1
373	val_373	1
272	val_272	1
138	val_138	1
217	val_217	1
84	val_84	1
348	val_348	1
466	val_466	1
58	val_58	1
8	val_8	1
411	val_411	1
230	val_230	1
208	val_208	1
348	val_348	1
24	val_24	1
463	val_463	1
431	val_431	1
179	val_179	1
172	val_172	1
42	val_42	1
129	val_129	1
158	val_158	1
119	val_119	1
496	val_496	1
0	val_0	1
322	val_322	1
197	val_197	1
468	val_468	1
393	val_393	1
454	val_454	1
100	val_100	1
298	val_298	1
199	val_199	1
191	val_191	1
418	val_418	1
96	val_96	1
26	val_26	1
165	val_165	1
327	val_327	1
230	val_230	1
205	val_205	1
120	val_120	1
131	val_131	1
51	val_51	1
404	val_404	1
43	val_43	1
436	val_436	1
156	val_156	1
469	val_469	1
468	val_468	1
308	val_308	1
95	val_95	1
196	val_196	1
288	val_288	1
481	val_481	1
457	val_457	1
98	val_98	1
282	val_282	1
197	val_197	1
187	val_187	1
318	val_318	1
318	val_318	1
409	val_409	1
470	val_470	1
137	val_137	1
369	val_369	1
316	val_316	1
169	val_169	1
413	val_413	1
85	val_85	1
77	val_77	1
0	val_0	1
490	val_490	1
87	val_87	1
364	val_364	1
179	val_179	1
118	val_118	1
134	val_134	1
395	val_395	1
282	val_282	1
138	val_138	1
238	val_238	1
419	val_419	1
15	val_15	1
118	val_118	1
72	val_72	1
90	val_90	1
307	val_307	1
19	val_19	1
435	val_435	1
10	val_10	1
277	val_277	1
273	val_273	1
306	val_306	1
224	val_224	1
309	val_309	1
389	val_389	1
327	val_327	1
242	val_242	1
369	val_369	1
392	val_392	1
272	val_272	1
331	val_331	1
401	val_401	1
242	val_242	1
452	val_452	1
177	val_177	1
226	val_226	1
5	val_5	1
497	val_497	1
402	val_402	1
396	val_396	1
317	val_317	1
395	val_395	1
58	val_58	1
35	val_35	1
336	val_336	1
95	val_95	1
11	val_11	1
168	val_168	1
34	val_34	1
229	val_229	1
233	val_233	1
143	val_143	1
472	val_472	1
322	val_322	1
498	val_498	1
160	val_160	1
195	val_195	1
42	val_42	1
321	val_321	1
430	val_430	1
119	val_119	1
489	val_489	1
458	val_458	1
78	val_78	1
76	val_76	1
41	val_41	1
223	val_223	1
492	val_492	1
149	val_149	1
449	val_449	1
218	val_218	1
228	val_228	1
138	val_138	1
453	val_453	1
30	val_30	1
209	val_209	1
64	val_64	1
468	val_468	1
76	val_76	1
74	val_74	1
342	val_342	1
69	val_69	1
230	val_230	1
33	val_33	1
368	val_368	1
103	val_103	1
296	val_296	1
113	val_113	1
216	val_216	1
367	val_367	1
344	val_344	1
167	val_167	1
274	val_274	1
219	val_219	1
239	val_239	1
485	val_485	1
116	val_116	1
223	val_223	1
256	val_256	1
263	val_263	1
70	val_70	1
487	val_487	1
480	val_480	1
401	val_401	1
288	val_288	1
191	val_191	1
5	val_5	1
244	val_244	1
438	val_438	1
128	val_128	1
467	val_467	1
432	val_432	1
202	val_202	1
316	val_316	1
229	val_229	1
469	val_469	1
463	val_463	1
280	val_280	1
2	val_2	1
35	val_35	1
283	val_283	1
331	val_331	1
235	val_235	1
80	val_80	1
44	val_44	1
193	val_193	1
321	val_321	1
335	val_335	1
104	val_104	1
466	val_466	1
366	val_366	1
175	val_175	1
403	val_403	1
483	val_483	1
53	val_53	1
105	val_105	1
257	val_257	1
406	val_406	1
409	val_409	1
190	val_190	1
406	val_406	1
401	val_401	1
114	val_114	1
258	val_258	1
90	val_90	1
203	val_203	1
262	val_262	1
348	val_348	1
424	val_424	1
12	val_12	1
396	val_396	1
201	val_201	1
217	val_217	1
164	val_164	1
431	val_431	1
454	val_454	1
478	val_478	1
298	val_298	1
125	val_125	1
431	val_431	1
164	val_164	1
424	val_424	1
187	val_187	1
382	val_382	1
5	val_5	1
70	val_70	1
397	val_397	1
480	val_480	1
291	val_291	1
24	val_24	1
351	val_351	1
255	val_255	1
104	val_104	1
70	val_70	1
163	val_163	1
438	val_438	1
119	val_119	1
414	val_414	1
200	val_200	1
491	val_491	1
237	val_237	1
439	val_439	1
360	val_360	1
248	val_248	1
479	val_479	1
305	val_305	1
417	val_417	1
199	val_199	1
444	val_444	1
120	val_120	1
429	val_429	1
169	val_169	1
443	val_443	1
323	val_323	1
325	val_325	1
277	val_277	1
230	val_230	1
478	val_478	1
178	val_178	1
468	val_468	1
310	val_310	1
317	val_317	1
333	val_333	1
493	val_493	1
460	val_460	1
207	val_207	1
249	val_249	1
265	val_265	1
480	val_480	1
83	val_83	1
136	val_136	1
353	val_353	1
172	val_172	1
214	val_214	1
462	val_462	1
233	val_233	1
406	val_406	1
133	val_133	1
175	val_175	1
189	val_189	1
454	val_454	1
375	val_375	1
401	val_401	1
421	val_421	1
407	val_407	1
384	val_384	1
256	val_256	1
26	val_26	1
134	val_134	1
67	val_67	1
384	val_384	1
379	val_379	1
18	val_18	1
462	val_462	1
492	val_492	1
100	val_100	1
298	val_298	1
9	val_9	1
341	val_341	1
498	val_498	1
146	val_146	1
458	val_458	1
362	val_362	1
186	val_186	1
285	val_285	1
348	val_348	1
167	val_167	1
18	val_18	1
273	val_273	1
183	val_183	1
281	val_281	1
344	val_344	1
97	val_97	1
469	val_469	1
315	val_315	1
84	val_84	1
28	val_28	1
37	val_37	1
448	val_448	1
152	val_152	1
348	val_348	1
307	val_307	1
194	val_194	1
414	val_414	1
477	val_477	1
222	val_222	1
126	val_126	1
90	val_90	1
169	val_169	1
403	val_403	1
400	val_400	1
200	val_200	1
97	val_97	1
PREHOOK: query: describe extended stats_partitioned partition (ds='1')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_partitioned
POSTHOOK: query: describe extended stats_partitioned partition (ds='1')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_partitioned
key                 	string              	                    
value               	string              	                    
ds                  	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
	 	 
#### A masked pattern was here ####
PREHOOK: query: describe extended stats_partitioned
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_partitioned
POSTHOOK: query: describe extended stats_partitioned
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_partitioned
key                 	string              	                    
value               	string              	                    
ds                  	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
	 	 
#### A masked pattern was here ####
