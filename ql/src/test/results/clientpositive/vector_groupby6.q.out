PREHOOK: query: CREATE TABLE srcorc STORED AS ORC AS SELECT * FROM src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@srcorc
POSTHOOK: query: CREATE TABLE srcorc STORED AS ORC AS SELECT * FROM src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcorc
POSTHOOK: Lineage: srcorc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcorc.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: CREATE TABLE dest1(c1 STRING) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1
POSTHOOK: query: CREATE TABLE dest1(c1 STRING) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
FROM srcorc
INSERT OVERWRITE TABLE dest1 SELECT DISTINCT substr(srcorc.value,5,1)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
FROM srcorc
INSERT OVERWRITE TABLE dest1 SELECT DISTINCT substr(srcorc.value,5,1)
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: srcorc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                projectedOutputColumns: [0, 1]
            Select Operator
              expressions: substr(value, 5, 1) (type: string)
              outputColumnNames: _col0
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumns: [2]
                  selectExpressions: StringSubstrColStartLen(col 1, start 4, length 1) -> 2:string
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: string)
                sort order: +
                Map-reduce partition columns: rand() (type: double)
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          groupByVectorOutput: true
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Group By Operator
          Group By Vectorization:
              groupByMode: PARTIAL1
              vectorOutput: false
              native: false
              vectorProcessingMode: NONE
              projectedOutputColumns: null
          keys: KEY._col0 (type: string)
          mode: partial1
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            TableScan Vectorization:
                native: true
                projectedOutputColumns: [0]
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Reduce Sink Vectorization:
                  className: VectorReduceSinkOperator
                  native: false
                  nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                  nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
          groupByVectorOutput: true
          inputFileFormats: org.apache.hadoop.mapred.SequenceFileInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Group By Operator
          Group By Vectorization:
              groupByMode: FINAL
              vectorOutput: false
              native: false
              vectorProcessingMode: NONE
              projectedOutputColumns: null
          keys: KEY._col0 (type: string)
          mode: final
          outputColumnNames: _col0
          Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                name: default.dest1

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.dest1

  Stage: Stage-3
    Stats-Aggr Operator

PREHOOK: query: FROM srcorc
INSERT OVERWRITE TABLE dest1 SELECT DISTINCT substr(srcorc.value,5,1)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcorc
PREHOOK: Output: default@dest1
POSTHOOK: query: FROM srcorc
INSERT OVERWRITE TABLE dest1 SELECT DISTINCT substr(srcorc.value,5,1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcorc
POSTHOOK: Output: default@dest1
POSTHOOK: Lineage: dest1.c1 EXPRESSION [(srcorc)srcorc.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT dest1.* FROM dest1
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1.* FROM dest1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1
#### A masked pattern was here ####
0
1
2
3
4
5
6
7
8
9
