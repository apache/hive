PREHOOK: query: create table inputTbl1(key string, val string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@inputTbl1
POSTHOOK: query: create table inputTbl1(key string, val string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@inputTbl1
PREHOOK: query: create table outputTbl1(key string, `values` bigint) partitioned by (ds string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl1
POSTHOOK: query: create table outputTbl1(key string, `values` bigint) partitioned by (ds string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl1
PREHOOK: query: create table outputTbl2(key string, `values` bigint) partitioned by (ds string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl2
POSTHOOK: query: create table outputTbl2(key string, `values` bigint) partitioned by (ds string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl2
PREHOOK: query: create table outputTbl3(key string, `values` bigint) partitioned by (ds string,hr string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl3
POSTHOOK: query: create table outputTbl3(key string, `values` bigint) partitioned by (ds string,hr string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl3
PREHOOK: query: load data local inpath '../../data/files/T1.txt' into table inputTbl1
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@inputtbl1
POSTHOOK: query: load data local inpath '../../data/files/T1.txt' into table inputTbl1
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@inputtbl1
PREHOOK: query: explain
insert overwrite table outputTbl1 partition(ds='2004')
SELECT *
FROM (
  SELECT key, count(1) as `values` from inputTbl1 group by key
  UNION ALL
  SELECT key, count(1) as `values` from inputTbl1 group by key
) a
PREHOOK: type: QUERY
POSTHOOK: query: explain
insert overwrite table outputTbl1 partition(ds='2004')
SELECT *
FROM (
  SELECT key, count(1) as `values` from inputTbl1 group by key
  UNION ALL
  SELECT key, count(1) as `values` from inputTbl1 group by key
) a
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1, Stage-2
  Stage-2 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: inputtbl1
            Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                name: default.outputtbl1

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 2004
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: inputtbl1
            Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                name: default.outputtbl1

PREHOOK: query: insert overwrite table outputTbl1 partition(ds='2004')
SELECT *
FROM (
  SELECT key, count(1) as `values` from inputTbl1 group by key
  UNION ALL
  SELECT key, count(1) as `values` from inputTbl1 group by key
) a
PREHOOK: type: QUERY
PREHOOK: Input: default@inputtbl1
PREHOOK: Output: default@outputtbl1@ds=2004
POSTHOOK: query: insert overwrite table outputTbl1 partition(ds='2004')
SELECT *
FROM (
  SELECT key, count(1) as `values` from inputTbl1 group by key
  UNION ALL
  SELECT key, count(1) as `values` from inputTbl1 group by key
) a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@inputtbl1
POSTHOOK: Output: default@outputtbl1@ds=2004
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=2004).key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=2004).values EXPRESSION [(inputtbl1)inputtbl1.null, ]
PREHOOK: query: desc formatted outputTbl1 partition(ds='2004')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@outputtbl1
POSTHOOK: query: desc formatted outputTbl1 partition(ds='2004')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@outputtbl1
# col_name            	data_type           	comment             
key                 	string              	                    
values              	bigint              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[2004]              	 
Database:           	default             	 
Table:              	outputtbl1          	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	numFiles            	2                   
	totalSize           	40                  
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: select * from outputTbl1
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1
PREHOOK: Input: default@outputtbl1@ds=2004
#### A masked pattern was here ####
POSTHOOK: query: select * from outputTbl1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1
POSTHOOK: Input: default@outputtbl1@ds=2004
#### A masked pattern was here ####
1	1	2004
1	1	2004
2	1	2004
2	1	2004
3	1	2004
3	1	2004
7	1	2004
7	1	2004
8	2	2004
8	2	2004
PREHOOK: query: explain 
insert overwrite table outputTbl2 partition(ds)
SELECT *
FROM (
  select * from (SELECT key, value, ds from srcpart where ds='2008-04-08' limit 500)a
  UNION ALL
  select * from (SELECT key, value, ds from srcpart where ds='2008-04-08' limit 500)b
) a
PREHOOK: type: QUERY
POSTHOOK: query: explain 
insert overwrite table outputTbl2 partition(ds)
SELECT *
FROM (
  select * from (SELECT key, value, ds from srcpart where ds='2008-04-08' limit 500)a
  UNION ALL
  select * from (SELECT key, value, ds from srcpart where ds='2008-04-08' limit 500)b
) a
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1, Stage-2
  Stage-2 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: srcpart
            Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
              Limit
                Number of rows: 500
                Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
                  TopN Hash Memory Usage: 0.1
                  value expressions: _col0 (type: string), _col1 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), VALUE._col1 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 500
            Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), UDFToLong(_col1) (type: bigint), '2008-04-08' (type: string)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.outputtbl2

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl2

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: srcpart
            Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
              Limit
                Number of rows: 500
                Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
                  TopN Hash Memory Usage: 0.1
                  value expressions: _col0 (type: string), _col1 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), VALUE._col1 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 500
            Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), UDFToLong(_col1) (type: bigint), '2008-04-08' (type: string)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5000 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.outputtbl2

PREHOOK: query: insert overwrite table outputTbl2 partition(ds)
SELECT *
FROM (
  select * from (SELECT key, value, ds from srcpart where ds='2008-04-08' limit 500)a
  UNION ALL
  select * from (SELECT key, value, ds from srcpart where ds='2008-04-08' limit 500)b
) a
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@outputtbl2
POSTHOOK: query: insert overwrite table outputTbl2 partition(ds)
SELECT *
FROM (
  select * from (SELECT key, value, ds from srcpart where ds='2008-04-08' limit 500)a
  UNION ALL
  select * from (SELECT key, value, ds from srcpart where ds='2008-04-08' limit 500)b
) a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@outputtbl2@ds=2008-04-08
POSTHOOK: Lineage: outputtbl2 PARTITION(ds=2008-04-08).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: outputtbl2 PARTITION(ds=2008-04-08).values EXPRESSION [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: show partitions outputTbl2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@outputtbl2
POSTHOOK: query: show partitions outputTbl2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@outputtbl2
ds=2008-04-08
PREHOOK: query: desc formatted outputTbl2 partition(ds='2008-04-08')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@outputtbl2
POSTHOOK: query: desc formatted outputTbl2 partition(ds='2008-04-08')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@outputtbl2
# col_name            	data_type           	comment             
key                 	string              	                    
values              	bigint              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[2008-04-08]        	 
Database:           	default             	 
Table:              	outputtbl2          	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	numFiles            	2                   
	totalSize           	6812                
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: explain insert overwrite table outputTbl3 partition(ds, hr)
SELECT *
FROM (
  select * from (SELECT key, value, ds, hr from srcpart where ds='2008-04-08' limit 1000)a
  UNION ALL
  select * from (SELECT key, value, ds, hr from srcpart where ds='2008-04-08' limit 1000)b
) a
PREHOOK: type: QUERY
POSTHOOK: query: explain insert overwrite table outputTbl3 partition(ds, hr)
SELECT *
FROM (
  select * from (SELECT key, value, ds, hr from srcpart where ds='2008-04-08' limit 1000)a
  UNION ALL
  select * from (SELECT key, value, ds, hr from srcpart where ds='2008-04-08' limit 1000)b
) a
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1, Stage-2
  Stage-2 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: srcpart
            Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string), hr (type: string)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
              Limit
                Number of rows: 1000
                Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
                  TopN Hash Memory Usage: 0.1
                  value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: string)
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 1000
            Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), UDFToLong(_col1) (type: bigint), '2008-04-08' (type: string), _col2 (type: string)
              outputColumnNames: _col0, _col1, _col2, _col3
              Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.outputtbl3

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl3

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: srcpart
            Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string), hr (type: string)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
              Limit
                Number of rows: 1000
                Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
                  TopN Hash Memory Usage: 0.1
                  value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: string)
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 1000
            Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), UDFToLong(_col1) (type: bigint), '2008-04-08' (type: string), _col2 (type: string)
              outputColumnNames: _col0, _col1, _col2, _col3
              Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 1000 Data size: 10624 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.outputtbl3

PREHOOK: query: insert overwrite table outputTbl3 partition(ds, hr)
SELECT *
FROM (
  select * from (SELECT key, value, ds, hr from srcpart where ds='2008-04-08' limit 1000)a
  UNION ALL
  select * from (SELECT key, value, ds, hr from srcpart where ds='2008-04-08' limit 1000)b
) a
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@outputtbl3
POSTHOOK: query: insert overwrite table outputTbl3 partition(ds, hr)
SELECT *
FROM (
  select * from (SELECT key, value, ds, hr from srcpart where ds='2008-04-08' limit 1000)a
  UNION ALL
  select * from (SELECT key, value, ds, hr from srcpart where ds='2008-04-08' limit 1000)b
) a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@outputtbl3@ds=2008-04-08/hr=11
POSTHOOK: Output: default@outputtbl3@ds=2008-04-08/hr=12
POSTHOOK: Lineage: outputtbl3 PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: outputtbl3 PARTITION(ds=2008-04-08,hr=11).values EXPRESSION [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: outputtbl3 PARTITION(ds=2008-04-08,hr=12).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: outputtbl3 PARTITION(ds=2008-04-08,hr=12).values EXPRESSION [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: show partitions outputTbl3
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@outputtbl3
POSTHOOK: query: show partitions outputTbl3
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@outputtbl3
ds=2008-04-08/hr=11
ds=2008-04-08/hr=12
PREHOOK: query: desc formatted outputTbl3 partition(ds='2008-04-08', hr='11')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@outputtbl3
POSTHOOK: query: desc formatted outputTbl3 partition(ds='2008-04-08', hr='11')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@outputtbl3
# col_name            	data_type           	comment             
key                 	string              	                    
values              	bigint              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
hr                  	string              	                    
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[2008-04-08, 11]    	 
Database:           	default             	 
Table:              	outputtbl3          	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	numFiles            	2                   
	totalSize           	6812                
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
