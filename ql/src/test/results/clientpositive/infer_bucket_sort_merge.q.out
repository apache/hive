PREHOOK: query: -- This tests inferring how data is bucketed/sorted from the operators in the reducer
-- and populating that information in partitions' metadata.  In particular, those cases
-- where where merging may or may not be used.

CREATE TABLE test_table (key STRING, value STRING) PARTITIONED BY (part STRING)
PREHOOK: type: CREATETABLE
POSTHOOK: query: -- This tests inferring how data is bucketed/sorted from the operators in the reducer
-- and populating that information in partitions' metadata.  In particular, those cases
-- where where merging may or may not be used.

CREATE TABLE test_table (key STRING, value STRING) PARTITIONED BY (part STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@test_table
PREHOOK: query: -- Tests a reduce task followed by a merge.  The output should be neither bucketed nor sorted.
INSERT OVERWRITE TABLE test_table PARTITION (part = '1') 
SELECT a.key, b.value FROM src a JOIN src b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@test_table@part=1
POSTHOOK: query: -- Tests a reduce task followed by a merge.  The output should be neither bucketed nor sorted.
INSERT OVERWRITE TABLE test_table PARTITION (part = '1') 
SELECT a.key, b.value FROM src a JOIN src b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@test_table@part=1
POSTHOOK: Lineage: test_table PARTITION(part=1).key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table PARTITION(part=1).value SIMPLE [(src)b.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: DESCRIBE FORMATTED test_table PARTITION (part = '1')
PREHOOK: type: DESCTABLE
POSTHOOK: query: DESCRIBE FORMATTED test_table PARTITION (part = '1')
POSTHOOK: type: DESCTABLE
POSTHOOK: Lineage: test_table PARTITION(part=1).key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table PARTITION(part=1).value SIMPLE [(src)b.FieldSchema(name:value, type:string, comment:default), ]
# col_name            	data_type           	comment             
	 	 
key                 	string              	None                
value               	string              	None                
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
	 	 
part                	string              	None                
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[1]                 	 
Database:           	default             	 
Table:              	test_table          	 
#### A masked pattern was here ####
Protect Mode:       	None                	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	numFiles            	1                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	11996               
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: -- Tests a reduce task followed by a move. The output should be bucketed and sorted.
INSERT OVERWRITE TABLE test_table PARTITION (part = '1') 
SELECT a.key, b.value FROM src a JOIN src b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@test_table@part=1
POSTHOOK: query: -- Tests a reduce task followed by a move. The output should be bucketed and sorted.
INSERT OVERWRITE TABLE test_table PARTITION (part = '1') 
SELECT a.key, b.value FROM src a JOIN src b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@test_table@part=1
POSTHOOK: Lineage: test_table PARTITION(part=1).key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table PARTITION(part=1).value SIMPLE [(src)b.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: test_table PARTITION(part=1).key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table PARTITION(part=1).value SIMPLE [(src)b.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: DESCRIBE FORMATTED test_table PARTITION (part = '1')
PREHOOK: type: DESCTABLE
POSTHOOK: query: DESCRIBE FORMATTED test_table PARTITION (part = '1')
POSTHOOK: type: DESCTABLE
POSTHOOK: Lineage: test_table PARTITION(part=1).key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table PARTITION(part=1).value SIMPLE [(src)b.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: test_table PARTITION(part=1).key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table PARTITION(part=1).value SIMPLE [(src)b.FieldSchema(name:value, type:string, comment:default), ]
# col_name            	data_type           	comment             
	 	 
key                 	string              	None                
value               	string              	None                
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
	 	 
part                	string              	None                
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[1]                 	 
Database:           	default             	 
Table:              	test_table          	 
#### A masked pattern was here ####
Protect Mode:       	None                	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	numFiles            	2                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	11996               
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	2                   	 
Bucket Columns:     	[key]               	 
Sort Columns:       	[Order(col:key, order:1)]	 
Storage Desc Params:	 	 
	serialization.format	1                   
