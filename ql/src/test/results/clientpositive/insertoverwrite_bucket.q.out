PREHOOK: query: CREATE TABLE IF NOT EXISTS bucketinput( 
data string 
) 
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketinput
POSTHOOK: query: CREATE TABLE IF NOT EXISTS bucketinput( 
data string 
) 
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketinput
PREHOOK: query: CREATE TABLE IF NOT EXISTS bucketoutput1( 
data string 
)CLUSTERED BY(data) 
INTO 2 BUCKETS 
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketoutput1
POSTHOOK: query: CREATE TABLE IF NOT EXISTS bucketoutput1( 
data string 
)CLUSTERED BY(data) 
INTO 2 BUCKETS 
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketoutput1
PREHOOK: query: CREATE TABLE IF NOT EXISTS bucketoutput2( 
data string 
)CLUSTERED BY(data) 
INTO 2 BUCKETS 
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketoutput2
POSTHOOK: query: CREATE TABLE IF NOT EXISTS bucketoutput2( 
data string 
)CLUSTERED BY(data) 
INTO 2 BUCKETS 
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketoutput2
PREHOOK: query: insert into table bucketinput values ("firstinsert1")
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__1
PREHOOK: Output: default@bucketinput
POSTHOOK: query: insert into table bucketinput values ("firstinsert1")
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__1
POSTHOOK: Output: default@bucketinput
POSTHOOK: Lineage: bucketinput.data SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: insert into table bucketinput values ("firstinsert2")
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__2
PREHOOK: Output: default@bucketinput
POSTHOOK: query: insert into table bucketinput values ("firstinsert2")
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__2
POSTHOOK: Output: default@bucketinput
POSTHOOK: Lineage: bucketinput.data SIMPLE [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: insert into table bucketinput values ("firstinsert3")
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__3
PREHOOK: Output: default@bucketinput
POSTHOOK: query: insert into table bucketinput values ("firstinsert3")
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__3
POSTHOOK: Output: default@bucketinput
POSTHOOK: Lineage: bucketinput.data SIMPLE [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: insert overwrite table bucketoutput1 select * from bucketinput where data like 'first%'
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketinput
PREHOOK: Output: default@bucketoutput1
POSTHOOK: query: insert overwrite table bucketoutput1 select * from bucketinput where data like 'first%'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketinput
POSTHOOK: Output: default@bucketoutput1
POSTHOOK: Lineage: bucketoutput1.data SIMPLE [(bucketinput)bucketinput.FieldSchema(name:data, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE temp1
(
    change string,
    num string
)
CLUSTERED BY (num) SORTED BY (num) INTO 4 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@temp1
POSTHOOK: query: CREATE TABLE temp1
(
    change string,
    num string
)
CLUSTERED BY (num) SORTED BY (num) INTO 4 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@temp1
PREHOOK: query: explain insert overwrite table temp1 select data, data from bucketinput
PREHOOK: type: QUERY
POSTHOOK: query: explain insert overwrite table temp1 select data, data from bucketinput
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: bucketinput
            Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: data (type: string)
              outputColumnNames: _col1
              Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Map-reduce partition columns: _col1 (type: string)
                Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                name: default.temp1

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.temp1

  Stage: Stage-2
    Stats-Aggr Operator

PREHOOK: query: CREATE TABLE temp2
(
    create_ts STRING ,
    change STRING,
    num STRING
)
CLUSTERED BY (create_ts) SORTED BY (num) INTO 4 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@temp2
POSTHOOK: query: CREATE TABLE temp2
(
    create_ts STRING ,
    change STRING,
    num STRING
)
CLUSTERED BY (create_ts) SORTED BY (num) INTO 4 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@temp2
PREHOOK: query: explain
INSERT OVERWRITE TABLE temp2
SELECT change, change,num
FROM temp1
PREHOOK: type: QUERY
POSTHOOK: query: explain
INSERT OVERWRITE TABLE temp2
SELECT change, change,num
FROM temp1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: temp1
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Select Operator
              expressions: change (type: string), num (type: string)
              outputColumnNames: _col0, _col2
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: _col2 (type: string)
                sort order: +
                Map-reduce partition columns: _col0 (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                value expressions: _col0 (type: string)
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                name: default.temp2

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.temp2

  Stage: Stage-2
    Stats-Aggr Operator

PREHOOK: query: select * from bucketoutput1 a join bucketoutput2 b on (a.data=b.data)
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketoutput1
PREHOOK: Input: default@bucketoutput2
#### A masked pattern was here ####
POSTHOOK: query: select * from bucketoutput1 a join bucketoutput2 b on (a.data=b.data)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketoutput1
POSTHOOK: Input: default@bucketoutput2
#### A masked pattern was here ####
PREHOOK: query: drop table temp1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@temp1
PREHOOK: Output: default@temp1
POSTHOOK: query: drop table temp1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@temp1
POSTHOOK: Output: default@temp1
PREHOOK: query: drop table temp2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@temp2
PREHOOK: Output: default@temp2
POSTHOOK: query: drop table temp2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@temp2
POSTHOOK: Output: default@temp2
PREHOOK: query: drop table buckettestinput
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table buckettestinput
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table buckettestoutput1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table buckettestoutput1
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table buckettestoutput2
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table buckettestoutput2
POSTHOOK: type: DROPTABLE
