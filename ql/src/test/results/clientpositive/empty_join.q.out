PREHOOK: query: DROP TABLE IF EXISTS test_1_n2
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS test_1_n2
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE test_1_n2 AS SELECT 1 AS id
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: database:default
PREHOOK: Output: default@test_1_n2
POSTHOOK: query: CREATE TABLE test_1_n2 AS SELECT 1 AS id
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_1_n2
POSTHOOK: Lineage: test_1_n2.id SIMPLE []
PREHOOK: query: DROP TABLE IF EXISTS test_2_n2
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS test_2_n2
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE test_2_n2 (id INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_2_n2
POSTHOOK: query: CREATE TABLE test_2_n2 (id INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_2_n2
PREHOOK: query: DROP TABLE IF EXISTS test_3_n0
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS test_3_n0
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE test_3_n0 AS SELECT 1 AS id
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: database:default
PREHOOK: Output: default@test_3_n0
POSTHOOK: query: CREATE TABLE test_3_n0 AS SELECT 1 AS id
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_3_n0
POSTHOOK: Lineage: test_3_n0.id SIMPLE []
PREHOOK: query: explain
SELECT t1.id, t2.id, t3.id
FROM test_1_n2 t1
LEFT JOIN test_2_n2 t2 ON t1.id = t2.id
INNER JOIN test_3_n0 t3 ON t1.id = t3.id
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT t1.id, t2.id, t3.id
FROM test_1_n2 t1
LEFT JOIN test_2_n2 t2 ON t1.id = t2.id
INNER JOIN test_3_n0 t3 ON t1.id = t3.id
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_1:t2 
          Fetch Operator
            limit: -1
        $hdt$_2:t3 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_1:t2 
          TableScan
            alias: t2
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                    2 _col0 (type: int)
        $hdt$_2:t3 
          TableScan
            alias: t3
            Statistics: Num rows: 1 Data size: 1 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 1 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 1 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                    2 _col0 (type: int)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1
            Statistics: Num rows: 1 Data size: 1 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 1 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 1 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Left Outer Join 0 to 1
                       Inner Join 0 to 2
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                    2 _col0 (type: int)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 2 Data size: 2 Basic stats: PARTIAL Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 2 Basic stats: PARTIAL Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT t1.id, t2.id, t3.id
FROM test_1_n2 t1
LEFT JOIN test_2_n2 t2 ON t1.id = t2.id
INNER JOIN test_3_n0 t3 ON t1.id = t3.id
PREHOOK: type: QUERY
PREHOOK: Input: default@test_1_n2
PREHOOK: Input: default@test_2_n2
PREHOOK: Input: default@test_3_n0
#### A masked pattern was here ####
POSTHOOK: query: SELECT t1.id, t2.id, t3.id
FROM test_1_n2 t1
LEFT JOIN test_2_n2 t2 ON t1.id = t2.id
INNER JOIN test_3_n0 t3 ON t1.id = t3.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_1_n2
POSTHOOK: Input: default@test_2_n2
POSTHOOK: Input: default@test_3_n0
#### A masked pattern was here ####
1	NULL	1
