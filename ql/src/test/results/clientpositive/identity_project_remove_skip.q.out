PREHOOK: query: explain
select t2.* 
from
  (select key,value from (select key,value from src) t1 sort by key) t2
  join 
  (select * from src sort by key) t3 
  on (t2.key=t3.key )
  where t2.value='val_105' and t3.key='105'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select t2.* 
from
  (select key,value from (select key,value from src) t1 sort by key) t2
  join 
  (select * from src sort by key) t3 
  on (t2.key=t3.key )
  where t2.value='val_105' and t3.key='105'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-6 depends on stages: Stage-1, Stage-3 , consists of Stage-7, Stage-8, Stage-2
  Stage-7 has a backup stage: Stage-2
  Stage-4 depends on stages: Stage-7
  Stage-8 has a backup stage: Stage-2
  Stage-5 depends on stages: Stage-8
  Stage-2
  Stage-3 is a root stage
  Stage-0 depends on stages: Stage-4, Stage-5, Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((key is not null and (value = 'val_105')) and (key = '105')) (type: boolean)
              Statistics: Num rows: 125 Data size: 1328 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 125 Data size: 1328 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: '105' (type: string)
                  sort order: +
                  Statistics: Num rows: 125 Data size: 1328 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Select Operator
          Statistics: Num rows: 125 Data size: 1328 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-6
    Conditional Operator

  Stage: Stage-7
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME1 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 '105' (type: string)
                1 '105' (type: string)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              keys:
                0 '105' (type: string)
                1 '105' (type: string)
              Statistics: Num rows: 275 Data size: 2921 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: '105' (type: string), 'val_105' (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 275 Data size: 2921 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 275 Data size: 2921 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-8
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME 
          TableScan
            HashTable Sink Operator
              keys:
                0 '105' (type: string)
                1 '105' (type: string)

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              keys:
                0 '105' (type: string)
                1 '105' (type: string)
              Statistics: Num rows: 275 Data size: 2921 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: '105' (type: string), 'val_105' (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 275 Data size: 2921 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 275 Data size: 2921 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: '105' (type: string)
              sort order: +
              Map-reduce partition columns: '105' (type: string)
              Statistics: Num rows: 125 Data size: 1328 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: '105' (type: string)
              sort order: +
              Map-reduce partition columns: '105' (type: string)
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
          Statistics: Num rows: 275 Data size: 2921 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: '105' (type: string), 'val_105' (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 275 Data size: 2921 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 275 Data size: 2921 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = '105') (type: boolean)
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: '105' (type: string)
                  sort order: +
                  Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Select Operator
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select t2.* 
from
  (select key,value from (select key,value from src) t1 sort by key) t2
  join 
  (select * from src sort by key) t3 
  on (t2.key=t3.key )
  where t2.value='val_105' and t3.key='105'
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select t2.* 
from
  (select key,value from (select key,value from src) t1 sort by key) t2
  join 
  (select * from src sort by key) t3 
  on (t2.key=t3.key )
  where t2.value='val_105' and t3.key='105'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
105	val_105
