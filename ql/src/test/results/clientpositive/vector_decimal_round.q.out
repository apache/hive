PREHOOK: query: create table decimal_tbl_txt (`dec` decimal(10,0)) 
ROW FORMAT DELIMITED
   FIELDS TERMINATED BY ' '
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@decimal_tbl_txt
POSTHOOK: query: create table decimal_tbl_txt (`dec` decimal(10,0)) 
ROW FORMAT DELIMITED
   FIELDS TERMINATED BY ' '
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@decimal_tbl_txt
PREHOOK: query: insert into table decimal_tbl_txt values(101)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@decimal_tbl_txt
POSTHOOK: query: insert into table decimal_tbl_txt values(101)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@decimal_tbl_txt
POSTHOOK: Lineage: decimal_tbl_txt.dec SCRIPT []
PREHOOK: query: select * from decimal_tbl_txt
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_txt
#### A masked pattern was here ####
POSTHOOK: query: select * from decimal_tbl_txt
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_txt
#### A masked pattern was here ####
101
PREHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_txt order by `dec`
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_txt order by `dec`
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_txt
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(10,0)/DECIMAL_64, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: dec (type: decimal(10,0)), round(dec, -1) (type: decimal(11,0))
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 3]
                  selectExpressions: FuncRoundWithNumDigitsDecimalToDecimal(col 2:decimal(10,0), decimalPlaces -1)(children: ConvertDecimal64ToDecimal(col 0:decimal(10,0)/DECIMAL_64) -> 2:decimal(10,0)) -> 3:decimal(11,0)
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: decimal(10,0))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: decimal(11,0))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(10,0)/DECIMAL_64
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(10,0), decimal(11,0)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: decimal(10,0)), VALUE._col0 (type: decimal(11,0))
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_txt order by `dec`
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_txt
#### A masked pattern was here ####
POSTHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_txt order by `dec`
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_txt
#### A masked pattern was here ####
101	100
PREHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_txt order by round(`dec`, -1)
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_txt order by round(`dec`, -1)
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_txt
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(10,0)/DECIMAL_64, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: dec (type: decimal(10,0)), round(dec, -1) (type: decimal(11,0))
              outputColumnNames: _col0, _col2
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 3]
                  selectExpressions: FuncRoundWithNumDigitsDecimalToDecimal(col 2:decimal(10,0), decimalPlaces -1)(children: ConvertDecimal64ToDecimal(col 0:decimal(10,0)/DECIMAL_64) -> 2:decimal(10,0)) -> 3:decimal(11,0)
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col2 (type: decimal(11,0))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: decimal(10,0))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(10,0)/DECIMAL_64
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(10,0), decimal(11,0)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: decimal(10,0)), KEY.reducesinkkey0 (type: decimal(11,0))
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_txt order by round(`dec`, -1)
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_txt
#### A masked pattern was here ####
POSTHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_txt order by round(`dec`, -1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_txt
#### A masked pattern was here ####
101	100
PREHOOK: query: create table decimal_tbl_rc (`dec` decimal(10,0))
row format serde 'org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe' stored as rcfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@decimal_tbl_rc
POSTHOOK: query: create table decimal_tbl_rc (`dec` decimal(10,0))
row format serde 'org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe' stored as rcfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@decimal_tbl_rc
PREHOOK: query: insert into table decimal_tbl_rc values(101)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@decimal_tbl_rc
POSTHOOK: query: insert into table decimal_tbl_rc values(101)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@decimal_tbl_rc
POSTHOOK: Lineage: decimal_tbl_rc.dec SCRIPT []
PREHOOK: query: select * from decimal_tbl_rc
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_rc
#### A masked pattern was here ####
POSTHOOK: query: select * from decimal_tbl_rc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_rc
#### A masked pattern was here ####
101
PREHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_rc order by `dec`
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_rc order by `dec`
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_rc
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(10,0), 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: dec (type: decimal(10,0)), round(dec, -1) (type: decimal(11,0))
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 2]
                  selectExpressions: FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(10,0), decimalPlaces -1) -> 2:decimal(11,0)
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: decimal(10,0))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: decimal(11,0))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.row.serde.deserialize IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.RCFileInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(10,0)
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(11,0)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: decimal(10,0)), VALUE._col0 (type: decimal(11,0))
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_rc order by `dec`
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_rc
#### A masked pattern was here ####
POSTHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_rc order by `dec`
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_rc
#### A masked pattern was here ####
101	100
PREHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_rc order by round(`dec`, -1)
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_rc order by round(`dec`, -1)
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_rc
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(10,0), 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: dec (type: decimal(10,0)), round(dec, -1) (type: decimal(11,0))
              outputColumnNames: _col0, _col2
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 2]
                  selectExpressions: FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(10,0), decimalPlaces -1) -> 2:decimal(11,0)
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col2 (type: decimal(11,0))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: decimal(10,0))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.row.serde.deserialize IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.RCFileInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(10,0)
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(11,0)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: decimal(10,0)), KEY.reducesinkkey0 (type: decimal(11,0))
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_rc order by round(`dec`, -1)
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_rc
#### A masked pattern was here ####
POSTHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_rc order by round(`dec`, -1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_rc
#### A masked pattern was here ####
101	100
PREHOOK: query: create table decimal_tbl_orc (`dec` decimal(10,0))
stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@decimal_tbl_orc
POSTHOOK: query: create table decimal_tbl_orc (`dec` decimal(10,0))
stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@decimal_tbl_orc
PREHOOK: query: insert into table decimal_tbl_orc values(101)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@decimal_tbl_orc
POSTHOOK: query: insert into table decimal_tbl_orc values(101)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@decimal_tbl_orc
POSTHOOK: Lineage: decimal_tbl_orc.dec SCRIPT []
PREHOOK: query: select * from decimal_tbl_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_orc
#### A masked pattern was here ####
POSTHOOK: query: select * from decimal_tbl_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_orc
#### A masked pattern was here ####
101
PREHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_orc order by `dec`
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_orc order by `dec`
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_orc
            Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(10,0)/DECIMAL_64, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: dec (type: decimal(10,0)), round(dec, -1) (type: decimal(11,0))
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 3]
                  selectExpressions: FuncRoundWithNumDigitsDecimalToDecimal(col 2:decimal(10,0), decimalPlaces -1)(children: ConvertDecimal64ToDecimal(col 0:decimal(10,0)/DECIMAL_64) -> 2:decimal(10,0)) -> 3:decimal(11,0)
              Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: decimal(10,0))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: decimal(11,0))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(10,0)/DECIMAL_64
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(10,0), decimal(11,0)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: decimal(10,0)), VALUE._col0 (type: decimal(11,0))
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_orc order by `dec`
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_orc
#### A masked pattern was here ####
POSTHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_orc order by `dec`
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_orc
#### A masked pattern was here ####
101	100
PREHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_orc order by round(`dec`, -1)
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select `dec`, round(`dec`, -1) from decimal_tbl_orc order by round(`dec`, -1)
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_orc
            Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(10,0)/DECIMAL_64, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: dec (type: decimal(10,0)), round(dec, -1) (type: decimal(11,0))
              outputColumnNames: _col0, _col2
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 3]
                  selectExpressions: FuncRoundWithNumDigitsDecimalToDecimal(col 2:decimal(10,0), decimalPlaces -1)(children: ConvertDecimal64ToDecimal(col 0:decimal(10,0)/DECIMAL_64) -> 2:decimal(10,0)) -> 3:decimal(11,0)
              Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col2 (type: decimal(11,0))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: decimal(10,0))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(10,0)/DECIMAL_64
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(10,0), decimal(11,0)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: decimal(10,0)), KEY.reducesinkkey0 (type: decimal(11,0))
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_orc order by round(`dec`, -1)
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_orc
#### A masked pattern was here ####
POSTHOOK: query: select `dec`, round(`dec`, -1) from decimal_tbl_orc order by round(`dec`, -1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_orc
#### A masked pattern was here ####
101	100
