PREHOOK: query: CREATE TABLE T1_n118(a STRING, b STRING, c STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY ' ' STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n118
POSTHOOK: query: CREATE TABLE T1_n118(a STRING, b STRING, c STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY ' ' STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n118
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/grouping_sets1.txt' INTO TABLE T1_n118
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_n118
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/grouping_sets1.txt' INTO TABLE T1_n118
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_n118
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/grouping_sets2.txt' INTO TABLE T1_n118
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_n118
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/grouping_sets2.txt' INTO TABLE T1_n118
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_n118
PREHOOK: query: EXPLAIN
SELECT a, b, avg(c), count(*) from T1_n118 group by a, b with cube
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT a, b, avg(c), count(*) from T1_n118 group by a, b with cube
POSTHOOK: type: QUERY
Explain
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1_n118
            Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: a (type: string), b (type: string), c (type: string)
              outputColumnNames: a, b, c
              Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(c), count(c), count()
                keys: a (type: string), b (type: string), 0L (type: bigint)
                mode: hash
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 4 Data size: 2880 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                  sort order: +++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                  Statistics: Num rows: 4 Data size: 2880 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col3 (type: double), _col4 (type: bigint), _col5 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
          keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: bigint)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col3, _col4, _col5
          Statistics: Num rows: 2 Data size: 1440 Basic stats: COMPLETE Column stats: NONE
          pruneGroupingSetId: true
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), (_col3 / _col4) (type: double), _col5 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 2 Data size: 1440 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 2 Data size: 1440 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN
SELECT a, b, avg(c), count(*) from T1_n118 group by cube(a, b)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT a, b, avg(c), count(*) from T1_n118 group by cube(a, b)
POSTHOOK: type: QUERY
Explain
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1_n118
            Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: a (type: string), b (type: string), c (type: string)
              outputColumnNames: a, b, c
              Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(c), count(c), count()
                keys: a (type: string), b (type: string), 0L (type: bigint)
                mode: hash
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 4 Data size: 2880 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                  sort order: +++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                  Statistics: Num rows: 4 Data size: 2880 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col3 (type: double), _col4 (type: bigint), _col5 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
          keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: bigint)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col3, _col4, _col5
          Statistics: Num rows: 2 Data size: 1440 Basic stats: COMPLETE Column stats: NONE
          pruneGroupingSetId: true
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), (_col3 / _col4) (type: double), _col5 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 2 Data size: 1440 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 2 Data size: 1440 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a, b, avg(c), count(*) from T1_n118 group by a, b with cube
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n118
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b, avg(c), count(*) from T1_n118 group by a, b with cube
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n118
#### A masked pattern was here ####
a	b	_c2	_c3
1	1	3.0	2
1	2	2.0	1
1	NULL	2.6666666666666665	3
2	2	5.333333333333333	3
2	3	5.0	2
2	NULL	5.2	5
3	2	8.0	1
3	NULL	8.0	1
5	1	2.0	1
5	NULL	2.0	1
8	1	1.0	2
8	NULL	1.0	2
NULL	1	2.0	5
NULL	2	5.2	5
NULL	3	5.0	2
NULL	NULL	3.8333333333333335	12
PREHOOK: query: EXPLAIN
SELECT a, b, avg(c), count(*) from T1_n118 group by a, b with cube
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT a, b, avg(c), count(*) from T1_n118 group by a, b with cube
POSTHOOK: type: QUERY
Explain
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1_n118
            Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: a (type: string), b (type: string), c (type: string)
              outputColumnNames: a, b, c
              Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(c), count(c), count()
                keys: a (type: string), b (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: double), _col3 (type: bigint), _col4 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
          keys: KEY._col0 (type: string), KEY._col1 (type: string), 0L (type: bigint)
          mode: partials
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
          Statistics: Num rows: 4 Data size: 2880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
              sort order: +++
              Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
              Statistics: Num rows: 4 Data size: 2880 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col3 (type: double), _col4 (type: bigint), _col5 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
          keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: bigint)
          mode: final
          outputColumnNames: _col0, _col1, _col3, _col4, _col5
          Statistics: Num rows: 2 Data size: 1440 Basic stats: COMPLETE Column stats: NONE
          pruneGroupingSetId: true
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), (_col3 / _col4) (type: double), _col5 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 2 Data size: 1440 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 2 Data size: 1440 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a, b, avg(c), count(*) from T1_n118 group by a, b with cube
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n118
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b, avg(c), count(*) from T1_n118 group by a, b with cube
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n118
#### A masked pattern was here ####
a	b	_c2	_c3
1	1	3.0	2
1	2	2.0	1
1	NULL	2.6666666666666665	3
2	2	5.333333333333333	3
2	3	5.0	2
2	NULL	5.2	5
3	2	8.0	1
3	NULL	8.0	1
5	1	2.0	1
5	NULL	2.0	1
8	1	1.0	2
8	NULL	1.0	2
NULL	1	2.0	5
NULL	2	5.2	5
NULL	3	5.0	2
NULL	NULL	3.8333333333333335	12
