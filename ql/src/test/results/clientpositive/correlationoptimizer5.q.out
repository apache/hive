PREHOOK: query: CREATE TABLE T1(key INT, val STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1
POSTHOOK: query: CREATE TABLE T1(key INT, val STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv1.txt' INTO TABLE T1
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv1.txt' INTO TABLE T1
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1
PREHOOK: query: CREATE TABLE T2(key INT, val STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T2
POSTHOOK: query: CREATE TABLE T2(key INT, val STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv2.txt' INTO TABLE T2
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t2
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv2.txt' INTO TABLE T2
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t2
PREHOOK: query: CREATE TABLE T3(key INT, val STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T3
POSTHOOK: query: CREATE TABLE T3(key INT, val STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T3
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv3.txt' INTO TABLE T3
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t3
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv3.txt' INTO TABLE T3
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t3
PREHOOK: query: CREATE TABLE T4(key INT, val STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T4
POSTHOOK: query: CREATE TABLE T4(key INT, val STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T4
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv5.txt' INTO TABLE T4
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t4
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv5.txt' INTO TABLE T4
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t4
PREHOOK: query: CREATE TABLE dest_co1(key INT, val STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest_co1
POSTHOOK: query: CREATE TABLE dest_co1(key INT, val STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest_co1
PREHOOK: query: CREATE TABLE dest_co2(key INT, val STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest_co2
POSTHOOK: query: CREATE TABLE dest_co2(key INT, val STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest_co2
PREHOOK: query: CREATE TABLE dest_co3(key INT, val STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest_co3
POSTHOOK: query: CREATE TABLE dest_co3(key INT, val STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest_co3
PREHOOK: query: -- When Correlation Optimizer is turned off, 3 MR jobs are needed.
-- When Correlation Optimizer is turned on, only a single MR job is needed.
EXPLAIN
INSERT OVERWRITE TABLE dest_co1
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
PREHOOK: type: QUERY
POSTHOOK: query: -- When Correlation Optimizer is turned off, 3 MR jobs are needed.
-- When Correlation Optimizer is turned on, only a single MR job is needed.
EXPLAIN
INSERT OVERWRITE TABLE dest_co1
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1, Stage-5
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-5 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: x
            Statistics: Num rows: 1453 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 727 Data size: 2908 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: key (type: int)
                sort order: +
                Map-reduce partition columns: key (type: int)
                Statistics: Num rows: 727 Data size: 2908 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: y
            Statistics: Num rows: 1447 Data size: 5791 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 724 Data size: 2897 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: key (type: int)
                sort order: +
                Map-reduce partition columns: key (type: int)
                Statistics: Num rows: 724 Data size: 2897 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 key (type: int)
            1 key (type: int)
          outputColumnNames: _col0
          Statistics: Num rows: 799 Data size: 3198 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: int)
              sort order: +
              Map-reduce partition columns: _col0 (type: int)
              Statistics: Num rows: 799 Data size: 3198 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: int)
              sort order: +
              Map-reduce partition columns: _col0 (type: int)
              Statistics: Num rows: 29 Data size: 118 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col0, _col3
          Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: int), _col3 (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.dest_co1

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_co1

  Stage: Stage-3
    Stats-Aggr Operator

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: m
            Statistics: Num rows: 54 Data size: 216 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: key (type: int)
                sort order: +
                Map-reduce partition columns: key (type: int)
                Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: n
            Statistics: Num rows: 2 Data size: 280 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 140 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: key (type: int)
                sort order: +
                Map-reduce partition columns: key (type: int)
                Statistics: Num rows: 1 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                value expressions: val (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 key (type: int)
            1 key (type: int)
          outputColumnNames: _col0, _col6
          Statistics: Num rows: 29 Data size: 118 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: int), _col6 (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 29 Data size: 118 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

PREHOOK: query: INSERT OVERWRITE TABLE dest_co1
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Input: default@t3
PREHOOK: Input: default@t4
PREHOOK: Output: default@dest_co1
POSTHOOK: query: INSERT OVERWRITE TABLE dest_co1
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t3
POSTHOOK: Input: default@t4
POSTHOOK: Output: default@dest_co1
POSTHOOK: Lineage: dest_co1.key SIMPLE [(t1)x.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: dest_co1.val SIMPLE [(t4)n.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE dest_co2
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE dest_co2
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: x
            Statistics: Num rows: 1453 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 727 Data size: 2908 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: key (type: int)
                sort order: +
                Map-reduce partition columns: key (type: int)
                Statistics: Num rows: 727 Data size: 2908 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: y
            Statistics: Num rows: 1447 Data size: 5791 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 724 Data size: 2897 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: key (type: int)
                sort order: +
                Map-reduce partition columns: key (type: int)
                Statistics: Num rows: 724 Data size: 2897 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: m
            Statistics: Num rows: 54 Data size: 216 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: key (type: int)
                sort order: +
                Map-reduce partition columns: key (type: int)
                Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: n
            Statistics: Num rows: 2 Data size: 280 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 140 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: key (type: int)
                sort order: +
                Map-reduce partition columns: key (type: int)
                Statistics: Num rows: 1 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                value expressions: val (type: string)
      Reduce Operator Tree:
        Demux Operator
          Statistics: Num rows: 1479 Data size: 6053 Basic stats: COMPLETE Column stats: NONE
          Join Operator
            condition map:
                 Inner Join 0 to 1
            keys:
              0 key (type: int)
              1 key (type: int)
            outputColumnNames: _col0
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Mux Operator
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col3
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col3 (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.dest_co2
          Join Operator
            condition map:
                 Inner Join 0 to 1
            keys:
              0 key (type: int)
              1 key (type: int)
            outputColumnNames: _col0, _col6
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Select Operator
              expressions: _col0 (type: int), _col6 (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Mux Operator
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  outputColumnNames: _col0, _col3
                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: int), _col3 (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.dest_co2

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_co2

  Stage: Stage-2
    Stats-Aggr Operator

PREHOOK: query: INSERT OVERWRITE TABLE dest_co2
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Input: default@t3
PREHOOK: Input: default@t4
PREHOOK: Output: default@dest_co2
POSTHOOK: query: INSERT OVERWRITE TABLE dest_co2
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t3
POSTHOOK: Input: default@t4
POSTHOOK: Output: default@dest_co2
POSTHOOK: Lineage: dest_co2.key SIMPLE [(t1)x.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: dest_co2.val SIMPLE [(t4)n.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: -- Enable hive.auto.convert.join.
EXPLAIN
INSERT OVERWRITE TABLE dest_co3
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
PREHOOK: type: QUERY
POSTHOOK: query: -- Enable hive.auto.convert.join.
EXPLAIN
INSERT OVERWRITE TABLE dest_co3
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-14 is a root stage
  Stage-10 depends on stages: Stage-14
  Stage-9 depends on stages: Stage-10, Stage-11 , consists of Stage-12, Stage-13, Stage-2
  Stage-12 has a backup stage: Stage-2
  Stage-7 depends on stages: Stage-12
  Stage-0 depends on stages: Stage-2, Stage-7, Stage-8
  Stage-3 depends on stages: Stage-0
  Stage-13 has a backup stage: Stage-2
  Stage-8 depends on stages: Stage-13
  Stage-2
  Stage-15 is a root stage
  Stage-11 depends on stages: Stage-15

STAGE PLANS:
  Stage: Stage-14
    Map Reduce Local Work
      Alias -> Map Local Tables:
        b:y 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        b:y 
          TableScan
            alias: y
            Statistics: Num rows: 1447 Data size: 5791 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 724 Data size: 2897 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int)
                  1 key (type: int)

  Stage: Stage-10
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: x
            Statistics: Num rows: 1453 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 727 Data size: 2908 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 key (type: int)
                  1 key (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 799 Data size: 3198 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-9
    Conditional Operator

  Stage: Stage-12
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME1 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: int)
                1 _col0 (type: int)

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              keys:
                0 _col0 (type: int)
                1 _col0 (type: int)
              outputColumnNames: _col0, _col3
              Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col3 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_co3
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_co3

  Stage: Stage-3
    Stats-Aggr Operator

  Stage: Stage-13
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: int)
                1 _col0 (type: int)

  Stage: Stage-8
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              keys:
                0 _col0 (type: int)
                1 _col0 (type: int)
              outputColumnNames: _col0, _col3
              Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col3 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest_co3
      Local Work:
        Map Reduce Local Work

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: int)
              sort order: +
              Map-reduce partition columns: _col0 (type: int)
              Statistics: Num rows: 799 Data size: 3198 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: int)
              sort order: +
              Map-reduce partition columns: _col0 (type: int)
              Statistics: Num rows: 29 Data size: 118 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col0, _col3
          Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: int), _col3 (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 878 Data size: 3517 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.dest_co3

  Stage: Stage-15
    Map Reduce Local Work
      Alias -> Map Local Tables:
        d:m 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        d:m 
          TableScan
            alias: m
            Statistics: Num rows: 54 Data size: 216 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int)
                  1 key (type: int)

  Stage: Stage-11
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: n
            Statistics: Num rows: 2 Data size: 280 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 140 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 key (type: int)
                  1 key (type: int)
                outputColumnNames: _col0, _col6
                Statistics: Num rows: 29 Data size: 118 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col6 (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 29 Data size: 118 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

PREHOOK: query: INSERT OVERWRITE TABLE dest_co3
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Input: default@t3
PREHOOK: Input: default@t4
PREHOOK: Output: default@dest_co3
POSTHOOK: query: INSERT OVERWRITE TABLE dest_co3
SELECT b.key, d.val
FROM
(SELECT x.key, x.val FROM T1 x JOIN T2 y ON (x.key = y.key)) b
JOIN
(SELECT m.key, n.val FROM T3 m JOIN T4 n ON (m.key = n.key)) d
ON b.key = d.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Input: default@t3
POSTHOOK: Input: default@t4
POSTHOOK: Output: default@dest_co3
POSTHOOK: Lineage: dest_co3.key SIMPLE [(t1)x.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: dest_co3.val SIMPLE [(t4)n.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: -- dest_co1, dest_co2 and dest_co3 should be same
-- SELECT * FROM dest_co1 x ORDER BY x.key, x.val;
-- SELECT * FROM dest_co2 x ORDER BY x.key, x.val;
SELECT SUM(HASH(key)), SUM(HASH(val)) FROM dest_co1
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_co1
#### A masked pattern was here ####
POSTHOOK: query: -- dest_co1, dest_co2 and dest_co3 should be same
-- SELECT * FROM dest_co1 x ORDER BY x.key, x.val;
-- SELECT * FROM dest_co2 x ORDER BY x.key, x.val;
SELECT SUM(HASH(key)), SUM(HASH(val)) FROM dest_co1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_co1
#### A masked pattern was here ####
8409	7619696771
PREHOOK: query: SELECT SUM(HASH(key)), SUM(HASH(val)) FROM dest_co2
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_co2
#### A masked pattern was here ####
POSTHOOK: query: SELECT SUM(HASH(key)), SUM(HASH(val)) FROM dest_co2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_co2
#### A masked pattern was here ####
8409	7619696771
PREHOOK: query: SELECT SUM(HASH(key)), SUM(HASH(val)) FROM dest_co3
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_co3
#### A masked pattern was here ####
POSTHOOK: query: SELECT SUM(HASH(key)), SUM(HASH(val)) FROM dest_co3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_co3
#### A masked pattern was here ####
8409	7619696771
