PREHOOK: query: drop table t1_n28
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table t1_n28
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table t2_n19
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table t2_n19
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table t1_n28 as select * from src where key < 10
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_n28
POSTHOOK: query: create table t1_n28 as select * from src where key < 10
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_n28
POSTHOOK: Lineage: t1_n28.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: t1_n28.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create table t2_n19 as select * from src where key < 10
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@t2_n19
POSTHOOK: query: create table t2_n19 as select * from src where key < 10
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t2_n19
POSTHOOK: Lineage: t2_n19.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: t2_n19.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create table t3_n6(key string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t3_n6
POSTHOOK: query: create table t3_n6(key string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t3_n6
PREHOOK: query: create table t4_n2(value string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t4_n2
POSTHOOK: query: create table t4_n2(value string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t4_n2
PREHOOK: query: explain
from
(select * from t1_n28
 union all
 select * from t2_n19
) x
insert overwrite table t3_n6
  select key, count(1) group by key
insert overwrite table t4_n2
  select value, count(1) group by value
PREHOOK: type: QUERY
POSTHOOK: query: explain
from
(select * from t1_n28
 union all
 select * from t2_n19
) x
insert overwrite table t3_n6
  select key, count(1) group by key
insert overwrite table t4_n2
  select value, count(1) group by value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0, Stage-4, Stage-7
  Stage-4 depends on stages: Stage-2
  Stage-6 depends on stages: Stage-1, Stage-4, Stage-7
  Stage-5 depends on stages: Stage-2
  Stage-1 depends on stages: Stage-5
  Stage-7 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1_n28
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Union
                Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string)
                  outputColumnNames: _col0
                  Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: count(1)
                    keys: _col0 (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: string)
                      Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: bigint)
                Select Operator
                  expressions: _col1 (type: string)
                  outputColumnNames: _col1
                  Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: count(1)
                    keys: _col1 (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          TableScan
            alias: t2_n19
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Union
                Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string)
                  outputColumnNames: _col0
                  Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: count(1)
                    keys: _col0 (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: string)
                      Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: bigint)
                Select Operator
                  expressions: _col1 (type: string)
                  outputColumnNames: _col1
                  Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: count(1)
                    keys: _col1 (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.t3_n6
            Select Operator
              expressions: _col0 (type: string), _col1 (type: int)
              outputColumnNames: key, cnt
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: compute_stats(key, 'hll'), compute_stats(cnt, 'hll')
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t3_n6

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, cnt
          Column Types: string, int
          Table: default.t3_n6

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-6
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: value, cnt
          Column Types: string, int
          Table: default.t4_n2

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 20 Data size: 140 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.t4_n2
            Select Operator
              expressions: _col0 (type: string), _col1 (type: int)
              outputColumnNames: value, cnt
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: compute_stats(value, 'hll'), compute_stats(cnt, 'hll')
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t4_n2

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

PREHOOK: query: from
(select * from t1_n28
 union all
 select * from t2_n19
) x
insert overwrite table t3_n6
  select key, count(1) group by key
insert overwrite table t4_n2
  select value, count(1) group by value
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n28
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t3_n6
PREHOOK: Output: default@t4_n2
POSTHOOK: query: from
(select * from t1_n28
 union all
 select * from t2_n19
) x
insert overwrite table t3_n6
  select key, count(1) group by key
insert overwrite table t4_n2
  select value, count(1) group by value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n28
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t3_n6
POSTHOOK: Output: default@t4_n2
POSTHOOK: Lineage: t3_n6.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
POSTHOOK: Lineage: t3_n6.key EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t4_n2.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
POSTHOOK: Lineage: t4_n2.value EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:value, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from t3_n6
PREHOOK: type: QUERY
PREHOOK: Input: default@t3_n6
#### A masked pattern was here ####
POSTHOOK: query: select * from t3_n6
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3_n6
#### A masked pattern was here ####
0	6
2	2
4	2
5	6
8	2
9	2
PREHOOK: query: select * from t4_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@t4_n2
#### A masked pattern was here ####
POSTHOOK: query: select * from t4_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t4_n2
#### A masked pattern was here ####
val_0	6
val_2	2
val_4	2
val_5	6
val_8	2
val_9	2
PREHOOK: query: create table t5_n0(c1 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t5_n0
POSTHOOK: query: create table t5_n0(c1 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t5_n0
PREHOOK: query: create table t6_n0(c1 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t6_n0
POSTHOOK: query: create table t6_n0(c1 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t6_n0
PREHOOK: query: explain
from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, count(1) as cnt from t2_n19 group by key
) x
insert overwrite table t5_n0
  select c1, sum(cnt) group by c1
insert overwrite table t6_n0
  select c1, sum(cnt) group by c1
PREHOOK: type: QUERY
POSTHOOK: query: explain
from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, count(1) as cnt from t2_n19 group by key
) x
insert overwrite table t5_n0
  select c1, sum(cnt) group by c1
insert overwrite table t6_n0
  select c1, sum(cnt) group by c1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2, Stage-8
  Stage-0 depends on stages: Stage-3
  Stage-4 depends on stages: Stage-0, Stage-5, Stage-7
  Stage-5 depends on stages: Stage-3
  Stage-6 depends on stages: Stage-1, Stage-5, Stage-7
  Stage-1 depends on stages: Stage-3
  Stage-7 depends on stages: Stage-3
  Stage-8 is a root stage

STAGE PLANS:
  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1_n28
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: string)
                sort order: +
                Map-reduce partition columns: _col0 (type: string)
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: bigint)
          TableScan
            Union
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: string)
                sort order: +
                Map-reduce partition columns: _col0 (type: string)
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: bigint)
      Reduce Operator Tree:
        Forward
          Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(VALUE._col0)
            keys: KEY._col0 (type: string)
            mode: complete
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t5_n0
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: c1, cnt
                Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(c1, 'hll'), compute_stats(cnt, 'hll')
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          Group By Operator
            aggregations: sum(VALUE._col0)
            keys: KEY._col0 (type: string)
            mode: complete
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t6_n0
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: c1, cnt
                Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(c1, 'hll'), compute_stats(cnt, 'hll')
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t5_n0

  Stage: Stage-4
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1, cnt
          Column Types: string, int
          Table: default.t5_n0

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-6
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1, cnt
          Column Types: string, int
          Table: default.t6_n0

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t6_n0

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-8
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t2_n19
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

PREHOOK: query: from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, count(1) as cnt from t2_n19 group by key
) x
insert overwrite table t5_n0
  select c1, sum(cnt) group by c1
insert overwrite table t6_n0
  select c1, sum(cnt) group by c1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n28
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t5_n0
PREHOOK: Output: default@t6_n0
POSTHOOK: query: from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, count(1) as cnt from t2_n19 group by key
) x
insert overwrite table t5_n0
  select c1, sum(cnt) group by c1
insert overwrite table t6_n0
  select c1, sum(cnt) group by c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n28
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t5_n0
POSTHOOK: Output: default@t6_n0
POSTHOOK: Lineage: t5_n0.c1 EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t5_n0.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
POSTHOOK: Lineage: t6_n0.c1 EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t6_n0.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
PREHOOK: query: select * from t5_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@t5_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from t5_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t5_n0
#### A masked pattern was here ####
0	6
2	2
4	2
5	6
8	2
9	2
PREHOOK: query: select * from t6_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@t6_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from t6_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t6_n0
#### A masked pattern was here ####
0	6
2	2
4	2
5	6
8	2
9	2
PREHOOK: query: drop table t1_n28
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t1_n28
PREHOOK: Output: default@t1_n28
POSTHOOK: query: drop table t1_n28
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t1_n28
POSTHOOK: Output: default@t1_n28
PREHOOK: query: drop table t2_n19
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t2_n19
POSTHOOK: query: drop table t2_n19
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t2_n19
PREHOOK: query: create table t1_n28 as select * from src where key < 10
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_n28
POSTHOOK: query: create table t1_n28 as select * from src where key < 10
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_n28
POSTHOOK: Lineage: t1_n28.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: t1_n28.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create table t2_n19 as select key, count(1) as cnt from src where key < 10 group by key
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@t2_n19
POSTHOOK: query: create table t2_n19 as select key, count(1) as cnt from src where key < 10 group by key
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t2_n19
POSTHOOK: Lineage: t2_n19.cnt EXPRESSION [(src)src.null, ]
POSTHOOK: Lineage: t2_n19.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: create table t7_n1(c1 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t7_n1
POSTHOOK: query: create table t7_n1(c1 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t7_n1
PREHOOK: query: create table t8_n0(c1 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t8_n0
POSTHOOK: query: create table t8_n0(c1 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t8_n0
PREHOOK: query: explain
from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, cnt from t2_n19
) x
insert overwrite table t7_n1
  select c1, count(1) group by c1
insert overwrite table t8_n0
  select c1, count(1) group by c1
PREHOOK: type: QUERY
POSTHOOK: query: explain
from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, cnt from t2_n19
) x
insert overwrite table t7_n1
  select c1, count(1) group by c1
insert overwrite table t8_n0
  select c1, count(1) group by c1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-3
  Stage-4 depends on stages: Stage-0, Stage-5, Stage-7
  Stage-5 depends on stages: Stage-3
  Stage-6 depends on stages: Stage-1, Stage-5, Stage-7
  Stage-1 depends on stages: Stage-3
  Stage-7 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1_n28
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string)
            outputColumnNames: _col0
            Statistics: Num rows: 5 Data size: 35 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 11 Data size: 53 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 11 Data size: 53 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 11 Data size: 53 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: t2_n19
            Statistics: Num rows: 6 Data size: 18 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 6 Data size: 18 Basic stats: COMPLETE Column stats: NONE
              Union
                Statistics: Num rows: 11 Data size: 53 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string)
                  outputColumnNames: _col0
                  Statistics: Num rows: 11 Data size: 53 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 11 Data size: 53 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Forward
          Statistics: Num rows: 11 Data size: 53 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: count(1)
            keys: KEY._col0 (type: string)
            mode: complete
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 5 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 5 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 5 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t7_n1
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: c1, cnt
                Statistics: Num rows: 5 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(c1, 'hll'), compute_stats(cnt, 'hll')
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          Group By Operator
            aggregations: count(1)
            keys: KEY._col0 (type: string)
            mode: complete
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 5 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 5 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 5 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t8_n0
              Select Operator
                expressions: _col0 (type: string), _col1 (type: int)
                outputColumnNames: c1, cnt
                Statistics: Num rows: 5 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(c1, 'hll'), compute_stats(cnt, 'hll')
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t7_n1

  Stage: Stage-4
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1, cnt
          Column Types: string, int
          Table: default.t7_n1

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-6
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1, cnt
          Column Types: string, int
          Table: default.t8_n0

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t8_n0

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

PREHOOK: query: from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, cnt from t2_n19
) x
insert overwrite table t7_n1
  select c1, count(1) group by c1
insert overwrite table t8_n0
  select c1, count(1) group by c1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n28
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t7_n1
PREHOOK: Output: default@t8_n0
POSTHOOK: query: from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, cnt from t2_n19
) x
insert overwrite table t7_n1
  select c1, count(1) group by c1
insert overwrite table t8_n0
  select c1, count(1) group by c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n28
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t7_n1
POSTHOOK: Output: default@t8_n0
POSTHOOK: Lineage: t7_n1.c1 EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t7_n1.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
POSTHOOK: Lineage: t8_n0.c1 EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t8_n0.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
PREHOOK: query: select * from t7_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@t7_n1
#### A masked pattern was here ####
POSTHOOK: query: select * from t7_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t7_n1
#### A masked pattern was here ####
0	2
2	2
4	2
5	2
8	2
9	2
PREHOOK: query: select * from t8_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@t8_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from t8_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8_n0
#### A masked pattern was here ####
0	2
2	2
4	2
5	2
8	2
9	2
