PREHOOK: query: explain cbo select   
    sum(ws_net_paid) as total_sum
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
      partition by grouping(i_category)+grouping(i_class),
      case when grouping(i_class) = 0 then i_category end 
      order by sum(ws_net_paid) desc) as rank_within_parent
 from
    impala_tpcds_web_sales
   ,impala_tpcds_date_dim       d1
   ,impala_tpcds_item
 where
    d1.d_month_seq between 1215 and 1215+11
 and d1.d_date_sk = ws_sold_date_sk
 and i_item_sk  = ws_item_sk
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc,
   case when lochierarchy = 0 then i_category end,
   rank_within_parent
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select   
    sum(ws_net_paid) as total_sum
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
      partition by grouping(i_category)+grouping(i_class),
      case when grouping(i_class) = 0 then i_category end 
      order by sum(ws_net_paid) desc) as rank_within_parent
 from
    impala_tpcds_web_sales
   ,impala_tpcds_date_dim       d1
   ,impala_tpcds_item
 where
    d1.d_month_seq between 1215 and 1215+11
 and d1.d_date_sk = ws_sold_date_sk
 and i_item_sk  = ws_item_sk
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc,
   case when lochierarchy = 0 then i_category end,
   rank_within_parent
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaProjectPassthroughRel(total_sum=[$0], i_category=[$1], i_class=[$2], lochierarchy=[$3], rank_within_parent=[$4])
  ImpalaSortRel(sort0=[$3], sort1=[$5], sort2=[$4], dir0=[DESC], dir1=[ASC], dir2=[ASC], fetch=[100])
    ImpalaProjectRel(total_sum=[$0], i_category=[$1], i_class=[$2], lochierarchy=[$4], rank_within_parent=[rank() OVER (PARTITION BY $4, $5 ORDER BY $0 DESC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)], (tok_function when (= (tok_table_or_col lochierarchy) 0) (tok_table_or_col i_category))=[CASE(=($4, 0), $1, null:VARCHAR(2147483647))])
      ImpalaProjectRel($f2=[$2], $f0=[$0], $f1=[$1], GROUPING__ID=[$3], $func_0=[+(GROUPING($3, 1:BIGINT), GROUPING($3, 0:BIGINT))], $func_1=[CASE(=(GROUPING($3, 0:BIGINT), 0), $0, null:VARCHAR(2147483647))])
        ImpalaAggregateRel(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], agg#0=[sum($2)], GROUPING__ID=[GROUPING__ID()])
          ImpalaProjectPassthroughRel($f0=[$6], $f1=[$5], $f2=[$2])
            ImpalaJoinRel(condition=[=($4, $1)], joinType=[inner])
              ImpalaJoinRel(condition=[=($3, $0)], joinType=[inner])
                ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_net_paid=[$29])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $3, 1215, +(1215, 11)), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_class=[$10], i_category=[$12])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])

PREHOOK: query: explain select   
    sum(ws_net_paid) as total_sum
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
      partition by grouping(i_category)+grouping(i_class),
      case when grouping(i_class) = 0 then i_category end 
      order by sum(ws_net_paid) desc) as rank_within_parent
 from
    impala_tpcds_web_sales
   ,impala_tpcds_date_dim       d1
   ,impala_tpcds_item
 where
    d1.d_month_seq between 1215 and 1215+11
 and d1.d_date_sk = ws_sold_date_sk
 and i_item_sk  = ws_item_sk
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc,
   case when lochierarchy = 0 then i_category end,
   rank_within_parent
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select   
    sum(ws_net_paid) as total_sum
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
      partition by grouping(i_category)+grouping(i_class),
      case when grouping(i_class) = 0 then i_category end 
      order by sum(ws_net_paid) desc) as rank_within_parent
 from
    impala_tpcds_web_sales
   ,impala_tpcds_date_dim       d1
   ,impala_tpcds_item
 where
    d1.d_month_seq between 1215 and 1215+11
 and d1.d_date_sk = ws_sold_date_sk
 and i_item_sk  = ws_item_sk
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc,
   case when lochierarchy = 0 then i_category end,
   rank_within_parent
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F07:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=72.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: total_sum, i_category, i_class, lochierarchy, rank_within_parent
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  17:MERGING-EXCHANGE [UNPARTITIONED]
     order by: lochierarchy DESC NULLS FIRST, (tok_function when (= (tok_table_or_col lochierarchy) 0) (tok_table_or_col i_category)) ASC NULLS LAST, rank_within_parent ASC NULLS LAST
     limit: 100
     mem-estimate=72.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=18 row-size=68B cardinality=0
     in pipelines: 11(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=16.07MB mem-reservation=16.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=17, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:TOP-N [LIMIT=100]
  |  order by: lochierarchy DESC NULLS FIRST, (tok_function when (= (tok_table_or_col lochierarchy) 0) (tok_table_or_col i_category)) ASC NULLS LAST, rank_within_parent ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=18 row-size=68B cardinality=0
  |  in pipelines: 11(GETNEXT), 09(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=11 row-size=68B cardinality=0
  |  in pipelines: 09(GETNEXT)
  |
  10:ANALYTIC
  |  functions: _impala_builtins.rank()
  |  partition by: $func_0, $func_1
  |  order by: $f2 DESC
  |  window: RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=16,15 row-size=76B cardinality=0
  |  in pipelines: 09(GETNEXT)
  |
  09:SORT
  |  order by: $func_0 ASC NULLS FIRST, $func_1 ASC NULLS FIRST, $f2 DESC NULLS FIRST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=16 row-size=68B cardinality=0
  |  in pipelines: 09(GETNEXT), 08(OPEN)
  |
  16:EXCHANGE [HASH($func_0,$func_1)]
     mem-estimate=72.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=68B cardinality=0
     in pipelines: 08(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=394.00MB mem-reservation=103.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=16, HASH($func_0,$func_1)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=10 row-size=68B cardinality=0
  |  in pipelines: 08(GETNEXT)
  |
  08:AGGREGATE [FINALIZE]
  |  output: aggif(valid_tid(6,7,8) IN (CAST(6 AS INT), CAST(7 AS INT), CAST(8 AS INT)), CASE valid_tid(6,7,8) WHEN CAST(6 AS INT) THEN _impala_builtins.sum(default.impala_tpcds_web_sales.ws_net_paid) WHEN CAST(7 AS INT) THEN sum(default.impala_tpcds_web_sales.ws_net_paid) WHEN CAST(8 AS INT) THEN sum(default.impala_tpcds_web_sales.ws_net_paid) END), aggif(valid_tid(6,7,8) IN (CAST(6 AS INT), CAST(7 AS INT), CAST(8 AS INT)), CASE valid_tid(6,7,8) WHEN CAST(6 AS INT) THEN CAST(0 AS BIGINT) WHEN CAST(7 AS INT) THEN CAST(1 AS BIGINT) WHEN CAST(8 AS INT) THEN CAST(3 AS BIGINT) END)
  |  group by: CASE valid_tid(6,7,8) WHEN CAST(6 AS INT) THEN default.impala_tpcds_item.i_category WHEN CAST(7 AS INT) THEN default.impala_tpcds_item.i_category WHEN CAST(8 AS INT) THEN NULL END, CASE valid_tid(6,7,8) WHEN CAST(6 AS INT) THEN default.impala_tpcds_item.i_class WHEN CAST(7 AS INT) THEN NULL WHEN CAST(8 AS INT) THEN NULL END, CASE valid_tid(6,7,8) WHEN CAST(6 AS INT) THEN CAST(6 AS INT) WHEN CAST(7 AS INT) THEN CAST(7 AS INT) WHEN CAST(8 AS INT) THEN CAST(8 AS INT) END
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=9 row-size=52B cardinality=0
  |  in pipelines: 08(GETNEXT), 15(OPEN)
  |
  15:AGGREGATE [FINALIZE]
  |  Class 0
  |    output: _impala_builtins.sum:merge(default.impala_tpcds_web_sales.ws_net_paid)
  |    group by: default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_class
  |  Class 1
  |    output: sum:merge(default.impala_tpcds_web_sales.ws_net_paid)
  |    group by: default.impala_tpcds_item.i_category, NULL
  |  Class 2
  |    output: sum:merge(default.impala_tpcds_web_sales.ws_net_paid)
  |    group by: NULL, NULL
  |  mem-estimate=266.00MB mem-reservation=69.94MB thread-reservation=0
  |  tuple-ids=6N,7N,8N row-size=120B cardinality=0
  |  in pipelines: 15(GETNEXT), 02(OPEN)
  |
  14:EXCHANGE [HASH(CASE valid_tid(6,7,8) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_category) WHEN 7 THEN murmur_hash(default.impala_tpcds_item.i_category) WHEN 8 THEN murmur_hash(NULL) END,CASE valid_tid(6,7,8) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 7 THEN murmur_hash(NULL) WHEN 8 THEN murmur_hash(NULL) END)]
     mem-estimate=132.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=6N,7N,8N row-size=120B cardinality=0
     in pipelines: 02(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=269.93MB mem-reservation=73.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=14, HASH(CASE valid_tid(6,7,8) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_category) WHEN 7 THEN murmur_hash(default.impala_tpcds_item.i_category) WHEN 8 THEN murmur_hash(NULL) END,CASE valid_tid(6,7,8) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 7 THEN murmur_hash(NULL) WHEN 8 THEN murmur_hash(NULL) END)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:AGGREGATE [STREAMING]
  |  Class 0
  |    output: sum(default.impala_tpcds_web_sales.ws_net_paid)
  |    group by: default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_class
  |  Class 1
  |    output: sum(default.impala_tpcds_web_sales.ws_net_paid)
  |    group by: default.impala_tpcds_item.i_category, NULL
  |  Class 2
  |    output: sum(default.impala_tpcds_web_sales.ws_net_paid)
  |    group by: NULL, NULL
  |  mem-estimate=266.00MB mem-reservation=70.00MB thread-reservation=0
  |  tuple-ids=6N,7N,8N row-size=120B cardinality=0
  |  in pipelines: 02(GETNEXT)
  |
  06:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=56B cardinality=0
  |  in pipelines: 02(GETNEXT), 05(OPEN)
  |
  |--13:EXCHANGE [BROADCAST]
  |     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=32B cardinality=0
  |     in pipelines: 05(GETNEXT)
  |
  04:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_sold_date_sk = d1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=24B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(OPEN)
  |
  |--12:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=8B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_item_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=16B cardinality=0
     in pipelines: 02(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=12, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SCAN HDFS [default.impala_tpcds_date_dim d1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d1.d_date_sk IS NOT NULL, d1.d_month_seq >= CAST(1215 AS INT) AND d1.d_month_seq <= add(CAST(1215 AS INT), CAST(11 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=8B cardinality=0
     in pipelines: 03(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=13, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=32B cardinality=0
     in pipelines: 05(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

