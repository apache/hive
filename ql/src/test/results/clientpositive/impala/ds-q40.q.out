PREHOOK: query: explain cbo select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('2000-03-18' as date)) 
           then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('2000-03-18' as date)) 
           then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   impala_tpcds_catalog_sales left outer join impala_tpcds_catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,impala_tpcds_warehouse 
  ,impala_tpcds_item
  ,impala_tpcds_date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('2000-03-18' as date) - 30 days)
                and (cast ('2000-03-18' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_returns
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_warehouse
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('2000-03-18' as date)) 
           then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('2000-03-18' as date)) 
           then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   impala_tpcds_catalog_sales left outer join impala_tpcds_catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,impala_tpcds_warehouse 
  ,impala_tpcds_item
  ,impala_tpcds_date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('2000-03-18' as date) - 30 days)
                and (cast ('2000-03-18' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_returns
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_warehouse
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[100])
  ImpalaAggregateRel(group=[{0, 1}], agg#0=[sum($2)], agg#1=[sum($3)])
    ImpalaProjectPassthroughRel($f0=[$9], $f1=[$11], $f2=[CASE($13, -($4, COALESCE($7, 0:DECIMAL(3, 0))), 0:DECIMAL(3, 0))], $f3=[CASE($14, -($4, COALESCE($7, 0:DECIMAL(3, 0))), 0:DECIMAL(3, 0))])
      ImpalaJoinRel(condition=[=($0, $12)], joinType=[inner])
        ImpalaJoinRel(condition=[=($10, $2)], joinType=[inner])
          ImpalaJoinRel(condition=[=($1, $8)], joinType=[inner])
            ImpalaJoinRel(condition=[AND(=($3, $6), =($2, $5))], joinType=[left])
              ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_warehouse_sk=[$14], cs_item_sk=[$15], cs_order_number=[$17], cs_sales_price=[$21])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($14), IS NOT NULL($15), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(cr_item_sk=[$2], cr_order_number=[$16], cr_refunded_cash=[$23])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_returns]], condition=[AND(IS NOT NULL($16), IS NOT NULL($2))])
            ImpalaProjectPassthroughRel(w_warehouse_sk=[$0], w_state=[$10])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_warehouse]], condition=[IS NOT NULL($0)])
          ImpalaProjectPassthroughRel(i_item_sk=[$0], i_item_id=[$1])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(BETWEEN(false, $5, 0.99:DECIMAL(2, 2), 1.49:DECIMAL(3, 2)), IS NOT NULL($0))])
        ImpalaProjectPassthroughRel(d_date_sk=[$0], <=[<(CAST($2):DATE, CAST(_UTF-16LE'2000-03-18':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE)], >==[>=(CAST($2):DATE, CAST(_UTF-16LE'2000-03-18':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE)])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), -(CAST(CAST(_UTF-16LE'2000-03-18':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), 2592000000.000000:INTERVAL MILLISECOND), +(CAST(CAST(_UTF-16LE'2000-03-18':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), 2592000000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])

PREHOOK: query: explain select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('2000-03-18' as date)) 
           then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('2000-03-18' as date)) 
           then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   impala_tpcds_catalog_sales left outer join impala_tpcds_catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,impala_tpcds_warehouse 
  ,impala_tpcds_item
  ,impala_tpcds_date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('2000-03-18' as date) - 30 days)
                and (cast ('2000-03-18' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_returns
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_warehouse
PREHOOK: Output: streaming
POSTHOOK: query: explain select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('2000-03-18' as date)) 
           then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('2000-03-18' as date)) 
           then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   impala_tpcds_catalog_sales left outer join impala_tpcds_catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,impala_tpcds_warehouse 
  ,impala_tpcds_item
  ,impala_tpcds_date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('2000-03-18' as date) - 30 days)
                and (cast ('2000-03-18' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_returns
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_warehouse
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F06:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=60.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpcds_warehouse.w_state, default.impala_tpcds_item.i_item_id, _impala_builtins.sum(CASE WHEN casttodate(default.impala_tpcds_date_dim.d_date) < casttodate('2000-03-18') THEN subtract(default.impala_tpcds_catalog_sales.cs_sales_price, coalesce(default.impala_tpcds_catalog_returns.cr_refunded_cash, 0)) ELSE 0 END), _impala_builtins.sum(CASE WHEN casttodate(default.impala_tpcds_date_dim.d_date) >= casttodate('2000-03-18') THEN subtract(default.impala_tpcds_catalog_sales.cs_sales_price, coalesce(default.impala_tpcds_catalog_returns.cr_refunded_cash, 0)) ELSE 0 END)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  17:MERGING-EXCHANGE [UNPARTITIONED]
     order by: default.impala_tpcds_warehouse.w_state ASC NULLS LAST, default.impala_tpcds_item.i_item_id ASC NULLS LAST
     limit: 100
     mem-estimate=60.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=56B cardinality=0
     in pipelines: 10(GETNEXT)

F05:PLAN FRAGMENT [HASH(default.impala_tpcds_warehouse.w_state,default.impala_tpcds_item.i_item_id)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.06MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=17, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:TOP-N [LIMIT=100]
  |  order by: default.impala_tpcds_warehouse.w_state ASC NULLS LAST, default.impala_tpcds_item.i_item_id ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=11 row-size=56B cardinality=0
  |  in pipelines: 10(GETNEXT), 16(OPEN)
  |
  16:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(CASE WHEN casttodate(default.impala_tpcds_date_dim.d_date) < casttodate('2000-03-18') THEN subtract(default.impala_tpcds_catalog_sales.cs_sales_price, coalesce(default.impala_tpcds_catalog_returns.cr_refunded_cash, 0)) ELSE 0 END), _impala_builtins.sum:merge(CASE WHEN casttodate(default.impala_tpcds_date_dim.d_date) >= casttodate('2000-03-18') THEN subtract(default.impala_tpcds_catalog_sales.cs_sales_price, coalesce(default.impala_tpcds_catalog_returns.cr_refunded_cash, 0)) ELSE 0 END)
  |  group by: default.impala_tpcds_warehouse.w_state, default.impala_tpcds_item.i_item_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=10 row-size=56B cardinality=0
  |  in pipelines: 16(GETNEXT), 00(OPEN)
  |
  15:EXCHANGE [HASH(default.impala_tpcds_warehouse.w_state,default.impala_tpcds_item.i_item_id)]
     mem-estimate=60.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=56B cardinality=0
     in pipelines: 00(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=135.84MB mem-reservation=41.75MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=15, HASH(default.impala_tpcds_warehouse.w_state,default.impala_tpcds_item.i_item_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:AGGREGATE [STREAMING]
  |  output: sum(CASE WHEN casttodate(default.impala_tpcds_date_dim.d_date) < casttodate('2000-03-18') THEN subtract(default.impala_tpcds_catalog_sales.cs_sales_price, coalesce(default.impala_tpcds_catalog_returns.cr_refunded_cash, CAST(0 AS DECIMAL(3,0)))) ELSE CAST(0 AS DECIMAL(3,0)) END), sum(CASE WHEN casttodate(default.impala_tpcds_date_dim.d_date) >= casttodate('2000-03-18') THEN subtract(default.impala_tpcds_catalog_sales.cs_sales_price, coalesce(default.impala_tpcds_catalog_returns.cr_refunded_cash, CAST(0 AS DECIMAL(3,0)))) ELSE CAST(0 AS DECIMAL(3,0)) END)
  |  group by: default.impala_tpcds_warehouse.w_state, default.impala_tpcds_item.i_item_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=10 row-size=56B cardinality=0
  |  in pipelines: 00(GETNEXT)
  |
  08:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2N,4,6,8 row-size=104B cardinality=0
  |  in pipelines: 00(GETNEXT), 07(OPEN)
  |
  |--14:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=16B cardinality=0
  |     in pipelines: 07(GETNEXT)
  |
  06:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2N,4,6 row-size=88B cardinality=0
  |  in pipelines: 00(GETNEXT), 05(OPEN)
  |
  |--13:EXCHANGE [BROADCAST]
  |     mem-estimate=28.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=24B cardinality=0
  |     in pipelines: 05(GETNEXT)
  |
  04:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_warehouse_sk = default.impala_tpcds_warehouse.w_warehouse_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2N,4 row-size=64B cardinality=0
  |  in pipelines: 00(GETNEXT), 03(OPEN)
  |
  |--12:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=16B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_item_sk = default.impala_tpcds_catalog_returns.cr_item_sk, default.impala_tpcds_catalog_sales.cs_order_number = default.impala_tpcds_catalog_returns.cr_order_number
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2N row-size=48B cardinality=0
  |  in pipelines: 00(GETNEXT), 01(OPEN)
  |
  |--11:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=20B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  00:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_sold_date_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_warehouse_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=28B cardinality=0
     in pipelines: 00(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=11, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SCAN HDFS [default.impala_tpcds_catalog_returns, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_returns.cr_item_sk IS NOT NULL, default.impala_tpcds_catalog_returns.cr_order_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=20B cardinality=0
     in pipelines: 01(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=12, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SCAN HDFS [default.impala_tpcds_warehouse, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_warehouse.w_warehouse_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=16B cardinality=0
     in pipelines: 03(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=13, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL, default.impala_tpcds_item.i_current_price >= CAST(0.99 AS DECIMAL(2,2)) AND default.impala_tpcds_item.i_current_price <= CAST(1.49 AS DECIMAL(3,2))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=24B cardinality=0
     in pipelines: 05(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=14, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, casttotimestamp(default.impala_tpcds_date_dim.d_date) >= MILLISECONDS_SUB(casttotimestamp(casttodate('2000-03-18')), INTERVAL CAST(2592000000 AS BIGINT) MILLISECOND) AND casttotimestamp(default.impala_tpcds_date_dim.d_date) <= MILLISECONDS_ADD(casttotimestamp(casttodate('2000-03-18')), INTERVAL CAST(2592000000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=16B cardinality=0
     in pipelines: 07(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

