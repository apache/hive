HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_customer_address
HMS CALL get_table_req FOR impala_tpcds_web_site
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_customer_address
HMS CALL get_foreign_keys FOR impala_tpcds_web_site
HMS CALL get_table_req FOR ws_wh
HMS CALL get_table_req FOR impala_tpcds_web_returns
HMS CALL get_table_req FOR ws_wh
HMS CALL get_foreign_keys FOR impala_tpcds_web_returns
PREHOOK: query: explain cbo physical with ws_wh as
(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2
 from impala_tpcds_web_sales ws1,impala_tpcds_web_sales ws2
 where ws1.ws_order_number = ws2.ws_order_number
   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
 select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   impala_tpcds_web_sales ws1
  ,impala_tpcds_date_dim
  ,impala_tpcds_customer_address
  ,impala_tpcds_web_site
where
    d_date between '2002-4-01' and 
           (cast('2002-4-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'AL'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and ws1.ws_order_number in (select ws_order_number
                            from ws_wh)
and ws1.ws_order_number in (select wr_order_number
                            from impala_tpcds_web_returns,ws_wh
                            where wr_order_number = ws_wh.ws_order_number)
order by count(distinct ws_order_number)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_web_returns
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Input: default@impala_tpcds_web_site
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical with ws_wh as
(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2
 from impala_tpcds_web_sales ws1,impala_tpcds_web_sales ws2
 where ws1.ws_order_number = ws2.ws_order_number
   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
 select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   impala_tpcds_web_sales ws1
  ,impala_tpcds_date_dim
  ,impala_tpcds_customer_address
  ,impala_tpcds_web_site
where
    d_date between '2002-4-01' and 
           (cast('2002-4-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'AL'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and ws1.ws_order_number in (select ws_order_number
                            from ws_wh)
and ws1.ws_order_number in (select wr_order_number
                            from impala_tpcds_web_returns,ws_wh
                            where wr_order_number = ws_wh.ws_order_number)
order by count(distinct ws_order_number)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_web_returns
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Input: default@impala_tpcds_web_site
CBO PLAN:
ImpalaProjectPassthroughRel(order count=[$0], total shipping cost=[$1], total net profit=[$2])
  ImpalaSortRel(sort0=[$3], dir0=[ASC], fetch=[100])
    ImpalaProjectRel(order count=[$0], total shipping cost=[$1], total net profit=[$2], (tok_functiondi count (tok_table_or_col ws_order_number))=[$0])
      ImpalaAggregateRel(group=[{}], agg#0=[count(DISTINCT $3)], agg#1=[sum($4)], agg#2=[sum($5)])
        ImpalaJoinRel(condition=[=($3, $12)], joinType=[semi])
          ImpalaJoinRel(condition=[=($3, $12)], joinType=[semi])
            ImpalaJoinRel(condition=[=($2, $10)], joinType=[inner])
              ImpalaJoinRel(condition=[=($1, $8)], joinType=[inner])
                ImpalaJoinRel(condition=[=($0, $6)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ws_ship_date_sk=[$2], ws_ship_addr_sk=[$11], ws_web_site_sk=[$13], ws_order_number=[$17], ws_ext_ship_cost=[$28], ws_net_profit=[$33])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($17), IS NOT NULL($13), IS NOT NULL($11), IS NOT NULL($2))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0], d_date=[$2])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), CAST(_UTF-16LE'2002-4-01':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):TIMESTAMP(9) NOT NULL, +(CAST(CAST(_UTF-16LE'2002-4-01':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), 5184000000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_state=[CAST(_UTF-16LE'AL':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):VARCHAR(2147483647) CHARACTER SET "UTF-16LE"])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[AND(=($8, _UTF-16LE'AL'), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(web_site_sk=[$0], web_company_name=[CAST(_UTF-16LE'pri':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):VARCHAR(2147483647) CHARACTER SET "UTF-16LE"])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_site]], condition=[AND(=($14, _UTF-16LE'pri'), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(ws_order_number=[$1])
              ImpalaJoinRel(condition=[AND(=($1, $3), <>($0, $2))], joinType=[inner])
                ImpalaProjectPassthroughRel(ws_warehouse_sk=[$15], ws_order_number=[$17])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[IS NOT NULL($17)])
                ImpalaProjectPassthroughRel(ws_warehouse_sk=[$15], ws_order_number=[$17])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[IS NOT NULL($17)])
          ImpalaProjectPassthroughRel(wr_order_number=[$2])
            ImpalaJoinRel(condition=[AND(=($1, $4), <>($0, $3))], joinType=[inner])
              ImpalaJoinRel(condition=[=($2, $1)], joinType=[inner])
                ImpalaProjectPassthroughRel(ws_warehouse_sk=[$15], ws_order_number=[$17])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[IS NOT NULL($17)])
                ImpalaProjectPassthroughRel(wr_order_number=[$13])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_returns]], condition=[IS NOT NULL($13)])
              ImpalaProjectPassthroughRel(ws_warehouse_sk=[$15], ws_order_number=[$17])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[IS NOT NULL($17)])

HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_customer_address
HMS CALL get_table_req FOR impala_tpcds_web_site
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_customer_address
HMS CALL get_foreign_keys FOR impala_tpcds_web_site
HMS CALL get_table_req FOR ws_wh
HMS CALL get_table_req FOR impala_tpcds_web_returns
HMS CALL get_table_req FOR ws_wh
HMS CALL get_foreign_keys FOR impala_tpcds_web_returns
PREHOOK: query: explain with ws_wh as
(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2
 from impala_tpcds_web_sales ws1,impala_tpcds_web_sales ws2
 where ws1.ws_order_number = ws2.ws_order_number
   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
 select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   impala_tpcds_web_sales ws1
  ,impala_tpcds_date_dim
  ,impala_tpcds_customer_address
  ,impala_tpcds_web_site
where
    d_date between '2002-4-01' and 
           (cast('2002-4-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'AL'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and ws1.ws_order_number in (select ws_order_number
                            from ws_wh)
and ws1.ws_order_number in (select wr_order_number
                            from impala_tpcds_web_returns,ws_wh
                            where wr_order_number = ws_wh.ws_order_number)
order by count(distinct ws_order_number)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_web_returns
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Input: default@impala_tpcds_web_site
PREHOOK: Output: streaming
POSTHOOK: query: explain with ws_wh as
(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2
 from impala_tpcds_web_sales ws1,impala_tpcds_web_sales ws2
 where ws1.ws_order_number = ws2.ws_order_number
   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
 select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   impala_tpcds_web_sales ws1
  ,impala_tpcds_date_dim
  ,impala_tpcds_customer_address
  ,impala_tpcds_web_site
where
    d_date between '2002-4-01' and 
           (cast('2002-4-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'AL'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and ws1.ws_order_number in (select ws_order_number
                            from ws_wh)
and ws1.ws_order_number in (select wr_order_number
                            from impala_tpcds_web_returns,ws_wh
                            where wr_order_number = ws_wh.ws_order_number)
order by count(distinct ws_order_number)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_web_returns
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Input: default@impala_tpcds_web_site
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F11:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=32.05KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: count(ws1.ws_order_number), sum(ws1.ws_ext_ship_cost), sum(ws1.ws_net_profit)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  20:TOP-N [LIMIT=100]
  |  order by: count(ws1.ws_order_number) ASC NULLS LAST
  |  mem-estimate=48B mem-reservation=0B thread-reservation=0
  |  tuple-ids=21 row-size=48B cardinality=1
  |  in pipelines: 20(GETNEXT), 32(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=20 row-size=48B cardinality=1
  |  in pipelines: 32(GETNEXT)
  |
  32:AGGREGATE [FINALIZE]
  |  output: count:merge(ws1.ws_order_number), sum:merge(ws1.ws_ext_ship_cost), sum:merge(ws1.ws_net_profit)
  |  mem-estimate=16.00KB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=19 row-size=40B cardinality=1
  |  in pipelines: 32(GETNEXT), 19(OPEN)
  |
  31:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=19 row-size=40B cardinality=1
     in pipelines: 19(GETNEXT)

F09:PLAN FRAGMENT [HASH(ws1.ws_order_number)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.04MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F11, EXCHANGE=31, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  19:AGGREGATE
  |  output: count(ws1.ws_order_number), sum:merge(ws1.ws_ext_ship_cost), sum:merge(ws1.ws_net_profit)
  |  mem-estimate=16.00KB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=19 row-size=40B cardinality=1
  |  in pipelines: 19(GETNEXT), 30(OPEN)
  |
  30:AGGREGATE
  |  output: sum:merge(ws1.ws_ext_ship_cost), sum:merge(ws1.ws_net_profit)
  |  group by: ws1.ws_order_number
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=18 row-size=40B cardinality=0
  |  in pipelines: 30(GETNEXT), 01(OPEN)
  |
  29:EXCHANGE [HASH(ws1.ws_order_number)]
     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=18 row-size=40B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=137.82MB mem-reservation=43.69MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F09, EXCHANGE=29, HASH(ws1.ws_order_number)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  18:AGGREGATE [STREAMING]
  |  output: sum(ws1.ws_ext_ship_cost), sum(ws1.ws_net_profit)
  |  group by: ws1.ws_order_number
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=18 row-size=40B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  17:HASH JOIN [LEFT SEMI JOIN, BROADCAST]
  |  hash predicates: ws1.ws_order_number = default.impala_tpcds_web_returns.wr_order_number
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6 row-size=76B cardinality=0
  |  in pipelines: 01(GETNEXT), 12(OPEN)
  |
  |--28:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=12,14,16 row-size=32B cardinality=0
  |     in pipelines: 12(GETNEXT)
  |
  11:HASH JOIN [LEFT SEMI JOIN, BROADCAST]
  |  hash predicates: ws1.ws_order_number = ws1_0.ws_order_number
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6 row-size=76B cardinality=0
  |  in pipelines: 01(GETNEXT), 08(OPEN)
  |
  |--25:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8,10 row-size=24B cardinality=0
  |     in pipelines: 08(GETNEXT)
  |
  07:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws1.ws_web_site_sk = default.impala_tpcds_web_site.web_site_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6 row-size=76B cardinality=0
  |  in pipelines: 01(GETNEXT), 06(OPEN)
  |
  |--23:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=16B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws1.ws_ship_addr_sk = default.impala_tpcds_customer_address.ca_address_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=60B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--22:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=16B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws1.ws_ship_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=44B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--21:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=16B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_web_sales ws1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ws1.ws_order_number IS NOT NULL, ws1.ws_ship_addr_sk IS NOT NULL, ws1.ws_ship_date_sk IS NOT NULL, ws1.ws_web_site_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=28B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=21, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, casttotimestamp(default.impala_tpcds_date_dim.d_date) >= casttotimestamp('2002-4-01') AND casttotimestamp(default.impala_tpcds_date_dim.d_date) <= MILLISECONDS_ADD(casttotimestamp(casttodate('2002-4-01')), INTERVAL CAST(5184000000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=16B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=22, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address.ca_address_sk IS NOT NULL, default.impala_tpcds_customer_address.ca_state = 'AL'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_customer_address.ca_state = 'AL'
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=16B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=23, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:SCAN HDFS [default.impala_tpcds_web_site, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_site.web_site_sk IS NOT NULL, default.impala_tpcds_web_site.web_company_name = 'pri'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_web_site.web_company_name = 'pri'
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=16B cardinality=0
     in pipelines: 06(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=25, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws1_0.ws_order_number = ws2.ws_order_number
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: ws1_0.ws_warehouse_sk != ws2.ws_warehouse_sk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=8,10 row-size=24B cardinality=0
  |  in pipelines: 08(GETNEXT), 09(OPEN)
  |
  |--24:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=10 row-size=12B cardinality=0
  |     in pipelines: 09(GETNEXT)
  |
  08:SCAN HDFS [default.impala_tpcds_web_sales ws1_0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ws1_0.ws_order_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=12B cardinality=0
     in pipelines: 08(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=24, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:SCAN HDFS [default.impala_tpcds_web_sales ws2, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ws2.ws_order_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=12B cardinality=0
     in pipelines: 09(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=3.91MB mem-reservation=3.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=28, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  16:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws1_1.ws_order_number = ws2_0.ws_order_number
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: ws1_1.ws_warehouse_sk != ws2_0.ws_warehouse_sk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=12,14,16 row-size=32B cardinality=0
  |  in pipelines: 12(GETNEXT), 15(OPEN)
  |
  |--27:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=16 row-size=12B cardinality=0
  |     in pipelines: 15(GETNEXT)
  |
  14:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws1_1.ws_order_number = default.impala_tpcds_web_returns.wr_order_number
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=12,14 row-size=20B cardinality=0
  |  in pipelines: 12(GETNEXT), 13(OPEN)
  |
  |--26:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=14 row-size=8B cardinality=0
  |     in pipelines: 13(GETNEXT)
  |
  12:SCAN HDFS [default.impala_tpcds_web_sales ws1_1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ws1_1.ws_order_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=12B cardinality=0
     in pipelines: 12(GETNEXT)

F07:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=26, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:SCAN HDFS [default.impala_tpcds_web_returns, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_returns.wr_order_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=14 row-size=8B cardinality=0
     in pipelines: 13(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=27, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  15:SCAN HDFS [default.impala_tpcds_web_sales ws2_0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ws2_0.ws_order_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=16 row-size=12B cardinality=0
     in pipelines: 15(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

