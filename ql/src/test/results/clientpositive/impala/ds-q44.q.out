HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_item
PREHOOK: query: explain cbo physical select  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing
from(select *
     from (select item_sk,rank() over (order by rank_col asc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col 
                 from impala_tpcds_store_sales ss1
                 where ss_store_sk = 410
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from impala_tpcds_store_sales
                                                  where ss_store_sk = 410
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V1)V11
     where rnk  < 11) asceding,
    (select *
     from (select item_sk,rank() over (order by rank_col desc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col
                 from impala_tpcds_store_sales ss1
                 where ss_store_sk = 410
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from impala_tpcds_store_sales
                                                  where ss_store_sk = 410
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V2)V21
     where rnk  < 11) descending,
impala_tpcds_item i1,
impala_tpcds_item i2
where asceding.rnk = descending.rnk 
  and i1.i_item_sk=asceding.item_sk
  and i2.i_item_sk=descending.item_sk
order by asceding.rnk
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical select  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing
from(select *
     from (select item_sk,rank() over (order by rank_col asc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col 
                 from impala_tpcds_store_sales ss1
                 where ss_store_sk = 410
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from impala_tpcds_store_sales
                                                  where ss_store_sk = 410
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V1)V11
     where rnk  < 11) asceding,
    (select *
     from (select item_sk,rank() over (order by rank_col desc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col
                 from impala_tpcds_store_sales ss1
                 where ss_store_sk = 410
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from impala_tpcds_store_sales
                                                  where ss_store_sk = 410
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V2)V21
     where rnk  < 11) descending,
impala_tpcds_item i1,
impala_tpcds_item i2
where asceding.rnk = descending.rnk 
  and i1.i_item_sk=asceding.item_sk
  and i2.i_item_sk=descending.item_sk
order by asceding.rnk
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store_sales
CBO PLAN:
ImpalaSortRel(sort0=[$0], dir0=[ASC], fetch=[100])
  ImpalaProjectRel(rnk=[$3], best_performing=[$1], worst_performing=[$7])
    ImpalaJoinRel(condition=[=($3, $5)], joinType=[inner])
      ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
        ImpalaProjectPassthroughRel(i_item_sk=[$0], i_product_name=[$21])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])
        ImpalaProjectRel(item_sk=[$0], rank_window_0=[rank() OVER (ORDER BY $1 NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)], condition=[AND(<($1, 11), IS NOT NULL($0))])
          ImpalaJoinRel(condition=[true], joinType=[inner])
            ImpalaJoinRel(condition=[>($1, $2)], joinType=[inner])
              ImpalaProjectPassthroughRel($f0=[$0], $f1=[CAST(/($1, CAST($2):DECIMAL(19, 0))):DECIMAL(11, 6)])
                ImpalaAggregateRel(group=[{1}], agg#0=[sum($21)], agg#1=[count($21)], condition=[IS NOT NULL(CAST(/($1, CAST($2):DECIMAL(19, 0))):DECIMAL(11, 6))])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[=($6, 410)])
              ImpalaProjectPassthroughRel(*=[*(0.9:DECIMAL(1, 1), CAST(/($1, CAST($2):DECIMAL(19, 0))):DECIMAL(11, 6))])
                ImpalaAggregateRel(group=[{0}], agg#0=[sum($1)], agg#1=[count($1)], condition=[IS NOT NULL(CAST(/($1, CAST($2):DECIMAL(19, 0))):DECIMAL(11, 6))])
                  ImpalaProjectPassthroughRel($f0=[true], $f1=[$21])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(=($6, 410), IS NULL($4))])
            ImpalaCardinalityCheckRel
              ImpalaAggregateRel(group=[{0}])
                ImpalaProjectPassthroughRel($f0=[true], $f1=[$21])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(=($6, 410), IS NULL($4))])
      ImpalaJoinRel(condition=[=($2, $0)], joinType=[inner])
        ImpalaProjectRel(item_sk=[$0], rank_window_0=[rank() OVER (ORDER BY $1 DESC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)], condition=[AND(<($1, 11), IS NOT NULL($0))])
          ImpalaJoinRel(condition=[true], joinType=[inner])
            ImpalaJoinRel(condition=[>($1, $2)], joinType=[inner])
              ImpalaProjectPassthroughRel($f0=[$0], $f1=[CAST(/($1, CAST($2):DECIMAL(19, 0))):DECIMAL(11, 6)])
                ImpalaAggregateRel(group=[{1}], agg#0=[sum($21)], agg#1=[count($21)], condition=[IS NOT NULL(CAST(/($1, CAST($2):DECIMAL(19, 0))):DECIMAL(11, 6))])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[=($6, 410)])
              ImpalaProjectPassthroughRel(*=[*(0.9:DECIMAL(1, 1), CAST(/($1, CAST($2):DECIMAL(19, 0))):DECIMAL(11, 6))])
                ImpalaAggregateRel(group=[{0}], agg#0=[sum($1)], agg#1=[count($1)], condition=[IS NOT NULL(CAST(/($1, CAST($2):DECIMAL(19, 0))):DECIMAL(11, 6))])
                  ImpalaProjectPassthroughRel($f0=[true], $f1=[$21])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(=($6, 410), IS NULL($4))])
            ImpalaCardinalityCheckRel
              ImpalaAggregateRel(group=[{0}])
                ImpalaProjectPassthroughRel($f0=[true], $f1=[$21])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(=($6, 410), IS NULL($4))])
        ImpalaProjectPassthroughRel(i_item_sk=[$0], i_product_name=[$21])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])

HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_item
PREHOOK: query: explain select  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing
from(select *
     from (select item_sk,rank() over (order by rank_col asc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col 
                 from impala_tpcds_store_sales ss1
                 where ss_store_sk = 410
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from impala_tpcds_store_sales
                                                  where ss_store_sk = 410
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V1)V11
     where rnk  < 11) asceding,
    (select *
     from (select item_sk,rank() over (order by rank_col desc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col
                 from impala_tpcds_store_sales ss1
                 where ss_store_sk = 410
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from impala_tpcds_store_sales
                                                  where ss_store_sk = 410
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V2)V21
     where rnk  < 11) descending,
impala_tpcds_item i1,
impala_tpcds_item i2
where asceding.rnk = descending.rnk 
  and i1.i_item_sk=asceding.item_sk
  and i2.i_item_sk=descending.item_sk
order by asceding.rnk
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain select  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing
from(select *
     from (select item_sk,rank() over (order by rank_col asc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col 
                 from impala_tpcds_store_sales ss1
                 where ss_store_sk = 410
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from impala_tpcds_store_sales
                                                  where ss_store_sk = 410
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V1)V11
     where rnk  < 11) asceding,
    (select *
     from (select item_sk,rank() over (order by rank_col desc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col
                 from impala_tpcds_store_sales ss1
                 where ss_store_sk = 410
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from impala_tpcds_store_sales
                                                  where ss_store_sk = 410
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V2)V21
     where rnk  < 11) descending,
impala_tpcds_item i1,
impala_tpcds_item i2
where asceding.rnk = descending.rnk 
  and i1.i_item_sk=asceding.item_sk
  and i2.i_item_sk=descending.item_sk
order by asceding.rnk
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store_sales
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F19:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=36.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: rank(), i1.i_product_name, i2.i_product_name
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  54:MERGING-EXCHANGE [UNPARTITIONED]
     order by: rank() ASC NULLS LAST
     limit: 100
     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=33 row-size=32B cardinality=0
     in pipelines: 32(GETNEXT)

F18:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=3.94MB mem-reservation=3.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F19, EXCHANGE=54, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  32:TOP-N [LIMIT=100]
  |  order by: rank() ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=33 row-size=32B cardinality=0
  |  in pipelines: 32(GETNEXT), 01(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=32 row-size=32B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  31:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: rank() = rank()
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,15,29,30 row-size=72B cardinality=0
  |  in pipelines: 01(GETNEXT), 26(OPEN)
  |
  |--53:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=29,30 row-size=36B cardinality=0
  |     in pipelines: 26(GETNEXT)
  |
  15:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: i1.i_item_sk = ss1.ss_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,15 row-size=36B cardinality=0
  |  in pipelines: 01(GETNEXT), 12(OPEN)
  |
  |--42:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=15 row-size=16B cardinality=0
  |     in pipelines: 12(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_item i1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: i1.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=20B cardinality=0
     in pipelines: 01(GETNEXT)

F08:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.06MB mem-reservation=10.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=42, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:SELECT
  |  predicates: ss1.ss_item_sk IS NOT NULL, rank() < CAST(11 AS BIGINT)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=15 row-size=16B cardinality=0
  |  in pipelines: 12(GETNEXT)
  |
  02:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=15 row-size=16B cardinality=0
  |  in pipelines: 12(GETNEXT)
  |
  13:ANALYTIC
  |  functions: rank()
  |  order by: casttodecimal(divide(sum(ss1.ss_net_profit), casttodecimal(count(ss1.ss_net_profit)))) ASC
  |  window: RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13,12 row-size=74B cardinality=0
  |  in pipelines: 12(GETNEXT)
  |
  12:SORT
  |  order by: casttodecimal(divide(sum(ss1.ss_net_profit), casttodecimal(count(ss1.ss_net_profit)))) ASC NULLS LAST
  |  materialized: casttodecimal(divide(sum(ss1.ss_net_profit), casttodecimal(count(ss1.ss_net_profit))))
  |  mem-estimate=6.00MB mem-reservation=6.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=66B cardinality=0
  |  in pipelines: 12(GETNEXT), 10(OPEN)
  |
  11:NESTED LOOP JOIN [CROSS JOIN, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=7,3,5 row-size=58B cardinality=0
  |  in pipelines: 10(GETNEXT), 37(OPEN)
  |
  |--41:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=65.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3,5 row-size=57B cardinality=0
  |     in pipelines: 37(GETNEXT)
  |
  10:CARDINALITY CHECK
  |  limit: 1
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=7 row-size=1B cardinality=1
  |  in pipelines: 10(GETNEXT), 34(OPEN)
  |
  35:EXCHANGE [UNPARTITIONED]
     limit: 2
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=1B cardinality=0
     in pipelines: 34(GETNEXT)

F02:PLAN FRAGMENT [HASH(TRUE)] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=35, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  34:AGGREGATE [FINALIZE]
  |  group by: TRUE
  |  limit: 2
  |  mem-estimate=10.00MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=7 row-size=1B cardinality=0
  |  in pipelines: 34(GETNEXT), 08(OPEN)
  |
  33:EXCHANGE [HASH(TRUE)]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=1B cardinality=0
     in pipelines: 08(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.00MB mem-reservation=2.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=33, HASH(TRUE)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:AGGREGATE [STREAMING]
  |  group by: TRUE
  |  mem-estimate=10.00MB mem-reservation=2.00MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=7 row-size=1B cardinality=0
  |  in pipelines: 08(GETNEXT)
  |
  08:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_0.ss_hdemo_sk IS NULL, default.impala_tpcds_store_sales_0.ss_store_sk = CAST(410 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: []
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=12B cardinality=0
     in pipelines: 08(GETNEXT)

F05:PLAN FRAGMENT [HASH(ss1.ss_item_sk)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.06MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=41, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:NESTED LOOP JOIN [INNER JOIN, BROADCAST]
  |  join predicates: casttodecimal(divide(sum(ss1.ss_net_profit), casttodecimal(count(ss1.ss_net_profit)))) > multiply(CAST(0.9 AS DECIMAL(1,1)), casttodecimal(divide(sum(default.impala_tpcds_store_sales.ss_net_profit), casttodecimal(count(default.impala_tpcds_store_sales.ss_net_profit)))))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=3,5 row-size=57B cardinality=0
  |  in pipelines: 37(GETNEXT), 39(OPEN)
  |
  |--40:EXCHANGE [BROADCAST]
  |     mem-estimate=29.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=5 row-size=25B cardinality=0
  |     in pipelines: 39(GETNEXT)
  |
  37:AGGREGATE [FINALIZE]
  |  output: sum:merge(ss1.ss_net_profit), count:merge(ss1.ss_net_profit)
  |  group by: ss1.ss_item_sk
  |  having: casttodecimal(divide(sum(ss1.ss_net_profit), casttodecimal(count(ss1.ss_net_profit)))) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=3 row-size=32B cardinality=0
  |  in pipelines: 37(GETNEXT), 03(OPEN)
  |
  36:EXCHANGE [HASH(ss1.ss_item_sk)]
     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=32B cardinality=0
     in pipelines: 03(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=36, HASH(ss1.ss_item_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:AGGREGATE [STREAMING]
  |  output: sum(ss1.ss_net_profit), count(ss1.ss_net_profit)
  |  group by: ss1.ss_item_sk
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=3 row-size=32B cardinality=0
  |  in pipelines: 03(GETNEXT)
  |
  03:SCAN HDFS [default.impala_tpcds_store_sales ss1, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: ss1.ss_store_sk = CAST(410 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: []
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=16B cardinality=0
     in pipelines: 03(GETNEXT)

F07:PLAN FRAGMENT [HASH(TRUE)] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.03MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=40, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  39:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_store_sales.ss_net_profit), count:merge(default.impala_tpcds_store_sales.ss_net_profit)
  |  group by: TRUE
  |  having: casttodecimal(divide(sum(default.impala_tpcds_store_sales.ss_net_profit), casttodecimal(count(default.impala_tpcds_store_sales.ss_net_profit)))) IS NOT NULL
  |  mem-estimate=10.00MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5 row-size=25B cardinality=0
  |  in pipelines: 39(GETNEXT), 05(OPEN)
  |
  38:EXCHANGE [HASH(TRUE)]
     mem-estimate=29.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=25B cardinality=0
     in pipelines: 05(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.00MB mem-reservation=2.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=38, HASH(TRUE)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales.ss_net_profit), count(default.impala_tpcds_store_sales.ss_net_profit)
  |  group by: TRUE
  |  mem-estimate=10.00MB mem-reservation=2.00MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5 row-size=25B cardinality=0
  |  in pipelines: 05(GETNEXT)
  |
  05:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_hdemo_sk IS NULL, default.impala_tpcds_store_sales.ss_store_sk = CAST(410 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: []
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=12B cardinality=0
     in pipelines: 05(GETNEXT)

F16:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=12.02MB mem-reservation=11.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=53, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  30:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ss1_0.ss_item_sk = i2.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=29,30 row-size=36B cardinality=0
  |  in pipelines: 26(GETNEXT), 29(OPEN)
  |
  |--52:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=30 row-size=20B cardinality=0
  |     in pipelines: 29(GETNEXT)
  |
  28:SELECT
  |  predicates: ss1_0.ss_item_sk IS NOT NULL, rank() < CAST(11 AS BIGINT)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=29 row-size=16B cardinality=0
  |  in pipelines: 26(GETNEXT)
  |
  16:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=29 row-size=16B cardinality=0
  |  in pipelines: 26(GETNEXT)
  |
  27:ANALYTIC
  |  functions: rank()
  |  order by: casttodecimal(divide(sum(ss1_0.ss_net_profit), casttodecimal(count(ss1_0.ss_net_profit)))) DESC
  |  window: RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=27,26 row-size=74B cardinality=0
  |  in pipelines: 26(GETNEXT)
  |
  26:SORT
  |  order by: casttodecimal(divide(sum(ss1_0.ss_net_profit), casttodecimal(count(ss1_0.ss_net_profit)))) DESC NULLS FIRST
  |  materialized: casttodecimal(divide(sum(ss1_0.ss_net_profit), casttodecimal(count(ss1_0.ss_net_profit))))
  |  mem-estimate=6.00MB mem-reservation=6.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=27 row-size=66B cardinality=0
  |  in pipelines: 26(GETNEXT), 24(OPEN)
  |
  25:NESTED LOOP JOIN [CROSS JOIN, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=21,17,19 row-size=58B cardinality=0
  |  in pipelines: 24(GETNEXT), 47(OPEN)
  |
  |--51:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=65.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=17,19 row-size=57B cardinality=0
  |     in pipelines: 47(GETNEXT)
  |
  24:CARDINALITY CHECK
  |  limit: 1
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=21 row-size=1B cardinality=1
  |  in pipelines: 24(GETNEXT), 44(OPEN)
  |
  45:EXCHANGE [UNPARTITIONED]
     limit: 2
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=1B cardinality=0
     in pipelines: 44(GETNEXT)

F10:PLAN FRAGMENT [HASH(TRUE)] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=45, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  44:AGGREGATE [FINALIZE]
  |  group by: TRUE
  |  limit: 2
  |  mem-estimate=10.00MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=21 row-size=1B cardinality=0
  |  in pipelines: 44(GETNEXT), 22(OPEN)
  |
  43:EXCHANGE [HASH(TRUE)]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=1B cardinality=0
     in pipelines: 22(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.00MB mem-reservation=2.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F10, EXCHANGE=43, HASH(TRUE)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  23:AGGREGATE [STREAMING]
  |  group by: TRUE
  |  mem-estimate=10.00MB mem-reservation=2.00MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=21 row-size=1B cardinality=0
  |  in pipelines: 22(GETNEXT)
  |
  22:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_2.ss_hdemo_sk IS NULL, default.impala_tpcds_store_sales_2.ss_store_sk = CAST(410 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: []
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=20 row-size=12B cardinality=0
     in pipelines: 22(GETNEXT)

F13:PLAN FRAGMENT [HASH(ss1_0.ss_item_sk)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.06MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=51, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  21:NESTED LOOP JOIN [INNER JOIN, BROADCAST]
  |  join predicates: casttodecimal(divide(sum(ss1_0.ss_net_profit), casttodecimal(count(ss1_0.ss_net_profit)))) > multiply(CAST(0.9 AS DECIMAL(1,1)), casttodecimal(divide(sum(default.impala_tpcds_store_sales_1.ss_net_profit), casttodecimal(count(default.impala_tpcds_store_sales_1.ss_net_profit)))))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=17,19 row-size=57B cardinality=0
  |  in pipelines: 47(GETNEXT), 49(OPEN)
  |
  |--50:EXCHANGE [BROADCAST]
  |     mem-estimate=29.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=19 row-size=25B cardinality=0
  |     in pipelines: 49(GETNEXT)
  |
  47:AGGREGATE [FINALIZE]
  |  output: sum:merge(ss1_0.ss_net_profit), count:merge(ss1_0.ss_net_profit)
  |  group by: ss1_0.ss_item_sk
  |  having: casttodecimal(divide(sum(ss1_0.ss_net_profit), casttodecimal(count(ss1_0.ss_net_profit)))) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=17 row-size=32B cardinality=0
  |  in pipelines: 47(GETNEXT), 17(OPEN)
  |
  46:EXCHANGE [HASH(ss1_0.ss_item_sk)]
     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=32B cardinality=0
     in pipelines: 17(GETNEXT)

F12:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F13, EXCHANGE=46, HASH(ss1_0.ss_item_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  18:AGGREGATE [STREAMING]
  |  output: sum(ss1_0.ss_net_profit), count(ss1_0.ss_net_profit)
  |  group by: ss1_0.ss_item_sk
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=17 row-size=32B cardinality=0
  |  in pipelines: 17(GETNEXT)
  |
  17:SCAN HDFS [default.impala_tpcds_store_sales ss1_0, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: ss1_0.ss_store_sk = CAST(410 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: []
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=16 row-size=16B cardinality=0
     in pipelines: 17(GETNEXT)

F15:PLAN FRAGMENT [HASH(TRUE)] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.03MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F13, EXCHANGE=50, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  49:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_store_sales_1.ss_net_profit), count:merge(default.impala_tpcds_store_sales_1.ss_net_profit)
  |  group by: TRUE
  |  having: casttodecimal(divide(sum(default.impala_tpcds_store_sales_1.ss_net_profit), casttodecimal(count(default.impala_tpcds_store_sales_1.ss_net_profit)))) IS NOT NULL
  |  mem-estimate=10.00MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=19 row-size=25B cardinality=0
  |  in pipelines: 49(GETNEXT), 19(OPEN)
  |
  48:EXCHANGE [HASH(TRUE)]
     mem-estimate=29.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=19 row-size=25B cardinality=0
     in pipelines: 19(GETNEXT)

F14:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.00MB mem-reservation=2.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F15, EXCHANGE=48, HASH(TRUE)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  20:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales_1.ss_net_profit), count(default.impala_tpcds_store_sales_1.ss_net_profit)
  |  group by: TRUE
  |  mem-estimate=10.00MB mem-reservation=2.00MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=19 row-size=25B cardinality=0
  |  in pipelines: 19(GETNEXT)
  |
  19:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_1.ss_hdemo_sk IS NULL, default.impala_tpcds_store_sales_1.ss_store_sk = CAST(410 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: []
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=18 row-size=12B cardinality=0
     in pipelines: 19(GETNEXT)

F17:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=52, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  29:SCAN HDFS [default.impala_tpcds_item i2, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: i2.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=30 row-size=20B cardinality=0
     in pipelines: 29(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

