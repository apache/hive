PREHOOK: query: explain cbo select
  *
from (
  select
    ps_partkey,
    sum(ps_supplycost * ps_availqty) as value
  from
    impala_tpch_partsupp,
    impala_tpch_supplier,
    impala_tpch_nation
  where
    ps_suppkey = s_suppkey
    and s_nationkey = n_nationkey
    and n_name = 'GERMANY'
  group by
    ps_partkey
) as inner_query
where 
  value > (
    select
      sum(ps_supplycost * ps_availqty) * 0.0001
    from
      impala_tpch_partsupp,
      impala_tpch_supplier,
      impala_tpch_nation
    where
      ps_suppkey = s_suppkey
      and s_nationkey = n_nationkey
      and n_name = 'GERMANY'
  )
order by
  value desc
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_nation
PREHOOK: Input: default@impala_tpch_partsupp
PREHOOK: Input: default@impala_tpch_supplier
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select
  *
from (
  select
    ps_partkey,
    sum(ps_supplycost * ps_availqty) as value
  from
    impala_tpch_partsupp,
    impala_tpch_supplier,
    impala_tpch_nation
  where
    ps_suppkey = s_suppkey
    and s_nationkey = n_nationkey
    and n_name = 'GERMANY'
  group by
    ps_partkey
) as inner_query
where 
  value > (
    select
      sum(ps_supplycost * ps_availqty) * 0.0001
    from
      impala_tpch_partsupp,
      impala_tpch_supplier,
      impala_tpch_nation
    where
      ps_suppkey = s_suppkey
      and s_nationkey = n_nationkey
      and n_name = 'GERMANY'
  )
order by
  value desc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_nation
POSTHOOK: Input: default@impala_tpch_partsupp
POSTHOOK: Input: default@impala_tpch_supplier
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaSortRel(sort0=[$1], dir0=[DESC])
  ImpalaProjectRel(ps_partkey=[$0], value=[$1])
    ImpalaJoinRel(condition=[>($1, $2)], joinType=[inner])
      ImpalaAggregateRel(group=[{3}], agg#0=[sum($5)], condition=[IS NOT NULL($1)])
        ImpalaJoinRel(condition=[=($4, $0)], joinType=[inner])
          ImpalaJoinRel(condition=[=($1, $2)], joinType=[inner])
            ImpalaProjectPassthroughRel(s_suppkey=[$0], s_nationkey=[$3])
              ImpalaHdfsScanRel(table=[[default, impala_tpch_supplier]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
            ImpalaProjectPassthroughRel(n_nationkey=[$0])
              ImpalaHdfsScanRel(table=[[default, impala_tpch_nation]], condition=[AND(=($1, _UTF-16LE'GERMANY'), IS NOT NULL($0))])
          ImpalaProjectPassthroughRel(ps_partkey=[$0], ps_suppkey=[$1], *=[*($3, CAST($2):DECIMAL(10, 0) NOT NULL)])
            ImpalaHdfsScanRel(table=[[default, impala_tpch_partsupp]], condition=[IS NOT NULL($1)])
      ImpalaProjectPassthroughRel(_o__c0=[*($0, 0.0001:DECIMAL(4, 4))])
        ImpalaAggregateRel(group=[{}], agg#0=[sum($4)], condition=[IS NOT NULL($0)])
          ImpalaJoinRel(condition=[=($3, $0)], joinType=[inner])
            ImpalaJoinRel(condition=[=($1, $2)], joinType=[inner])
              ImpalaProjectPassthroughRel(s_suppkey=[$0], s_nationkey=[$3])
                ImpalaHdfsScanRel(table=[[default, impala_tpch_supplier]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
              ImpalaProjectPassthroughRel(n_nationkey=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpch_nation]], condition=[AND(=($1, _UTF-16LE'GERMANY'), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(ps_suppkey=[$1], *=[*($3, CAST($2):DECIMAL(10, 0) NOT NULL)])
              ImpalaHdfsScanRel(table=[[default, impala_tpch_partsupp]], condition=[IS NOT NULL($1)])

PREHOOK: query: explain select
  *
from (
  select
    ps_partkey,
    sum(ps_supplycost * ps_availqty) as value
  from
    impala_tpch_partsupp,
    impala_tpch_supplier,
    impala_tpch_nation
  where
    ps_suppkey = s_suppkey
    and s_nationkey = n_nationkey
    and n_name = 'GERMANY'
  group by
    ps_partkey
) as inner_query
where 
  value > (
    select
      sum(ps_supplycost * ps_availqty) * 0.0001
    from
      impala_tpch_partsupp,
      impala_tpch_supplier,
      impala_tpch_nation
    where
      ps_suppkey = s_suppkey
      and s_nationkey = n_nationkey
      and n_name = 'GERMANY'
  )
order by
  value desc
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_nation
PREHOOK: Input: default@impala_tpch_partsupp
PREHOOK: Input: default@impala_tpch_supplier
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  *
from (
  select
    ps_partkey,
    sum(ps_supplycost * ps_availqty) as value
  from
    impala_tpch_partsupp,
    impala_tpch_supplier,
    impala_tpch_nation
  where
    ps_suppkey = s_suppkey
    and s_nationkey = n_nationkey
    and n_name = 'GERMANY'
  group by
    ps_partkey
) as inner_query
where 
  value > (
    select
      sum(ps_supplycost * ps_availqty) * 0.0001
    from
      impala_tpch_partsupp,
      impala_tpch_supplier,
      impala_tpch_nation
    where
      ps_suppkey = s_suppkey
      and s_nationkey = n_nationkey
      and n_name = 'GERMANY'
  )
order by
  value desc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_nation
POSTHOOK: Input: default@impala_tpch_partsupp
POSTHOOK: Input: default@impala_tpch_supplier
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F08:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=16.04MB mem-reservation=6.00MB thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpch_partsupp.ps_partkey, _impala_builtins.sum(multiply(default.impala_tpch_partsupp.ps_supplycost, casttodecimal(default.impala_tpch_partsupp.ps_availqty)))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  14:SORT
  |  order by: _impala_builtins.sum(multiply(default.impala_tpch_partsupp.ps_supplycost, casttodecimal(default.impala_tpch_partsupp.ps_availqty))) DESC NULLS FIRST
  |  mem-estimate=6.00MB mem-reservation=6.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=15 row-size=24B cardinality=1
  |  in pipelines: 14(GETNEXT), 18(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=14 row-size=24B cardinality=1
  |  in pipelines: 18(GETNEXT)
  |
  13:NESTED LOOP JOIN [INNER JOIN, BROADCAST]
  |  join predicates: _impala_builtins.sum(multiply(default.impala_tpch_partsupp.ps_supplycost, casttodecimal(default.impala_tpch_partsupp.ps_availqty))) > multiply(_impala_builtins.sum(multiply(default.impala_tpch_partsupp_0.ps_supplycost, casttodecimal(default.impala_tpch_partsupp_0.ps_availqty))), CAST(0.0001 AS DECIMAL(4,4)))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=13,6 row-size=40B cardinality=1
  |  in pipelines: 18(GETNEXT), 22(OPEN)
  |
  |--23:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=28.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=24B cardinality=0
  |     in pipelines: 22(GETNEXT)
  |
  18:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(default.impala_tpch_partsupp_0.ps_supplycost, casttodecimal(default.impala_tpch_partsupp_0.ps_availqty)))
  |  having: _impala_builtins.sum(multiply(default.impala_tpch_partsupp_0.ps_supplycost, casttodecimal(default.impala_tpch_partsupp_0.ps_availqty))) IS NOT NULL
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=16B cardinality=1
  |  in pipelines: 18(GETNEXT), 12(OPEN)
  |
  17:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=16B cardinality=1
     in pipelines: 12(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=13.88MB mem-reservation=3.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=17, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:AGGREGATE
  |  output: sum(multiply(default.impala_tpch_partsupp_0.ps_supplycost, casttodecimal(default.impala_tpch_partsupp_0.ps_availqty)))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=16B cardinality=1
  |  in pipelines: 12(GETNEXT), 07(OPEN)
  |
  11:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_supplier_0.s_suppkey = default.impala_tpch_partsupp_0.ps_suppkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=7,9,11 row-size=44B cardinality=0
  |  in pipelines: 07(GETNEXT), 10(OPEN)
  |
  |--16:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=11 row-size=20B cardinality=0
  |     in pipelines: 10(GETNEXT)
  |
  09:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_supplier_0.s_nationkey = default.impala_tpch_nation_0.n_nationkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=7,9 row-size=24B cardinality=0
  |  in pipelines: 07(GETNEXT), 08(OPEN)
  |
  |--15:EXCHANGE [BROADCAST]
  |     mem-estimate=18.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=9 row-size=14B cardinality=0
  |     in pipelines: 08(GETNEXT)
  |
  07:SCAN HDFS [default.impala_tpch_supplier, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_supplier_0.s_nationkey IS NOT NULL, default.impala_tpch_supplier_0.s_suppkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=10B cardinality=0
     in pipelines: 07(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=15, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:SCAN HDFS [default.impala_tpch_nation, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_nation_0.n_nationkey IS NOT NULL, default.impala_tpch_nation_0.n_name = 'GERMANY'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpch_nation_0.n_name = 'GERMANY'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=9 row-size=14B cardinality=0
     in pipelines: 08(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=16, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:SCAN HDFS [default.impala_tpch_partsupp, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_partsupp_0.ps_suppkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=20B cardinality=0
     in pipelines: 10(GETNEXT)

F07:PLAN FRAGMENT [HASH(default.impala_tpch_partsupp.ps_partkey)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.03MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=23, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(default.impala_tpch_partsupp.ps_supplycost, casttodecimal(default.impala_tpch_partsupp.ps_availqty)))
  |  group by: default.impala_tpch_partsupp.ps_partkey
  |  having: _impala_builtins.sum(multiply(default.impala_tpch_partsupp.ps_supplycost, casttodecimal(default.impala_tpch_partsupp.ps_availqty))) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=6 row-size=24B cardinality=0
  |  in pipelines: 22(GETNEXT), 01(OPEN)
  |
  21:EXCHANGE [HASH(default.impala_tpch_partsupp.ps_partkey)]
     mem-estimate=28.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=24B cardinality=0
     in pipelines: 01(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.92MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=21, HASH(default.impala_tpch_partsupp.ps_partkey)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE [STREAMING]
  |  output: sum(multiply(default.impala_tpch_partsupp.ps_supplycost, casttodecimal(default.impala_tpch_partsupp.ps_availqty)))
  |  group by: default.impala_tpch_partsupp.ps_partkey
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=6 row-size=24B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_supplier.s_suppkey = default.impala_tpch_partsupp.ps_suppkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=52B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--20:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=28B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_supplier.s_nationkey = default.impala_tpch_nation.n_nationkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=24B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--19:EXCHANGE [BROADCAST]
  |     mem-estimate=18.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=14B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpch_supplier, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_supplier.s_nationkey IS NOT NULL, default.impala_tpch_supplier.s_suppkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=10B cardinality=0
     in pipelines: 01(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=19, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpch_nation, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_nation.n_nationkey IS NOT NULL, default.impala_tpch_nation.n_name = 'GERMANY'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpch_nation.n_name = 'GERMANY'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=14B cardinality=0
     in pipelines: 02(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=20, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpch_partsupp, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_partsupp.ps_suppkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=28B cardinality=0
     in pipelines: 04(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

