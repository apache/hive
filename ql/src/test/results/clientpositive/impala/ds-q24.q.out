PREHOOK: query: explain cbo physical with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_sales_price) netpaid
from impala_tpcds_store_sales
    ,impala_tpcds_store_returns
    ,impala_tpcds_store
    ,impala_tpcds_item
    ,impala_tpcds_customer
    ,impala_tpcds_customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
and s_market_id=10
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'snow'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                                 from ssales)
order by c_last_name
        ,c_first_name
        ,s_store_name
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_returns
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_sales_price) netpaid
from impala_tpcds_store_sales
    ,impala_tpcds_store_returns
    ,impala_tpcds_store
    ,impala_tpcds_item
    ,impala_tpcds_customer
    ,impala_tpcds_customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
and s_market_id=10
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'snow'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                                 from ssales)
order by c_last_name
        ,c_first_name
        ,s_store_name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_returns
POSTHOOK: Input: default@impala_tpcds_store_sales
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$1], sort2=[$2], dir0=[ASC], dir1=[ASC], dir2=[ASC])
  ImpalaProjectRel($f0=[$0], $f1=[$1], $f2=[$2], $f3=[$3])
    ImpalaJoinRel(condition=[>($3, $4)], joinType=[inner])
      ImpalaProjectRel(c_last_name=[$2], c_first_name=[$1], s_store_name=[$0], $f3=[$3], condition=[IS NOT NULL($3)])
        ImpalaAggregateRel(group=[{5, 7, 8}], agg#0=[sum($9)])
          ImpalaAggregateRel(group=[{8, 9, 10, 11, 13, 17, 18, 22, 23}], agg#0=[sum($4)])
            ImpalaJoinRel(condition=[AND(=($21, $12), <>($24, $15), =($1, $20))], joinType=[inner])
              ImpalaJoinRel(condition=[=($2, $16)], joinType=[inner])
                ImpalaJoinRel(condition=[=($0, $7)], joinType=[inner])
                  ImpalaJoinRel(condition=[AND(=($3, $6), =($0, $5))], joinType=[inner])
                    ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$6], ss_ticket_number=[$8], ss_sales_price=[$12])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($2), IS NOT NULL($6), IS NOT NULL($8), IS NOT NULL($1))])
                    ImpalaProjectPassthroughRel(sr_item_sk=[$2], sr_ticket_number=[$9])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_returns]], condition=[AND(IS NOT NULL($9), IS NOT NULL($2))])
                  ImpalaProjectPassthroughRel(i_item_sk=[$0], i_current_price=[$5], i_size=[$15], i_units=[$18], i_manager_id=[$20])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(=($17, _UTF-16LE'snow'), IS NOT NULL($0))])
                ImpalaJoinRel(condition=[=($7, $2)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_state=[$8], ca_zip=[$9], UPPER=[UPPER($10)])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[AND(IS NOT NULL($0), IS NOT NULL($9))])
                  ImpalaProjectPassthroughRel(s_store_sk=[$0], s_store_name=[$5], s_state=[$24], s_zip=[$25])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[AND(=($10, 10), IS NOT NULL($25), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_current_addr_sk=[$4], c_first_name=[$8], c_last_name=[$9], c_birth_country=[$14])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($4), IS NOT NULL($0))])
      ImpalaProjectPassthroughRel(_o__c0=[*(0.05:DECIMAL(2, 2), /($0, CAST($1):DECIMAL(19, 0)))])
        ImpalaAggregateRel(group=[{}], agg#0=[sum($10)], agg#1=[count($10)], condition=[IS NOT NULL(CAST($1):DECIMAL(19, 0))])
          ImpalaAggregateRel(group=[{8, 9, 10, 11, 12, 14, 18, 19, 23, 24}], agg#0=[sum($4)])
            ImpalaJoinRel(condition=[AND(=($22, $13), <>($25, $16), =($1, $21))], joinType=[inner])
              ImpalaJoinRel(condition=[=($2, $17)], joinType=[inner])
                ImpalaJoinRel(condition=[=($0, $7)], joinType=[inner])
                  ImpalaJoinRel(condition=[AND(=($3, $6), =($0, $5))], joinType=[inner])
                    ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$6], ss_ticket_number=[$8], ss_sales_price=[$12])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($2), IS NOT NULL($6), IS NOT NULL($8), IS NOT NULL($1))])
                    ImpalaProjectPassthroughRel(sr_item_sk=[$2], sr_ticket_number=[$9])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_returns]], condition=[AND(IS NOT NULL($9), IS NOT NULL($2))])
                  ImpalaProjectPassthroughRel(i_item_sk=[$0], i_current_price=[$5], i_size=[$15], i_color=[$17], i_units=[$18], i_manager_id=[$20])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])
                ImpalaJoinRel(condition=[=($7, $2)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_state=[$8], ca_zip=[$9], UPPER=[UPPER($10)])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[AND(IS NOT NULL($0), IS NOT NULL($9))])
                  ImpalaProjectPassthroughRel(s_store_sk=[$0], s_store_name=[$5], s_state=[$24], s_zip=[$25])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[AND(=($10, 10), IS NOT NULL($25), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_current_addr_sk=[$4], c_first_name=[$8], c_last_name=[$9], c_birth_country=[$14])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($4), IS NOT NULL($0))])

PREHOOK: query: explain with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_sales_price) netpaid
from impala_tpcds_store_sales
    ,impala_tpcds_store_returns
    ,impala_tpcds_store
    ,impala_tpcds_item
    ,impala_tpcds_customer
    ,impala_tpcds_customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
  and s_market_id = 10
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'chiffon'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                           from ssales)
order by c_last_name
        ,c_first_name
        ,s_store_name
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_returns
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_sales_price) netpaid
from impala_tpcds_store_sales
    ,impala_tpcds_store_returns
    ,impala_tpcds_store
    ,impala_tpcds_item
    ,impala_tpcds_customer
    ,impala_tpcds_customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
  and s_market_id = 10
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'chiffon'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                           from ssales)
order by c_last_name
        ,c_first_name
        ,s_store_name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_returns
POSTHOOK: Input: default@impala_tpcds_store_sales
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F17:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=22.07MB mem-reservation=12.00MB thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpcds_customer.c_last_name, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_store.s_store_name, _impala_builtins.sum(_impala_builtins.sum(default.impala_tpcds_store_sales.ss_sales_price))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  30:SORT
  |  order by: default.impala_tpcds_customer.c_last_name ASC NULLS LAST, default.impala_tpcds_customer.c_first_name ASC NULLS LAST, default.impala_tpcds_store.s_store_name ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=28 row-size=52B cardinality=1
  |  in pipelines: 30(GETNEXT), 39(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=27 row-size=52B cardinality=1
  |  in pipelines: 39(GETNEXT)
  |
  29:NESTED LOOP JOIN [INNER JOIN, BROADCAST]
  |  join predicates: _impala_builtins.sum(_impala_builtins.sum(default.impala_tpcds_store_sales.ss_sales_price)) > multiply(CAST(0.05 AS DECIMAL(2,2)), divide(_impala_builtins.sum(_impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_sales_price)), casttodecimal(_impala_builtins.count(_impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_sales_price)))))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=26,13 row-size=76B cardinality=1
  |  in pipelines: 39(GETNEXT), 48(OPEN)
  |
  |--49:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=13 row-size=52B cardinality=0
  |     in pipelines: 48(GETNEXT)
  |
  39:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(_impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_sales_price)), _impala_builtins.count:merge(_impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_sales_price))
  |  having: casttodecimal(_impala_builtins.count(_impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_sales_price))) IS NOT NULL
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=26 row-size=24B cardinality=1
  |  in pipelines: 39(GETNEXT), 28(OPEN)
  |
  38:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=26 row-size=24B cardinality=1
     in pipelines: 28(GETNEXT)

F06:PLAN FRAGMENT [HASH(default.impala_tpcds_item_0.i_current_price,default.impala_tpcds_item_0.i_size,default.impala_tpcds_item_0.i_color,default.impala_tpcds_item_0.i_units,default.impala_tpcds_item_0.i_manager_id,default.impala_tpcds_customer_address_0.ca_state,default.impala_tpcds_store_0.s_store_name,default.impala_tpcds_store_0.s_state,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F17, EXCHANGE=38, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  28:AGGREGATE
  |  output: sum(_impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_sales_price)), count(_impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_sales_price))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=26 row-size=24B cardinality=1
  |  in pipelines: 28(GETNEXT), 37(OPEN)
  |
  37:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales_0.ss_sales_price)
  |  group by: default.impala_tpcds_item_0.i_current_price, default.impala_tpcds_item_0.i_size, default.impala_tpcds_item_0.i_color, default.impala_tpcds_item_0.i_units, default.impala_tpcds_item_0.i_manager_id, default.impala_tpcds_customer_address_0.ca_state, default.impala_tpcds_store_0.s_store_name, default.impala_tpcds_store_0.s_state, default.impala_tpcds_customer_0.c_first_name, default.impala_tpcds_customer_0.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=25 row-size=120B cardinality=0
  |  in pipelines: 37(GETNEXT), 16(OPEN)
  |
  36:EXCHANGE [HASH(default.impala_tpcds_item_0.i_current_price,default.impala_tpcds_item_0.i_size,default.impala_tpcds_item_0.i_color,default.impala_tpcds_item_0.i_units,default.impala_tpcds_item_0.i_manager_id,default.impala_tpcds_customer_address_0.ca_state,default.impala_tpcds_store_0.s_store_name,default.impala_tpcds_store_0.s_state,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name)]
     mem-estimate=124.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=25 row-size=120B cardinality=0
     in pipelines: 16(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=135.96MB mem-reservation=41.75MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=36, HASH(default.impala_tpcds_item_0.i_current_price,default.impala_tpcds_item_0.i_size,default.impala_tpcds_item_0.i_color,default.impala_tpcds_item_0.i_units,default.impala_tpcds_item_0.i_manager_id,default.impala_tpcds_customer_address_0.ca_state,default.impala_tpcds_store_0.s_store_name,default.impala_tpcds_store_0.s_state,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  27:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales_0.ss_sales_price)
  |  group by: default.impala_tpcds_item_0.i_current_price, default.impala_tpcds_item_0.i_size, default.impala_tpcds_item_0.i_color, default.impala_tpcds_item_0.i_units, default.impala_tpcds_item_0.i_manager_id, default.impala_tpcds_customer_address_0.ca_state, default.impala_tpcds_store_0.s_store_name, default.impala_tpcds_store_0.s_state, default.impala_tpcds_customer_0.c_first_name, default.impala_tpcds_customer_0.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=25 row-size=120B cardinality=0
  |  in pipelines: 16(GETNEXT)
  |
  26:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_address_0.ca_address_sk = default.impala_tpcds_customer_0.c_current_addr_sk, default.impala_tpcds_store_sales_0.ss_customer_sk = default.impala_tpcds_customer_0.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: default.impala_tpcds_customer_0.c_birth_country != upper(default.impala_tpcds_customer_address_0.ca_country)
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=14,15,17,19,21,23 row-size=224B cardinality=0
  |  in pipelines: 16(GETNEXT), 25(OPEN)
  |
  |--35:EXCHANGE [BROADCAST]
  |     mem-estimate=48.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=23 row-size=44B cardinality=0
  |     in pipelines: 25(GETNEXT)
  |
  24:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_store_sk = default.impala_tpcds_store_0.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=14,15,17,19,21 row-size=180B cardinality=0
  |  in pipelines: 16(GETNEXT), 21(OPEN)
  |
  |--34:EXCHANGE [BROADCAST]
  |     mem-estimate=92.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=19,21 row-size=84B cardinality=0
  |     in pipelines: 21(GETNEXT)
  |
  20:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_item_sk = default.impala_tpcds_item_0.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=14,15,17 row-size=96B cardinality=0
  |  in pipelines: 16(GETNEXT), 19(OPEN)
  |
  |--32:EXCHANGE [BROADCAST]
  |     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=17 row-size=52B cardinality=0
  |     in pipelines: 19(GETNEXT)
  |
  18:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_item_sk = default.impala_tpcds_store_returns_0.sr_item_sk, default.impala_tpcds_store_sales_0.ss_ticket_number = default.impala_tpcds_store_returns_0.sr_ticket_number
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=14,15 row-size=44B cardinality=0
  |  in pipelines: 16(GETNEXT), 17(OPEN)
  |
  |--31:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=15 row-size=16B cardinality=0
  |     in pipelines: 17(GETNEXT)
  |
  16:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_0.ss_customer_sk IS NOT NULL, default.impala_tpcds_store_sales_0.ss_item_sk IS NOT NULL, default.impala_tpcds_store_sales_0.ss_store_sk IS NOT NULL, default.impala_tpcds_store_sales_0.ss_ticket_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=14 row-size=28B cardinality=0
     in pipelines: 16(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=31, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  17:SCAN HDFS [default.impala_tpcds_store_returns, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store_returns_0.sr_item_sk IS NOT NULL, default.impala_tpcds_store_returns_0.sr_ticket_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=16B cardinality=0
     in pipelines: 17(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=32, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  19:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_0.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=52B cardinality=0
     in pipelines: 19(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.98MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=34, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  23:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_address_0.ca_zip = default.impala_tpcds_store_0.s_zip
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=19,21 row-size=84B cardinality=0
  |  in pipelines: 21(GETNEXT), 22(OPEN)
  |
  |--33:EXCHANGE [BROADCAST]
  |     mem-estimate=48.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=21 row-size=44B cardinality=0
  |     in pipelines: 22(GETNEXT)
  |
  21:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address_0.ca_address_sk IS NOT NULL, default.impala_tpcds_customer_address_0.ca_zip IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=19 row-size=40B cardinality=0
     in pipelines: 21(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=33, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store_0.s_store_sk IS NOT NULL, default.impala_tpcds_store_0.s_zip IS NOT NULL, default.impala_tpcds_store_0.s_market_id = CAST(10 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_store_0.s_market_id = CAST(10 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=44B cardinality=0
     in pipelines: 22(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=35, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  25:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_0.c_current_addr_sk IS NOT NULL, default.impala_tpcds_customer_0.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=23 row-size=44B cardinality=0
     in pipelines: 25(GETNEXT)

F16:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.05MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F17, EXCHANGE=49, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  15:SELECT
  |  predicates: _impala_builtins.sum(_impala_builtins.sum(default.impala_tpcds_store_sales.ss_sales_price)) IS NOT NULL
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=13 row-size=52B cardinality=0
  |  in pipelines: 48(GETNEXT)
  |
  01:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=13 row-size=52B cardinality=0
  |  in pipelines: 48(GETNEXT)
  |
  48:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(_impala_builtins.sum(default.impala_tpcds_store_sales.ss_sales_price))
  |  group by: default.impala_tpcds_store.s_store_name, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=52B cardinality=0
  |  in pipelines: 48(GETNEXT), 46(OPEN)
  |
  47:EXCHANGE [HASH(default.impala_tpcds_store.s_store_name,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=52B cardinality=0
     in pipelines: 46(GETNEXT)

F14:PLAN FRAGMENT [HASH(default.impala_tpcds_item.i_current_price,default.impala_tpcds_item.i_size,default.impala_tpcds_item.i_units,default.impala_tpcds_item.i_manager_id,default.impala_tpcds_customer_address.ca_state,default.impala_tpcds_store.s_store_name,default.impala_tpcds_store.s_state,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name)] hosts=1 instances=1
Per-Host Resources: mem-estimate=256.11MB mem-reservation=68.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=47, HASH(default.impala_tpcds_store.s_store_name,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:AGGREGATE [STREAMING]
  |  output: sum(_impala_builtins.sum(default.impala_tpcds_store_sales.ss_sales_price))
  |  group by: default.impala_tpcds_store.s_store_name, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=52B cardinality=0
  |  in pipelines: 46(GETNEXT)
  |
  46:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_sales_price)
  |  group by: default.impala_tpcds_item.i_current_price, default.impala_tpcds_item.i_size, default.impala_tpcds_item.i_units, default.impala_tpcds_item.i_manager_id, default.impala_tpcds_customer_address.ca_state, default.impala_tpcds_store.s_store_name, default.impala_tpcds_store.s_state, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=108B cardinality=0
  |  in pipelines: 46(GETNEXT), 02(OPEN)
  |
  45:EXCHANGE [HASH(default.impala_tpcds_item.i_current_price,default.impala_tpcds_item.i_size,default.impala_tpcds_item.i_units,default.impala_tpcds_item.i_manager_id,default.impala_tpcds_customer_address.ca_state,default.impala_tpcds_store.s_store_name,default.impala_tpcds_store.s_state,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name)]
     mem-estimate=112.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=108B cardinality=0
     in pipelines: 02(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=135.96MB mem-reservation=41.75MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=45, HASH(default.impala_tpcds_item.i_current_price,default.impala_tpcds_item.i_size,default.impala_tpcds_item.i_units,default.impala_tpcds_item.i_manager_id,default.impala_tpcds_customer_address.ca_state,default.impala_tpcds_store.s_store_name,default.impala_tpcds_store.s_state,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales.ss_sales_price)
  |  group by: default.impala_tpcds_item.i_current_price, default.impala_tpcds_item.i_size, default.impala_tpcds_item.i_units, default.impala_tpcds_item.i_manager_id, default.impala_tpcds_customer_address.ca_state, default.impala_tpcds_store.s_store_name, default.impala_tpcds_store.s_state, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=108B cardinality=0
  |  in pipelines: 02(GETNEXT)
  |
  12:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_address.ca_address_sk = default.impala_tpcds_customer.c_current_addr_sk, default.impala_tpcds_store_sales.ss_customer_sk = default.impala_tpcds_customer.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: default.impala_tpcds_customer.c_birth_country != upper(default.impala_tpcds_customer_address.ca_country)
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3,5,7,9 row-size=224B cardinality=0
  |  in pipelines: 02(GETNEXT), 11(OPEN)
  |
  |--44:EXCHANGE [BROADCAST]
  |     mem-estimate=48.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=9 row-size=44B cardinality=0
  |     in pipelines: 11(GETNEXT)
  |
  10:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_store_sk = default.impala_tpcds_store.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3,5,7 row-size=180B cardinality=0
  |  in pipelines: 02(GETNEXT), 07(OPEN)
  |
  |--43:EXCHANGE [BROADCAST]
  |     mem-estimate=92.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=5,7 row-size=84B cardinality=0
  |     in pipelines: 07(GETNEXT)
  |
  06:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3 row-size=96B cardinality=0
  |  in pipelines: 02(GETNEXT), 05(OPEN)
  |
  |--41:EXCHANGE [BROADCAST]
  |     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=52B cardinality=0
  |     in pipelines: 05(GETNEXT)
  |
  04:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_item_sk = default.impala_tpcds_store_returns.sr_item_sk, default.impala_tpcds_store_sales.ss_ticket_number = default.impala_tpcds_store_returns.sr_ticket_number
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1 row-size=44B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(OPEN)
  |
  |--40:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1 row-size=16B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_customer_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_item_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_store_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_ticket_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=28B cardinality=0
     in pipelines: 02(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=40, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SCAN HDFS [default.impala_tpcds_store_returns, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store_returns.sr_item_sk IS NOT NULL, default.impala_tpcds_store_returns.sr_ticket_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=16B cardinality=0
     in pipelines: 03(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=41, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL, default.impala_tpcds_item.i_color = 'chiffon'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_item.i_color = 'chiffon'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=52B cardinality=0
     in pipelines: 05(GETNEXT)

F11:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.98MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=43, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_address.ca_zip = default.impala_tpcds_store.s_zip
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,7 row-size=84B cardinality=0
  |  in pipelines: 07(GETNEXT), 08(OPEN)
  |
  |--42:EXCHANGE [BROADCAST]
  |     mem-estimate=48.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=7 row-size=44B cardinality=0
  |     in pipelines: 08(GETNEXT)
  |
  07:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address.ca_address_sk IS NOT NULL, default.impala_tpcds_customer_address.ca_zip IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=40B cardinality=0
     in pipelines: 07(GETNEXT)

F12:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F11, EXCHANGE=42, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store.s_store_sk IS NOT NULL, default.impala_tpcds_store.s_zip IS NOT NULL, default.impala_tpcds_store.s_market_id = CAST(10 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_store.s_market_id = CAST(10 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=44B cardinality=0
     in pipelines: 08(GETNEXT)

F13:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=44, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer.c_current_addr_sk IS NOT NULL, default.impala_tpcds_customer.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=9 row-size=44B cardinality=0
     in pipelines: 11(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

