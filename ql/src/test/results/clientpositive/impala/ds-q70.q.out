PREHOOK: query: explain cbo select  
    sum(ss_net_profit) as total_sum
   ,s_state
   ,s_county
   ,grouping(s_state)+grouping(s_county) as lochierarchy
   ,rank() over (
      partition by grouping(s_state)+grouping(s_county),
      case when grouping(s_county) = 0 then s_state end 
      order by sum(ss_net_profit) desc) as rank_within_parent
 from
    impala_tpcds_store_sales
   ,impala_tpcds_date_dim       d1
   ,impala_tpcds_store
 where
    d1.d_month_seq between 1218 and 1218+11
 and d1.d_date_sk = ss_sold_date_sk
 and s_store_sk  = ss_store_sk
 and s_state in
             ( select s_state
               from  (select s_state as s_state,
                    rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking
                      from   impala_tpcds_store_sales, impala_tpcds_store, impala_tpcds_date_dim
                      where  d_month_seq between 1218 and 1218+11
                    and d_date_sk = ss_sold_date_sk
                    and s_store_sk  = ss_store_sk
                      group by s_state
                     ) tmp1 
               where ranking <= 5
             )
 group by rollup(s_state,s_county)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then s_state end
  ,rank_within_parent
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select  
    sum(ss_net_profit) as total_sum
   ,s_state
   ,s_county
   ,grouping(s_state)+grouping(s_county) as lochierarchy
   ,rank() over (
      partition by grouping(s_state)+grouping(s_county),
      case when grouping(s_county) = 0 then s_state end 
      order by sum(ss_net_profit) desc) as rank_within_parent
 from
    impala_tpcds_store_sales
   ,impala_tpcds_date_dim       d1
   ,impala_tpcds_store
 where
    d1.d_month_seq between 1218 and 1218+11
 and d1.d_date_sk = ss_sold_date_sk
 and s_store_sk  = ss_store_sk
 and s_state in
             ( select s_state
               from  (select s_state as s_state,
                    rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking
                      from   impala_tpcds_store_sales, impala_tpcds_store, impala_tpcds_date_dim
                      where  d_month_seq between 1218 and 1218+11
                    and d_date_sk = ss_sold_date_sk
                    and s_store_sk  = ss_store_sk
                      group by s_state
                     ) tmp1 
               where ranking <= 5
             )
 group by rollup(s_state,s_county)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then s_state end
  ,rank_within_parent
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaProjectPassthroughRel(total_sum=[$0], s_state=[$1], s_county=[$2], lochierarchy=[$3], rank_within_parent=[$4])
  ImpalaSortRel(sort0=[$3], sort1=[$5], sort2=[$4], dir0=[DESC], dir1=[ASC], dir2=[ASC], fetch=[100])
    ImpalaProjectRel(total_sum=[$2], s_state=[$0], s_county=[$1], lochierarchy=[$4], rank_within_parent=[rank() OVER (PARTITION BY $4, $5 ORDER BY $2 DESC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)], (tok_function when (= (tok_table_or_col lochierarchy) 0) (tok_table_or_col s_state))=[$0])
      ImpalaProjectPassthroughRel($f0=[$0], $f1=[$1], $f2=[$2], GROUPING__ID=[$3], $func_0=[+(GROUPING($3, 1:BIGINT), GROUPING($3, 0:BIGINT))], $func_1=[CASE(=(GROUPING($3, 0:BIGINT), 0), $0)])
        ImpalaAggregateRel(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], agg#0=[sum($2)], GROUPING__ID=[GROUPING__ID()])
          ImpalaProjectPassthroughRel($f0=[$7], $f1=[$6], $f2=[$1])
            ImpalaJoinRel(condition=[=($7, $8)], joinType=[inner])
              ImpalaJoinRel(condition=[=($5, $0)], joinType=[inner])
                ImpalaJoinRel(condition=[=($3, $2)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ss_store_sk=[$6], ss_net_profit=[$21], ss_sold_date_sk=[$22])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($6))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0], d_month_seq=[$3])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($3):BIGINT, 1218:BIGINT, +(1218:BIGINT, 11:BIGINT)), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(s_store_sk=[$0], s_county=[$23], s_state=[$24])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[AND(IS NOT NULL($24), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(s_state=[$0])
                ImpalaProjectRel((tok_table_or_col s_state)=[$0], rank_window_0=[rank() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
                  ImpalaAggregateRel(group=[{5}], agg#0=[sum($1)])
                    ImpalaJoinRel(condition=[=($4, $0)], joinType=[inner])
                      ImpalaJoinRel(condition=[=($3, $2)], joinType=[inner])
                        ImpalaProjectPassthroughRel(ss_store_sk=[$6], ss_net_profit=[$21], ss_sold_date_sk=[$22])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($6), IS NOT NULL($22))])
                        ImpalaProjectPassthroughRel(d_date_sk=[$0])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($3):BIGINT, 1218:BIGINT, +(1218:BIGINT, 11:BIGINT)), IS NOT NULL($0))])
                      ImpalaProjectPassthroughRel(s_store_sk=[$0], s_state=[$24])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[AND(IS NOT NULL($0), IS NOT NULL($24))])

PREHOOK: query: explain select  
    sum(ss_net_profit) as total_sum
   ,s_state
   ,s_county
   ,grouping(s_state)+grouping(s_county) as lochierarchy
   ,rank() over (
      partition by grouping(s_state)+grouping(s_county),
      case when grouping(s_county) = 0 then s_state end 
      order by sum(ss_net_profit) desc) as rank_within_parent
 from
    impala_tpcds_store_sales
   ,impala_tpcds_date_dim       d1
   ,impala_tpcds_store
 where
    d1.d_month_seq between 1218 and 1218+11
 and d1.d_date_sk = ss_sold_date_sk
 and s_store_sk  = ss_store_sk
 and s_state in
             ( select s_state
               from  (select s_state as s_state,
                    rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking
                      from   impala_tpcds_store_sales, impala_tpcds_store, impala_tpcds_date_dim
                      where  d_month_seq between 1218 and 1218+11
                    and d_date_sk = ss_sold_date_sk
                    and s_store_sk  = ss_store_sk
                      group by s_state
                     ) tmp1 
               where ranking <= 5
             )
 group by rollup(s_state,s_county)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then s_state end
  ,rank_within_parent
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select  
    sum(ss_net_profit) as total_sum
   ,s_state
   ,s_county
   ,grouping(s_state)+grouping(s_county) as lochierarchy
   ,rank() over (
      partition by grouping(s_state)+grouping(s_county),
      case when grouping(s_county) = 0 then s_state end 
      order by sum(ss_net_profit) desc) as rank_within_parent
 from
    impala_tpcds_store_sales
   ,impala_tpcds_date_dim       d1
   ,impala_tpcds_store
 where
    d1.d_month_seq between 1218 and 1218+11
 and d1.d_date_sk = ss_sold_date_sk
 and s_store_sk  = ss_store_sk
 and s_state in
             ( select s_state
               from  (select s_state as s_state,
                    rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking
                      from   impala_tpcds_store_sales, impala_tpcds_store, impala_tpcds_date_dim
                      where  d_month_seq between 1218 and 1218+11
                    and d_date_sk = ss_sold_date_sk
                    and s_store_sk  = ss_store_sk
                      group by s_state
                     ) tmp1 
               where ranking <= 5
             )
 group by rollup(s_state,s_county)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then s_state end
  ,rank_within_parent
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F11:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=72.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: total_sum, s_state, s_county, lochierarchy, rank_within_parent
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  32:MERGING-EXCHANGE [UNPARTITIONED]
     order by: lochierarchy DESC NULLS FIRST, (tok_function when (= (tok_table_or_col lochierarchy) 0) (tok_table_or_col s_state)) ASC NULLS LAST, rank_within_parent ASC NULLS LAST
     limit: 100
     mem-estimate=72.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=30 row-size=68B cardinality=0
     in pipelines: 21(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=16.05MB mem-reservation=16.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F11, EXCHANGE=32, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  21:TOP-N [LIMIT=100]
  |  order by: lochierarchy DESC NULLS FIRST, (tok_function when (= (tok_table_or_col lochierarchy) 0) (tok_table_or_col s_state)) ASC NULLS LAST, rank_within_parent ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=30 row-size=68B cardinality=0
  |  in pipelines: 21(GETNEXT), 19(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=23 row-size=68B cardinality=0
  |  in pipelines: 19(GETNEXT)
  |
  20:ANALYTIC
  |  functions: _impala_builtins.rank()
  |  partition by: _impala_builtins.add(_impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 1), 1), _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1)), CASE WHEN _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1) = 0 THEN CASE valid_tid(18,19,20) WHEN 18 THEN default.impala_tpcds_store.s_state WHEN 19 THEN default.impala_tpcds_store.s_state WHEN 20 THEN NULL END END
  |  order by: CASE valid_tid(18,19,20) WHEN 18 THEN 18 WHEN 19 THEN 19 WHEN 20 THEN 20 END DESC
  |  window: ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=28,27 row-size=80B cardinality=0
  |  in pipelines: 19(GETNEXT)
  |
  19:SORT
  |  order by: _impala_builtins.add(_impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 1), 1), _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1)) ASC NULLS FIRST, CASE WHEN _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1) = 0 THEN CASE valid_tid(18,19,20) WHEN 18 THEN default.impala_tpcds_store.s_state WHEN 19 THEN default.impala_tpcds_store.s_state WHEN 20 THEN NULL END END ASC NULLS FIRST, CASE valid_tid(18,19,20) WHEN 18 THEN 18 WHEN 19 THEN 19 WHEN 20 THEN 20 END DESC NULLS FIRST
  |  materialized: _impala_builtins.add(_impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 1), 1), _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1)), CASE WHEN _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1) = 0 THEN CASE valid_tid(18,19,20) WHEN 18 THEN default.impala_tpcds_store.s_state WHEN 19 THEN default.impala_tpcds_store.s_state WHEN 20 THEN NULL END END
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=28 row-size=72B cardinality=0
  |  in pipelines: 19(GETNEXT), 18(OPEN)
  |
  31:EXCHANGE [HASH(_impala_builtins.add(_impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 1), 1), _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1)),CASE WHEN _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1) = 0 THEN CASE valid_tid(18,19,20) WHEN 18 THEN default.impala_tpcds_store.s_state WHEN 19 THEN default.impala_tpcds_store.s_state WHEN 20 THEN NULL END END)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=22 row-size=52B cardinality=0
     in pipelines: 18(GETNEXT)

F08:PLAN FRAGMENT [HASH(CASE valid_tid(18,19,20) WHEN 18 THEN murmur_hash(default.impala_tpcds_store.s_state) WHEN 19 THEN murmur_hash(default.impala_tpcds_store.s_state) WHEN 20 THEN murmur_hash(NULL) END,CASE valid_tid(18,19,20) WHEN 18 THEN murmur_hash(default.impala_tpcds_store.s_county) WHEN 19 THEN murmur_hash(NULL) WHEN 20 THEN murmur_hash(NULL) END)] hosts=1 instances=1
Per-Host Resources: mem-estimate=394.00MB mem-reservation=103.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F10, EXCHANGE=31, HASH(_impala_builtins.add(_impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 1), 1), _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1)),CASE WHEN _impala_builtins.bitand(_impala_builtins.shiftright(aggif(valid_tid(18,19,20) IN (18, 19, 20), CASE valid_tid(18,19,20) WHEN 18 THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 19 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN 20 THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), 0), 1) = 0 THEN CASE valid_tid(18,19,20) WHEN 18 THEN default.impala_tpcds_store.s_state WHEN 19 THEN default.impala_tpcds_store.s_state WHEN 20 THEN NULL END END)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  18:AGGREGATE [FINALIZE]
  |  output: aggif(valid_tid(18,19,20) IN (CAST(18 AS INT), CAST(19 AS INT), CAST(20 AS INT)), CASE valid_tid(18,19,20) WHEN CAST(18 AS INT) THEN _impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN CAST(19 AS INT) THEN sum(default.impala_tpcds_store_sales.ss_net_profit) WHEN CAST(20 AS INT) THEN sum(default.impala_tpcds_store_sales.ss_net_profit) END), aggif(valid_tid(18,19,20) IN (CAST(18 AS INT), CAST(19 AS INT), CAST(20 AS INT)), CASE valid_tid(18,19,20) WHEN CAST(18 AS INT) THEN CAST(0 AS BIGINT) WHEN CAST(19 AS INT) THEN CAST(1 AS BIGINT) WHEN CAST(20 AS INT) THEN CAST(3 AS BIGINT) END)
  |  group by: CASE valid_tid(18,19,20) WHEN CAST(18 AS INT) THEN default.impala_tpcds_store.s_state WHEN CAST(19 AS INT) THEN default.impala_tpcds_store.s_state WHEN CAST(20 AS INT) THEN NULL END, CASE valid_tid(18,19,20) WHEN CAST(18 AS INT) THEN default.impala_tpcds_store.s_county WHEN CAST(19 AS INT) THEN NULL WHEN CAST(20 AS INT) THEN NULL END, CASE valid_tid(18,19,20) WHEN CAST(18 AS INT) THEN CAST(18 AS INT) WHEN CAST(19 AS INT) THEN CAST(19 AS INT) WHEN CAST(20 AS INT) THEN CAST(20 AS INT) END
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=22 row-size=52B cardinality=0
  |  in pipelines: 18(GETNEXT), 30(OPEN)
  |
  30:AGGREGATE [FINALIZE]
  |  Class 0
  |    output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_net_profit)
  |    group by: default.impala_tpcds_store.s_state, default.impala_tpcds_store.s_county
  |  Class 1
  |    output: sum:merge(default.impala_tpcds_store_sales.ss_net_profit)
  |    group by: default.impala_tpcds_store.s_state, NULL
  |  Class 2
  |    output: sum:merge(default.impala_tpcds_store_sales.ss_net_profit)
  |    group by: NULL, NULL
  |  mem-estimate=266.00MB mem-reservation=69.94MB thread-reservation=0
  |  tuple-ids=18N,19N,20N row-size=120B cardinality=0
  |  in pipelines: 30(GETNEXT), 01(OPEN)
  |
  29:EXCHANGE [HASH(CASE valid_tid(18,19,20) WHEN 18 THEN murmur_hash(default.impala_tpcds_store.s_state) WHEN 19 THEN murmur_hash(default.impala_tpcds_store.s_state) WHEN 20 THEN murmur_hash(NULL) END,CASE valid_tid(18,19,20) WHEN 18 THEN murmur_hash(default.impala_tpcds_store.s_county) WHEN 19 THEN murmur_hash(NULL) WHEN 20 THEN murmur_hash(NULL) END)]
     mem-estimate=132.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=18N,19N,20N row-size=120B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=271.88MB mem-reservation=75.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=29, HASH(CASE valid_tid(18,19,20) WHEN 18 THEN murmur_hash(default.impala_tpcds_store.s_state) WHEN 19 THEN murmur_hash(default.impala_tpcds_store.s_state) WHEN 20 THEN murmur_hash(NULL) END,CASE valid_tid(18,19,20) WHEN 18 THEN murmur_hash(default.impala_tpcds_store.s_county) WHEN 19 THEN murmur_hash(NULL) WHEN 20 THEN murmur_hash(NULL) END)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  17:AGGREGATE [STREAMING]
  |  Class 0
  |    output: sum(default.impala_tpcds_store_sales.ss_net_profit)
  |    group by: default.impala_tpcds_store.s_state, default.impala_tpcds_store.s_county
  |  Class 1
  |    output: sum(default.impala_tpcds_store_sales.ss_net_profit)
  |    group by: default.impala_tpcds_store.s_state, NULL
  |  Class 2
  |    output: sum(default.impala_tpcds_store_sales.ss_net_profit)
  |    group by: NULL, NULL
  |  mem-estimate=266.00MB mem-reservation=70.00MB thread-reservation=0
  |  tuple-ids=18N,19N,20N row-size=120B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  16:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store.s_state = (tok_table_or_col s_state)
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3,11 row-size=68B cardinality=0
  |  in pipelines: 01(GETNEXT), 13(OPEN)
  |
  |--28:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=11 row-size=20B cardinality=0
  |     in pipelines: 13(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_store_sk = default.impala_tpcds_store.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3 row-size=48B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--23:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=28B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = d1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1 row-size=20B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--22:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1 row-size=8B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=12B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=22, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim d1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d1.d_date_sk IS NOT NULL, _impala_builtins.casttobigint(d1.d_month_seq) >= CAST(1218 AS BIGINT) AND _impala_builtins.casttobigint(d1.d_month_seq) <= _impala_builtins.add(CAST(1218 AS BIGINT), CAST(11 AS BIGINT))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=8B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=23, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store.s_state IS NOT NULL, default.impala_tpcds_store.s_store_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=28B cardinality=0
     in pipelines: 04(GETNEXT)

F07:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=144.00MB mem-reservation=50.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=28, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  15:SELECT
  |  predicates: rank_window_0 <= CAST(5 AS BIGINT)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=11 row-size=20B cardinality=0
  |  in pipelines: 13(GETNEXT)
  |
  06:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=11 row-size=20B cardinality=0
  |  in pipelines: 13(GETNEXT)
  |
  14:ANALYTIC
  |  functions: _impala_builtins.rank()
  |  partition by: default.impala_tpcds_store_0.s_state
  |  order by: _impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_net_profit) DESC
  |  window: ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=16,15 row-size=36B cardinality=0
  |  in pipelines: 13(GETNEXT)
  |
  13:SORT
  |  order by: default.impala_tpcds_store_0.s_state ASC NULLS FIRST, _impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_net_profit) DESC NULLS FIRST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=16 row-size=28B cardinality=0
  |  in pipelines: 13(GETNEXT), 27(OPEN)
  |
  27:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales_0.ss_net_profit)
  |  group by: default.impala_tpcds_store_0.s_state
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=10 row-size=28B cardinality=0
  |  in pipelines: 27(GETNEXT), 07(OPEN)
  |
  26:EXCHANGE [HASH(default.impala_tpcds_store_0.s_state)]
     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=28B cardinality=0
     in pipelines: 07(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=26, HASH(default.impala_tpcds_store_0.s_state)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales_0.ss_net_profit)
  |  group by: default.impala_tpcds_store_0.s_state
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=10 row-size=28B cardinality=0
  |  in pipelines: 07(GETNEXT)
  |
  11:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_store_sk = default.impala_tpcds_store_0.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,6,8 row-size=36B cardinality=0
  |  in pipelines: 07(GETNEXT), 10(OPEN)
  |
  |--25:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=16B cardinality=0
  |     in pipelines: 10(GETNEXT)
  |
  09:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,6 row-size=20B cardinality=0
  |  in pipelines: 07(GETNEXT), 08(OPEN)
  |
  |--24:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=8B cardinality=0
  |     in pipelines: 08(GETNEXT)
  |
  07:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_0.ss_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=12B cardinality=0
     in pipelines: 07(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=24, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, _impala_builtins.casttobigint(default.impala_tpcds_date_dim.d_month_seq) >= CAST(1218 AS BIGINT) AND _impala_builtins.casttobigint(default.impala_tpcds_date_dim.d_month_seq) <= _impala_builtins.add(CAST(1218 AS BIGINT), CAST(11 AS BIGINT))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=8B cardinality=0
     in pipelines: 08(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=25, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store_0.s_state IS NOT NULL, default.impala_tpcds_store_0.s_store_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=16B cardinality=0
     in pipelines: 10(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

