PREHOOK: query: explain cbo select  * from 
(select i_manufact_id,
sum(ss_sales_price) sum_sales,
avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales
from impala_tpcds_item, impala_tpcds_store_sales, impala_tpcds_date_dim, impala_tpcds_store
where ss_item_sk = i_item_sk and
ss_sold_date_sk = d_date_sk and
ss_store_sk = s_store_sk and
d_month_seq in (1212,1212+1,1212+2,1212+3,1212+4,1212+5,1212+6,1212+7,1212+8,1212+9,1212+10,1212+11) and
((i_category in ('Books','Children','Electronics') and
i_class in ('personal','portable','reference','self-help') and
i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
          'exportiunivamalg #9','scholaramalgamalg #9'))
or(i_category in ('Women','Music','Men') and
i_class in ('accessories','classical','fragrances','pants') and
i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
          'importoamalg #1')))
group by i_manufact_id, d_qoy ) tmp1
where case when avg_quarterly_sales > 0 
     then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales 
     else null end > 0.1
order by avg_quarterly_sales,
      sum_sales,
      i_manufact_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select  * from 
(select i_manufact_id,
sum(ss_sales_price) sum_sales,
avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales
from impala_tpcds_item, impala_tpcds_store_sales, impala_tpcds_date_dim, impala_tpcds_store
where ss_item_sk = i_item_sk and
ss_sold_date_sk = d_date_sk and
ss_store_sk = s_store_sk and
d_month_seq in (1212,1212+1,1212+2,1212+3,1212+4,1212+5,1212+6,1212+7,1212+8,1212+9,1212+10,1212+11) and
((i_category in ('Books','Children','Electronics') and
i_class in ('personal','portable','reference','self-help') and
i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
          'exportiunivamalg #9','scholaramalgamalg #9'))
or(i_category in ('Women','Music','Men') and
i_class in ('accessories','classical','fragrances','pants') and
i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
          'importoamalg #1')))
group by i_manufact_id, d_qoy ) tmp1
where case when avg_quarterly_sales > 0 
     then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales 
     else null end > 0.1
order by avg_quarterly_sales,
      sum_sales,
      i_manufact_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaSortRel(sort0=[$2], sort1=[$1], sort2=[$0], dir0=[ASC], dir1=[ASC], dir2=[ASC], fetch=[100])
  ImpalaProjectRel((tok_table_or_col i_manufact_id)=[$0], (tok_function sum (tok_table_or_col ss_sales_price))=[$2], avg_window_0=[avg($2) OVER (PARTITION BY $0 ORDER BY $0 NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)], condition=[CASE(>($2, 0), >(/(ABS(-($1, $2)), $2), 0.1:DECIMAL(1, 1)), false)])
    ImpalaAggregateRel(group=[{6, 8}], agg#0=[sum($2)])
      ImpalaJoinRel(condition=[=($3, $7)], joinType=[inner])
        ImpalaJoinRel(condition=[=($0, $5)], joinType=[inner])
          ImpalaJoinRel(condition=[=($1, $4)], joinType=[inner])
            ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_store_sk=[$6], ss_sales_price=[$12], ss_sold_date_sk=[$22])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($1), IS NOT NULL($22), IS NOT NULL($6))])
            ImpalaProjectPassthroughRel(s_store_sk=[$0])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[IS NOT NULL($0)])
          ImpalaProjectPassthroughRel(i_item_sk=[$0], i_manufact_id=[$13])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(OR(IN($12, _UTF-16LE'Books', _UTF-16LE'Children', _UTF-16LE'Electronics'), IN($12, _UTF-16LE'Women', _UTF-16LE'Music', _UTF-16LE'Men')), OR(IN($10, _UTF-16LE'personal', _UTF-16LE'portable', _UTF-16LE'reference', _UTF-16LE'self-help'), IN($10, _UTF-16LE'accessories', _UTF-16LE'classical', _UTF-16LE'fragrances', _UTF-16LE'pants')), OR(IN($8, _UTF-16LE'scholaramalgamalg #14', _UTF-16LE'scholaramalgamalg #7', _UTF-16LE'exportiunivamalg #9', _UTF-16LE'scholaramalgamalg #9'), IN($8, _UTF-16LE'amalgimporto #1', _UTF-16LE'edu packscholar #1', _UTF-16LE'exportiimporto #1', _UTF-16LE'importoamalg #1')), OR(AND(IN($12, _UTF-16LE'Books', _UTF-16LE'Children', _UTF-16LE'Electronics'), IN($10, _UTF-16LE'personal', _UTF-16LE'portable', _UTF-16LE'reference', _UTF-16LE'self-help'), IN($8, _UTF-16LE'scholaramalgamalg #14', _UTF-16LE'scholaramalgamalg #7', _UTF-16LE'exportiunivamalg #9', _UTF-16LE'scholaramalgamalg #9')), AND(IN($12, _UTF-16LE'Women', _UTF-16LE'Music', _UTF-16LE'Men'), IN($10, _UTF-16LE'accessories', _UTF-16LE'classical', _UTF-16LE'fragrances', _UTF-16LE'pants'), IN($8, _UTF-16LE'amalgimporto #1', _UTF-16LE'edu packscholar #1', _UTF-16LE'exportiimporto #1', _UTF-16LE'importoamalg #1'))), IS NOT NULL($0))])
        ImpalaProjectPassthroughRel(d_date_sk=[$0], d_qoy=[$10])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($3, 1212, +(1212, 1), +(1212, 2), +(1212, 3), +(1212, 4), +(1212, 5), +(1212, 6), +(1212, 7), +(1212, 8), +(1212, 9), +(1212, 10), +(1212, 11)), IS NOT NULL($0))])

PREHOOK: query: explain select  * from 
(select i_manufact_id,
sum(ss_sales_price) sum_sales,
avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales
from impala_tpcds_item, impala_tpcds_store_sales, impala_tpcds_date_dim, impala_tpcds_store
where ss_item_sk = i_item_sk and
ss_sold_date_sk = d_date_sk and
ss_store_sk = s_store_sk and
d_month_seq in (1212,1212+1,1212+2,1212+3,1212+4,1212+5,1212+6,1212+7,1212+8,1212+9,1212+10,1212+11) and
((i_category in ('Books','Children','Electronics') and
i_class in ('personal','portable','reference','self-help') and
i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
          'exportiunivamalg #9','scholaramalgamalg #9'))
or(i_category in ('Women','Music','Men') and
i_class in ('accessories','classical','fragrances','pants') and
i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
          'importoamalg #1')))
group by i_manufact_id, d_qoy ) tmp1
where case when avg_quarterly_sales > 0 
     then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales 
     else null end > 0.1
order by avg_quarterly_sales,
      sum_sales,
      i_manufact_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select  * from 
(select i_manufact_id,
sum(ss_sales_price) sum_sales,
avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales
from impala_tpcds_item, impala_tpcds_store_sales, impala_tpcds_date_dim, impala_tpcds_store
where ss_item_sk = i_item_sk and
ss_sold_date_sk = d_date_sk and
ss_store_sk = s_store_sk and
d_month_seq in (1212,1212+1,1212+2,1212+3,1212+4,1212+5,1212+6,1212+7,1212+8,1212+9,1212+10,1212+11) and
((i_category in ('Books','Children','Electronics') and
i_class in ('personal','portable','reference','self-help') and
i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
          'exportiunivamalg #9','scholaramalgamalg #9'))
or(i_category in ('Women','Music','Men') and
i_class in ('accessories','classical','fragrances','pants') and
i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
          'importoamalg #1')))
group by i_manufact_id, d_qoy ) tmp1
where case when avg_quarterly_sales > 0 
     then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales 
     else null end > 0.1
order by avg_quarterly_sales,
      sum_sales,
      i_manufact_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F07:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=40.04KB mem-reservation=0B thread-reservation=1
  WRITE TO HDFS [_result_db_._result_table_, OVERWRITE=false]
  |  partitions=1
  |  output exprs: (tok_table_or_col i_manufact_id), (tok_function sum (tok_table_or_col ss_sales_price)), avg_window_0
  |  mem-estimate=36B mem-reservation=0B thread-reservation=0
  |
  19:MERGING-EXCHANGE [UNPARTITIONED]
     order by: avg_window_0 ASC NULLS LAST, (tok_function sum (tok_table_or_col ss_sales_price)) ASC NULLS LAST, (tok_table_or_col i_manufact_id) ASC NULLS LAST
     limit: 100
     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=36B cardinality=0
     in pipelines: 12(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.03MB mem-reservation=10.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=19, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:TOP-N [LIMIT=100]
  |  order by: avg_window_0 ASC NULLS LAST, (tok_function sum (tok_table_or_col ss_sales_price)) ASC NULLS LAST, (tok_table_or_col i_manufact_id) ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=15 row-size=36B cardinality=0
  |  in pipelines: 12(GETNEXT), 09(OPEN)
  |
  11:SELECT
  |  predicates: CASE WHEN avg_window_0 > CAST(0 AS DECIMAL(38,6)) THEN _impala_builtins.divide(_impala_builtins.abs(_impala_builtins.subtract((tok_function sum (tok_table_or_col ss_sales_price)), avg_window_0)), avg_window_0) > CAST(0.1 AS DECIMAL(1,1)) ELSE FALSE END
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=8 row-size=36B cardinality=0
  |  in pipelines: 09(GETNEXT)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=8 row-size=36B cardinality=0
  |  in pipelines: 09(GETNEXT)
  |
  10:ANALYTIC
  |  functions: _impala_builtins.avg(_impala_builtins.sum(default.impala_tpcds_store_sales.ss_sales_price))
  |  partition by: default.impala_tpcds_item.i_manufact_id
  |  order by: default.impala_tpcds_item.i_manufact_id ASC NULLS FIRST
  |  window: ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13,12 row-size=40B cardinality=0
  |  in pipelines: 09(GETNEXT)
  |
  09:SORT
  |  order by: default.impala_tpcds_item.i_manufact_id ASC NULLS FIRST
  |  mem-estimate=6.00MB mem-reservation=6.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=24B cardinality=0
  |  in pipelines: 09(GETNEXT), 17(OPEN)
  |
  18:EXCHANGE [HASH(default.impala_tpcds_item.i_manufact_id)]
     mem-estimate=28.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=24B cardinality=0
     in pipelines: 17(GETNEXT)

F04:PLAN FRAGMENT [HASH(default.impala_tpcds_item.i_manufact_id,default.impala_tpcds_date_dim.d_qoy)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.03MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=18, HASH(default.impala_tpcds_item.i_manufact_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  17:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_sales_price)
  |  group by: default.impala_tpcds_item.i_manufact_id, default.impala_tpcds_date_dim.d_qoy
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=7 row-size=24B cardinality=0
  |  in pipelines: 17(GETNEXT), 01(OPEN)
  |
  16:EXCHANGE [HASH(default.impala_tpcds_item.i_manufact_id,default.impala_tpcds_date_dim.d_qoy)]
     mem-estimate=28.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=24B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.89MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=16, HASH(default.impala_tpcds_item.i_manufact_id,default.impala_tpcds_date_dim.d_qoy)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales.ss_sales_price)
  |  group by: default.impala_tpcds_item.i_manufact_id, default.impala_tpcds_date_dim.d_qoy
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=7 row-size=24B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  07:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3,5 row-size=84B cardinality=0
  |  in pipelines: 01(GETNEXT), 06(OPEN)
  |
  |--15:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=5 row-size=12B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3 row-size=72B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--14:EXCHANGE [BROADCAST]
  |     mem-estimate=52.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=48B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_store_sk = default.impala_tpcds_store.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1 row-size=24B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--13:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1 row-size=4B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_item_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_item_sk, ss_store_sk, ss_sales_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=20B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=13, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store.s_store_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=4B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=14, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL, default.impala_tpcds_item.i_category IN ('Books', 'Children', 'Electronics') OR default.impala_tpcds_item.i_category IN ('Women', 'Music', 'Men'), default.impala_tpcds_item.i_brand IN ('scholaramalgamalg #14', 'scholaramalgamalg #7', 'exportiunivamalg #9', 'scholaramalgamalg #9') OR default.impala_tpcds_item.i_brand IN ('amalgimporto #1', 'edu packscholar #1', 'exportiimporto #1', 'importoamalg #1'), default.impala_tpcds_item.i_class IN ('personal', 'portable', 'reference', 'self-help') OR default.impala_tpcds_item.i_class IN ('accessories', 'classical', 'fragrances', 'pants'), default.impala_tpcds_item.i_category IN ('Books', 'Children', 'Electronics') AND default.impala_tpcds_item.i_class IN ('personal', 'portable', 'reference', 'self-help') AND default.impala_tpcds_item.i_brand IN ('scholaramalgamalg #14', 'scholaramalgamalg #7', 'exportiunivamalg #9', 'scholaramalgamalg #9') OR default.impala_tpcds_item.i_category IN ('Women', 'Music', 'Men') AND default.impala_tpcds_item.i_class IN ('accessories', 'classical', 'fragrances', 'pants') AND default.impala_tpcds_item.i_brand IN ('amalgimporto #1', 'edu packscholar #1', 'exportiimporto #1', 'importoamalg #1')
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=48B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=15, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_month_seq IN (CAST(1212 AS INT), _impala_builtins.add(CAST(1212 AS INT), CAST(1 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(2 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(3 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(4 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(5 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(6 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(7 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(8 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(9 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(10 AS INT)), _impala_builtins.add(CAST(1212 AS INT), CAST(11 AS INT)))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=12B cardinality=0
     in pipelines: 06(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

