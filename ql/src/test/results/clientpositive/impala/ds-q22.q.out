PREHOOK: query: explain cbo physical select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from impala_tpcds_inventory
           ,impala_tpcds_date_dim
           ,impala_tpcds_item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1186 and 1186 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_inventory
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from impala_tpcds_inventory
           ,impala_tpcds_date_dim
           ,impala_tpcds_item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1186 and 1186 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_inventory
POSTHOOK: Input: default@impala_tpcds_item
CBO PLAN:
ImpalaSortRel(sort0=[$4], sort1=[$0], sort2=[$1], sort3=[$2], sort4=[$3], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], dir4=[ASC], fetch=[100])
  ImpalaProjectRel($f0=[$3], $f1=[$0], $f2=[$1], $f3=[$2], $f4=[/(CAST($4):DOUBLE, CAST($5):DOUBLE)])
    ImpalaAggregateRel(group=[{5, 6, 7, 8}], groups=[[{5, 6, 7, 8}, {5, 6, 8}, {5, 8}, {8}, {}]], agg#0=[sum($2)], agg#1=[count($2)])
      ImpalaJoinRel(condition=[=($1, $4)], joinType=[inner])
        ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
          ImpalaProjectPassthroughRel(inv_date_sk=[$0], inv_item_sk=[$1], CAST=[CAST($3):BIGINT])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_inventory]], condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
          ImpalaProjectPassthroughRel(d_date_sk=[$0])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $3, 1186, +(1186, 11)), IS NOT NULL($0))])
        ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand=[$8], i_class=[$10], i_category=[$12], i_product_name=[$21])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])

PREHOOK: query: explain select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from impala_tpcds_inventory
           ,impala_tpcds_date_dim
           ,impala_tpcds_item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1186 and 1186 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_inventory
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Output: streaming
POSTHOOK: query: explain select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from impala_tpcds_inventory
           ,impala_tpcds_date_dim
           ,impala_tpcds_item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1186 and 1186 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_inventory
POSTHOOK: Input: default@impala_tpcds_item
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F05:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=60.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_product_name WHEN 7 THEN default.impala_tpcds_item.i_product_name WHEN 8 THEN default.impala_tpcds_item.i_product_name WHEN 9 THEN default.impala_tpcds_item.i_product_name WHEN 10 THEN NULL END, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_brand WHEN 7 THEN default.impala_tpcds_item.i_brand WHEN 8 THEN default.impala_tpcds_item.i_brand WHEN 9 THEN NULL WHEN 10 THEN NULL END, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_class WHEN 7 THEN default.impala_tpcds_item.i_class WHEN 8 THEN NULL WHEN 9 THEN NULL WHEN 10 THEN NULL END, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_category WHEN 7 THEN NULL WHEN 8 THEN NULL WHEN 9 THEN NULL WHEN 10 THEN NULL END, divide(casttodouble(aggif(valid_tid(6,7,8,9,10) IN (6, 7, 8, 9, 10), CASE valid_tid(6,7,8,9,10) WHEN 6 THEN _impala_builtins.sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 7 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 8 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 9 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 10 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) END)), casttodouble(aggif(valid_tid(6,7,8,9,10) IN (6, 7, 8, 9, 10), CASE valid_tid(6,7,8,9,10) WHEN 6 THEN _impala_builtins.count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 7 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 8 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 9 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 10 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) END)))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  13:MERGING-EXCHANGE [UNPARTITIONED]
     order by: divide(casttodouble(aggif(valid_tid(6,7,8,9,10) IN (6, 7, 8, 9, 10), CASE valid_tid(6,7,8,9,10) WHEN 6 THEN _impala_builtins.sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 7 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 8 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 9 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 10 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) END)), casttodouble(aggif(valid_tid(6,7,8,9,10) IN (6, 7, 8, 9, 10), CASE valid_tid(6,7,8,9,10) WHEN 6 THEN _impala_builtins.count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 7 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 8 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 9 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 10 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) END))) ASC NULLS LAST, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_product_name WHEN 7 THEN default.impala_tpcds_item.i_product_name WHEN 8 THEN default.impala_tpcds_item.i_product_name WHEN 9 THEN default.impala_tpcds_item.i_product_name WHEN 10 THEN NULL END ASC NULLS LAST, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_brand WHEN 7 THEN default.impala_tpcds_item.i_brand WHEN 8 THEN default.impala_tpcds_item.i_brand WHEN 9 THEN NULL WHEN 10 THEN NULL END ASC NULLS LAST, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_class WHEN 7 THEN default.impala_tpcds_item.i_class WHEN 8 THEN NULL WHEN 9 THEN NULL WHEN 10 THEN NULL END ASC NULLS LAST, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_category WHEN 7 THEN NULL WHEN 8 THEN NULL WHEN 9 THEN NULL WHEN 10 THEN NULL END ASC NULLS LAST
     limit: 100
     mem-estimate=60.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=56B cardinality=0
     in pipelines: 08(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=650.00MB mem-reservation=171.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=13, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:TOP-N [LIMIT=100]
  |  order by: divide(casttodouble(aggif(valid_tid(6,7,8,9,10) IN (6, 7, 8, 9, 10), CASE valid_tid(6,7,8,9,10) WHEN 6 THEN _impala_builtins.sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 7 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 8 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 9 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 10 THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) END)), casttodouble(aggif(valid_tid(6,7,8,9,10) IN (6, 7, 8, 9, 10), CASE valid_tid(6,7,8,9,10) WHEN 6 THEN _impala_builtins.count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 7 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 8 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 9 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN 10 THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) END))) ASC NULLS LAST, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_product_name WHEN 7 THEN default.impala_tpcds_item.i_product_name WHEN 8 THEN default.impala_tpcds_item.i_product_name WHEN 9 THEN default.impala_tpcds_item.i_product_name WHEN 10 THEN NULL END ASC NULLS LAST, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_brand WHEN 7 THEN default.impala_tpcds_item.i_brand WHEN 8 THEN default.impala_tpcds_item.i_brand WHEN 9 THEN NULL WHEN 10 THEN NULL END ASC NULLS LAST, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_class WHEN 7 THEN default.impala_tpcds_item.i_class WHEN 8 THEN NULL WHEN 9 THEN NULL WHEN 10 THEN NULL END ASC NULLS LAST, CASE valid_tid(6,7,8,9,10) WHEN 6 THEN default.impala_tpcds_item.i_category WHEN 7 THEN NULL WHEN 8 THEN NULL WHEN 9 THEN NULL WHEN 10 THEN NULL END ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=13 row-size=56B cardinality=0
  |  in pipelines: 08(GETNEXT), 07(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=12 row-size=56B cardinality=0
  |  in pipelines: 07(GETNEXT)
  |
  07:AGGREGATE [FINALIZE]
  |  output: aggif(valid_tid(6,7,8,9,10) IN (CAST(6 AS INT), CAST(7 AS INT), CAST(8 AS INT), CAST(9 AS INT), CAST(10 AS INT)), CASE valid_tid(6,7,8,9,10) WHEN CAST(6 AS INT) THEN _impala_builtins.sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(7 AS INT) THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(8 AS INT) THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(9 AS INT) THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(10 AS INT) THEN sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) END), aggif(valid_tid(6,7,8,9,10) IN (CAST(6 AS INT), CAST(7 AS INT), CAST(8 AS INT), CAST(9 AS INT), CAST(10 AS INT)), CASE valid_tid(6,7,8,9,10) WHEN CAST(6 AS INT) THEN _impala_builtins.count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(7 AS INT) THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(8 AS INT) THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(9 AS INT) THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(10 AS INT) THEN count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) END)
  |  group by: CASE valid_tid(6,7,8,9,10) WHEN CAST(6 AS INT) THEN default.impala_tpcds_item.i_brand WHEN CAST(7 AS INT) THEN default.impala_tpcds_item.i_brand WHEN CAST(8 AS INT) THEN default.impala_tpcds_item.i_brand WHEN CAST(9 AS INT) THEN NULL WHEN CAST(10 AS INT) THEN NULL END, CASE valid_tid(6,7,8,9,10) WHEN CAST(6 AS INT) THEN default.impala_tpcds_item.i_class WHEN CAST(7 AS INT) THEN default.impala_tpcds_item.i_class WHEN CAST(8 AS INT) THEN NULL WHEN CAST(9 AS INT) THEN NULL WHEN CAST(10 AS INT) THEN NULL END, CASE valid_tid(6,7,8,9,10) WHEN CAST(6 AS INT) THEN default.impala_tpcds_item.i_category WHEN CAST(7 AS INT) THEN NULL WHEN CAST(8 AS INT) THEN NULL WHEN CAST(9 AS INT) THEN NULL WHEN CAST(10 AS INT) THEN NULL END, CASE valid_tid(6,7,8,9,10) WHEN CAST(6 AS INT) THEN default.impala_tpcds_item.i_product_name WHEN CAST(7 AS INT) THEN default.impala_tpcds_item.i_product_name WHEN CAST(8 AS INT) THEN default.impala_tpcds_item.i_product_name WHEN CAST(9 AS INT) THEN default.impala_tpcds_item.i_product_name WHEN CAST(10 AS INT) THEN NULL END, CASE valid_tid(6,7,8,9,10) WHEN CAST(6 AS INT) THEN CAST(6 AS INT) WHEN CAST(7 AS INT) THEN CAST(7 AS INT) WHEN CAST(8 AS INT) THEN CAST(8 AS INT) WHEN CAST(9 AS INT) THEN CAST(9 AS INT) WHEN CAST(10 AS INT) THEN CAST(10 AS INT) END
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=68B cardinality=0
  |  in pipelines: 07(GETNEXT), 12(OPEN)
  |
  12:AGGREGATE [FINALIZE]
  |  Class 0
  |    output: _impala_builtins.sum:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), _impala_builtins.count:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_class, default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_product_name
  |  Class 1
  |    output: sum:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), count:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_class, NULL, default.impala_tpcds_item.i_product_name
  |  Class 2
  |    output: sum:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), count:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, NULL, NULL, default.impala_tpcds_item.i_product_name
  |  Class 3
  |    output: sum:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), count:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: NULL, NULL, NULL, default.impala_tpcds_item.i_product_name
  |  Class 4
  |    output: sum:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), count:merge(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: NULL, NULL, NULL, NULL
  |  mem-estimate=522.00MB mem-reservation=137.94MB thread-reservation=0
  |  tuple-ids=6N,7N,8N,9N,10N row-size=320B cardinality=0
  |  in pipelines: 12(GETNEXT), 01(OPEN)
  |
  11:EXCHANGE [HASH(CASE valid_tid(6,7,8,9,10) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 7 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 9 THEN murmur_hash(NULL) WHEN 10 THEN murmur_hash(NULL) END,CASE valid_tid(6,7,8,9,10) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 7 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 8 THEN murmur_hash(NULL) WHEN 9 THEN murmur_hash(NULL) WHEN 10 THEN murmur_hash(NULL) END,CASE valid_tid(6,7,8,9,10) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_category) WHEN 7 THEN murmur_hash(NULL) WHEN 8 THEN murmur_hash(NULL) WHEN 9 THEN murmur_hash(NULL) WHEN 10 THEN murmur_hash(NULL) END,CASE valid_tid(6,7,8,9,10) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 7 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 9 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 10 THEN murmur_hash(NULL) END)]
     mem-estimate=340.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=6N,7N,8N,9N,10N row-size=320B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=525.95MB mem-reservation=141.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=11, HASH(CASE valid_tid(6,7,8,9,10) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 7 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 9 THEN murmur_hash(NULL) WHEN 10 THEN murmur_hash(NULL) END,CASE valid_tid(6,7,8,9,10) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 7 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 8 THEN murmur_hash(NULL) WHEN 9 THEN murmur_hash(NULL) WHEN 10 THEN murmur_hash(NULL) END,CASE valid_tid(6,7,8,9,10) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_category) WHEN 7 THEN murmur_hash(NULL) WHEN 8 THEN murmur_hash(NULL) WHEN 9 THEN murmur_hash(NULL) WHEN 10 THEN murmur_hash(NULL) END,CASE valid_tid(6,7,8,9,10) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 7 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 9 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 10 THEN murmur_hash(NULL) END)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE [STREAMING]
  |  Class 0
  |    output: sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_class, default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_product_name
  |  Class 1
  |    output: sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_class, NULL, default.impala_tpcds_item.i_product_name
  |  Class 2
  |    output: sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, NULL, NULL, default.impala_tpcds_item.i_product_name
  |  Class 3
  |    output: sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: NULL, NULL, NULL, default.impala_tpcds_item.i_product_name
  |  Class 4
  |    output: sum(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)), count(casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: NULL, NULL, NULL, NULL
  |  mem-estimate=522.00MB mem-reservation=138.00MB thread-reservation=0
  |  tuple-ids=6N,7N,8N,9N,10N row-size=320B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_inventory.inv_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=80B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--10:EXCHANGE [BROADCAST]
  |     mem-estimate=60.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=56B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_inventory.inv_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=24B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--09:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=8B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_inventory, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_inventory.inv_date_sk IS NOT NULL, default.impala_tpcds_inventory.inv_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=16B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=09, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_month_seq >= CAST(1186 AS INT) AND default.impala_tpcds_date_dim.d_month_seq <= add(CAST(1186 AS INT), CAST(11 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=8B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=10, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=56B cardinality=0
     in pipelines: 04(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

