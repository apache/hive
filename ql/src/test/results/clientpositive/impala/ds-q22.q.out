PREHOOK: query: explain cbo select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from impala_tpcds_inventory
           ,impala_tpcds_date_dim
           ,impala_tpcds_item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1186 and 1186 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_inventory
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from impala_tpcds_inventory
           ,impala_tpcds_date_dim
           ,impala_tpcds_item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1186 and 1186 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_inventory
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaSortRel(sort0=[$4], sort1=[$0], sort2=[$1], sort3=[$2], sort4=[$3], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], dir4=[ASC], fetch=[100])
  ImpalaProjectRel(i_product_name=[$3], i_brand=[$0], i_class=[$1], i_category=[$2], $f4=[$4])
    ImpalaAggregateRel(group=[{5, 6, 7, 8}], groups=[[{5, 6, 7, 8}, {5, 6, 8}, {5, 8}, {8}, {}]], agg#0=[avg($2)])
      ImpalaJoinRel(condition=[=($1, $4)], joinType=[inner])
        ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
          ImpalaProjectPassthroughRel(inv_date_sk=[$0], inv_item_sk=[$1], CAST=[CAST($3):BIGINT])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_inventory]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
          ImpalaProjectPassthroughRel(d_date_sk=[$0])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $3, 1186, +(1186, 11)), IS NOT NULL($0))])
        ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand=[$8], i_class=[$10], i_category=[$12], i_product_name=[$21])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])

PREHOOK: query: explain select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from impala_tpcds_inventory
           ,impala_tpcds_date_dim
           ,impala_tpcds_item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1186 and 1186 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_inventory
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from impala_tpcds_inventory
           ,impala_tpcds_date_dim
           ,impala_tpcds_item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1186 and 1186 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_inventory
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F05:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=60.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: i_product_name, i_brand, i_class, i_category, $f4
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  13:MERGING-EXCHANGE [UNPARTITIONED]
     order by: $f4 ASC NULLS LAST, i_product_name ASC NULLS LAST, i_brand ASC NULLS LAST, i_class ASC NULLS LAST, i_category ASC NULLS LAST
     limit: 100
     mem-estimate=60.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=18 row-size=56B cardinality=0
     in pipelines: 08(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=650.00MB mem-reservation=171.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=13, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:TOP-N [LIMIT=100]
  |  order by: $f4 ASC NULLS LAST, i_product_name ASC NULLS LAST, i_brand ASC NULLS LAST, i_class ASC NULLS LAST, i_category ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=18 row-size=56B cardinality=0
  |  in pipelines: 08(GETNEXT), 07(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=17 row-size=56B cardinality=0
  |  in pipelines: 07(GETNEXT)
  |
  07:AGGREGATE [FINALIZE]
  |  output: aggif(valid_tid(7,9,11,13,15) IN (CAST(7 AS INT), CAST(9 AS INT), CAST(11 AS INT), CAST(13 AS INT), CAST(15 AS INT)), CASE valid_tid(7,9,11,13,15) WHEN CAST(7 AS INT) THEN _impala_builtins.avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(9 AS INT) THEN avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(11 AS INT) THEN avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(13 AS INT) THEN avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) WHEN CAST(15 AS INT) THEN avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand)) END)
  |  group by: CASE valid_tid(7,9,11,13,15) WHEN CAST(7 AS INT) THEN default.impala_tpcds_item.i_brand WHEN CAST(9 AS INT) THEN default.impala_tpcds_item.i_brand WHEN CAST(11 AS INT) THEN default.impala_tpcds_item.i_brand WHEN CAST(13 AS INT) THEN NULL WHEN CAST(15 AS INT) THEN NULL END, CASE valid_tid(7,9,11,13,15) WHEN CAST(7 AS INT) THEN default.impala_tpcds_item.i_class WHEN CAST(9 AS INT) THEN default.impala_tpcds_item.i_class WHEN CAST(11 AS INT) THEN NULL WHEN CAST(13 AS INT) THEN NULL WHEN CAST(15 AS INT) THEN NULL END, CASE valid_tid(7,9,11,13,15) WHEN CAST(7 AS INT) THEN default.impala_tpcds_item.i_category WHEN CAST(9 AS INT) THEN NULL WHEN CAST(11 AS INT) THEN NULL WHEN CAST(13 AS INT) THEN NULL WHEN CAST(15 AS INT) THEN NULL END, CASE valid_tid(7,9,11,13,15) WHEN CAST(7 AS INT) THEN default.impala_tpcds_item.i_product_name WHEN CAST(9 AS INT) THEN default.impala_tpcds_item.i_product_name WHEN CAST(11 AS INT) THEN default.impala_tpcds_item.i_product_name WHEN CAST(13 AS INT) THEN default.impala_tpcds_item.i_product_name WHEN CAST(15 AS INT) THEN NULL END, CASE valid_tid(7,9,11,13,15) WHEN CAST(7 AS INT) THEN CAST(7 AS INT) WHEN CAST(9 AS INT) THEN CAST(9 AS INT) WHEN CAST(11 AS INT) THEN CAST(11 AS INT) WHEN CAST(13 AS INT) THEN CAST(13 AS INT) WHEN CAST(15 AS INT) THEN CAST(15 AS INT) END
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=16 row-size=60B cardinality=0
  |  in pipelines: 07(GETNEXT), 12(OPEN)
  |
  12:AGGREGATE [FINALIZE]
  |  Class 0
  |    output: _impala_builtins.avg:merge(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_class, default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_product_name
  |  Class 1
  |    output: avg:merge(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_class, NULL, default.impala_tpcds_item.i_product_name
  |  Class 2
  |    output: avg:merge(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, NULL, NULL, default.impala_tpcds_item.i_product_name
  |  Class 3
  |    output: avg:merge(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: NULL, NULL, NULL, default.impala_tpcds_item.i_product_name
  |  Class 4
  |    output: avg:merge(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: NULL, NULL, NULL, NULL
  |  mem-estimate=522.00MB mem-reservation=137.94MB thread-reservation=0
  |  tuple-ids=7N,9N,11N,13N,15N row-size=280B cardinality=0
  |  in pipelines: 12(GETNEXT), 01(OPEN)
  |
  11:EXCHANGE [HASH(CASE valid_tid(6,8,10,12,14) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 10 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 12 THEN murmur_hash(NULL) WHEN 14 THEN murmur_hash(NULL) END,CASE valid_tid(6,8,10,12,14) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 10 THEN murmur_hash(NULL) WHEN 12 THEN murmur_hash(NULL) WHEN 14 THEN murmur_hash(NULL) END,CASE valid_tid(6,8,10,12,14) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_category) WHEN 8 THEN murmur_hash(NULL) WHEN 10 THEN murmur_hash(NULL) WHEN 12 THEN murmur_hash(NULL) WHEN 14 THEN murmur_hash(NULL) END,CASE valid_tid(6,8,10,12,14) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 10 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 12 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 14 THEN murmur_hash(NULL) END)]
     mem-estimate=300.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=6N,8N,10N,12N,14N row-size=280B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=525.95MB mem-reservation=141.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=11, HASH(CASE valid_tid(6,8,10,12,14) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 10 THEN murmur_hash(default.impala_tpcds_item.i_brand) WHEN 12 THEN murmur_hash(NULL) WHEN 14 THEN murmur_hash(NULL) END,CASE valid_tid(6,8,10,12,14) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_class) WHEN 10 THEN murmur_hash(NULL) WHEN 12 THEN murmur_hash(NULL) WHEN 14 THEN murmur_hash(NULL) END,CASE valid_tid(6,8,10,12,14) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_category) WHEN 8 THEN murmur_hash(NULL) WHEN 10 THEN murmur_hash(NULL) WHEN 12 THEN murmur_hash(NULL) WHEN 14 THEN murmur_hash(NULL) END,CASE valid_tid(6,8,10,12,14) WHEN 6 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 8 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 10 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 12 THEN murmur_hash(default.impala_tpcds_item.i_product_name) WHEN 14 THEN murmur_hash(NULL) END)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE [STREAMING]
  |  Class 0
  |    output: avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_class, default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_product_name
  |  Class 1
  |    output: avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_class, NULL, default.impala_tpcds_item.i_product_name
  |  Class 2
  |    output: avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: default.impala_tpcds_item.i_brand, NULL, NULL, default.impala_tpcds_item.i_product_name
  |  Class 3
  |    output: avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: NULL, NULL, NULL, default.impala_tpcds_item.i_product_name
  |  Class 4
  |    output: avg(_impala_builtins.casttobigint(default.impala_tpcds_inventory.inv_quantity_on_hand))
  |    group by: NULL, NULL, NULL, NULL
  |  mem-estimate=522.00MB mem-reservation=138.00MB thread-reservation=0
  |  tuple-ids=6N,8N,10N,12N,14N row-size=280B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_inventory.inv_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=80B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--10:EXCHANGE [BROADCAST]
  |     mem-estimate=60.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=56B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_inventory.inv_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=24B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--09:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=8B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_inventory, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_inventory.inv_date_sk IS NOT NULL, default.impala_tpcds_inventory.inv_item_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=16B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=09, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_month_seq >= CAST(1186 AS INT) AND default.impala_tpcds_date_dim.d_month_seq <= _impala_builtins.add(CAST(1186 AS INT), CAST(11 AS INT))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=8B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=10, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=56B cardinality=0
     in pipelines: 04(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

