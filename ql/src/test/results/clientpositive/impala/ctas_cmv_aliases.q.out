PREHOOK: query: create table emps_imp0 (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as parquet TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@emps_imp0
POSTHOOK: query: create table emps_imp0 (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as parquet TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emps_imp0
PREHOOK: query: create table depts_imp0 (
  deptno int,
  name varchar(256),
  locationid int)
stored as parquet TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@depts_imp0
POSTHOOK: query: create table depts_imp0 (
  deptno int,
  name varchar(256),
  locationid int)
stored as parquet TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@depts_imp0
HMS CALL get_table_req FOR emps_imp0
PREHOOK: query: alter table emps_imp0 add constraint pk1 primary key (empid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table emps_imp0 add constraint pk1 primary key (empid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
HMS CALL get_table_req FOR depts_imp0
PREHOOK: query: alter table depts_imp0 add constraint pk2 primary key (deptno) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table depts_imp0 add constraint pk2 primary key (deptno) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
HMS CALL get_table_req FOR emps_imp0
PREHOOK: query: alter table emps_imp0 add constraint fk1 foreign key (deptno) references depts_imp0(deptno) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table emps_imp0 add constraint fk1 foreign key (deptno) references depts_imp0(deptno) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
HMS CALL get_table_req FOR tab1_imp0
HMS CALL get_table_req FOR emps_imp0
HMS CALL get_table_req FOR depts_imp0
HMS CALL get_foreign_keys FOR emps_imp0
HMS CALL get_foreign_keys FOR depts_imp0
PREHOOK: query: explain extended
create table tab1_imp0
stored as parquet TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only') as
select empid, depts_imp0.deptno deptno0, count(*) cnt from emps_imp0
join depts_imp0 using (deptno) where depts_imp0.deptno > cast(ltrim('10', 'a') as integer)
group by empid, depts_imp0.deptno
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@depts_imp0
PREHOOK: Input: default@emps_imp0
PREHOOK: Output: database:default
PREHOOK: Output: default@tab1_imp0
POSTHOOK: query: explain extended
create table tab1_imp0
stored as parquet TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only') as
select empid, depts_imp0.deptno deptno0, count(*) cnt from emps_imp0
join depts_imp0 using (deptno) where depts_imp0.deptno > cast(ltrim('10', 'a') as integer)
group by empid, depts_imp0.deptno
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@depts_imp0
POSTHOOK: Input: default@emps_imp0
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab1_imp0
OPTIMIZED SQL: SELECT `t0`.`empid`, `t2`.`deptno` AS `deptno0`, COUNT(*) AS `$f2`
FROM (SELECT `empid`, `deptno`
FROM `default`.`emps_imp0`
WHERE `deptno` > LTRIM('10', 'a')) AS `t0`
INNER JOIN (SELECT `deptno`
FROM `default`.`depts_imp0`
WHERE `deptno` > LTRIM('10', 'a')) AS `t2` ON `t0`.`deptno` = `t2`.`deptno`
GROUP BY `t0`.`empid`, `t2`.`deptno`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F02:PLAN FRAGMENT [HASH(default.emps_imp0.empid,default.depts_imp0.deptno)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.02MB mem-reservation=34.00MB thread-reservation=1
  WRITE TO HDFS [default.tab1_imp0, OVERWRITE=false]
  |  partitions=1
  |  output exprs: default.emps_imp0.empid, default.depts_imp0.deptno, count(*)
  |  mem-estimate=16B mem-reservation=0B thread-reservation=0
  |
  06:AGGREGATE [FINALIZE]
  |  output: count:merge(*)
  |  group by: default.emps_imp0.empid, default.depts_imp0.deptno
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=16B cardinality=0
  |  in pipelines: 06(GETNEXT), 00(OPEN)
  |
  05:EXCHANGE [HASH(default.emps_imp0.empid,default.depts_imp0.deptno)]
     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=16B cardinality=0
     in pipelines: 00(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.95MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=05, HASH(default.emps_imp0.empid,default.depts_imp0.deptno)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: default.emps_imp0.empid, default.depts_imp0.deptno
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=16B cardinality=0
  |  in pipelines: 00(GETNEXT)
  |
  02:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.emps_imp0.deptno = default.depts_imp0.deptno
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=12B cardinality=0
  |  in pipelines: 00(GETNEXT), 01(OPEN)
  |
  |--04:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=4B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  00:SCAN HDFS [default.emps_imp0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.emps_imp0.deptno > casttoint(ltrim('10', 'a'))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.emps_imp0.deptno > casttoint(ltrim('10', 'a'))
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=8B cardinality=0
     in pipelines: 00(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=04, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SCAN HDFS [default.depts_imp0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.depts_imp0.deptno > casttoint(ltrim('10', 'a'))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.depts_imp0.deptno > casttoint(ltrim('10', 'a'))
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=4B cardinality=0
     in pipelines: 01(GETNEXT)


  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
          source: hdfs://### HDFS PATH ###
          destination: hdfs://### HDFS PATH ###

  Stage: Stage-2
    Create Table
      columns: empid int, deptno0 int, cnt bigint
      name: default.tab1_imp0
      input format: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
      output format: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
      serde name: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
      table properties:
        transactional true
        transactional_properties insert_only

HMS CALL get_table_req FOR mv_tab1_imp0
HMS CALL get_table_req FOR emps_imp0
HMS CALL get_table_req FOR depts_imp0
HMS CALL get_table_req FOR mv_tab1_imp0
PREHOOK: query: explain extended
create materialized view mv_tab1_imp0
stored as parquet TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only') as
select empid, depts_imp0.deptno deptno0, count(*) cnt from emps_imp0
join depts_imp0 using (deptno) where depts_imp0.deptno > cast(ltrim('10', 'a') as integer)
group by empid, depts_imp0.deptno
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts_imp0
PREHOOK: Input: default@emps_imp0
PREHOOK: Output: database:default
PREHOOK: Output: default@mv_tab1_imp0
POSTHOOK: query: explain extended
create materialized view mv_tab1_imp0
stored as parquet TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only') as
select empid, depts_imp0.deptno deptno0, count(*) cnt from emps_imp0
join depts_imp0 using (deptno) where depts_imp0.deptno > cast(ltrim('10', 'a') as integer)
group by empid, depts_imp0.deptno
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts_imp0
POSTHOOK: Input: default@emps_imp0
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv_tab1_imp0
OPTIMIZED SQL: SELECT `t0`.`empid`, `t2`.`deptno` AS `deptno0`, COUNT(*) AS `$f2`
FROM (SELECT `empid`, `deptno`
FROM `default`.`emps_imp0`
WHERE `deptno` > LTRIM('10', 'a')) AS `t0`
INNER JOIN (SELECT `deptno`
FROM `default`.`depts_imp0`
WHERE `deptno` > LTRIM('10', 'a')) AS `t2` ON `t0`.`deptno` = `t2`.`deptno`
GROUP BY `t0`.`empid`, `t2`.`deptno`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0
  Stage-3 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F02:PLAN FRAGMENT [HASH(default.emps_imp0.empid,default.depts_imp0.deptno)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.02MB mem-reservation=34.00MB thread-reservation=1
  WRITE TO HDFS [default.mv_tab1_imp0, OVERWRITE=false]
  |  partitions=1
  |  output exprs: default.emps_imp0.empid, default.depts_imp0.deptno, count(*)
  |  mem-estimate=16B mem-reservation=0B thread-reservation=0
  |
  06:AGGREGATE [FINALIZE]
  |  output: count:merge(*)
  |  group by: default.emps_imp0.empid, default.depts_imp0.deptno
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=16B cardinality=0
  |  in pipelines: 06(GETNEXT), 00(OPEN)
  |
  05:EXCHANGE [HASH(default.emps_imp0.empid,default.depts_imp0.deptno)]
     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=16B cardinality=0
     in pipelines: 00(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.95MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=05, HASH(default.emps_imp0.empid,default.depts_imp0.deptno)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: default.emps_imp0.empid, default.depts_imp0.deptno
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=16B cardinality=0
  |  in pipelines: 00(GETNEXT)
  |
  02:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.emps_imp0.deptno = default.depts_imp0.deptno
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=12B cardinality=0
  |  in pipelines: 00(GETNEXT), 01(OPEN)
  |
  |--04:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=4B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  00:SCAN HDFS [default.emps_imp0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.emps_imp0.deptno > casttoint(ltrim('10', 'a'))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.emps_imp0.deptno > casttoint(ltrim('10', 'a'))
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=8B cardinality=0
     in pipelines: 00(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=04, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SCAN HDFS [default.depts_imp0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.depts_imp0.deptno > casttoint(ltrim('10', 'a'))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.depts_imp0.deptno > casttoint(ltrim('10', 'a'))
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=4B cardinality=0
     in pipelines: 01(GETNEXT)


  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
          source: hdfs://### HDFS PATH ###
          destination: hdfs://### HDFS PATH ###

  Stage: Stage-2
    Create View
      columns: empid int, deptno0 int, cnt bigint
      table properties:
        materializedview.engine impala
        transactional true
        transactional_properties insert_only
      expanded text: select `emps_imp0`.`empid`, `depts_imp0`.`deptno` `deptno0`, count(*) `cnt` from `default`.`emps_imp0`
join `default`.`depts_imp0` using (`deptno`) where `depts_imp0`.`deptno` > cast(ltrim('10', 'a') as integer)
group by `emps_imp0`.`empid`, `depts_imp0`.`deptno`
      name: default.mv_tab1_imp0
      original text: select empid, depts_imp0.deptno deptno0, count(*) cnt from emps_imp0
join depts_imp0 using (deptno) where depts_imp0.deptno > cast(ltrim('10', 'a') as integer)
group by empid, depts_imp0.deptno
      rewrite enabled: true

  Stage: Stage-3
    Materialized View Update
      name: default.mv_tab1_imp0
      retrieve and include: true

HMS CALL get_table_req FOR emps_imp0
HMS CALL get_table_req FOR depts_imp0
HMS CALL get_table_req FOR v_tab1_imp0
PREHOOK: query: explain extended
create view v_tab1_imp0 as
select empid, depts_imp0.deptno deptno0, count(*) cnt from emps_imp0
join depts_imp0 using (deptno) where depts_imp0.deptno > cast(ltrim('10', 'a') as integer)
group by empid, depts_imp0.deptno
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@depts_imp0
PREHOOK: Input: default@emps_imp0
PREHOOK: Output: database:default
PREHOOK: Output: default@v_tab1_imp0
PREHOOK: Output: streaming
POSTHOOK: query: explain extended
create view v_tab1_imp0 as
select empid, depts_imp0.deptno deptno0, count(*) cnt from emps_imp0
join depts_imp0 using (deptno) where depts_imp0.deptno > cast(ltrim('10', 'a') as integer)
group by empid, depts_imp0.deptno
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@depts_imp0
POSTHOOK: Input: default@emps_imp0
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v_tab1_imp0
OPTIMIZED SQL: SELECT `t0`.`empid`, `t2`.`deptno` AS `deptno0`, COUNT(*) AS `$f2`
FROM (SELECT `empid`, `deptno`
FROM `default`.`emps_imp0`
WHERE `deptno` > LTRIM('10', 'a')) AS `t0`
INNER JOIN (SELECT `deptno`
FROM `default`.`depts_imp0`
WHERE `deptno` > LTRIM('10', 'a')) AS `t2` ON `t0`.`deptno` = `t2`.`deptno`
GROUP BY `t0`.`empid`, `t2`.`deptno`
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Create View
      columns: empid int, deptno0 int, cnt bigint
      expanded text: select `emps_imp0`.`empid`, `depts_imp0`.`deptno` `deptno0`, count(*) `cnt` from `default`.`emps_imp0`
join `default`.`depts_imp0` using (`deptno`) where `depts_imp0`.`deptno` > cast(ltrim('10', 'a') as integer)
group by `emps_imp0`.`empid`, `depts_imp0`.`deptno`
      name: default.v_tab1_imp0
      original text: select empid, depts_imp0.deptno deptno0, count(*) cnt from emps_imp0
join depts_imp0 using (deptno) where depts_imp0.deptno > cast(ltrim('10', 'a') as integer)
group by empid, depts_imp0.deptno

HMS CALL get_table_req FOR emps_imp0
PREHOOK: query: drop table emps_imp0
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@emps_imp0
PREHOOK: Output: default@emps_imp0
HMS CALL get_table_req FOR emps_imp0
HMS CALL get_table_req FOR emps_imp0
POSTHOOK: query: drop table emps_imp0
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@emps_imp0
POSTHOOK: Output: default@emps_imp0
HMS CALL get_table_req FOR depts_imp0
PREHOOK: query: drop table depts_imp0
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@depts_imp0
PREHOOK: Output: default@depts_imp0
HMS CALL get_table_req FOR depts_imp0
HMS CALL get_table_req FOR depts_imp0
POSTHOOK: query: drop table depts_imp0
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@depts_imp0
POSTHOOK: Output: default@depts_imp0
