PREHOOK: query: explain cbo with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from impala_tpcds_store_sales
      ,impala_tpcds_date_dim 
      ,impala_tpcds_item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (2000,2000+1,2000+2,2000+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from impala_tpcds_store_sales
            ,impala_tpcds_customer
            ,impala_tpcds_date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3) 
        group by c_customer_sk) x),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from impala_tpcds_store_sales
      ,impala_tpcds_customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from (select cs_quantity*cs_list_price sales
       from impala_tpcds_catalog_sales
           ,impala_tpcds_date_dim 
       where d_year = 2000 
         and d_moy = 3 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
      union all
      select ws_quantity*ws_list_price sales
       from impala_tpcds_web_sales 
           ,impala_tpcds_date_dim 
       where d_year = 2000 
         and d_moy = 3 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)) y 
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from impala_tpcds_store_sales
      ,impala_tpcds_date_dim 
      ,impala_tpcds_item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (2000,2000+1,2000+2,2000+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from impala_tpcds_store_sales
            ,impala_tpcds_customer
            ,impala_tpcds_date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3) 
        group by c_customer_sk) x),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from impala_tpcds_store_sales
      ,impala_tpcds_customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from (select cs_quantity*cs_list_price sales
       from impala_tpcds_catalog_sales
           ,impala_tpcds_date_dim 
       where d_year = 2000 
         and d_moy = 3 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
      union all
      select ws_quantity*ws_list_price sales
       from impala_tpcds_web_sales 
           ,impala_tpcds_date_dim 
       where d_year = 2000 
         and d_moy = 3 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)) y 
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaSortRel(fetch=[100])
  ImpalaAggregateRel(group=[{}], agg#0=[sum($0)])
    ImpalaUnionRel(all=[true])
      ImpalaProjectPassthroughRel($f0=[*(CAST($1):DECIMAL(10, 0) NOT NULL, $2)])
        ImpalaJoinRel(condition=[=($0, $3)], joinType=[semi])
          ImpalaProjectPassthroughRel(cs_bill_customer_sk=[$0], cs_quantity=[$2], cs_list_price=[$3])
            ImpalaJoinRel(condition=[=($1, $4)], joinType=[semi])
              ImpalaProjectPassthroughRel(cs_bill_customer_sk=[$1], cs_item_sk=[$2], cs_quantity=[$3], cs_list_price=[$4])
                ImpalaJoinRel(condition=[=($0, $5)], joinType=[inner])
                  ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$3], cs_item_sk=[$15], cs_quantity=[$18], cs_list_price=[$20])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($15), IS NOT NULL($3), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 2000), =($8, 3), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel($f1=[$1])
                ImpalaProjectRel(SUBSTRING=[$2], i_item_sk=[$1], d_date=[$0], $f3=[$3], condition=[>($3, 4)])
                  ImpalaAggregateRel(group=[{3, 4, 5}], agg#0=[count()])
                    ImpalaJoinRel(condition=[=($0, $4)], joinType=[inner])
                      ImpalaJoinRel(condition=[=($1, $2)], joinType=[inner])
                        ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_sold_date_sk=[$22])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($1))])
                        ImpalaProjectPassthroughRel(d_date_sk=[$0], d_date=[$2])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 2000, +(2000, 1), +(2000, 2), +(2000, 3)), IS NOT NULL($0))])
                      ImpalaProjectPassthroughRel(i_item_sk=[$0], SUBSTRING=[SUBSTRING($4, 1:BIGINT, 30:BIGINT)])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])
          ImpalaProjectPassthroughRel($f0=[$0])
            ImpalaJoinRel(condition=[>($1, $2)], joinType=[inner])
              ImpalaAggregateRel(group=[{2}], agg#0=[sum($1)], condition=[IS NOT NULL($1)])
                ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ss_customer_sk=[$2], *=[*(CAST($9):DECIMAL(10, 0) NOT NULL, $12)])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[IS NOT NULL($2)])
                  ImpalaProjectPassthroughRel(c_customer_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[IS NOT NULL($0)])
              ImpalaProjectPassthroughRel(*=[*(/(95:DECIMAL(3, 0), 100:DECIMAL(3, 0)), $0)])
                ImpalaAggregateRel(group=[{}], agg#0=[max($1)], condition=[IS NOT NULL($0)])
                  ImpalaAggregateRel(group=[{3}], agg#0=[sum($2)])
                    ImpalaJoinRel(condition=[=($1, $4)], joinType=[inner])
                      ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                        ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_sold_date_sk=[$22], *=[*(CAST($9):DECIMAL(10, 0) NOT NULL, $12)])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($2), IS NOT NULL($22))])
                        ImpalaProjectPassthroughRel(c_customer_sk=[$0])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[IS NOT NULL($0)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 2000, +(2000, 1), +(2000, 2), +(2000, 3)), IS NOT NULL($0))])
      ImpalaProjectPassthroughRel($f0=[*(CAST($1):DECIMAL(10, 0) NOT NULL, $2)])
        ImpalaJoinRel(condition=[=($0, $3)], joinType=[semi])
          ImpalaProjectPassthroughRel(ws_bill_customer_sk=[$1], ws_quantity=[$2], ws_list_price=[$3])
            ImpalaJoinRel(condition=[=($0, $4)], joinType=[semi])
              ImpalaProjectPassthroughRel(ws_item_sk=[$1], ws_bill_customer_sk=[$2], ws_quantity=[$3], ws_list_price=[$4])
                ImpalaJoinRel(condition=[=($0, $5)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_bill_customer_sk=[$4], ws_quantity=[$18], ws_list_price=[$20])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($3), IS NOT NULL($4), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 2000), =($8, 3), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel($f1=[$1])
                ImpalaProjectRel(SUBSTRING=[$2], i_item_sk=[$1], d_date=[$0], $f3=[$3], condition=[>($3, 4)])
                  ImpalaAggregateRel(group=[{3, 4, 5}], agg#0=[count()])
                    ImpalaJoinRel(condition=[=($0, $4)], joinType=[inner])
                      ImpalaJoinRel(condition=[=($1, $2)], joinType=[inner])
                        ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_sold_date_sk=[$22])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($1))])
                        ImpalaProjectPassthroughRel(d_date_sk=[$0], d_date=[$2])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 2000, +(2000, 1), +(2000, 2), +(2000, 3)), IS NOT NULL($0))])
                      ImpalaProjectPassthroughRel(i_item_sk=[$0], SUBSTRING=[SUBSTRING($4, 1:BIGINT, 30:BIGINT)])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])
          ImpalaProjectPassthroughRel($f0=[$0])
            ImpalaJoinRel(condition=[>($1, $2)], joinType=[inner])
              ImpalaAggregateRel(group=[{2}], agg#0=[sum($1)], condition=[IS NOT NULL($1)])
                ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ss_customer_sk=[$2], *=[*(CAST($9):DECIMAL(10, 0) NOT NULL, $12)])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[IS NOT NULL($2)])
                  ImpalaProjectPassthroughRel(c_customer_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[IS NOT NULL($0)])
              ImpalaProjectPassthroughRel(*=[*(/(95:DECIMAL(3, 0), 100:DECIMAL(3, 0)), $0)])
                ImpalaAggregateRel(group=[{}], agg#0=[max($1)], condition=[IS NOT NULL($0)])
                  ImpalaAggregateRel(group=[{3}], agg#0=[sum($2)])
                    ImpalaJoinRel(condition=[=($1, $4)], joinType=[inner])
                      ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                        ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_sold_date_sk=[$22], *=[*(CAST($9):DECIMAL(10, 0) NOT NULL, $12)])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($2), IS NOT NULL($22))])
                        ImpalaProjectPassthroughRel(c_customer_sk=[$0])
                          ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[IS NOT NULL($0)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 2000, +(2000, 1), +(2000, 2), +(2000, 3)), IS NOT NULL($0))])

PREHOOK: query: explain with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from impala_tpcds_store_sales
      ,impala_tpcds_date_dim 
      ,impala_tpcds_item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (2000,2000+1,2000+2,2000+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from impala_tpcds_store_sales
            ,impala_tpcds_customer
            ,impala_tpcds_date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3) 
        group by c_customer_sk) x),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from impala_tpcds_store_sales
      ,impala_tpcds_customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from (select cs_quantity*cs_list_price sales
       from impala_tpcds_catalog_sales
           ,impala_tpcds_date_dim 
       where d_year = 2000 
         and d_moy = 3 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
      union all
      select ws_quantity*ws_list_price sales
       from impala_tpcds_web_sales 
           ,impala_tpcds_date_dim 
       where d_year = 2000 
         and d_moy = 3 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)) y 
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from impala_tpcds_store_sales
      ,impala_tpcds_date_dim 
      ,impala_tpcds_item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (2000,2000+1,2000+2,2000+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from impala_tpcds_store_sales
            ,impala_tpcds_customer
            ,impala_tpcds_date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3) 
        group by c_customer_sk) x),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from impala_tpcds_store_sales
      ,impala_tpcds_customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from (select cs_quantity*cs_list_price sales
       from impala_tpcds_catalog_sales
           ,impala_tpcds_date_dim 
       where d_year = 2000 
         and d_moy = 3 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
      union all
      select ws_quantity*ws_list_price sales
       from impala_tpcds_web_sales 
           ,impala_tpcds_date_dim 
       where d_year = 2000 
         and d_moy = 3 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)) y 
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F33:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: _impala_builtins.sum($f0)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  89:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge($f0)
  |  limit: 100
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=45 row-size=16B cardinality=1
  |  in pipelines: 89(GETNEXT), 51(OPEN)
  |
  88:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=45 row-size=16B cardinality=1
     in pipelines: 51(GETNEXT)

F32:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=12.00MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F33, EXCHANGE=88, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  51:AGGREGATE
  |  output: sum($f0)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=45 row-size=16B cardinality=1
  |  in pipelines: 51(GETNEXT), 57(OPEN), 75(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=0 row-size=8B cardinality=0
  |  in pipelines: 57(GETNEXT), 75(GETNEXT)
  |
  |--50:HASH JOIN [RIGHT SEMI JOIN, PARTITIONED]
  |  |  hash predicates: default.impala_tpcds_customer_1.c_customer_sk = default.impala_tpcds_web_sales.ws_bill_customer_sk
  |  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  |  tuple-ids=23,25 row-size=36B cardinality=0
  |  |  in pipelines: 75(GETNEXT), 26(OPEN)
  |  |
  |  |--87:EXCHANGE [HASH(default.impala_tpcds_web_sales.ws_bill_customer_sk)]
  |  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=23,25 row-size=36B cardinality=0
  |  |     in pipelines: 26(GETNEXT)
  |  |
  |  86:EXCHANGE [HASH(default.impala_tpcds_customer_1.c_customer_sk)]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=44,37 row-size=36B cardinality=1
  |     in pipelines: 75(GETNEXT)
  |
  25:HASH JOIN [RIGHT SEMI JOIN, PARTITIONED]
  |  hash predicates: default.impala_tpcds_customer.c_customer_sk = default.impala_tpcds_catalog_sales.cs_bill_customer_sk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,3 row-size=36B cardinality=0
  |  in pipelines: 57(GETNEXT), 01(OPEN)
  |
  |--69:EXCHANGE [HASH(default.impala_tpcds_catalog_sales.cs_bill_customer_sk)]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1,3 row-size=36B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  68:EXCHANGE [HASH(default.impala_tpcds_customer.c_customer_sk)]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=22,15 row-size=36B cardinality=1
     in pipelines: 57(GETNEXT)

F04:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.04MB mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F32, EXCHANGE=68, HASH(default.impala_tpcds_customer.c_customer_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  24:NESTED LOOP JOIN [INNER JOIN, BROADCAST]
  |  join predicates: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_0.ss_quantity), default.impala_tpcds_store_sales_0.ss_sales_price)) > multiply(divide(CAST(95 AS DECIMAL(3,0)), CAST(100 AS DECIMAL(3,0))), _impala_builtins.max(_impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_1.ss_quantity), default.impala_tpcds_store_sales_1.ss_sales_price))))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=22,15 row-size=36B cardinality=1
  |  in pipelines: 57(GETNEXT), 60(OPEN)
  |
  |--61:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=15 row-size=20B cardinality=0
  |     in pipelines: 60(GETNEXT)
  |
  57:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.max:merge(_impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_1.ss_quantity), default.impala_tpcds_store_sales_1.ss_sales_price)))
  |  having: _impala_builtins.max(_impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_1.ss_quantity), default.impala_tpcds_store_sales_1.ss_sales_price))) IS NOT NULL
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=22 row-size=16B cardinality=1
  |  in pipelines: 57(GETNEXT), 23(OPEN)
  |
  56:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=22 row-size=16B cardinality=1
     in pipelines: 23(GETNEXT)

F03:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_0.c_customer_sk)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=56, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  23:AGGREGATE
  |  output: max(_impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_1.ss_quantity), default.impala_tpcds_store_sales_1.ss_sales_price)))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=22 row-size=16B cardinality=1
  |  in pipelines: 23(GETNEXT), 55(OPEN)
  |
  55:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(default.impala_tpcds_store_sales_1.ss_quantity), default.impala_tpcds_store_sales_1.ss_sales_price))
  |  group by: default.impala_tpcds_customer_0.c_customer_sk
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=21 row-size=20B cardinality=0
  |  in pipelines: 55(GETNEXT), 17(OPEN)
  |
  54:EXCHANGE [HASH(default.impala_tpcds_customer_0.c_customer_sk)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=20B cardinality=0
     in pipelines: 17(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=54, HASH(default.impala_tpcds_customer_0.c_customer_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:AGGREGATE [STREAMING]
  |  output: sum(multiply(casttodecimal(default.impala_tpcds_store_sales_1.ss_quantity), default.impala_tpcds_store_sales_1.ss_sales_price))
  |  group by: default.impala_tpcds_customer_0.c_customer_sk
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=21 row-size=20B cardinality=0
  |  in pipelines: 17(GETNEXT)
  |
  21:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_1.ss_sold_date_sk = default.impala_tpcds_date_dim_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=16,17,19 row-size=28B cardinality=0
  |  in pipelines: 17(GETNEXT), 20(OPEN)
  |
  |--53:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=19 row-size=8B cardinality=0
  |     in pipelines: 20(GETNEXT)
  |
  19:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_1.ss_customer_sk = default.impala_tpcds_customer_0.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=16,17 row-size=20B cardinality=0
  |  in pipelines: 17(GETNEXT), 18(OPEN)
  |
  |--52:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=17 row-size=4B cardinality=0
  |     in pipelines: 18(GETNEXT)
  |
  17:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_1.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_1.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_customer_sk, ss_quantity, ss_sales_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=16 row-size=16B cardinality=0
     in pipelines: 17(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=52, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  18:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_0.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=4B cardinality=0
     in pipelines: 18(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=53, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  20:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_1.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_1.d_year IN (CAST(2000 AS INT), add(CAST(2000 AS INT), CAST(1 AS INT)), add(CAST(2000 AS INT), CAST(2 AS INT)), add(CAST(2000 AS INT), CAST(3 AS INT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=19 row-size=8B cardinality=0
     in pipelines: 20(GETNEXT)

F07:PLAN FRAGMENT [HASH(default.impala_tpcds_customer.c_customer_sk)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.02MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=61, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  60:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(default.impala_tpcds_store_sales_0.ss_quantity), default.impala_tpcds_store_sales_0.ss_sales_price))
  |  group by: default.impala_tpcds_customer.c_customer_sk
  |  having: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_0.ss_quantity), default.impala_tpcds_store_sales_0.ss_sales_price)) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=15 row-size=20B cardinality=0
  |  in pipelines: 60(GETNEXT), 13(OPEN)
  |
  59:EXCHANGE [HASH(default.impala_tpcds_customer.c_customer_sk)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=20B cardinality=0
     in pipelines: 13(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.95MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=59, HASH(default.impala_tpcds_customer.c_customer_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  16:AGGREGATE [STREAMING]
  |  output: sum(multiply(casttodecimal(default.impala_tpcds_store_sales_0.ss_quantity), default.impala_tpcds_store_sales_0.ss_sales_price))
  |  group by: default.impala_tpcds_customer.c_customer_sk
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=15 row-size=20B cardinality=0
  |  in pipelines: 13(GETNEXT)
  |
  15:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_customer_sk = default.impala_tpcds_customer.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=12,13 row-size=16B cardinality=0
  |  in pipelines: 13(GETNEXT), 14(OPEN)
  |
  |--58:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=13 row-size=4B cardinality=0
  |     in pipelines: 14(GETNEXT)
  |
  13:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_0.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=12B cardinality=0
     in pipelines: 13(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=58, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=4B cardinality=0
     in pipelines: 14(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=3.93MB mem-reservation=3.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F32, EXCHANGE=69, HASH(default.impala_tpcds_catalog_sales.cs_bill_customer_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:HASH JOIN [LEFT SEMI JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_item_sk = i_item_sk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,3 row-size=36B cardinality=0
  |  in pipelines: 01(GETNEXT), 66(OPEN)
  |
  |--67:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=11 row-size=40B cardinality=0
  |     in pipelines: 66(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,3 row-size=36B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--62:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=12B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales.cs_bill_customer_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=24B cardinality=0
     in pipelines: 01(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=62, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_moy = CAST(3 AS INT), default.impala_tpcds_date_dim.d_year = CAST(2000 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_moy = CAST(3 AS INT), default.impala_tpcds_date_dim.d_year = CAST(2000 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=12B cardinality=0
     in pipelines: 02(GETNEXT)

F14:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.04MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=67, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:SELECT
  |  predicates: $f3 > CAST(4 AS BIGINT)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=11 row-size=40B cardinality=0
  |  in pipelines: 66(GETNEXT)
  |
  04:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=11 row-size=40B cardinality=0
  |  in pipelines: 66(GETNEXT)
  |
  66:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.count:merge(*)
  |  group by: default.impala_tpcds_date_dim_0.d_date, default.impala_tpcds_item.i_item_sk, substring(default.impala_tpcds_item.i_item_desc, 1, 30)
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=10 row-size=40B cardinality=0
  |  in pipelines: 66(GETNEXT), 05(OPEN)
  |
  65:EXCHANGE [HASH(default.impala_tpcds_date_dim_0.d_date,default.impala_tpcds_item.i_item_sk,substring(default.impala_tpcds_item.i_item_desc, 1, 30))]
     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=40B cardinality=0
     in pipelines: 05(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.92MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=65, HASH(default.impala_tpcds_date_dim_0.d_date,default.impala_tpcds_item.i_item_sk,substring(default.impala_tpcds_item.i_item_desc, 1, 30))]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: default.impala_tpcds_date_dim_0.d_date, default.impala_tpcds_item.i_item_sk, substring(default.impala_tpcds_item.i_item_desc, CAST(1 AS BIGINT), CAST(30 AS BIGINT))
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=10 row-size=40B cardinality=0
  |  in pipelines: 05(GETNEXT)
  |
  09:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,6,8 row-size=52B cardinality=0
  |  in pipelines: 05(GETNEXT), 08(OPEN)
  |
  |--64:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=20B cardinality=0
  |     in pipelines: 08(GETNEXT)
  |
  07:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,6 row-size=32B cardinality=0
  |  in pipelines: 05(GETNEXT), 06(OPEN)
  |
  |--63:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=20B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_item_sk
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=12B cardinality=0
     in pipelines: 05(GETNEXT)

F11:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F10, EXCHANGE=63, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_0.d_year IN (CAST(2000 AS INT), add(CAST(2000 AS INT), CAST(1 AS INT)), add(CAST(2000 AS INT), CAST(2 AS INT)), add(CAST(2000 AS INT), CAST(3 AS INT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=20B cardinality=0
     in pipelines: 06(GETNEXT)

F12:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F10, EXCHANGE=64, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=20B cardinality=0
     in pipelines: 08(GETNEXT)

F20:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.04MB mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F32, EXCHANGE=86, HASH(default.impala_tpcds_customer_1.c_customer_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  49:NESTED LOOP JOIN [INNER JOIN, BROADCAST]
  |  join predicates: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_3.ss_quantity), default.impala_tpcds_store_sales_3.ss_sales_price)) > multiply(divide(CAST(95 AS DECIMAL(3,0)), CAST(100 AS DECIMAL(3,0))), _impala_builtins.max(_impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_4.ss_quantity), default.impala_tpcds_store_sales_4.ss_sales_price))))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=44,37 row-size=36B cardinality=1
  |  in pipelines: 75(GETNEXT), 78(OPEN)
  |
  |--79:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=37 row-size=20B cardinality=0
  |     in pipelines: 78(GETNEXT)
  |
  75:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.max:merge(_impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_4.ss_quantity), default.impala_tpcds_store_sales_4.ss_sales_price)))
  |  having: _impala_builtins.max(_impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_4.ss_quantity), default.impala_tpcds_store_sales_4.ss_sales_price))) IS NOT NULL
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=44 row-size=16B cardinality=1
  |  in pipelines: 75(GETNEXT), 48(OPEN)
  |
  74:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=44 row-size=16B cardinality=1
     in pipelines: 48(GETNEXT)

F19:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_2.c_customer_sk)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F20, EXCHANGE=74, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  48:AGGREGATE
  |  output: max(_impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_4.ss_quantity), default.impala_tpcds_store_sales_4.ss_sales_price)))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=44 row-size=16B cardinality=1
  |  in pipelines: 48(GETNEXT), 73(OPEN)
  |
  73:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(default.impala_tpcds_store_sales_4.ss_quantity), default.impala_tpcds_store_sales_4.ss_sales_price))
  |  group by: default.impala_tpcds_customer_2.c_customer_sk
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=43 row-size=20B cardinality=0
  |  in pipelines: 73(GETNEXT), 42(OPEN)
  |
  72:EXCHANGE [HASH(default.impala_tpcds_customer_2.c_customer_sk)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=43 row-size=20B cardinality=0
     in pipelines: 42(GETNEXT)

F16:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F19, EXCHANGE=72, HASH(default.impala_tpcds_customer_2.c_customer_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  47:AGGREGATE [STREAMING]
  |  output: sum(multiply(casttodecimal(default.impala_tpcds_store_sales_4.ss_quantity), default.impala_tpcds_store_sales_4.ss_sales_price))
  |  group by: default.impala_tpcds_customer_2.c_customer_sk
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=43 row-size=20B cardinality=0
  |  in pipelines: 42(GETNEXT)
  |
  46:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_4.ss_sold_date_sk = default.impala_tpcds_date_dim_4.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=38,39,41 row-size=28B cardinality=0
  |  in pipelines: 42(GETNEXT), 45(OPEN)
  |
  |--71:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=41 row-size=8B cardinality=0
  |     in pipelines: 45(GETNEXT)
  |
  44:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_4.ss_customer_sk = default.impala_tpcds_customer_2.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=38,39 row-size=20B cardinality=0
  |  in pipelines: 42(GETNEXT), 43(OPEN)
  |
  |--70:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=39 row-size=4B cardinality=0
  |     in pipelines: 43(GETNEXT)
  |
  42:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_4.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_4.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_customer_sk, ss_quantity, ss_sales_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=38 row-size=16B cardinality=0
     in pipelines: 42(GETNEXT)

F17:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=70, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  43:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_2.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=39 row-size=4B cardinality=0
     in pipelines: 43(GETNEXT)

F18:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=71, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  45:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_4.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_4.d_year IN (CAST(2000 AS INT), add(CAST(2000 AS INT), CAST(1 AS INT)), add(CAST(2000 AS INT), CAST(2 AS INT)), add(CAST(2000 AS INT), CAST(3 AS INT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=41 row-size=8B cardinality=0
     in pipelines: 45(GETNEXT)

F23:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_1.c_customer_sk)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.02MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F20, EXCHANGE=79, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  78:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(default.impala_tpcds_store_sales_3.ss_quantity), default.impala_tpcds_store_sales_3.ss_sales_price))
  |  group by: default.impala_tpcds_customer_1.c_customer_sk
  |  having: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales_3.ss_quantity), default.impala_tpcds_store_sales_3.ss_sales_price)) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=37 row-size=20B cardinality=0
  |  in pipelines: 78(GETNEXT), 38(OPEN)
  |
  77:EXCHANGE [HASH(default.impala_tpcds_customer_1.c_customer_sk)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=37 row-size=20B cardinality=0
     in pipelines: 38(GETNEXT)

F21:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.95MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F23, EXCHANGE=77, HASH(default.impala_tpcds_customer_1.c_customer_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  41:AGGREGATE [STREAMING]
  |  output: sum(multiply(casttodecimal(default.impala_tpcds_store_sales_3.ss_quantity), default.impala_tpcds_store_sales_3.ss_sales_price))
  |  group by: default.impala_tpcds_customer_1.c_customer_sk
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=37 row-size=20B cardinality=0
  |  in pipelines: 38(GETNEXT)
  |
  40:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_3.ss_customer_sk = default.impala_tpcds_customer_1.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=34,35 row-size=16B cardinality=0
  |  in pipelines: 38(GETNEXT), 39(OPEN)
  |
  |--76:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=35 row-size=4B cardinality=0
  |     in pipelines: 39(GETNEXT)
  |
  38:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_3.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=34 row-size=12B cardinality=0
     in pipelines: 38(GETNEXT)

F22:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F21, EXCHANGE=76, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  39:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_1.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=35 row-size=4B cardinality=0
     in pipelines: 39(GETNEXT)

F24:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=3.93MB mem-reservation=3.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F32, EXCHANGE=87, HASH(default.impala_tpcds_web_sales.ws_bill_customer_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  37:HASH JOIN [LEFT SEMI JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_item_sk = i_item_sk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=23,25 row-size=36B cardinality=0
  |  in pipelines: 26(GETNEXT), 84(OPEN)
  |
  |--85:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=33 row-size=40B cardinality=0
  |     in pipelines: 84(GETNEXT)
  |
  28:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_sold_date_sk = default.impala_tpcds_date_dim_2.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=23,25 row-size=36B cardinality=0
  |  in pipelines: 26(GETNEXT), 27(OPEN)
  |
  |--80:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=25 row-size=12B cardinality=0
  |     in pipelines: 27(GETNEXT)
  |
  26:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_bill_customer_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_item_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=23 row-size=24B cardinality=0
     in pipelines: 26(GETNEXT)

F25:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F24, EXCHANGE=80, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  27:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_2.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_2.d_moy = CAST(3 AS INT), default.impala_tpcds_date_dim_2.d_year = CAST(2000 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_2.d_moy = CAST(3 AS INT), default.impala_tpcds_date_dim_2.d_year = CAST(2000 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=25 row-size=12B cardinality=0
     in pipelines: 27(GETNEXT)

F30:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.04MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F24, EXCHANGE=85, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  36:SELECT
  |  predicates: $f3 > CAST(4 AS BIGINT)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=33 row-size=40B cardinality=0
  |  in pipelines: 84(GETNEXT)
  |
  29:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=33 row-size=40B cardinality=0
  |  in pipelines: 84(GETNEXT)
  |
  84:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.count:merge(*)
  |  group by: default.impala_tpcds_date_dim_3.d_date, default.impala_tpcds_item_0.i_item_sk, substring(default.impala_tpcds_item_0.i_item_desc, 1, 30)
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=32 row-size=40B cardinality=0
  |  in pipelines: 84(GETNEXT), 30(OPEN)
  |
  83:EXCHANGE [HASH(default.impala_tpcds_date_dim_3.d_date,default.impala_tpcds_item_0.i_item_sk,substring(default.impala_tpcds_item_0.i_item_desc, 1, 30))]
     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=32 row-size=40B cardinality=0
     in pipelines: 30(GETNEXT)

F26:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.92MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F30, EXCHANGE=83, HASH(default.impala_tpcds_date_dim_3.d_date,default.impala_tpcds_item_0.i_item_sk,substring(default.impala_tpcds_item_0.i_item_desc, 1, 30))]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  35:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: default.impala_tpcds_date_dim_3.d_date, default.impala_tpcds_item_0.i_item_sk, substring(default.impala_tpcds_item_0.i_item_desc, CAST(1 AS BIGINT), CAST(30 AS BIGINT))
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=32 row-size=40B cardinality=0
  |  in pipelines: 30(GETNEXT)
  |
  34:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_2.ss_item_sk = default.impala_tpcds_item_0.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=27,28,30 row-size=52B cardinality=0
  |  in pipelines: 30(GETNEXT), 33(OPEN)
  |
  |--82:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=30 row-size=20B cardinality=0
  |     in pipelines: 33(GETNEXT)
  |
  32:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_2.ss_sold_date_sk = default.impala_tpcds_date_dim_3.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=27,28 row-size=32B cardinality=0
  |  in pipelines: 30(GETNEXT), 31(OPEN)
  |
  |--81:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=28 row-size=20B cardinality=0
  |     in pipelines: 31(GETNEXT)
  |
  30:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_2.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_2.ss_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_item_sk
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=27 row-size=12B cardinality=0
     in pipelines: 30(GETNEXT)

F27:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F26, EXCHANGE=81, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  31:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_3.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_3.d_year IN (CAST(2000 AS INT), add(CAST(2000 AS INT), CAST(1 AS INT)), add(CAST(2000 AS INT), CAST(2 AS INT)), add(CAST(2000 AS INT), CAST(3 AS INT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=28 row-size=20B cardinality=0
     in pipelines: 31(GETNEXT)

F28:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F26, EXCHANGE=82, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  33:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_0.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=30 row-size=20B cardinality=0
     in pipelines: 33(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

