HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_catalog_sales
HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_item
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR cross_items
HMS CALL get_foreign_keys FOR impala_tpcds_catalog_sales
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
HMS CALL get_table_req FOR avg_sales
HMS CALL get_table_req FOR cross_items
HMS CALL get_table_req FOR avg_sales
HMS CALL get_table_req FOR cross_items
HMS CALL get_table_req FOR avg_sales
PREHOOK: query: explain cbo physical with  cross_items as
 (select i_item_sk ss_item_sk
 from impala_tpcds_item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from impala_tpcds_store_sales
     ,impala_tpcds_item iss
     ,impala_tpcds_date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 2000 AND 2000 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from impala_tpcds_catalog_sales
     ,impala_tpcds_item ics
     ,impala_tpcds_date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 2000 AND 2000 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from impala_tpcds_web_sales
     ,impala_tpcds_item iws
     ,impala_tpcds_date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 2000 AND 2000 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from impala_tpcds_store_sales
           ,impala_tpcds_date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from impala_tpcds_catalog_sales
           ,impala_tpcds_date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from impala_tpcds_web_sales
           ,impala_tpcds_date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from impala_tpcds_store_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 2000+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from impala_tpcds_catalog_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 2000+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from impala_tpcds_web_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 2000+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical with  cross_items as
 (select i_item_sk ss_item_sk
 from impala_tpcds_item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from impala_tpcds_store_sales
     ,impala_tpcds_item iss
     ,impala_tpcds_date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 2000 AND 2000 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from impala_tpcds_catalog_sales
     ,impala_tpcds_item ics
     ,impala_tpcds_date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 2000 AND 2000 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from impala_tpcds_web_sales
     ,impala_tpcds_item iws
     ,impala_tpcds_date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 2000 AND 2000 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from impala_tpcds_store_sales
           ,impala_tpcds_date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from impala_tpcds_catalog_sales
           ,impala_tpcds_date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from impala_tpcds_web_sales
           ,impala_tpcds_date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from impala_tpcds_store_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 2000+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from impala_tpcds_catalog_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 2000+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from impala_tpcds_web_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 2000+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$3], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
  ImpalaAggregateRel(group=[{0, 1, 2, 3}], groups=[[{0, 1, 2, 3}, {0, 1, 2}, {0, 1}, {0}, {}]], agg#0=[sum($4)], agg#1=[sum($5)])
    ImpalaUnionRel(all=[true])
      ImpalaProjectPassthroughRel(channel=[_UTF-16LE'store':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], sales=[$3], number_sales=[$4])
        ImpalaJoinRel(condition=[>($3, $5)], joinType=[inner])
          ImpalaAggregateRel(group=[{0, 1, 2}], agg#0=[sum($3)], agg#1=[count()], condition=[IS NOT NULL($3)])
            ImpalaProjectPassthroughRel(i_brand_id=[$3], i_class_id=[$4], i_category_id=[$5], $f3=[*(CAST($1):DECIMAL(10, 0) NOT NULL, $2)])
              ImpalaJoinRel(condition=[=($0, $6)], joinType=[semi])
                ImpalaProjectPassthroughRel(ss_item_sk=[$0], ss_quantity=[$1], ss_list_price=[$2], i_brand_id=[$6], i_class_id=[$7], i_category_id=[$8])
                  ImpalaJoinRel(condition=[=($0, $5)], joinType=[inner])
                    ImpalaJoinRel(condition=[=($3, $4)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_quantity=[$9], ss_list_price=[$11], ss_sold_date_sk=[$22])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($1))])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, +(2000, 2)), =($8, 11), IS NOT NULL($0))])
                    ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])
                ImpalaProjectPassthroughRel(i_item_sk=[$0])
                  ImpalaJoinRel(condition=[AND(=($1, $4), =($2, $5), =($3, $6))], joinType=[inner])
                    ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($0), IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11))])
                    ImpalaProjectPassthroughRel($f0=[$0], $f1=[$1], $f2=[$2])
                      ImpalaAggregateRel(group=[{0, 1, 2}], agg#0=[count($3)], condition=[=($3, 3)])
                        ImpalaUnionRel(all=[true])
                          ImpalaAggregateRel(group=[{4, 5, 6}], agg#0=[count()])
                            ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                              ImpalaJoinRel(condition=[=($1, $2)], joinType=[inner])
                                ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_sold_date_sk=[$22])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($1))])
                                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11), IS NOT NULL($0))])
                          ImpalaAggregateRel(group=[{4, 5, 6}], agg#0=[count()])
                            ImpalaJoinRel(condition=[=($1, $3)], joinType=[inner])
                              ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
                                ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_item_sk=[$15])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($15))])
                                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11), IS NOT NULL($0))])
                          ImpalaAggregateRel(group=[{4, 5, 6}], agg#0=[count()])
                            ImpalaJoinRel(condition=[=($1, $3)], joinType=[inner])
                              ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
                                ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_item_sk=[$3])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
                                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11), IS NOT NULL($0))])
          ImpalaProjectPassthroughRel($f0=[CAST(/($0, CAST($1):DECIMAL(19, 0))):DECIMAL(22, 6)])
            ImpalaAggregateRel(group=[{}], agg#0=[sum($0)], agg#1=[count($0)], condition=[IS NOT NULL(CAST(/($0, CAST($1):DECIMAL(19, 0))):DECIMAL(22, 6))])
              ImpalaProjectPassthroughRel($f0=[*(CAST($0):DECIMAL(10, 0) NOT NULL, $1)])
                ImpalaUnionRel(all=[true])
                  ImpalaProjectPassthroughRel(quantity=[$0], list_price=[$1])
                    ImpalaJoinRel(condition=[=($2, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ss_quantity=[$9], ss_list_price=[$11], ss_sold_date_sk=[$22])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[IS NOT NULL($22)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(quantity=[$1], list_price=[$2])
                    ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_quantity=[$18], cs_list_price=[$20])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[IS NOT NULL($0)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(quantity=[$1], list_price=[$2])
                    ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_quantity=[$18], ws_list_price=[$20])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[IS NOT NULL($0)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
      ImpalaProjectPassthroughRel(channel=[_UTF-16LE'catalog':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], sales=[$3], number_sales=[$4])
        ImpalaJoinRel(condition=[>($3, $5)], joinType=[inner])
          ImpalaAggregateRel(group=[{0, 1, 2}], agg#0=[sum($3)], agg#1=[count()], condition=[IS NOT NULL($3)])
            ImpalaProjectPassthroughRel(i_brand_id=[$3], i_class_id=[$4], i_category_id=[$5], $f3=[*(CAST($1):DECIMAL(10, 0) NOT NULL, $2)])
              ImpalaJoinRel(condition=[=($0, $6)], joinType=[semi])
                ImpalaProjectPassthroughRel(cs_item_sk=[$1], cs_quantity=[$2], cs_list_price=[$3], i_brand_id=[$6], i_class_id=[$7], i_category_id=[$8])
                  ImpalaJoinRel(condition=[=($1, $5)], joinType=[inner])
                    ImpalaJoinRel(condition=[=($0, $4)], joinType=[inner])
                      ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_item_sk=[$15], cs_quantity=[$18], cs_list_price=[$20])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($15))])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, +(2000, 2)), =($8, 11), IS NOT NULL($0))])
                    ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])
                ImpalaProjectPassthroughRel(i_item_sk=[$0])
                  ImpalaJoinRel(condition=[AND(=($1, $4), =($2, $5), =($3, $6))], joinType=[inner])
                    ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11), IS NOT NULL($0))])
                    ImpalaProjectPassthroughRel($f0=[$0], $f1=[$1], $f2=[$2])
                      ImpalaAggregateRel(group=[{0, 1, 2}], agg#0=[count($3)], condition=[=($3, 3)])
                        ImpalaUnionRel(all=[true])
                          ImpalaAggregateRel(group=[{4, 5, 6}], agg#0=[count()])
                            ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                              ImpalaJoinRel(condition=[=($1, $2)], joinType=[inner])
                                ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_sold_date_sk=[$22])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($1))])
                                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($0), IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11))])
                          ImpalaAggregateRel(group=[{4, 5, 6}], agg#0=[count()])
                            ImpalaJoinRel(condition=[=($1, $3)], joinType=[inner])
                              ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
                                ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_item_sk=[$15])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($15))])
                                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($0), IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11))])
                          ImpalaAggregateRel(group=[{4, 5, 6}], agg#0=[count()])
                            ImpalaJoinRel(condition=[=($1, $3)], joinType=[inner])
                              ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
                                ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_item_sk=[$3])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
                                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($0), IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11))])
          ImpalaProjectPassthroughRel($f0=[CAST(/($0, CAST($1):DECIMAL(19, 0))):DECIMAL(22, 6)])
            ImpalaAggregateRel(group=[{}], agg#0=[sum($0)], agg#1=[count($0)], condition=[IS NOT NULL(CAST(/($0, CAST($1):DECIMAL(19, 0))):DECIMAL(22, 6))])
              ImpalaProjectPassthroughRel($f0=[*(CAST($0):DECIMAL(10, 0) NOT NULL, $1)])
                ImpalaUnionRel(all=[true])
                  ImpalaProjectPassthroughRel(quantity=[$0], list_price=[$1])
                    ImpalaJoinRel(condition=[=($2, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ss_quantity=[$9], ss_list_price=[$11], ss_sold_date_sk=[$22])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[IS NOT NULL($22)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(quantity=[$1], list_price=[$2])
                    ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_quantity=[$18], cs_list_price=[$20])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[IS NOT NULL($0)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(quantity=[$1], list_price=[$2])
                    ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_quantity=[$18], ws_list_price=[$20])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[IS NOT NULL($0)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
      ImpalaProjectPassthroughRel(channel=[_UTF-16LE'web':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], sales=[$3], number_sales=[$4])
        ImpalaJoinRel(condition=[>($3, $5)], joinType=[inner])
          ImpalaAggregateRel(group=[{0, 1, 2}], agg#0=[sum($3)], agg#1=[count()], condition=[IS NOT NULL($3)])
            ImpalaProjectPassthroughRel(i_brand_id=[$3], i_class_id=[$4], i_category_id=[$5], $f3=[*(CAST($1):DECIMAL(10, 0) NOT NULL, $2)])
              ImpalaJoinRel(condition=[=($0, $6)], joinType=[semi])
                ImpalaProjectPassthroughRel(ws_item_sk=[$1], ws_quantity=[$2], ws_list_price=[$3], i_brand_id=[$6], i_class_id=[$7], i_category_id=[$8])
                  ImpalaJoinRel(condition=[=($1, $5)], joinType=[inner])
                    ImpalaJoinRel(condition=[=($0, $4)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_quantity=[$18], ws_list_price=[$20])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, +(2000, 2)), =($8, 11), IS NOT NULL($0))])
                    ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])
                ImpalaProjectPassthroughRel(i_item_sk=[$0])
                  ImpalaJoinRel(condition=[AND(=($1, $4), =($2, $5), =($3, $6))], joinType=[inner])
                    ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11), IS NOT NULL($0))])
                    ImpalaProjectPassthroughRel($f0=[$0], $f1=[$1], $f2=[$2])
                      ImpalaAggregateRel(group=[{0, 1, 2}], agg#0=[count($3)], condition=[=($3, 3)])
                        ImpalaUnionRel(all=[true])
                          ImpalaAggregateRel(group=[{4, 5, 6}], agg#0=[count()])
                            ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                              ImpalaJoinRel(condition=[=($1, $2)], joinType=[inner])
                                ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_sold_date_sk=[$22])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($1))])
                                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($0), IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11))])
                          ImpalaAggregateRel(group=[{4, 5, 6}], agg#0=[count()])
                            ImpalaJoinRel(condition=[=($1, $3)], joinType=[inner])
                              ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
                                ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_item_sk=[$15])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($15))])
                                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($0), IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11))])
                          ImpalaAggregateRel(group=[{4, 5, 6}], agg#0=[count()])
                            ImpalaJoinRel(condition=[=($1, $3)], joinType=[inner])
                              ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
                                ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_item_sk=[$3])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
                                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                              ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11])
                                ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($0), IS NOT NULL($7), IS NOT NULL($9), IS NOT NULL($11))])
          ImpalaProjectPassthroughRel($f0=[CAST(/($0, CAST($1):DECIMAL(19, 0))):DECIMAL(22, 6)])
            ImpalaAggregateRel(group=[{}], agg#0=[sum($0)], agg#1=[count($0)], condition=[IS NOT NULL(CAST(/($0, CAST($1):DECIMAL(19, 0))):DECIMAL(22, 6))])
              ImpalaProjectPassthroughRel($f0=[*(CAST($0):DECIMAL(10, 0) NOT NULL, $1)])
                ImpalaUnionRel(all=[true])
                  ImpalaProjectPassthroughRel(quantity=[$0], list_price=[$1])
                    ImpalaJoinRel(condition=[=($2, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ss_quantity=[$9], ss_list_price=[$11], ss_sold_date_sk=[$22])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[IS NOT NULL($22)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(quantity=[$1], list_price=[$2])
                    ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_quantity=[$18], cs_list_price=[$20])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[IS NOT NULL($0)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(quantity=[$1], list_price=[$2])
                    ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_quantity=[$18], ws_list_price=[$20])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[IS NOT NULL($0)])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, $6, 2000, +(2000, 2)), IS NOT NULL($0))])

HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_catalog_sales
HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_item
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR cross_items
HMS CALL get_foreign_keys FOR impala_tpcds_catalog_sales
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
HMS CALL get_table_req FOR avg_sales
HMS CALL get_table_req FOR cross_items
HMS CALL get_table_req FOR avg_sales
HMS CALL get_table_req FOR cross_items
HMS CALL get_table_req FOR avg_sales
PREHOOK: query: explain with  cross_items as
 (select i_item_sk ss_item_sk
 from impala_tpcds_item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from impala_tpcds_store_sales
     ,impala_tpcds_item iss
     ,impala_tpcds_date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 2000 AND 2000 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from impala_tpcds_catalog_sales
     ,impala_tpcds_item ics
     ,impala_tpcds_date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 2000 AND 2000 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from impala_tpcds_web_sales
     ,impala_tpcds_item iws
     ,impala_tpcds_date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 2000 AND 2000 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from impala_tpcds_store_sales
           ,impala_tpcds_date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from impala_tpcds_catalog_sales
           ,impala_tpcds_date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from impala_tpcds_web_sales
           ,impala_tpcds_date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from impala_tpcds_store_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 2000+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from impala_tpcds_catalog_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 2000+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from impala_tpcds_web_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 2000+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain with  cross_items as
 (select i_item_sk ss_item_sk
 from impala_tpcds_item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from impala_tpcds_store_sales
     ,impala_tpcds_item iss
     ,impala_tpcds_date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 2000 AND 2000 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from impala_tpcds_catalog_sales
     ,impala_tpcds_item ics
     ,impala_tpcds_date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 2000 AND 2000 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from impala_tpcds_web_sales
     ,impala_tpcds_item iws
     ,impala_tpcds_date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 2000 AND 2000 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from impala_tpcds_store_sales
           ,impala_tpcds_date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from impala_tpcds_catalog_sales
           ,impala_tpcds_date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from impala_tpcds_web_sales
           ,impala_tpcds_date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 2000 and 2000 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from impala_tpcds_store_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 2000+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from impala_tpcds_catalog_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 2000+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from impala_tpcds_web_sales
           ,impala_tpcds_item
           ,impala_tpcds_date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 2000+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F81:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=650.00MB mem-reservation=171.94MB thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: CASE valid_tid(132,133,134,135,136) WHEN 132 THEN channel WHEN 133 THEN channel WHEN 134 THEN channel WHEN 135 THEN channel WHEN 136 THEN NULL END, CASE valid_tid(132,133,134,135,136) WHEN 132 THEN i_brand_id WHEN 133 THEN i_brand_id WHEN 134 THEN i_brand_id WHEN 135 THEN NULL WHEN 136 THEN NULL END, CASE valid_tid(132,133,134,135,136) WHEN 132 THEN i_class_id WHEN 133 THEN i_class_id WHEN 134 THEN NULL WHEN 135 THEN NULL WHEN 136 THEN NULL END, CASE valid_tid(132,133,134,135,136) WHEN 132 THEN i_category_id WHEN 133 THEN NULL WHEN 134 THEN NULL WHEN 135 THEN NULL WHEN 136 THEN NULL END, aggif(valid_tid(132,133,134,135,136) IN (132, 133, 134, 135, 136), CASE valid_tid(132,133,134,135,136) WHEN 132 THEN _impala_builtins.sum(sales) WHEN 133 THEN sum(sales) WHEN 134 THEN sum(sales) WHEN 135 THEN sum(sales) WHEN 136 THEN sum(sales) END), aggif(valid_tid(132,133,134,135,136) IN (132, 133, 134, 135, 136), CASE valid_tid(132,133,134,135,136) WHEN 132 THEN _impala_builtins.sum(number_sales) WHEN 133 THEN sum(number_sales) WHEN 134 THEN sum(number_sales) WHEN 135 THEN sum(number_sales) WHEN 136 THEN sum(number_sales) END)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  126:TOP-N [LIMIT=100]
  |  order by: CASE valid_tid(132,133,134,135,136) WHEN 132 THEN channel WHEN 133 THEN channel WHEN 134 THEN channel WHEN 135 THEN channel WHEN 136 THEN NULL END ASC NULLS LAST, CASE valid_tid(132,133,134,135,136) WHEN 132 THEN i_brand_id WHEN 133 THEN i_brand_id WHEN 134 THEN i_brand_id WHEN 135 THEN NULL WHEN 136 THEN NULL END ASC NULLS LAST, CASE valid_tid(132,133,134,135,136) WHEN 132 THEN i_class_id WHEN 133 THEN i_class_id WHEN 134 THEN NULL WHEN 135 THEN NULL WHEN 136 THEN NULL END ASC NULLS LAST, CASE valid_tid(132,133,134,135,136) WHEN 132 THEN i_category_id WHEN 133 THEN NULL WHEN 134 THEN NULL WHEN 135 THEN NULL WHEN 136 THEN NULL END ASC NULLS LAST
  |  mem-estimate=624B mem-reservation=0B thread-reservation=0
  |  tuple-ids=138 row-size=48B cardinality=13
  |  in pipelines: 126(GETNEXT), 125(OPEN)
  |
  125:AGGREGATE [FINALIZE]
  |  output: aggif(valid_tid(132,133,134,135,136) IN (CAST(132 AS INT), CAST(133 AS INT), CAST(134 AS INT), CAST(135 AS INT), CAST(136 AS INT)), CASE valid_tid(132,133,134,135,136) WHEN CAST(132 AS INT) THEN _impala_builtins.sum(sales) WHEN CAST(133 AS INT) THEN sum(sales) WHEN CAST(134 AS INT) THEN sum(sales) WHEN CAST(135 AS INT) THEN sum(sales) WHEN CAST(136 AS INT) THEN sum(sales) END), aggif(valid_tid(132,133,134,135,136) IN (CAST(132 AS INT), CAST(133 AS INT), CAST(134 AS INT), CAST(135 AS INT), CAST(136 AS INT)), CASE valid_tid(132,133,134,135,136) WHEN CAST(132 AS INT) THEN _impala_builtins.sum(number_sales) WHEN CAST(133 AS INT) THEN sum(number_sales) WHEN CAST(134 AS INT) THEN sum(number_sales) WHEN CAST(135 AS INT) THEN sum(number_sales) WHEN CAST(136 AS INT) THEN sum(number_sales) END)
  |  group by: CASE valid_tid(132,133,134,135,136) WHEN CAST(132 AS INT) THEN channel WHEN CAST(133 AS INT) THEN channel WHEN CAST(134 AS INT) THEN channel WHEN CAST(135 AS INT) THEN channel WHEN CAST(136 AS INT) THEN NULL END, CASE valid_tid(132,133,134,135,136) WHEN CAST(132 AS INT) THEN i_brand_id WHEN CAST(133 AS INT) THEN i_brand_id WHEN CAST(134 AS INT) THEN i_brand_id WHEN CAST(135 AS INT) THEN NULL WHEN CAST(136 AS INT) THEN NULL END, CASE valid_tid(132,133,134,135,136) WHEN CAST(132 AS INT) THEN i_class_id WHEN CAST(133 AS INT) THEN i_class_id WHEN CAST(134 AS INT) THEN NULL WHEN CAST(135 AS INT) THEN NULL WHEN CAST(136 AS INT) THEN NULL END, CASE valid_tid(132,133,134,135,136) WHEN CAST(132 AS INT) THEN i_category_id WHEN CAST(133 AS INT) THEN NULL WHEN CAST(134 AS INT) THEN NULL WHEN CAST(135 AS INT) THEN NULL WHEN CAST(136 AS INT) THEN NULL END, CASE valid_tid(132,133,134,135,136) WHEN CAST(132 AS INT) THEN CAST(132 AS INT) WHEN CAST(133 AS INT) THEN CAST(133 AS INT) WHEN CAST(134 AS INT) THEN CAST(134 AS INT) WHEN CAST(135 AS INT) THEN CAST(135 AS INT) WHEN CAST(136 AS INT) THEN CAST(136 AS INT) END
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=137 row-size=52B cardinality=13
  |  in pipelines: 125(GETNEXT), 124(OPEN)
  |
  124:AGGREGATE [FINALIZE]
  |  Class 0
  |    output: sum(sales), sum(number_sales)
  |    group by: channel, i_brand_id, i_class_id, i_category_id
  |  Class 1
  |    output: sum(sales), sum(number_sales)
  |    group by: channel, i_brand_id, i_class_id, NULL
  |  Class 2
  |    output: sum(sales), sum(number_sales)
  |    group by: channel, i_brand_id, NULL, NULL
  |  Class 3
  |    output: sum(sales), sum(number_sales)
  |    group by: channel, NULL, NULL, NULL
  |  Class 4
  |    output: sum(sales), sum(number_sales)
  |    group by: NULL, NULL, NULL, NULL
  |  mem-estimate=522.00MB mem-reservation=137.94MB thread-reservation=0
  |  tuple-ids=132N,133N,134N,135N,136N row-size=240B cardinality=13
  |  in pipelines: 124(GETNEXT), 131(OPEN), 157(OPEN), 183(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=0 row-size=48B cardinality=3
  |  in pipelines: 131(GETNEXT), 157(GETNEXT), 183(GETNEXT)
  |
  |--123:NESTED LOOP JOIN [INNER JOIN, BROADCAST]
  |  |  join predicates: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_web_sales_3.ws_quantity), default.impala_tpcds_web_sales_3.ws_list_price)) > casttodecimal(divide(_impala_builtins.sum(multiply(casttodecimal(quantity), list_price)), casttodecimal(_impala_builtins.count(multiply(casttodecimal(quantity), list_price)))))
  |  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  |  tuple-ids=131,118 row-size=60B cardinality=1
  |  |  in pipelines: 183(GETNEXT), 203(OPEN)
  |  |
  |  |--204:EXCHANGE [UNPARTITIONED]
  |  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=118 row-size=36B cardinality=0
  |  |     in pipelines: 203(GETNEXT)
  |  |
  |  183:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(quantity), list_price)), _impala_builtins.count:merge(multiply(casttodecimal(quantity), list_price))
  |  |  having: casttodecimal(divide(_impala_builtins.sum(multiply(casttodecimal(quantity), list_price)), casttodecimal(_impala_builtins.count(multiply(casttodecimal(quantity), list_price))))) IS NOT NULL
  |  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=131 row-size=24B cardinality=1
  |  |  in pipelines: 183(GETNEXT), 122(OPEN)
  |  |
  |  182:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=131 row-size=24B cardinality=1
  |     in pipelines: 122(GETNEXT)
  |
  |--82:NESTED LOOP JOIN [INNER JOIN, BROADCAST]
  |  |  join predicates: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_catalog_sales_1.cs_quantity), default.impala_tpcds_catalog_sales_1.cs_list_price)) > casttodecimal(divide(_impala_builtins.sum(multiply(casttodecimal(quantity), list_price)), casttodecimal(_impala_builtins.count(multiply(casttodecimal(quantity), list_price)))))
  |  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  |  tuple-ids=87,74 row-size=60B cardinality=1
  |  |  in pipelines: 157(GETNEXT), 177(OPEN)
  |  |
  |  |--178:EXCHANGE [UNPARTITIONED]
  |  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=74 row-size=36B cardinality=0
  |  |     in pipelines: 177(GETNEXT)
  |  |
  |  157:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(quantity), list_price)), _impala_builtins.count:merge(multiply(casttodecimal(quantity), list_price))
  |  |  having: casttodecimal(divide(_impala_builtins.sum(multiply(casttodecimal(quantity), list_price)), casttodecimal(_impala_builtins.count(multiply(casttodecimal(quantity), list_price))))) IS NOT NULL
  |  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=87 row-size=24B cardinality=1
  |  |  in pipelines: 157(GETNEXT), 81(OPEN)
  |  |
  |  156:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=87 row-size=24B cardinality=1
  |     in pipelines: 81(GETNEXT)
  |
  41:NESTED LOOP JOIN [INNER JOIN, BROADCAST]
  |  join predicates: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales.ss_quantity), default.impala_tpcds_store_sales.ss_list_price)) > casttodecimal(divide(_impala_builtins.sum(multiply(casttodecimal(quantity), list_price)), casttodecimal(_impala_builtins.count(multiply(casttodecimal(quantity), list_price)))))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=43,30 row-size=60B cardinality=1
  |  in pipelines: 131(GETNEXT), 151(OPEN)
  |
  |--152:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=30 row-size=36B cardinality=0
  |     in pipelines: 151(GETNEXT)
  |
  131:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(quantity), list_price)), _impala_builtins.count:merge(multiply(casttodecimal(quantity), list_price))
  |  having: casttodecimal(divide(_impala_builtins.sum(multiply(casttodecimal(quantity), list_price)), casttodecimal(_impala_builtins.count(multiply(casttodecimal(quantity), list_price))))) IS NOT NULL
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=43 row-size=24B cardinality=1
  |  in pipelines: 131(GETNEXT), 40(OPEN)
  |
  130:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=43 row-size=24B cardinality=1
     in pipelines: 40(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=11.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F81, EXCHANGE=130, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  40:AGGREGATE
  |  output: sum(multiply(casttodecimal(quantity), list_price)), count(multiply(casttodecimal(quantity), list_price))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=43 row-size=24B cardinality=1
  |  in pipelines: 40(GETNEXT), 31(OPEN), 34(OPEN), 37(OPEN)
  |
  30:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=31 row-size=8B cardinality=0
  |  in pipelines: 31(GETNEXT), 34(GETNEXT), 37(GETNEXT)
  |
  |--39:HASH JOIN [INNER JOIN, BROADCAST]
  |  |  hash predicates: default.impala_tpcds_web_sales_0.ws_sold_date_sk = default.impala_tpcds_date_dim_2.d_date_sk
  |  |  fk/pk conjuncts: assumed fk/pk
  |  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  |  tuple-ids=39,41 row-size=20B cardinality=0
  |  |  in pipelines: 37(GETNEXT), 38(OPEN)
  |  |
  |  |--129:EXCHANGE [BROADCAST]
  |  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=41 row-size=8B cardinality=0
  |  |     in pipelines: 38(GETNEXT)
  |  |
  |  37:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_web_sales_0.ws_sold_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=39 row-size=12B cardinality=0
  |     in pipelines: 37(GETNEXT)
  |
  |--36:HASH JOIN [INNER JOIN, BROADCAST]
  |  |  hash predicates: default.impala_tpcds_catalog_sales_0.cs_sold_date_sk = default.impala_tpcds_date_dim_1.d_date_sk
  |  |  fk/pk conjuncts: assumed fk/pk
  |  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  |  tuple-ids=35,37 row-size=20B cardinality=0
  |  |  in pipelines: 34(GETNEXT), 35(OPEN)
  |  |
  |  |--128:EXCHANGE [BROADCAST]
  |  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=37 row-size=8B cardinality=0
  |  |     in pipelines: 35(GETNEXT)
  |  |
  |  34:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_catalog_sales_0.cs_sold_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=35 row-size=12B cardinality=0
  |     in pipelines: 34(GETNEXT)
  |
  33:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_1.ss_sold_date_sk = default.impala_tpcds_date_dim_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=32,33 row-size=20B cardinality=0
  |  in pipelines: 31(GETNEXT), 32(OPEN)
  |
  |--127:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=33 row-size=8B cardinality=0
  |     in pipelines: 32(GETNEXT)
  |
  31:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_1.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_quantity, ss_list_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=32 row-size=12B cardinality=0
     in pipelines: 31(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=127, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  32:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_0.d_year >= CAST(2000 AS INT) AND default.impala_tpcds_date_dim_0.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=33 row-size=8B cardinality=0
     in pipelines: 32(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=128, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  35:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_1.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_1.d_year >= CAST(2000 AS INT) AND default.impala_tpcds_date_dim_1.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=37 row-size=8B cardinality=0
     in pipelines: 35(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=129, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  38:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_2.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_2.d_year >= CAST(2000 AS INT) AND default.impala_tpcds_date_dim_2.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=41 row-size=8B cardinality=0
     in pipelines: 38(GETNEXT)

F26:PLAN FRAGMENT [HASH(default.impala_tpcds_item.i_brand_id,default.impala_tpcds_item.i_class_id,default.impala_tpcds_item.i_category_id)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.04MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F81, EXCHANGE=152, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  151:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(default.impala_tpcds_store_sales.ss_quantity), default.impala_tpcds_store_sales.ss_list_price)), _impala_builtins.count:merge(*)
  |  group by: default.impala_tpcds_item.i_brand_id, default.impala_tpcds_item.i_class_id, default.impala_tpcds_item.i_category_id
  |  having: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_store_sales.ss_quantity), default.impala_tpcds_store_sales.ss_list_price)) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=30 row-size=36B cardinality=0
  |  in pipelines: 151(GETNEXT), 01(OPEN)
  |
  150:EXCHANGE [HASH(default.impala_tpcds_item.i_brand_id,default.impala_tpcds_item.i_class_id,default.impala_tpcds_item.i_category_id)]
     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=30 row-size=36B cardinality=0
     in pipelines: 01(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.90MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F26, EXCHANGE=150, HASH(default.impala_tpcds_item.i_brand_id,default.impala_tpcds_item.i_class_id,default.impala_tpcds_item.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  29:AGGREGATE [STREAMING]
  |  output: sum(multiply(casttodecimal(default.impala_tpcds_store_sales.ss_quantity), default.impala_tpcds_store_sales.ss_list_price)), count(*)
  |  group by: default.impala_tpcds_item.i_brand_id, default.impala_tpcds_item.i_class_id, default.impala_tpcds_item.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=30 row-size=36B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  28:HASH JOIN [LEFT SEMI JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_item_sk = default.impala_tpcds_item_0.i_item_sk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,2,4 row-size=52B cardinality=0
  |  in pipelines: 01(GETNEXT), 06(OPEN)
  |
  |--149:EXCHANGE [BROADCAST]
  |     mem-estimate=48.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6,29 row-size=40B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,2,4 row-size=52B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--133:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=20B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,2 row-size=32B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--132:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=12B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_item_sk, ss_quantity, ss_list_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=20B cardinality=0
     in pipelines: 01(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=132, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_moy = CAST(11 AS INT), default.impala_tpcds_date_dim.d_year = add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_moy = CAST(11 AS INT), default.impala_tpcds_date_dim.d_year = add(CAST(2000 AS INT), CAST(2 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=12B cardinality=0
     in pipelines: 02(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=133, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=20B cardinality=0
     in pipelines: 04(GETNEXT)

F11:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.96MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=149, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  27:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_item_0.i_brand_id = i_brand_id, default.impala_tpcds_item_0.i_category_id = i_category_id, default.impala_tpcds_item_0.i_class_id = i_class_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=6,29 row-size=40B cardinality=0
  |  in pipelines: 06(GETNEXT), 147(OPEN)
  |
  |--148:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=29 row-size=20B cardinality=0
  |     in pipelines: 147(GETNEXT)
  |
  06:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_0.i_brand_id IS NOT NULL, default.impala_tpcds_item_0.i_category_id IS NOT NULL, default.impala_tpcds_item_0.i_class_id IS NOT NULL, default.impala_tpcds_item_0.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=20B cardinality=0
     in pipelines: 06(GETNEXT)

F25:PLAN FRAGMENT [HASH(i_brand_id,i_class_id,i_category_id)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.02MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F11, EXCHANGE=148, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  147:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.count:merge($f3)
  |  group by: i_brand_id, i_class_id, i_category_id
  |  having: _impala_builtins.count($f3) = CAST(3 AS BIGINT)
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=29 row-size=20B cardinality=0
  |  in pipelines: 147(GETNEXT), 137(OPEN), 141(OPEN), 145(OPEN)
  |
  146:EXCHANGE [HASH(i_brand_id,i_class_id,i_category_id)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=29 row-size=20B cardinality=0
     in pipelines: 137(GETNEXT), 141(GETNEXT), 145(GETNEXT)

F24:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=256.02MB mem-reservation=68.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F25, EXCHANGE=146, HASH(i_brand_id,i_class_id,i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  26:AGGREGATE [STREAMING]
  |  output: count($f3)
  |  group by: i_brand_id, i_class_id, i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=29 row-size=20B cardinality=0
  |  in pipelines: 137(GETNEXT), 141(GETNEXT), 145(GETNEXT)
  |
  07:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=8 row-size=20B cardinality=0
  |  in pipelines: 137(GETNEXT), 141(GETNEXT), 145(GETNEXT)
  |
  |--145:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.count:merge(*)
  |  |  group by: iws.i_brand_id, iws.i_class_id, iws.i_category_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=28 row-size=20B cardinality=0
  |  |  in pipelines: 145(GETNEXT), 20(OPEN)
  |  |
  |  144:EXCHANGE [HASH(iws.i_brand_id,iws.i_class_id,iws.i_category_id)]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=28 row-size=20B cardinality=0
  |     in pipelines: 20(GETNEXT)
  |
  |--141:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.count:merge(*)
  |  |  group by: ics.i_brand_id, ics.i_class_id, ics.i_category_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=21 row-size=20B cardinality=0
  |  |  in pipelines: 141(GETNEXT), 14(OPEN)
  |  |
  |  140:EXCHANGE [HASH(ics.i_brand_id,ics.i_class_id,ics.i_category_id)]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=21 row-size=20B cardinality=0
  |     in pipelines: 14(GETNEXT)
  |
  137:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.count:merge(*)
  |  group by: iss.i_brand_id, iss.i_class_id, iss.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=14 row-size=20B cardinality=0
  |  in pipelines: 137(GETNEXT), 08(OPEN)
  |
  136:EXCHANGE [HASH(iss.i_brand_id,iss.i_class_id,iss.i_category_id)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=14 row-size=20B cardinality=0
     in pipelines: 08(GETNEXT)

F12:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F24, EXCHANGE=136, HASH(iss.i_brand_id,iss.i_class_id,iss.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: iss.i_brand_id, iss.i_class_id, iss.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=14 row-size=20B cardinality=0
  |  in pipelines: 08(GETNEXT)
  |
  12:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_item_sk = iss.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=9,10,12 row-size=40B cardinality=0
  |  in pipelines: 08(GETNEXT), 11(OPEN)
  |
  |--135:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=12 row-size=20B cardinality=0
  |     in pipelines: 11(GETNEXT)
  |
  10:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk = d1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=9,10 row-size=20B cardinality=0
  |  in pipelines: 08(GETNEXT), 09(OPEN)
  |
  |--134:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=10 row-size=8B cardinality=0
  |     in pipelines: 09(GETNEXT)
  |
  08:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_0.ss_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_item_sk
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=9 row-size=12B cardinality=0
     in pipelines: 08(GETNEXT)

F13:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F12, EXCHANGE=134, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:SCAN HDFS [default.impala_tpcds_date_dim d1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d1.d_date_sk IS NOT NULL, d1.d_year >= CAST(2000 AS INT) AND d1.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=8B cardinality=0
     in pipelines: 09(GETNEXT)

F14:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F12, EXCHANGE=135, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:SCAN HDFS [default.impala_tpcds_item iss, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: iss.i_brand_id IS NOT NULL, iss.i_category_id IS NOT NULL, iss.i_class_id IS NOT NULL, iss.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=20B cardinality=0
     in pipelines: 11(GETNEXT)

F16:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F24, EXCHANGE=140, HASH(ics.i_brand_id,ics.i_class_id,ics.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  19:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: ics.i_brand_id, ics.i_class_id, ics.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=21 row-size=20B cardinality=0
  |  in pipelines: 14(GETNEXT)
  |
  18:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_item_sk = ics.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=15,17,19 row-size=40B cardinality=0
  |  in pipelines: 14(GETNEXT), 17(OPEN)
  |
  |--139:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=19 row-size=20B cardinality=0
  |     in pipelines: 17(GETNEXT)
  |
  16:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_sold_date_sk = d2.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=15,17 row-size=20B cardinality=0
  |  in pipelines: 14(GETNEXT), 15(OPEN)
  |
  |--138:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=17 row-size=8B cardinality=0
  |     in pipelines: 15(GETNEXT)
  |
  14:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=12B cardinality=0
     in pipelines: 14(GETNEXT)

F17:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=138, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  15:SCAN HDFS [default.impala_tpcds_date_dim d2, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d2.d_date_sk IS NOT NULL, d2.d_year >= CAST(2000 AS INT) AND d2.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=8B cardinality=0
     in pipelines: 15(GETNEXT)

F18:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=139, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  17:SCAN HDFS [default.impala_tpcds_item ics, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ics.i_brand_id IS NOT NULL, ics.i_category_id IS NOT NULL, ics.i_class_id IS NOT NULL, ics.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=19 row-size=20B cardinality=0
     in pipelines: 17(GETNEXT)

F20:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F24, EXCHANGE=144, HASH(iws.i_brand_id,iws.i_class_id,iws.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  25:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: iws.i_brand_id, iws.i_class_id, iws.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=28 row-size=20B cardinality=0
  |  in pipelines: 20(GETNEXT)
  |
  24:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_item_sk = iws.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=22,24,26 row-size=40B cardinality=0
  |  in pipelines: 20(GETNEXT), 23(OPEN)
  |
  |--143:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=26 row-size=20B cardinality=0
  |     in pipelines: 23(GETNEXT)
  |
  22:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_sold_date_sk = d3.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=22,24 row-size=20B cardinality=0
  |  in pipelines: 20(GETNEXT), 21(OPEN)
  |
  |--142:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=24 row-size=8B cardinality=0
  |     in pipelines: 21(GETNEXT)
  |
  20:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_item_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=22 row-size=12B cardinality=0
     in pipelines: 20(GETNEXT)

F21:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F20, EXCHANGE=142, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  21:SCAN HDFS [default.impala_tpcds_date_dim d3, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d3.d_date_sk IS NOT NULL, d3.d_year >= CAST(2000 AS INT) AND d3.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=24 row-size=8B cardinality=0
     in pipelines: 21(GETNEXT)

F22:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F20, EXCHANGE=143, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  23:SCAN HDFS [default.impala_tpcds_item iws, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: iws.i_brand_id IS NOT NULL, iws.i_category_id IS NOT NULL, iws.i_class_id IS NOT NULL, iws.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=26 row-size=20B cardinality=0
     in pipelines: 23(GETNEXT)

F33:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=11.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F81, EXCHANGE=156, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  81:AGGREGATE
  |  output: sum(multiply(casttodecimal(quantity), list_price)), count(multiply(casttodecimal(quantity), list_price))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=87 row-size=24B cardinality=1
  |  in pipelines: 81(GETNEXT), 72(OPEN), 75(OPEN), 78(OPEN)
  |
  71:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=75 row-size=8B cardinality=0
  |  in pipelines: 72(GETNEXT), 75(GETNEXT), 78(GETNEXT)
  |
  |--80:HASH JOIN [INNER JOIN, BROADCAST]
  |  |  hash predicates: default.impala_tpcds_web_sales_2.ws_sold_date_sk = default.impala_tpcds_date_dim_6.d_date_sk
  |  |  fk/pk conjuncts: assumed fk/pk
  |  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  |  tuple-ids=83,85 row-size=20B cardinality=0
  |  |  in pipelines: 78(GETNEXT), 79(OPEN)
  |  |
  |  |--155:EXCHANGE [BROADCAST]
  |  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=85 row-size=8B cardinality=0
  |  |     in pipelines: 79(GETNEXT)
  |  |
  |  78:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_web_sales_2.ws_sold_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=83 row-size=12B cardinality=0
  |     in pipelines: 78(GETNEXT)
  |
  |--77:HASH JOIN [INNER JOIN, BROADCAST]
  |  |  hash predicates: default.impala_tpcds_catalog_sales_3.cs_sold_date_sk = default.impala_tpcds_date_dim_5.d_date_sk
  |  |  fk/pk conjuncts: assumed fk/pk
  |  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  |  tuple-ids=79,81 row-size=20B cardinality=0
  |  |  in pipelines: 75(GETNEXT), 76(OPEN)
  |  |
  |  |--154:EXCHANGE [BROADCAST]
  |  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=81 row-size=8B cardinality=0
  |  |     in pipelines: 76(GETNEXT)
  |  |
  |  75:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_catalog_sales_3.cs_sold_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=79 row-size=12B cardinality=0
  |     in pipelines: 75(GETNEXT)
  |
  74:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_3.ss_sold_date_sk = default.impala_tpcds_date_dim_4.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=76,77 row-size=20B cardinality=0
  |  in pipelines: 72(GETNEXT), 73(OPEN)
  |
  |--153:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=77 row-size=8B cardinality=0
  |     in pipelines: 73(GETNEXT)
  |
  72:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_3.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_quantity, ss_list_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=76 row-size=12B cardinality=0
     in pipelines: 72(GETNEXT)

F28:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F33, EXCHANGE=153, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  73:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_4.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_4.d_year >= CAST(2000 AS INT) AND default.impala_tpcds_date_dim_4.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=77 row-size=8B cardinality=0
     in pipelines: 73(GETNEXT)

F30:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F33, EXCHANGE=154, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  76:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_5.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_5.d_year >= CAST(2000 AS INT) AND default.impala_tpcds_date_dim_5.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=81 row-size=8B cardinality=0
     in pipelines: 76(GETNEXT)

F32:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F33, EXCHANGE=155, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  79:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_6.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_6.d_year >= CAST(2000 AS INT) AND default.impala_tpcds_date_dim_6.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=85 row-size=8B cardinality=0
     in pipelines: 79(GETNEXT)

F53:PLAN FRAGMENT [HASH(default.impala_tpcds_item_1.i_brand_id,default.impala_tpcds_item_1.i_class_id,default.impala_tpcds_item_1.i_category_id)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.04MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F81, EXCHANGE=178, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  177:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(default.impala_tpcds_catalog_sales_1.cs_quantity), default.impala_tpcds_catalog_sales_1.cs_list_price)), _impala_builtins.count:merge(*)
  |  group by: default.impala_tpcds_item_1.i_brand_id, default.impala_tpcds_item_1.i_class_id, default.impala_tpcds_item_1.i_category_id
  |  having: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_catalog_sales_1.cs_quantity), default.impala_tpcds_catalog_sales_1.cs_list_price)) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=74 row-size=36B cardinality=0
  |  in pipelines: 177(GETNEXT), 42(OPEN)
  |
  176:EXCHANGE [HASH(default.impala_tpcds_item_1.i_brand_id,default.impala_tpcds_item_1.i_class_id,default.impala_tpcds_item_1.i_category_id)]
     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=74 row-size=36B cardinality=0
     in pipelines: 42(GETNEXT)

F35:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.90MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F53, EXCHANGE=176, HASH(default.impala_tpcds_item_1.i_brand_id,default.impala_tpcds_item_1.i_class_id,default.impala_tpcds_item_1.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  70:AGGREGATE [STREAMING]
  |  output: sum(multiply(casttodecimal(default.impala_tpcds_catalog_sales_1.cs_quantity), default.impala_tpcds_catalog_sales_1.cs_list_price)), count(*)
  |  group by: default.impala_tpcds_item_1.i_brand_id, default.impala_tpcds_item_1.i_class_id, default.impala_tpcds_item_1.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=74 row-size=36B cardinality=0
  |  in pipelines: 42(GETNEXT)
  |
  69:HASH JOIN [LEFT SEMI JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_1.cs_item_sk = default.impala_tpcds_item_2.i_item_sk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=44,46,48 row-size=52B cardinality=0
  |  in pipelines: 42(GETNEXT), 47(OPEN)
  |
  |--175:EXCHANGE [BROADCAST]
  |     mem-estimate=48.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=50,73 row-size=40B cardinality=0
  |     in pipelines: 47(GETNEXT)
  |
  46:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_1.cs_item_sk = default.impala_tpcds_item_1.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=44,46,48 row-size=52B cardinality=0
  |  in pipelines: 42(GETNEXT), 45(OPEN)
  |
  |--159:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=48 row-size=20B cardinality=0
  |     in pipelines: 45(GETNEXT)
  |
  44:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_1.cs_sold_date_sk = default.impala_tpcds_date_dim_3.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=44,46 row-size=32B cardinality=0
  |  in pipelines: 42(GETNEXT), 43(OPEN)
  |
  |--158:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=46 row-size=12B cardinality=0
  |     in pipelines: 43(GETNEXT)
  |
  42:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales_1.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales_1.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=44 row-size=20B cardinality=0
     in pipelines: 42(GETNEXT)

F36:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F35, EXCHANGE=158, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  43:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_3.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_3.d_moy = CAST(11 AS INT), default.impala_tpcds_date_dim_3.d_year = add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_3.d_moy = CAST(11 AS INT), default.impala_tpcds_date_dim_3.d_year = add(CAST(2000 AS INT), CAST(2 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=46 row-size=12B cardinality=0
     in pipelines: 43(GETNEXT)

F37:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F35, EXCHANGE=159, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  45:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_1.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=48 row-size=20B cardinality=0
     in pipelines: 45(GETNEXT)

F38:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.96MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F35, EXCHANGE=175, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  68:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_item_2.i_brand_id = i_brand_id, default.impala_tpcds_item_2.i_category_id = i_category_id, default.impala_tpcds_item_2.i_class_id = i_class_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=50,73 row-size=40B cardinality=0
  |  in pipelines: 47(GETNEXT), 173(OPEN)
  |
  |--174:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=73 row-size=20B cardinality=0
  |     in pipelines: 173(GETNEXT)
  |
  47:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_2.i_brand_id IS NOT NULL, default.impala_tpcds_item_2.i_category_id IS NOT NULL, default.impala_tpcds_item_2.i_class_id IS NOT NULL, default.impala_tpcds_item_2.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=50 row-size=20B cardinality=0
     in pipelines: 47(GETNEXT)

F52:PLAN FRAGMENT [HASH(i_brand_id,i_class_id,i_category_id)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.02MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F38, EXCHANGE=174, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  173:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.count:merge($f3)
  |  group by: i_brand_id, i_class_id, i_category_id
  |  having: _impala_builtins.count($f3) = CAST(3 AS BIGINT)
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=73 row-size=20B cardinality=0
  |  in pipelines: 173(GETNEXT), 163(OPEN), 167(OPEN), 171(OPEN)
  |
  172:EXCHANGE [HASH(i_brand_id,i_class_id,i_category_id)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=73 row-size=20B cardinality=0
     in pipelines: 163(GETNEXT), 167(GETNEXT), 171(GETNEXT)

F51:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=256.02MB mem-reservation=68.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F52, EXCHANGE=172, HASH(i_brand_id,i_class_id,i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  67:AGGREGATE [STREAMING]
  |  output: count($f3)
  |  group by: i_brand_id, i_class_id, i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=73 row-size=20B cardinality=0
  |  in pipelines: 163(GETNEXT), 167(GETNEXT), 171(GETNEXT)
  |
  48:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=52 row-size=20B cardinality=0
  |  in pipelines: 163(GETNEXT), 167(GETNEXT), 171(GETNEXT)
  |
  |--171:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.count:merge(*)
  |  |  group by: iws_0.i_brand_id, iws_0.i_class_id, iws_0.i_category_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=72 row-size=20B cardinality=0
  |  |  in pipelines: 171(GETNEXT), 61(OPEN)
  |  |
  |  170:EXCHANGE [HASH(iws_0.i_brand_id,iws_0.i_class_id,iws_0.i_category_id)]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=72 row-size=20B cardinality=0
  |     in pipelines: 61(GETNEXT)
  |
  |--167:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.count:merge(*)
  |  |  group by: ics_0.i_brand_id, ics_0.i_class_id, ics_0.i_category_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=65 row-size=20B cardinality=0
  |  |  in pipelines: 167(GETNEXT), 55(OPEN)
  |  |
  |  166:EXCHANGE [HASH(ics_0.i_brand_id,ics_0.i_class_id,ics_0.i_category_id)]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=65 row-size=20B cardinality=0
  |     in pipelines: 55(GETNEXT)
  |
  163:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.count:merge(*)
  |  group by: iss_0.i_brand_id, iss_0.i_class_id, iss_0.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=58 row-size=20B cardinality=0
  |  in pipelines: 163(GETNEXT), 49(OPEN)
  |
  162:EXCHANGE [HASH(iss_0.i_brand_id,iss_0.i_class_id,iss_0.i_category_id)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=58 row-size=20B cardinality=0
     in pipelines: 49(GETNEXT)

F39:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F51, EXCHANGE=162, HASH(iss_0.i_brand_id,iss_0.i_class_id,iss_0.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  54:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: iss_0.i_brand_id, iss_0.i_class_id, iss_0.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=58 row-size=20B cardinality=0
  |  in pipelines: 49(GETNEXT)
  |
  53:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_2.ss_item_sk = iss_0.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=53,54,56 row-size=40B cardinality=0
  |  in pipelines: 49(GETNEXT), 52(OPEN)
  |
  |--161:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=56 row-size=20B cardinality=0
  |     in pipelines: 52(GETNEXT)
  |
  51:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_2.ss_sold_date_sk = d1_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=53,54 row-size=20B cardinality=0
  |  in pipelines: 49(GETNEXT), 50(OPEN)
  |
  |--160:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=54 row-size=8B cardinality=0
  |     in pipelines: 50(GETNEXT)
  |
  49:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_2.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_2.ss_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_item_sk
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=53 row-size=12B cardinality=0
     in pipelines: 49(GETNEXT)

F40:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F39, EXCHANGE=160, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  50:SCAN HDFS [default.impala_tpcds_date_dim d1_0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d1_0.d_date_sk IS NOT NULL, d1_0.d_year >= CAST(2000 AS INT) AND d1_0.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=54 row-size=8B cardinality=0
     in pipelines: 50(GETNEXT)

F41:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F39, EXCHANGE=161, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  52:SCAN HDFS [default.impala_tpcds_item iss_0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: iss_0.i_brand_id IS NOT NULL, iss_0.i_category_id IS NOT NULL, iss_0.i_class_id IS NOT NULL, iss_0.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=56 row-size=20B cardinality=0
     in pipelines: 52(GETNEXT)

F43:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F51, EXCHANGE=166, HASH(ics_0.i_brand_id,ics_0.i_class_id,ics_0.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  60:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: ics_0.i_brand_id, ics_0.i_class_id, ics_0.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=65 row-size=20B cardinality=0
  |  in pipelines: 55(GETNEXT)
  |
  59:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_2.cs_item_sk = ics_0.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=59,61,63 row-size=40B cardinality=0
  |  in pipelines: 55(GETNEXT), 58(OPEN)
  |
  |--165:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=63 row-size=20B cardinality=0
  |     in pipelines: 58(GETNEXT)
  |
  57:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_2.cs_sold_date_sk = d2_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=59,61 row-size=20B cardinality=0
  |  in pipelines: 55(GETNEXT), 56(OPEN)
  |
  |--164:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=61 row-size=8B cardinality=0
  |     in pipelines: 56(GETNEXT)
  |
  55:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales_2.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales_2.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=59 row-size=12B cardinality=0
     in pipelines: 55(GETNEXT)

F44:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F43, EXCHANGE=164, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  56:SCAN HDFS [default.impala_tpcds_date_dim d2_0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d2_0.d_date_sk IS NOT NULL, d2_0.d_year >= CAST(2000 AS INT) AND d2_0.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=61 row-size=8B cardinality=0
     in pipelines: 56(GETNEXT)

F45:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F43, EXCHANGE=165, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  58:SCAN HDFS [default.impala_tpcds_item ics_0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ics_0.i_brand_id IS NOT NULL, ics_0.i_category_id IS NOT NULL, ics_0.i_class_id IS NOT NULL, ics_0.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=63 row-size=20B cardinality=0
     in pipelines: 58(GETNEXT)

F47:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F51, EXCHANGE=170, HASH(iws_0.i_brand_id,iws_0.i_class_id,iws_0.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  66:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: iws_0.i_brand_id, iws_0.i_class_id, iws_0.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=72 row-size=20B cardinality=0
  |  in pipelines: 61(GETNEXT)
  |
  65:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_1.ws_item_sk = iws_0.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=66,68,70 row-size=40B cardinality=0
  |  in pipelines: 61(GETNEXT), 64(OPEN)
  |
  |--169:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=70 row-size=20B cardinality=0
  |     in pipelines: 64(GETNEXT)
  |
  63:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_1.ws_sold_date_sk = d3_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=66,68 row-size=20B cardinality=0
  |  in pipelines: 61(GETNEXT), 62(OPEN)
  |
  |--168:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=68 row-size=8B cardinality=0
  |     in pipelines: 62(GETNEXT)
  |
  61:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales_1.ws_item_sk IS NOT NULL, default.impala_tpcds_web_sales_1.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=66 row-size=12B cardinality=0
     in pipelines: 61(GETNEXT)

F48:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F47, EXCHANGE=168, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  62:SCAN HDFS [default.impala_tpcds_date_dim d3_0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d3_0.d_date_sk IS NOT NULL, d3_0.d_year >= CAST(2000 AS INT) AND d3_0.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=68 row-size=8B cardinality=0
     in pipelines: 62(GETNEXT)

F49:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F47, EXCHANGE=169, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  64:SCAN HDFS [default.impala_tpcds_item iws_0, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: iws_0.i_brand_id IS NOT NULL, iws_0.i_category_id IS NOT NULL, iws_0.i_class_id IS NOT NULL, iws_0.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=70 row-size=20B cardinality=0
     in pipelines: 64(GETNEXT)

F60:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=11.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F81, EXCHANGE=182, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  122:AGGREGATE
  |  output: sum(multiply(casttodecimal(quantity), list_price)), count(multiply(casttodecimal(quantity), list_price))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=131 row-size=24B cardinality=1
  |  in pipelines: 122(GETNEXT), 113(OPEN), 116(OPEN), 119(OPEN)
  |
  112:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=119 row-size=8B cardinality=0
  |  in pipelines: 113(GETNEXT), 116(GETNEXT), 119(GETNEXT)
  |
  |--121:HASH JOIN [INNER JOIN, BROADCAST]
  |  |  hash predicates: default.impala_tpcds_web_sales_5.ws_sold_date_sk = default.impala_tpcds_date_dim_10.d_date_sk
  |  |  fk/pk conjuncts: assumed fk/pk
  |  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  |  tuple-ids=127,129 row-size=20B cardinality=0
  |  |  in pipelines: 119(GETNEXT), 120(OPEN)
  |  |
  |  |--181:EXCHANGE [BROADCAST]
  |  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=129 row-size=8B cardinality=0
  |  |     in pipelines: 120(GETNEXT)
  |  |
  |  119:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_web_sales_5.ws_sold_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=127 row-size=12B cardinality=0
  |     in pipelines: 119(GETNEXT)
  |
  |--118:HASH JOIN [INNER JOIN, BROADCAST]
  |  |  hash predicates: default.impala_tpcds_catalog_sales_5.cs_sold_date_sk = default.impala_tpcds_date_dim_9.d_date_sk
  |  |  fk/pk conjuncts: assumed fk/pk
  |  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  |  tuple-ids=123,125 row-size=20B cardinality=0
  |  |  in pipelines: 116(GETNEXT), 117(OPEN)
  |  |
  |  |--180:EXCHANGE [BROADCAST]
  |  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=125 row-size=8B cardinality=0
  |  |     in pipelines: 117(GETNEXT)
  |  |
  |  116:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_catalog_sales_5.cs_sold_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=123 row-size=12B cardinality=0
  |     in pipelines: 116(GETNEXT)
  |
  115:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_5.ss_sold_date_sk = default.impala_tpcds_date_dim_8.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=120,121 row-size=20B cardinality=0
  |  in pipelines: 113(GETNEXT), 114(OPEN)
  |
  |--179:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=121 row-size=8B cardinality=0
  |     in pipelines: 114(GETNEXT)
  |
  113:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_5.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_quantity, ss_list_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=120 row-size=12B cardinality=0
     in pipelines: 113(GETNEXT)

F55:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F60, EXCHANGE=179, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  114:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_8.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_8.d_year >= CAST(2000 AS INT) AND default.impala_tpcds_date_dim_8.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=121 row-size=8B cardinality=0
     in pipelines: 114(GETNEXT)

F57:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F60, EXCHANGE=180, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  117:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_9.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_9.d_year >= CAST(2000 AS INT) AND default.impala_tpcds_date_dim_9.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=125 row-size=8B cardinality=0
     in pipelines: 117(GETNEXT)

F59:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F60, EXCHANGE=181, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  120:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_10.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_10.d_year >= CAST(2000 AS INT) AND default.impala_tpcds_date_dim_10.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=129 row-size=8B cardinality=0
     in pipelines: 120(GETNEXT)

F80:PLAN FRAGMENT [HASH(default.impala_tpcds_item_3.i_brand_id,default.impala_tpcds_item_3.i_class_id,default.impala_tpcds_item_3.i_category_id)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.04MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F81, EXCHANGE=204, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  203:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(casttodecimal(default.impala_tpcds_web_sales_3.ws_quantity), default.impala_tpcds_web_sales_3.ws_list_price)), _impala_builtins.count:merge(*)
  |  group by: default.impala_tpcds_item_3.i_brand_id, default.impala_tpcds_item_3.i_class_id, default.impala_tpcds_item_3.i_category_id
  |  having: _impala_builtins.sum(multiply(casttodecimal(default.impala_tpcds_web_sales_3.ws_quantity), default.impala_tpcds_web_sales_3.ws_list_price)) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=118 row-size=36B cardinality=0
  |  in pipelines: 203(GETNEXT), 83(OPEN)
  |
  202:EXCHANGE [HASH(default.impala_tpcds_item_3.i_brand_id,default.impala_tpcds_item_3.i_class_id,default.impala_tpcds_item_3.i_category_id)]
     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=118 row-size=36B cardinality=0
     in pipelines: 83(GETNEXT)

F62:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.90MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F80, EXCHANGE=202, HASH(default.impala_tpcds_item_3.i_brand_id,default.impala_tpcds_item_3.i_class_id,default.impala_tpcds_item_3.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  111:AGGREGATE [STREAMING]
  |  output: sum(multiply(casttodecimal(default.impala_tpcds_web_sales_3.ws_quantity), default.impala_tpcds_web_sales_3.ws_list_price)), count(*)
  |  group by: default.impala_tpcds_item_3.i_brand_id, default.impala_tpcds_item_3.i_class_id, default.impala_tpcds_item_3.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=118 row-size=36B cardinality=0
  |  in pipelines: 83(GETNEXT)
  |
  110:HASH JOIN [LEFT SEMI JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_3.ws_item_sk = default.impala_tpcds_item_4.i_item_sk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=88,90,92 row-size=52B cardinality=0
  |  in pipelines: 83(GETNEXT), 88(OPEN)
  |
  |--201:EXCHANGE [BROADCAST]
  |     mem-estimate=48.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=94,117 row-size=40B cardinality=0
  |     in pipelines: 88(GETNEXT)
  |
  87:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_3.ws_item_sk = default.impala_tpcds_item_3.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=88,90,92 row-size=52B cardinality=0
  |  in pipelines: 83(GETNEXT), 86(OPEN)
  |
  |--185:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=92 row-size=20B cardinality=0
  |     in pipelines: 86(GETNEXT)
  |
  85:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_3.ws_sold_date_sk = default.impala_tpcds_date_dim_7.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=88,90 row-size=32B cardinality=0
  |  in pipelines: 83(GETNEXT), 84(OPEN)
  |
  |--184:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=90 row-size=12B cardinality=0
  |     in pipelines: 84(GETNEXT)
  |
  83:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales_3.ws_item_sk IS NOT NULL, default.impala_tpcds_web_sales_3.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=88 row-size=20B cardinality=0
     in pipelines: 83(GETNEXT)

F63:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F62, EXCHANGE=184, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  84:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_7.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_7.d_moy = CAST(11 AS INT), default.impala_tpcds_date_dim_7.d_year = add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_7.d_moy = CAST(11 AS INT), default.impala_tpcds_date_dim_7.d_year = add(CAST(2000 AS INT), CAST(2 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=90 row-size=12B cardinality=0
     in pipelines: 84(GETNEXT)

F64:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F62, EXCHANGE=185, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  86:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_3.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=92 row-size=20B cardinality=0
     in pipelines: 86(GETNEXT)

F65:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.96MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F62, EXCHANGE=201, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  109:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_item_4.i_brand_id = i_brand_id, default.impala_tpcds_item_4.i_category_id = i_category_id, default.impala_tpcds_item_4.i_class_id = i_class_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=94,117 row-size=40B cardinality=0
  |  in pipelines: 88(GETNEXT), 199(OPEN)
  |
  |--200:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=117 row-size=20B cardinality=0
  |     in pipelines: 199(GETNEXT)
  |
  88:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_4.i_brand_id IS NOT NULL, default.impala_tpcds_item_4.i_category_id IS NOT NULL, default.impala_tpcds_item_4.i_class_id IS NOT NULL, default.impala_tpcds_item_4.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=94 row-size=20B cardinality=0
     in pipelines: 88(GETNEXT)

F79:PLAN FRAGMENT [HASH(i_brand_id,i_class_id,i_category_id)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.02MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F65, EXCHANGE=200, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  199:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.count:merge($f3)
  |  group by: i_brand_id, i_class_id, i_category_id
  |  having: _impala_builtins.count($f3) = CAST(3 AS BIGINT)
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=117 row-size=20B cardinality=0
  |  in pipelines: 199(GETNEXT), 189(OPEN), 193(OPEN), 197(OPEN)
  |
  198:EXCHANGE [HASH(i_brand_id,i_class_id,i_category_id)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=117 row-size=20B cardinality=0
     in pipelines: 189(GETNEXT), 193(GETNEXT), 197(GETNEXT)

F78:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=256.02MB mem-reservation=68.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F79, EXCHANGE=198, HASH(i_brand_id,i_class_id,i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  108:AGGREGATE [STREAMING]
  |  output: count($f3)
  |  group by: i_brand_id, i_class_id, i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=117 row-size=20B cardinality=0
  |  in pipelines: 189(GETNEXT), 193(GETNEXT), 197(GETNEXT)
  |
  89:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=96 row-size=20B cardinality=0
  |  in pipelines: 189(GETNEXT), 193(GETNEXT), 197(GETNEXT)
  |
  |--197:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.count:merge(*)
  |  |  group by: iws_1.i_brand_id, iws_1.i_class_id, iws_1.i_category_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=116 row-size=20B cardinality=0
  |  |  in pipelines: 197(GETNEXT), 102(OPEN)
  |  |
  |  196:EXCHANGE [HASH(iws_1.i_brand_id,iws_1.i_class_id,iws_1.i_category_id)]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=116 row-size=20B cardinality=0
  |     in pipelines: 102(GETNEXT)
  |
  |--193:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.count:merge(*)
  |  |  group by: ics_1.i_brand_id, ics_1.i_class_id, ics_1.i_category_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=109 row-size=20B cardinality=0
  |  |  in pipelines: 193(GETNEXT), 96(OPEN)
  |  |
  |  192:EXCHANGE [HASH(ics_1.i_brand_id,ics_1.i_class_id,ics_1.i_category_id)]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=109 row-size=20B cardinality=0
  |     in pipelines: 96(GETNEXT)
  |
  189:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.count:merge(*)
  |  group by: iss_1.i_brand_id, iss_1.i_class_id, iss_1.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=102 row-size=20B cardinality=0
  |  in pipelines: 189(GETNEXT), 90(OPEN)
  |
  188:EXCHANGE [HASH(iss_1.i_brand_id,iss_1.i_class_id,iss_1.i_category_id)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=102 row-size=20B cardinality=0
     in pipelines: 90(GETNEXT)

F66:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F78, EXCHANGE=188, HASH(iss_1.i_brand_id,iss_1.i_class_id,iss_1.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  95:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: iss_1.i_brand_id, iss_1.i_class_id, iss_1.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=102 row-size=20B cardinality=0
  |  in pipelines: 90(GETNEXT)
  |
  94:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_4.ss_item_sk = iss_1.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=97,98,100 row-size=40B cardinality=0
  |  in pipelines: 90(GETNEXT), 93(OPEN)
  |
  |--187:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=100 row-size=20B cardinality=0
  |     in pipelines: 93(GETNEXT)
  |
  92:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_4.ss_sold_date_sk = d1_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=97,98 row-size=20B cardinality=0
  |  in pipelines: 90(GETNEXT), 91(OPEN)
  |
  |--186:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=98 row-size=8B cardinality=0
  |     in pipelines: 91(GETNEXT)
  |
  90:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_4.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_4.ss_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_item_sk
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=97 row-size=12B cardinality=0
     in pipelines: 90(GETNEXT)

F67:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F66, EXCHANGE=186, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  91:SCAN HDFS [default.impala_tpcds_date_dim d1_1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d1_1.d_date_sk IS NOT NULL, d1_1.d_year >= CAST(2000 AS INT) AND d1_1.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=98 row-size=8B cardinality=0
     in pipelines: 91(GETNEXT)

F68:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F66, EXCHANGE=187, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  93:SCAN HDFS [default.impala_tpcds_item iss_1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: iss_1.i_brand_id IS NOT NULL, iss_1.i_category_id IS NOT NULL, iss_1.i_class_id IS NOT NULL, iss_1.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=100 row-size=20B cardinality=0
     in pipelines: 93(GETNEXT)

F70:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F78, EXCHANGE=192, HASH(ics_1.i_brand_id,ics_1.i_class_id,ics_1.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  101:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: ics_1.i_brand_id, ics_1.i_class_id, ics_1.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=109 row-size=20B cardinality=0
  |  in pipelines: 96(GETNEXT)
  |
  100:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_4.cs_item_sk = ics_1.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=103,105,107 row-size=40B cardinality=0
  |  in pipelines: 96(GETNEXT), 99(OPEN)
  |
  |--191:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=107 row-size=20B cardinality=0
  |     in pipelines: 99(GETNEXT)
  |
  98:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_4.cs_sold_date_sk = d2_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=103,105 row-size=20B cardinality=0
  |  in pipelines: 96(GETNEXT), 97(OPEN)
  |
  |--190:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=105 row-size=8B cardinality=0
  |     in pipelines: 97(GETNEXT)
  |
  96:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales_4.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales_4.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=103 row-size=12B cardinality=0
     in pipelines: 96(GETNEXT)

F71:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F70, EXCHANGE=190, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  97:SCAN HDFS [default.impala_tpcds_date_dim d2_1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d2_1.d_date_sk IS NOT NULL, d2_1.d_year >= CAST(2000 AS INT) AND d2_1.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=105 row-size=8B cardinality=0
     in pipelines: 97(GETNEXT)

F72:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F70, EXCHANGE=191, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  99:SCAN HDFS [default.impala_tpcds_item ics_1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ics_1.i_brand_id IS NOT NULL, ics_1.i_category_id IS NOT NULL, ics_1.i_class_id IS NOT NULL, ics_1.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=107 row-size=20B cardinality=0
     in pipelines: 99(GETNEXT)

F74:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F78, EXCHANGE=196, HASH(iws_1.i_brand_id,iws_1.i_class_id,iws_1.i_category_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  107:AGGREGATE [STREAMING]
  |  output: count(*)
  |  group by: iws_1.i_brand_id, iws_1.i_class_id, iws_1.i_category_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=116 row-size=20B cardinality=0
  |  in pipelines: 102(GETNEXT)
  |
  106:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_4.ws_item_sk = iws_1.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=110,112,114 row-size=40B cardinality=0
  |  in pipelines: 102(GETNEXT), 105(OPEN)
  |
  |--195:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=114 row-size=20B cardinality=0
  |     in pipelines: 105(GETNEXT)
  |
  104:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_4.ws_sold_date_sk = d3_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=110,112 row-size=20B cardinality=0
  |  in pipelines: 102(GETNEXT), 103(OPEN)
  |
  |--194:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=112 row-size=8B cardinality=0
  |     in pipelines: 103(GETNEXT)
  |
  102:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales_4.ws_item_sk IS NOT NULL, default.impala_tpcds_web_sales_4.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=110 row-size=12B cardinality=0
     in pipelines: 102(GETNEXT)

F75:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F74, EXCHANGE=194, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  103:SCAN HDFS [default.impala_tpcds_date_dim d3_1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: d3_1.d_date_sk IS NOT NULL, d3_1.d_year >= CAST(2000 AS INT) AND d3_1.d_year <= add(CAST(2000 AS INT), CAST(2 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=112 row-size=8B cardinality=0
     in pipelines: 103(GETNEXT)

F76:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F74, EXCHANGE=195, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  105:SCAN HDFS [default.impala_tpcds_item iws_1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: iws_1.i_brand_id IS NOT NULL, iws_1.i_category_id IS NOT NULL, iws_1.i_class_id IS NOT NULL, iws_1.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=114 row-size=20B cardinality=0
     in pipelines: 105(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

