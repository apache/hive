PREHOOK: query: explain cbo select
  nation,
  o_year,
  sum(amount) as sum_profit
from(
  select 
    n_name as nation,
    year(o_orderdate) as o_year,
    l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
  from
    impala_tpch_part,
    impala_tpch_supplier, 
    impala_tpch_lineitem,
    impala_tpch_partsupp,
    impala_tpch_orders,
    impala_tpch_nation
  where
    s_suppkey = l_suppkey
    and ps_suppkey = l_suppkey
    and ps_partkey = l_partkey
    and p_partkey = l_partkey
    and o_orderkey = l_orderkey
    and s_nationkey = n_nationkey
    and p_name like '%green%'
  ) as profit
group by
  nation,
  o_year
order by
  nation,
  o_year desc
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Input: default@impala_tpch_nation
PREHOOK: Input: default@impala_tpch_orders
PREHOOK: Input: default@impala_tpch_part
PREHOOK: Input: default@impala_tpch_partsupp
PREHOOK: Input: default@impala_tpch_supplier
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo select
  nation,
  o_year,
  sum(amount) as sum_profit
from(
  select 
    n_name as nation,
    year(o_orderdate) as o_year,
    l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
  from
    impala_tpch_part,
    impala_tpch_supplier, 
    impala_tpch_lineitem,
    impala_tpch_partsupp,
    impala_tpch_orders,
    impala_tpch_nation
  where
    s_suppkey = l_suppkey
    and ps_suppkey = l_suppkey
    and ps_partkey = l_partkey
    and p_partkey = l_partkey
    and o_orderkey = l_orderkey
    and s_nationkey = n_nationkey
    and p_name like '%green%'
  ) as profit
group by
  nation,
  o_year
order by
  nation,
  o_year desc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Input: default@impala_tpch_nation
POSTHOOK: Input: default@impala_tpch_orders
POSTHOOK: Input: default@impala_tpch_part
POSTHOOK: Input: default@impala_tpch_partsupp
POSTHOOK: Input: default@impala_tpch_supplier
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[DESC])
  ImpalaAggregateRel(group=[{0, 1}], agg#0=[sum($2)])
    ImpalaProjectPassthroughRel(nation=[$9], o_year=[$11], amount=[-($4, *($14, $3))])
      ImpalaJoinRel(condition=[AND(=($13, $2), =($12, $1))], joinType=[inner])
        ImpalaJoinRel(condition=[=($10, $0)], joinType=[inner])
          ImpalaJoinRel(condition=[=($6, $2)], joinType=[inner])
            ImpalaJoinRel(condition=[=($5, $1)], joinType=[inner])
              ImpalaProjectPassthroughRel(l_orderkey=[$0], l_partkey=[$1], l_suppkey=[$2], l_quantity=[$4], *=[*($5, -(1:DECIMAL(3, 0), $6))])
                ImpalaHdfsScanRel(table=[[default, impala_tpch_lineitem]], condition=[AND(IS NOT NULL($0), IS NOT NULL($2), IS NOT NULL($1))])
              ImpalaProjectPassthroughRel(p_partkey=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpch_part]], condition=[AND(LIKE($1, _UTF-16LE'%green%':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])
            ImpalaJoinRel(condition=[=($1, $2)], joinType=[inner])
              ImpalaProjectPassthroughRel(s_suppkey=[$0], s_nationkey=[$3])
                ImpalaHdfsScanRel(table=[[default, impala_tpch_supplier]], condition=[AND(IS NOT NULL($3), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(n_nationkey=[$0], n_name=[$1])
                ImpalaHdfsScanRel(table=[[default, impala_tpch_nation]], condition=[IS NOT NULL($0)])
          ImpalaProjectPassthroughRel(o_orderkey=[$0], YEAR=[YEAR(FLAG(YEAR), CAST($4):DATE)])
            ImpalaHdfsScanRel(table=[[default, impala_tpch_orders]], condition=[IS NOT NULL($0)])
        ImpalaProjectPassthroughRel(ps_partkey=[$0], ps_suppkey=[$1], ps_supplycost=[$3])
          ImpalaHdfsScanRel(table=[[default, impala_tpch_partsupp]], condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])

PREHOOK: query: explain select
  nation,
  o_year,
  sum(amount) as sum_profit
from(
  select 
    n_name as nation,
    year(o_orderdate) as o_year,
    l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
  from
    impala_tpch_part,
    impala_tpch_supplier, 
    impala_tpch_lineitem,
    impala_tpch_partsupp,
    impala_tpch_orders,
    impala_tpch_nation
  where
    s_suppkey = l_suppkey
    and ps_suppkey = l_suppkey
    and ps_partkey = l_partkey
    and p_partkey = l_partkey
    and o_orderkey = l_orderkey
    and s_nationkey = n_nationkey
    and p_name like '%green%'
  ) as profit
group by
  nation,
  o_year
order by
  nation,
  o_year desc
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Input: default@impala_tpch_nation
PREHOOK: Input: default@impala_tpch_orders
PREHOOK: Input: default@impala_tpch_part
PREHOOK: Input: default@impala_tpch_partsupp
PREHOOK: Input: default@impala_tpch_supplier
PREHOOK: Output: streaming
POSTHOOK: query: explain select
  nation,
  o_year,
  sum(amount) as sum_profit
from(
  select 
    n_name as nation,
    year(o_orderdate) as o_year,
    l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
  from
    impala_tpch_part,
    impala_tpch_supplier, 
    impala_tpch_lineitem,
    impala_tpch_partsupp,
    impala_tpch_orders,
    impala_tpch_nation
  where
    s_suppkey = l_suppkey
    and ps_suppkey = l_suppkey
    and ps_partkey = l_partkey
    and p_partkey = l_partkey
    and o_orderkey = l_orderkey
    and s_nationkey = n_nationkey
    and p_name like '%green%'
  ) as profit
group by
  nation,
  o_year
order by
  nation,
  o_year desc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Input: default@impala_tpch_nation
POSTHOOK: Input: default@impala_tpch_orders
POSTHOOK: Input: default@impala_tpch_part
POSTHOOK: Input: default@impala_tpch_partsupp
POSTHOOK: Input: default@impala_tpch_supplier
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F07:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=36.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpch_nation.n_name, year(casttodate(default.impala_tpch_orders.o_orderdate)), _impala_builtins.sum(subtract(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), multiply(default.impala_tpch_partsupp.ps_supplycost, default.impala_tpch_lineitem.l_quantity)))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  20:MERGING-EXCHANGE [UNPARTITIONED]
     order by: default.impala_tpch_nation.n_name ASC NULLS LAST, year(casttodate(default.impala_tpch_orders.o_orderdate)) DESC NULLS FIRST
     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=32B cardinality=0
     in pipelines: 12(GETNEXT)

F06:PLAN FRAGMENT [HASH(default.impala_tpch_nation.n_name,year(casttodate(default.impala_tpch_orders.o_orderdate)))] hosts=1 instances=1
Per-Host Resources: mem-estimate=140.00MB mem-reservation=46.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=20, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:SORT
  |  order by: default.impala_tpch_nation.n_name ASC NULLS LAST, year(casttodate(default.impala_tpch_orders.o_orderdate)) DESC NULLS FIRST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=32B cardinality=0
  |  in pipelines: 12(GETNEXT), 19(OPEN)
  |
  19:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(subtract(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), multiply(default.impala_tpch_partsupp.ps_supplycost, default.impala_tpch_lineitem.l_quantity)))
  |  group by: default.impala_tpch_nation.n_name, year(casttodate(default.impala_tpch_orders.o_orderdate))
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=32B cardinality=0
  |  in pipelines: 19(GETNEXT), 00(OPEN)
  |
  18:EXCHANGE [HASH(default.impala_tpch_nation.n_name,year(casttodate(default.impala_tpch_orders.o_orderdate)))]
     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=32B cardinality=0
     in pipelines: 00(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=135.86MB mem-reservation=41.75MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=18, HASH(default.impala_tpch_nation.n_name,year(casttodate(default.impala_tpch_orders.o_orderdate)))]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:AGGREGATE [STREAMING]
  |  output: sum(subtract(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)), multiply(default.impala_tpch_partsupp.ps_supplycost, default.impala_tpch_lineitem.l_quantity)))
  |  group by: default.impala_tpch_nation.n_name, year(casttodate(default.impala_tpch_orders.o_orderdate))
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=32B cardinality=0
  |  in pipelines: 00(GETNEXT)
  |
  10:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_lineitem.l_partkey = default.impala_tpch_partsupp.ps_partkey, default.impala_tpch_lineitem.l_suppkey = default.impala_tpch_partsupp.ps_suppkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6,8,10 row-size=136B cardinality=0
  |  in pipelines: 00(GETNEXT), 09(OPEN)
  |
  |--17:EXCHANGE [BROADCAST]
  |     mem-estimate=28.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=10 row-size=24B cardinality=0
  |     in pipelines: 09(GETNEXT)
  |
  08:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_lineitem.l_orderkey = default.impala_tpch_orders.o_orderkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6,8 row-size=112B cardinality=0
  |  in pipelines: 00(GETNEXT), 07(OPEN)
  |
  |--16:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=20B cardinality=0
  |     in pipelines: 07(GETNEXT)
  |
  06:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_lineitem.l_suppkey = default.impala_tpch_supplier.s_suppkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6 row-size=92B cardinality=0
  |  in pipelines: 00(GETNEXT), 03(OPEN)
  |
  |--15:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4,6 row-size=24B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_lineitem.l_partkey = default.impala_tpch_part.p_partkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=68B cardinality=0
  |  in pipelines: 00(GETNEXT), 01(OPEN)
  |
  |--13:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=20B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  00:SCAN HDFS [default.impala_tpch_lineitem, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_lineitem.l_orderkey IS NOT NULL, default.impala_tpch_lineitem.l_partkey IS NOT NULL, default.impala_tpch_lineitem.l_suppkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=48B cardinality=0
     in pipelines: 00(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=13, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SCAN HDFS [default.impala_tpch_part, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_part.p_partkey IS NOT NULL, like(default.impala_tpch_part.p_name, '%green%')
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=20B cardinality=0
     in pipelines: 01(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.96MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=15, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_supplier.s_nationkey = default.impala_tpch_nation.n_nationkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=4,6 row-size=24B cardinality=0
  |  in pipelines: 03(GETNEXT), 04(OPEN)
  |
  |--14:EXCHANGE [BROADCAST]
  |     mem-estimate=18.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=14B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:SCAN HDFS [default.impala_tpch_supplier, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_supplier.s_nationkey IS NOT NULL, default.impala_tpch_supplier.s_suppkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=10B cardinality=0
     in pipelines: 03(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=14, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpch_nation, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_nation.n_nationkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=14B cardinality=0
     in pipelines: 04(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=16, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:SCAN HDFS [default.impala_tpch_orders, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_orders.o_orderkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=20B cardinality=0
     in pipelines: 07(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=17, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:SCAN HDFS [default.impala_tpch_partsupp, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_partsupp.ps_partkey IS NOT NULL, default.impala_tpch_partsupp.ps_suppkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=24B cardinality=0
     in pipelines: 09(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

