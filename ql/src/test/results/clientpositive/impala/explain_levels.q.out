explain_level=MINIMAL
impala.explain_level=VERBOSE
PREHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
PLAN-ROOT SINK
06:MERGING-EXCHANGE [UNPARTITIONED]
03:SORT
00:UNION
05:AGGREGATE [FINALIZE]
04:EXCHANGE [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
02:AGGREGATE [STREAMING]
01:SCAN HDFS [default.impala_tpch_lineitem]


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

impala.explain_level=MINIMAL
explain_level=STANDARD
impala.explain_level=MINIMAL
PREHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
PLAN-ROOT SINK
|
06:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
|
03:SORT
|  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
|  row-size=120B cardinality=0
|
00:UNION
|  row-size=120B cardinality=0
|
05:AGGREGATE [FINALIZE]
|  output: _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount))), _impala_builtins.sum:merge(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), add(1, default.impala_tpch_lineitem.l_tax))), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge()
|  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
|  row-size=136B cardinality=0
|
04:EXCHANGE [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
|
02:AGGREGATE [STREAMING]
|  output: sum(default.impala_tpch_lineitem.l_quantity), sum(default.impala_tpch_lineitem.l_extendedprice), sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount))), sum(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), add(1, default.impala_tpch_lineitem.l_tax))), count(default.impala_tpch_lineitem.l_quantity), count(default.impala_tpch_lineitem.l_extendedprice), sum(default.impala_tpch_lineitem.l_discount), count(default.impala_tpch_lineitem.l_discount), count()
|  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
|  row-size=136B cardinality=0
|
01:SCAN HDFS [default.impala_tpch_lineitem]
   HDFS partitions=1/1 files=0 size=0B
   predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
   row-size=68B cardinality=0


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

impala.explain_level=STANDARD
explain_level=EXTENDED
impala.explain_level=STANDARD
PREHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F03:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
|  Per-Host Resources: mem-estimate=124.00KB mem-reservation=0B thread-reservation=1
PLAN-ROOT SINK
|  output exprs: $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9
|  mem-estimate=0B mem-reservation=0B thread-reservation=0
|
06:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
|  mem-estimate=124.00KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=120B cardinality=0
|  in pipelines: 03(GETNEXT)
|
F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=140.14MB mem-reservation=46.00MB thread-reservation=1
03:SORT
|  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
|  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
|  tuple-ids=4 row-size=120B cardinality=0
|  in pipelines: 03(GETNEXT), 05(OPEN)
|
00:UNION
|  mem-estimate=0B mem-reservation=0B thread-reservation=0
|  tuple-ids=3 row-size=120B cardinality=0
|  in pipelines: 05(GETNEXT)
|
05:AGGREGATE [FINALIZE]
|  output: _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount))), _impala_builtins.sum:merge(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), add(1, default.impala_tpch_lineitem.l_tax))), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge()
|  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
|  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
|  tuple-ids=2 row-size=136B cardinality=0
|  in pipelines: 05(GETNEXT), 01(OPEN)
|
04:EXCHANGE [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
|  mem-estimate=140.00KB mem-reservation=0B thread-reservation=0
|  tuple-ids=2 row-size=136B cardinality=0
|  in pipelines: 01(GETNEXT)
|
F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
02:AGGREGATE [STREAMING]
|  output: sum(default.impala_tpch_lineitem.l_quantity), sum(default.impala_tpch_lineitem.l_extendedprice), sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount))), sum(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)), add(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_tax))), count(default.impala_tpch_lineitem.l_quantity), count(default.impala_tpch_lineitem.l_extendedprice), sum(default.impala_tpch_lineitem.l_discount), count(default.impala_tpch_lineitem.l_discount), count()
|  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
|  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
|  tuple-ids=2 row-size=136B cardinality=0
|  in pipelines: 01(GETNEXT)
|
01:SCAN HDFS [default.impala_tpch_lineitem, RANDOM]
   HDFS partitions=1/1 files=0 size=0B
   predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
   stored statistics:
     table: rows=unavailable size=unavailable
     columns: unavailable
   extrapolated-rows=disabled max-scan-range-rows=0
   parquet statistics predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
   mem-estimate=0B mem-reservation=0B thread-reservation=0
   tuple-ids=0 row-size=68B cardinality=0
   in pipelines: 01(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

impala.explain_level=EXTENDED
explain_level=VERBOSE
impala.explain_level=EXTENDED
PREHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F03:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=124.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  06:MERGING-EXCHANGE [UNPARTITIONED]
     order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
     mem-estimate=124.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=120B cardinality=0
     in pipelines: 03(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=140.14MB mem-reservation=46.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=06, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SORT
  |  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=120B cardinality=0
  |  in pipelines: 03(GETNEXT), 05(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=3 row-size=120B cardinality=0
  |  in pipelines: 05(GETNEXT)
  |
  05:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount))), _impala_builtins.sum:merge(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), add(1, default.impala_tpch_lineitem.l_tax))), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge()
  |  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=2 row-size=136B cardinality=0
  |  in pipelines: 05(GETNEXT), 01(OPEN)
  |
  04:EXCHANGE [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
     mem-estimate=140.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=136B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=04, HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpch_lineitem.l_quantity), sum(default.impala_tpch_lineitem.l_extendedprice), sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount))), sum(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)), add(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_tax))), count(default.impala_tpch_lineitem.l_quantity), count(default.impala_tpch_lineitem.l_extendedprice), sum(default.impala_tpch_lineitem.l_discount), count(default.impala_tpch_lineitem.l_discount), count()
  |  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=2 row-size=136B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpch_lineitem, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=68B cardinality=0
     in pipelines: 01(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

impala.explain_level=VERBOSE
impala.explain_level=MINIMAL
explain_level=MINIMAL
PREHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
PLAN-ROOT SINK
06:MERGING-EXCHANGE [UNPARTITIONED]
03:SORT
00:UNION
05:AGGREGATE [FINALIZE]
04:EXCHANGE [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
02:AGGREGATE [STREAMING]
01:SCAN HDFS [default.impala_tpch_lineitem]


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

impala.explain_level=STANDARD
explain_level=STANDARD
PREHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
PLAN-ROOT SINK
|
06:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
|
03:SORT
|  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
|  row-size=120B cardinality=0
|
00:UNION
|  row-size=120B cardinality=0
|
05:AGGREGATE [FINALIZE]
|  output: _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount))), _impala_builtins.sum:merge(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), add(1, default.impala_tpch_lineitem.l_tax))), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge()
|  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
|  row-size=136B cardinality=0
|
04:EXCHANGE [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
|
02:AGGREGATE [STREAMING]
|  output: sum(default.impala_tpch_lineitem.l_quantity), sum(default.impala_tpch_lineitem.l_extendedprice), sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount))), sum(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), add(1, default.impala_tpch_lineitem.l_tax))), count(default.impala_tpch_lineitem.l_quantity), count(default.impala_tpch_lineitem.l_extendedprice), sum(default.impala_tpch_lineitem.l_discount), count(default.impala_tpch_lineitem.l_discount), count()
|  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
|  row-size=136B cardinality=0
|
01:SCAN HDFS [default.impala_tpch_lineitem]
   HDFS partitions=1/1 files=0 size=0B
   predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
   row-size=68B cardinality=0


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

impala.explain_level=EXTENDED
explain_level=EXTENDED
PREHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F03:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
|  Per-Host Resources: mem-estimate=124.00KB mem-reservation=0B thread-reservation=1
PLAN-ROOT SINK
|  output exprs: $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9
|  mem-estimate=0B mem-reservation=0B thread-reservation=0
|
06:MERGING-EXCHANGE [UNPARTITIONED]
|  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
|  mem-estimate=124.00KB mem-reservation=0B thread-reservation=0
|  tuple-ids=4 row-size=120B cardinality=0
|  in pipelines: 03(GETNEXT)
|
F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=140.14MB mem-reservation=46.00MB thread-reservation=1
03:SORT
|  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
|  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
|  tuple-ids=4 row-size=120B cardinality=0
|  in pipelines: 03(GETNEXT), 05(OPEN)
|
00:UNION
|  mem-estimate=0B mem-reservation=0B thread-reservation=0
|  tuple-ids=3 row-size=120B cardinality=0
|  in pipelines: 05(GETNEXT)
|
05:AGGREGATE [FINALIZE]
|  output: _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount))), _impala_builtins.sum:merge(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), add(1, default.impala_tpch_lineitem.l_tax))), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge()
|  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
|  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
|  tuple-ids=2 row-size=136B cardinality=0
|  in pipelines: 05(GETNEXT), 01(OPEN)
|
04:EXCHANGE [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
|  mem-estimate=140.00KB mem-reservation=0B thread-reservation=0
|  tuple-ids=2 row-size=136B cardinality=0
|  in pipelines: 01(GETNEXT)
|
F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
02:AGGREGATE [STREAMING]
|  output: sum(default.impala_tpch_lineitem.l_quantity), sum(default.impala_tpch_lineitem.l_extendedprice), sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount))), sum(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)), add(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_tax))), count(default.impala_tpch_lineitem.l_quantity), count(default.impala_tpch_lineitem.l_extendedprice), sum(default.impala_tpch_lineitem.l_discount), count(default.impala_tpch_lineitem.l_discount), count()
|  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
|  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
|  tuple-ids=2 row-size=136B cardinality=0
|  in pipelines: 01(GETNEXT)
|
01:SCAN HDFS [default.impala_tpch_lineitem, RANDOM]
   HDFS partitions=1/1 files=0 size=0B
   predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
   stored statistics:
     table: rows=unavailable size=unavailable
     columns: unavailable
   extrapolated-rows=disabled max-scan-range-rows=0
   parquet statistics predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
   mem-estimate=0B mem-reservation=0B thread-reservation=0
   tuple-ids=0 row-size=68B cardinality=0
   in pipelines: 01(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

impala.explain_level=VERBOSE
explain_level=VERBOSE
PREHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
order by
  l_returnflag,
  l_linestatus
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F03:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=124.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  06:MERGING-EXCHANGE [UNPARTITIONED]
     order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
     mem-estimate=124.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=120B cardinality=0
     in pipelines: 03(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=140.14MB mem-reservation=46.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=06, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SORT
  |  order by: $f0 ASC NULLS LAST, $f1 ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=120B cardinality=0
  |  in pipelines: 03(GETNEXT), 05(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=3 row-size=120B cardinality=0
  |  in pipelines: 05(GETNEXT)
  |
  05:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount))), _impala_builtins.sum:merge(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)), add(1, default.impala_tpch_lineitem.l_tax))), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge()
  |  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=2 row-size=136B cardinality=0
  |  in pipelines: 05(GETNEXT), 01(OPEN)
  |
  04:EXCHANGE [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
     mem-estimate=140.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=136B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=04, HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpch_lineitem.l_quantity), sum(default.impala_tpch_lineitem.l_extendedprice), sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount))), sum(multiply(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)), add(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_tax))), count(default.impala_tpch_lineitem.l_quantity), count(default.impala_tpch_lineitem.l_extendedprice), sum(default.impala_tpch_lineitem.l_discount), count(default.impala_tpch_lineitem.l_discount), count()
  |  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=2 row-size=136B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpch_lineitem, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=68B cardinality=0
     in pipelines: 01(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

