HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_item
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
PREHOOK: query: explain cbo physical select  i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ws_ext_sales_price) as itemrevenue 
      ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over
          (partition by i_class) as revenueratio
from     
     impala_tpcds_web_sales
         ,impala_tpcds_item 
         ,impala_tpcds_date_dim
where 
     ws_item_sk = i_item_sk 
       and i_category in ('Electronics', 'Books', 'Women')
       and ws_sold_date_sk = d_date_sk
     and d_date between cast('1998-01-06' as date) 
                    and (cast('1998-01-06' as date) + 30 days)
group by 
     i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
     i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical select  i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ws_ext_sales_price) as itemrevenue 
      ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over
          (partition by i_class) as revenueratio
from     
     impala_tpcds_web_sales
         ,impala_tpcds_item 
         ,impala_tpcds_date_dim
where 
     ws_item_sk = i_item_sk 
       and i_category in ('Electronics', 'Books', 'Women')
       and ws_sold_date_sk = d_date_sk
     and d_date between cast('1998-01-06' as date) 
                    and (cast('1998-01-06' as date) + 30 days)
group by 
     i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
     i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_web_sales
CBO PLAN:
ImpalaSortRel(sort0=[$2], sort1=[$3], sort2=[$0], sort3=[$1], sort4=[$6], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], dir4=[ASC], fetch=[100])
  ImpalaProjectRel(i_item_id=[$0], i_item_desc=[$1], i_category=[$4], i_class=[$3], i_current_price=[$2], itemrevenue=[$5], revenueratio=[/(*($5, 100:DECIMAL(3, 0)), sum($5) OVER (PARTITION BY $3 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING))])
    ImpalaAggregateRel(group=[{5, 6, 7, 8, 9}], agg#0=[sum($2)])
      ImpalaJoinRel(condition=[=($1, $4)], joinType=[inner])
        ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
          ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_ext_sales_price=[$23])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
          ImpalaProjectPassthroughRel(d_date_sk=[$0])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), CAST(CAST(_UTF-16LE'1998-01-06':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), +(CAST(CAST(_UTF-16LE'1998-01-06':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), 2592000000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])
        ImpalaProjectPassthroughRel(i_item_sk=[$0], i_item_id=[$1], i_item_desc=[$4], i_current_price=[$5], i_class=[$10], i_category=[$12])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IN($12, _UTF-16LE'Electronics':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Books':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Women':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])

HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_item
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
PREHOOK: query: explain select  i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ws_ext_sales_price) as itemrevenue 
      ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over
          (partition by i_class) as revenueratio
from     
     impala_tpcds_web_sales
         ,impala_tpcds_item 
         ,impala_tpcds_date_dim
where 
     ws_item_sk = i_item_sk 
       and i_category in ('Electronics', 'Books', 'Women')
       and ws_sold_date_sk = d_date_sk
     and d_date between cast('1998-01-06' as date) 
                    and (cast('1998-01-06' as date) + 30 days)
group by 
     i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
     i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain select  i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ws_ext_sales_price) as itemrevenue 
      ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over
          (partition by i_class) as revenueratio
from     
     impala_tpcds_web_sales
         ,impala_tpcds_item 
         ,impala_tpcds_date_dim
where 
     ws_item_sk = i_item_sk 
       and i_category in ('Electronics', 'Books', 'Women')
       and ws_sold_date_sk = d_date_sk
     and d_date between cast('1998-01-06' as date) 
                    and (cast('1998-01-06' as date) + 30 days)
group by 
     i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
     i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_web_sales
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F06:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=88.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpcds_item.i_item_id, default.impala_tpcds_item.i_item_desc, default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_class, default.impala_tpcds_item.i_current_price, sum(default.impala_tpcds_web_sales.ws_ext_sales_price), divide(multiply(sum(default.impala_tpcds_web_sales.ws_ext_sales_price), 100), sum(sum(default.impala_tpcds_web_sales.ws_ext_sales_price)))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  15:MERGING-EXCHANGE [UNPARTITIONED]
     order by: default.impala_tpcds_item.i_category ASC NULLS LAST, default.impala_tpcds_item.i_class ASC NULLS LAST, default.impala_tpcds_item.i_item_id ASC NULLS LAST, default.impala_tpcds_item.i_item_desc ASC NULLS LAST, divide(multiply(sum(default.impala_tpcds_web_sales.ws_ext_sales_price), 100), sum(sum(default.impala_tpcds_web_sales.ws_ext_sales_price))) ASC NULLS LAST
     limit: 100
     mem-estimate=88.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=84B cardinality=0
     in pipelines: 09(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=16.07MB mem-reservation=16.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=15, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:TOP-N [LIMIT=100]
  |  order by: default.impala_tpcds_item.i_category ASC NULLS LAST, default.impala_tpcds_item.i_class ASC NULLS LAST, default.impala_tpcds_item.i_item_id ASC NULLS LAST, default.impala_tpcds_item.i_item_desc ASC NULLS LAST, divide(multiply(sum(default.impala_tpcds_web_sales.ws_ext_sales_price), 100), sum(sum(default.impala_tpcds_web_sales.ws_ext_sales_price))) ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=12 row-size=84B cardinality=0
  |  in pipelines: 09(GETNEXT), 07(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=11 row-size=84B cardinality=0
  |  in pipelines: 07(GETNEXT)
  |
  08:ANALYTIC
  |  functions: sum(sum(default.impala_tpcds_web_sales.ws_ext_sales_price))
  |  partition by: default.impala_tpcds_item.i_class
  |  window: ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=9,8 row-size=84B cardinality=0
  |  in pipelines: 07(GETNEXT)
  |
  07:SORT
  |  order by: default.impala_tpcds_item.i_class ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=9 row-size=68B cardinality=0
  |  in pipelines: 07(GETNEXT), 13(OPEN)
  |
  14:EXCHANGE [HASH(default.impala_tpcds_item.i_class)]
     mem-estimate=72.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=68B cardinality=0
     in pipelines: 13(GETNEXT)

F03:PLAN FRAGMENT [HASH(default.impala_tpcds_item.i_item_id,default.impala_tpcds_item.i_item_desc,default.impala_tpcds_item.i_current_price,default.impala_tpcds_item.i_class,default.impala_tpcds_item.i_category)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.07MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=14, HASH(default.impala_tpcds_item.i_class)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_web_sales.ws_ext_sales_price)
  |  group by: default.impala_tpcds_item.i_item_id, default.impala_tpcds_item.i_item_desc, default.impala_tpcds_item.i_current_price, default.impala_tpcds_item.i_class, default.impala_tpcds_item.i_category
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=6 row-size=68B cardinality=0
  |  in pipelines: 13(GETNEXT), 01(OPEN)
  |
  12:EXCHANGE [HASH(default.impala_tpcds_item.i_item_id,default.impala_tpcds_item.i_item_desc,default.impala_tpcds_item.i_current_price,default.impala_tpcds_item.i_class,default.impala_tpcds_item.i_category)]
     mem-estimate=72.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=68B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.96MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=12, HASH(default.impala_tpcds_item.i_item_id,default.impala_tpcds_item.i_item_desc,default.impala_tpcds_item.i_current_price,default.impala_tpcds_item.i_class,default.impala_tpcds_item.i_category)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_web_sales.ws_ext_sales_price)
  |  group by: default.impala_tpcds_item.i_item_id, default.impala_tpcds_item.i_item_desc, default.impala_tpcds_item.i_current_price, default.impala_tpcds_item.i_class, default.impala_tpcds_item.i_category
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=6 row-size=68B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=92B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--11:EXCHANGE [BROADCAST]
  |     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=60B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=32B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--10:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=16B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_item_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=16B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=10, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, casttotimestamp(default.impala_tpcds_date_dim.d_date) >= casttotimestamp(casttodate('1998-01-06')) AND casttotimestamp(default.impala_tpcds_date_dim.d_date) <= MILLISECONDS_ADD(casttotimestamp(casttodate('1998-01-06')), INTERVAL CAST(2592000000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=16B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=11, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL, default.impala_tpcds_item.i_category IN ('Electronics', 'Books', 'Women')
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_item.i_category IN ('Electronics', 'Books', 'Women')
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=60B cardinality=0
     in pipelines: 04(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

