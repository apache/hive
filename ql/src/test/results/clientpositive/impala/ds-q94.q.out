HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_customer_address
HMS CALL get_table_req FOR impala_tpcds_web_site
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_customer_address
HMS CALL get_foreign_keys FOR impala_tpcds_web_site
HMS CALL get_table_req FOR impala_tpcds_web_returns
HMS CALL get_foreign_keys FOR impala_tpcds_web_returns
PREHOOK: query: explain cbo physical select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   impala_tpcds_web_sales ws1
  ,impala_tpcds_date_dim
  ,impala_tpcds_customer_address
  ,impala_tpcds_web_site
where
    d_date between '1999-4-01' and 
           (cast('1999-4-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'NE'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from impala_tpcds_web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from impala_tpcds_web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_web_returns
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Input: default@impala_tpcds_web_site
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   impala_tpcds_web_sales ws1
  ,impala_tpcds_date_dim
  ,impala_tpcds_customer_address
  ,impala_tpcds_web_site
where
    d_date between '1999-4-01' and 
           (cast('1999-4-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'NE'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from impala_tpcds_web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from impala_tpcds_web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_web_returns
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Input: default@impala_tpcds_web_site
CBO PLAN:
ImpalaProjectPassthroughRel(order count=[$0], total shipping cost=[$1], total net profit=[$2])
  ImpalaSortRel(sort0=[$3], dir0=[ASC], fetch=[100])
    ImpalaProjectRel(order count=[$0], total shipping cost=[$1], total net profit=[$2], (tok_functiondi count (tok_table_or_col ws_order_number))=[$0])
      ImpalaAggregateRel(group=[{}], agg#0=[count(DISTINCT $4)], agg#1=[sum($5)], agg#2=[sum($6)])
        ImpalaJoinRel(condition=[=($4, $14)], joinType=[left])
          ImpalaJoinRel(condition=[AND(<>($3, $13), =($4, $14))], joinType=[semi])
            ImpalaJoinRel(condition=[=($2, $11)], joinType=[inner])
              ImpalaJoinRel(condition=[=($1, $9)], joinType=[inner])
                ImpalaJoinRel(condition=[=($0, $7)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ws_ship_date_sk=[$2], ws_ship_addr_sk=[$11], ws_web_site_sk=[$13], ws_warehouse_sk=[$15], ws_order_number=[$17], ws_ext_ship_cost=[$28], ws_net_profit=[$33])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($17), IS NOT NULL($13), IS NOT NULL($11), IS NOT NULL($2))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0], d_date=[$2])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), CAST(_UTF-16LE'1999-4-01':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):TIMESTAMP(9) NOT NULL, +(CAST(CAST(_UTF-16LE'1999-4-01':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), 5184000000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_state=[CAST(_UTF-16LE'NE':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):VARCHAR(2147483647) CHARACTER SET "UTF-16LE"])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[AND(=($8, _UTF-16LE'NE'), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(web_site_sk=[$0], web_company_name=[CAST(_UTF-16LE'pri':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):VARCHAR(2147483647) CHARACTER SET "UTF-16LE"])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_site]], condition=[AND(=($14, _UTF-16LE'pri'), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(ws_warehouse_sk=[$15], ws_order_number=[$17])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($17), IS NOT NULL($15))])
          ImpalaProjectPassthroughRel(literalTrue=[true], wr_order_number0=[$0])
            ImpalaAggregateRel(group=[{13}])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_returns]], condition=[IS NOT NULL($13)])

HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_customer_address
HMS CALL get_table_req FOR impala_tpcds_web_site
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_customer_address
HMS CALL get_foreign_keys FOR impala_tpcds_web_site
HMS CALL get_table_req FOR impala_tpcds_web_returns
HMS CALL get_foreign_keys FOR impala_tpcds_web_returns
PREHOOK: query: explain select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   impala_tpcds_web_sales ws1
  ,impala_tpcds_date_dim
  ,impala_tpcds_customer_address
  ,impala_tpcds_web_site
where
    d_date between '1999-4-01' and 
           (cast('1999-4-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'NE'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from impala_tpcds_web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from impala_tpcds_web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_web_returns
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Input: default@impala_tpcds_web_site
PREHOOK: Output: streaming
POSTHOOK: query: explain select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   impala_tpcds_web_sales ws1
  ,impala_tpcds_date_dim
  ,impala_tpcds_customer_address
  ,impala_tpcds_web_site
where
    d_date between '1999-4-01' and 
           (cast('1999-4-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'NE'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from impala_tpcds_web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from impala_tpcds_web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_web_returns
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Input: default@impala_tpcds_web_site
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F09:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: count(ws1.ws_order_number), sum(ws1.ws_ext_ship_cost), sum(ws1.ws_net_profit)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  15:TOP-N [LIMIT=100]
  |  order by: count(ws1.ws_order_number) ASC NULLS LAST
  |  mem-estimate=48B mem-reservation=0B thread-reservation=0
  |  tuple-ids=16 row-size=48B cardinality=1
  |  in pipelines: 15(GETNEXT), 26(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=15 row-size=48B cardinality=1
  |  in pipelines: 26(GETNEXT)
  |
  26:AGGREGATE [FINALIZE]
  |  output: count:merge(ws1.ws_order_number), sum:merge(ws1.ws_ext_ship_cost), sum:merge(ws1.ws_net_profit)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=14 row-size=40B cardinality=1
  |  in pipelines: 26(GETNEXT), 14(OPEN)
  |
  25:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=14 row-size=40B cardinality=1
     in pipelines: 14(GETNEXT)

F07:PLAN FRAGMENT [HASH(ws1.ws_order_number)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F09, EXCHANGE=25, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:AGGREGATE
  |  output: count(ws1.ws_order_number), sum:merge(ws1.ws_ext_ship_cost), sum:merge(ws1.ws_net_profit)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=14 row-size=40B cardinality=1
  |  in pipelines: 14(GETNEXT), 24(OPEN)
  |
  24:AGGREGATE
  |  output: sum:merge(ws1.ws_ext_ship_cost), sum:merge(ws1.ws_net_profit)
  |  group by: ws1.ws_order_number
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=40B cardinality=0
  |  in pipelines: 24(GETNEXT), 01(OPEN)
  |
  23:EXCHANGE [HASH(ws1.ws_order_number)]
     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=40B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=137.78MB mem-reservation=43.69MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=23, HASH(ws1.ws_order_number)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:AGGREGATE [STREAMING]
  |  output: sum(ws1.ws_ext_ship_cost), sum(ws1.ws_net_profit)
  |  group by: ws1.ws_order_number
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=40B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  12:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
  |  hash predicates: ws1.ws_order_number = wr1.wr_order_number
  |  fk/pk conjuncts: assumed fk/pk
  |  other predicates: isnottrue(if(TupleIsNull(12), NULL, TRUE) IS NOT NULL)
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6,12N row-size=88B cardinality=0
  |  in pipelines: 01(GETNEXT), 21(OPEN)
  |
  |--22:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=12 row-size=8B cardinality=0
  |     in pipelines: 21(GETNEXT)
  |
  09:HASH JOIN [LEFT SEMI JOIN, BROADCAST]
  |  hash predicates: ws1.ws_order_number = ws2.ws_order_number
  |  other join predicates: ws1.ws_warehouse_sk != ws2.ws_warehouse_sk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6 row-size=80B cardinality=0
  |  in pipelines: 01(GETNEXT), 08(OPEN)
  |
  |--19:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=12B cardinality=0
  |     in pipelines: 08(GETNEXT)
  |
  07:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws1.ws_web_site_sk = default.impala_tpcds_web_site.web_site_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6 row-size=80B cardinality=0
  |  in pipelines: 01(GETNEXT), 06(OPEN)
  |
  |--18:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=16B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws1.ws_ship_addr_sk = default.impala_tpcds_customer_address.ca_address_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=64B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--17:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=16B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws1.ws_ship_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=48B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--16:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=16B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_web_sales ws1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ws1.ws_order_number IS NOT NULL, ws1.ws_ship_addr_sk IS NOT NULL, ws1.ws_ship_date_sk IS NOT NULL, ws1.ws_web_site_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=32B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=16, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, casttotimestamp(default.impala_tpcds_date_dim.d_date) >= casttotimestamp('1999-4-01') AND casttotimestamp(default.impala_tpcds_date_dim.d_date) <= MILLISECONDS_ADD(casttotimestamp(casttodate('1999-4-01')), INTERVAL CAST(5184000000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=16B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=17, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address.ca_address_sk IS NOT NULL, default.impala_tpcds_customer_address.ca_state = 'NE'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_customer_address.ca_state = 'NE'
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=16B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=18, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:SCAN HDFS [default.impala_tpcds_web_site, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_site.web_site_sk IS NOT NULL, default.impala_tpcds_web_site.web_company_name = 'pri'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_web_site.web_company_name = 'pri'
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=16B cardinality=0
     in pipelines: 06(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=19, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:SCAN HDFS [default.impala_tpcds_web_sales ws2, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: ws2.ws_order_number IS NOT NULL, ws2.ws_warehouse_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=12B cardinality=0
     in pipelines: 08(GETNEXT)

F06:PLAN FRAGMENT [HASH(wr1.wr_order_number)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.02MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=22, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  21:AGGREGATE [FINALIZE]
  |  group by: wr1.wr_order_number
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=8B cardinality=0
  |  in pipelines: 21(GETNEXT), 10(OPEN)
  |
  20:EXCHANGE [HASH(wr1.wr_order_number)]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=8B cardinality=0
     in pipelines: 10(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=20, HASH(wr1.wr_order_number)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:AGGREGATE [STREAMING]
  |  group by: wr1.wr_order_number
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=8B cardinality=0
  |  in pipelines: 10(GETNEXT)
  |
  10:SCAN HDFS [default.impala_tpcds_web_returns wr1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: wr1.wr_order_number IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=8B cardinality=0
     in pipelines: 10(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

