HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_store
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_store
PREHOOK: query: explain cbo physical select  s_store_name, s_store_id,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from impala_tpcds_date_dim, impala_tpcds_store_sales, impala_tpcds_store
 where d_date_sk = ss_sold_date_sk and
       s_store_sk = ss_store_sk and
       s_gmt_offset = -6 and
       d_year = 2001 
 group by s_store_name, s_store_id
 order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical select  s_store_name, s_store_id,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from impala_tpcds_date_dim, impala_tpcds_store_sales, impala_tpcds_store
 where d_date_sk = ss_sold_date_sk and
       s_store_sk = ss_store_sk and
       s_gmt_offset = -6 and
       d_year = 2001 
 group by s_store_name, s_store_id
 order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$3], sort4=[$4], sort5=[$5], sort6=[$6], sort7=[$7], sort8=[$8], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], dir4=[ASC], dir5=[ASC], dir6=[ASC], dir7=[ASC], dir8=[ASC], fetch=[100])
  ImpalaAggregateRel(group=[{0, 1}], agg#0=[sum($2)], agg#1=[sum($3)], agg#2=[sum($4)], agg#3=[sum($5)], agg#4=[sum($6)], agg#5=[sum($7)], agg#6=[sum($8)])
    ImpalaProjectPassthroughRel($f0=[$5], $f1=[$4], $f2=[CASE($7, $1, null:DECIMAL(7, 2))], $f3=[CASE($8, $1, null:DECIMAL(7, 2))], $f4=[CASE($9, $1, null:DECIMAL(7, 2))], $f5=[CASE($10, $1, null:DECIMAL(7, 2))], $f6=[CASE($11, $1, null:DECIMAL(7, 2))], $f7=[CASE($12, $1, null:DECIMAL(7, 2))], $f8=[CASE($13, $1, null:DECIMAL(7, 2))])
      ImpalaJoinRel(condition=[=($6, $2)], joinType=[inner])
        ImpalaJoinRel(condition=[=($3, $0)], joinType=[inner])
          ImpalaProjectPassthroughRel(ss_store_sk=[$6], ss_sales_price=[$12], ss_sold_date_sk=[$22])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($6), IS NOT NULL($22))])
          ImpalaProjectPassthroughRel(s_store_sk=[$0], s_store_id=[$1], s_store_name=[$5])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[AND(=($27, CAST(-(6:TINYINT)):DECIMAL(3, 0) NOT NULL), IS NOT NULL($0))])
        ImpalaProjectPassthroughRel(d_date_sk=[$0], ==[=($14, _UTF-16LE'Sunday')], =2=[=($14, _UTF-16LE'Monday')], =3=[=($14, _UTF-16LE'Tuesday')], =4=[=($14, _UTF-16LE'Wednesday')], =5=[=($14, _UTF-16LE'Thursday')], =6=[=($14, _UTF-16LE'Friday')], =7=[=($14, _UTF-16LE'Saturday')])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 2001), IS NOT NULL($0))])

HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_store
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_store
PREHOOK: query: explain select  s_store_name, s_store_id,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from impala_tpcds_date_dim, impala_tpcds_store_sales, impala_tpcds_store
 where d_date_sk = ss_sold_date_sk and
       s_store_sk = ss_store_sk and
       s_gmt_offset = -6 and
       d_year = 2001 
 group by s_store_name, s_store_id
 order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain select  s_store_name, s_store_id,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from impala_tpcds_date_dim, impala_tpcds_store_sales, impala_tpcds_store
 where d_date_sk = ss_sold_date_sk and
       s_store_sk = ss_store_sk and
       s_gmt_offset = -6 and
       d_year = 2001 
 group by s_store_name, s_store_id
 order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F04:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=140.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpcds_store.s_store_name, default.impala_tpcds_store.s_store_id, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Sunday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Monday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Tuesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Wednesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Thursday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Friday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Saturday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  11:MERGING-EXCHANGE [UNPARTITIONED]
     order by: default.impala_tpcds_store.s_store_name ASC NULLS LAST, default.impala_tpcds_store.s_store_id ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Sunday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Monday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Tuesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Wednesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Thursday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Friday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Saturday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST
     limit: 100
     mem-estimate=140.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=136B cardinality=0
     in pipelines: 06(GETNEXT)

F03:PLAN FRAGMENT [HASH(default.impala_tpcds_store.s_store_name,default.impala_tpcds_store.s_store_id)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.14MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=11, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:TOP-N [LIMIT=100]
  |  order by: default.impala_tpcds_store.s_store_name ASC NULLS LAST, default.impala_tpcds_store.s_store_id ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Sunday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Monday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Tuesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Wednesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Thursday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Friday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST, sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Saturday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END) ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=6 row-size=136B cardinality=0
  |  in pipelines: 06(GETNEXT), 10(OPEN)
  |
  10:AGGREGATE [FINALIZE]
  |  output: sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Sunday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Monday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Tuesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Wednesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Thursday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Friday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Saturday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END)
  |  group by: default.impala_tpcds_store.s_store_name, default.impala_tpcds_store.s_store_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=136B cardinality=0
  |  in pipelines: 10(GETNEXT), 00(OPEN)
  |
  09:EXCHANGE [HASH(default.impala_tpcds_store.s_store_name,default.impala_tpcds_store.s_store_id)]
     mem-estimate=140.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=136B cardinality=0
     in pipelines: 00(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.93MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=09, HASH(default.impala_tpcds_store.s_store_name,default.impala_tpcds_store.s_store_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:AGGREGATE [STREAMING]
  |  output: sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Sunday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Monday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Tuesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Wednesday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Thursday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Friday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Saturday' THEN default.impala_tpcds_store_sales.ss_sales_price ELSE NULL END)
  |  group by: default.impala_tpcds_store.s_store_name, default.impala_tpcds_store.s_store_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=136B cardinality=0
  |  in pipelines: 00(GETNEXT)
  |
  04:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3 row-size=64B cardinality=0
  |  in pipelines: 00(GETNEXT), 03(OPEN)
  |
  |--08:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=20B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_store_sk = default.impala_tpcds_store.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1 row-size=44B cardinality=0
  |  in pipelines: 00(GETNEXT), 01(OPEN)
  |
  |--07:EXCHANGE [BROADCAST]
  |     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1 row-size=32B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  00:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns missing stats: ss_store_sk, ss_sales_price
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: []
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=12B cardinality=0
     in pipelines: 00(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=07, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store.s_store_sk IS NOT NULL, default.impala_tpcds_store.s_gmt_offset = casttodecimal(negative(CAST(6 AS TINYINT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_store.s_gmt_offset = casttodecimal(negative(CAST(6 AS TINYINT)))
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=32B cardinality=0
     in pipelines: 01(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=08, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_year = CAST(2001 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_year = CAST(2001 AS INT)
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=20B cardinality=0
     in pipelines: 03(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

