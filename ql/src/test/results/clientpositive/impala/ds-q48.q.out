HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_store
HMS CALL get_table_req FOR impala_tpcds_customer_demographics
HMS CALL get_table_req FOR impala_tpcds_customer_address
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_store
HMS CALL get_foreign_keys FOR impala_tpcds_customer_demographics
HMS CALL get_foreign_keys FOR impala_tpcds_customer_address
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
PREHOOK: query: explain cbo physical select sum (ss_quantity)
 from impala_tpcds_store_sales, impala_tpcds_store, impala_tpcds_customer_demographics, impala_tpcds_customer_address, impala_tpcds_date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 1998
 and  
 (
  (
   cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = 'Unknown'
   and 
   ss_sales_price between 100.00 and 150.00  
   )
 or
  (
  cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'W'
   and 
   cd_education_status = 'College'
   and 
   ss_sales_price between 50.00 and 100.00   
  )
 or 
 (
  cd_demo_sk = ss_cdemo_sk
  and 
   cd_marital_status = 'D'
   and 
   cd_education_status = 'Primary'
   and 
   ss_sales_price between 150.00 and 200.00  
 )
 )
 and
 (
  (
  ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('MI', 'GA', 'NH')
  and ss_net_profit between 0 and 2000  
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('TX', 'KY', 'SD')
  and ss_net_profit between 150 and 3000 
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('NY', 'OH', 'FL')
  and ss_net_profit between 50 and 25000 
  )
 )
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_customer_demographics
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical select sum (ss_quantity)
 from impala_tpcds_store_sales, impala_tpcds_store, impala_tpcds_customer_demographics, impala_tpcds_customer_address, impala_tpcds_date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 1998
 and  
 (
  (
   cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = 'Unknown'
   and 
   ss_sales_price between 100.00 and 150.00  
   )
 or
  (
  cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'W'
   and 
   cd_education_status = 'College'
   and 
   ss_sales_price between 50.00 and 100.00   
  )
 or 
 (
  cd_demo_sk = ss_cdemo_sk
  and 
   cd_marital_status = 'D'
   and 
   cd_education_status = 'Primary'
   and 
   ss_sales_price between 150.00 and 200.00  
 )
 )
 and
 (
  (
  ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('MI', 'GA', 'NH')
  and ss_net_profit between 0 and 2000  
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('TX', 'KY', 'SD')
  and ss_net_profit between 150 and 3000 
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('NY', 'OH', 'FL')
  and ss_net_profit between 50 and 25000 
  )
 )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_customer_demographics
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
CBO PLAN:
ImpalaAggregateRel(group=[{}], agg#0=[sum($4)])
  ImpalaJoinRel(condition=[AND(=($17, $0), OR(AND($18, $19, $8), AND($20, $21, $9), AND($22, $23, $10)))], joinType=[inner])
    ImpalaJoinRel(condition=[AND(=($1, $13), OR(AND($14, $5), AND($15, $6), AND($16, $7)))], joinType=[inner])
      ImpalaJoinRel(condition=[=($3, $12)], joinType=[inner])
        ImpalaJoinRel(condition=[=($11, $2)], joinType=[inner])
          ImpalaProjectPassthroughRel(ss_cdemo_sk=[$3], ss_addr_sk=[$5], ss_store_sk=[$6], ss_sold_date_sk=[$22], CAST=[CAST($9):BIGINT], BETWEEN=[BETWEEN(false, $21, 0:DECIMAL(3, 0), 2000:DECIMAL(5, 0))], BETWEEN6=[BETWEEN(false, $21, 150:DECIMAL(5, 0), 3000:DECIMAL(5, 0))], BETWEEN7=[BETWEEN(false, $21, 50:DECIMAL(3, 0), 25000:DECIMAL(5, 0))], BETWEEN8=[BETWEEN(false, $12, 100:DECIMAL(3, 0), 150:DECIMAL(3, 0))], BETWEEN9=[BETWEEN(false, $12, 50:DECIMAL(2, 0), 100:DECIMAL(3, 0))], BETWEEN10=[BETWEEN(false, $12, 150:DECIMAL(3, 0), 200:DECIMAL(3, 0))])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(OR(BETWEEN(false, $12, 100:DECIMAL(3, 0), 150:DECIMAL(3, 0)), BETWEEN(false, $12, 50:DECIMAL(2, 0), 100:DECIMAL(3, 0)), BETWEEN(false, $12, 150:DECIMAL(3, 0), 200:DECIMAL(3, 0))), OR(BETWEEN(false, $21, 0:DECIMAL(3, 0), 2000:DECIMAL(5, 0)), BETWEEN(false, $21, 150:DECIMAL(5, 0), 3000:DECIMAL(5, 0)), BETWEEN(false, $21, 50:DECIMAL(3, 0), 25000:DECIMAL(5, 0))), IS NOT NULL($22), IS NOT NULL($5), IS NOT NULL($3), IS NOT NULL($6))])
          ImpalaProjectPassthroughRel(s_store_sk=[$0])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[IS NOT NULL($0)])
        ImpalaProjectPassthroughRel(d_date_sk=[$0])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 1998), IS NOT NULL($0))])
      ImpalaProjectPassthroughRel(ca_address_sk=[$0], IN=[IN($8, _UTF-16LE'MI':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'GA':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'NH':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")], IN2=[IN($8, _UTF-16LE'TX':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'KY':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'SD':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")], IN3=[IN($8, _UTF-16LE'NY':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'OH':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'FL':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")])
        ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[AND(OR(IN($8, _UTF-16LE'MI':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'GA':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'NH':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IN($8, _UTF-16LE'TX':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'KY':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'SD':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IN($8, _UTF-16LE'NY':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'OH':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'FL':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")), =($10, _UTF-16LE'United States'), IS NOT NULL($0))])
    ImpalaProjectPassthroughRel(cd_demo_sk=[$0], ==[=($2, _UTF-16LE'M')], =2=[=($3, _UTF-16LE'Unknown')], =3=[=($2, _UTF-16LE'W')], =4=[=($3, _UTF-16LE'College')], =5=[=($2, _UTF-16LE'D')], =6=[=($3, _UTF-16LE'Primary')])
      ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_demographics]], condition=[AND(IN($2, _UTF-16LE'M':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'W':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'D':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IN($3, _UTF-16LE'Unknown':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'College':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Primary':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])

HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_store
HMS CALL get_table_req FOR impala_tpcds_customer_demographics
HMS CALL get_table_req FOR impala_tpcds_customer_address
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_store
HMS CALL get_foreign_keys FOR impala_tpcds_customer_demographics
HMS CALL get_foreign_keys FOR impala_tpcds_customer_address
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
PREHOOK: query: explain select sum (ss_quantity)
 from impala_tpcds_store_sales, impala_tpcds_store, impala_tpcds_customer_demographics, impala_tpcds_customer_address, impala_tpcds_date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 1998
 and  
 (
  (
   cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = 'Unknown'
   and 
   ss_sales_price between 100.00 and 150.00  
   )
 or
  (
  cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'W'
   and 
   cd_education_status = 'College'
   and 
   ss_sales_price between 50.00 and 100.00   
  )
 or 
 (
  cd_demo_sk = ss_cdemo_sk
  and 
   cd_marital_status = 'D'
   and 
   cd_education_status = 'Primary'
   and 
   ss_sales_price between 150.00 and 200.00  
 )
 )
 and
 (
  (
  ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('MI', 'GA', 'NH')
  and ss_net_profit between 0 and 2000  
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('TX', 'KY', 'SD')
  and ss_net_profit between 150 and 3000 
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('NY', 'OH', 'FL')
  and ss_net_profit between 50 and 25000 
  )
 )
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_customer_demographics
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain select sum (ss_quantity)
 from impala_tpcds_store_sales, impala_tpcds_store, impala_tpcds_customer_demographics, impala_tpcds_customer_address, impala_tpcds_date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 1998
 and  
 (
  (
   cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = 'Unknown'
   and 
   ss_sales_price between 100.00 and 150.00  
   )
 or
  (
  cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'W'
   and 
   cd_education_status = 'College'
   and 
   ss_sales_price between 50.00 and 100.00   
  )
 or 
 (
  cd_demo_sk = ss_cdemo_sk
  and 
   cd_marital_status = 'D'
   and 
   cd_education_status = 'Primary'
   and 
   ss_sales_price between 150.00 and 200.00  
 )
 )
 and
 (
  (
  ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('MI', 'GA', 'NH')
  and ss_net_profit between 0 and 2000  
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('TX', 'KY', 'SD')
  and ss_net_profit between 150 and 3000 
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('NY', 'OH', 'FL')
  and ss_net_profit between 50 and 25000 
  )
 )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_customer_demographics
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F05:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: sum(casttobigint(default.impala_tpcds_store_sales.ss_quantity))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  15:AGGREGATE [FINALIZE]
  |  output: sum:merge(casttobigint(default.impala_tpcds_store_sales.ss_quantity))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=9 row-size=8B cardinality=1
  |  in pipelines: 15(GETNEXT), 09(OPEN)
  |
  14:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=9 row-size=8B cardinality=1
     in pipelines: 09(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=17.75MB mem-reservation=7.75MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=14, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:AGGREGATE
  |  output: sum(casttobigint(default.impala_tpcds_store_sales.ss_quantity))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=9 row-size=8B cardinality=1
  |  in pipelines: 09(GETNEXT), 00(OPEN)
  |
  08:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_cdemo_sk = default.impala_tpcds_customer_demographics.cd_demo_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: default.impala_tpcds_customer_demographics.cd_marital_status = 'M' AND default.impala_tpcds_customer_demographics.cd_education_status = 'Unknown' AND default.impala_tpcds_store_sales.ss_sales_price >= CAST(100 AS DECIMAL(3,0)) AND default.impala_tpcds_store_sales.ss_sales_price <= CAST(150 AS DECIMAL(3,0)) OR default.impala_tpcds_customer_demographics.cd_marital_status = 'W' AND default.impala_tpcds_customer_demographics.cd_education_status = 'College' AND default.impala_tpcds_store_sales.ss_sales_price >= CAST(50 AS DECIMAL(2,0)) AND default.impala_tpcds_store_sales.ss_sales_price <= CAST(100 AS DECIMAL(3,0)) OR default.impala_tpcds_customer_demographics.cd_marital_status = 'D' AND default.impala_tpcds_customer_demographics.cd_education_status = 'Primary' AND default.impala_tpcds_store_sales.ss_sales_price >= CAST(150 AS DECIMAL(3,0)) AND default.impala_tpcds_store_sales.ss_sales_price <= CAST(200 AS DECIMAL(3,0))
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3,5,7 row-size=96B cardinality=0
  |  in pipelines: 00(GETNEXT), 07(OPEN)
  |
  |--13:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=7 row-size=28B cardinality=0
  |     in pipelines: 07(GETNEXT)
  |
  06:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_addr_sk = default.impala_tpcds_customer_address.ca_address_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: default.impala_tpcds_customer_address.ca_state IN ('MI', 'GA', 'NH') AND default.impala_tpcds_store_sales.ss_net_profit >= CAST(0 AS DECIMAL(3,0)) AND default.impala_tpcds_store_sales.ss_net_profit <= CAST(2000 AS DECIMAL(5,0)) OR default.impala_tpcds_customer_address.ca_state IN ('TX', 'KY', 'SD') AND default.impala_tpcds_store_sales.ss_net_profit >= CAST(150 AS DECIMAL(5,0)) AND default.impala_tpcds_store_sales.ss_net_profit <= CAST(3000 AS DECIMAL(5,0)) OR default.impala_tpcds_customer_address.ca_state IN ('NY', 'OH', 'FL') AND default.impala_tpcds_store_sales.ss_net_profit >= CAST(50 AS DECIMAL(3,0)) AND default.impala_tpcds_store_sales.ss_net_profit <= CAST(25000 AS DECIMAL(5,0))
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3,5 row-size=68B cardinality=0
  |  in pipelines: 00(GETNEXT), 05(OPEN)
  |
  |--12:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=5 row-size=28B cardinality=0
  |     in pipelines: 05(GETNEXT)
  |
  04:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3 row-size=40B cardinality=0
  |  in pipelines: 00(GETNEXT), 03(OPEN)
  |
  |--11:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=8B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_store_sk = default.impala_tpcds_store.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1 row-size=32B cardinality=0
  |  in pipelines: 00(GETNEXT), 01(OPEN)
  |
  |--10:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1 row-size=4B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  00:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_addr_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_cdemo_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_store_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_net_profit >= CAST(0 AS DECIMAL(3,0)) AND default.impala_tpcds_store_sales.ss_net_profit <= CAST(2000 AS DECIMAL(5,0)) OR default.impala_tpcds_store_sales.ss_net_profit >= CAST(150 AS DECIMAL(5,0)) AND default.impala_tpcds_store_sales.ss_net_profit <= CAST(3000 AS DECIMAL(5,0)) OR default.impala_tpcds_store_sales.ss_net_profit >= CAST(50 AS DECIMAL(3,0)) AND default.impala_tpcds_store_sales.ss_net_profit <= CAST(25000 AS DECIMAL(5,0)), default.impala_tpcds_store_sales.ss_sales_price >= CAST(100 AS DECIMAL(3,0)) AND default.impala_tpcds_store_sales.ss_sales_price <= CAST(150 AS DECIMAL(3,0)) OR default.impala_tpcds_store_sales.ss_sales_price >= CAST(50 AS DECIMAL(2,0)) AND default.impala_tpcds_store_sales.ss_sales_price <= CAST(100 AS DECIMAL(3,0)) OR default.impala_tpcds_store_sales.ss_sales_price >= CAST(150 AS DECIMAL(3,0)) AND default.impala_tpcds_store_sales.ss_sales_price <= CAST(200 AS DECIMAL(3,0))
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns missing stats: ss_cdemo_sk, ss_addr_sk, ss_store_sk, ss_quantity, ss_sales_price, ss_net_profit
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: []
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=28B cardinality=0
     in pipelines: 00(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=10, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store.s_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=4B cardinality=0
     in pipelines: 01(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=11, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_year = CAST(1998 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_year = CAST(1998 AS INT)
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=8B cardinality=0
     in pipelines: 03(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=12, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address.ca_address_sk IS NOT NULL, default.impala_tpcds_customer_address.ca_country = 'United States', default.impala_tpcds_customer_address.ca_state IN ('MI', 'GA', 'NH') OR default.impala_tpcds_customer_address.ca_state IN ('TX', 'KY', 'SD') OR default.impala_tpcds_customer_address.ca_state IN ('NY', 'OH', 'FL')
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_customer_address.ca_country = 'United States'
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=28B cardinality=0
     in pipelines: 05(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=13, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:SCAN HDFS [default.impala_tpcds_customer_demographics, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_demographics.cd_demo_sk IS NOT NULL, default.impala_tpcds_customer_demographics.cd_education_status IN ('Unknown', 'College', 'Primary'), default.impala_tpcds_customer_demographics.cd_marital_status IN ('M', 'W', 'D')
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_customer_demographics.cd_education_status IN ('Unknown', 'College', 'Primary'), default.impala_tpcds_customer_demographics.cd_marital_status IN ('M', 'W', 'D')
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=28B cardinality=0
     in pipelines: 07(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

