PREHOOK: query: explain cbo physical with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total
       ,'c' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_catalog_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = cs_bill_customer_sk
   and cs_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select  
                  t_s_secyear.customer_id
                 ,t_s_secyear.customer_first_name
                 ,t_s_secyear.customer_last_name
                 ,t_s_secyear.customer_birth_country
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_c_firstyear
     ,year_total t_c_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
   and t_s_firstyear.customer_id = t_c_secyear.customer_id
   and t_s_firstyear.customer_id = t_c_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_secyear.customer_id
   and t_s_firstyear.sale_type = 's'
   and t_c_firstyear.sale_type = 'c'
   and t_w_firstyear.sale_type = 'w'
   and t_s_secyear.sale_type = 's'
   and t_c_secyear.sale_type = 'c'
   and t_w_secyear.sale_type = 'w'
   and t_s_firstyear.dyear =  1999
   and t_s_secyear.dyear = 1999+1
   and t_c_firstyear.dyear =  1999
   and t_c_secyear.dyear =  1999+1
   and t_w_firstyear.dyear = 1999
   and t_w_secyear.dyear = 1999+1
   and t_s_firstyear.year_total > 0
   and t_c_firstyear.year_total > 0
   and t_w_firstyear.year_total > 0
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
 order by t_s_secyear.customer_id
         ,t_s_secyear.customer_first_name
         ,t_s_secyear.customer_last_name
         ,t_s_secyear.customer_birth_country
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total
       ,'c' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_catalog_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = cs_bill_customer_sk
   and cs_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select  
                  t_s_secyear.customer_id
                 ,t_s_secyear.customer_first_name
                 ,t_s_secyear.customer_last_name
                 ,t_s_secyear.customer_birth_country
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_c_firstyear
     ,year_total t_c_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
   and t_s_firstyear.customer_id = t_c_secyear.customer_id
   and t_s_firstyear.customer_id = t_c_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_secyear.customer_id
   and t_s_firstyear.sale_type = 's'
   and t_c_firstyear.sale_type = 'c'
   and t_w_firstyear.sale_type = 'w'
   and t_s_secyear.sale_type = 's'
   and t_c_secyear.sale_type = 'c'
   and t_w_secyear.sale_type = 'w'
   and t_s_firstyear.dyear =  1999
   and t_s_secyear.dyear = 1999+1
   and t_c_firstyear.dyear =  1999
   and t_c_secyear.dyear =  1999+1
   and t_w_firstyear.dyear = 1999
   and t_w_secyear.dyear = 1999+1
   and t_s_firstyear.year_total > 0
   and t_c_firstyear.year_total > 0
   and t_w_firstyear.year_total > 0
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
 order by t_s_secyear.customer_id
         ,t_s_secyear.customer_first_name
         ,t_s_secyear.customer_last_name
         ,t_s_secyear.customer_birth_country
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$3], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
  ImpalaProjectRel(customer_id=[$0], customer_first_name=[$1], customer_last_name=[$2], customer_birth_country=[$3])
    ImpalaJoinRel(condition=[AND(=($5, $13), >(/($10, $8), /($14, $12)))], joinType=[inner])
      ImpalaJoinRel(condition=[=($5, $11)], joinType=[inner])
        ImpalaJoinRel(condition=[AND(=($5, $9), >(/($10, $8), /($4, $6)))], joinType=[inner])
          ImpalaJoinRel(condition=[=($5, $7)], joinType=[inner])
            ImpalaJoinRel(condition=[=($0, $5)], joinType=[inner])
              ImpalaProjectPassthroughRel($f0=[$0], $f1=[$1], $f2=[$2], $f4=[$4], $f8=[$7])
                ImpalaAggregateRel(group=[{1, 2, 3, 4, 5, 6, 7}], agg#0=[sum($10)])
                  ImpalaJoinRel(condition=[=($0, $8)], joinType=[inner])
                    ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9], c_preferred_cust_flag=[$10], c_birth_country=[$14], c_login=[$15], c_email_address=[$16])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                    ImpalaJoinRel(condition=[=($1, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_sold_date_sk=[$22], /=[/(+(-(-($16, $15), $13), $14), 2:DECIMAL(3, 0))])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($2))])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, +(1999, 1)), IS NOT NULL($0))])
              ImpalaProjectRel($f0=[$0], $f8=[$7], condition=[>($1, 0)])
                ImpalaAggregateRel(group=[{1, 2, 3, 4, 5, 6, 7}], agg#0=[sum($10)])
                  ImpalaJoinRel(condition=[=($0, $8)], joinType=[inner])
                    ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9], c_preferred_cust_flag=[$10], c_birth_country=[$14], c_login=[$15], c_email_address=[$16])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                    ImpalaJoinRel(condition=[=($1, $3)], joinType=[inner])
                      ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_sold_date_sk=[$22], /=[/(+(-(-($16, $15), $13), $14), 2:DECIMAL(3, 0))])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($2))])
                      ImpalaProjectPassthroughRel(d_date_sk=[$0])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 1999), IS NOT NULL($0))])
            ImpalaProjectRel($f0=[$0], $f8=[$7], condition=[>($1, 0)])
              ImpalaAggregateRel(group=[{1, 2, 3, 4, 5, 6, 7}], agg#0=[sum($10)])
                ImpalaJoinRel(condition=[=($0, $9)], joinType=[inner])
                  ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9], c_preferred_cust_flag=[$10], c_birth_country=[$14], c_login=[$15], c_email_address=[$16])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                  ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                    ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$3], /=[/(+(-(-($25, $24), $22), $23), 2:DECIMAL(3, 0))])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
                    ImpalaProjectPassthroughRel(d_date_sk=[$0])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 1999), IS NOT NULL($0))])
          ImpalaProjectPassthroughRel($f0=[$0], $f8=[$7])
            ImpalaAggregateRel(group=[{1, 2, 3, 4, 5, 6, 7}], agg#0=[sum($10)])
              ImpalaJoinRel(condition=[=($0, $9)], joinType=[inner])
                ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9], c_preferred_cust_flag=[$10], c_birth_country=[$14], c_login=[$15], c_email_address=[$16])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                  ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$3], /=[/(+(-(-($25, $24), $22), $23), 2:DECIMAL(3, 0))])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, +(1999, 1)), IS NOT NULL($0))])
        ImpalaProjectRel($f0=[$0], $f8=[$7], condition=[>($1, 0)])
          ImpalaAggregateRel(group=[{1, 2, 3, 4, 5, 6, 7}], agg#0=[sum($10)])
            ImpalaJoinRel(condition=[=($0, $9)], joinType=[inner])
              ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9], c_preferred_cust_flag=[$10], c_birth_country=[$14], c_login=[$15], c_email_address=[$16])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
              ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], /=[/(+(-(-($25, $24), $22), $23), 2:DECIMAL(3, 0))])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($4))])
                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 1999), IS NOT NULL($0))])
      ImpalaProjectPassthroughRel($f0=[$0], $f8=[$7])
        ImpalaAggregateRel(group=[{1, 2, 3, 4, 5, 6, 7}], agg#0=[sum($10)])
          ImpalaJoinRel(condition=[=($0, $9)], joinType=[inner])
            ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9], c_preferred_cust_flag=[$10], c_birth_country=[$14], c_login=[$15], c_email_address=[$16])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
            ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
              ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], /=[/(+(-(-($25, $24), $22), $23), 2:DECIMAL(3, 0))])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($4))])
              ImpalaProjectPassthroughRel(d_date_sk=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, +(1999, 1)), IS NOT NULL($0))])

PREHOOK: query: explain with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total
       ,'c' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_catalog_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = cs_bill_customer_sk
   and cs_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select  
                  t_s_secyear.customer_id
                 ,t_s_secyear.customer_first_name
                 ,t_s_secyear.customer_last_name
                 ,t_s_secyear.customer_birth_country
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_c_firstyear
     ,year_total t_c_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
   and t_s_firstyear.customer_id = t_c_secyear.customer_id
   and t_s_firstyear.customer_id = t_c_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_secyear.customer_id
   and t_s_firstyear.sale_type = 's'
   and t_c_firstyear.sale_type = 'c'
   and t_w_firstyear.sale_type = 'w'
   and t_s_secyear.sale_type = 's'
   and t_c_secyear.sale_type = 'c'
   and t_w_secyear.sale_type = 'w'
   and t_s_firstyear.dyear =  1999
   and t_s_secyear.dyear = 1999+1
   and t_c_firstyear.dyear =  1999
   and t_c_secyear.dyear =  1999+1
   and t_w_firstyear.dyear = 1999
   and t_w_secyear.dyear = 1999+1
   and t_s_firstyear.year_total > 0
   and t_c_firstyear.year_total > 0
   and t_w_firstyear.year_total > 0
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
 order by t_s_secyear.customer_id
         ,t_s_secyear.customer_first_name
         ,t_s_secyear.customer_last_name
         ,t_s_secyear.customer_birth_country
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total
       ,'c' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_catalog_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = cs_bill_customer_sk
   and cs_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select  
                  t_s_secyear.customer_id
                 ,t_s_secyear.customer_first_name
                 ,t_s_secyear.customer_last_name
                 ,t_s_secyear.customer_birth_country
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_c_firstyear
     ,year_total t_c_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
   and t_s_firstyear.customer_id = t_c_secyear.customer_id
   and t_s_firstyear.customer_id = t_c_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_secyear.customer_id
   and t_s_firstyear.sale_type = 's'
   and t_c_firstyear.sale_type = 'c'
   and t_w_firstyear.sale_type = 'w'
   and t_s_secyear.sale_type = 's'
   and t_c_secyear.sale_type = 'c'
   and t_w_secyear.sale_type = 'w'
   and t_s_firstyear.dyear =  1999
   and t_s_secyear.dyear = 1999+1
   and t_c_firstyear.dyear =  1999
   and t_c_secyear.dyear =  1999+1
   and t_w_firstyear.dyear = 1999
   and t_w_secyear.dyear = 1999+1
   and t_s_firstyear.year_total > 0
   and t_c_firstyear.year_total > 0
   and t_w_firstyear.year_total > 0
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
 order by t_s_secyear.customer_id
         ,t_s_secyear.customer_first_name
         ,t_s_secyear.customer_last_name
         ,t_s_secyear.customer_birth_country
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F28:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=52.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpcds_customer.c_customer_id, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name, default.impala_tpcds_customer.c_birth_country
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  78:MERGING-EXCHANGE [UNPARTITIONED]
     order by: default.impala_tpcds_customer.c_customer_id ASC NULLS LAST, default.impala_tpcds_customer.c_first_name ASC NULLS LAST, default.impala_tpcds_customer.c_last_name ASC NULLS LAST, default.impala_tpcds_customer.c_birth_country ASC NULLS LAST
     limit: 100
     mem-estimate=52.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=44 row-size=48B cardinality=0
     in pipelines: 48(GETNEXT)

F27:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.09MB mem-reservation=43.69MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F28, EXCHANGE=78, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  48:TOP-N [LIMIT=100]
  |  order by: default.impala_tpcds_customer.c_customer_id ASC NULLS LAST, default.impala_tpcds_customer.c_first_name ASC NULLS LAST, default.impala_tpcds_customer.c_last_name ASC NULLS LAST, default.impala_tpcds_customer.c_birth_country ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=44 row-size=48B cardinality=0
  |  in pipelines: 48(GETNEXT), 52(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=43 row-size=48B cardinality=0
  |  in pipelines: 52(GETNEXT)
  |
  47:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_0.c_customer_id = default.impala_tpcds_customer_4.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: divide(_impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_catalog_sales_0.cs_ext_list_price, default.impala_tpcds_catalog_sales_0.cs_ext_wholesale_cost), default.impala_tpcds_catalog_sales_0.cs_ext_discount_amt), default.impala_tpcds_catalog_sales_0.cs_ext_sales_price), 2)), _impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_catalog_sales.cs_ext_list_price, default.impala_tpcds_catalog_sales.cs_ext_wholesale_cost), default.impala_tpcds_catalog_sales.cs_ext_discount_amt), default.impala_tpcds_catalog_sales.cs_ext_sales_price), 2))) > divide(_impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_web_sales_0.ws_ext_list_price, default.impala_tpcds_web_sales_0.ws_ext_wholesale_cost), default.impala_tpcds_web_sales_0.ws_ext_discount_amt), default.impala_tpcds_web_sales_0.ws_ext_sales_price), 2)), _impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_web_sales.ws_ext_list_price, default.impala_tpcds_web_sales.ws_ext_wholesale_cost), default.impala_tpcds_web_sales.ws_ext_discount_amt), default.impala_tpcds_web_sales.ws_ext_sales_price), 2)))
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,12,20,27,35,42 row-size=384B cardinality=0
  |  in pipelines: 52(GETNEXT), 76(OPEN)
  |
  |--77:EXCHANGE [BROADCAST]
  |     mem-estimate=104.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=42 row-size=100B cardinality=0
  |     in pipelines: 76(GETNEXT)
  |
  40:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_0.c_customer_id = default.impala_tpcds_customer_3.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,12,20,27,35 row-size=284B cardinality=0
  |  in pipelines: 52(GETNEXT), 71(OPEN)
  |
  |--72:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=35 row-size=28B cardinality=0
  |     in pipelines: 71(GETNEXT)
  |
  31:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_0.c_customer_id = default.impala_tpcds_customer_2.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: divide(_impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_catalog_sales_0.cs_ext_list_price, default.impala_tpcds_catalog_sales_0.cs_ext_wholesale_cost), default.impala_tpcds_catalog_sales_0.cs_ext_discount_amt), default.impala_tpcds_catalog_sales_0.cs_ext_sales_price), 2)), _impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_catalog_sales.cs_ext_list_price, default.impala_tpcds_catalog_sales.cs_ext_wholesale_cost), default.impala_tpcds_catalog_sales.cs_ext_discount_amt), default.impala_tpcds_catalog_sales.cs_ext_sales_price), 2))) > divide(_impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_store_sales.ss_ext_list_price, default.impala_tpcds_store_sales.ss_ext_wholesale_cost), default.impala_tpcds_store_sales.ss_ext_discount_amt), default.impala_tpcds_store_sales.ss_ext_sales_price), 2)), _impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_store_sales_0.ss_ext_list_price, default.impala_tpcds_store_sales_0.ss_ext_wholesale_cost), default.impala_tpcds_store_sales_0.ss_ext_discount_amt), default.impala_tpcds_store_sales_0.ss_ext_sales_price), 2)))
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,12,20,27 row-size=256B cardinality=0
  |  in pipelines: 52(GETNEXT), 66(OPEN)
  |
  |--67:EXCHANGE [BROADCAST]
  |     mem-estimate=104.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=27 row-size=100B cardinality=0
  |     in pipelines: 66(GETNEXT)
  |
  24:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_0.c_customer_id = default.impala_tpcds_customer_1.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,12,20 row-size=156B cardinality=0
  |  in pipelines: 52(GETNEXT), 61(OPEN)
  |
  |--62:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=20 row-size=28B cardinality=0
  |     in pipelines: 61(GETNEXT)
  |
  15:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer.c_customer_id = default.impala_tpcds_customer_0.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,12 row-size=128B cardinality=0
  |  in pipelines: 52(GETNEXT), 56(OPEN)
  |
  |--57:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=12 row-size=28B cardinality=0
  |     in pipelines: 56(GETNEXT)
  |
  52:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(divide(add(subtract(subtract(default.impala_tpcds_store_sales.ss_ext_list_price, default.impala_tpcds_store_sales.ss_ext_wholesale_cost), default.impala_tpcds_store_sales.ss_ext_discount_amt), default.impala_tpcds_store_sales.ss_ext_sales_price), 2))
  |  group by: default.impala_tpcds_customer.c_customer_id, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name, default.impala_tpcds_customer.c_preferred_cust_flag, default.impala_tpcds_customer.c_birth_country, default.impala_tpcds_customer.c_login, default.impala_tpcds_customer.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=100B cardinality=0
  |  in pipelines: 52(GETNEXT), 01(OPEN)
  |
  51:EXCHANGE [HASH(default.impala_tpcds_customer.c_customer_id,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name,default.impala_tpcds_customer.c_preferred_cust_flag,default.impala_tpcds_customer.c_birth_country,default.impala_tpcds_customer.c_login,default.impala_tpcds_customer.c_email_address)]
     mem-estimate=104.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=100B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.98MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F27, EXCHANGE=51, HASH(default.impala_tpcds_customer.c_customer_id,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name,default.impala_tpcds_customer.c_preferred_cust_flag,default.impala_tpcds_customer.c_birth_country,default.impala_tpcds_customer.c_login,default.impala_tpcds_customer.c_email_address)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE [STREAMING]
  |  output: sum(divide(add(subtract(subtract(default.impala_tpcds_store_sales.ss_ext_list_price, default.impala_tpcds_store_sales.ss_ext_wholesale_cost), default.impala_tpcds_store_sales.ss_ext_discount_amt), default.impala_tpcds_store_sales.ss_ext_sales_price), CAST(2 AS DECIMAL(3,0))))
  |  group by: default.impala_tpcds_customer.c_customer_id, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name, default.impala_tpcds_customer.c_preferred_cust_flag, default.impala_tpcds_customer.c_birth_country, default.impala_tpcds_customer.c_login, default.impala_tpcds_customer.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=100B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer.c_customer_sk = default.impala_tpcds_store_sales.ss_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,3 row-size=120B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--50:EXCHANGE [BROADCAST]
  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2,3 row-size=32B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer.c_customer_id IS NOT NULL, default.impala_tpcds_customer.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=88B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=50, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=2,3 row-size=32B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(OPEN)
  |
  |--49:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=8B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_customer_sk, ss_ext_discount_amt, ss_ext_sales_price, ss_ext_wholesale_cost, ss_ext_list_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=24B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F01, EXCHANGE=49, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_year = add(CAST(1999 AS INT), CAST(1 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_year = add(CAST(1999 AS INT), CAST(1 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=8B cardinality=0
     in pipelines: 03(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.10MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F27, EXCHANGE=57, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:SELECT
  |  predicates: _impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_store_sales_0.ss_ext_list_price, default.impala_tpcds_store_sales_0.ss_ext_wholesale_cost), default.impala_tpcds_store_sales_0.ss_ext_discount_amt), default.impala_tpcds_store_sales_0.ss_ext_sales_price), 2)) > CAST(0 AS DECIMAL(38,6))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=12 row-size=28B cardinality=0
  |  in pipelines: 56(GETNEXT)
  |
  07:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=12 row-size=28B cardinality=0
  |  in pipelines: 56(GETNEXT)
  |
  56:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(divide(add(subtract(subtract(default.impala_tpcds_store_sales_0.ss_ext_list_price, default.impala_tpcds_store_sales_0.ss_ext_wholesale_cost), default.impala_tpcds_store_sales_0.ss_ext_discount_amt), default.impala_tpcds_store_sales_0.ss_ext_sales_price), 2))
  |  group by: default.impala_tpcds_customer_0.c_customer_id, default.impala_tpcds_customer_0.c_first_name, default.impala_tpcds_customer_0.c_last_name, default.impala_tpcds_customer_0.c_preferred_cust_flag, default.impala_tpcds_customer_0.c_birth_country, default.impala_tpcds_customer_0.c_login, default.impala_tpcds_customer_0.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=100B cardinality=0
  |  in pipelines: 56(GETNEXT), 08(OPEN)
  |
  55:EXCHANGE [HASH(default.impala_tpcds_customer_0.c_customer_id,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name,default.impala_tpcds_customer_0.c_preferred_cust_flag,default.impala_tpcds_customer_0.c_birth_country,default.impala_tpcds_customer_0.c_login,default.impala_tpcds_customer_0.c_email_address)]
     mem-estimate=104.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=100B cardinality=0
     in pipelines: 08(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.98MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=55, HASH(default.impala_tpcds_customer_0.c_customer_id,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name,default.impala_tpcds_customer_0.c_preferred_cust_flag,default.impala_tpcds_customer_0.c_birth_country,default.impala_tpcds_customer_0.c_login,default.impala_tpcds_customer_0.c_email_address)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:AGGREGATE [STREAMING]
  |  output: sum(divide(add(subtract(subtract(default.impala_tpcds_store_sales_0.ss_ext_list_price, default.impala_tpcds_store_sales_0.ss_ext_wholesale_cost), default.impala_tpcds_store_sales_0.ss_ext_discount_amt), default.impala_tpcds_store_sales_0.ss_ext_sales_price), CAST(2 AS DECIMAL(3,0))))
  |  group by: default.impala_tpcds_customer_0.c_customer_id, default.impala_tpcds_customer_0.c_first_name, default.impala_tpcds_customer_0.c_last_name, default.impala_tpcds_customer_0.c_preferred_cust_flag, default.impala_tpcds_customer_0.c_birth_country, default.impala_tpcds_customer_0.c_login, default.impala_tpcds_customer_0.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=100B cardinality=0
  |  in pipelines: 08(GETNEXT)
  |
  12:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_0.c_customer_sk = default.impala_tpcds_store_sales_0.ss_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=6,8,9 row-size=120B cardinality=0
  |  in pipelines: 08(GETNEXT), 09(OPEN)
  |
  |--54:EXCHANGE [BROADCAST]
  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8,9 row-size=32B cardinality=0
  |     in pipelines: 09(GETNEXT)
  |
  08:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_0.c_customer_id IS NOT NULL, default.impala_tpcds_customer_0.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=88B cardinality=0
     in pipelines: 08(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=54, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk = default.impala_tpcds_date_dim_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=8,9 row-size=32B cardinality=0
  |  in pipelines: 09(GETNEXT), 10(OPEN)
  |
  |--53:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=9 row-size=8B cardinality=0
  |     in pipelines: 10(GETNEXT)
  |
  09:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_0.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_customer_sk, ss_ext_discount_amt, ss_ext_sales_price, ss_ext_wholesale_cost, ss_ext_list_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=24B cardinality=0
     in pipelines: 09(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=53, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_0.d_year = CAST(1999 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_0.d_year = CAST(1999 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=9 row-size=8B cardinality=0
     in pipelines: 10(GETNEXT)

F13:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.10MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F27, EXCHANGE=62, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  23:SELECT
  |  predicates: _impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_catalog_sales.cs_ext_list_price, default.impala_tpcds_catalog_sales.cs_ext_wholesale_cost), default.impala_tpcds_catalog_sales.cs_ext_discount_amt), default.impala_tpcds_catalog_sales.cs_ext_sales_price), 2)) > CAST(0 AS DECIMAL(38,6))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=20 row-size=28B cardinality=0
  |  in pipelines: 61(GETNEXT)
  |
  16:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=20 row-size=28B cardinality=0
  |  in pipelines: 61(GETNEXT)
  |
  61:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(divide(add(subtract(subtract(default.impala_tpcds_catalog_sales.cs_ext_list_price, default.impala_tpcds_catalog_sales.cs_ext_wholesale_cost), default.impala_tpcds_catalog_sales.cs_ext_discount_amt), default.impala_tpcds_catalog_sales.cs_ext_sales_price), 2))
  |  group by: default.impala_tpcds_customer_1.c_customer_id, default.impala_tpcds_customer_1.c_first_name, default.impala_tpcds_customer_1.c_last_name, default.impala_tpcds_customer_1.c_preferred_cust_flag, default.impala_tpcds_customer_1.c_birth_country, default.impala_tpcds_customer_1.c_login, default.impala_tpcds_customer_1.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=19 row-size=100B cardinality=0
  |  in pipelines: 61(GETNEXT), 17(OPEN)
  |
  60:EXCHANGE [HASH(default.impala_tpcds_customer_1.c_customer_id,default.impala_tpcds_customer_1.c_first_name,default.impala_tpcds_customer_1.c_last_name,default.impala_tpcds_customer_1.c_preferred_cust_flag,default.impala_tpcds_customer_1.c_birth_country,default.impala_tpcds_customer_1.c_login,default.impala_tpcds_customer_1.c_email_address)]
     mem-estimate=104.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=19 row-size=100B cardinality=0
     in pipelines: 17(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.98MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F13, EXCHANGE=60, HASH(default.impala_tpcds_customer_1.c_customer_id,default.impala_tpcds_customer_1.c_first_name,default.impala_tpcds_customer_1.c_last_name,default.impala_tpcds_customer_1.c_preferred_cust_flag,default.impala_tpcds_customer_1.c_birth_country,default.impala_tpcds_customer_1.c_login,default.impala_tpcds_customer_1.c_email_address)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:AGGREGATE [STREAMING]
  |  output: sum(divide(add(subtract(subtract(default.impala_tpcds_catalog_sales.cs_ext_list_price, default.impala_tpcds_catalog_sales.cs_ext_wholesale_cost), default.impala_tpcds_catalog_sales.cs_ext_discount_amt), default.impala_tpcds_catalog_sales.cs_ext_sales_price), CAST(2 AS DECIMAL(3,0))))
  |  group by: default.impala_tpcds_customer_1.c_customer_id, default.impala_tpcds_customer_1.c_first_name, default.impala_tpcds_customer_1.c_last_name, default.impala_tpcds_customer_1.c_preferred_cust_flag, default.impala_tpcds_customer_1.c_birth_country, default.impala_tpcds_customer_1.c_login, default.impala_tpcds_customer_1.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=19 row-size=100B cardinality=0
  |  in pipelines: 17(GETNEXT)
  |
  21:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_1.c_customer_sk = default.impala_tpcds_catalog_sales.cs_bill_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=13,15,17 row-size=120B cardinality=0
  |  in pipelines: 17(GETNEXT), 18(OPEN)
  |
  |--59:EXCHANGE [BROADCAST]
  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=15,17 row-size=32B cardinality=0
  |     in pipelines: 18(GETNEXT)
  |
  17:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_1.c_customer_id IS NOT NULL, default.impala_tpcds_customer_1.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=88B cardinality=0
     in pipelines: 17(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F09, EXCHANGE=59, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  20:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_sold_date_sk = default.impala_tpcds_date_dim_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=15,17 row-size=32B cardinality=0
  |  in pipelines: 18(GETNEXT), 19(OPEN)
  |
  |--58:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=17 row-size=8B cardinality=0
  |     in pipelines: 19(GETNEXT)
  |
  18:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales.cs_bill_customer_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=24B cardinality=0
     in pipelines: 18(GETNEXT)

F11:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F10, EXCHANGE=58, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  19:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_1.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_1.d_year = CAST(1999 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_1.d_year = CAST(1999 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=8B cardinality=0
     in pipelines: 19(GETNEXT)

F17:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_2.c_customer_id,default.impala_tpcds_customer_2.c_first_name,default.impala_tpcds_customer_2.c_last_name,default.impala_tpcds_customer_2.c_preferred_cust_flag,default.impala_tpcds_customer_2.c_birth_country,default.impala_tpcds_customer_2.c_login,default.impala_tpcds_customer_2.c_email_address)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.10MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F27, EXCHANGE=67, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  66:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(divide(add(subtract(subtract(default.impala_tpcds_catalog_sales_0.cs_ext_list_price, default.impala_tpcds_catalog_sales_0.cs_ext_wholesale_cost), default.impala_tpcds_catalog_sales_0.cs_ext_discount_amt), default.impala_tpcds_catalog_sales_0.cs_ext_sales_price), 2))
  |  group by: default.impala_tpcds_customer_2.c_customer_id, default.impala_tpcds_customer_2.c_first_name, default.impala_tpcds_customer_2.c_last_name, default.impala_tpcds_customer_2.c_preferred_cust_flag, default.impala_tpcds_customer_2.c_birth_country, default.impala_tpcds_customer_2.c_login, default.impala_tpcds_customer_2.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=27 row-size=100B cardinality=0
  |  in pipelines: 66(GETNEXT), 25(OPEN)
  |
  65:EXCHANGE [HASH(default.impala_tpcds_customer_2.c_customer_id,default.impala_tpcds_customer_2.c_first_name,default.impala_tpcds_customer_2.c_last_name,default.impala_tpcds_customer_2.c_preferred_cust_flag,default.impala_tpcds_customer_2.c_birth_country,default.impala_tpcds_customer_2.c_login,default.impala_tpcds_customer_2.c_email_address)]
     mem-estimate=104.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=27 row-size=100B cardinality=0
     in pipelines: 25(GETNEXT)

F14:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.98MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F17, EXCHANGE=65, HASH(default.impala_tpcds_customer_2.c_customer_id,default.impala_tpcds_customer_2.c_first_name,default.impala_tpcds_customer_2.c_last_name,default.impala_tpcds_customer_2.c_preferred_cust_flag,default.impala_tpcds_customer_2.c_birth_country,default.impala_tpcds_customer_2.c_login,default.impala_tpcds_customer_2.c_email_address)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  30:AGGREGATE [STREAMING]
  |  output: sum(divide(add(subtract(subtract(default.impala_tpcds_catalog_sales_0.cs_ext_list_price, default.impala_tpcds_catalog_sales_0.cs_ext_wholesale_cost), default.impala_tpcds_catalog_sales_0.cs_ext_discount_amt), default.impala_tpcds_catalog_sales_0.cs_ext_sales_price), CAST(2 AS DECIMAL(3,0))))
  |  group by: default.impala_tpcds_customer_2.c_customer_id, default.impala_tpcds_customer_2.c_first_name, default.impala_tpcds_customer_2.c_last_name, default.impala_tpcds_customer_2.c_preferred_cust_flag, default.impala_tpcds_customer_2.c_birth_country, default.impala_tpcds_customer_2.c_login, default.impala_tpcds_customer_2.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=27 row-size=100B cardinality=0
  |  in pipelines: 25(GETNEXT)
  |
  29:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_2.c_customer_sk = default.impala_tpcds_catalog_sales_0.cs_bill_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=21,23,25 row-size=120B cardinality=0
  |  in pipelines: 25(GETNEXT), 26(OPEN)
  |
  |--64:EXCHANGE [BROADCAST]
  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=23,25 row-size=32B cardinality=0
  |     in pipelines: 26(GETNEXT)
  |
  25:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_2.c_customer_id IS NOT NULL, default.impala_tpcds_customer_2.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=88B cardinality=0
     in pipelines: 25(GETNEXT)

F15:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=64, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  28:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_0.cs_sold_date_sk = default.impala_tpcds_date_dim_2.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=23,25 row-size=32B cardinality=0
  |  in pipelines: 26(GETNEXT), 27(OPEN)
  |
  |--63:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=25 row-size=8B cardinality=0
  |     in pipelines: 27(GETNEXT)
  |
  26:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales_0.cs_bill_customer_sk IS NOT NULL, default.impala_tpcds_catalog_sales_0.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=23 row-size=24B cardinality=0
     in pipelines: 26(GETNEXT)

F16:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F15, EXCHANGE=63, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  27:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_2.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_2.d_year = add(CAST(1999 AS INT), CAST(1 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_2.d_year = add(CAST(1999 AS INT), CAST(1 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=25 row-size=8B cardinality=0
     in pipelines: 27(GETNEXT)

F22:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.10MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F27, EXCHANGE=72, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  39:SELECT
  |  predicates: _impala_builtins.sum(divide(add(subtract(subtract(default.impala_tpcds_web_sales.ws_ext_list_price, default.impala_tpcds_web_sales.ws_ext_wholesale_cost), default.impala_tpcds_web_sales.ws_ext_discount_amt), default.impala_tpcds_web_sales.ws_ext_sales_price), 2)) > CAST(0 AS DECIMAL(38,6))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=35 row-size=28B cardinality=0
  |  in pipelines: 71(GETNEXT)
  |
  32:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=35 row-size=28B cardinality=0
  |  in pipelines: 71(GETNEXT)
  |
  71:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(divide(add(subtract(subtract(default.impala_tpcds_web_sales.ws_ext_list_price, default.impala_tpcds_web_sales.ws_ext_wholesale_cost), default.impala_tpcds_web_sales.ws_ext_discount_amt), default.impala_tpcds_web_sales.ws_ext_sales_price), 2))
  |  group by: default.impala_tpcds_customer_3.c_customer_id, default.impala_tpcds_customer_3.c_first_name, default.impala_tpcds_customer_3.c_last_name, default.impala_tpcds_customer_3.c_preferred_cust_flag, default.impala_tpcds_customer_3.c_birth_country, default.impala_tpcds_customer_3.c_login, default.impala_tpcds_customer_3.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=34 row-size=100B cardinality=0
  |  in pipelines: 71(GETNEXT), 33(OPEN)
  |
  70:EXCHANGE [HASH(default.impala_tpcds_customer_3.c_customer_id,default.impala_tpcds_customer_3.c_first_name,default.impala_tpcds_customer_3.c_last_name,default.impala_tpcds_customer_3.c_preferred_cust_flag,default.impala_tpcds_customer_3.c_birth_country,default.impala_tpcds_customer_3.c_login,default.impala_tpcds_customer_3.c_email_address)]
     mem-estimate=104.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=34 row-size=100B cardinality=0
     in pipelines: 33(GETNEXT)

F18:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.98MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F22, EXCHANGE=70, HASH(default.impala_tpcds_customer_3.c_customer_id,default.impala_tpcds_customer_3.c_first_name,default.impala_tpcds_customer_3.c_last_name,default.impala_tpcds_customer_3.c_preferred_cust_flag,default.impala_tpcds_customer_3.c_birth_country,default.impala_tpcds_customer_3.c_login,default.impala_tpcds_customer_3.c_email_address)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  38:AGGREGATE [STREAMING]
  |  output: sum(divide(add(subtract(subtract(default.impala_tpcds_web_sales.ws_ext_list_price, default.impala_tpcds_web_sales.ws_ext_wholesale_cost), default.impala_tpcds_web_sales.ws_ext_discount_amt), default.impala_tpcds_web_sales.ws_ext_sales_price), CAST(2 AS DECIMAL(3,0))))
  |  group by: default.impala_tpcds_customer_3.c_customer_id, default.impala_tpcds_customer_3.c_first_name, default.impala_tpcds_customer_3.c_last_name, default.impala_tpcds_customer_3.c_preferred_cust_flag, default.impala_tpcds_customer_3.c_birth_country, default.impala_tpcds_customer_3.c_login, default.impala_tpcds_customer_3.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=34 row-size=100B cardinality=0
  |  in pipelines: 33(GETNEXT)
  |
  37:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_3.c_customer_sk = default.impala_tpcds_web_sales.ws_bill_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=28,30,32 row-size=120B cardinality=0
  |  in pipelines: 33(GETNEXT), 34(OPEN)
  |
  |--69:EXCHANGE [BROADCAST]
  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=30,32 row-size=32B cardinality=0
  |     in pipelines: 34(GETNEXT)
  |
  33:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_3.c_customer_id IS NOT NULL, default.impala_tpcds_customer_3.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=28 row-size=88B cardinality=0
     in pipelines: 33(GETNEXT)

F19:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=69, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  36:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_sold_date_sk = default.impala_tpcds_date_dim_3.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=30,32 row-size=32B cardinality=0
  |  in pipelines: 34(GETNEXT), 35(OPEN)
  |
  |--68:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=32 row-size=8B cardinality=0
  |     in pipelines: 35(GETNEXT)
  |
  34:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_bill_customer_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=30 row-size=24B cardinality=0
     in pipelines: 34(GETNEXT)

F20:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F19, EXCHANGE=68, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  35:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_3.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_3.d_year = CAST(1999 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_3.d_year = CAST(1999 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=32 row-size=8B cardinality=0
     in pipelines: 35(GETNEXT)

F26:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_4.c_customer_id,default.impala_tpcds_customer_4.c_first_name,default.impala_tpcds_customer_4.c_last_name,default.impala_tpcds_customer_4.c_preferred_cust_flag,default.impala_tpcds_customer_4.c_birth_country,default.impala_tpcds_customer_4.c_login,default.impala_tpcds_customer_4.c_email_address)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.10MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F27, EXCHANGE=77, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  76:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(divide(add(subtract(subtract(default.impala_tpcds_web_sales_0.ws_ext_list_price, default.impala_tpcds_web_sales_0.ws_ext_wholesale_cost), default.impala_tpcds_web_sales_0.ws_ext_discount_amt), default.impala_tpcds_web_sales_0.ws_ext_sales_price), 2))
  |  group by: default.impala_tpcds_customer_4.c_customer_id, default.impala_tpcds_customer_4.c_first_name, default.impala_tpcds_customer_4.c_last_name, default.impala_tpcds_customer_4.c_preferred_cust_flag, default.impala_tpcds_customer_4.c_birth_country, default.impala_tpcds_customer_4.c_login, default.impala_tpcds_customer_4.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=42 row-size=100B cardinality=0
  |  in pipelines: 76(GETNEXT), 41(OPEN)
  |
  75:EXCHANGE [HASH(default.impala_tpcds_customer_4.c_customer_id,default.impala_tpcds_customer_4.c_first_name,default.impala_tpcds_customer_4.c_last_name,default.impala_tpcds_customer_4.c_preferred_cust_flag,default.impala_tpcds_customer_4.c_birth_country,default.impala_tpcds_customer_4.c_login,default.impala_tpcds_customer_4.c_email_address)]
     mem-estimate=104.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=42 row-size=100B cardinality=0
     in pipelines: 41(GETNEXT)

F23:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.98MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F26, EXCHANGE=75, HASH(default.impala_tpcds_customer_4.c_customer_id,default.impala_tpcds_customer_4.c_first_name,default.impala_tpcds_customer_4.c_last_name,default.impala_tpcds_customer_4.c_preferred_cust_flag,default.impala_tpcds_customer_4.c_birth_country,default.impala_tpcds_customer_4.c_login,default.impala_tpcds_customer_4.c_email_address)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  46:AGGREGATE [STREAMING]
  |  output: sum(divide(add(subtract(subtract(default.impala_tpcds_web_sales_0.ws_ext_list_price, default.impala_tpcds_web_sales_0.ws_ext_wholesale_cost), default.impala_tpcds_web_sales_0.ws_ext_discount_amt), default.impala_tpcds_web_sales_0.ws_ext_sales_price), CAST(2 AS DECIMAL(3,0))))
  |  group by: default.impala_tpcds_customer_4.c_customer_id, default.impala_tpcds_customer_4.c_first_name, default.impala_tpcds_customer_4.c_last_name, default.impala_tpcds_customer_4.c_preferred_cust_flag, default.impala_tpcds_customer_4.c_birth_country, default.impala_tpcds_customer_4.c_login, default.impala_tpcds_customer_4.c_email_address
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=42 row-size=100B cardinality=0
  |  in pipelines: 41(GETNEXT)
  |
  45:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_4.c_customer_sk = default.impala_tpcds_web_sales_0.ws_bill_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=36,38,40 row-size=120B cardinality=0
  |  in pipelines: 41(GETNEXT), 42(OPEN)
  |
  |--74:EXCHANGE [BROADCAST]
  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=38,40 row-size=32B cardinality=0
  |     in pipelines: 42(GETNEXT)
  |
  41:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_4.c_customer_id IS NOT NULL, default.impala_tpcds_customer_4.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=36 row-size=88B cardinality=0
     in pipelines: 41(GETNEXT)

F24:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=1.95MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F23, EXCHANGE=74, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  44:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_0.ws_sold_date_sk = default.impala_tpcds_date_dim_4.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=38,40 row-size=32B cardinality=0
  |  in pipelines: 42(GETNEXT), 43(OPEN)
  |
  |--73:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=40 row-size=8B cardinality=0
  |     in pipelines: 43(GETNEXT)
  |
  42:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales_0.ws_bill_customer_sk IS NOT NULL, default.impala_tpcds_web_sales_0.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=38 row-size=24B cardinality=0
     in pipelines: 42(GETNEXT)

F25:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F24, EXCHANGE=73, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  43:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_4.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_4.d_year = add(CAST(1999 AS INT), CAST(1 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_4.d_year = add(CAST(1999 AS INT), CAST(1 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=40 row-size=8B cardinality=0
     in pipelines: 43(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

