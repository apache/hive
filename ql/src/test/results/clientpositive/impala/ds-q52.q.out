HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_item
PREHOOK: query: explain cbo physical select  dt.d_year
      ,impala_tpcds_item.i_brand_id brand_id
      ,impala_tpcds_item.i_brand brand
      ,sum(ss_ext_sales_price) ext_price
 from impala_tpcds_date_dim dt
     ,impala_tpcds_store_sales
     ,impala_tpcds_item
 where dt.d_date_sk = impala_tpcds_store_sales.ss_sold_date_sk
    and impala_tpcds_store_sales.ss_item_sk = impala_tpcds_item.i_item_sk
    and impala_tpcds_item.i_manager_id = 1
    and dt.d_moy=12
    and dt.d_year=2000
 group by dt.d_year
      ,impala_tpcds_item.i_brand
      ,impala_tpcds_item.i_brand_id
 order by dt.d_year
      ,ext_price desc
      ,brand_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical select  dt.d_year
      ,impala_tpcds_item.i_brand_id brand_id
      ,impala_tpcds_item.i_brand brand
      ,sum(ss_ext_sales_price) ext_price
 from impala_tpcds_date_dim dt
     ,impala_tpcds_store_sales
     ,impala_tpcds_item
 where dt.d_date_sk = impala_tpcds_store_sales.ss_sold_date_sk
    and impala_tpcds_store_sales.ss_item_sk = impala_tpcds_item.i_item_sk
    and impala_tpcds_item.i_manager_id = 1
    and dt.d_moy=12
    and dt.d_year=2000
 group by dt.d_year
      ,impala_tpcds_item.i_brand
      ,impala_tpcds_item.i_brand_id
 order by dt.d_year
      ,ext_price desc
      ,brand_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store_sales
CBO PLAN:
ImpalaProjectPassthroughRel(d_year=[CAST(2000):INTEGER], brand_id=[$0], brand=[$1], ext_price=[$2])
  ImpalaSortRel(sort0=[$2], sort1=[$0], dir0=[DESC], dir1=[ASC], fetch=[100])
    ImpalaAggregateRel(group=[{5, 6}], agg#0=[sum($1)])
      ImpalaJoinRel(condition=[=($0, $4)], joinType=[inner])
        ImpalaJoinRel(condition=[=($3, $2)], joinType=[inner])
          ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_ext_sales_price=[$14], ss_sold_date_sk=[$22])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($1), IS NOT NULL($22))])
          ImpalaProjectPassthroughRel(d_date_sk=[$0])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($8, 12), =($6, 2000), IS NOT NULL($0))])
        ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand_id=[$7], i_brand=[$8])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(=($20, 1), IS NOT NULL($0))])

HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_item
PREHOOK: query: explain select  dt.d_year
      ,impala_tpcds_item.i_brand_id brand_id
      ,impala_tpcds_item.i_brand brand
      ,sum(ss_ext_sales_price) ext_price
 from impala_tpcds_date_dim dt
     ,impala_tpcds_store_sales
     ,impala_tpcds_item
 where dt.d_date_sk = impala_tpcds_store_sales.ss_sold_date_sk
    and impala_tpcds_store_sales.ss_item_sk = impala_tpcds_item.i_item_sk
    and impala_tpcds_item.i_manager_id = 1
    and dt.d_moy=12
    and dt.d_year=2000
 group by dt.d_year
      ,impala_tpcds_item.i_brand
      ,impala_tpcds_item.i_brand_id
 order by dt.d_year
      ,ext_price desc
      ,brand_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain select  dt.d_year
      ,impala_tpcds_item.i_brand_id brand_id
      ,impala_tpcds_item.i_brand brand
      ,sum(ss_ext_sales_price) ext_price
 from impala_tpcds_date_dim dt
     ,impala_tpcds_store_sales
     ,impala_tpcds_item
 where dt.d_date_sk = impala_tpcds_store_sales.ss_sold_date_sk
    and impala_tpcds_store_sales.ss_item_sk = impala_tpcds_item.i_item_sk
    and impala_tpcds_item.i_manager_id = 1
    and dt.d_moy=12
    and dt.d_year=2000
 group by dt.d_year
      ,impala_tpcds_item.i_brand
      ,impala_tpcds_item.i_brand_id
 order by dt.d_year
      ,ext_price desc
      ,brand_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_store_sales
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F04:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=36.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: CAST(2000 AS INT), default.impala_tpcds_item.i_brand_id, default.impala_tpcds_item.i_brand, sum(default.impala_tpcds_store_sales.ss_ext_sales_price)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  11:MERGING-EXCHANGE [UNPARTITIONED]
     order by: sum(default.impala_tpcds_store_sales.ss_ext_sales_price) DESC NULLS FIRST, default.impala_tpcds_item.i_brand_id ASC NULLS LAST
     limit: 100
     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=32B cardinality=0
     in pipelines: 06(GETNEXT)

F03:PLAN FRAGMENT [HASH(default.impala_tpcds_item.i_brand_id,default.impala_tpcds_item.i_brand)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.04MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=11, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:TOP-N [LIMIT=100]
  |  order by: sum(default.impala_tpcds_store_sales.ss_ext_sales_price) DESC NULLS FIRST, default.impala_tpcds_item.i_brand_id ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=6 row-size=32B cardinality=0
  |  in pipelines: 06(GETNEXT), 10(OPEN)
  |
  10:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_store_sales.ss_ext_sales_price)
  |  group by: default.impala_tpcds_item.i_brand_id, default.impala_tpcds_item.i_brand
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=32B cardinality=0
  |  in pipelines: 10(GETNEXT), 00(OPEN)
  |
  09:EXCHANGE [HASH(default.impala_tpcds_item.i_brand_id,default.impala_tpcds_item.i_brand)]
     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=32B cardinality=0
     in pipelines: 00(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.92MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=09, HASH(default.impala_tpcds_item.i_brand_id,default.impala_tpcds_item.i_brand)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales.ss_ext_sales_price)
  |  group by: default.impala_tpcds_item.i_brand_id, default.impala_tpcds_item.i_brand
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=32B cardinality=0
  |  in pipelines: 00(GETNEXT)
  |
  04:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3 row-size=56B cardinality=0
  |  in pipelines: 00(GETNEXT), 03(OPEN)
  |
  |--08:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=28B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = dt.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1 row-size=28B cardinality=0
  |  in pipelines: 00(GETNEXT), 01(OPEN)
  |
  |--07:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1 row-size=12B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  00:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns missing stats: ss_item_sk, ss_ext_sales_price
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=16B cardinality=0
     in pipelines: 00(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=07, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SCAN HDFS [default.impala_tpcds_date_dim dt, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: dt.d_date_sk IS NOT NULL, dt.d_moy = CAST(12 AS INT), dt.d_year = CAST(2000 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: dt.d_moy = CAST(12 AS INT), dt.d_year = CAST(2000 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=12B cardinality=0
     in pipelines: 01(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=08, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL, default.impala_tpcds_item.i_manager_id = CAST(1 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_item.i_manager_id = CAST(1 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=28B cardinality=0
     in pipelines: 03(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

