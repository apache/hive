PREHOOK: query: drop view impala_complex_view
PREHOOK: type: DROPVIEW
POSTHOOK: query: drop view impala_complex_view
POSTHOOK: type: DROPVIEW
PREHOOK: query: create view impala_complex_view AS
select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: database:default
PREHOOK: Output: default@impala_complex_view
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: create view impala_complex_view AS
select
  l_returnflag,
  l_linestatus,
  sum(l_quantity) as sum_qty,
  sum(l_extendedprice) as sum_base_price,
  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
  avg(l_quantity) as avg_qty,
  avg(l_extendedprice) as avg_price,
  avg(l_discount) as avg_disc,
  count(*) as count_order
from
  impala_tpch_lineitem
where
  l_shipdate <= '1998-09-02'
group by
  l_returnflag,
  l_linestatus
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: database:default
POSTHOOK: Output: default@impala_complex_view
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: explain
select
  l_returnflag,
  l_linestatus,
  sum_qty,
  sum_base_price,
  sum_disc_price,
  sum_charge,
  avg_qty,
  avg_price,
  avg_disc,
  count_order
from
  impala_complex_view
order by
  l_returnflag,
  l_linestatus
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_complex_view
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select
  l_returnflag,
  l_linestatus,
  sum_qty,
  sum_base_price,
  sum_disc_price,
  sum_charge,
  avg_qty,
  avg_price,
  avg_disc,
  count_order
from
  impala_complex_view
order by
  l_returnflag,
  l_linestatus
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_complex_view
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F02:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=124.12KB mem-reservation=0B thread-reservation=1
  WRITE TO HDFS [_result_db_._result_table_, OVERWRITE=false]
  |  partitions=1
  |  output exprs: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus, _impala_builtins.sum(default.impala_tpch_lineitem.l_quantity), _impala_builtins.sum(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum(_impala_builtins.multiply(default.impala_tpch_lineitem.l_extendedprice, _impala_builtins.subtract(1, default.impala_tpch_lineitem.l_discount))), _impala_builtins.sum(_impala_builtins.multiply(_impala_builtins.multiply(default.impala_tpch_lineitem.l_extendedprice, _impala_builtins.subtract(1, default.impala_tpch_lineitem.l_discount)), _impala_builtins.add(1, default.impala_tpch_lineitem.l_tax))), _impala_builtins.avg(default.impala_tpch_lineitem.l_quantity), _impala_builtins.avg(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.avg(default.impala_tpch_lineitem.l_discount), _impala_builtins.count()
  |  mem-estimate=120B mem-reservation=0B thread-reservation=0
  |
  05:MERGING-EXCHANGE [UNPARTITIONED]
     order by: default.impala_tpch_lineitem.l_returnflag ASC NULLS LAST, default.impala_tpch_lineitem.l_linestatus ASC NULLS LAST
     mem-estimate=124.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=120B cardinality=0
     in pipelines: 02(GETNEXT)

F01:PLAN FRAGMENT [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)] hosts=1 instances=1
Per-Host Resources: mem-estimate=140.00MB mem-reservation=46.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=05, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SORT
  |  order by: default.impala_tpch_lineitem.l_returnflag ASC NULLS LAST, default.impala_tpch_lineitem.l_linestatus ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=120B cardinality=0
  |  in pipelines: 02(GETNEXT), 04(OPEN)
  |
  04:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.sum:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.sum:merge(_impala_builtins.multiply(default.impala_tpch_lineitem.l_extendedprice, _impala_builtins.subtract(1, default.impala_tpch_lineitem.l_discount))), _impala_builtins.sum:merge(_impala_builtins.multiply(_impala_builtins.multiply(default.impala_tpch_lineitem.l_extendedprice, _impala_builtins.subtract(1, default.impala_tpch_lineitem.l_discount)), _impala_builtins.add(1, default.impala_tpch_lineitem.l_tax))), _impala_builtins.avg:merge(default.impala_tpch_lineitem.l_quantity), _impala_builtins.avg:merge(default.impala_tpch_lineitem.l_extendedprice), _impala_builtins.avg:merge(default.impala_tpch_lineitem.l_discount), _impala_builtins.count:merge()
  |  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=3 row-size=120B cardinality=0
  |  in pipelines: 04(GETNEXT), 00(OPEN)
  |
  03:EXCHANGE [HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
     mem-estimate=124.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=120B cardinality=0
     in pipelines: 00(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F01, EXCHANGE=03, HASH(default.impala_tpch_lineitem.l_returnflag,default.impala_tpch_lineitem.l_linestatus)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpch_lineitem.l_quantity), sum(default.impala_tpch_lineitem.l_extendedprice), sum(_impala_builtins.multiply(default.impala_tpch_lineitem.l_extendedprice, _impala_builtins.subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount))), sum(_impala_builtins.multiply(_impala_builtins.multiply(default.impala_tpch_lineitem.l_extendedprice, _impala_builtins.subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)), _impala_builtins.add(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_tax))), avg(default.impala_tpch_lineitem.l_quantity), avg(default.impala_tpch_lineitem.l_extendedprice), avg(default.impala_tpch_lineitem.l_discount), count()
  |  group by: default.impala_tpch_lineitem.l_returnflag, default.impala_tpch_lineitem.l_linestatus
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=2 row-size=120B cardinality=0
  |  in pipelines: 00(GETNEXT)
  |
  00:SCAN HDFS [default.impala_tpch_lineitem, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpch_lineitem.l_shipdate <= '1998-09-02'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=68B cardinality=0
     in pipelines: 00(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: drop view impala_complex_view
PREHOOK: type: DROPVIEW
PREHOOK: Input: default@impala_complex_view
PREHOOK: Output: default@impala_complex_view
POSTHOOK: query: drop view impala_complex_view
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: default@impala_complex_view
POSTHOOK: Output: default@impala_complex_view
