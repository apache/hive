PREHOOK: query: explain cbo select
  supp_nation,
  cust_nation,
  l_year,
  sum(volume) as revenue
from (
  select
    n1.n_name as supp_nation, 
    n2.n_name as cust_nation,
    year(l_shipdate) as l_year,
    l_extendedprice * (1 - l_discount) as volume
  from
    impala_tpch_supplier,
    impala_tpch_lineitem,
    impala_tpch_orders,
    impala_tpch_customer,
    impala_tpch_nation n1,
    impala_tpch_nation n2
  where
    s_suppkey = l_suppkey
    and o_orderkey = l_orderkey
    and c_custkey = o_custkey
    and s_nationkey = n1.n_nationkey
    and c_nationkey = n2.n_nationkey
    and (
      (n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
      or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')
    )
    and l_shipdate between '1995-01-01' and '1996-12-31'
  ) as shipping
group by
  supp_nation,
  cust_nation,
  l_year
order by
  supp_nation,
  cust_nation,
  l_year
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_customer
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Input: default@impala_tpch_nation
PREHOOK: Input: default@impala_tpch_orders
PREHOOK: Input: default@impala_tpch_supplier
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo select
  supp_nation,
  cust_nation,
  l_year,
  sum(volume) as revenue
from (
  select
    n1.n_name as supp_nation, 
    n2.n_name as cust_nation,
    year(l_shipdate) as l_year,
    l_extendedprice * (1 - l_discount) as volume
  from
    impala_tpch_supplier,
    impala_tpch_lineitem,
    impala_tpch_orders,
    impala_tpch_customer,
    impala_tpch_nation n1,
    impala_tpch_nation n2
  where
    s_suppkey = l_suppkey
    and o_orderkey = l_orderkey
    and c_custkey = o_custkey
    and s_nationkey = n1.n_nationkey
    and c_nationkey = n2.n_nationkey
    and (
      (n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
      or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')
    )
    and l_shipdate between '1995-01-01' and '1996-12-31'
  ) as shipping
group by
  supp_nation,
  cust_nation,
  l_year
order by
  supp_nation,
  cust_nation,
  l_year
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_customer
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Input: default@impala_tpch_nation
POSTHOOK: Input: default@impala_tpch_orders
POSTHOOK: Input: default@impala_tpch_supplier
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$1], sort2=[$2], dir0=[ASC], dir1=[ASC], dir2=[ASC])
  ImpalaProjectRel(n_name=[$1], n_name0=[$2], YEAR=[$0], $f3=[$3])
    ImpalaAggregateRel(group=[{2, 7, 15}], agg#0=[sum($3)])
      ImpalaJoinRel(condition=[AND(=($12, $0), OR(AND($8, $16), AND($9, $17)))], joinType=[inner])
        ImpalaJoinRel(condition=[=($5, $6)], joinType=[inner])
          ImpalaJoinRel(condition=[=($4, $1)], joinType=[inner])
            ImpalaProjectPassthroughRel(l_orderkey=[$0], l_suppkey=[$2], YEAR=[YEAR(FLAG(YEAR), CAST($10):DATE)], *=[*($5, -(1:DECIMAL(3, 0), $6))])
              ImpalaHdfsScanRel(table=[[default, impala_tpch_lineitem]], condition=[AND(BETWEEN(false, $10, _UTF-16LE'1995-01-01':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'1996-12-31':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($2), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(s_suppkey=[$0], s_nationkey=[$3])
              ImpalaHdfsScanRel(table=[[default, impala_tpch_supplier]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
          ImpalaProjectPassthroughRel(n_nationkey=[$0], n_name=[$1], ==[=($1, _UTF-16LE'FRANCE')], =3=[=($1, _UTF-16LE'GERMANY')])
            ImpalaHdfsScanRel(table=[[default, impala_tpch_nation]], condition=[AND(IN($1, _UTF-16LE'FRANCE':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'GERMANY':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])
        ImpalaJoinRel(condition=[=($1, $4)], joinType=[inner])
          ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
            ImpalaProjectPassthroughRel(c_custkey=[$0], c_nationkey=[$3])
              ImpalaHdfsScanRel(table=[[default, impala_tpch_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
            ImpalaProjectPassthroughRel(o_orderkey=[$0], o_custkey=[$1])
              ImpalaHdfsScanRel(table=[[default, impala_tpch_orders]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
          ImpalaProjectPassthroughRel(n_nationkey=[$0], n_name=[$1], ==[=($1, _UTF-16LE'GERMANY')], =3=[=($1, _UTF-16LE'FRANCE')])
            ImpalaHdfsScanRel(table=[[default, impala_tpch_nation]], condition=[AND(IN($1, _UTF-16LE'GERMANY':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'FRANCE':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])

PREHOOK: query: explain select
  supp_nation,
  cust_nation,
  l_year,
  sum(volume) as revenue
from (
  select
    n1.n_name as supp_nation, 
    n2.n_name as cust_nation,
    year(l_shipdate) as l_year,
    l_extendedprice * (1 - l_discount) as volume
  from
    impala_tpch_supplier,
    impala_tpch_lineitem,
    impala_tpch_orders,
    impala_tpch_customer,
    impala_tpch_nation n1,
    impala_tpch_nation n2
  where
    s_suppkey = l_suppkey
    and o_orderkey = l_orderkey
    and c_custkey = o_custkey
    and s_nationkey = n1.n_nationkey
    and c_nationkey = n2.n_nationkey
    and (
      (n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
      or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')
    )
    and l_shipdate between '1995-01-01' and '1996-12-31'
  ) as shipping
group by
  supp_nation,
  cust_nation,
  l_year
order by
  supp_nation,
  cust_nation,
  l_year
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_customer
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Input: default@impala_tpch_nation
PREHOOK: Input: default@impala_tpch_orders
PREHOOK: Input: default@impala_tpch_supplier
PREHOOK: Output: streaming
POSTHOOK: query: explain select
  supp_nation,
  cust_nation,
  l_year,
  sum(volume) as revenue
from (
  select
    n1.n_name as supp_nation, 
    n2.n_name as cust_nation,
    year(l_shipdate) as l_year,
    l_extendedprice * (1 - l_discount) as volume
  from
    impala_tpch_supplier,
    impala_tpch_lineitem,
    impala_tpch_orders,
    impala_tpch_customer,
    impala_tpch_nation n1,
    impala_tpch_nation n2
  where
    s_suppkey = l_suppkey
    and o_orderkey = l_orderkey
    and c_custkey = o_custkey
    and s_nationkey = n1.n_nationkey
    and c_nationkey = n2.n_nationkey
    and (
      (n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
      or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')
    )
    and l_shipdate between '1995-01-01' and '1996-12-31'
  ) as shipping
group by
  supp_nation,
  cust_nation,
  l_year
order by
  supp_nation,
  cust_nation,
  l_year
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_customer
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Input: default@impala_tpch_nation
POSTHOOK: Input: default@impala_tpch_orders
POSTHOOK: Input: default@impala_tpch_supplier
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F08:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=48.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: n1.n_name, n2.n_name, year(casttodate(default.impala_tpch_lineitem.l_shipdate)), _impala_builtins.sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  21:MERGING-EXCHANGE [UNPARTITIONED]
     order by: n1.n_name ASC NULLS LAST, n2.n_name ASC NULLS LAST, year(casttodate(default.impala_tpch_lineitem.l_shipdate)) ASC NULLS LAST
     mem-estimate=48.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=14 row-size=44B cardinality=0
     in pipelines: 13(GETNEXT)

F07:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=140.05MB mem-reservation=46.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=21, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:SORT
  |  order by: n1.n_name ASC NULLS LAST, n2.n_name ASC NULLS LAST, year(casttodate(default.impala_tpch_lineitem.l_shipdate)) ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=14 row-size=44B cardinality=0
  |  in pipelines: 13(GETNEXT), 20(OPEN)
  |
  00:UNION
  |  pass-through-operands: all
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=13 row-size=44B cardinality=0
  |  in pipelines: 20(GETNEXT)
  |
  20:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)))
  |  group by: year(casttodate(default.impala_tpch_lineitem.l_shipdate)), n1.n_name, n2.n_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=44B cardinality=0
  |  in pipelines: 20(GETNEXT), 01(OPEN)
  |
  19:EXCHANGE [HASH(year(casttodate(default.impala_tpch_lineitem.l_shipdate)),n1.n_name,n2.n_name)]
     mem-estimate=48.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=44B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.90MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=19, HASH(year(casttodate(default.impala_tpch_lineitem.l_shipdate)),n1.n_name,n2.n_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:AGGREGATE [STREAMING]
  |  output: sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)))
  |  group by: year(casttodate(default.impala_tpch_lineitem.l_shipdate)), n1.n_name, n2.n_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=44B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  11:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_lineitem.l_orderkey = default.impala_tpch_orders.o_orderkey
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: n1.n_name = 'FRANCE' AND n2.n_name = 'GERMANY' OR n1.n_name = 'GERMANY' AND n2.n_name = 'FRANCE'
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6,8,10 row-size=108B cardinality=0
  |  in pipelines: 01(GETNEXT), 06(OPEN)
  |
  |--18:EXCHANGE [BROADCAST]
  |     mem-estimate=52.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6,8,10 row-size=40B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_supplier.s_nationkey = n1.n_nationkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=68B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--15:EXCHANGE [BROADCAST]
  |     mem-estimate=18.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=14B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_lineitem.l_suppkey = default.impala_tpch_supplier.s_suppkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=54B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--14:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=10B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpch_lineitem, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_lineitem.l_orderkey IS NOT NULL, default.impala_tpch_lineitem.l_suppkey IS NOT NULL, default.impala_tpch_lineitem.l_shipdate >= '1995-01-01' AND default.impala_tpch_lineitem.l_shipdate <= '1996-12-31'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=44B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=14, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpch_supplier, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_supplier.s_nationkey IS NOT NULL, default.impala_tpch_supplier.s_suppkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=10B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=15, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpch_nation n1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: n1.n_nationkey IS NOT NULL, n1.n_name IN ('FRANCE', 'GERMANY')
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: n1.n_name IN ('FRANCE', 'GERMANY')
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=14B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=3.91MB mem-reservation=3.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=18, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_customer.c_nationkey = n2.n_nationkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=6,8,10 row-size=40B cardinality=0
  |  in pipelines: 06(GETNEXT), 09(OPEN)
  |
  |--17:EXCHANGE [BROADCAST]
  |     mem-estimate=18.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=10 row-size=14B cardinality=0
  |     in pipelines: 09(GETNEXT)
  |
  08:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_customer.c_custkey = default.impala_tpch_orders.o_custkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=6,8 row-size=26B cardinality=0
  |  in pipelines: 06(GETNEXT), 07(OPEN)
  |
  |--16:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=16B cardinality=0
  |     in pipelines: 07(GETNEXT)
  |
  06:SCAN HDFS [default.impala_tpch_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_customer.c_custkey IS NOT NULL, default.impala_tpch_customer.c_nationkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=10B cardinality=0
     in pipelines: 06(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=16, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:SCAN HDFS [default.impala_tpch_orders, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_orders.o_custkey IS NOT NULL, default.impala_tpch_orders.o_orderkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=16B cardinality=0
     in pipelines: 07(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F03, EXCHANGE=17, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:SCAN HDFS [default.impala_tpch_nation n2, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: n2.n_nationkey IS NOT NULL, n2.n_name IN ('GERMANY', 'FRANCE')
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: n2.n_name IN ('GERMANY', 'FRANCE')
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=14B cardinality=0
     in pipelines: 09(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

