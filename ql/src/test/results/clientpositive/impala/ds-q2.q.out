PREHOOK: query: explain cbo with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from impala_tpcds_web_sales) x 
        union all
        (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from impala_tpcds_catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,impala_tpcds_date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,impala_tpcds_date_dim 
  where impala_tpcds_date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1998) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,impala_tpcds_date_dim 
  where impala_tpcds_date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1998+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from impala_tpcds_web_sales) x 
        union all
        (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from impala_tpcds_catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,impala_tpcds_date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,impala_tpcds_date_dim 
  where impala_tpcds_date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1998) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,impala_tpcds_date_dim 
  where impala_tpcds_date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1998+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaSortRel(sort0=[$0], dir0=[ASC])
  ImpalaProjectRel(d_week_seq1=[$0], _o__c1=[ROUND(/($1, $10), 2:TINYINT)], _o__c2=[ROUND(/($2, $11), 2:TINYINT)], _o__c3=[ROUND(/($3, $12), 2:TINYINT)], _o__c4=[ROUND(/($4, $13), 2:TINYINT)], _o__c5=[ROUND(/($5, $14), 2:TINYINT)], _o__c6=[ROUND(/($6, $15), 2:TINYINT)], _o__c7=[ROUND(/($7, $16), 2:TINYINT)])
    ImpalaJoinRel(condition=[=(CAST($0):BIGINT, -(CAST($9):BIGINT, 53))], joinType=[inner])
      ImpalaJoinRel(condition=[=($8, $0)], joinType=[inner])
        ImpalaAggregateRel(group=[{0}], agg#0=[sum($1)], agg#1=[sum($2)], agg#2=[sum($3)], agg#3=[sum($4)], agg#4=[sum($5)], agg#5=[sum($6)], agg#6=[sum($7)])
          ImpalaProjectPassthroughRel($f0=[$3], $f1=[CASE($4, $1, null:DECIMAL(10, 0))], $f2=[CASE($5, $1, null:DECIMAL(10, 0))], $f3=[CASE($6, $1, null:DECIMAL(10, 0))], $f4=[CASE($7, $1, null:DECIMAL(10, 0))], $f5=[CASE($8, $1, null:DECIMAL(10, 0))], $f6=[CASE($9, $1, null:DECIMAL(10, 0))], $f7=[CASE($10, $1, null:DECIMAL(10, 0))])
            ImpalaJoinRel(condition=[=($2, $0)], joinType=[inner])
              ImpalaUnionRel(all=[true])
                ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_ext_sales_price=[$23])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[IS NOT NULL($0)])
                ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_ext_sales_price=[$23])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[IS NOT NULL($0)])
              ImpalaProjectPassthroughRel(d_date_sk=[$0], d_week_seq=[$4], ==[=($14, _UTF-16LE'Sunday')], =3=[=($14, _UTF-16LE'Monday')], =4=[=($14, _UTF-16LE'Tuesday')], =5=[=($14, _UTF-16LE'Wednesday')], =6=[=($14, _UTF-16LE'Thursday')], =7=[=($14, _UTF-16LE'Friday')], =8=[=($14, _UTF-16LE'Saturday')])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IS NOT NULL($0), IS NOT NULL($4), IS NOT NULL(CAST($4):BIGINT))])
        ImpalaProjectPassthroughRel(d_week_seq=[$4])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 1998), IS NOT NULL($4), IS NOT NULL(CAST($4):BIGINT))])
      ImpalaJoinRel(condition=[=($8, $0)], joinType=[inner])
        ImpalaAggregateRel(group=[{0}], agg#0=[sum($1)], agg#1=[sum($2)], agg#2=[sum($3)], agg#3=[sum($4)], agg#4=[sum($5)], agg#5=[sum($6)], agg#6=[sum($7)])
          ImpalaProjectPassthroughRel($f0=[$3], $f1=[CASE($4, $1, null:DECIMAL(10, 0))], $f2=[CASE($5, $1, null:DECIMAL(10, 0))], $f3=[CASE($6, $1, null:DECIMAL(10, 0))], $f4=[CASE($7, $1, null:DECIMAL(10, 0))], $f5=[CASE($8, $1, null:DECIMAL(10, 0))], $f6=[CASE($9, $1, null:DECIMAL(10, 0))], $f7=[CASE($10, $1, null:DECIMAL(10, 0))])
            ImpalaJoinRel(condition=[=($2, $0)], joinType=[inner])
              ImpalaUnionRel(all=[true])
                ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_ext_sales_price=[$23])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[IS NOT NULL($0)])
                ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_ext_sales_price=[$23])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[IS NOT NULL($0)])
              ImpalaProjectPassthroughRel(d_date_sk=[$0], d_week_seq=[$4], ==[=($14, _UTF-16LE'Sunday')], =3=[=($14, _UTF-16LE'Monday')], =4=[=($14, _UTF-16LE'Tuesday')], =5=[=($14, _UTF-16LE'Wednesday')], =6=[=($14, _UTF-16LE'Thursday')], =7=[=($14, _UTF-16LE'Friday')], =8=[=($14, _UTF-16LE'Saturday')])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IS NOT NULL($0), IS NOT NULL($4), IS NOT NULL(CAST($4):BIGINT))])
        ImpalaProjectPassthroughRel(d_week_seq=[$4])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, +(1998, 1)), IS NOT NULL($4), IS NOT NULL(CAST($4):BIGINT))])

PREHOOK: query: explain with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from impala_tpcds_web_sales) x 
        union all
        (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from impala_tpcds_catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,impala_tpcds_date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,impala_tpcds_date_dim 
  where impala_tpcds_date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1998) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,impala_tpcds_date_dim 
  where impala_tpcds_date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1998+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from impala_tpcds_web_sales) x 
        union all
        (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from impala_tpcds_catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,impala_tpcds_date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,impala_tpcds_date_dim 
  where impala_tpcds_date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1998) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,impala_tpcds_date_dim 
  where impala_tpcds_date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1998+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F13:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=120.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpcds_date_dim.d_week_seq, round(divide(_impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Sunday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Sunday' THEN ws_ext_sales_price ELSE NULL END)), 2), round(divide(_impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Monday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Monday' THEN ws_ext_sales_price ELSE NULL END)), 2), round(divide(_impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Tuesday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Tuesday' THEN ws_ext_sales_price ELSE NULL END)), 2), round(divide(_impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Wednesday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Wednesday' THEN ws_ext_sales_price ELSE NULL END)), 2), round(divide(_impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Thursday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Thursday' THEN ws_ext_sales_price ELSE NULL END)), 2), round(divide(_impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Friday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Friday' THEN ws_ext_sales_price ELSE NULL END)), 2), round(divide(_impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Saturday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Saturday' THEN ws_ext_sales_price ELSE NULL END)), 2)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  28:MERGING-EXCHANGE [UNPARTITIONED]
     order by: default.impala_tpcds_date_dim.d_week_seq ASC NULLS LAST
     mem-estimate=120.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=116B cardinality=0
     in pipelines: 18(GETNEXT)

F12:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.14MB mem-reservation=43.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F13, EXCHANGE=28, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  18:SORT
  |  order by: default.impala_tpcds_date_dim.d_week_seq ASC NULLS LAST
  |  mem-estimate=6.00MB mem-reservation=6.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=21 row-size=116B cardinality=0
  |  in pipelines: 18(GETNEXT), 21(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=20 row-size=116B cardinality=0
  |  in pipelines: 21(GETNEXT)
  |
  17:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: casttobigint(default.impala_tpcds_date_dim.d_week_seq) = subtract(casttobigint(default.impala_tpcds_date_dim_1.d_week_seq), 53)
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=7,8,17,18 row-size=248B cardinality=0
  |  in pipelines: 21(GETNEXT), 25(OPEN)
  |
  |--27:EXCHANGE [BROADCAST]
  |     mem-estimate=132.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=17,18 row-size=124B cardinality=0
  |     in pipelines: 25(GETNEXT)
  |
  08:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_date_dim.d_week_seq = default.impala_tpcds_date_dim_0.d_week_seq
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=7,8 row-size=124B cardinality=0
  |  in pipelines: 21(GETNEXT), 07(OPEN)
  |
  |--22:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=8B cardinality=0
  |     in pipelines: 07(GETNEXT)
  |
  21:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Sunday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Monday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Tuesday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Wednesday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Thursday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Friday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Saturday' THEN ws_ext_sales_price ELSE NULL END)
  |  group by: default.impala_tpcds_date_dim.d_week_seq
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=7 row-size=116B cardinality=0
  |  in pipelines: 21(GETNEXT), 02(OPEN), 03(OPEN)
  |
  20:EXCHANGE [HASH(default.impala_tpcds_date_dim.d_week_seq)]
     mem-estimate=120.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=116B cardinality=0
     in pipelines: 02(GETNEXT), 03(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.96MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F12, EXCHANGE=20, HASH(default.impala_tpcds_date_dim.d_week_seq)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE [STREAMING]
  |  output: sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Sunday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Monday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Tuesday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Wednesday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Thursday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Friday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim.d_day_name = 'Saturday' THEN ws_ext_sales_price ELSE NULL END)
  |  group by: default.impala_tpcds_date_dim.d_week_seq
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=7 row-size=116B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,5 row-size=28B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(GETNEXT), 04(OPEN)
  |
  |--19:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=5 row-size=20B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  01:UNION
  |  pass-through-operands: all
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=0 row-size=8B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(GETNEXT)
  |
  |--03:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_catalog_sales.cs_sold_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=8B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=8B cardinality=0
     in pipelines: 02(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=19, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_week_seq IS NOT NULL, casttobigint(default.impala_tpcds_date_dim.d_week_seq) IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=20B cardinality=0
     in pipelines: 04(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F12, EXCHANGE=22, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_week_seq IS NOT NULL, default.impala_tpcds_date_dim_0.d_year = CAST(1998 AS INT), casttobigint(default.impala_tpcds_date_dim_0.d_week_seq) IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_0.d_year = CAST(1998 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=8B cardinality=0
     in pipelines: 07(GETNEXT)

F10:PLAN FRAGMENT [HASH(default.impala_tpcds_date_dim_1.d_week_seq)] hosts=1 instances=1
Per-Host Resources: mem-estimate=130.07MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F12, EXCHANGE=27, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  16:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_date_dim_1.d_week_seq = default.impala_tpcds_date_dim_2.d_week_seq
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=17,18 row-size=124B cardinality=0
  |  in pipelines: 25(GETNEXT), 15(OPEN)
  |
  |--26:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=18 row-size=8B cardinality=0
  |     in pipelines: 15(GETNEXT)
  |
  25:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Sunday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Monday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Tuesday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Wednesday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Thursday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Friday' THEN ws_ext_sales_price ELSE NULL END), _impala_builtins.sum:merge(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Saturday' THEN ws_ext_sales_price ELSE NULL END)
  |  group by: default.impala_tpcds_date_dim_1.d_week_seq
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=17 row-size=116B cardinality=0
  |  in pipelines: 25(GETNEXT), 10(OPEN), 11(OPEN)
  |
  24:EXCHANGE [HASH(default.impala_tpcds_date_dim_1.d_week_seq)]
     mem-estimate=120.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=116B cardinality=0
     in pipelines: 10(GETNEXT), 11(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=129.96MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F10, EXCHANGE=24, HASH(default.impala_tpcds_date_dim_1.d_week_seq)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:AGGREGATE [STREAMING]
  |  output: sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Sunday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Monday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Tuesday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Wednesday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Thursday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Friday' THEN ws_ext_sales_price ELSE NULL END), sum(CASE WHEN default.impala_tpcds_date_dim_1.d_day_name = 'Saturday' THEN ws_ext_sales_price ELSE NULL END)
  |  group by: default.impala_tpcds_date_dim_1.d_week_seq
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=17 row-size=116B cardinality=0
  |  in pipelines: 10(GETNEXT), 11(GETNEXT)
  |
  13:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: ws_sold_date_sk = default.impala_tpcds_date_dim_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=10,15 row-size=28B cardinality=0
  |  in pipelines: 10(GETNEXT), 11(GETNEXT), 12(OPEN)
  |
  |--23:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=15 row-size=20B cardinality=0
  |     in pipelines: 12(GETNEXT)
  |
  09:UNION
  |  pass-through-operands: all
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=10 row-size=8B cardinality=0
  |  in pipelines: 10(GETNEXT), 11(GETNEXT)
  |
  |--11:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_catalog_sales_0.cs_sold_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=13 row-size=8B cardinality=0
  |     in pipelines: 11(GETNEXT)
  |
  10:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales_0.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=8B cardinality=0
     in pipelines: 10(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=23, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_1.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_1.d_week_seq IS NOT NULL, casttobigint(default.impala_tpcds_date_dim_1.d_week_seq) IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=20B cardinality=0
     in pipelines: 12(GETNEXT)

F11:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F10, EXCHANGE=26, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  15:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_2.d_week_seq IS NOT NULL, default.impala_tpcds_date_dim_2.d_year = add(CAST(1998 AS INT), CAST(1 AS INT)), casttobigint(default.impala_tpcds_date_dim_2.d_week_seq) IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_2.d_year = add(CAST(1998 AS INT), CAST(1 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=18 row-size=8B cardinality=0
     in pipelines: 15(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

