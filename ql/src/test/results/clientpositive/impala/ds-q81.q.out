PREHOOK: query: explain cbo with customer_total_return as
 (select cr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
      sum(cr_return_amt_inc_tax) as ctr_total_return
 from impala_tpcds_catalog_returns
     ,impala_tpcds_date_dim
     ,impala_tpcds_customer_address
 where cr_returned_date_sk = d_date_sk 
   and d_year =1998
   and cr_returning_addr_sk = ca_address_sk 
 group by cr_returning_customer_sk
         ,ca_state )
  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 from customer_total_return ctr1
     ,impala_tpcds_customer_address
     ,impala_tpcds_customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
                  from customer_total_return ctr2 
                         where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'TX'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_returns
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo with customer_total_return as
 (select cr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
      sum(cr_return_amt_inc_tax) as ctr_total_return
 from impala_tpcds_catalog_returns
     ,impala_tpcds_date_dim
     ,impala_tpcds_customer_address
 where cr_returned_date_sk = d_date_sk 
   and d_year =1998
   and cr_returning_addr_sk = ca_address_sk 
 group by cr_returning_customer_sk
         ,ca_state )
  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 from customer_total_return ctr1
     ,impala_tpcds_customer_address
     ,impala_tpcds_customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
                  from customer_total_return ctr2 
                         where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'TX'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_returns
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaProjectPassthroughRel(c_customer_id=[$0], c_salutation=[$1], c_first_name=[$2], c_last_name=[$3], ca_street_number=[$4], ca_street_name=[$5], ca_street_type=[$6], ca_suite_number=[$7], ca_city=[$8], ca_county=[$9], ca_state=[CAST(_UTF-16LE'TX':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], ca_zip=[$10], ca_country=[$11], ca_gmt_offset=[$12], ca_location_type=[$13], ctr_total_return=[$14])
  ImpalaSortRel(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$3], sort4=[$4], sort5=[$5], sort6=[$6], sort7=[$7], sort8=[$8], sort9=[$9], sort10=[$10], sort11=[$11], sort12=[$12], sort13=[$13], sort14=[$14], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], dir4=[ASC], dir5=[ASC], dir6=[ASC], dir7=[ASC], dir8=[ASC], dir9=[ASC], dir10=[ASC], dir11=[ASC], dir12=[ASC], dir13=[ASC], dir14=[ASC], fetch=[100])
    ImpalaProjectRel(c_customer_id=[$12], c_salutation=[$14], c_first_name=[$15], c_last_name=[$16], ca_street_number=[$1], ca_street_name=[$2], ca_street_type=[$3], ca_suite_number=[$4], ca_city=[$5], ca_county=[$6], ca_zip=[$7], ca_country=[$8], ca_gmt_offset=[$9], ca_location_type=[$10], ctr_total_return=[$19])
      ImpalaJoinRel(condition=[=($17, $11)], joinType=[inner])
        ImpalaJoinRel(condition=[=($0, $13)], joinType=[inner])
          ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_street_number=[$2], ca_street_name=[$3], ca_street_type=[$4], ca_suite_number=[$5], ca_city=[$6], ca_county=[$7], ca_zip=[$9], ca_country=[$10], ca_gmt_offset=[$11], ca_location_type=[$12])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[AND(=($8, _UTF-16LE'TX'), IS NOT NULL($0))])
          ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_current_addr_sk=[$4], c_salutation=[$7], c_first_name=[$8], c_last_name=[$9])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($4), IS NOT NULL($0))])
        ImpalaJoinRel(condition=[AND(=($1, $4), >($2, $3))], joinType=[inner])
          ImpalaAggregateRel(group=[{1, 6}], agg#0=[sum($3)], condition=[IS NOT NULL($2)])
            ImpalaJoinRel(condition=[=($2, $5)], joinType=[inner])
              ImpalaJoinRel(condition=[=($0, $4)], joinType=[inner])
                ImpalaProjectPassthroughRel(cr_returned_date_sk=[$0], cr_returning_customer_sk=[$7], cr_returning_addr_sk=[$10], cr_return_amt_inc_tax=[$20])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_returns]], condition=[AND(IS NOT NULL($0), IS NOT NULL($10), IS NOT NULL($7))])
                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 1998), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_state=[$8])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[AND(IS NOT NULL($0), IS NOT NULL($8))])
          ImpalaProjectPassthroughRel(_o__c0=[*(/($1, CAST($2):DECIMAL(19, 0)), 1.2:DECIMAL(2, 1))], ctr_state=[$0])
            ImpalaAggregateRel(group=[{1}], agg#0=[sum($2)], agg#1=[count($2)], condition=[IS NOT NULL(CAST($2):DECIMAL(19, 0))])
              ImpalaAggregateRel(group=[{1, 6}], agg#0=[sum($3)])
                ImpalaJoinRel(condition=[=($2, $5)], joinType=[inner])
                  ImpalaJoinRel(condition=[=($0, $4)], joinType=[inner])
                    ImpalaProjectPassthroughRel(cr_returned_date_sk=[$0], cr_returning_customer_sk=[$7], cr_returning_addr_sk=[$10], cr_return_amt_inc_tax=[$20])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_returns]], condition=[AND(IS NOT NULL($0), IS NOT NULL($10))])
                    ImpalaProjectPassthroughRel(d_date_sk=[$0])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 1998), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_state=[$8])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[AND(IS NOT NULL($0), IS NOT NULL($8))])

PREHOOK: query: explain with customer_total_return as
 (select cr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
      sum(cr_return_amt_inc_tax) as ctr_total_return
 from impala_tpcds_catalog_returns
     ,impala_tpcds_date_dim
     ,impala_tpcds_customer_address
 where cr_returned_date_sk = d_date_sk 
   and d_year =1998
   and cr_returning_addr_sk = ca_address_sk 
 group by cr_returning_customer_sk
         ,ca_state )
  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 from customer_total_return ctr1
     ,impala_tpcds_customer_address
     ,impala_tpcds_customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
                  from customer_total_return ctr2 
                         where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'TX'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_returns
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain with customer_total_return as
 (select cr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
      sum(cr_return_amt_inc_tax) as ctr_total_return
 from impala_tpcds_catalog_returns
     ,impala_tpcds_date_dim
     ,impala_tpcds_customer_address
 where cr_returned_date_sk = d_date_sk 
   and d_year =1998
   and cr_returning_addr_sk = ca_address_sk 
 group by cr_returning_customer_sk
         ,ca_state )
  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 from customer_total_return ctr1
     ,impala_tpcds_customer_address
     ,impala_tpcds_customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
                  from customer_total_return ctr2 
                         where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'TX'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_returns
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F12:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=180.17KB mem-reservation=0B thread-reservation=1
  WRITE TO HDFS [_result_db_._result_table_, OVERWRITE=false]
  |  partitions=1
  |  output exprs: c_customer_id, c_salutation, c_first_name, c_last_name, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, 'TX', ca_zip, ca_country, ca_gmt_offset, ca_location_type, ctr_total_return
  |  mem-estimate=176B mem-reservation=0B thread-reservation=0
  |
  33:MERGING-EXCHANGE [UNPARTITIONED]
     order by: c_customer_id ASC NULLS LAST, c_salutation ASC NULLS LAST, c_first_name ASC NULLS LAST, c_last_name ASC NULLS LAST, ca_street_number ASC NULLS LAST, ca_street_name ASC NULLS LAST, ca_street_type ASC NULLS LAST, ca_suite_number ASC NULLS LAST, ca_city ASC NULLS LAST, ca_county ASC NULLS LAST, ca_zip ASC NULLS LAST, ca_country ASC NULLS LAST, ca_gmt_offset ASC NULLS LAST, ca_location_type ASC NULLS LAST, ctr_total_return ASC NULLS LAST
     limit: 100
     mem-estimate=180.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=20 row-size=176B cardinality=0
     in pipelines: 19(GETNEXT)

F11:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=4.01MB mem-reservation=3.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F12, EXCHANGE=33, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  19:TOP-N [LIMIT=100]
  |  order by: c_customer_id ASC NULLS LAST, c_salutation ASC NULLS LAST, c_first_name ASC NULLS LAST, c_last_name ASC NULLS LAST, ca_street_number ASC NULLS LAST, ca_street_name ASC NULLS LAST, ca_street_type ASC NULLS LAST, ca_suite_number ASC NULLS LAST, ca_city ASC NULLS LAST, ca_county ASC NULLS LAST, ca_zip ASC NULLS LAST, ca_country ASC NULLS LAST, ca_gmt_offset ASC NULLS LAST, ca_location_type ASC NULLS LAST, ctr_total_return ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=20 row-size=176B cardinality=0
  |  in pipelines: 19(GETNEXT), 01(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=19 row-size=176B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  18:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer.c_customer_sk = default.impala_tpcds_catalog_returns.cr_returning_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,10,18 row-size=252B cardinality=0
  |  in pipelines: 01(GETNEXT), 24(OPEN)
  |
  |--32:EXCHANGE [BROADCAST]
  |     mem-estimate=76.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=10,18 row-size=68B cardinality=0
  |     in pipelines: 24(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_address.ca_address_sk = default.impala_tpcds_customer.c_current_addr_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=184B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--20:EXCHANGE [BROADCAST]
  |     mem-estimate=60.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=56B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address.ca_address_sk IS NOT NULL, default.impala_tpcds_customer_address.ca_state = 'TX'
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_customer_address.ca_state = 'TX'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=128B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F11, EXCHANGE=20, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer.c_current_addr_sk IS NOT NULL, default.impala_tpcds_customer.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=56B cardinality=0
     in pipelines: 02(GETNEXT)

F05:PLAN FRAGMENT [HASH(default.impala_tpcds_catalog_returns.cr_returning_customer_sk,default.impala_tpcds_customer_address_0.ca_state)] hosts=1 instances=1
Per-Host Resources: mem-estimate=130.01MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F11, EXCHANGE=32, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  17:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_address_0.ca_state = default.impala_tpcds_customer_address_1.ca_state
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: _impala_builtins.sum(default.impala_tpcds_catalog_returns.cr_return_amt_inc_tax) > _impala_builtins.multiply(_impala_builtins.divide(_impala_builtins.sum(_impala_builtins.sum(default.impala_tpcds_catalog_returns_0.cr_return_amt_inc_tax)), _impala_builtins.casttodecimal(_impala_builtins.count(_impala_builtins.sum(default.impala_tpcds_catalog_returns_0.cr_return_amt_inc_tax)))), CAST(1.2 AS DECIMAL(2,1)))
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=10,18 row-size=68B cardinality=0
  |  in pipelines: 24(GETNEXT), 30(OPEN)
  |
  |--31:EXCHANGE [BROADCAST]
  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=18 row-size=36B cardinality=0
  |     in pipelines: 30(GETNEXT)
  |
  24:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_catalog_returns.cr_return_amt_inc_tax)
  |  group by: default.impala_tpcds_catalog_returns.cr_returning_customer_sk, default.impala_tpcds_customer_address_0.ca_state
  |  having: _impala_builtins.sum(default.impala_tpcds_catalog_returns.cr_return_amt_inc_tax) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=10 row-size=32B cardinality=0
  |  in pipelines: 24(GETNEXT), 04(OPEN)
  |
  23:EXCHANGE [HASH(default.impala_tpcds_catalog_returns.cr_returning_customer_sk,default.impala_tpcds_customer_address_0.ca_state)]
     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=32B cardinality=0
     in pipelines: 04(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=23, HASH(default.impala_tpcds_catalog_returns.cr_returning_customer_sk,default.impala_tpcds_customer_address_0.ca_state)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_catalog_returns.cr_return_amt_inc_tax)
  |  group by: default.impala_tpcds_catalog_returns.cr_returning_customer_sk, default.impala_tpcds_customer_address_0.ca_state
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=10 row-size=32B cardinality=0
  |  in pipelines: 04(GETNEXT)
  |
  08:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_returns.cr_returning_addr_sk = default.impala_tpcds_customer_address_0.ca_address_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=4,6,8 row-size=40B cardinality=0
  |  in pipelines: 04(GETNEXT), 07(OPEN)
  |
  |--22:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=16B cardinality=0
  |     in pipelines: 07(GETNEXT)
  |
  06:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_returns.cr_returned_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=4,6 row-size=24B cardinality=0
  |  in pipelines: 04(GETNEXT), 05(OPEN)
  |
  |--21:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=8B cardinality=0
  |     in pipelines: 05(GETNEXT)
  |
  04:SCAN HDFS [default.impala_tpcds_catalog_returns, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_returns.cr_returned_date_sk IS NOT NULL, default.impala_tpcds_catalog_returns.cr_returning_addr_sk IS NOT NULL, default.impala_tpcds_catalog_returns.cr_returning_customer_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=16B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=21, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_year = CAST(1998 AS INT)
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_year = CAST(1998 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=8B cardinality=0
     in pipelines: 05(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=22, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address_0.ca_address_sk IS NOT NULL, default.impala_tpcds_customer_address_0.ca_state IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=16B cardinality=0
     in pipelines: 07(GETNEXT)

F10:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_address_1.ca_state)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.04MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=31, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  30:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(_impala_builtins.sum(default.impala_tpcds_catalog_returns_0.cr_return_amt_inc_tax)), _impala_builtins.count:merge(_impala_builtins.sum(default.impala_tpcds_catalog_returns_0.cr_return_amt_inc_tax))
  |  group by: default.impala_tpcds_customer_address_1.ca_state
  |  having: _impala_builtins.casttodecimal(_impala_builtins.count(_impala_builtins.sum(default.impala_tpcds_catalog_returns_0.cr_return_amt_inc_tax))) IS NOT NULL
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=18 row-size=36B cardinality=0
  |  in pipelines: 30(GETNEXT), 28(OPEN)
  |
  29:EXCHANGE [HASH(default.impala_tpcds_customer_address_1.ca_state)]
     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=18 row-size=36B cardinality=0
     in pipelines: 28(GETNEXT)

F09:PLAN FRAGMENT [HASH(default.impala_tpcds_catalog_returns_0.cr_returning_customer_sk,default.impala_tpcds_customer_address_1.ca_state)] hosts=1 instances=1
Per-Host Resources: mem-estimate=256.04MB mem-reservation=68.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F10, EXCHANGE=29, HASH(default.impala_tpcds_customer_address_1.ca_state)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  16:AGGREGATE [STREAMING]
  |  output: sum(_impala_builtins.sum(default.impala_tpcds_catalog_returns_0.cr_return_amt_inc_tax)), count(_impala_builtins.sum(default.impala_tpcds_catalog_returns_0.cr_return_amt_inc_tax))
  |  group by: default.impala_tpcds_customer_address_1.ca_state
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=18 row-size=36B cardinality=0
  |  in pipelines: 28(GETNEXT)
  |
  28:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_catalog_returns_0.cr_return_amt_inc_tax)
  |  group by: default.impala_tpcds_catalog_returns_0.cr_returning_customer_sk, default.impala_tpcds_customer_address_1.ca_state
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=17 row-size=32B cardinality=0
  |  in pipelines: 28(GETNEXT), 10(OPEN)
  |
  27:EXCHANGE [HASH(default.impala_tpcds_catalog_returns_0.cr_returning_customer_sk,default.impala_tpcds_customer_address_1.ca_state)]
     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=32B cardinality=0
     in pipelines: 10(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F09, EXCHANGE=27, HASH(default.impala_tpcds_catalog_returns_0.cr_returning_customer_sk,default.impala_tpcds_customer_address_1.ca_state)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  15:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_catalog_returns_0.cr_return_amt_inc_tax)
  |  group by: default.impala_tpcds_catalog_returns_0.cr_returning_customer_sk, default.impala_tpcds_customer_address_1.ca_state
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=17 row-size=32B cardinality=0
  |  in pipelines: 10(GETNEXT)
  |
  14:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_returns_0.cr_returning_addr_sk = default.impala_tpcds_customer_address_1.ca_address_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=11,13,15 row-size=40B cardinality=0
  |  in pipelines: 10(GETNEXT), 13(OPEN)
  |
  |--26:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=15 row-size=16B cardinality=0
  |     in pipelines: 13(GETNEXT)
  |
  12:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_returns_0.cr_returned_date_sk = default.impala_tpcds_date_dim_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=11,13 row-size=24B cardinality=0
  |  in pipelines: 10(GETNEXT), 11(OPEN)
  |
  |--25:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=13 row-size=8B cardinality=0
  |     in pipelines: 11(GETNEXT)
  |
  10:SCAN HDFS [default.impala_tpcds_catalog_returns, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_returns_0.cr_returned_date_sk IS NOT NULL, default.impala_tpcds_catalog_returns_0.cr_returning_addr_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=16B cardinality=0
     in pipelines: 10(GETNEXT)

F07:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=25, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_0.d_year = CAST(1998 AS INT)
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_0.d_year = CAST(1998 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=8B cardinality=0
     in pipelines: 11(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=26, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address_1.ca_address_sk IS NOT NULL, default.impala_tpcds_customer_address_1.ca_state IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=16B cardinality=0
     in pipelines: 13(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

