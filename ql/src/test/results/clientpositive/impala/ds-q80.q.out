PREHOOK: query: explain cbo with ssr as
 (select  s_store_id as store_id,
          sum(ss_ext_sales_price) as sales,
          sum(coalesce(sr_return_amt, 0)) as returns,
          sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit
  from impala_tpcds_store_sales left outer join impala_tpcds_store_returns on
         (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),
     impala_tpcds_date_dim,
     impala_tpcds_store,
     impala_tpcds_item,
     impala_tpcds_promotion
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date) 
                  and (cast('2002-08-06' as date) +  30 days)
       and ss_store_sk = s_store_sk
       and ss_item_sk = i_item_sk
       and i_current_price > 50
       and ss_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
 group by s_store_id)
 ,
 csr as
 (select  cp_catalog_page_id as catalog_page_id,
          sum(cs_ext_sales_price) as sales,
          sum(coalesce(cr_return_amount, 0)) as returns,
          sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit
  from impala_tpcds_catalog_sales left outer join impala_tpcds_catalog_returns on
         (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),
     impala_tpcds_date_dim,
     impala_tpcds_catalog_page,
     impala_tpcds_item,
     impala_tpcds_promotion
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date)
                  and (cast('2002-08-06' as date) +  30 days)
        and cs_catalog_page_sk = cp_catalog_page_sk
       and cs_item_sk = i_item_sk
       and i_current_price > 50
       and cs_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by cp_catalog_page_id)
 ,
 wsr as
 (select  web_site_id,
          sum(ws_ext_sales_price) as sales,
          sum(coalesce(wr_return_amt, 0)) as returns,
          sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit
  from impala_tpcds_web_sales left outer join impala_tpcds_web_returns on
         (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),
     impala_tpcds_date_dim,
     impala_tpcds_web_site,
     impala_tpcds_item,
     impala_tpcds_promotion
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date)
                  and (cast('2002-08-06' as date) +  30 days)
        and ws_web_site_sk = web_site_sk
       and ws_item_sk = i_item_sk
       and i_current_price > 50
       and ws_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || store_id as id
        , sales
        , returns
        , profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || catalog_page_id as id
        , sales
        , returns
        , profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_page
PREHOOK: Input: default@impala_tpcds_catalog_returns
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_promotion
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_returns
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_returns
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Input: default@impala_tpcds_web_site
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo with ssr as
 (select  s_store_id as store_id,
          sum(ss_ext_sales_price) as sales,
          sum(coalesce(sr_return_amt, 0)) as returns,
          sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit
  from impala_tpcds_store_sales left outer join impala_tpcds_store_returns on
         (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),
     impala_tpcds_date_dim,
     impala_tpcds_store,
     impala_tpcds_item,
     impala_tpcds_promotion
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date) 
                  and (cast('2002-08-06' as date) +  30 days)
       and ss_store_sk = s_store_sk
       and ss_item_sk = i_item_sk
       and i_current_price > 50
       and ss_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
 group by s_store_id)
 ,
 csr as
 (select  cp_catalog_page_id as catalog_page_id,
          sum(cs_ext_sales_price) as sales,
          sum(coalesce(cr_return_amount, 0)) as returns,
          sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit
  from impala_tpcds_catalog_sales left outer join impala_tpcds_catalog_returns on
         (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),
     impala_tpcds_date_dim,
     impala_tpcds_catalog_page,
     impala_tpcds_item,
     impala_tpcds_promotion
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date)
                  and (cast('2002-08-06' as date) +  30 days)
        and cs_catalog_page_sk = cp_catalog_page_sk
       and cs_item_sk = i_item_sk
       and i_current_price > 50
       and cs_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by cp_catalog_page_id)
 ,
 wsr as
 (select  web_site_id,
          sum(ws_ext_sales_price) as sales,
          sum(coalesce(wr_return_amt, 0)) as returns,
          sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit
  from impala_tpcds_web_sales left outer join impala_tpcds_web_returns on
         (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),
     impala_tpcds_date_dim,
     impala_tpcds_web_site,
     impala_tpcds_item,
     impala_tpcds_promotion
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date)
                  and (cast('2002-08-06' as date) +  30 days)
        and ws_web_site_sk = web_site_sk
       and ws_item_sk = i_item_sk
       and i_current_price > 50
       and ws_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || store_id as id
        , sales
        , returns
        , profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || catalog_page_id as id
        , sales
        , returns
        , profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_page
POSTHOOK: Input: default@impala_tpcds_catalog_returns
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_promotion
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_returns
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_returns
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Input: default@impala_tpcds_web_site
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[100])
  ImpalaAggregateRel(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], agg#0=[sum($2)], agg#1=[sum($3)], agg#2=[sum($4)])
    ImpalaUnionRel(all=[true])
      ImpalaProjectPassthroughRel(channel=[_UTF-16LE'store channel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], id=[||(_UTF-16LE'store', $0)], sales=[$1], returns=[$2], profit=[$3])
        ImpalaAggregateRel(group=[{0}], agg#0=[sum($1)], agg#1=[sum($2)], agg#2=[sum($3)])
          ImpalaProjectPassthroughRel($f0=[$15], $f1=[$4], $f2=[COALESCE($9, 0:DECIMAL(3, 0))], $f3=[-($5, COALESCE($10, 0:DECIMAL(3, 0)))])
            ImpalaJoinRel(condition=[=($1, $14)], joinType=[inner])
              ImpalaJoinRel(condition=[=($2, $13)], joinType=[inner])
                ImpalaJoinRel(condition=[=($0, $12)], joinType=[inner])
                  ImpalaJoinRel(condition=[=($6, $11)], joinType=[inner])
                    ImpalaJoinRel(condition=[AND(=($0, $7), =($3, $8))], joinType=[left])
                      ImpalaProjectPassthroughRel(ss_item_sk=[$1], ss_store_sk=[$6], ss_promo_sk=[$7], ss_ticket_number=[$8], ss_ext_sales_price=[$14], ss_net_profit=[$21], ss_sold_date_sk=[$22])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($6), IS NOT NULL($1), IS NOT NULL($7))])
                      ImpalaProjectPassthroughRel(sr_item_sk=[$2], sr_ticket_number=[$9], sr_return_amt=[$11], sr_net_loss=[$19])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_returns]], condition=[AND(IS NOT NULL($2), IS NOT NULL($9))])
                    ImpalaProjectPassthroughRel(d_date_sk=[$0])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), CAST(CAST(_UTF-16LE'2002-08-06'):DATE NOT NULL):TIMESTAMP(9) NOT NULL, +(CAST(CAST(_UTF-16LE'2002-08-06'):DATE NOT NULL):TIMESTAMP(9) NOT NULL, 2592000000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(i_item_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(>($5, 50), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(p_promo_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_promotion]], condition=[AND(=($11, _UTF-16LE'N'), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(s_store_sk=[$0], s_store_id=[$1])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[IS NOT NULL($0)])
      ImpalaProjectPassthroughRel(channel=[_UTF-16LE'catalog channel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], id=[||(_UTF-16LE'catalog_page', $0)], sales=[$1], returns=[$2], profit=[$3])
        ImpalaAggregateRel(group=[{0}], agg#0=[sum($1)], agg#1=[sum($2)], agg#2=[sum($3)])
          ImpalaProjectPassthroughRel($f0=[$15], $f1=[$5], $f2=[COALESCE($9, 0:DECIMAL(3, 0))], $f3=[-($6, COALESCE($10, 0:DECIMAL(3, 0)))])
            ImpalaJoinRel(condition=[=($1, $14)], joinType=[inner])
              ImpalaJoinRel(condition=[=($3, $13)], joinType=[inner])
                ImpalaJoinRel(condition=[=($2, $12)], joinType=[inner])
                  ImpalaJoinRel(condition=[=($0, $11)], joinType=[inner])
                    ImpalaJoinRel(condition=[AND(=($2, $7), =($4, $8))], joinType=[left])
                      ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_catalog_page_sk=[$12], cs_item_sk=[$15], cs_promo_sk=[$16], cs_order_number=[$17], cs_ext_sales_price=[$23], cs_net_profit=[$33])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($12), IS NOT NULL($15), IS NOT NULL($16))])
                      ImpalaProjectPassthroughRel(cr_item_sk=[$2], cr_order_number=[$16], cr_return_amount=[$18], cr_net_loss=[$26])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_returns]], condition=[AND(IS NOT NULL($2), IS NOT NULL($16))])
                    ImpalaProjectPassthroughRel(d_date_sk=[$0])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), CAST(CAST(_UTF-16LE'2002-08-06'):DATE NOT NULL):TIMESTAMP(9) NOT NULL, +(CAST(CAST(_UTF-16LE'2002-08-06'):DATE NOT NULL):TIMESTAMP(9) NOT NULL, 2592000000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(i_item_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(>($5, 50), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(p_promo_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_promotion]], condition=[AND(=($11, _UTF-16LE'N'), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(cp_catalog_page_sk=[$0], cp_catalog_page_id=[$1])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_page]], condition=[IS NOT NULL($0)])
      ImpalaProjectPassthroughRel(channel=[_UTF-16LE'web channel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], id=[||(_UTF-16LE'web_site', $0)], sales=[$1], returns=[$2], profit=[$3])
        ImpalaAggregateRel(group=[{0}], agg#0=[sum($1)], agg#1=[sum($2)], agg#2=[sum($3)])
          ImpalaProjectPassthroughRel($f0=[$15], $f1=[$5], $f2=[COALESCE($9, 0:DECIMAL(3, 0))], $f3=[-($6, COALESCE($10, 0:DECIMAL(3, 0)))])
            ImpalaJoinRel(condition=[=($2, $14)], joinType=[inner])
              ImpalaJoinRel(condition=[=($3, $13)], joinType=[inner])
                ImpalaJoinRel(condition=[=($1, $12)], joinType=[inner])
                  ImpalaJoinRel(condition=[=($0, $11)], joinType=[inner])
                    ImpalaJoinRel(condition=[AND(=($1, $7), =($4, $8))], joinType=[left])
                      ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_web_site_sk=[$13], ws_promo_sk=[$16], ws_order_number=[$17], ws_ext_sales_price=[$23], ws_net_profit=[$33])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($13), IS NOT NULL($3), IS NOT NULL($16))])
                      ImpalaProjectPassthroughRel(wr_item_sk=[$2], wr_order_number=[$13], wr_return_amt=[$15], wr_net_loss=[$23])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_returns]], condition=[AND(IS NOT NULL($2), IS NOT NULL($13))])
                    ImpalaProjectPassthroughRel(d_date_sk=[$0])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), CAST(CAST(_UTF-16LE'2002-08-06'):DATE NOT NULL):TIMESTAMP(9) NOT NULL, +(CAST(CAST(_UTF-16LE'2002-08-06'):DATE NOT NULL):TIMESTAMP(9) NOT NULL, 2592000000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(i_item_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(>($5, 50), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(p_promo_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_promotion]], condition=[AND(=($11, _UTF-16LE'N'), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(web_site_sk=[$0], web_site_id=[$1])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_site]], condition=[IS NOT NULL($0)])

PREHOOK: query: explain with ssr as
 (select  s_store_id as store_id,
          sum(ss_ext_sales_price) as sales,
          sum(coalesce(sr_return_amt, 0)) as returns,
          sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit
  from impala_tpcds_store_sales left outer join impala_tpcds_store_returns on
         (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),
     impala_tpcds_date_dim,
     impala_tpcds_store,
     impala_tpcds_item,
     impala_tpcds_promotion
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date) 
                  and (cast('2002-08-06' as date) +  30 days)
       and ss_store_sk = s_store_sk
       and ss_item_sk = i_item_sk
       and i_current_price > 50
       and ss_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
 group by s_store_id)
 ,
 csr as
 (select  cp_catalog_page_id as catalog_page_id,
          sum(cs_ext_sales_price) as sales,
          sum(coalesce(cr_return_amount, 0)) as returns,
          sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit
  from impala_tpcds_catalog_sales left outer join impala_tpcds_catalog_returns on
         (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),
     impala_tpcds_date_dim,
     impala_tpcds_catalog_page,
     impala_tpcds_item,
     impala_tpcds_promotion
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date)
                  and (cast('2002-08-06' as date) +  30 days)
        and cs_catalog_page_sk = cp_catalog_page_sk
       and cs_item_sk = i_item_sk
       and i_current_price > 50
       and cs_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by cp_catalog_page_id)
 ,
 wsr as
 (select  web_site_id,
          sum(ws_ext_sales_price) as sales,
          sum(coalesce(wr_return_amt, 0)) as returns,
          sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit
  from impala_tpcds_web_sales left outer join impala_tpcds_web_returns on
         (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),
     impala_tpcds_date_dim,
     impala_tpcds_web_site,
     impala_tpcds_item,
     impala_tpcds_promotion
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date)
                  and (cast('2002-08-06' as date) +  30 days)
        and ws_web_site_sk = web_site_sk
       and ws_item_sk = i_item_sk
       and i_current_price > 50
       and ws_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || store_id as id
        , sales
        , returns
        , profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || catalog_page_id as id
        , sales
        , returns
        , profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_page
PREHOOK: Input: default@impala_tpcds_catalog_returns
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Input: default@impala_tpcds_promotion
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_returns
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_returns
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Input: default@impala_tpcds_web_site
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain with ssr as
 (select  s_store_id as store_id,
          sum(ss_ext_sales_price) as sales,
          sum(coalesce(sr_return_amt, 0)) as returns,
          sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit
  from impala_tpcds_store_sales left outer join impala_tpcds_store_returns on
         (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),
     impala_tpcds_date_dim,
     impala_tpcds_store,
     impala_tpcds_item,
     impala_tpcds_promotion
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date) 
                  and (cast('2002-08-06' as date) +  30 days)
       and ss_store_sk = s_store_sk
       and ss_item_sk = i_item_sk
       and i_current_price > 50
       and ss_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
 group by s_store_id)
 ,
 csr as
 (select  cp_catalog_page_id as catalog_page_id,
          sum(cs_ext_sales_price) as sales,
          sum(coalesce(cr_return_amount, 0)) as returns,
          sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit
  from impala_tpcds_catalog_sales left outer join impala_tpcds_catalog_returns on
         (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),
     impala_tpcds_date_dim,
     impala_tpcds_catalog_page,
     impala_tpcds_item,
     impala_tpcds_promotion
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date)
                  and (cast('2002-08-06' as date) +  30 days)
        and cs_catalog_page_sk = cp_catalog_page_sk
       and cs_item_sk = i_item_sk
       and i_current_price > 50
       and cs_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by cp_catalog_page_id)
 ,
 wsr as
 (select  web_site_id,
          sum(ws_ext_sales_price) as sales,
          sum(coalesce(wr_return_amt, 0)) as returns,
          sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit
  from impala_tpcds_web_sales left outer join impala_tpcds_web_returns on
         (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),
     impala_tpcds_date_dim,
     impala_tpcds_web_site,
     impala_tpcds_item,
     impala_tpcds_promotion
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-06' as date)
                  and (cast('2002-08-06' as date) +  30 days)
        and ws_web_site_sk = web_site_sk
       and ws_item_sk = i_item_sk
       and i_current_price > 50
       and ws_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || store_id as id
        , sales
        , returns
        , profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || catalog_page_id as id
        , sales
        , returns
        , profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_page
POSTHOOK: Input: default@impala_tpcds_catalog_returns
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
POSTHOOK: Input: default@impala_tpcds_promotion
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_returns
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_returns
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Input: default@impala_tpcds_web_site
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F23:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=76.07KB mem-reservation=0B thread-reservation=1
  WRITE TO HDFS [_result_db_._result_table_, OVERWRITE=false]
  |  partitions=1
  |  output exprs: CASE valid_tid(39,40,41) WHEN 39 THEN channel WHEN 40 THEN channel WHEN 41 THEN NULL END, CASE valid_tid(39,40,41) WHEN 39 THEN id WHEN 40 THEN NULL WHEN 41 THEN NULL END, aggif(valid_tid(39,40,41) IN (39, 40, 41), CASE valid_tid(39,40,41) WHEN 39 THEN _impala_builtins.sum(sales) WHEN 40 THEN sum(sales) WHEN 41 THEN sum(sales) END), aggif(valid_tid(39,40,41) IN (39, 40, 41), CASE valid_tid(39,40,41) WHEN 39 THEN _impala_builtins.sum(returns) WHEN 40 THEN sum(returns) WHEN 41 THEN sum(returns) END), aggif(valid_tid(39,40,41) IN (39, 40, 41), CASE valid_tid(39,40,41) WHEN 39 THEN _impala_builtins.sum(profit) WHEN 40 THEN sum(profit) WHEN 41 THEN sum(profit) END)
  |  mem-estimate=72B mem-reservation=0B thread-reservation=0
  |
  63:MERGING-EXCHANGE [UNPARTITIONED]
     order by: CASE valid_tid(39,40,41) WHEN 39 THEN channel WHEN 40 THEN channel WHEN 41 THEN NULL END ASC NULLS LAST, CASE valid_tid(39,40,41) WHEN 39 THEN id WHEN 40 THEN NULL WHEN 41 THEN NULL END ASC NULLS LAST
     limit: 100
     mem-estimate=76.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=43 row-size=72B cardinality=0
     in pipelines: 39(GETNEXT)

F22:PLAN FRAGMENT [HASH(CASE valid_tid(39,40,41) WHEN 39 THEN murmur_hash(channel) WHEN 40 THEN murmur_hash(channel) WHEN 41 THEN murmur_hash(NULL) END,CASE valid_tid(39,40,41) WHEN 39 THEN murmur_hash(id) WHEN 40 THEN murmur_hash(NULL) WHEN 41 THEN murmur_hash(NULL) END)] hosts=1 instances=1
Per-Host Resources: mem-estimate=394.00MB mem-reservation=103.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F23, EXCHANGE=63, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  39:TOP-N [LIMIT=100]
  |  order by: CASE valid_tid(39,40,41) WHEN 39 THEN channel WHEN 40 THEN channel WHEN 41 THEN NULL END ASC NULLS LAST, CASE valid_tid(39,40,41) WHEN 39 THEN id WHEN 40 THEN NULL WHEN 41 THEN NULL END ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=43 row-size=72B cardinality=0
  |  in pipelines: 39(GETNEXT), 38(OPEN)
  |
  38:AGGREGATE [FINALIZE]
  |  output: aggif(valid_tid(39,40,41) IN (CAST(39 AS INT), CAST(40 AS INT), CAST(41 AS INT)), CASE valid_tid(39,40,41) WHEN CAST(39 AS INT) THEN _impala_builtins.sum(sales) WHEN CAST(40 AS INT) THEN sum(sales) WHEN CAST(41 AS INT) THEN sum(sales) END), aggif(valid_tid(39,40,41) IN (CAST(39 AS INT), CAST(40 AS INT), CAST(41 AS INT)), CASE valid_tid(39,40,41) WHEN CAST(39 AS INT) THEN _impala_builtins.sum(returns) WHEN CAST(40 AS INT) THEN sum(returns) WHEN CAST(41 AS INT) THEN sum(returns) END), aggif(valid_tid(39,40,41) IN (CAST(39 AS INT), CAST(40 AS INT), CAST(41 AS INT)), CASE valid_tid(39,40,41) WHEN CAST(39 AS INT) THEN _impala_builtins.sum(profit) WHEN CAST(40 AS INT) THEN sum(profit) WHEN CAST(41 AS INT) THEN sum(profit) END)
  |  group by: CASE valid_tid(39,40,41) WHEN CAST(39 AS INT) THEN channel WHEN CAST(40 AS INT) THEN channel WHEN CAST(41 AS INT) THEN NULL END, CASE valid_tid(39,40,41) WHEN CAST(39 AS INT) THEN id WHEN CAST(40 AS INT) THEN NULL WHEN CAST(41 AS INT) THEN NULL END, CASE valid_tid(39,40,41) WHEN CAST(39 AS INT) THEN CAST(39 AS INT) WHEN CAST(40 AS INT) THEN CAST(40 AS INT) WHEN CAST(41 AS INT) THEN CAST(41 AS INT) END
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=42 row-size=76B cardinality=0
  |  in pipelines: 38(GETNEXT), 62(OPEN)
  |
  62:AGGREGATE [FINALIZE]
  |  Class 0
  |    output: _impala_builtins.sum:merge(sales), _impala_builtins.sum:merge(returns), _impala_builtins.sum:merge(profit)
  |    group by: channel, id
  |  Class 1
  |    output: sum:merge(sales), sum:merge(returns), sum:merge(profit)
  |    group by: channel, NULL
  |  Class 2
  |    output: sum:merge(sales), sum:merge(returns), sum:merge(profit)
  |    group by: NULL, NULL
  |  mem-estimate=266.00MB mem-reservation=69.94MB thread-reservation=0
  |  tuple-ids=39N,40N,41N row-size=216B cardinality=0
  |  in pipelines: 62(GETNEXT), 46(OPEN), 53(OPEN), 60(OPEN)
  |
  61:EXCHANGE [HASH(CASE valid_tid(39,40,41) WHEN 39 THEN murmur_hash(channel) WHEN 40 THEN murmur_hash(channel) WHEN 41 THEN murmur_hash(NULL) END,CASE valid_tid(39,40,41) WHEN 39 THEN murmur_hash(id) WHEN 40 THEN murmur_hash(NULL) WHEN 41 THEN murmur_hash(NULL) END)]
     mem-estimate=228.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=39N,40N,41N row-size=216B cardinality=0
     in pipelines: 46(GETNEXT), 53(GETNEXT), 60(GETNEXT)

F21:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=394.06MB mem-reservation=104.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F22, EXCHANGE=61, HASH(CASE valid_tid(39,40,41) WHEN 39 THEN murmur_hash(channel) WHEN 40 THEN murmur_hash(channel) WHEN 41 THEN murmur_hash(NULL) END,CASE valid_tid(39,40,41) WHEN 39 THEN murmur_hash(id) WHEN 40 THEN murmur_hash(NULL) WHEN 41 THEN murmur_hash(NULL) END)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  37:AGGREGATE [STREAMING]
  |  Class 0
  |    output: sum(sales), sum(returns), sum(profit)
  |    group by: channel, id
  |  Class 1
  |    output: sum(sales), sum(returns), sum(profit)
  |    group by: channel, NULL
  |  Class 2
  |    output: sum(sales), sum(returns), sum(profit)
  |    group by: NULL, NULL
  |  mem-estimate=266.00MB mem-reservation=70.00MB thread-reservation=0
  |  tuple-ids=39N,40N,41N row-size=216B cardinality=0
  |  in pipelines: 46(GETNEXT), 53(GETNEXT), 60(GETNEXT)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=0 row-size=72B cardinality=0
  |  in pipelines: 46(GETNEXT), 53(GETNEXT), 60(GETNEXT)
  |
  |--60:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.sum:merge(default.impala_tpcds_web_sales.ws_ext_sales_price), _impala_builtins.sum:merge(_impala_builtins.coalesce(default.impala_tpcds_web_returns.wr_return_amt, 0)), _impala_builtins.sum:merge(_impala_builtins.subtract(default.impala_tpcds_web_sales.ws_net_profit, _impala_builtins.coalesce(default.impala_tpcds_web_returns.wr_net_loss, 0)))
  |  |  group by: default.impala_tpcds_web_site.web_site_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=38 row-size=60B cardinality=0
  |  |  in pipelines: 60(GETNEXT), 25(OPEN)
  |  |
  |  59:EXCHANGE [HASH(default.impala_tpcds_web_site.web_site_id)]
  |     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=38 row-size=60B cardinality=0
  |     in pipelines: 25(GETNEXT)
  |
  |--53:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.sum:merge(default.impala_tpcds_catalog_sales.cs_ext_sales_price), _impala_builtins.sum:merge(_impala_builtins.coalesce(default.impala_tpcds_catalog_returns.cr_return_amount, 0)), _impala_builtins.sum:merge(_impala_builtins.subtract(default.impala_tpcds_catalog_sales.cs_net_profit, _impala_builtins.coalesce(default.impala_tpcds_catalog_returns.cr_net_loss, 0)))
  |  |  group by: default.impala_tpcds_catalog_page.cp_catalog_page_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=25 row-size=60B cardinality=0
  |  |  in pipelines: 53(GETNEXT), 13(OPEN)
  |  |
  |  52:EXCHANGE [HASH(default.impala_tpcds_catalog_page.cp_catalog_page_id)]
  |     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=25 row-size=60B cardinality=0
  |     in pipelines: 13(GETNEXT)
  |
  46:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_ext_sales_price), _impala_builtins.sum:merge(_impala_builtins.coalesce(default.impala_tpcds_store_returns.sr_return_amt, 0)), _impala_builtins.sum:merge(_impala_builtins.subtract(default.impala_tpcds_store_sales.ss_net_profit, _impala_builtins.coalesce(default.impala_tpcds_store_returns.sr_net_loss, 0)))
  |  group by: default.impala_tpcds_store.s_store_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=60B cardinality=0
  |  in pipelines: 46(GETNEXT), 01(OPEN)
  |
  45:EXCHANGE [HASH(default.impala_tpcds_store.s_store_id)]
     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=60B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=137.79MB mem-reservation=43.69MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F21, EXCHANGE=45, HASH(default.impala_tpcds_store.s_store_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales.ss_ext_sales_price), sum(_impala_builtins.coalesce(default.impala_tpcds_store_returns.sr_return_amt, CAST(0 AS DECIMAL(3,0)))), sum(_impala_builtins.subtract(default.impala_tpcds_store_sales.ss_net_profit, _impala_builtins.coalesce(default.impala_tpcds_store_returns.sr_net_loss, CAST(0 AS DECIMAL(3,0)))))
  |  group by: default.impala_tpcds_store.s_store_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=12 row-size=60B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  11:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_store_sk = default.impala_tpcds_store.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,2N,4,6,8,10 row-size=120B cardinality=0
  |  in pipelines: 01(GETNEXT), 10(OPEN)
  |
  |--44:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=10 row-size=16B cardinality=0
  |     in pipelines: 10(GETNEXT)
  |
  09:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_promo_sk = default.impala_tpcds_promotion.p_promo_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,2N,4,6,8 row-size=104B cardinality=0
  |  in pipelines: 01(GETNEXT), 08(OPEN)
  |
  |--43:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=16B cardinality=0
  |     in pipelines: 08(GETNEXT)
  |
  07:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,2N,4,6 row-size=88B cardinality=0
  |  in pipelines: 01(GETNEXT), 06(OPEN)
  |
  |--42:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=12B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,2N,4 row-size=76B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--41:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=16B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_item_sk = default.impala_tpcds_store_returns.sr_item_sk, default.impala_tpcds_store_sales.ss_ticket_number = default.impala_tpcds_store_returns.sr_ticket_number
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,2N row-size=60B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--40:EXCHANGE [BROADCAST]
  |     mem-estimate=28.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=24B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_item_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_promo_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_item_sk, ss_store_sk, ss_promo_sk, ss_ticket_number, ss_ext_sales_price, ss_net_profit
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=36B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=40, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_store_returns, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store_returns.sr_item_sk IS NOT NULL, default.impala_tpcds_store_returns.sr_ticket_number IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=24B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=41, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, _impala_builtins.casttotimestamp(default.impala_tpcds_date_dim.d_date) >= _impala_builtins.casttotimestamp(_impala_builtins.casttodate('2002-08-06')) AND _impala_builtins.casttotimestamp(default.impala_tpcds_date_dim.d_date) <= _IMPALA_BUILTINS.MILLISECONDS_ADD(_impala_builtins.casttotimestamp(_impala_builtins.casttodate('2002-08-06')), INTERVAL CAST(2592000000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=16B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=42, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL, default.impala_tpcds_item.i_current_price > CAST(50 AS DECIMAL(7,2))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_item.i_current_price > CAST(50 AS DECIMAL(7,2))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=12B cardinality=0
     in pipelines: 06(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=43, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:SCAN HDFS [default.impala_tpcds_promotion, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_promotion.p_promo_sk IS NOT NULL, default.impala_tpcds_promotion.p_channel_tv = 'N'
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_promotion.p_channel_tv = 'N'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=16B cardinality=0
     in pipelines: 08(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=44, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store.s_store_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=16B cardinality=0
     in pipelines: 10(GETNEXT)

F07:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=137.79MB mem-reservation=43.69MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F21, EXCHANGE=52, HASH(default.impala_tpcds_catalog_page.cp_catalog_page_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  24:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_catalog_sales.cs_ext_sales_price), sum(_impala_builtins.coalesce(default.impala_tpcds_catalog_returns.cr_return_amount, CAST(0 AS DECIMAL(3,0)))), sum(_impala_builtins.subtract(default.impala_tpcds_catalog_sales.cs_net_profit, _impala_builtins.coalesce(default.impala_tpcds_catalog_returns.cr_net_loss, CAST(0 AS DECIMAL(3,0)))))
  |  group by: default.impala_tpcds_catalog_page.cp_catalog_page_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=25 row-size=60B cardinality=0
  |  in pipelines: 13(GETNEXT)
  |
  23:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_catalog_page_sk = default.impala_tpcds_catalog_page.cp_catalog_page_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=13,15N,17,19,21,23 row-size=120B cardinality=0
  |  in pipelines: 13(GETNEXT), 22(OPEN)
  |
  |--51:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=23 row-size=16B cardinality=0
  |     in pipelines: 22(GETNEXT)
  |
  21:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_promo_sk = default.impala_tpcds_promotion_0.p_promo_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=13,15N,17,19,21 row-size=104B cardinality=0
  |  in pipelines: 13(GETNEXT), 20(OPEN)
  |
  |--50:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=21 row-size=16B cardinality=0
  |     in pipelines: 20(GETNEXT)
  |
  19:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_item_sk = default.impala_tpcds_item_0.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=13,15N,17,19 row-size=88B cardinality=0
  |  in pipelines: 13(GETNEXT), 18(OPEN)
  |
  |--49:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=19 row-size=12B cardinality=0
  |     in pipelines: 18(GETNEXT)
  |
  17:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_sold_date_sk = default.impala_tpcds_date_dim_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=13,15N,17 row-size=76B cardinality=0
  |  in pipelines: 13(GETNEXT), 16(OPEN)
  |
  |--48:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=17 row-size=16B cardinality=0
  |     in pipelines: 16(GETNEXT)
  |
  15:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_item_sk = default.impala_tpcds_catalog_returns.cr_item_sk, default.impala_tpcds_catalog_sales.cs_order_number = default.impala_tpcds_catalog_returns.cr_order_number
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=13,15N row-size=60B cardinality=0
  |  in pipelines: 13(GETNEXT), 14(OPEN)
  |
  |--47:EXCHANGE [BROADCAST]
  |     mem-estimate=28.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=15 row-size=24B cardinality=0
  |     in pipelines: 14(GETNEXT)
  |
  13:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales.cs_catalog_page_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_promo_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=36B cardinality=0
     in pipelines: 13(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=47, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:SCAN HDFS [default.impala_tpcds_catalog_returns, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_returns.cr_item_sk IS NOT NULL, default.impala_tpcds_catalog_returns.cr_order_number IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=24B cardinality=0
     in pipelines: 14(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=48, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  16:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_date_sk IS NOT NULL, _impala_builtins.casttotimestamp(default.impala_tpcds_date_dim_0.d_date) >= _impala_builtins.casttotimestamp(_impala_builtins.casttodate('2002-08-06')) AND _impala_builtins.casttotimestamp(default.impala_tpcds_date_dim_0.d_date) <= _IMPALA_BUILTINS.MILLISECONDS_ADD(_impala_builtins.casttotimestamp(_impala_builtins.casttodate('2002-08-06')), INTERVAL CAST(2592000000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=16B cardinality=0
     in pipelines: 16(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=49, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  18:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_0.i_item_sk IS NOT NULL, default.impala_tpcds_item_0.i_current_price > CAST(50 AS DECIMAL(7,2))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_item_0.i_current_price > CAST(50 AS DECIMAL(7,2))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=19 row-size=12B cardinality=0
     in pipelines: 18(GETNEXT)

F11:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=50, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  20:SCAN HDFS [default.impala_tpcds_promotion, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_promotion_0.p_promo_sk IS NOT NULL, default.impala_tpcds_promotion_0.p_channel_tv = 'N'
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_promotion_0.p_channel_tv = 'N'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=16B cardinality=0
     in pipelines: 20(GETNEXT)

F12:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=51, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:SCAN HDFS [default.impala_tpcds_catalog_page, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_page.cp_catalog_page_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=23 row-size=16B cardinality=0
     in pipelines: 22(GETNEXT)

F14:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=137.79MB mem-reservation=43.69MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F21, EXCHANGE=59, HASH(default.impala_tpcds_web_site.web_site_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  36:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_web_sales.ws_ext_sales_price), sum(_impala_builtins.coalesce(default.impala_tpcds_web_returns.wr_return_amt, CAST(0 AS DECIMAL(3,0)))), sum(_impala_builtins.subtract(default.impala_tpcds_web_sales.ws_net_profit, _impala_builtins.coalesce(default.impala_tpcds_web_returns.wr_net_loss, CAST(0 AS DECIMAL(3,0)))))
  |  group by: default.impala_tpcds_web_site.web_site_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=38 row-size=60B cardinality=0
  |  in pipelines: 25(GETNEXT)
  |
  35:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_web_site_sk = default.impala_tpcds_web_site.web_site_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=26,28N,30,32,34,36 row-size=120B cardinality=0
  |  in pipelines: 25(GETNEXT), 34(OPEN)
  |
  |--58:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=36 row-size=16B cardinality=0
  |     in pipelines: 34(GETNEXT)
  |
  33:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_promo_sk = default.impala_tpcds_promotion_1.p_promo_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=26,28N,30,32,34 row-size=104B cardinality=0
  |  in pipelines: 25(GETNEXT), 32(OPEN)
  |
  |--57:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=34 row-size=16B cardinality=0
  |     in pipelines: 32(GETNEXT)
  |
  31:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_item_sk = default.impala_tpcds_item_1.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=26,28N,30,32 row-size=88B cardinality=0
  |  in pipelines: 25(GETNEXT), 30(OPEN)
  |
  |--56:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=32 row-size=12B cardinality=0
  |     in pipelines: 30(GETNEXT)
  |
  29:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_sold_date_sk = default.impala_tpcds_date_dim_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=26,28N,30 row-size=76B cardinality=0
  |  in pipelines: 25(GETNEXT), 28(OPEN)
  |
  |--55:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=30 row-size=16B cardinality=0
  |     in pipelines: 28(GETNEXT)
  |
  27:HASH JOIN [LEFT OUTER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_item_sk = default.impala_tpcds_web_returns.wr_item_sk, default.impala_tpcds_web_sales.ws_order_number = default.impala_tpcds_web_returns.wr_order_number
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=26,28N row-size=60B cardinality=0
  |  in pipelines: 25(GETNEXT), 26(OPEN)
  |
  |--54:EXCHANGE [BROADCAST]
  |     mem-estimate=28.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=28 row-size=24B cardinality=0
  |     in pipelines: 26(GETNEXT)
  |
  25:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_item_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_promo_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_web_site_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=26 row-size=36B cardinality=0
     in pipelines: 25(GETNEXT)

F15:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=54, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  26:SCAN HDFS [default.impala_tpcds_web_returns, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_returns.wr_item_sk IS NOT NULL, default.impala_tpcds_web_returns.wr_order_number IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=28 row-size=24B cardinality=0
     in pipelines: 26(GETNEXT)

F16:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=55, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  28:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_1.d_date_sk IS NOT NULL, _impala_builtins.casttotimestamp(default.impala_tpcds_date_dim_1.d_date) >= _impala_builtins.casttotimestamp(_impala_builtins.casttodate('2002-08-06')) AND _impala_builtins.casttotimestamp(default.impala_tpcds_date_dim_1.d_date) <= _IMPALA_BUILTINS.MILLISECONDS_ADD(_impala_builtins.casttotimestamp(_impala_builtins.casttodate('2002-08-06')), INTERVAL CAST(2592000000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=30 row-size=16B cardinality=0
     in pipelines: 28(GETNEXT)

F17:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=56, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  30:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_1.i_item_sk IS NOT NULL, default.impala_tpcds_item_1.i_current_price > CAST(50 AS DECIMAL(7,2))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_item_1.i_current_price > CAST(50 AS DECIMAL(7,2))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=32 row-size=12B cardinality=0
     in pipelines: 30(GETNEXT)

F18:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=57, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  32:SCAN HDFS [default.impala_tpcds_promotion, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_promotion_1.p_promo_sk IS NOT NULL, default.impala_tpcds_promotion_1.p_channel_tv = 'N'
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_promotion_1.p_channel_tv = 'N'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=34 row-size=16B cardinality=0
     in pipelines: 32(GETNEXT)

F19:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=58, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  34:SCAN HDFS [default.impala_tpcds_web_site, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_site.web_site_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=36 row-size=16B cardinality=0
     in pipelines: 34(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

