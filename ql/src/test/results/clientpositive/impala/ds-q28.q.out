PREHOOK: query: explain cbo select  *
from (select avg(ss_list_price) B1_LP
            ,count(ss_list_price) B1_CNT
            ,count(distinct ss_list_price) B1_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 0 and 5
        and (ss_list_price between 73 and 73+10 
             or ss_coupon_amt between 7826 and 7826+1000
             or ss_wholesale_cost between 70 and 70+20)) B1,
     (select avg(ss_list_price) B2_LP
            ,count(ss_list_price) B2_CNT
            ,count(distinct ss_list_price) B2_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 6 and 10
        and (ss_list_price between 152 and 152+10
          or ss_coupon_amt between 2196 and 2196+1000
          or ss_wholesale_cost between 56 and 56+20)) B2,
     (select avg(ss_list_price) B3_LP
            ,count(ss_list_price) B3_CNT
            ,count(distinct ss_list_price) B3_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 11 and 15
        and (ss_list_price between 53 and 53+10
          or ss_coupon_amt between 3430 and 3430+1000
          or ss_wholesale_cost between 13 and 13+20)) B3,
     (select avg(ss_list_price) B4_LP
            ,count(ss_list_price) B4_CNT
            ,count(distinct ss_list_price) B4_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 16 and 20
        and (ss_list_price between 182 and 182+10
          or ss_coupon_amt between 3262 and 3262+1000
          or ss_wholesale_cost between 20 and 20+20)) B4,
     (select avg(ss_list_price) B5_LP
            ,count(ss_list_price) B5_CNT
            ,count(distinct ss_list_price) B5_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 21 and 25
        and (ss_list_price between 85 and 85+10
          or ss_coupon_amt between 3310 and 3310+1000
          or ss_wholesale_cost between 37 and 37+20)) B5,
     (select avg(ss_list_price) B6_LP
            ,count(ss_list_price) B6_CNT
            ,count(distinct ss_list_price) B6_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 26 and 30
        and (ss_list_price between 180 and 180+10
          or ss_coupon_amt between 12592 and 12592+1000
          or ss_wholesale_cost between 22 and 22+20)) B6
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select  *
from (select avg(ss_list_price) B1_LP
            ,count(ss_list_price) B1_CNT
            ,count(distinct ss_list_price) B1_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 0 and 5
        and (ss_list_price between 73 and 73+10 
             or ss_coupon_amt between 7826 and 7826+1000
             or ss_wholesale_cost between 70 and 70+20)) B1,
     (select avg(ss_list_price) B2_LP
            ,count(ss_list_price) B2_CNT
            ,count(distinct ss_list_price) B2_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 6 and 10
        and (ss_list_price between 152 and 152+10
          or ss_coupon_amt between 2196 and 2196+1000
          or ss_wholesale_cost between 56 and 56+20)) B2,
     (select avg(ss_list_price) B3_LP
            ,count(ss_list_price) B3_CNT
            ,count(distinct ss_list_price) B3_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 11 and 15
        and (ss_list_price between 53 and 53+10
          or ss_coupon_amt between 3430 and 3430+1000
          or ss_wholesale_cost between 13 and 13+20)) B3,
     (select avg(ss_list_price) B4_LP
            ,count(ss_list_price) B4_CNT
            ,count(distinct ss_list_price) B4_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 16 and 20
        and (ss_list_price between 182 and 182+10
          or ss_coupon_amt between 3262 and 3262+1000
          or ss_wholesale_cost between 20 and 20+20)) B4,
     (select avg(ss_list_price) B5_LP
            ,count(ss_list_price) B5_CNT
            ,count(distinct ss_list_price) B5_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 21 and 25
        and (ss_list_price between 85 and 85+10
          or ss_coupon_amt between 3310 and 3310+1000
          or ss_wholesale_cost between 37 and 37+20)) B5,
     (select avg(ss_list_price) B6_LP
            ,count(ss_list_price) B6_CNT
            ,count(distinct ss_list_price) B6_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 26 and 30
        and (ss_list_price between 180 and 180+10
          or ss_coupon_amt between 12592 and 12592+1000
          or ss_wholesale_cost between 22 and 22+20)) B6
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaSortRel(fetch=[100])
  ImpalaProjectRel($f0=[$0], $f1=[$1], $f2=[$2], $f00=[$15], $f10=[$16], $f20=[$17], $f01=[$12], $f11=[$13], $f21=[$14], $f02=[$9], $f12=[$10], $f22=[$11], $f03=[$6], $f13=[$7], $f23=[$8], $f04=[$3], $f14=[$4], $f24=[$5])
    ImpalaJoinRel(condition=[true], joinType=[inner])
      ImpalaJoinRel(condition=[true], joinType=[inner])
        ImpalaJoinRel(condition=[true], joinType=[inner])
          ImpalaJoinRel(condition=[true], joinType=[inner])
            ImpalaJoinRel(condition=[true], joinType=[inner])
              ImpalaAggregateRel(group=[{}], agg#0=[avg($11)], agg#1=[count($11)], agg#2=[count(DISTINCT $11)])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(OR(BETWEEN(false, $11, 73:DECIMAL(10, 0), CAST(+(73:BIGINT, 10:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $18, 7826:DECIMAL(10, 0), CAST(+(7826:BIGINT, 1000:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $10, 70:DECIMAL(10, 0), CAST(+(70:BIGINT, 20:BIGINT)):DECIMAL(38, 0) NOT NULL)), BETWEEN(false, $9, 0, 5))])
              ImpalaAggregateRel(group=[{}], agg#0=[avg($11)], agg#1=[count($11)], agg#2=[count(DISTINCT $11)])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(OR(BETWEEN(false, $11, 180:DECIMAL(10, 0), CAST(+(180:BIGINT, 10:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $18, 12592:DECIMAL(10, 0), CAST(+(12592:BIGINT, 1000:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $10, 22:DECIMAL(10, 0), CAST(+(22:BIGINT, 20:BIGINT)):DECIMAL(38, 0) NOT NULL)), BETWEEN(false, $9, 26, 30))])
            ImpalaAggregateRel(group=[{}], agg#0=[avg($11)], agg#1=[count($11)], agg#2=[count(DISTINCT $11)])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(OR(BETWEEN(false, $11, 85:DECIMAL(10, 0), CAST(+(85:BIGINT, 10:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $18, 3310:DECIMAL(10, 0), CAST(+(3310:BIGINT, 1000:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $10, 37:DECIMAL(10, 0), CAST(+(37:BIGINT, 20:BIGINT)):DECIMAL(38, 0) NOT NULL)), BETWEEN(false, $9, 21, 25))])
          ImpalaAggregateRel(group=[{}], agg#0=[avg($11)], agg#1=[count($11)], agg#2=[count(DISTINCT $11)])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(OR(BETWEEN(false, $11, 182:DECIMAL(10, 0), CAST(+(182:BIGINT, 10:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $18, 3262:DECIMAL(10, 0), CAST(+(3262:BIGINT, 1000:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $10, 20:DECIMAL(10, 0), CAST(+(20:BIGINT, 20:BIGINT)):DECIMAL(38, 0) NOT NULL)), BETWEEN(false, $9, 16, 20))])
        ImpalaAggregateRel(group=[{}], agg#0=[avg($11)], agg#1=[count($11)], agg#2=[count(DISTINCT $11)])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(OR(BETWEEN(false, $11, 53:DECIMAL(10, 0), CAST(+(53:BIGINT, 10:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $18, 3430:DECIMAL(10, 0), CAST(+(3430:BIGINT, 1000:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $10, 13:DECIMAL(10, 0), CAST(+(13:BIGINT, 20:BIGINT)):DECIMAL(38, 0) NOT NULL)), BETWEEN(false, $9, 11, 15))])
      ImpalaAggregateRel(group=[{}], agg#0=[avg($11)], agg#1=[count($11)], agg#2=[count(DISTINCT $11)])
        ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(OR(BETWEEN(false, $11, 152:DECIMAL(10, 0), CAST(+(152:BIGINT, 10:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $18, 2196:DECIMAL(10, 0), CAST(+(2196:BIGINT, 1000:BIGINT)):DECIMAL(38, 0) NOT NULL), BETWEEN(false, $10, 56:DECIMAL(10, 0), CAST(+(56:BIGINT, 20:BIGINT)):DECIMAL(38, 0) NOT NULL)), BETWEEN(false, $9, 6, 10))])

PREHOOK: query: explain select  *
from (select avg(ss_list_price) B1_LP
            ,count(ss_list_price) B1_CNT
            ,count(distinct ss_list_price) B1_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 0 and 5
        and (ss_list_price between 73 and 73+10 
             or ss_coupon_amt between 7826 and 7826+1000
             or ss_wholesale_cost between 70 and 70+20)) B1,
     (select avg(ss_list_price) B2_LP
            ,count(ss_list_price) B2_CNT
            ,count(distinct ss_list_price) B2_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 6 and 10
        and (ss_list_price between 152 and 152+10
          or ss_coupon_amt between 2196 and 2196+1000
          or ss_wholesale_cost between 56 and 56+20)) B2,
     (select avg(ss_list_price) B3_LP
            ,count(ss_list_price) B3_CNT
            ,count(distinct ss_list_price) B3_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 11 and 15
        and (ss_list_price between 53 and 53+10
          or ss_coupon_amt between 3430 and 3430+1000
          or ss_wholesale_cost between 13 and 13+20)) B3,
     (select avg(ss_list_price) B4_LP
            ,count(ss_list_price) B4_CNT
            ,count(distinct ss_list_price) B4_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 16 and 20
        and (ss_list_price between 182 and 182+10
          or ss_coupon_amt between 3262 and 3262+1000
          or ss_wholesale_cost between 20 and 20+20)) B4,
     (select avg(ss_list_price) B5_LP
            ,count(ss_list_price) B5_CNT
            ,count(distinct ss_list_price) B5_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 21 and 25
        and (ss_list_price between 85 and 85+10
          or ss_coupon_amt between 3310 and 3310+1000
          or ss_wholesale_cost between 37 and 37+20)) B5,
     (select avg(ss_list_price) B6_LP
            ,count(ss_list_price) B6_CNT
            ,count(distinct ss_list_price) B6_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 26 and 30
        and (ss_list_price between 180 and 180+10
          or ss_coupon_amt between 12592 and 12592+1000
          or ss_wholesale_cost between 22 and 22+20)) B6
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select  *
from (select avg(ss_list_price) B1_LP
            ,count(ss_list_price) B1_CNT
            ,count(distinct ss_list_price) B1_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 0 and 5
        and (ss_list_price between 73 and 73+10 
             or ss_coupon_amt between 7826 and 7826+1000
             or ss_wholesale_cost between 70 and 70+20)) B1,
     (select avg(ss_list_price) B2_LP
            ,count(ss_list_price) B2_CNT
            ,count(distinct ss_list_price) B2_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 6 and 10
        and (ss_list_price between 152 and 152+10
          or ss_coupon_amt between 2196 and 2196+1000
          or ss_wholesale_cost between 56 and 56+20)) B2,
     (select avg(ss_list_price) B3_LP
            ,count(ss_list_price) B3_CNT
            ,count(distinct ss_list_price) B3_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 11 and 15
        and (ss_list_price between 53 and 53+10
          or ss_coupon_amt between 3430 and 3430+1000
          or ss_wholesale_cost between 13 and 13+20)) B3,
     (select avg(ss_list_price) B4_LP
            ,count(ss_list_price) B4_CNT
            ,count(distinct ss_list_price) B4_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 16 and 20
        and (ss_list_price between 182 and 182+10
          or ss_coupon_amt between 3262 and 3262+1000
          or ss_wholesale_cost between 20 and 20+20)) B4,
     (select avg(ss_list_price) B5_LP
            ,count(ss_list_price) B5_CNT
            ,count(distinct ss_list_price) B5_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 21 and 25
        and (ss_list_price between 85 and 85+10
          or ss_coupon_amt between 3310 and 3310+1000
          or ss_wholesale_cost between 37 and 37+20)) B5,
     (select avg(ss_list_price) B6_LP
            ,count(ss_list_price) B6_CNT
            ,count(distinct ss_list_price) B6_CNTD
      from impala_tpcds_store_sales
      where ss_quantity between 26 and 30
        and (ss_list_price between 180 and 180+10
          or ss_coupon_amt between 12592 and 12592+1000
          or ss_wholesale_cost between 22 and 22+20)) B6
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F18:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.09MB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: $f0, $f1, $f2, $f00, $f10, $f20, $f01, $f11, $f21, $f02, $f12, $f22, $f03, $f13, $f23, $f04, $f14, $f24
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  24:TOP-N [LIMIT=100]
  |  order by: 
  |  mem-estimate=144B mem-reservation=0B thread-reservation=0
  |  tuple-ids=31 row-size=144B cardinality=1
  |  in pipelines: 24(GETNEXT), 28(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=30 row-size=144B cardinality=1
  |  in pipelines: 28(GETNEXT)
  |
  23:NESTED LOOP JOIN [CROSS JOIN, BROADCAST]
  |  mem-estimate=24B mem-reservation=0B thread-reservation=0
  |  tuple-ids=4,9,14,19,24,29 row-size=144B cardinality=1
  |  in pipelines: 28(GETNEXT), 52(OPEN)
  |
  |--53:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=29 row-size=24B cardinality=1
  |     in pipelines: 52(GETNEXT)
  |
  19:NESTED LOOP JOIN [CROSS JOIN, BROADCAST]
  |  mem-estimate=24B mem-reservation=0B thread-reservation=0
  |  tuple-ids=4,9,14,19,24 row-size=120B cardinality=1
  |  in pipelines: 28(GETNEXT), 47(OPEN)
  |
  |--48:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=24 row-size=24B cardinality=1
  |     in pipelines: 47(GETNEXT)
  |
  15:NESTED LOOP JOIN [CROSS JOIN, BROADCAST]
  |  mem-estimate=24B mem-reservation=0B thread-reservation=0
  |  tuple-ids=4,9,14,19 row-size=96B cardinality=1
  |  in pipelines: 28(GETNEXT), 42(OPEN)
  |
  |--43:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=19 row-size=24B cardinality=1
  |     in pipelines: 42(GETNEXT)
  |
  11:NESTED LOOP JOIN [CROSS JOIN, BROADCAST]
  |  mem-estimate=24B mem-reservation=0B thread-reservation=0
  |  tuple-ids=4,9,14 row-size=72B cardinality=1
  |  in pipelines: 28(GETNEXT), 37(OPEN)
  |
  |--38:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=14 row-size=24B cardinality=1
  |     in pipelines: 37(GETNEXT)
  |
  07:NESTED LOOP JOIN [CROSS JOIN, BROADCAST]
  |  mem-estimate=24B mem-reservation=0B thread-reservation=0
  |  tuple-ids=4,9 row-size=48B cardinality=1
  |  in pipelines: 28(GETNEXT), 32(OPEN)
  |
  |--33:EXCHANGE [UNPARTITIONED]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=9 row-size=24B cardinality=1
  |     in pipelines: 32(GETNEXT)
  |
  28:AGGREGATE [FINALIZE]
  |  output: count:merge(default.impala_tpcds_store_sales.ss_list_price), avg:merge(default.impala_tpcds_store_sales.ss_list_price), count:merge(default.impala_tpcds_store_sales.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=24B cardinality=1
  |  in pipelines: 28(GETNEXT), 03(OPEN)
  |
  27:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=24B cardinality=1
     in pipelines: 03(GETNEXT)

F01:PLAN FRAGMENT [HASH(default.impala_tpcds_store_sales.ss_list_price)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=27, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:AGGREGATE
  |  output: count(default.impala_tpcds_store_sales.ss_list_price), avg:merge(default.impala_tpcds_store_sales.ss_list_price), count:merge(default.impala_tpcds_store_sales.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=3 row-size=24B cardinality=1
  |  in pipelines: 03(GETNEXT), 26(OPEN)
  |
  26:AGGREGATE
  |  output: _impala_builtins.avg:merge(default.impala_tpcds_store_sales.ss_list_price), _impala_builtins.count:merge(default.impala_tpcds_store_sales.ss_list_price)
  |  group by: default.impala_tpcds_store_sales.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=1 row-size=20B cardinality=0
  |  in pipelines: 26(GETNEXT), 01(OPEN)
  |
  25:EXCHANGE [HASH(default.impala_tpcds_store_sales.ss_list_price)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=20B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F01, EXCHANGE=25, HASH(default.impala_tpcds_store_sales.ss_list_price)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:AGGREGATE [STREAMING]
  |  output: avg(default.impala_tpcds_store_sales.ss_list_price), count(default.impala_tpcds_store_sales.ss_list_price)
  |  group by: default.impala_tpcds_store_sales.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=1 row-size=20B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_quantity >= CAST(0 AS INT) AND default.impala_tpcds_store_sales.ss_quantity <= CAST(5 AS INT), default.impala_tpcds_store_sales.ss_list_price >= CAST(73 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales.ss_list_price <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(73 AS BIGINT), CAST(10 AS BIGINT))) OR default.impala_tpcds_store_sales.ss_coupon_amt >= CAST(7826 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales.ss_coupon_amt <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(7826 AS BIGINT), CAST(1000 AS BIGINT))) OR default.impala_tpcds_store_sales.ss_wholesale_cost >= CAST(70 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales.ss_wholesale_cost <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(70 AS BIGINT), CAST(20 AS BIGINT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=16B cardinality=0
     in pipelines: 01(GETNEXT)

F05:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=33, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  32:AGGREGATE [FINALIZE]
  |  output: count:merge(default.impala_tpcds_store_sales_0.ss_list_price), avg:merge(default.impala_tpcds_store_sales_0.ss_list_price), count:merge(default.impala_tpcds_store_sales_0.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=9 row-size=24B cardinality=1
  |  in pipelines: 32(GETNEXT), 06(OPEN)
  |
  31:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=24B cardinality=1
     in pipelines: 06(GETNEXT)

F04:PLAN FRAGMENT [HASH(default.impala_tpcds_store_sales_0.ss_list_price)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=31, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE
  |  output: count(default.impala_tpcds_store_sales_0.ss_list_price), avg:merge(default.impala_tpcds_store_sales_0.ss_list_price), count:merge(default.impala_tpcds_store_sales_0.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=8 row-size=24B cardinality=1
  |  in pipelines: 06(GETNEXT), 30(OPEN)
  |
  30:AGGREGATE
  |  output: _impala_builtins.avg:merge(default.impala_tpcds_store_sales_0.ss_list_price), _impala_builtins.count:merge(default.impala_tpcds_store_sales_0.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_0.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=6 row-size=20B cardinality=0
  |  in pipelines: 30(GETNEXT), 04(OPEN)
  |
  29:EXCHANGE [HASH(default.impala_tpcds_store_sales_0.ss_list_price)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=20B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=29, HASH(default.impala_tpcds_store_sales_0.ss_list_price)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:AGGREGATE [STREAMING]
  |  output: avg(default.impala_tpcds_store_sales_0.ss_list_price), count(default.impala_tpcds_store_sales_0.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_0.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=6 row-size=20B cardinality=0
  |  in pipelines: 04(GETNEXT)
  |
  04:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_0.ss_quantity >= CAST(26 AS INT) AND default.impala_tpcds_store_sales_0.ss_quantity <= CAST(30 AS INT), default.impala_tpcds_store_sales_0.ss_list_price >= CAST(180 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_0.ss_list_price <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(180 AS BIGINT), CAST(10 AS BIGINT))) OR default.impala_tpcds_store_sales_0.ss_coupon_amt >= CAST(12592 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_0.ss_coupon_amt <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(12592 AS BIGINT), CAST(1000 AS BIGINT))) OR default.impala_tpcds_store_sales_0.ss_wholesale_cost >= CAST(22 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_0.ss_wholesale_cost <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(22 AS BIGINT), CAST(20 AS BIGINT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=16B cardinality=0
     in pipelines: 04(GETNEXT)

F08:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=38, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  37:AGGREGATE [FINALIZE]
  |  output: count:merge(default.impala_tpcds_store_sales_1.ss_list_price), avg:merge(default.impala_tpcds_store_sales_1.ss_list_price), count:merge(default.impala_tpcds_store_sales_1.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=14 row-size=24B cardinality=1
  |  in pipelines: 37(GETNEXT), 10(OPEN)
  |
  36:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=24B cardinality=1
     in pipelines: 10(GETNEXT)

F07:PLAN FRAGMENT [HASH(default.impala_tpcds_store_sales_1.ss_list_price)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=36, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:AGGREGATE
  |  output: count(default.impala_tpcds_store_sales_1.ss_list_price), avg:merge(default.impala_tpcds_store_sales_1.ss_list_price), count:merge(default.impala_tpcds_store_sales_1.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=24B cardinality=1
  |  in pipelines: 10(GETNEXT), 35(OPEN)
  |
  35:AGGREGATE
  |  output: _impala_builtins.avg:merge(default.impala_tpcds_store_sales_1.ss_list_price), _impala_builtins.count:merge(default.impala_tpcds_store_sales_1.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_1.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=20B cardinality=0
  |  in pipelines: 35(GETNEXT), 08(OPEN)
  |
  34:EXCHANGE [HASH(default.impala_tpcds_store_sales_1.ss_list_price)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=20B cardinality=0
     in pipelines: 08(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=34, HASH(default.impala_tpcds_store_sales_1.ss_list_price)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:AGGREGATE [STREAMING]
  |  output: avg(default.impala_tpcds_store_sales_1.ss_list_price), count(default.impala_tpcds_store_sales_1.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_1.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=20B cardinality=0
  |  in pipelines: 08(GETNEXT)
  |
  08:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_1.ss_quantity >= CAST(21 AS INT) AND default.impala_tpcds_store_sales_1.ss_quantity <= CAST(25 AS INT), default.impala_tpcds_store_sales_1.ss_list_price >= CAST(85 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_1.ss_list_price <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(85 AS BIGINT), CAST(10 AS BIGINT))) OR default.impala_tpcds_store_sales_1.ss_coupon_amt >= CAST(3310 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_1.ss_coupon_amt <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(3310 AS BIGINT), CAST(1000 AS BIGINT))) OR default.impala_tpcds_store_sales_1.ss_wholesale_cost >= CAST(37 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_1.ss_wholesale_cost <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(37 AS BIGINT), CAST(20 AS BIGINT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=16B cardinality=0
     in pipelines: 08(GETNEXT)

F11:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=43, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  42:AGGREGATE [FINALIZE]
  |  output: count:merge(default.impala_tpcds_store_sales_2.ss_list_price), avg:merge(default.impala_tpcds_store_sales_2.ss_list_price), count:merge(default.impala_tpcds_store_sales_2.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=19 row-size=24B cardinality=1
  |  in pipelines: 42(GETNEXT), 14(OPEN)
  |
  41:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=18 row-size=24B cardinality=1
     in pipelines: 14(GETNEXT)

F10:PLAN FRAGMENT [HASH(default.impala_tpcds_store_sales_2.ss_list_price)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F11, EXCHANGE=41, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:AGGREGATE
  |  output: count(default.impala_tpcds_store_sales_2.ss_list_price), avg:merge(default.impala_tpcds_store_sales_2.ss_list_price), count:merge(default.impala_tpcds_store_sales_2.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=18 row-size=24B cardinality=1
  |  in pipelines: 14(GETNEXT), 40(OPEN)
  |
  40:AGGREGATE
  |  output: _impala_builtins.avg:merge(default.impala_tpcds_store_sales_2.ss_list_price), _impala_builtins.count:merge(default.impala_tpcds_store_sales_2.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_2.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=16 row-size=20B cardinality=0
  |  in pipelines: 40(GETNEXT), 12(OPEN)
  |
  39:EXCHANGE [HASH(default.impala_tpcds_store_sales_2.ss_list_price)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=16 row-size=20B cardinality=0
     in pipelines: 12(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F10, EXCHANGE=39, HASH(default.impala_tpcds_store_sales_2.ss_list_price)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:AGGREGATE [STREAMING]
  |  output: avg(default.impala_tpcds_store_sales_2.ss_list_price), count(default.impala_tpcds_store_sales_2.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_2.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=16 row-size=20B cardinality=0
  |  in pipelines: 12(GETNEXT)
  |
  12:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_2.ss_quantity >= CAST(16 AS INT) AND default.impala_tpcds_store_sales_2.ss_quantity <= CAST(20 AS INT), default.impala_tpcds_store_sales_2.ss_list_price >= CAST(182 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_2.ss_list_price <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(182 AS BIGINT), CAST(10 AS BIGINT))) OR default.impala_tpcds_store_sales_2.ss_coupon_amt >= CAST(3262 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_2.ss_coupon_amt <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(3262 AS BIGINT), CAST(1000 AS BIGINT))) OR default.impala_tpcds_store_sales_2.ss_wholesale_cost >= CAST(20 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_2.ss_wholesale_cost <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(20 AS BIGINT), CAST(20 AS BIGINT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=16B cardinality=0
     in pipelines: 12(GETNEXT)

F14:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=48, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  47:AGGREGATE [FINALIZE]
  |  output: count:merge(default.impala_tpcds_store_sales_3.ss_list_price), avg:merge(default.impala_tpcds_store_sales_3.ss_list_price), count:merge(default.impala_tpcds_store_sales_3.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=24 row-size=24B cardinality=1
  |  in pipelines: 47(GETNEXT), 18(OPEN)
  |
  46:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=23 row-size=24B cardinality=1
     in pipelines: 18(GETNEXT)

F13:PLAN FRAGMENT [HASH(default.impala_tpcds_store_sales_3.ss_list_price)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=46, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  18:AGGREGATE
  |  output: count(default.impala_tpcds_store_sales_3.ss_list_price), avg:merge(default.impala_tpcds_store_sales_3.ss_list_price), count:merge(default.impala_tpcds_store_sales_3.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=23 row-size=24B cardinality=1
  |  in pipelines: 18(GETNEXT), 45(OPEN)
  |
  45:AGGREGATE
  |  output: _impala_builtins.avg:merge(default.impala_tpcds_store_sales_3.ss_list_price), _impala_builtins.count:merge(default.impala_tpcds_store_sales_3.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_3.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=21 row-size=20B cardinality=0
  |  in pipelines: 45(GETNEXT), 16(OPEN)
  |
  44:EXCHANGE [HASH(default.impala_tpcds_store_sales_3.ss_list_price)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=20B cardinality=0
     in pipelines: 16(GETNEXT)

F12:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F13, EXCHANGE=44, HASH(default.impala_tpcds_store_sales_3.ss_list_price)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  17:AGGREGATE [STREAMING]
  |  output: avg(default.impala_tpcds_store_sales_3.ss_list_price), count(default.impala_tpcds_store_sales_3.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_3.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=21 row-size=20B cardinality=0
  |  in pipelines: 16(GETNEXT)
  |
  16:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_3.ss_quantity >= CAST(11 AS INT) AND default.impala_tpcds_store_sales_3.ss_quantity <= CAST(15 AS INT), default.impala_tpcds_store_sales_3.ss_list_price >= CAST(53 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_3.ss_list_price <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(53 AS BIGINT), CAST(10 AS BIGINT))) OR default.impala_tpcds_store_sales_3.ss_coupon_amt >= CAST(3430 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_3.ss_coupon_amt <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(3430 AS BIGINT), CAST(1000 AS BIGINT))) OR default.impala_tpcds_store_sales_3.ss_wholesale_cost >= CAST(13 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_3.ss_wholesale_cost <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(13 AS BIGINT), CAST(20 AS BIGINT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=20 row-size=16B cardinality=0
     in pipelines: 16(GETNEXT)

F17:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=53, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  52:AGGREGATE [FINALIZE]
  |  output: count:merge(default.impala_tpcds_store_sales_4.ss_list_price), avg:merge(default.impala_tpcds_store_sales_4.ss_list_price), count:merge(default.impala_tpcds_store_sales_4.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=29 row-size=24B cardinality=1
  |  in pipelines: 52(GETNEXT), 22(OPEN)
  |
  51:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=28 row-size=24B cardinality=1
     in pipelines: 22(GETNEXT)

F16:PLAN FRAGMENT [HASH(default.impala_tpcds_store_sales_4.ss_list_price)] hosts=1 instances=1
Per-Host Resources: mem-estimate=138.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F17, EXCHANGE=51, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:AGGREGATE
  |  output: count(default.impala_tpcds_store_sales_4.ss_list_price), avg:merge(default.impala_tpcds_store_sales_4.ss_list_price), count:merge(default.impala_tpcds_store_sales_4.ss_list_price)
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=28 row-size=24B cardinality=1
  |  in pipelines: 22(GETNEXT), 50(OPEN)
  |
  50:AGGREGATE
  |  output: _impala_builtins.avg:merge(default.impala_tpcds_store_sales_4.ss_list_price), _impala_builtins.count:merge(default.impala_tpcds_store_sales_4.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_4.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=26 row-size=20B cardinality=0
  |  in pipelines: 50(GETNEXT), 20(OPEN)
  |
  49:EXCHANGE [HASH(default.impala_tpcds_store_sales_4.ss_list_price)]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=26 row-size=20B cardinality=0
     in pipelines: 20(GETNEXT)

F15:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.00MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=49, HASH(default.impala_tpcds_store_sales_4.ss_list_price)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  21:AGGREGATE [STREAMING]
  |  output: avg(default.impala_tpcds_store_sales_4.ss_list_price), count(default.impala_tpcds_store_sales_4.ss_list_price)
  |  group by: default.impala_tpcds_store_sales_4.ss_list_price
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=26 row-size=20B cardinality=0
  |  in pipelines: 20(GETNEXT)
  |
  20:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_4.ss_quantity >= CAST(6 AS INT) AND default.impala_tpcds_store_sales_4.ss_quantity <= CAST(10 AS INT), default.impala_tpcds_store_sales_4.ss_list_price >= CAST(152 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_4.ss_list_price <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(152 AS BIGINT), CAST(10 AS BIGINT))) OR default.impala_tpcds_store_sales_4.ss_coupon_amt >= CAST(2196 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_4.ss_coupon_amt <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(2196 AS BIGINT), CAST(1000 AS BIGINT))) OR default.impala_tpcds_store_sales_4.ss_wholesale_cost >= CAST(56 AS DECIMAL(10,0)) AND default.impala_tpcds_store_sales_4.ss_wholesale_cost <= _impala_builtins.casttodecimal(_impala_builtins.add(CAST(56 AS BIGINT), CAST(20 AS BIGINT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=25 row-size=16B cardinality=0
     in pipelines: 20(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

