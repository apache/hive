PREHOOK: query: explain cbo select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,extended_price
       ,extended_tax
       ,list_price
 from (select ss_ticket_number
             ,ss_customer_sk
             ,ca_city bought_city
             ,sum(ss_ext_sales_price) extended_price 
             ,sum(ss_ext_list_price) list_price
             ,sum(ss_ext_tax) extended_tax 
       from impala_tpcds_store_sales
           ,impala_tpcds_date_dim
           ,impala_tpcds_store
           ,impala_tpcds_household_demographics
           ,impala_tpcds_customer_address 
       where impala_tpcds_store_sales.ss_sold_date_sk = impala_tpcds_date_dim.d_date_sk
         and impala_tpcds_store_sales.ss_store_sk = impala_tpcds_store.s_store_sk  
        and impala_tpcds_store_sales.ss_hdemo_sk = impala_tpcds_household_demographics.hd_demo_sk
        and impala_tpcds_store_sales.ss_addr_sk = impala_tpcds_customer_address.ca_address_sk
        and impala_tpcds_date_dim.d_dom between 1 and 2 
        and (impala_tpcds_household_demographics.hd_dep_count = 4 or
             impala_tpcds_household_demographics.hd_vehicle_count= 0)
        and impala_tpcds_date_dim.d_year in (1999,1999+1,1999+2)
        and impala_tpcds_store.s_city in ('Pleasant Hill','Bethel')
       group by ss_ticket_number
               ,ss_customer_sk
               ,ss_addr_sk,ca_city) dn
      ,impala_tpcds_customer
      ,impala_tpcds_customer_address current_addr
 where ss_customer_sk = c_customer_sk
   and impala_tpcds_customer.c_current_addr_sk = current_addr.ca_address_sk
   and current_addr.ca_city <> bought_city
 order by c_last_name
         ,ss_ticket_number
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_household_demographics
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,extended_price
       ,extended_tax
       ,list_price
 from (select ss_ticket_number
             ,ss_customer_sk
             ,ca_city bought_city
             ,sum(ss_ext_sales_price) extended_price 
             ,sum(ss_ext_list_price) list_price
             ,sum(ss_ext_tax) extended_tax 
       from impala_tpcds_store_sales
           ,impala_tpcds_date_dim
           ,impala_tpcds_store
           ,impala_tpcds_household_demographics
           ,impala_tpcds_customer_address 
       where impala_tpcds_store_sales.ss_sold_date_sk = impala_tpcds_date_dim.d_date_sk
         and impala_tpcds_store_sales.ss_store_sk = impala_tpcds_store.s_store_sk  
        and impala_tpcds_store_sales.ss_hdemo_sk = impala_tpcds_household_demographics.hd_demo_sk
        and impala_tpcds_store_sales.ss_addr_sk = impala_tpcds_customer_address.ca_address_sk
        and impala_tpcds_date_dim.d_dom between 1 and 2 
        and (impala_tpcds_household_demographics.hd_dep_count = 4 or
             impala_tpcds_household_demographics.hd_vehicle_count= 0)
        and impala_tpcds_date_dim.d_year in (1999,1999+1,1999+2)
        and impala_tpcds_store.s_city in ('Pleasant Hill','Bethel')
       group by ss_ticket_number
               ,ss_customer_sk
               ,ss_addr_sk,ca_city) dn
      ,impala_tpcds_customer
      ,impala_tpcds_customer_address current_addr
 where ss_customer_sk = c_customer_sk
   and impala_tpcds_customer.c_current_addr_sk = current_addr.ca_address_sk
   and current_addr.ca_city <> bought_city
 order by c_last_name
         ,ss_ticket_number
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_household_demographics
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$4], dir0=[ASC], dir1=[ASC], fetch=[100])
  ImpalaProjectRel(c_last_name=[$3], c_first_name=[$2], ca_city=[$5], bought_city=[$8], ss_ticket_number=[$6], extended_price=[$9], extended_tax=[$11], list_price=[$10])
    ImpalaJoinRel(condition=[AND(<>($5, $8), =($7, $0))], joinType=[inner])
      ImpalaJoinRel(condition=[=($1, $4)], joinType=[inner])
        ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_current_addr_sk=[$4], c_first_name=[$8], c_last_name=[$9])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($4))])
        ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_city=[$6])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[IS NOT NULL($0)])
      ImpalaProjectPassthroughRel(ss_ticket_number=[$2], ss_customer_sk=[$0], bought_city=[$3], extended_price=[$4], list_price=[$5], extended_tax=[$6])
        ImpalaAggregateRel(group=[{0, 2, 4, 13}], agg#0=[sum($5)], agg#1=[sum($6)], agg#2=[sum($7)])
          ImpalaJoinRel(condition=[=($2, $12)], joinType=[inner])
            ImpalaJoinRel(condition=[=($1, $11)], joinType=[inner])
              ImpalaJoinRel(condition=[=($3, $10)], joinType=[inner])
                ImpalaJoinRel(condition=[=($8, $9)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_hdemo_sk=[$4], ss_addr_sk=[$5], ss_store_sk=[$6], ss_ticket_number=[$8], ss_ext_sales_price=[$14], ss_ext_list_price=[$16], ss_ext_tax=[$17], ss_sold_date_sk=[$22])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($6), IS NOT NULL($4), IS NOT NULL($5), IS NOT NULL($2))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 1999, +(1999, 1), +(1999, 2)), BETWEEN(false, $9, 1, 2), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(s_store_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[AND(IN($22, _UTF-16LE'Pleasant Hill':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Bethel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(hd_demo_sk=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_household_demographics]], condition=[AND(OR(=($3, 4), =($4, 0)), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_city=[$6])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[IS NOT NULL($0)])

PREHOOK: query: explain select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,extended_price
       ,extended_tax
       ,list_price
 from (select ss_ticket_number
             ,ss_customer_sk
             ,ca_city bought_city
             ,sum(ss_ext_sales_price) extended_price 
             ,sum(ss_ext_list_price) list_price
             ,sum(ss_ext_tax) extended_tax 
       from impala_tpcds_store_sales
           ,impala_tpcds_date_dim
           ,impala_tpcds_store
           ,impala_tpcds_household_demographics
           ,impala_tpcds_customer_address 
       where impala_tpcds_store_sales.ss_sold_date_sk = impala_tpcds_date_dim.d_date_sk
         and impala_tpcds_store_sales.ss_store_sk = impala_tpcds_store.s_store_sk  
        and impala_tpcds_store_sales.ss_hdemo_sk = impala_tpcds_household_demographics.hd_demo_sk
        and impala_tpcds_store_sales.ss_addr_sk = impala_tpcds_customer_address.ca_address_sk
        and impala_tpcds_date_dim.d_dom between 1 and 2 
        and (impala_tpcds_household_demographics.hd_dep_count = 4 or
             impala_tpcds_household_demographics.hd_vehicle_count= 0)
        and impala_tpcds_date_dim.d_year in (1999,1999+1,1999+2)
        and impala_tpcds_store.s_city in ('Pleasant Hill','Bethel')
       group by ss_ticket_number
               ,ss_customer_sk
               ,ss_addr_sk,ca_city) dn
      ,impala_tpcds_customer
      ,impala_tpcds_customer_address current_addr
 where ss_customer_sk = c_customer_sk
   and impala_tpcds_customer.c_current_addr_sk = current_addr.ca_address_sk
   and current_addr.ca_city <> bought_city
 order by c_last_name
         ,ss_ticket_number
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_household_demographics
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,extended_price
       ,extended_tax
       ,list_price
 from (select ss_ticket_number
             ,ss_customer_sk
             ,ca_city bought_city
             ,sum(ss_ext_sales_price) extended_price 
             ,sum(ss_ext_list_price) list_price
             ,sum(ss_ext_tax) extended_tax 
       from impala_tpcds_store_sales
           ,impala_tpcds_date_dim
           ,impala_tpcds_store
           ,impala_tpcds_household_demographics
           ,impala_tpcds_customer_address 
       where impala_tpcds_store_sales.ss_sold_date_sk = impala_tpcds_date_dim.d_date_sk
         and impala_tpcds_store_sales.ss_store_sk = impala_tpcds_store.s_store_sk  
        and impala_tpcds_store_sales.ss_hdemo_sk = impala_tpcds_household_demographics.hd_demo_sk
        and impala_tpcds_store_sales.ss_addr_sk = impala_tpcds_customer_address.ca_address_sk
        and impala_tpcds_date_dim.d_dom between 1 and 2 
        and (impala_tpcds_household_demographics.hd_dep_count = 4 or
             impala_tpcds_household_demographics.hd_vehicle_count= 0)
        and impala_tpcds_date_dim.d_year in (1999,1999+1,1999+2)
        and impala_tpcds_store.s_city in ('Pleasant Hill','Bethel')
       group by ss_ticket_number
               ,ss_customer_sk
               ,ss_addr_sk,ca_city) dn
      ,impala_tpcds_customer
      ,impala_tpcds_customer_address current_addr
 where ss_customer_sk = c_customer_sk
   and impala_tpcds_customer.c_current_addr_sk = current_addr.ca_address_sk
   and current_addr.ca_city <> bought_city
 order by c_last_name
         ,ss_ticket_number
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_household_demographics
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F09:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=108.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  24:MERGING-EXCHANGE [UNPARTITIONED]
     order by: c_last_name ASC NULLS LAST, ss_ticket_number ASC NULLS LAST
     limit: 100
     mem-estimate=108.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=104B cardinality=0
     in pipelines: 15(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=3.97MB mem-reservation=3.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F09, EXCHANGE=24, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  15:TOP-N [LIMIT=100]
  |  order by: c_last_name ASC NULLS LAST, ss_ticket_number ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=15 row-size=104B cardinality=0
  |  in pipelines: 15(GETNEXT), 01(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=14 row-size=104B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  14:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer.c_customer_sk = default.impala_tpcds_store_sales.ss_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: current_addr.ca_city != default.impala_tpcds_customer_address.ca_city
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,13 row-size=124B cardinality=0
  |  in pipelines: 01(GETNEXT), 22(OPEN)
  |
  |--23:EXCHANGE [BROADCAST]
  |     mem-estimate=80.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=13 row-size=76B cardinality=0
  |     in pipelines: 22(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer.c_current_addr_sk = current_addr.ca_address_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=48B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--16:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=16B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer.c_current_addr_sk IS NOT NULL, default.impala_tpcds_customer.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=32B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=16, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_customer_address current_addr, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: current_addr.ca_address_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=16B cardinality=0
     in pipelines: 02(GETNEXT)

F07:PLAN FRAGMENT [HASH(default.impala_tpcds_store_sales.ss_customer_sk,default.impala_tpcds_store_sales.ss_addr_sk,default.impala_tpcds_store_sales.ss_ticket_number,default.impala_tpcds_customer_address.ca_city)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.08MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=23, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_ext_sales_price), _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_ext_list_price), _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_ext_tax)
  |  group by: default.impala_tpcds_store_sales.ss_customer_sk, default.impala_tpcds_store_sales.ss_addr_sk, default.impala_tpcds_store_sales.ss_ticket_number, default.impala_tpcds_customer_address.ca_city
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=76B cardinality=0
  |  in pipelines: 22(GETNEXT), 04(OPEN)
  |
  21:EXCHANGE [HASH(default.impala_tpcds_store_sales.ss_customer_sk,default.impala_tpcds_store_sales.ss_addr_sk,default.impala_tpcds_store_sales.ss_ticket_number,default.impala_tpcds_customer_address.ca_city)]
     mem-estimate=80.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=76B cardinality=0
     in pipelines: 04(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=135.82MB mem-reservation=41.75MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=21, HASH(default.impala_tpcds_store_sales.ss_customer_sk,default.impala_tpcds_store_sales.ss_addr_sk,default.impala_tpcds_store_sales.ss_ticket_number,default.impala_tpcds_customer_address.ca_city)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales.ss_ext_sales_price), sum(default.impala_tpcds_store_sales.ss_ext_list_price), sum(default.impala_tpcds_store_sales.ss_ext_tax)
  |  group by: default.impala_tpcds_store_sales.ss_customer_sk, default.impala_tpcds_store_sales.ss_addr_sk, default.impala_tpcds_store_sales.ss_ticket_number, default.impala_tpcds_customer_address.ca_city
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=13 row-size=76B cardinality=0
  |  in pipelines: 04(GETNEXT)
  |
  12:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_addr_sk = default.impala_tpcds_customer_address.ca_address_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=4,5,7,9,11 row-size=96B cardinality=0
  |  in pipelines: 04(GETNEXT), 11(OPEN)
  |
  |--20:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=11 row-size=16B cardinality=0
  |     in pipelines: 11(GETNEXT)
  |
  10:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_hdemo_sk = default.impala_tpcds_household_demographics.hd_demo_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=4,5,7,9 row-size=80B cardinality=0
  |  in pipelines: 04(GETNEXT), 09(OPEN)
  |
  |--19:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=9 row-size=12B cardinality=0
  |     in pipelines: 09(GETNEXT)
  |
  08:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_store_sk = default.impala_tpcds_store.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=4,5,7 row-size=68B cardinality=0
  |  in pipelines: 04(GETNEXT), 07(OPEN)
  |
  |--18:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=7 row-size=16B cardinality=0
  |     in pipelines: 07(GETNEXT)
  |
  06:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=4,5 row-size=52B cardinality=0
  |  in pipelines: 04(GETNEXT), 05(OPEN)
  |
  |--17:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=5 row-size=12B cardinality=0
  |     in pipelines: 05(GETNEXT)
  |
  04:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_addr_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_customer_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_hdemo_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_customer_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_ticket_number, ss_ext_sales_price, ss_ext_list_price, ss_ext_tax
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=40B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=17, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_dom >= CAST(1 AS INT) AND default.impala_tpcds_date_dim.d_dom <= CAST(2 AS INT), default.impala_tpcds_date_dim.d_year IN (CAST(1999 AS INT), add(CAST(1999 AS INT), CAST(1 AS INT)), add(CAST(1999 AS INT), CAST(2 AS INT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=12B cardinality=0
     in pipelines: 05(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=18, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store.s_store_sk IS NOT NULL, default.impala_tpcds_store.s_city IN ('Pleasant Hill', 'Bethel')
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_store.s_city IN ('Pleasant Hill', 'Bethel')
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=16B cardinality=0
     in pipelines: 07(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=19, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:SCAN HDFS [default.impala_tpcds_household_demographics, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_household_demographics.hd_demo_sk IS NOT NULL, default.impala_tpcds_household_demographics.hd_dep_count = CAST(4 AS INT) OR default.impala_tpcds_household_demographics.hd_vehicle_count = CAST(0 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=9 row-size=12B cardinality=0
     in pipelines: 09(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=20, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address.ca_address_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=16B cardinality=0
     in pipelines: 11(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

