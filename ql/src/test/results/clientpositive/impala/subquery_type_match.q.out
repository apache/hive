PREHOOK: query: create table my_test_table (
  id integer,
  tinyint_col tinyint,
  smallint_col smallint,
  int_col int,
  bigint_col bigint,
  year int,
  month int,
  day int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@my_test_table
POSTHOOK: query: create table my_test_table (
  id integer,
  tinyint_col tinyint,
  smallint_col smallint,
  int_col int,
  bigint_col bigint,
  year int,
  month int,
  day int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@my_test_table
HMS CALL get_table_req FOR my_test_table
HMS CALL get_foreign_keys FOR my_test_table
PREHOOK: query: explain cbo physical
select count(distinct id)
from my_test_table t1
where t1.day not in
  (select tt1.tinyint_col as tinyint_col_1
   from my_test_table tt1
   where t1.smallint_col = tt1.smallint_col)
PREHOOK: type: QUERY
PREHOOK: Input: default@my_test_table
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical
select count(distinct id)
from my_test_table t1
where t1.day not in
  (select tt1.tinyint_col as tinyint_col_1
   from my_test_table tt1
   where t1.smallint_col = tt1.smallint_col)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@my_test_table
CBO PLAN:
ImpalaAggregateRel(group=[{}], agg#0=[count($0)])
  ImpalaAggregateRel(group=[{0}])
    ImpalaJoinRel(condition=[AND(=($1, $8), =($9, $2))], joinType=[left])
      ImpalaJoinRel(condition=[=($1, $3)], joinType=[left])
        ImpalaProjectPassthroughRel(id=[$0], smallint_col=[$2], day=[$7])
          ImpalaHdfsScanRel(table=[[default, my_test_table]])
        ImpalaAggregateRel(group=[{2}], c=[COUNT()], ck=[COUNT($1)])
          ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[IS NOT NULL($2)])
      ImpalaJoinRel(condition=[=($3, CAST($0):INTEGER)], joinType=[inner])
        ImpalaProjectPassthroughRel(tinyint_col_1=[$0], literalTrue=[true], smallint_col=[$1])
          ImpalaAggregateRel(group=[{1, 2}])
            ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[AND(IS NOT NULL($2), IS NOT NULL(CAST($1):INTEGER))])
        ImpalaAggregateRel(group=[{7}])
          ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[IS NOT NULL($7)])

HMS CALL get_table_req FOR my_test_table
HMS CALL get_foreign_keys FOR my_test_table
PREHOOK: query: explain cbo physical
select count(t1.c) over () from
  (select max(int_col) c from my_test_table) t1
where t1.c not in
  (select sum(t1.smallint_col) from my_test_table t1)
PREHOOK: type: QUERY
PREHOOK: Input: default@my_test_table
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical
select count(t1.c) over () from
  (select max(int_col) c from my_test_table) t1
where t1.c not in
  (select sum(t1.smallint_col) from my_test_table t1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@my_test_table
CBO PLAN:
ImpalaProjectPassthroughRel(_o__col2=[count($0) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
  ImpalaProjectRel($f0=[$2], c=[$3], ck=[$4], _o__c0=[$0], literalTrue=[$1], condition=[OR(=($1, 0), AND(IS NULL($4), >=($2, $1), IS NOT NULL($0)))])
    ImpalaJoinRel(condition=[true], joinType=[inner])
      ImpalaJoinRel(condition=[=(CAST($2):BIGINT, $0)], joinType=[right])
        ImpalaProjectPassthroughRel(_o__c0=[$0], literalTrue=[true])
          ImpalaAggregateRel(group=[{}], agg#0=[sum($0)], condition=[IS NOT NULL($0)])
            ImpalaProjectPassthroughRel($f0=[CAST($2):BIGINT])
              ImpalaHdfsScanRel(table=[[default, my_test_table]])
        ImpalaAggregateRel(group=[{}], agg#0=[max($3)])
          ImpalaHdfsScanRel(table=[[default, my_test_table]])
      ImpalaAggregateRel(group=[{}], c=[COUNT()], ck=[COUNT($0)])
        ImpalaAggregateRel(group=[{}], agg#0=[sum($0)])
          ImpalaProjectPassthroughRel($f0=[CAST($2):BIGINT])
            ImpalaHdfsScanRel(table=[[default, my_test_table]])

HMS CALL get_table_req FOR foo
HMS CALL get_table_req FOR my_test_table
HMS CALL get_table_req FOR foo
HMS CALL get_foreign_keys FOR my_test_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
PREHOOK: query: explain cbo physical
WITH foo AS (SELECT 1 FROM my_test_table WHERE int_col IN (SELECT 1))
SELECT * FROM foo
UNION SELECT * FROM foo
PREHOOK: type: QUERY
PREHOOK: Input: default@my_test_table
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical
WITH foo AS (SELECT 1 FROM my_test_table WHERE int_col IN (SELECT 1))
SELECT * FROM foo
UNION SELECT * FROM foo
POSTHOOK: type: QUERY
POSTHOOK: Input: default@my_test_table
CBO PLAN:
ImpalaProjectPassthroughRel(_o__c0=[1:TINYINT])
  ImpalaAggregateRel(group=[{0}])
    ImpalaProjectPassthroughRel($f0=[true])
      ImpalaUnionRel(all=[true])
        ImpalaProjectPassthroughRel(_o__c0=[1:TINYINT])
          ImpalaJoinRel(condition=[true], joinType=[semi])
            ImpalaProjectPassthroughRel(int_col=[CAST(1):INTEGER])
              ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[=($3, 1)])
            ImpalaAggregateRel(group=[{0}])
              ImpalaProjectPassthroughRel($f0=[true])
                ImpalaUnionRel
        ImpalaProjectPassthroughRel(_o__c0=[1:TINYINT])
          ImpalaJoinRel(condition=[true], joinType=[semi])
            ImpalaProjectPassthroughRel(int_col=[CAST(1):INTEGER])
              ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[=($3, 1)])
            ImpalaAggregateRel(group=[{0}])
              ImpalaProjectPassthroughRel($f0=[true])
                ImpalaUnionRel

HMS CALL get_table_req FOR foo
HMS CALL get_table_req FOR my_test_table
HMS CALL get_table_req FOR foo
HMS CALL get_foreign_keys FOR my_test_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
HMS CALL get_table_req FOR _dummy_table
PREHOOK: query: explain cbo physical
WITH foo AS (SELECT 1 FROM my_test_table WHERE int_col IN (SELECT 1))
SELECT * FROM (SELECT * FROM foo UNION SELECT * FROM foo) bar
PREHOOK: type: QUERY
PREHOOK: Input: default@my_test_table
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical
WITH foo AS (SELECT 1 FROM my_test_table WHERE int_col IN (SELECT 1))
SELECT * FROM (SELECT * FROM foo UNION SELECT * FROM foo) bar
POSTHOOK: type: QUERY
POSTHOOK: Input: default@my_test_table
CBO PLAN:
ImpalaProjectPassthroughRel(_o__c0=[1:TINYINT])
  ImpalaAggregateRel(group=[{0}])
    ImpalaProjectPassthroughRel($f0=[true])
      ImpalaUnionRel(all=[true])
        ImpalaProjectPassthroughRel(_o__c0=[1:TINYINT])
          ImpalaJoinRel(condition=[true], joinType=[semi])
            ImpalaProjectPassthroughRel(int_col=[CAST(1):INTEGER])
              ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[=($3, 1)])
            ImpalaAggregateRel(group=[{0}])
              ImpalaProjectPassthroughRel($f0=[true])
                ImpalaUnionRel
        ImpalaProjectPassthroughRel(_o__c0=[1:TINYINT])
          ImpalaJoinRel(condition=[true], joinType=[semi])
            ImpalaProjectPassthroughRel(int_col=[CAST(1):INTEGER])
              ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[=($3, 1)])
            ImpalaAggregateRel(group=[{0}])
              ImpalaProjectPassthroughRel($f0=[true])
                ImpalaUnionRel

HMS CALL get_table_req FOR my_test_table
HMS CALL get_foreign_keys FOR my_test_table
PREHOOK: query: explain cbo physical
select t1.int_col
from my_test_table t1 left join
  (select coalesce(t1.year, 384) as int_col
   from my_test_table t1
   where t1.bigint_col in
     (select day as int_col from my_test_table where t1.id = day)) t2
on t2.int_col = t1.month
where t1.month is not null
PREHOOK: type: QUERY
PREHOOK: Input: default@my_test_table
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical
select t1.int_col
from my_test_table t1 left join
  (select coalesce(t1.year, 384) as int_col
   from my_test_table t1
   where t1.bigint_col in
     (select day as int_col from my_test_table where t1.id = day)) t2
on t2.int_col = t1.month
where t1.month is not null
POSTHOOK: type: QUERY
POSTHOOK: Input: default@my_test_table
CBO PLAN:
ImpalaProjectPassthroughRel(int_col=[$0])
  ImpalaJoinRel(condition=[=($2, $1)], joinType=[left])
    ImpalaProjectPassthroughRel(int_col=[$3], month=[$6])
      ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[IS NOT NULL($6)])
    ImpalaProjectPassthroughRel(int_col=[COALESCE($2, 384)])
      ImpalaJoinRel(condition=[AND(=($0, $4), =($1, CAST($3):BIGINT))], joinType=[semi])
        ImpalaProjectPassthroughRel(id=[$0], bigint_col=[$4], year=[$5])
          ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[AND(IS NOT NULL(COALESCE($5, 384)), IS NOT NULL($0), IS NOT NULL($4), IS NOT NULL(CAST($0):BIGINT))])
        ImpalaProjectPassthroughRel(int_col=[$7], day=[$7])
          ImpalaHdfsScanRel(table=[[default, my_test_table]], condition=[AND(IS NOT NULL($7), IS NOT NULL(CAST($7):BIGINT))])

HMS CALL get_table_req FOR my_test_table
HMS CALL get_foreign_keys FOR my_test_table
PREHOOK: query: explain cbo physical
select id,
  exists (select id from my_test_table)
  from my_test_table
order by id
PREHOOK: type: QUERY
PREHOOK: Input: default@my_test_table
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical
select id,
  exists (select id from my_test_table)
  from my_test_table
order by id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@my_test_table
CBO PLAN:
ImpalaSortRel(sort0=[$0], dir0=[ASC])
  ImpalaProjectRel(id=[$0], _o__c1=[IS NOT NULL($1)])
    ImpalaJoinRel(condition=[true], joinType=[left])
      ImpalaProjectPassthroughRel(id=[$0])
        ImpalaHdfsScanRel(table=[[default, my_test_table]])
      ImpalaAggregateRel(group=[{0}])
        ImpalaProjectPassthroughRel($f0=[true])
          ImpalaHdfsScanRel(table=[[default, my_test_table]])

