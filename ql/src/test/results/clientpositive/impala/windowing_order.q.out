HMS CALL get_table_req FOR tab_sales_n1
PREHOOK: query: drop table if exists tab_sales_n1
PREHOOK: type: DROPTABLE
HMS CALL get_table_req FOR tab_sales_n1
POSTHOOK: query: drop table if exists tab_sales_n1
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table tab_sales_n1
(
    ss_sold_date_sk           int,
    ss_sold_time_sk           int,
    ss_item_sk                int,
    ss_customer_sk            int,
    ss_cdemo_sk               int,
    ss_hdemo_sk               int,
    ss_addr_sk                int,
    ss_store_sk               int,
    ss_promo_sk               int,
    ss_ticket_number          int,
    ss_quantity               int,
    ss_wholesale_cost         decimal(7,2),
    ss_list_price             decimal(7,2),
    ss_sales_price            decimal(7,2),
    ss_ext_discount_amt       decimal(7,2),
    ss_ext_sales_price        decimal(7,2),
    ss_ext_wholesale_cost     decimal(7,2),
    ss_ext_list_price         decimal(7,2),
    ss_ext_tax                decimal(7,2),
    ss_coupon_amt             decimal(7,2),
    ss_net_paid               decimal(7,2),
    ss_net_paid_inc_tax       decimal(7,2),
    ss_net_profit             decimal(7,2)
)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab_sales_n1
POSTHOOK: query: create table tab_sales_n1
(
    ss_sold_date_sk           int,
    ss_sold_time_sk           int,
    ss_item_sk                int,
    ss_customer_sk            int,
    ss_cdemo_sk               int,
    ss_hdemo_sk               int,
    ss_addr_sk                int,
    ss_store_sk               int,
    ss_promo_sk               int,
    ss_ticket_number          int,
    ss_quantity               int,
    ss_wholesale_cost         decimal(7,2),
    ss_list_price             decimal(7,2),
    ss_sales_price            decimal(7,2),
    ss_ext_discount_amt       decimal(7,2),
    ss_ext_sales_price        decimal(7,2),
    ss_ext_wholesale_cost     decimal(7,2),
    ss_ext_list_price         decimal(7,2),
    ss_ext_tax                decimal(7,2),
    ss_coupon_amt             decimal(7,2),
    ss_net_paid               decimal(7,2),
    ss_net_paid_inc_tax       decimal(7,2),
    ss_net_profit             decimal(7,2)
)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab_sales_n1
HMS CALL get_table_req FOR tab_sales_n1
HMS CALL get_foreign_keys FOR tab_sales_n1
PREHOOK: query: explain cbo physical
select sum(ss_quantity) over(order by ss_quantity) from tab_sales_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@tab_sales_n1
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical
select sum(ss_quantity) over(order by ss_quantity) from tab_sales_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab_sales_n1
CBO PLAN:
ImpalaProjectPassthroughRel(sum_window_0=[sum($1) OVER (ORDER BY $0 NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)])
  ImpalaProjectRel(ss_quantity=[$10], $func_0=[CAST($10):BIGINT])
    ImpalaHdfsScanRel(table=[[default, tab_sales_n1]])

HMS CALL get_table_req FOR tab_sales_n1
HMS CALL get_foreign_keys FOR tab_sales_n1
PREHOOK: query: explain cbo physical
select sum(ss_net_profit) over(order by ss_net_profit) from tab_sales_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@tab_sales_n1
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical
select sum(ss_net_profit) over(order by ss_net_profit) from tab_sales_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab_sales_n1
CBO PLAN:
ImpalaProjectPassthroughRel(sum_window_0=[sum($22) OVER (ORDER BY $22 NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)])
  ImpalaHdfsScanRel(table=[[default, tab_sales_n1]])

HMS CALL get_table_req FOR tab_sales_n1
HMS CALL get_foreign_keys FOR tab_sales_n1
PREHOOK: query: explain
select row_number() over(partition by ss_sold_date_sk order by ss_quantity) from tab_sales_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@tab_sales_n1
PREHOOK: Output: streaming
POSTHOOK: query: explain
select row_number() over(partition by ss_sold_date_sk order by ss_quantity) from tab_sales_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab_sales_n1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F02:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=24.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: row_number()
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  04:EXCHANGE [UNPARTITIONED]
     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=4,3 row-size=16B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [HASH(default.tab_sales_n1.ss_sold_date_sk)] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=10.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=04, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:ANALYTIC
  |  functions: row_number()
  |  partition by: default.tab_sales_n1.ss_sold_date_sk
  |  order by: ss_quantity ASC
  |  window: ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4,3 row-size=16B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  01:SORT
  |  order by: ss_sold_date_sk ASC NULLS LAST, ss_quantity ASC NULLS LAST
  |  mem-estimate=6.00MB mem-reservation=6.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=8B cardinality=0
  |  in pipelines: 01(GETNEXT), 00(OPEN)
  |
  03:EXCHANGE [HASH(default.tab_sales_n1.ss_sold_date_sk)]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=8B cardinality=0
     in pipelines: 00(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F01, EXCHANGE=03, HASH(default.tab_sales_n1.ss_sold_date_sk)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  00:SCAN HDFS [default.tab_sales_n1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=8B cardinality=0
     in pipelines: 00(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

HMS CALL get_table_req FOR tab_sales_n1
HMS CALL get_foreign_keys FOR tab_sales_n1
PREHOOK: query: explain
select row_number() over(order by ss_quantity) from tab_sales_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@tab_sales_n1
PREHOOK: Output: streaming
POSTHOOK: query: explain
select row_number() over(order by ss_quantity) from tab_sales_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab_sales_n1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F01:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=4.02MB mem-reservation=4.00MB thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: row_number()
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  02:ANALYTIC
  |  functions: row_number()
  |  order by: ss_quantity ASC
  |  window: ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4,3 row-size=12B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  03:MERGING-EXCHANGE [UNPARTITIONED]
     order by: ss_quantity ASC NULLS LAST
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=4B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=6.00MB mem-reservation=6.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F01, EXCHANGE=03, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SORT
  |  order by: ss_quantity ASC NULLS LAST
  |  mem-estimate=6.00MB mem-reservation=6.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=4B cardinality=0
  |  in pipelines: 01(GETNEXT), 00(OPEN)
  |
  00:SCAN HDFS [default.tab_sales_n1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=4B cardinality=0
     in pipelines: 00(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

HMS CALL get_table_req FOR tab_sales_n1
PREHOOK: query: drop table if exists tab_sales_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tab_sales_n1
PREHOOK: Output: default@tab_sales_n1
HMS CALL get_table_req FOR tab_sales_n1
HMS CALL get_table_req FOR tab_sales_n1
POSTHOOK: query: drop table if exists tab_sales_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tab_sales_n1
POSTHOOK: Output: default@tab_sales_n1
