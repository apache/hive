PREHOOK: query: explain cbo select 
  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
  from
   (select ss_ticket_number
          ,ss_customer_sk
          ,impala_tpcds_store.s_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from impala_tpcds_store_sales,impala_tpcds_date_dim,impala_tpcds_store,impala_tpcds_household_demographics
    where impala_tpcds_store_sales.ss_sold_date_sk = impala_tpcds_date_dim.d_date_sk
    and impala_tpcds_store_sales.ss_store_sk = impala_tpcds_store.s_store_sk  
    and impala_tpcds_store_sales.ss_hdemo_sk = impala_tpcds_household_demographics.hd_demo_sk
    and (impala_tpcds_household_demographics.hd_dep_count = 0 or impala_tpcds_household_demographics.hd_vehicle_count > 3)
    and impala_tpcds_date_dim.d_dow = 1
    and impala_tpcds_date_dim.d_year in (1998,1998+1,1998+2) 
    and impala_tpcds_store.s_number_employees between 200 and 295
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,impala_tpcds_store.s_city) ms,impala_tpcds_customer
    where ss_customer_sk = c_customer_sk
 order by c_last_name,c_first_name,substr(s_city,1,30), profit
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_household_demographics
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select 
  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
  from
   (select ss_ticket_number
          ,ss_customer_sk
          ,impala_tpcds_store.s_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from impala_tpcds_store_sales,impala_tpcds_date_dim,impala_tpcds_store,impala_tpcds_household_demographics
    where impala_tpcds_store_sales.ss_sold_date_sk = impala_tpcds_date_dim.d_date_sk
    and impala_tpcds_store_sales.ss_store_sk = impala_tpcds_store.s_store_sk  
    and impala_tpcds_store_sales.ss_hdemo_sk = impala_tpcds_household_demographics.hd_demo_sk
    and (impala_tpcds_household_demographics.hd_dep_count = 0 or impala_tpcds_household_demographics.hd_vehicle_count > 3)
    and impala_tpcds_date_dim.d_dow = 1
    and impala_tpcds_date_dim.d_year in (1998,1998+1,1998+2) 
    and impala_tpcds_store.s_number_employees between 200 and 295
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,impala_tpcds_store.s_city) ms,impala_tpcds_customer
    where ss_customer_sk = c_customer_sk
 order by c_last_name,c_first_name,substr(s_city,1,30), profit
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_household_demographics
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaProjectPassthroughRel(c_last_name=[$0], c_first_name=[$1], _o__c2=[$2], ss_ticket_number=[$3], amt=[$4], profit=[$5])
  ImpalaSortRel(sort0=[$0], sort1=[$1], sort2=[$6], sort3=[$5], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
    ImpalaProjectRel(c_last_name=[$8], c_first_name=[$7], _o__c2=[$5], ss_ticket_number=[$0], amt=[$3], profit=[$4], (tok_function substr (tok_table_or_col s_city) 1 30)=[SUBSTRING($2, 1:BIGINT, 30:BIGINT)])
      ImpalaJoinRel(condition=[=($1, $6)], joinType=[inner])
        ImpalaProjectPassthroughRel(ss_ticket_number=[$2], ss_customer_sk=[$0], s_city=[$3], amt=[$4], profit=[$5], SUBSTRING=[SUBSTRING($3, 1:BIGINT, 30:BIGINT)])
          ImpalaAggregateRel(group=[{0, 2, 4, 11}], agg#0=[sum($5)], agg#1=[sum($6)])
            ImpalaJoinRel(condition=[=($3, $10)], joinType=[inner])
              ImpalaJoinRel(condition=[=($1, $9)], joinType=[inner])
                ImpalaJoinRel(condition=[=($7, $8)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_hdemo_sk=[$4], ss_addr_sk=[$5], ss_store_sk=[$6], ss_ticket_number=[$8], ss_coupon_amt=[$18], ss_net_profit=[$21], ss_sold_date_sk=[$22])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($6), IS NOT NULL($4), IS NOT NULL($2))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 1998, +(1998, 1), +(1998, 2)), =($7, 1), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(hd_demo_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_household_demographics]], condition=[AND(OR(=($3, 0), >($4, 3)), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(s_store_sk=[$0], s_city=[$22])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[AND(BETWEEN(false, $6, 200, 295), IS NOT NULL($0))])
        ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_first_name=[$8], c_last_name=[$9])
          ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[IS NOT NULL($0)])

PREHOOK: query: explain select 
  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
  from
   (select ss_ticket_number
          ,ss_customer_sk
          ,impala_tpcds_store.s_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from impala_tpcds_store_sales,impala_tpcds_date_dim,impala_tpcds_store,impala_tpcds_household_demographics
    where impala_tpcds_store_sales.ss_sold_date_sk = impala_tpcds_date_dim.d_date_sk
    and impala_tpcds_store_sales.ss_store_sk = impala_tpcds_store.s_store_sk  
    and impala_tpcds_store_sales.ss_hdemo_sk = impala_tpcds_household_demographics.hd_demo_sk
    and (impala_tpcds_household_demographics.hd_dep_count = 0 or impala_tpcds_household_demographics.hd_vehicle_count > 3)
    and impala_tpcds_date_dim.d_dow = 1
    and impala_tpcds_date_dim.d_year in (1998,1998+1,1998+2) 
    and impala_tpcds_store.s_number_employees between 200 and 295
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,impala_tpcds_store.s_city) ms,impala_tpcds_customer
    where ss_customer_sk = c_customer_sk
 order by c_last_name,c_first_name,substr(s_city,1,30), profit
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_household_demographics
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select 
  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
  from
   (select ss_ticket_number
          ,ss_customer_sk
          ,impala_tpcds_store.s_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from impala_tpcds_store_sales,impala_tpcds_date_dim,impala_tpcds_store,impala_tpcds_household_demographics
    where impala_tpcds_store_sales.ss_sold_date_sk = impala_tpcds_date_dim.d_date_sk
    and impala_tpcds_store_sales.ss_store_sk = impala_tpcds_store.s_store_sk  
    and impala_tpcds_store_sales.ss_hdemo_sk = impala_tpcds_household_demographics.hd_demo_sk
    and (impala_tpcds_household_demographics.hd_dep_count = 0 or impala_tpcds_household_demographics.hd_vehicle_count > 3)
    and impala_tpcds_date_dim.d_dow = 1
    and impala_tpcds_date_dim.d_year in (1998,1998+1,1998+2) 
    and impala_tpcds_store.s_number_employees between 200 and 295
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,impala_tpcds_store.s_city) ms,impala_tpcds_customer
    where ss_customer_sk = c_customer_sk
 order by c_last_name,c_first_name,substr(s_city,1,30), profit
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_household_demographics
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F07:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=92.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: c_last_name, c_first_name, _o__c2, ss_ticket_number, amt, profit
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  18:MERGING-EXCHANGE [UNPARTITIONED]
     order by: c_last_name ASC NULLS LAST, c_first_name ASC NULLS LAST, (tok_function substr (tok_table_or_col s_city) 1 30) ASC NULLS LAST, profit ASC NULLS LAST
     limit: 100
     mem-estimate=92.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=88B cardinality=0
     in pipelines: 11(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=130.03MB mem-reservation=35.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=18, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:TOP-N [LIMIT=100]
  |  order by: c_last_name ASC NULLS LAST, c_first_name ASC NULLS LAST, (tok_function substr (tok_table_or_col s_city) 1 30) ASC NULLS LAST, profit ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=11 row-size=88B cardinality=0
  |  in pipelines: 11(GETNEXT), 16(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=10 row-size=88B cardinality=0
  |  in pipelines: 16(GETNEXT)
  |
  10:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_customer_sk = default.impala_tpcds_customer.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=7,8 row-size=88B cardinality=0
  |  in pipelines: 16(GETNEXT), 09(OPEN)
  |
  |--17:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8 row-size=28B cardinality=0
  |     in pipelines: 09(GETNEXT)
  |
  16:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_coupon_amt), _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_net_profit)
  |  group by: default.impala_tpcds_store_sales.ss_customer_sk, default.impala_tpcds_store_sales.ss_addr_sk, default.impala_tpcds_store_sales.ss_ticket_number, default.impala_tpcds_store.s_city
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=7 row-size=60B cardinality=0
  |  in pipelines: 16(GETNEXT), 01(OPEN)
  |
  15:EXCHANGE [HASH(default.impala_tpcds_store_sales.ss_customer_sk,default.impala_tpcds_store_sales.ss_addr_sk,default.impala_tpcds_store_sales.ss_ticket_number,default.impala_tpcds_store.s_city)]
     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=60B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.87MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=15, HASH(default.impala_tpcds_store_sales.ss_customer_sk,default.impala_tpcds_store_sales.ss_addr_sk,default.impala_tpcds_store_sales.ss_ticket_number,default.impala_tpcds_store.s_city)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales.ss_coupon_amt), sum(default.impala_tpcds_store_sales.ss_net_profit)
  |  group by: default.impala_tpcds_store_sales.ss_customer_sk, default.impala_tpcds_store_sales.ss_addr_sk, default.impala_tpcds_store_sales.ss_ticket_number, default.impala_tpcds_store.s_city
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=7 row-size=60B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  07:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_store_sk = default.impala_tpcds_store.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3,5 row-size=80B cardinality=0
  |  in pipelines: 01(GETNEXT), 06(OPEN)
  |
  |--14:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=5 row-size=20B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_hdemo_sk = default.impala_tpcds_household_demographics.hd_demo_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3 row-size=60B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--13:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=12B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1 row-size=48B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--12:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1 row-size=12B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_customer_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_hdemo_sk IS NOT NULL, default.impala_tpcds_store_sales.ss_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_customer_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_ticket_number, ss_coupon_amt, ss_net_profit
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=36B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=12, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_dow = CAST(1 AS INT), default.impala_tpcds_date_dim.d_year IN (CAST(1998 AS INT), add(CAST(1998 AS INT), CAST(1 AS INT)), add(CAST(1998 AS INT), CAST(2 AS INT)))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_dow = CAST(1 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=12B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=13, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_household_demographics, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_household_demographics.hd_demo_sk IS NOT NULL, default.impala_tpcds_household_demographics.hd_dep_count = CAST(0 AS INT) OR default.impala_tpcds_household_demographics.hd_vehicle_count > CAST(3 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=12B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=14, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store.s_store_sk IS NOT NULL, default.impala_tpcds_store.s_number_employees >= CAST(200 AS INT) AND default.impala_tpcds_store.s_number_employees <= CAST(295 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=20B cardinality=0
     in pipelines: 06(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F06, EXCHANGE=17, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=28B cardinality=0
     in pipelines: 09(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

