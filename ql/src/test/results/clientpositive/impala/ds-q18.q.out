PREHOOK: query: explain cbo physical select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as decimal(12,2))) agg1,
        avg( cast(cs_list_price as decimal(12,2))) agg2,
        avg( cast(cs_coupon_amt as decimal(12,2))) agg3,
        avg( cast(cs_sales_price as decimal(12,2))) agg4,
        avg( cast(cs_net_profit as decimal(12,2))) agg5,
        avg( cast(c_birth_year as decimal(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7
 from impala_tpcds_catalog_sales, impala_tpcds_customer_demographics cd1, 
      impala_tpcds_customer_demographics cd2, impala_tpcds_customer, impala_tpcds_customer_address, impala_tpcds_date_dim, impala_tpcds_item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'Unknown' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (5,1,4,7,8,9) and
       d_year = 2002 and
       ca_state in ('AR','TX','NC'
                   ,'GA','MS','WV','AL')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
     i_item_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_customer_demographics
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as decimal(12,2))) agg1,
        avg( cast(cs_list_price as decimal(12,2))) agg2,
        avg( cast(cs_coupon_amt as decimal(12,2))) agg3,
        avg( cast(cs_sales_price as decimal(12,2))) agg4,
        avg( cast(cs_net_profit as decimal(12,2))) agg5,
        avg( cast(c_birth_year as decimal(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7
 from impala_tpcds_catalog_sales, impala_tpcds_customer_demographics cd1, 
      impala_tpcds_customer_demographics cd2, impala_tpcds_customer, impala_tpcds_customer_address, impala_tpcds_date_dim, impala_tpcds_item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'Unknown' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (5,1,4,7,8,9) and
       d_year = 2002 and
       ca_state in ('AR','TX','NC'
                   ,'GA','MS','WV','AL')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
     i_item_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_customer_demographics
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
CBO PLAN:
ImpalaSortRel(sort0=[$1], sort1=[$2], sort2=[$3], sort3=[$0], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
  ImpalaProjectRel($f0=[$0], $f1=[$3], $f2=[$2], $f3=[$1], $f4=[CAST(/($4, CAST($5):DECIMAL(19, 0))):DECIMAL(16, 6)], $f5=[CAST(/($6, CAST($7):DECIMAL(19, 0))):DECIMAL(16, 6)], $f6=[CAST(/($8, CAST($9):DECIMAL(19, 0))):DECIMAL(16, 6)], $f7=[CAST(/($10, CAST($11):DECIMAL(19, 0))):DECIMAL(16, 6)], $f8=[CAST(/($12, CAST($13):DECIMAL(19, 0))):DECIMAL(16, 6)], $f9=[CAST(/($14, CAST($15):DECIMAL(19, 0))):DECIMAL(16, 6)], $f10=[CAST(/($16, CAST($17):DECIMAL(19, 0))):DECIMAL(16, 6)])
    ImpalaAggregateRel(group=[{13, 20, 21, 22}], groups=[[{13, 20, 21, 22}, {13, 21, 22}, {13, 22}, {13}, {}]], agg#0=[sum($4)], agg#1=[count($4)], agg#2=[sum($5)], agg#3=[count($5)], agg#4=[sum($6)], agg#5=[count($6)], agg#6=[sum($7)], agg#7=[count($7)], agg#8=[sum($8)], agg#9=[count($8)], agg#10=[sum($17)], agg#11=[count($17)], agg#12=[sum($11)], agg#13=[count($11)])
      ImpalaJoinRel(condition=[=($1, $14)], joinType=[inner])
        ImpalaJoinRel(condition=[=($3, $12)], joinType=[inner])
          ImpalaJoinRel(condition=[=($2, $10)], joinType=[inner])
            ImpalaJoinRel(condition=[=($0, $9)], joinType=[inner])
              ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$3], cs_bill_cdemo_sk=[$4], cs_item_sk=[$15], CAST=[CAST($18):DECIMAL(12, 2)], CAST5=[CAST($20):DECIMAL(12, 2)], CAST6=[CAST($27):DECIMAL(12, 2)], CAST7=[CAST($21):DECIMAL(12, 2)], CAST8=[CAST($33):DECIMAL(12, 2)])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($15), IS NOT NULL($0), IS NOT NULL($3), IS NOT NULL($4))])
              ImpalaProjectPassthroughRel(d_date_sk=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 2002), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(cd_demo_sk=[$0], CAST=[CAST($6):DECIMAL(12, 2)])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_demographics]], condition=[AND(=($1, _UTF-16LE'M'), =($3, _UTF-16LE'Unknown'), IS NOT NULL($0))])
          ImpalaProjectPassthroughRel(i_item_sk=[$0], i_item_id=[$1])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[IS NOT NULL($0)])
        ImpalaJoinRel(condition=[=($2, $5)], joinType=[inner])
          ImpalaJoinRel(condition=[=($1, $4)], joinType=[inner])
            ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_current_cdemo_sk=[$2], c_current_addr_sk=[$4], CAST=[CAST($13):DECIMAL(12, 2)])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IN($12, 5, 1, 4, 7, 8, 9), IS NOT NULL($4), IS NOT NULL($0), IS NOT NULL($2))])
            ImpalaProjectPassthroughRel(cd_demo_sk=[$0])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_demographics]], condition=[IS NOT NULL($0)])
          ImpalaProjectPassthroughRel(ca_address_sk=[$0], ca_county=[$7], ca_state=[$8], ca_country=[$10])
            ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer_address]], condition=[AND(IN($8, _UTF-16LE'AR':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'TX':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'NC':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'GA':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'MS':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'WV':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'AL':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])

PREHOOK: query: explain select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as decimal(12,2))) agg1,
        avg( cast(cs_list_price as decimal(12,2))) agg2,
        avg( cast(cs_coupon_amt as decimal(12,2))) agg3,
        avg( cast(cs_sales_price as decimal(12,2))) agg4,
        avg( cast(cs_net_profit as decimal(12,2))) agg5,
        avg( cast(c_birth_year as decimal(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7
 from impala_tpcds_catalog_sales, impala_tpcds_customer_demographics cd1, 
      impala_tpcds_customer_demographics cd2, impala_tpcds_customer, impala_tpcds_customer_address, impala_tpcds_date_dim, impala_tpcds_item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'Unknown' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (5,1,4,7,8,9) and
       d_year = 2002 and
       ca_state in ('AR','TX','NC'
                   ,'GA','MS','WV','AL')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
     i_item_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_customer_address
PREHOOK: Input: default@impala_tpcds_customer_demographics
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Output: streaming
POSTHOOK: query: explain select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as decimal(12,2))) agg1,
        avg( cast(cs_list_price as decimal(12,2))) agg2,
        avg( cast(cs_coupon_amt as decimal(12,2))) agg3,
        avg( cast(cs_sales_price as decimal(12,2))) agg4,
        avg( cast(cs_net_profit as decimal(12,2))) agg5,
        avg( cast(c_birth_year as decimal(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7
 from impala_tpcds_catalog_sales, impala_tpcds_customer_demographics cd1, 
      impala_tpcds_customer_demographics cd2, impala_tpcds_customer, impala_tpcds_customer_address, impala_tpcds_date_dim, impala_tpcds_item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'Unknown' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (5,1,4,7,8,9) and
       d_year = 2002 and
       ca_state in ('AR','TX','NC'
                   ,'GA','MS','WV','AL')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
     i_item_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_customer_address
POSTHOOK: Input: default@impala_tpcds_customer_demographics
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F09:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=108.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_item.i_item_id WHEN 15 THEN default.impala_tpcds_item.i_item_id WHEN 16 THEN default.impala_tpcds_item.i_item_id WHEN 17 THEN default.impala_tpcds_item.i_item_id WHEN 18 THEN NULL END, CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_customer_address.ca_country WHEN 15 THEN default.impala_tpcds_customer_address.ca_country WHEN 16 THEN default.impala_tpcds_customer_address.ca_country WHEN 17 THEN NULL WHEN 18 THEN NULL END, CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_customer_address.ca_state WHEN 15 THEN default.impala_tpcds_customer_address.ca_state WHEN 16 THEN NULL WHEN 17 THEN NULL WHEN 18 THEN NULL END, CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_customer_address.ca_county WHEN 15 THEN NULL WHEN 16 THEN NULL WHEN 17 THEN NULL WHEN 18 THEN NULL END, casttodecimal(divide(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN 15 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN 16 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN 17 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN 18 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) END), casttodecimal(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN 15 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN 16 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN 17 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN 18 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) END)))), casttodecimal(divide(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN 15 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN 16 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN 17 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN 18 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) END), casttodecimal(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN 15 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN 16 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN 17 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN 18 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) END)))), casttodecimal(divide(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN 15 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN 16 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN 17 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN 18 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) END), casttodecimal(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN 15 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN 16 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN 17 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN 18 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) END)))), casttodecimal(divide(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN 15 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN 16 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN 17 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN 18 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) END), casttodecimal(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN 15 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN 16 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN 17 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN 18 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) END)))), casttodecimal(divide(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN 15 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN 16 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN 17 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN 18 THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) END), casttodecimal(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN 15 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN 16 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN 17 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN 18 THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) END)))), casttodecimal(divide(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN 15 THEN sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN 16 THEN sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN 17 THEN sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN 18 THEN sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) END), casttodecimal(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN 15 THEN count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN 16 THEN count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN 17 THEN count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN 18 THEN count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) END)))), casttodecimal(divide(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.sum(casttodecimal(cd1.cd_dep_count)) WHEN 15 THEN sum(casttodecimal(cd1.cd_dep_count)) WHEN 16 THEN sum(casttodecimal(cd1.cd_dep_count)) WHEN 17 THEN sum(casttodecimal(cd1.cd_dep_count)) WHEN 18 THEN sum(casttodecimal(cd1.cd_dep_count)) END), casttodecimal(aggif(valid_tid(16,17,18,14,15) IN (14, 15, 16, 17, 18), CASE valid_tid(16,17,18,14,15) WHEN 14 THEN _impala_builtins.count(casttodecimal(cd1.cd_dep_count)) WHEN 15 THEN count(casttodecimal(cd1.cd_dep_count)) WHEN 16 THEN count(casttodecimal(cd1.cd_dep_count)) WHEN 17 THEN count(casttodecimal(cd1.cd_dep_count)) WHEN 18 THEN count(casttodecimal(cd1.cd_dep_count)) END))))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  25:MERGING-EXCHANGE [UNPARTITIONED]
     order by: CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_customer_address.ca_country WHEN 15 THEN default.impala_tpcds_customer_address.ca_country WHEN 16 THEN default.impala_tpcds_customer_address.ca_country WHEN 17 THEN NULL WHEN 18 THEN NULL END ASC NULLS LAST, CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_customer_address.ca_state WHEN 15 THEN default.impala_tpcds_customer_address.ca_state WHEN 16 THEN NULL WHEN 17 THEN NULL WHEN 18 THEN NULL END ASC NULLS LAST, CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_customer_address.ca_county WHEN 15 THEN NULL WHEN 16 THEN NULL WHEN 17 THEN NULL WHEN 18 THEN NULL END ASC NULLS LAST, CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_item.i_item_id WHEN 15 THEN default.impala_tpcds_item.i_item_id WHEN 16 THEN default.impala_tpcds_item.i_item_id WHEN 17 THEN default.impala_tpcds_item.i_item_id WHEN 18 THEN NULL END ASC NULLS LAST
     limit: 100
     mem-estimate=108.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=104B cardinality=0
     in pipelines: 16(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=650.00MB mem-reservation=171.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F09, EXCHANGE=25, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  16:TOP-N [LIMIT=100]
  |  order by: CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_customer_address.ca_country WHEN 15 THEN default.impala_tpcds_customer_address.ca_country WHEN 16 THEN default.impala_tpcds_customer_address.ca_country WHEN 17 THEN NULL WHEN 18 THEN NULL END ASC NULLS LAST, CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_customer_address.ca_state WHEN 15 THEN default.impala_tpcds_customer_address.ca_state WHEN 16 THEN NULL WHEN 17 THEN NULL WHEN 18 THEN NULL END ASC NULLS LAST, CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_customer_address.ca_county WHEN 15 THEN NULL WHEN 16 THEN NULL WHEN 17 THEN NULL WHEN 18 THEN NULL END ASC NULLS LAST, CASE valid_tid(16,17,18,14,15) WHEN 14 THEN default.impala_tpcds_item.i_item_id WHEN 15 THEN default.impala_tpcds_item.i_item_id WHEN 16 THEN default.impala_tpcds_item.i_item_id WHEN 17 THEN default.impala_tpcds_item.i_item_id WHEN 18 THEN NULL END ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=21 row-size=104B cardinality=0
  |  in pipelines: 16(GETNEXT), 15(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=20 row-size=104B cardinality=0
  |  in pipelines: 15(GETNEXT)
  |
  15:AGGREGATE [FINALIZE]
  |  output: aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN CAST(15 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN CAST(16 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN CAST(17 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN CAST(18 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN CAST(15 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN CAST(16 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN CAST(17 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) WHEN CAST(18 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN CAST(15 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN CAST(16 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN CAST(17 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN CAST(18 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN CAST(15 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN CAST(16 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN CAST(17 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) WHEN CAST(18 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN CAST(15 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN CAST(16 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN CAST(17 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN CAST(18 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN CAST(15 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN CAST(16 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN CAST(17 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) WHEN CAST(18 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN CAST(15 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN CAST(16 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN CAST(17 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN CAST(18 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN CAST(15 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN CAST(16 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN CAST(17 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) WHEN CAST(18 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN CAST(15 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN CAST(16 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN CAST(17 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN CAST(18 AS INT) THEN sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN CAST(15 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN CAST(16 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN CAST(17 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) WHEN CAST(18 AS INT) THEN count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN CAST(15 AS INT) THEN sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN CAST(16 AS INT) THEN sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN CAST(17 AS INT) THEN sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN CAST(18 AS INT) THEN sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN CAST(15 AS INT) THEN count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN CAST(16 AS INT) THEN count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN CAST(17 AS INT) THEN count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) WHEN CAST(18 AS INT) THEN count(casttodecimal(default.impala_tpcds_customer.c_birth_year)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.sum(casttodecimal(cd1.cd_dep_count)) WHEN CAST(15 AS INT) THEN sum(casttodecimal(cd1.cd_dep_count)) WHEN CAST(16 AS INT) THEN sum(casttodecimal(cd1.cd_dep_count)) WHEN CAST(17 AS INT) THEN sum(casttodecimal(cd1.cd_dep_count)) WHEN CAST(18 AS INT) THEN sum(casttodecimal(cd1.cd_dep_count)) END), aggif(valid_tid(16,17,18,14,15) IN (CAST(14 AS INT), CAST(15 AS INT), CAST(16 AS INT), CAST(17 AS INT), CAST(18 AS INT)), CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN _impala_builtins.count(casttodecimal(cd1.cd_dep_count)) WHEN CAST(15 AS INT) THEN count(casttodecimal(cd1.cd_dep_count)) WHEN CAST(16 AS INT) THEN count(casttodecimal(cd1.cd_dep_count)) WHEN CAST(17 AS INT) THEN count(casttodecimal(cd1.cd_dep_count)) WHEN CAST(18 AS INT) THEN count(casttodecimal(cd1.cd_dep_count)) END)
  |  group by: CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN default.impala_tpcds_item.i_item_id WHEN CAST(15 AS INT) THEN default.impala_tpcds_item.i_item_id WHEN CAST(16 AS INT) THEN default.impala_tpcds_item.i_item_id WHEN CAST(17 AS INT) THEN default.impala_tpcds_item.i_item_id WHEN CAST(18 AS INT) THEN NULL END, CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN default.impala_tpcds_customer_address.ca_county WHEN CAST(15 AS INT) THEN NULL WHEN CAST(16 AS INT) THEN NULL WHEN CAST(17 AS INT) THEN NULL WHEN CAST(18 AS INT) THEN NULL END, CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN default.impala_tpcds_customer_address.ca_state WHEN CAST(15 AS INT) THEN default.impala_tpcds_customer_address.ca_state WHEN CAST(16 AS INT) THEN NULL WHEN CAST(17 AS INT) THEN NULL WHEN CAST(18 AS INT) THEN NULL END, CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN default.impala_tpcds_customer_address.ca_country WHEN CAST(15 AS INT) THEN default.impala_tpcds_customer_address.ca_country WHEN CAST(16 AS INT) THEN default.impala_tpcds_customer_address.ca_country WHEN CAST(17 AS INT) THEN NULL WHEN CAST(18 AS INT) THEN NULL END, CASE valid_tid(16,17,18,14,15) WHEN CAST(14 AS INT) THEN CAST(14 AS INT) WHEN CAST(15 AS INT) THEN CAST(15 AS INT) WHEN CAST(16 AS INT) THEN CAST(16 AS INT) WHEN CAST(17 AS INT) THEN CAST(17 AS INT) WHEN CAST(18 AS INT) THEN CAST(18 AS INT) END
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=19 row-size=220B cardinality=0
  |  in pipelines: 15(GETNEXT), 24(OPEN)
  |
  24:AGGREGATE [FINALIZE]
  |  Class 0
  |    output: _impala_builtins.sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), _impala_builtins.count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), _impala_builtins.sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), _impala_builtins.count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), _impala_builtins.sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), _impala_builtins.count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), _impala_builtins.sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), _impala_builtins.count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), _impala_builtins.sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), _impala_builtins.count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), _impala_builtins.sum:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), _impala_builtins.count:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), _impala_builtins.sum:merge(casttodecimal(cd1.cd_dep_count)), _impala_builtins.count:merge(casttodecimal(cd1.cd_dep_count))
  |    group by: default.impala_tpcds_item.i_item_id, default.impala_tpcds_customer_address.ca_county, default.impala_tpcds_customer_address.ca_state, default.impala_tpcds_customer_address.ca_country
  |  Class 1
  |    output: sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), sum:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), count:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), sum:merge(casttodecimal(cd1.cd_dep_count)), count:merge(casttodecimal(cd1.cd_dep_count))
  |    group by: default.impala_tpcds_item.i_item_id, NULL, default.impala_tpcds_customer_address.ca_state, default.impala_tpcds_customer_address.ca_country
  |  Class 2
  |    output: sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), sum:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), count:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), sum:merge(casttodecimal(cd1.cd_dep_count)), count:merge(casttodecimal(cd1.cd_dep_count))
  |    group by: default.impala_tpcds_item.i_item_id, NULL, NULL, default.impala_tpcds_customer_address.ca_country
  |  Class 3
  |    output: sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), sum:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), count:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), sum:merge(casttodecimal(cd1.cd_dep_count)), count:merge(casttodecimal(cd1.cd_dep_count))
  |    group by: default.impala_tpcds_item.i_item_id, NULL, NULL, NULL
  |  Class 4
  |    output: sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), sum:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), count:merge(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), sum:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), count:merge(casttodecimal(default.impala_tpcds_customer.c_birth_year)), sum:merge(casttodecimal(cd1.cd_dep_count)), count:merge(casttodecimal(cd1.cd_dep_count))
  |    group by: NULL, NULL, NULL, NULL
  |  mem-estimate=522.00MB mem-reservation=137.94MB thread-reservation=0
  |  tuple-ids=14N,15N,16N,17N,18N row-size=1.05KB cardinality=0
  |  in pipelines: 24(GETNEXT), 01(OPEN)
  |
  23:EXCHANGE [HASH(CASE valid_tid(16,17,18,14,15) WHEN 14 THEN murmur_hash(default.impala_tpcds_item.i_item_id) WHEN 15 THEN murmur_hash(default.impala_tpcds_item.i_item_id) WHEN 16 THEN murmur_hash(default.impala_tpcds_item.i_item_id) WHEN 17 THEN murmur_hash(default.impala_tpcds_item.i_item_id) WHEN 18 THEN murmur_hash(NULL) END,CASE valid_tid(16,17,18,14,15) WHEN 14 THEN murmur_hash(default.impala_tpcds_customer_address.ca_county) WHEN 15 THEN murmur_hash(NULL) WHEN 16 THEN murmur_hash(NULL) WHEN 17 THEN murmur_hash(NULL) WHEN 18 THEN murmur_hash(NULL) END,CASE valid_tid(16,17,18,14,15) WHEN 14 THEN murmur_hash(default.impala_tpcds_customer_address.ca_state) WHEN 15 THEN murmur_hash(default.impala_tpcds_customer_address.ca_state) WHEN 16 THEN murmur_hash(NULL) WHEN 17 THEN murmur_hash(NULL) WHEN 18 THEN murmur_hash(NULL) END,CASE valid_tid(16,17,18,14,15) WHEN 14 THEN murmur_hash(default.impala_tpcds_customer_address.ca_country) WHEN 15 THEN murmur_hash(default.impala_tpcds_customer_address.ca_country) WHEN 16 THEN murmur_hash(default.impala_tpcds_customer_address.ca_country) WHEN 17 THEN murmur_hash(NULL) WHEN 18 THEN murmur_hash(NULL) END)]
     mem-estimate=1.07MB mem-reservation=0B thread-reservation=0
     tuple-ids=14N,15N,16N,17N,18N row-size=1.05KB cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=529.90MB mem-reservation=145.75MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=23, HASH(CASE valid_tid(16,17,18,14,15) WHEN 14 THEN murmur_hash(default.impala_tpcds_item.i_item_id) WHEN 15 THEN murmur_hash(default.impala_tpcds_item.i_item_id) WHEN 16 THEN murmur_hash(default.impala_tpcds_item.i_item_id) WHEN 17 THEN murmur_hash(default.impala_tpcds_item.i_item_id) WHEN 18 THEN murmur_hash(NULL) END,CASE valid_tid(16,17,18,14,15) WHEN 14 THEN murmur_hash(default.impala_tpcds_customer_address.ca_county) WHEN 15 THEN murmur_hash(NULL) WHEN 16 THEN murmur_hash(NULL) WHEN 17 THEN murmur_hash(NULL) WHEN 18 THEN murmur_hash(NULL) END,CASE valid_tid(16,17,18,14,15) WHEN 14 THEN murmur_hash(default.impala_tpcds_customer_address.ca_state) WHEN 15 THEN murmur_hash(default.impala_tpcds_customer_address.ca_state) WHEN 16 THEN murmur_hash(NULL) WHEN 17 THEN murmur_hash(NULL) WHEN 18 THEN murmur_hash(NULL) END,CASE valid_tid(16,17,18,14,15) WHEN 14 THEN murmur_hash(default.impala_tpcds_customer_address.ca_country) WHEN 15 THEN murmur_hash(default.impala_tpcds_customer_address.ca_country) WHEN 16 THEN murmur_hash(default.impala_tpcds_customer_address.ca_country) WHEN 17 THEN murmur_hash(NULL) WHEN 18 THEN murmur_hash(NULL) END)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:AGGREGATE [STREAMING]
  |  Class 0
  |    output: sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)), count(casttodecimal(default.impala_tpcds_customer.c_birth_year)), sum(casttodecimal(cd1.cd_dep_count)), count(casttodecimal(cd1.cd_dep_count))
  |    group by: default.impala_tpcds_item.i_item_id, default.impala_tpcds_customer_address.ca_county, default.impala_tpcds_customer_address.ca_state, default.impala_tpcds_customer_address.ca_country
  |  Class 1
  |    output: sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)), count(casttodecimal(default.impala_tpcds_customer.c_birth_year)), sum(casttodecimal(cd1.cd_dep_count)), count(casttodecimal(cd1.cd_dep_count))
  |    group by: default.impala_tpcds_item.i_item_id, NULL, default.impala_tpcds_customer_address.ca_state, default.impala_tpcds_customer_address.ca_country
  |  Class 2
  |    output: sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)), count(casttodecimal(default.impala_tpcds_customer.c_birth_year)), sum(casttodecimal(cd1.cd_dep_count)), count(casttodecimal(cd1.cd_dep_count))
  |    group by: default.impala_tpcds_item.i_item_id, NULL, NULL, default.impala_tpcds_customer_address.ca_country
  |  Class 3
  |    output: sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)), count(casttodecimal(default.impala_tpcds_customer.c_birth_year)), sum(casttodecimal(cd1.cd_dep_count)), count(casttodecimal(cd1.cd_dep_count))
  |    group by: default.impala_tpcds_item.i_item_id, NULL, NULL, NULL
  |  Class 4
  |    output: sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_quantity)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_list_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_coupon_amt)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_sales_price)), sum(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), count(casttodecimal(default.impala_tpcds_catalog_sales.cs_net_profit)), sum(casttodecimal(default.impala_tpcds_customer.c_birth_year)), count(casttodecimal(default.impala_tpcds_customer.c_birth_year)), sum(casttodecimal(cd1.cd_dep_count)), count(casttodecimal(cd1.cd_dep_count))
  |    group by: NULL, NULL, NULL, NULL
  |  mem-estimate=522.00MB mem-reservation=138.00MB thread-reservation=0
  |  tuple-ids=14N,15N,16N,17N,18N row-size=1.05KB cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  13:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_bill_customer_sk = default.impala_tpcds_customer.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6,8,10,12 row-size=164B cardinality=0
  |  in pipelines: 01(GETNEXT), 08(OPEN)
  |
  |--22:EXCHANGE [BROADCAST]
  |     mem-estimate=76.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=8,10,12 row-size=64B cardinality=0
  |     in pipelines: 08(GETNEXT)
  |
  07:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6 row-size=100B cardinality=0
  |  in pipelines: 01(GETNEXT), 06(OPEN)
  |
  |--19:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=20B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_bill_cdemo_sk = cd1.cd_demo_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=80B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--18:EXCHANGE [BROADCAST]
  |     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=32B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=48B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--17:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=8B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales.cs_bill_cdemo_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_bill_customer_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=40B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=17, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_year = CAST(2002 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_year = CAST(2002 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=8B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=18, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_customer_demographics cd1, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: cd1.cd_demo_sk IS NOT NULL, cd1.cd_gender = 'M', cd1.cd_education_status = 'Unknown'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: cd1.cd_gender = 'M', cd1.cd_education_status = 'Unknown'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=32B cardinality=0
     in pipelines: 04(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=19, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=20B cardinality=0
     in pipelines: 06(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=3.93MB mem-reservation=3.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=22, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer.c_current_addr_sk = default.impala_tpcds_customer_address.ca_address_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=8,10,12 row-size=64B cardinality=0
  |  in pipelines: 08(GETNEXT), 11(OPEN)
  |
  |--21:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=12 row-size=40B cardinality=0
  |     in pipelines: 11(GETNEXT)
  |
  10:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer.c_current_cdemo_sk = cd2.cd_demo_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=8,10 row-size=24B cardinality=0
  |  in pipelines: 08(GETNEXT), 09(OPEN)
  |
  |--20:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=10 row-size=4B cardinality=0
  |     in pipelines: 09(GETNEXT)
  |
  08:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer.c_current_addr_sk IS NOT NULL, default.impala_tpcds_customer.c_current_cdemo_sk IS NOT NULL, default.impala_tpcds_customer.c_customer_sk IS NOT NULL, default.impala_tpcds_customer.c_birth_month IN (CAST(5 AS INT), CAST(1 AS INT), CAST(4 AS INT), CAST(7 AS INT), CAST(8 AS INT), CAST(9 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_customer.c_birth_month IN (CAST(5 AS INT), CAST(1 AS INT), CAST(4 AS INT), CAST(7 AS INT), CAST(8 AS INT), CAST(9 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=20B cardinality=0
     in pipelines: 08(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=20, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:SCAN HDFS [default.impala_tpcds_customer_demographics cd2, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: cd2.cd_demo_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=10 row-size=4B cardinality=0
     in pipelines: 09(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=21, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:SCAN HDFS [default.impala_tpcds_customer_address, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_address.ca_address_sk IS NOT NULL, default.impala_tpcds_customer_address.ca_state IN ('AR', 'TX', 'NC', 'GA', 'MS', 'WV', 'AL')
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_customer_address.ca_state IN ('AR', 'TX', 'NC', 'GA', 'MS', 'WV', 'AL')
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=40B cardinality=0
     in pipelines: 11(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

