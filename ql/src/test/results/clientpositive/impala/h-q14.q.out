HMS CALL get_table_req FOR impala_tpch_lineitem
HMS CALL get_table_req FOR impala_tpch_part
HMS CALL get_foreign_keys FOR impala_tpch_lineitem
HMS CALL get_foreign_keys FOR impala_tpch_part
PREHOOK: query: explain cbo physical select
  100.00 * sum(case
    when p_type like 'PROMO%'
    then l_extendedprice * (1 - l_discount)
    else 0.0
    end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
  impala_tpch_lineitem,
  impala_tpch_part
where 
  l_partkey = p_partkey 
  and l_shipdate >= '1995-09-01'
  and l_shipdate < '1995-10-01'
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Input: default@impala_tpch_part
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical select
  100.00 * sum(case
    when p_type like 'PROMO%'
    then l_extendedprice * (1 - l_discount)
    else 0.0
    end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
  impala_tpch_lineitem,
  impala_tpch_part
where 
  l_partkey = p_partkey 
  and l_shipdate >= '1995-09-01'
  and l_shipdate < '1995-10-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Input: default@impala_tpch_part
CBO PLAN:
ImpalaProjectPassthroughRel(promo_revenue=[/(*(100:DECIMAL(3, 0), $0), $1)])
  ImpalaAggregateRel(group=[{}], agg#0=[sum($0)], agg#1=[sum($1)])
    ImpalaProjectPassthroughRel($f0=[CASE($3, $1, 0:DECIMAL(1, 0))], $f1=[$1])
      ImpalaJoinRel(condition=[=($0, $2)], joinType=[inner])
        ImpalaProjectPassthroughRel(l_partkey=[$1], *=[*($5, -(1:DECIMAL(3, 0), $6))])
          ImpalaHdfsScanRel(table=[[default, impala_tpch_lineitem]], condition=[AND(>=($10, _UTF-16LE'1995-09-01'), <($10, _UTF-16LE'1995-10-01'), IS NOT NULL($1))])
        ImpalaProjectPassthroughRel(p_partkey=[$0], LIKE=[LIKE($4, _UTF-16LE'PROMO%':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")])
          ImpalaHdfsScanRel(table=[[default, impala_tpch_part]], condition=[IS NOT NULL($0)])

HMS CALL get_table_req FOR impala_tpch_lineitem
HMS CALL get_table_req FOR impala_tpch_part
HMS CALL get_foreign_keys FOR impala_tpch_lineitem
HMS CALL get_foreign_keys FOR impala_tpch_part
PREHOOK: query: explain select
  100.00 * sum(case
    when p_type like 'PROMO%'
    then l_extendedprice * (1 - l_discount)
    else 0.0
    end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
  impala_tpch_lineitem,
  impala_tpch_part
where 
  l_partkey = p_partkey 
  and l_shipdate >= '1995-09-01'
  and l_shipdate < '1995-10-01'
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Input: default@impala_tpch_part
PREHOOK: Output: streaming
POSTHOOK: query: explain select
  100.00 * sum(case
    when p_type like 'PROMO%'
    then l_extendedprice * (1 - l_discount)
    else 0.0
    end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
  impala_tpch_lineitem,
  impala_tpch_part
where 
  l_partkey = p_partkey 
  and l_shipdate >= '1995-09-01'
  and l_shipdate < '1995-10-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Input: default@impala_tpch_part
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F02:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: divide(multiply(CAST(100 AS DECIMAL(3,0)), _impala_builtins.sum(CASE WHEN like(default.impala_tpch_part.p_type, 'PROMO%') THEN multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)) ELSE 0 END)), _impala_builtins.sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount))))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  06:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(CASE WHEN like(default.impala_tpch_part.p_type, 'PROMO%') THEN multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)) ELSE 0 END), _impala_builtins.sum:merge(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(1, default.impala_tpch_lineitem.l_discount)))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=32B cardinality=1
  |  in pipelines: 06(GETNEXT), 03(OPEN)
  |
  05:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=32B cardinality=1
     in pipelines: 03(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=11.94MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=05, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:AGGREGATE
  |  output: sum(CASE WHEN like(default.impala_tpch_part.p_type, 'PROMO%') THEN multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)) ELSE CAST(0 AS DECIMAL(1,0)) END), sum(multiply(default.impala_tpch_lineitem.l_extendedprice, subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=32B cardinality=1
  |  in pipelines: 03(GETNEXT), 00(OPEN)
  |
  02:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_lineitem.l_partkey = default.impala_tpch_part.p_partkey
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=56B cardinality=0
  |  in pipelines: 00(GETNEXT), 01(OPEN)
  |
  |--04:EXCHANGE [BROADCAST]
  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=20B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  00:SCAN HDFS [default.impala_tpch_lineitem, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_lineitem.l_partkey IS NOT NULL, default.impala_tpch_lineitem.l_shipdate < '1995-10-01', default.impala_tpch_lineitem.l_shipdate >= '1995-09-01'
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpch_lineitem.l_shipdate < '1995-10-01', default.impala_tpch_lineitem.l_shipdate >= '1995-09-01'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=36B cardinality=0
     in pipelines: 00(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=04, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SCAN HDFS [default.impala_tpch_part, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_part.p_partkey IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=20B cardinality=0
     in pipelines: 01(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

