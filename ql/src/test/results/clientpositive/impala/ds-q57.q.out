HMS CALL get_table_req FOR v2
HMS CALL get_table_req FOR v1
HMS CALL get_table_req FOR v1
HMS CALL get_table_req FOR v1
HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_table_req FOR impala_tpcds_catalog_sales
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_call_center
HMS CALL get_foreign_keys FOR impala_tpcds_item
HMS CALL get_foreign_keys FOR impala_tpcds_catalog_sales
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_call_center
PREHOOK: query: explain cbo physical with v1 as(
 select i_category, i_brand,
        cc_name,
        d_year, d_moy,
        sum(cs_sales_price) sum_sales,
        avg(sum(cs_sales_price)) over
          (partition by i_category, i_brand,
                     cc_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     cc_name
           order by d_year, d_moy) rn
 from impala_tpcds_item, impala_tpcds_catalog_sales, impala_tpcds_date_dim, impala_tpcds_call_center
 where cs_item_sk = i_item_sk and
       cs_sold_date_sk = d_date_sk and
       cc_call_center_sk= cs_call_center_sk and
       (
         d_year = 1999 or
         ( d_year = 1999-1 and d_moy =12) or
         ( d_year = 1999+1 and d_moy =1)
       )
 group by i_category, i_brand,
          cc_name , d_year, d_moy),
 v2 as(
 select v1.i_category, v1.i_brand
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1. cc_name = v1_lag. cc_name and
       v1. cc_name = v1_lead. cc_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 1999 and
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, avg_monthly_sales
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_call_center
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical with v1 as(
 select i_category, i_brand,
        cc_name,
        d_year, d_moy,
        sum(cs_sales_price) sum_sales,
        avg(sum(cs_sales_price)) over
          (partition by i_category, i_brand,
                     cc_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     cc_name
           order by d_year, d_moy) rn
 from impala_tpcds_item, impala_tpcds_catalog_sales, impala_tpcds_date_dim, impala_tpcds_call_center
 where cs_item_sk = i_item_sk and
       cs_sold_date_sk = d_date_sk and
       cc_call_center_sk= cs_call_center_sk and
       (
         d_year = 1999 or
         ( d_year = 1999-1 and d_moy =12) or
         ( d_year = 1999+1 and d_moy =1)
       )
 group by i_category, i_brand,
          cc_name , d_year, d_moy),
 v2 as(
 select v1.i_category, v1.i_brand
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1. cc_name = v1_lag. cc_name and
       v1. cc_name = v1_lead. cc_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 1999 and
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, avg_monthly_sales
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_call_center
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
CBO PLAN:
ImpalaProjectPassthroughRel(i_category=[$0], i_brand=[$1], d_year=[CAST(1999):INTEGER], d_moy=[$2], avg_monthly_sales=[$3], sum_sales=[$4], psum=[$5], nsum=[$6])
  ImpalaSortRel(sort0=[$7], sort1=[$3], dir0=[ASC], dir1=[ASC], fetch=[100])
    ImpalaProjectRel(i_category=[$0], i_brand=[$1], d_moy=[$3], avg_monthly_sales=[$5], sum_sales=[$4], psum=[$10], nsum=[$15], (- (tok_table_or_col sum_sales) (tok_table_or_col avg_monthly_sales))=[-($4, $5)])
      ImpalaJoinRel(condition=[AND(=($0, $12), =($1, $13), =($2, $14), =($6, $16))], joinType=[inner])
        ImpalaJoinRel(condition=[AND(=($0, $7), =($1, $8), =($2, $9), =($6, $11))], joinType=[inner])
          ImpalaProjectPassthroughRel((tok_table_or_col i_category)=[$0], (tok_table_or_col i_brand)=[$1], (tok_table_or_col cc_name)=[$2], (tok_table_or_col d_moy)=[$4], (tok_function sum (tok_table_or_col cs_sales_price))=[$5], avg_window_0=[$6], rank_window_1=[$7])
            ImpalaProjectRel((tok_table_or_col i_category)=[$2], (tok_table_or_col i_brand)=[$1], (tok_table_or_col cc_name)=[$0], (tok_table_or_col d_year)=[$3], (tok_table_or_col d_moy)=[$4], (tok_function sum (tok_table_or_col cs_sales_price))=[$5], avg_window_0=[avg($5) OVER (PARTITION BY $2, $1, $0, $3 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)], rank_window_1=[rank() OVER (PARTITION BY $2, $1, $0 ORDER BY $3 NULLS LAST, $4 NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)], condition=[AND(>($6, 0), =($3, 1999), CASE(>($6, 0), >(/(ABS(-($5, $6)), $6), 0.1:DECIMAL(1, 1)), false), IS NOT NULL($7))])
              ImpalaAggregateRel(group=[{5, 7, 8, 10, 11}], agg#0=[sum($3)])
                ImpalaJoinRel(condition=[=($0, $9)], joinType=[inner])
                  ImpalaJoinRel(condition=[=($2, $6)], joinType=[inner])
                    ImpalaJoinRel(condition=[=($4, $1)], joinType=[inner])
                      ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_call_center_sk=[$11], cs_item_sk=[$15], cs_sales_price=[$21])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($11), IS NOT NULL($0), IS NOT NULL($15))])
                      ImpalaProjectPassthroughRel(cc_call_center_sk=[$0], cc_name=[$6])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_call_center]], condition=[AND(IS NOT NULL($6), IS NOT NULL($0))])
                    ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand=[$8], i_category=[$12])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($12), IS NOT NULL($8), IS NOT NULL($0))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(OR(=($6, 1999), AND(=($6, -(1999, 1)), =($8, 12)), AND(=($6, +(1999, 1)), =($8, 1))), IN($6, 1999, -(1999, 1), +(1999, 1)), IS NOT NULL($0))])
          ImpalaProjectPassthroughRel((tok_table_or_col i_category)=[$0], (tok_table_or_col i_brand)=[$1], (tok_table_or_col cc_name)=[$2], (tok_function sum (tok_table_or_col cs_sales_price))=[$3], +=[+($4, 1)])
            ImpalaProjectRel((tok_table_or_col i_category)=[$2], (tok_table_or_col i_brand)=[$1], (tok_table_or_col cc_name)=[$0], (tok_function sum (tok_table_or_col cs_sales_price))=[$5], rank_window_1=[rank() OVER (PARTITION BY $2, $1, $0 ORDER BY $3 NULLS LAST, $4 NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)], condition=[IS NOT NULL($4)])
              ImpalaAggregateRel(group=[{5, 7, 8, 10, 11}], agg#0=[sum($3)])
                ImpalaJoinRel(condition=[=($0, $9)], joinType=[inner])
                  ImpalaJoinRel(condition=[=($2, $6)], joinType=[inner])
                    ImpalaJoinRel(condition=[=($4, $1)], joinType=[inner])
                      ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_call_center_sk=[$11], cs_item_sk=[$15], cs_sales_price=[$21])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($11), IS NOT NULL($0), IS NOT NULL($15))])
                      ImpalaProjectPassthroughRel(cc_call_center_sk=[$0], cc_name=[$6])
                        ImpalaHdfsScanRel(table=[[default, impala_tpcds_call_center]], condition=[AND(IS NOT NULL($0), IS NOT NULL($6))])
                    ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand=[$8], i_category=[$12])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($0), IS NOT NULL($12), IS NOT NULL($8))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(OR(=($6, 1999), AND(=($6, -(1999, 1)), =($8, 12)), AND(=($6, +(1999, 1)), =($8, 1))), IN($6, 1999, -(1999, 1), +(1999, 1)), IS NOT NULL($0))])
        ImpalaProjectPassthroughRel((tok_table_or_col i_category)=[$0], (tok_table_or_col i_brand)=[$1], (tok_table_or_col cc_name)=[$2], (tok_function sum (tok_table_or_col cs_sales_price))=[$3], -=[-($4, 1)])
          ImpalaProjectRel((tok_table_or_col i_category)=[$2], (tok_table_or_col i_brand)=[$1], (tok_table_or_col cc_name)=[$0], (tok_function sum (tok_table_or_col cs_sales_price))=[$5], rank_window_1=[rank() OVER (PARTITION BY $2, $1, $0 ORDER BY $3 NULLS LAST, $4 NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)], condition=[IS NOT NULL($4)])
            ImpalaAggregateRel(group=[{5, 7, 8, 10, 11}], agg#0=[sum($3)])
              ImpalaJoinRel(condition=[=($0, $9)], joinType=[inner])
                ImpalaJoinRel(condition=[=($2, $6)], joinType=[inner])
                  ImpalaJoinRel(condition=[=($4, $1)], joinType=[inner])
                    ImpalaProjectPassthroughRel(cs_sold_date_sk=[$0], cs_call_center_sk=[$11], cs_item_sk=[$15], cs_sales_price=[$21])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($11), IS NOT NULL($0), IS NOT NULL($15))])
                    ImpalaProjectPassthroughRel(cc_call_center_sk=[$0], cc_name=[$6])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_call_center]], condition=[AND(IS NOT NULL($0), IS NOT NULL($6))])
                  ImpalaProjectPassthroughRel(i_item_sk=[$0], i_brand=[$8], i_category=[$12])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_item]], condition=[AND(IS NOT NULL($0), IS NOT NULL($12), IS NOT NULL($8))])
                ImpalaProjectPassthroughRel(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(OR(=($6, 1999), AND(=($6, -(1999, 1)), =($8, 12)), AND(=($6, +(1999, 1)), =($8, 1))), IN($6, 1999, -(1999, 1), +(1999, 1)), IS NOT NULL($0))])

HMS CALL get_table_req FOR v2
HMS CALL get_table_req FOR v1
HMS CALL get_table_req FOR v1
HMS CALL get_table_req FOR v1
HMS CALL get_table_req FOR impala_tpcds_item
HMS CALL get_table_req FOR impala_tpcds_catalog_sales
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_call_center
HMS CALL get_foreign_keys FOR impala_tpcds_item
HMS CALL get_foreign_keys FOR impala_tpcds_catalog_sales
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_call_center
PREHOOK: query: explain with v1 as(
 select i_category, i_brand,
        cc_name,
        d_year, d_moy,
        sum(cs_sales_price) sum_sales,
        avg(sum(cs_sales_price)) over
          (partition by i_category, i_brand,
                     cc_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     cc_name
           order by d_year, d_moy) rn
 from impala_tpcds_item, impala_tpcds_catalog_sales, impala_tpcds_date_dim, impala_tpcds_call_center
 where cs_item_sk = i_item_sk and
       cs_sold_date_sk = d_date_sk and
       cc_call_center_sk= cs_call_center_sk and
       (
         d_year = 1999 or
         ( d_year = 1999-1 and d_moy =12) or
         ( d_year = 1999+1 and d_moy =1)
       )
 group by i_category, i_brand,
          cc_name , d_year, d_moy),
 v2 as(
 select v1.i_category, v1.i_brand
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1. cc_name = v1_lag. cc_name and
       v1. cc_name = v1_lead. cc_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 1999 and
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, avg_monthly_sales
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_call_center
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_item
PREHOOK: Output: streaming
POSTHOOK: query: explain with v1 as(
 select i_category, i_brand,
        cc_name,
        d_year, d_moy,
        sum(cs_sales_price) sum_sales,
        avg(sum(cs_sales_price)) over
          (partition by i_category, i_brand,
                     cc_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     cc_name
           order by d_year, d_moy) rn
 from impala_tpcds_item, impala_tpcds_catalog_sales, impala_tpcds_date_dim, impala_tpcds_call_center
 where cs_item_sk = i_item_sk and
       cs_sold_date_sk = d_date_sk and
       cc_call_center_sk= cs_call_center_sk and
       (
         d_year = 1999 or
         ( d_year = 1999-1 and d_moy =12) or
         ( d_year = 1999+1 and d_moy =1)
       )
 group by i_category, i_brand,
          cc_name , d_year, d_moy),
 v2 as(
 select v1.i_category, v1.i_brand
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1. cc_name = v1_lag. cc_name and
       v1. cc_name = v1_lead. cc_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 1999 and
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, avg_monthly_sales
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_call_center
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_item
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F23:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=112.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_brand, CAST(1999 AS INT), default.impala_tpcds_date_dim.d_moy, avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price)), sum(default.impala_tpcds_catalog_sales.cs_sales_price), sum(default.impala_tpcds_catalog_sales_0.cs_sales_price), sum(default.impala_tpcds_catalog_sales_1.cs_sales_price)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  63:MERGING-EXCHANGE [UNPARTITIONED]
     order by: subtract(sum(default.impala_tpcds_catalog_sales.cs_sales_price), avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price))) ASC NULLS LAST, avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price)) ASC NULLS LAST
     limit: 100
     mem-estimate=112.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=53 row-size=108B cardinality=0
     in pipelines: 41(GETNEXT)

F22:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=20.07MB mem-reservation=19.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F23, EXCHANGE=63, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  41:TOP-N [LIMIT=100]
  |  order by: subtract(sum(default.impala_tpcds_catalog_sales.cs_sales_price), avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price))) ASC NULLS LAST, avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price)) ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=53 row-size=108B cardinality=0
  |  in pipelines: 41(GETNEXT), 12(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=52 row-size=108B cardinality=0
  |  in pipelines: 12(GETNEXT)
  |
  40:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: rank() = subtract(rank(), 1), default.impala_tpcds_call_center.cc_name = default.impala_tpcds_call_center_1.cc_name, default.impala_tpcds_item.i_brand = default.impala_tpcds_item_1.i_brand, default.impala_tpcds_item.i_category = default.impala_tpcds_item_1.i_category
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=19,35,51 row-size=204B cardinality=0
  |  in pipelines: 12(GETNEXT), 37(OPEN)
  |
  |--62:EXCHANGE [BROADCAST]
  |     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=51 row-size=60B cardinality=0
  |     in pipelines: 37(GETNEXT)
  |
  27:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: rank() = add(rank(), 1), default.impala_tpcds_call_center.cc_name = default.impala_tpcds_call_center_0.cc_name, default.impala_tpcds_item.i_brand = default.impala_tpcds_item_0.i_brand, default.impala_tpcds_item.i_category = default.impala_tpcds_item_0.i_category
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=19,35 row-size=144B cardinality=0
  |  in pipelines: 12(GETNEXT), 24(OPEN)
  |
  |--55:EXCHANGE [BROADCAST]
  |     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=35 row-size=60B cardinality=0
  |     in pipelines: 24(GETNEXT)
  |
  14:SELECT
  |  predicates: rank() IS NOT NULL, avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price)) > CAST(0 AS DECIMAL(38,6)), default.impala_tpcds_date_dim.d_year = CAST(1999 AS INT), CASE WHEN avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price)) > CAST(0 AS DECIMAL(38,6)) THEN divide(abs(subtract(sum(default.impala_tpcds_catalog_sales.cs_sales_price), avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price)))), avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price))) > CAST(0.1 AS DECIMAL(1,1)) ELSE FALSE END
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=19 row-size=84B cardinality=0
  |  in pipelines: 12(GETNEXT)
  |
  01:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=19 row-size=84B cardinality=0
  |  in pipelines: 12(GETNEXT)
  |
  13:ANALYTIC
  |  functions: avg(sum(default.impala_tpcds_catalog_sales.cs_sales_price))
  |  partition by: default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_brand, default.impala_tpcds_call_center.cc_name, default.impala_tpcds_date_dim.d_year
  |  window: ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=17,12 row-size=84B cardinality=0
  |  in pipelines: 12(GETNEXT)
  |
  12:SORT
  |  order by: default.impala_tpcds_item.i_category ASC NULLS LAST, default.impala_tpcds_item.i_brand ASC NULLS LAST, default.impala_tpcds_call_center.cc_name ASC NULLS LAST, default.impala_tpcds_date_dim.d_year ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=17 row-size=68B cardinality=0
  |  in pipelines: 12(GETNEXT), 10(OPEN)
  |
  48:EXCHANGE [HASH(default.impala_tpcds_item.i_category,default.impala_tpcds_item.i_brand,default.impala_tpcds_call_center.cc_name,default.impala_tpcds_date_dim.d_year)]
     mem-estimate=76.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=15,14 row-size=68B cardinality=0
     in pipelines: 10(GETNEXT)

F05:PLAN FRAGMENT [HASH(default.impala_tpcds_item.i_category,default.impala_tpcds_item.i_brand,default.impala_tpcds_call_center.cc_name)] hosts=1 instances=1
Per-Host Resources: mem-estimate=16.06MB mem-reservation=16.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F22, EXCHANGE=48, HASH(default.impala_tpcds_item.i_category,default.impala_tpcds_item.i_brand,default.impala_tpcds_call_center.cc_name,default.impala_tpcds_date_dim.d_year)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:ANALYTIC
  |  functions: rank()
  |  partition by: default.impala_tpcds_item.i_category, default.impala_tpcds_item.i_brand, default.impala_tpcds_call_center.cc_name
  |  order by: default.impala_tpcds_date_dim.d_year ASC, default.impala_tpcds_date_dim.d_moy ASC
  |  window: RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=15,14 row-size=68B cardinality=0
  |  in pipelines: 10(GETNEXT)
  |
  10:SORT
  |  order by: default.impala_tpcds_item.i_category ASC NULLS LAST, default.impala_tpcds_item.i_brand ASC NULLS LAST, default.impala_tpcds_call_center.cc_name ASC NULLS LAST, default.impala_tpcds_date_dim.d_year ASC NULLS LAST, default.impala_tpcds_date_dim.d_moy ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=15 row-size=60B cardinality=0
  |  in pipelines: 10(GETNEXT), 46(OPEN)
  |
  47:EXCHANGE [HASH(default.impala_tpcds_item.i_category,default.impala_tpcds_item.i_brand,default.impala_tpcds_call_center.cc_name)]
     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=60B cardinality=0
     in pipelines: 46(GETNEXT)

F04:PLAN FRAGMENT [HASH(default.impala_tpcds_call_center.cc_name,default.impala_tpcds_item.i_brand,default.impala_tpcds_item.i_category,default.impala_tpcds_date_dim.d_year,default.impala_tpcds_date_dim.d_moy)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.06MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F05, EXCHANGE=47, HASH(default.impala_tpcds_item.i_category,default.impala_tpcds_item.i_brand,default.impala_tpcds_call_center.cc_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  46:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_catalog_sales.cs_sales_price)
  |  group by: default.impala_tpcds_call_center.cc_name, default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_category, default.impala_tpcds_date_dim.d_year, default.impala_tpcds_date_dim.d_moy
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=8 row-size=60B cardinality=0
  |  in pipelines: 46(GETNEXT), 02(OPEN)
  |
  45:EXCHANGE [HASH(default.impala_tpcds_call_center.cc_name,default.impala_tpcds_item.i_brand,default.impala_tpcds_item.i_category,default.impala_tpcds_date_dim.d_year,default.impala_tpcds_date_dim.d_moy)]
     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=8 row-size=60B cardinality=0
     in pipelines: 02(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.88MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=45, HASH(default.impala_tpcds_call_center.cc_name,default.impala_tpcds_item.i_brand,default.impala_tpcds_item.i_category,default.impala_tpcds_date_dim.d_year,default.impala_tpcds_date_dim.d_moy)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_catalog_sales.cs_sales_price)
  |  group by: default.impala_tpcds_call_center.cc_name, default.impala_tpcds_item.i_brand, default.impala_tpcds_item.i_category, default.impala_tpcds_date_dim.d_year, default.impala_tpcds_date_dim.d_moy
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=8 row-size=60B cardinality=0
  |  in pipelines: 02(GETNEXT)
  |
  08:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4,6 row-size=80B cardinality=0
  |  in pipelines: 02(GETNEXT), 07(OPEN)
  |
  |--44:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=6 row-size=12B cardinality=0
  |     in pipelines: 07(GETNEXT)
  |
  06:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_item_sk = default.impala_tpcds_item.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2,4 row-size=68B cardinality=0
  |  in pipelines: 02(GETNEXT), 05(OPEN)
  |
  |--43:EXCHANGE [BROADCAST]
  |     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=4 row-size=32B cardinality=0
  |     in pipelines: 05(GETNEXT)
  |
  04:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales.cs_call_center_sk = default.impala_tpcds_call_center.cc_call_center_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=36B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(OPEN)
  |
  |--42:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=16B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales.cs_call_center_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=20B cardinality=0
     in pipelines: 02(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=42, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:SCAN HDFS [default.impala_tpcds_call_center, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_call_center.cc_call_center_sk IS NOT NULL, default.impala_tpcds_call_center.cc_name IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=16B cardinality=0
     in pipelines: 03(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=43, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  05:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item.i_brand IS NOT NULL, default.impala_tpcds_item.i_category IS NOT NULL, default.impala_tpcds_item.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=32B cardinality=0
     in pipelines: 05(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=44, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  07:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_year IN (CAST(1999 AS INT), subtract(CAST(1999 AS INT), CAST(1 AS INT)), add(CAST(1999 AS INT), CAST(1 AS INT))), default.impala_tpcds_date_dim.d_year = CAST(1999 AS INT) OR default.impala_tpcds_date_dim.d_year = subtract(CAST(1999 AS INT), CAST(1 AS INT)) AND default.impala_tpcds_date_dim.d_moy = CAST(12 AS INT) OR default.impala_tpcds_date_dim.d_year = add(CAST(1999 AS INT), CAST(1 AS INT)) AND default.impala_tpcds_date_dim.d_moy = CAST(1 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=12B cardinality=0
     in pipelines: 07(GETNEXT)

F14:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=16.06MB mem-reservation=16.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F22, EXCHANGE=55, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  26:SELECT
  |  predicates: rank() IS NOT NULL
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=35 row-size=60B cardinality=0
  |  in pipelines: 24(GETNEXT)
  |
  15:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=35 row-size=60B cardinality=0
  |  in pipelines: 24(GETNEXT)
  |
  25:ANALYTIC
  |  functions: rank()
  |  partition by: default.impala_tpcds_item_0.i_category, default.impala_tpcds_item_0.i_brand, default.impala_tpcds_call_center_0.cc_name
  |  order by: default.impala_tpcds_date_dim_0.d_year ASC, default.impala_tpcds_date_dim_0.d_moy ASC
  |  window: RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=33,32 row-size=68B cardinality=0
  |  in pipelines: 24(GETNEXT)
  |
  24:SORT
  |  order by: default.impala_tpcds_item_0.i_category ASC NULLS LAST, default.impala_tpcds_item_0.i_brand ASC NULLS LAST, default.impala_tpcds_call_center_0.cc_name ASC NULLS LAST, default.impala_tpcds_date_dim_0.d_year ASC NULLS LAST, default.impala_tpcds_date_dim_0.d_moy ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=33 row-size=60B cardinality=0
  |  in pipelines: 24(GETNEXT), 53(OPEN)
  |
  54:EXCHANGE [HASH(default.impala_tpcds_item_0.i_category,default.impala_tpcds_item_0.i_brand,default.impala_tpcds_call_center_0.cc_name)]
     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=28 row-size=60B cardinality=0
     in pipelines: 53(GETNEXT)

F12:PLAN FRAGMENT [HASH(default.impala_tpcds_call_center_0.cc_name,default.impala_tpcds_item_0.i_brand,default.impala_tpcds_item_0.i_category,default.impala_tpcds_date_dim_0.d_year,default.impala_tpcds_date_dim_0.d_moy)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.06MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=54, HASH(default.impala_tpcds_item_0.i_category,default.impala_tpcds_item_0.i_brand,default.impala_tpcds_call_center_0.cc_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  53:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_catalog_sales_0.cs_sales_price)
  |  group by: default.impala_tpcds_call_center_0.cc_name, default.impala_tpcds_item_0.i_brand, default.impala_tpcds_item_0.i_category, default.impala_tpcds_date_dim_0.d_year, default.impala_tpcds_date_dim_0.d_moy
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=28 row-size=60B cardinality=0
  |  in pipelines: 53(GETNEXT), 16(OPEN)
  |
  52:EXCHANGE [HASH(default.impala_tpcds_call_center_0.cc_name,default.impala_tpcds_item_0.i_brand,default.impala_tpcds_item_0.i_category,default.impala_tpcds_date_dim_0.d_year,default.impala_tpcds_date_dim_0.d_moy)]
     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=28 row-size=60B cardinality=0
     in pipelines: 16(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.88MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F12, EXCHANGE=52, HASH(default.impala_tpcds_call_center_0.cc_name,default.impala_tpcds_item_0.i_brand,default.impala_tpcds_item_0.i_category,default.impala_tpcds_date_dim_0.d_year,default.impala_tpcds_date_dim_0.d_moy)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  23:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_catalog_sales_0.cs_sales_price)
  |  group by: default.impala_tpcds_call_center_0.cc_name, default.impala_tpcds_item_0.i_brand, default.impala_tpcds_item_0.i_category, default.impala_tpcds_date_dim_0.d_year, default.impala_tpcds_date_dim_0.d_moy
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=28 row-size=60B cardinality=0
  |  in pipelines: 16(GETNEXT)
  |
  22:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_0.cs_sold_date_sk = default.impala_tpcds_date_dim_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=20,22,24,26 row-size=80B cardinality=0
  |  in pipelines: 16(GETNEXT), 21(OPEN)
  |
  |--51:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=26 row-size=12B cardinality=0
  |     in pipelines: 21(GETNEXT)
  |
  20:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_0.cs_item_sk = default.impala_tpcds_item_0.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=20,22,24 row-size=68B cardinality=0
  |  in pipelines: 16(GETNEXT), 19(OPEN)
  |
  |--50:EXCHANGE [BROADCAST]
  |     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=24 row-size=32B cardinality=0
  |     in pipelines: 19(GETNEXT)
  |
  18:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_0.cs_call_center_sk = default.impala_tpcds_call_center_0.cc_call_center_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=20,22 row-size=36B cardinality=0
  |  in pipelines: 16(GETNEXT), 17(OPEN)
  |
  |--49:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=22 row-size=16B cardinality=0
  |     in pipelines: 17(GETNEXT)
  |
  16:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales_0.cs_call_center_sk IS NOT NULL, default.impala_tpcds_catalog_sales_0.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales_0.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=20 row-size=20B cardinality=0
     in pipelines: 16(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=49, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  17:SCAN HDFS [default.impala_tpcds_call_center, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_call_center_0.cc_call_center_sk IS NOT NULL, default.impala_tpcds_call_center_0.cc_name IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=22 row-size=16B cardinality=0
     in pipelines: 17(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=50, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  19:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_0.i_brand IS NOT NULL, default.impala_tpcds_item_0.i_category IS NOT NULL, default.impala_tpcds_item_0.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=24 row-size=32B cardinality=0
     in pipelines: 19(GETNEXT)

F11:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=51, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  21:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_0.d_year IN (CAST(1999 AS INT), subtract(CAST(1999 AS INT), CAST(1 AS INT)), add(CAST(1999 AS INT), CAST(1 AS INT))), default.impala_tpcds_date_dim_0.d_year = CAST(1999 AS INT) OR default.impala_tpcds_date_dim_0.d_year = subtract(CAST(1999 AS INT), CAST(1 AS INT)) AND default.impala_tpcds_date_dim_0.d_moy = CAST(12 AS INT) OR default.impala_tpcds_date_dim_0.d_year = add(CAST(1999 AS INT), CAST(1 AS INT)) AND default.impala_tpcds_date_dim_0.d_moy = CAST(1 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=26 row-size=12B cardinality=0
     in pipelines: 21(GETNEXT)

F21:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=16.06MB mem-reservation=16.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F22, EXCHANGE=62, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  39:SELECT
  |  predicates: rank() IS NOT NULL
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=51 row-size=60B cardinality=0
  |  in pipelines: 37(GETNEXT)
  |
  28:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=51 row-size=60B cardinality=0
  |  in pipelines: 37(GETNEXT)
  |
  38:ANALYTIC
  |  functions: rank()
  |  partition by: default.impala_tpcds_item_1.i_category, default.impala_tpcds_item_1.i_brand, default.impala_tpcds_call_center_1.cc_name
  |  order by: default.impala_tpcds_date_dim_1.d_year ASC, default.impala_tpcds_date_dim_1.d_moy ASC
  |  window: RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
  |  mem-estimate=4.00MB mem-reservation=4.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=49,48 row-size=68B cardinality=0
  |  in pipelines: 37(GETNEXT)
  |
  37:SORT
  |  order by: default.impala_tpcds_item_1.i_category ASC NULLS LAST, default.impala_tpcds_item_1.i_brand ASC NULLS LAST, default.impala_tpcds_call_center_1.cc_name ASC NULLS LAST, default.impala_tpcds_date_dim_1.d_year ASC NULLS LAST, default.impala_tpcds_date_dim_1.d_moy ASC NULLS LAST
  |  mem-estimate=12.00MB mem-reservation=12.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=49 row-size=60B cardinality=0
  |  in pipelines: 37(GETNEXT), 60(OPEN)
  |
  61:EXCHANGE [HASH(default.impala_tpcds_item_1.i_category,default.impala_tpcds_item_1.i_brand,default.impala_tpcds_call_center_1.cc_name)]
     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=44 row-size=60B cardinality=0
     in pipelines: 60(GETNEXT)

F19:PLAN FRAGMENT [HASH(default.impala_tpcds_call_center_1.cc_name,default.impala_tpcds_item_1.i_brand,default.impala_tpcds_item_1.i_category,default.impala_tpcds_date_dim_1.d_year,default.impala_tpcds_date_dim_1.d_moy)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.06MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F21, EXCHANGE=61, HASH(default.impala_tpcds_item_1.i_category,default.impala_tpcds_item_1.i_brand,default.impala_tpcds_call_center_1.cc_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  60:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_catalog_sales_1.cs_sales_price)
  |  group by: default.impala_tpcds_call_center_1.cc_name, default.impala_tpcds_item_1.i_brand, default.impala_tpcds_item_1.i_category, default.impala_tpcds_date_dim_1.d_year, default.impala_tpcds_date_dim_1.d_moy
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=44 row-size=60B cardinality=0
  |  in pipelines: 60(GETNEXT), 29(OPEN)
  |
  59:EXCHANGE [HASH(default.impala_tpcds_call_center_1.cc_name,default.impala_tpcds_item_1.i_brand,default.impala_tpcds_item_1.i_category,default.impala_tpcds_date_dim_1.d_year,default.impala_tpcds_date_dim_1.d_moy)]
     mem-estimate=64.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=44 row-size=60B cardinality=0
     in pipelines: 29(GETNEXT)

F15:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.88MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F19, EXCHANGE=59, HASH(default.impala_tpcds_call_center_1.cc_name,default.impala_tpcds_item_1.i_brand,default.impala_tpcds_item_1.i_category,default.impala_tpcds_date_dim_1.d_year,default.impala_tpcds_date_dim_1.d_moy)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  36:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_catalog_sales_1.cs_sales_price)
  |  group by: default.impala_tpcds_call_center_1.cc_name, default.impala_tpcds_item_1.i_brand, default.impala_tpcds_item_1.i_category, default.impala_tpcds_date_dim_1.d_year, default.impala_tpcds_date_dim_1.d_moy
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=44 row-size=60B cardinality=0
  |  in pipelines: 29(GETNEXT)
  |
  35:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_1.cs_sold_date_sk = default.impala_tpcds_date_dim_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=36,38,40,42 row-size=80B cardinality=0
  |  in pipelines: 29(GETNEXT), 34(OPEN)
  |
  |--58:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=42 row-size=12B cardinality=0
  |     in pipelines: 34(GETNEXT)
  |
  33:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_1.cs_item_sk = default.impala_tpcds_item_1.i_item_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=36,38,40 row-size=68B cardinality=0
  |  in pipelines: 29(GETNEXT), 32(OPEN)
  |
  |--57:EXCHANGE [BROADCAST]
  |     mem-estimate=36.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=40 row-size=32B cardinality=0
  |     in pipelines: 32(GETNEXT)
  |
  31:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_catalog_sales_1.cs_call_center_sk = default.impala_tpcds_call_center_1.cc_call_center_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=36,38 row-size=36B cardinality=0
  |  in pipelines: 29(GETNEXT), 30(OPEN)
  |
  |--56:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=38 row-size=16B cardinality=0
  |     in pipelines: 30(GETNEXT)
  |
  29:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales_1.cs_call_center_sk IS NOT NULL, default.impala_tpcds_catalog_sales_1.cs_item_sk IS NOT NULL, default.impala_tpcds_catalog_sales_1.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=36 row-size=20B cardinality=0
     in pipelines: 29(GETNEXT)

F16:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F15, EXCHANGE=56, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  30:SCAN HDFS [default.impala_tpcds_call_center, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_call_center_1.cc_call_center_sk IS NOT NULL, default.impala_tpcds_call_center_1.cc_name IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=38 row-size=16B cardinality=0
     in pipelines: 30(GETNEXT)

F17:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F15, EXCHANGE=57, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  32:SCAN HDFS [default.impala_tpcds_item, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_item_1.i_brand IS NOT NULL, default.impala_tpcds_item_1.i_category IS NOT NULL, default.impala_tpcds_item_1.i_item_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=40 row-size=32B cardinality=0
     in pipelines: 32(GETNEXT)

F18:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F15, EXCHANGE=58, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  34:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_1.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_1.d_year IN (CAST(1999 AS INT), subtract(CAST(1999 AS INT), CAST(1 AS INT)), add(CAST(1999 AS INT), CAST(1 AS INT))), default.impala_tpcds_date_dim_1.d_year = CAST(1999 AS INT) OR default.impala_tpcds_date_dim_1.d_year = subtract(CAST(1999 AS INT), CAST(1 AS INT)) AND default.impala_tpcds_date_dim_1.d_moy = CAST(12 AS INT) OR default.impala_tpcds_date_dim_1.d_year = add(CAST(1999 AS INT), CAST(1 AS INT)) AND default.impala_tpcds_date_dim_1.d_moy = CAST(1 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     file formats: [PARQUET]
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=42 row-size=12B cardinality=0
     in pipelines: 34(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

