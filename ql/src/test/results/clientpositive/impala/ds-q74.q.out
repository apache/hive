PREHOOK: query: explain cbo with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaSortRel(sort0=[$2], sort1=[$0], sort2=[$1], dir0=[ASC], dir1=[ASC], dir2=[ASC], fetch=[100])
  ImpalaProjectRel(customer_id=[$0], customer_first_name=[$1], customer_last_name=[$2])
    ImpalaJoinRel(condition=[AND(=($4, $8), >(/($9, $7), /($3, $5)))], joinType=[inner])
      ImpalaJoinRel(condition=[=($4, $6)], joinType=[inner])
        ImpalaJoinRel(condition=[=($0, $4)], joinType=[inner])
          ImpalaAggregateRel(group=[{5, 6, 7}], agg#0=[sum($1)])
            ImpalaJoinRel(condition=[=($4, $0)], joinType=[inner])
              ImpalaJoinRel(condition=[=($2, $3)], joinType=[inner])
                ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_net_paid=[$19], ss_sold_date_sk=[$22])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($2), IS NOT NULL($22))])
                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 1998, +(1998, 1)), =($6, +(1998, 1)), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
          ImpalaProjectPassthroughRel($f0=[$0], $f4=[$3])
            ImpalaAggregateRel(group=[{5, 6, 7}], agg#0=[sum($1)], condition=[>($3, 0)])
              ImpalaJoinRel(condition=[=($4, $0)], joinType=[inner])
                ImpalaJoinRel(condition=[=($2, $3)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_net_paid=[$19], ss_sold_date_sk=[$22])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($2), IS NOT NULL($22))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 1998, +(1998, 1)), =($6, 1998), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
        ImpalaProjectPassthroughRel($f0=[$0], $f4=[$3])
          ImpalaAggregateRel(group=[{5, 6, 7}], agg#0=[sum($2)], condition=[>($3, 0)])
            ImpalaJoinRel(condition=[=($4, $1)], joinType=[inner])
              ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], ws_net_paid=[$29])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($4), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 1998, +(1998, 1)), =($6, 1998), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
      ImpalaProjectPassthroughRel($f0=[$0], $f4=[$3])
        ImpalaAggregateRel(group=[{5, 6, 7}], agg#0=[sum($2)])
          ImpalaJoinRel(condition=[=($4, $1)], joinType=[inner])
            ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
              ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], ws_net_paid=[$29])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($4), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(d_date_sk=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(IN($6, 1998, +(1998, 1)), =($6, +(1998, 1)), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])

PREHOOK: query: explain with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F17:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=40.04KB mem-reservation=0B thread-reservation=1
  WRITE TO HDFS [_result_db_._result_table_, OVERWRITE=false]
  |  partitions=1
  |  output exprs: customer_id, customer_first_name, customer_last_name
  |  mem-estimate=36B mem-reservation=0B thread-reservation=0
  |
  48:MERGING-EXCHANGE [UNPARTITIONED]
     order by: customer_last_name ASC NULLS LAST, customer_id ASC NULLS LAST, customer_first_name ASC NULLS LAST
     limit: 100
     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=27 row-size=36B cardinality=0
     in pipelines: 28(GETNEXT)

F16:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=134.03MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F17, EXCHANGE=48, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  28:TOP-N [LIMIT=100]
  |  order by: customer_last_name ASC NULLS LAST, customer_id ASC NULLS LAST, customer_first_name ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=27 row-size=36B cardinality=0
  |  in pipelines: 28(GETNEXT), 32(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=26 row-size=36B cardinality=0
  |  in pipelines: 32(GETNEXT)
  |
  27:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_0.c_customer_id = default.impala_tpcds_customer_2.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: _impala_builtins.divide(_impala_builtins.sum(default.impala_tpcds_web_sales_0.ws_net_paid), _impala_builtins.sum(default.impala_tpcds_web_sales.ws_net_paid)) > _impala_builtins.divide(_impala_builtins.sum(default.impala_tpcds_store_sales.ss_net_paid), _impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_net_paid))
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,11,18,25 row-size=208B cardinality=0
  |  in pipelines: 32(GETNEXT), 46(OPEN)
  |
  |--47:EXCHANGE [BROADCAST]
  |     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=25 row-size=52B cardinality=0
  |     in pipelines: 46(GETNEXT)
  |
  20:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_0.c_customer_id = default.impala_tpcds_customer_1.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,11,18 row-size=156B cardinality=0
  |  in pipelines: 32(GETNEXT), 41(OPEN)
  |
  |--42:EXCHANGE [BROADCAST]
  |     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=18 row-size=52B cardinality=0
  |     in pipelines: 41(GETNEXT)
  |
  13:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer.c_customer_id = default.impala_tpcds_customer_0.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,11 row-size=104B cardinality=0
  |  in pipelines: 32(GETNEXT), 36(OPEN)
  |
  |--37:EXCHANGE [BROADCAST]
  |     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=11 row-size=52B cardinality=0
  |     in pipelines: 36(GETNEXT)
  |
  32:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales.ss_net_paid)
  |  group by: default.impala_tpcds_customer.c_customer_id, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=52B cardinality=0
  |  in pipelines: 32(GETNEXT), 01(OPEN)
  |
  31:EXCHANGE [HASH(default.impala_tpcds_customer.c_customer_id,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=52B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.93MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=31, HASH(default.impala_tpcds_customer.c_customer_id,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales.ss_net_paid)
  |  group by: default.impala_tpcds_customer.c_customer_id, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=52B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_customer_sk = default.impala_tpcds_customer.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3 row-size=60B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--30:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=40B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1 row-size=20B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--29:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1 row-size=8B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_customer_sk, ss_net_paid
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=12B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=29, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_year = _impala_builtins.add(CAST(1998 AS INT), CAST(1 AS INT)), default.impala_tpcds_date_dim.d_year IN (CAST(1998 AS INT), _impala_builtins.add(CAST(1998 AS INT), CAST(1 AS INT)))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_year = _impala_builtins.add(CAST(1998 AS INT), CAST(1 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=8B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=30, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer.c_customer_id IS NOT NULL, default.impala_tpcds_customer.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=40B cardinality=0
     in pipelines: 04(GETNEXT)

F07:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_0.c_customer_id,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.05MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=37, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  36:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_store_sales_0.ss_net_paid)
  |  group by: default.impala_tpcds_customer_0.c_customer_id, default.impala_tpcds_customer_0.c_first_name, default.impala_tpcds_customer_0.c_last_name
  |  having: _impala_builtins.sum(default.impala_tpcds_store_sales_0.ss_net_paid) > CAST(0 AS DECIMAL(38,2))
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=52B cardinality=0
  |  in pipelines: 36(GETNEXT), 07(OPEN)
  |
  35:EXCHANGE [HASH(default.impala_tpcds_customer_0.c_customer_id,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=52B cardinality=0
     in pipelines: 07(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.93MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F07, EXCHANGE=35, HASH(default.impala_tpcds_customer_0.c_customer_id,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales_0.ss_net_paid)
  |  group by: default.impala_tpcds_customer_0.c_customer_id, default.impala_tpcds_customer_0.c_first_name, default.impala_tpcds_customer_0.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=52B cardinality=0
  |  in pipelines: 07(GETNEXT)
  |
  11:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_customer_sk = default.impala_tpcds_customer_0.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=6,7,9 row-size=60B cardinality=0
  |  in pipelines: 07(GETNEXT), 10(OPEN)
  |
  |--34:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=9 row-size=40B cardinality=0
  |     in pipelines: 10(GETNEXT)
  |
  09:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk = default.impala_tpcds_date_dim_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=6,7 row-size=20B cardinality=0
  |  in pipelines: 07(GETNEXT), 08(OPEN)
  |
  |--33:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=7 row-size=8B cardinality=0
  |     in pipelines: 08(GETNEXT)
  |
  07:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_0.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_customer_sk, ss_net_paid
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=12B cardinality=0
     in pipelines: 07(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=33, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_0.d_year = CAST(1998 AS INT), default.impala_tpcds_date_dim_0.d_year IN (CAST(1998 AS INT), _impala_builtins.add(CAST(1998 AS INT), CAST(1 AS INT)))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_0.d_year = CAST(1998 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=8B cardinality=0
     in pipelines: 08(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=34, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  10:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_0.c_customer_id IS NOT NULL, default.impala_tpcds_customer_0.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=9 row-size=40B cardinality=0
     in pipelines: 10(GETNEXT)

F11:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_1.c_customer_id,default.impala_tpcds_customer_1.c_first_name,default.impala_tpcds_customer_1.c_last_name)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.05MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=42, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  41:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_web_sales.ws_net_paid)
  |  group by: default.impala_tpcds_customer_1.c_customer_id, default.impala_tpcds_customer_1.c_first_name, default.impala_tpcds_customer_1.c_last_name
  |  having: _impala_builtins.sum(default.impala_tpcds_web_sales.ws_net_paid) > CAST(0 AS DECIMAL(38,2))
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=18 row-size=52B cardinality=0
  |  in pipelines: 41(GETNEXT), 14(OPEN)
  |
  40:EXCHANGE [HASH(default.impala_tpcds_customer_1.c_customer_id,default.impala_tpcds_customer_1.c_first_name,default.impala_tpcds_customer_1.c_last_name)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=18 row-size=52B cardinality=0
     in pipelines: 14(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.93MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F11, EXCHANGE=40, HASH(default.impala_tpcds_customer_1.c_customer_id,default.impala_tpcds_customer_1.c_first_name,default.impala_tpcds_customer_1.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  19:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_web_sales.ws_net_paid)
  |  group by: default.impala_tpcds_customer_1.c_customer_id, default.impala_tpcds_customer_1.c_first_name, default.impala_tpcds_customer_1.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=18 row-size=52B cardinality=0
  |  in pipelines: 14(GETNEXT)
  |
  18:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_bill_customer_sk = default.impala_tpcds_customer_1.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=12,14,16 row-size=60B cardinality=0
  |  in pipelines: 14(GETNEXT), 17(OPEN)
  |
  |--39:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=16 row-size=40B cardinality=0
  |     in pipelines: 17(GETNEXT)
  |
  16:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_sold_date_sk = default.impala_tpcds_date_dim_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=12,14 row-size=20B cardinality=0
  |  in pipelines: 14(GETNEXT), 15(OPEN)
  |
  |--38:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=14 row-size=8B cardinality=0
  |     in pipelines: 15(GETNEXT)
  |
  14:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_bill_customer_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=12 row-size=12B cardinality=0
     in pipelines: 14(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=38, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  15:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_1.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_1.d_year = CAST(1998 AS INT), default.impala_tpcds_date_dim_1.d_year IN (CAST(1998 AS INT), _impala_builtins.add(CAST(1998 AS INT), CAST(1 AS INT)))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_1.d_year = CAST(1998 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=14 row-size=8B cardinality=0
     in pipelines: 15(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=39, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  17:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_1.c_customer_id IS NOT NULL, default.impala_tpcds_customer_1.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=16 row-size=40B cardinality=0
     in pipelines: 17(GETNEXT)

F15:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_2.c_customer_id,default.impala_tpcds_customer_2.c_first_name,default.impala_tpcds_customer_2.c_last_name)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.05MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F16, EXCHANGE=47, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  46:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(default.impala_tpcds_web_sales_0.ws_net_paid)
  |  group by: default.impala_tpcds_customer_2.c_customer_id, default.impala_tpcds_customer_2.c_first_name, default.impala_tpcds_customer_2.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=25 row-size=52B cardinality=0
  |  in pipelines: 46(GETNEXT), 21(OPEN)
  |
  45:EXCHANGE [HASH(default.impala_tpcds_customer_2.c_customer_id,default.impala_tpcds_customer_2.c_first_name,default.impala_tpcds_customer_2.c_last_name)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=25 row-size=52B cardinality=0
     in pipelines: 21(GETNEXT)

F12:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.93MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F15, EXCHANGE=45, HASH(default.impala_tpcds_customer_2.c_customer_id,default.impala_tpcds_customer_2.c_first_name,default.impala_tpcds_customer_2.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  26:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_web_sales_0.ws_net_paid)
  |  group by: default.impala_tpcds_customer_2.c_customer_id, default.impala_tpcds_customer_2.c_first_name, default.impala_tpcds_customer_2.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=25 row-size=52B cardinality=0
  |  in pipelines: 21(GETNEXT)
  |
  25:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_0.ws_bill_customer_sk = default.impala_tpcds_customer_2.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=19,21,23 row-size=60B cardinality=0
  |  in pipelines: 21(GETNEXT), 24(OPEN)
  |
  |--44:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=23 row-size=40B cardinality=0
  |     in pipelines: 24(GETNEXT)
  |
  23:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_0.ws_sold_date_sk = default.impala_tpcds_date_dim_2.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=19,21 row-size=20B cardinality=0
  |  in pipelines: 21(GETNEXT), 22(OPEN)
  |
  |--43:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=21 row-size=8B cardinality=0
  |     in pipelines: 22(GETNEXT)
  |
  21:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales_0.ws_bill_customer_sk IS NOT NULL, default.impala_tpcds_web_sales_0.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=19 row-size=12B cardinality=0
     in pipelines: 21(GETNEXT)

F13:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F12, EXCHANGE=43, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_2.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_2.d_year = _impala_builtins.add(CAST(1998 AS INT), CAST(1 AS INT)), default.impala_tpcds_date_dim_2.d_year IN (CAST(1998 AS INT), _impala_builtins.add(CAST(1998 AS INT), CAST(1 AS INT)))
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_2.d_year = _impala_builtins.add(CAST(1998 AS INT), CAST(1 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=8B cardinality=0
     in pipelines: 22(GETNEXT)

F14:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F12, EXCHANGE=44, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  24:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_2.c_customer_id IS NOT NULL, default.impala_tpcds_customer_2.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=23 row-size=40B cardinality=0
     in pipelines: 24(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

