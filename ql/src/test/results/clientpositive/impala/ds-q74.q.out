HMS CALL get_table_req FOR year_total
HMS CALL get_table_req FOR year_total
HMS CALL get_table_req FOR year_total
HMS CALL get_table_req FOR year_total
HMS CALL get_table_req FOR impala_tpcds_customer
HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_customer
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
PREHOOK: query: explain cbo physical with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
CBO PLAN:
ImpalaSortRel(sort0=[$2], sort1=[$0], sort2=[$1], dir0=[ASC], dir1=[ASC], dir2=[ASC], fetch=[100])
  ImpalaProjectRel(customer_id=[$0], customer_first_name=[$1], customer_last_name=[$2])
    ImpalaJoinRel(condition=[AND(=($4, $8), >(/($9, $7), /($3, $5)))], joinType=[inner])
      ImpalaJoinRel(condition=[=($4, $6)], joinType=[inner])
        ImpalaJoinRel(condition=[=($0, $4)], joinType=[inner])
          ImpalaAggregateRel(group=[{5, 6, 7}], agg#0=[sum($1)])
            ImpalaJoinRel(condition=[=($4, $0)], joinType=[inner])
              ImpalaJoinRel(condition=[=($2, $3)], joinType=[inner])
                ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_net_paid=[$19], ss_sold_date_sk=[$22])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($2))])
                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, +(1998, 1)), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
          ImpalaProjectRel($f0=[$0], $f4=[$3], condition=[>($1, 0)])
            ImpalaAggregateRel(group=[{5, 6, 7}], agg#0=[sum($1)])
              ImpalaJoinRel(condition=[=($4, $0)], joinType=[inner])
                ImpalaJoinRel(condition=[=($2, $3)], joinType=[inner])
                  ImpalaProjectPassthroughRel(ss_customer_sk=[$2], ss_net_paid=[$19], ss_sold_date_sk=[$22])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($22), IS NOT NULL($2))])
                  ImpalaProjectPassthroughRel(d_date_sk=[$0])
                    ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 1998), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
        ImpalaProjectRel($f0=[$0], $f4=[$3], condition=[>($1, 0)])
          ImpalaAggregateRel(group=[{5, 6, 7}], agg#0=[sum($2)])
            ImpalaJoinRel(condition=[=($4, $1)], joinType=[inner])
              ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
                ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], ws_net_paid=[$29])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($4))])
                ImpalaProjectPassthroughRel(d_date_sk=[$0])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, 1998), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
      ImpalaProjectPassthroughRel($f0=[$0], $f4=[$3])
        ImpalaAggregateRel(group=[{5, 6, 7}], agg#0=[sum($2)])
          ImpalaJoinRel(condition=[=($4, $1)], joinType=[inner])
            ImpalaJoinRel(condition=[=($0, $3)], joinType=[inner])
              ImpalaProjectPassthroughRel(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], ws_net_paid=[$29])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($0), IS NOT NULL($4))])
              ImpalaProjectPassthroughRel(d_date_sk=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(=($6, +(1998, 1)), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_customer]], condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])

HMS CALL get_table_req FOR year_total
HMS CALL get_table_req FOR year_total
HMS CALL get_table_req FOR year_total
HMS CALL get_table_req FOR year_total
HMS CALL get_table_req FOR impala_tpcds_customer
HMS CALL get_table_req FOR impala_tpcds_store_sales
HMS CALL get_table_req FOR impala_tpcds_date_dim
HMS CALL get_table_req FOR impala_tpcds_web_sales
HMS CALL get_foreign_keys FOR impala_tpcds_customer
HMS CALL get_foreign_keys FOR impala_tpcds_store_sales
HMS CALL get_foreign_keys FOR impala_tpcds_date_dim
HMS CALL get_foreign_keys FOR impala_tpcds_web_sales
PREHOOK: query: explain with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_customer
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Output: streaming
POSTHOOK: query: explain with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_store_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from impala_tpcds_customer
     ,impala_tpcds_web_sales
     ,impala_tpcds_date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_customer
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_sales
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F19:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=40.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: default.impala_tpcds_customer.c_customer_id, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  52:MERGING-EXCHANGE [UNPARTITIONED]
     order by: default.impala_tpcds_customer.c_last_name ASC NULLS LAST, default.impala_tpcds_customer.c_customer_id ASC NULLS LAST, default.impala_tpcds_customer.c_first_name ASC NULLS LAST
     limit: 100
     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=29 row-size=36B cardinality=0
     in pipelines: 32(GETNEXT)

F18:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.98MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F19, EXCHANGE=52, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  32:TOP-N [LIMIT=100]
  |  order by: default.impala_tpcds_customer.c_last_name ASC NULLS LAST, default.impala_tpcds_customer.c_customer_id ASC NULLS LAST, default.impala_tpcds_customer.c_first_name ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=29 row-size=36B cardinality=0
  |  in pipelines: 32(GETNEXT), 36(OPEN)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=28 row-size=36B cardinality=0
  |  in pipelines: 36(GETNEXT)
  |
  31:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_0.c_customer_id = default.impala_tpcds_customer_2.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: divide(sum(default.impala_tpcds_web_sales_0.ws_net_paid), sum(default.impala_tpcds_web_sales.ws_net_paid)) > divide(sum(default.impala_tpcds_store_sales.ss_net_paid), sum(default.impala_tpcds_store_sales_0.ss_net_paid))
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,12,20,27 row-size=160B cardinality=0
  |  in pipelines: 36(GETNEXT), 50(OPEN)
  |
  |--51:EXCHANGE [BROADCAST]
  |     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=27 row-size=52B cardinality=0
  |     in pipelines: 50(GETNEXT)
  |
  24:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer_0.c_customer_id = default.impala_tpcds_customer_1.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,12,20 row-size=108B cardinality=0
  |  in pipelines: 36(GETNEXT), 45(OPEN)
  |
  |--46:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=20 row-size=28B cardinality=0
  |     in pipelines: 45(GETNEXT)
  |
  15:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_customer.c_customer_id = default.impala_tpcds_customer_0.c_customer_id
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=5,12 row-size=80B cardinality=0
  |  in pipelines: 36(GETNEXT), 40(OPEN)
  |
  |--41:EXCHANGE [BROADCAST]
  |     mem-estimate=32.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=12 row-size=28B cardinality=0
  |     in pipelines: 40(GETNEXT)
  |
  36:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_store_sales.ss_net_paid)
  |  group by: default.impala_tpcds_customer.c_customer_id, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=52B cardinality=0
  |  in pipelines: 36(GETNEXT), 01(OPEN)
  |
  35:EXCHANGE [HASH(default.impala_tpcds_customer.c_customer_id,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=52B cardinality=0
     in pipelines: 01(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.93MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=35, HASH(default.impala_tpcds_customer.c_customer_id,default.impala_tpcds_customer.c_first_name,default.impala_tpcds_customer.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales.ss_net_paid)
  |  group by: default.impala_tpcds_customer.c_customer_id, default.impala_tpcds_customer.c_first_name, default.impala_tpcds_customer.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=5 row-size=52B cardinality=0
  |  in pipelines: 01(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_customer_sk = default.impala_tpcds_customer.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1,3 row-size=60B cardinality=0
  |  in pipelines: 01(GETNEXT), 04(OPEN)
  |
  |--34:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=40B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  03:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales.ss_sold_date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,1 row-size=20B cardinality=0
  |  in pipelines: 01(GETNEXT), 02(OPEN)
  |
  |--33:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=1 row-size=8B cardinality=0
  |     in pipelines: 02(GETNEXT)
  |
  01:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns missing stats: ss_customer_sk, ss_net_paid
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=12B cardinality=0
     in pipelines: 01(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=33, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  02:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim.d_year = add(CAST(1998 AS INT), CAST(1 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim.d_year = add(CAST(1998 AS INT), CAST(1 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=1 row-size=8B cardinality=0
     in pipelines: 02(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=34, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer.c_customer_id IS NOT NULL, default.impala_tpcds_customer.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=3 row-size=40B cardinality=0
     in pipelines: 04(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.05MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=41, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:SELECT
  |  predicates: sum(default.impala_tpcds_store_sales_0.ss_net_paid) > CAST(0 AS DECIMAL(38,2))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=12 row-size=28B cardinality=0
  |  in pipelines: 40(GETNEXT)
  |
  07:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=12 row-size=28B cardinality=0
  |  in pipelines: 40(GETNEXT)
  |
  40:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_store_sales_0.ss_net_paid)
  |  group by: default.impala_tpcds_customer_0.c_customer_id, default.impala_tpcds_customer_0.c_first_name, default.impala_tpcds_customer_0.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=52B cardinality=0
  |  in pipelines: 40(GETNEXT), 08(OPEN)
  |
  39:EXCHANGE [HASH(default.impala_tpcds_customer_0.c_customer_id,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=52B cardinality=0
     in pipelines: 08(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.93MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=39, HASH(default.impala_tpcds_customer_0.c_customer_id,default.impala_tpcds_customer_0.c_first_name,default.impala_tpcds_customer_0.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  13:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_store_sales_0.ss_net_paid)
  |  group by: default.impala_tpcds_customer_0.c_customer_id, default.impala_tpcds_customer_0.c_first_name, default.impala_tpcds_customer_0.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=11 row-size=52B cardinality=0
  |  in pipelines: 08(GETNEXT)
  |
  12:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_customer_sk = default.impala_tpcds_customer_0.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=6,7,9 row-size=60B cardinality=0
  |  in pipelines: 08(GETNEXT), 11(OPEN)
  |
  |--38:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=9 row-size=40B cardinality=0
  |     in pipelines: 11(GETNEXT)
  |
  10:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk = default.impala_tpcds_date_dim_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=6,7 row-size=20B cardinality=0
  |  in pipelines: 08(GETNEXT), 09(OPEN)
  |
  |--37:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=7 row-size=8B cardinality=0
  |     in pipelines: 09(GETNEXT)
  |
  08:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales_0.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales_0.ss_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=0
       columns missing stats: ss_customer_sk, ss_net_paid
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=6 row-size=12B cardinality=0
     in pipelines: 08(GETNEXT)

F05:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=37, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  09:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_0.d_year = CAST(1998 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_0.d_year = CAST(1998 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=8B cardinality=0
     in pipelines: 09(GETNEXT)

F06:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F04, EXCHANGE=38, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  11:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_0.c_customer_id IS NOT NULL, default.impala_tpcds_customer_0.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=9 row-size=40B cardinality=0
     in pipelines: 11(GETNEXT)

F13:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.05MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=46, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  23:SELECT
  |  predicates: sum(default.impala_tpcds_web_sales.ws_net_paid) > CAST(0 AS DECIMAL(38,2))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=20 row-size=28B cardinality=0
  |  in pipelines: 45(GETNEXT)
  |
  16:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=20 row-size=28B cardinality=0
  |  in pipelines: 45(GETNEXT)
  |
  45:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_web_sales.ws_net_paid)
  |  group by: default.impala_tpcds_customer_1.c_customer_id, default.impala_tpcds_customer_1.c_first_name, default.impala_tpcds_customer_1.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=19 row-size=52B cardinality=0
  |  in pipelines: 45(GETNEXT), 17(OPEN)
  |
  44:EXCHANGE [HASH(default.impala_tpcds_customer_1.c_customer_id,default.impala_tpcds_customer_1.c_first_name,default.impala_tpcds_customer_1.c_last_name)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=19 row-size=52B cardinality=0
     in pipelines: 17(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.93MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F13, EXCHANGE=44, HASH(default.impala_tpcds_customer_1.c_customer_id,default.impala_tpcds_customer_1.c_first_name,default.impala_tpcds_customer_1.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_web_sales.ws_net_paid)
  |  group by: default.impala_tpcds_customer_1.c_customer_id, default.impala_tpcds_customer_1.c_first_name, default.impala_tpcds_customer_1.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=19 row-size=52B cardinality=0
  |  in pipelines: 17(GETNEXT)
  |
  21:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_bill_customer_sk = default.impala_tpcds_customer_1.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=13,15,17 row-size=60B cardinality=0
  |  in pipelines: 17(GETNEXT), 20(OPEN)
  |
  |--43:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=17 row-size=40B cardinality=0
  |     in pipelines: 20(GETNEXT)
  |
  19:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales.ws_sold_date_sk = default.impala_tpcds_date_dim_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=13,15 row-size=20B cardinality=0
  |  in pipelines: 17(GETNEXT), 18(OPEN)
  |
  |--42:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=15 row-size=8B cardinality=0
  |     in pipelines: 18(GETNEXT)
  |
  17:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_bill_customer_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=13 row-size=12B cardinality=0
     in pipelines: 17(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F09, EXCHANGE=42, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  18:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_1.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_1.d_year = CAST(1998 AS INT)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_1.d_year = CAST(1998 AS INT)
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=8B cardinality=0
     in pipelines: 18(GETNEXT)

F11:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F09, EXCHANGE=43, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  20:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_1.c_customer_id IS NOT NULL, default.impala_tpcds_customer_1.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=40B cardinality=0
     in pipelines: 20(GETNEXT)

F17:PLAN FRAGMENT [HASH(default.impala_tpcds_customer_2.c_customer_id,default.impala_tpcds_customer_2.c_first_name,default.impala_tpcds_customer_2.c_last_name)] hosts=1 instances=1
Per-Host Resources: mem-estimate=128.05MB mem-reservation=34.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F18, EXCHANGE=51, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  50:AGGREGATE [FINALIZE]
  |  output: sum:merge(default.impala_tpcds_web_sales_0.ws_net_paid)
  |  group by: default.impala_tpcds_customer_2.c_customer_id, default.impala_tpcds_customer_2.c_first_name, default.impala_tpcds_customer_2.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=27 row-size=52B cardinality=0
  |  in pipelines: 50(GETNEXT), 25(OPEN)
  |
  49:EXCHANGE [HASH(default.impala_tpcds_customer_2.c_customer_id,default.impala_tpcds_customer_2.c_first_name,default.impala_tpcds_customer_2.c_last_name)]
     mem-estimate=56.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=27 row-size=52B cardinality=0
     in pipelines: 25(GETNEXT)

F14:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.93MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F17, EXCHANGE=49, HASH(default.impala_tpcds_customer_2.c_customer_id,default.impala_tpcds_customer_2.c_first_name,default.impala_tpcds_customer_2.c_last_name)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  30:AGGREGATE [STREAMING]
  |  output: sum(default.impala_tpcds_web_sales_0.ws_net_paid)
  |  group by: default.impala_tpcds_customer_2.c_customer_id, default.impala_tpcds_customer_2.c_first_name, default.impala_tpcds_customer_2.c_last_name
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=27 row-size=52B cardinality=0
  |  in pipelines: 25(GETNEXT)
  |
  29:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_0.ws_bill_customer_sk = default.impala_tpcds_customer_2.c_customer_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=21,23,25 row-size=60B cardinality=0
  |  in pipelines: 25(GETNEXT), 28(OPEN)
  |
  |--48:EXCHANGE [BROADCAST]
  |     mem-estimate=44.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=25 row-size=40B cardinality=0
  |     in pipelines: 28(GETNEXT)
  |
  27:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpcds_web_sales_0.ws_sold_date_sk = default.impala_tpcds_date_dim_2.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=21,23 row-size=20B cardinality=0
  |  in pipelines: 25(GETNEXT), 26(OPEN)
  |
  |--47:EXCHANGE [BROADCAST]
  |     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=23 row-size=8B cardinality=0
  |     in pipelines: 26(GETNEXT)
  |
  25:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales_0.ws_bill_customer_sk IS NOT NULL, default.impala_tpcds_web_sales_0.ws_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=12B cardinality=0
     in pipelines: 25(GETNEXT)

F15:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=47, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  26:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_2.d_date_sk IS NOT NULL, default.impala_tpcds_date_dim_2.d_year = add(CAST(1998 AS INT), CAST(1 AS INT))
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpcds_date_dim_2.d_year = add(CAST(1998 AS INT), CAST(1 AS INT))
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=23 row-size=8B cardinality=0
     in pipelines: 26(GETNEXT)

F16:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F14, EXCHANGE=48, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  28:SCAN HDFS [default.impala_tpcds_customer, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_customer_2.c_customer_id IS NOT NULL, default.impala_tpcds_customer_2.c_customer_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=25 row-size=40B cardinality=0
     in pipelines: 28(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

