PREHOOK: query: explain cbo select
  sum(l_extendedprice * (1 - l_discount)) as revenue
from
  impala_tpch_lineitem,
  impala_tpch_part
where
  p_partkey = l_partkey
  and (
    (
      p_brand = 'Brand#12'
      and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
      and l_quantity >= 1 and l_quantity <= 11
      and p_size between 1 and 5
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    ) 
    or
    ( 
      p_brand = 'Brand#23'
      and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
      and l_quantity >= 10 and l_quantity <= 20
      and p_size between 1 and 10
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    ) 
    or
    (
      p_brand = 'Brand#34'
      and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
      and l_quantity >= 20 and l_quantity <= 30
      and p_size between 1 and 15
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    )
  )
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Input: default@impala_tpch_part
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select
  sum(l_extendedprice * (1 - l_discount)) as revenue
from
  impala_tpch_lineitem,
  impala_tpch_part
where
  p_partkey = l_partkey
  and (
    (
      p_brand = 'Brand#12'
      and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
      and l_quantity >= 1 and l_quantity <= 11
      and p_size between 1 and 5
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    ) 
    or
    ( 
      p_brand = 'Brand#23'
      and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
      and l_quantity >= 10 and l_quantity <= 20
      and p_size between 1 and 10
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    ) 
    or
    (
      p_brand = 'Brand#34'
      and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
      and l_quantity >= 20 and l_quantity <= 30
      and p_size between 1 and 15
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    )
  )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Input: default@impala_tpch_part
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
ImpalaAggregateRel(group=[{}], agg#0=[sum($1)])
  ImpalaJoinRel(condition=[AND(=($8, $0), OR(AND($9, $10, $2, $3, $11), AND($12, $13, $4, $5, $14), AND($15, $16, $6, $7, $17)))], joinType=[inner])
    ImpalaProjectPassthroughRel(l_partkey=[$1], *=[*($5, -(1:DECIMAL(3, 0), $6))], >==[>=($4, 1)], <==[<=($4, 11)], >=4=[>=($4, 10)], <=5=[<=($4, 20)], >=6=[>=($4, 20)], <=7=[<=($4, 30)])
      ImpalaHdfsScanRel(table=[[default, impala_tpch_lineitem]], condition=[AND(OR(>=($4, 1), <=($4, 11), >=($4, 10), <=($4, 20), >=($4, 20), <=($4, 30)), =($13, _UTF-16LE'DELIVER IN PERSON'), IN($14, _UTF-16LE'AIR', _UTF-16LE'AIR REG'), IS NOT NULL($1))])
    ImpalaProjectPassthroughRel(p_partkey=[$0], ==[=($3, _UTF-16LE'Brand#12')], IN=[IN($6, _UTF-16LE'SM CASE', _UTF-16LE'SM BOX', _UTF-16LE'SM PACK', _UTF-16LE'SM PKG')], BETWEEN=[BETWEEN(false, $5, 1, 5)], =4=[=($3, _UTF-16LE'Brand#23')], IN5=[IN($6, _UTF-16LE'MED BAG', _UTF-16LE'MED BOX', _UTF-16LE'MED PKG', _UTF-16LE'MED PACK')], BETWEEN6=[BETWEEN(false, $5, 1, 10)], =7=[=($3, _UTF-16LE'Brand#34')], IN8=[IN($6, _UTF-16LE'LG CASE', _UTF-16LE'LG BOX', _UTF-16LE'LG PACK', _UTF-16LE'LG PKG')], BETWEEN9=[BETWEEN(false, $5, 1, 15)])
      ImpalaHdfsScanRel(table=[[default, impala_tpch_part]], condition=[AND(OR(BETWEEN(false, $5, 1, 5), BETWEEN(false, $5, 1, 10), BETWEEN(false, $5, 1, 15)), OR(=($3, _UTF-16LE'Brand#12'), =($3, _UTF-16LE'Brand#23'), =($3, _UTF-16LE'Brand#34')), OR(IN($6, _UTF-16LE'SM CASE', _UTF-16LE'SM BOX', _UTF-16LE'SM PACK', _UTF-16LE'SM PKG'), IN($6, _UTF-16LE'MED BAG', _UTF-16LE'MED BOX', _UTF-16LE'MED PKG', _UTF-16LE'MED PACK'), IN($6, _UTF-16LE'LG CASE', _UTF-16LE'LG BOX', _UTF-16LE'LG PACK', _UTF-16LE'LG PKG')), IS NOT NULL($0))])

PREHOOK: query: explain select
  sum(l_extendedprice * (1 - l_discount)) as revenue
from
  impala_tpch_lineitem,
  impala_tpch_part
where
  p_partkey = l_partkey
  and (
    (
      p_brand = 'Brand#12'
      and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
      and l_quantity >= 1 and l_quantity <= 11
      and p_size between 1 and 5
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    ) 
    or
    ( 
      p_brand = 'Brand#23'
      and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
      and l_quantity >= 10 and l_quantity <= 20
      and p_size between 1 and 10
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    ) 
    or
    (
      p_brand = 'Brand#34'
      and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
      and l_quantity >= 20 and l_quantity <= 30
      and p_size between 1 and 15
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    )
  )
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpch_lineitem
PREHOOK: Input: default@impala_tpch_part
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
  sum(l_extendedprice * (1 - l_discount)) as revenue
from
  impala_tpch_lineitem,
  impala_tpch_part
where
  p_partkey = l_partkey
  and (
    (
      p_brand = 'Brand#12'
      and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
      and l_quantity >= 1 and l_quantity <= 11
      and p_size between 1 and 5
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    ) 
    or
    ( 
      p_brand = 'Brand#23'
      and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
      and l_quantity >= 10 and l_quantity <= 20
      and p_size between 1 and 10
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    ) 
    or
    (
      p_brand = 'Brand#34'
      and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
      and l_quantity >= 20 and l_quantity <= 30
      and p_size between 1 and 15
      and l_shipmode in ('AIR', 'AIR REG')
      and l_shipinstruct = 'DELIVER IN PERSON'
    )
  )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpch_lineitem
POSTHOOK: Input: default@impala_tpch_part
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F02:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=10.02MB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: _impala_builtins.sum(_impala_builtins.multiply(default.impala_tpch_lineitem.l_extendedprice, _impala_builtins.subtract(1, default.impala_tpch_lineitem.l_discount)))
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  06:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(_impala_builtins.multiply(default.impala_tpch_lineitem.l_extendedprice, _impala_builtins.subtract(1, default.impala_tpch_lineitem.l_discount)))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=16B cardinality=1
  |  in pipelines: 06(GETNEXT), 03(OPEN)
  |
  05:EXCHANGE [UNPARTITIONED]
     mem-estimate=16.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=4 row-size=16B cardinality=1
     in pipelines: 03(GETNEXT)

F00:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=11.94MB mem-reservation=1.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=05, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  03:AGGREGATE
  |  output: sum(_impala_builtins.multiply(default.impala_tpch_lineitem.l_extendedprice, _impala_builtins.subtract(CAST(1 AS DECIMAL(3,0)), default.impala_tpch_lineitem.l_discount)))
  |  mem-estimate=10.00MB mem-reservation=0B spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=4 row-size=16B cardinality=1
  |  in pipelines: 03(GETNEXT), 00(OPEN)
  |
  02:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: default.impala_tpch_lineitem.l_partkey = default.impala_tpch_part.p_partkey
  |  fk/pk conjuncts: assumed fk/pk
  |  other join predicates: default.impala_tpch_part.p_brand = 'Brand#12' AND default.impala_tpch_part.p_container IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') AND default.impala_tpch_lineitem.l_quantity >= CAST(1 AS DECIMAL(12,2)) AND default.impala_tpch_lineitem.l_quantity <= CAST(11 AS DECIMAL(12,2)) AND default.impala_tpch_part.p_size >= CAST(1 AS INT) AND default.impala_tpch_part.p_size <= CAST(5 AS INT) OR default.impala_tpch_part.p_brand = 'Brand#23' AND default.impala_tpch_part.p_container IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') AND default.impala_tpch_lineitem.l_quantity >= CAST(10 AS DECIMAL(12,2)) AND default.impala_tpch_lineitem.l_quantity <= CAST(20 AS DECIMAL(12,2)) AND default.impala_tpch_part.p_size >= CAST(1 AS INT) AND default.impala_tpch_part.p_size <= CAST(10 AS INT) OR default.impala_tpch_part.p_brand = 'Brand#34' AND default.impala_tpch_part.p_container IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') AND default.impala_tpch_lineitem.l_quantity >= CAST(20 AS DECIMAL(12,2)) AND default.impala_tpch_lineitem.l_quantity <= CAST(30 AS DECIMAL(12,2)) AND default.impala_tpch_part.p_size >= CAST(1 AS INT) AND default.impala_tpch_part.p_size <= CAST(15 AS INT)
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=0,2 row-size=92B cardinality=0
  |  in pipelines: 00(GETNEXT), 01(OPEN)
  |
  |--04:EXCHANGE [BROADCAST]
  |     mem-estimate=40.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=2 row-size=36B cardinality=0
  |     in pipelines: 01(GETNEXT)
  |
  00:SCAN HDFS [default.impala_tpch_lineitem, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_lineitem.l_partkey IS NOT NULL, default.impala_tpch_lineitem.l_shipmode IN ('AIR', 'AIR REG'), default.impala_tpch_lineitem.l_quantity >= CAST(1 AS DECIMAL(12,2)) OR default.impala_tpch_lineitem.l_quantity <= CAST(11 AS DECIMAL(12,2)) OR default.impala_tpch_lineitem.l_quantity >= CAST(10 AS DECIMAL(12,2)) OR default.impala_tpch_lineitem.l_quantity <= CAST(20 AS DECIMAL(12,2)) OR default.impala_tpch_lineitem.l_quantity >= CAST(20 AS DECIMAL(12,2)) OR default.impala_tpch_lineitem.l_quantity <= CAST(30 AS DECIMAL(12,2)), default.impala_tpch_lineitem.l_shipinstruct = 'DELIVER IN PERSON'
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     parquet statistics predicates: default.impala_tpch_lineitem.l_shipmode IN ('AIR', 'AIR REG'), default.impala_tpch_lineitem.l_shipinstruct = 'DELIVER IN PERSON'
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=0 row-size=56B cardinality=0
     in pipelines: 00(GETNEXT)

F01:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F00, EXCHANGE=04, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  01:SCAN HDFS [default.impala_tpch_part, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpch_part.p_partkey IS NOT NULL, default.impala_tpch_part.p_size >= CAST(1 AS INT) AND default.impala_tpch_part.p_size <= CAST(5 AS INT) OR default.impala_tpch_part.p_size >= CAST(1 AS INT) AND default.impala_tpch_part.p_size <= CAST(10 AS INT) OR default.impala_tpch_part.p_size >= CAST(1 AS INT) AND default.impala_tpch_part.p_size <= CAST(15 AS INT), default.impala_tpch_part.p_container IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') OR default.impala_tpch_part.p_container IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') OR default.impala_tpch_part.p_container IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG'), default.impala_tpch_part.p_brand = 'Brand#12' OR default.impala_tpch_part.p_brand = 'Brand#23' OR default.impala_tpch_part.p_brand = 'Brand#34'
     stored statistics:
       table: rows=0 size=0B
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=36B cardinality=0
     in pipelines: 01(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

