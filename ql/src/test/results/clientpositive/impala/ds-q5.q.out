PREHOOK: query: explain cbo physical with ssr as
 (select s_store_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ss_store_sk as store_sk,
            ss_sold_date_sk  as date_sk,
            ss_ext_sales_price as sales_price,
            ss_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_store_sales
    union all
    select sr_store_sk as store_sk,
           sr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           sr_return_amt as return_amt,
           sr_net_loss as net_loss
    from impala_tpcds_store_returns
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_store
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date) 
                  and (cast('2000-08-19' as date) +  14 days)
       and store_sk = s_store_sk
 group by s_store_id)
 ,
 csr as
 (select cp_catalog_page_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  cs_catalog_page_sk as page_sk,
            cs_sold_date_sk  as date_sk,
            cs_ext_sales_price as sales_price,
            cs_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_catalog_sales
    union all
    select cr_catalog_page_sk as page_sk,
           cr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           cr_return_amount as return_amt,
           cr_net_loss as net_loss
    from impala_tpcds_catalog_returns
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_catalog_page
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date)
                  and (cast('2000-08-19' as date) +  14 days)
       and page_sk = cp_catalog_page_sk
 group by cp_catalog_page_id)
 ,
 wsr as
 (select web_site_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ws_web_site_sk as wsr_web_site_sk,
            ws_sold_date_sk  as date_sk,
            ws_ext_sales_price as sales_price,
            ws_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_web_sales
    union all
    select ws_web_site_sk as wsr_web_site_sk,
           wr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           wr_return_amt as return_amt,
           wr_net_loss as net_loss
    from impala_tpcds_web_returns left outer join impala_tpcds_web_sales on
         ( wr_item_sk = ws_item_sk
           and wr_order_number = ws_order_number)
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_web_site
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date)
                  and (cast('2000-08-19' as date) +  14 days)
       and wsr_web_site_sk = web_site_sk
 group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || s_store_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || cp_catalog_page_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_page
PREHOOK: Input: default@impala_tpcds_catalog_returns
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_returns
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_returns
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Input: default@impala_tpcds_web_site
PREHOOK: Output: streaming
POSTHOOK: query: explain cbo physical with ssr as
 (select s_store_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ss_store_sk as store_sk,
            ss_sold_date_sk  as date_sk,
            ss_ext_sales_price as sales_price,
            ss_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_store_sales
    union all
    select sr_store_sk as store_sk,
           sr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           sr_return_amt as return_amt,
           sr_net_loss as net_loss
    from impala_tpcds_store_returns
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_store
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date) 
                  and (cast('2000-08-19' as date) +  14 days)
       and store_sk = s_store_sk
 group by s_store_id)
 ,
 csr as
 (select cp_catalog_page_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  cs_catalog_page_sk as page_sk,
            cs_sold_date_sk  as date_sk,
            cs_ext_sales_price as sales_price,
            cs_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_catalog_sales
    union all
    select cr_catalog_page_sk as page_sk,
           cr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           cr_return_amount as return_amt,
           cr_net_loss as net_loss
    from impala_tpcds_catalog_returns
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_catalog_page
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date)
                  and (cast('2000-08-19' as date) +  14 days)
       and page_sk = cp_catalog_page_sk
 group by cp_catalog_page_id)
 ,
 wsr as
 (select web_site_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ws_web_site_sk as wsr_web_site_sk,
            ws_sold_date_sk  as date_sk,
            ws_ext_sales_price as sales_price,
            ws_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_web_sales
    union all
    select ws_web_site_sk as wsr_web_site_sk,
           wr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           wr_return_amt as return_amt,
           wr_net_loss as net_loss
    from impala_tpcds_web_returns left outer join impala_tpcds_web_sales on
         ( wr_item_sk = ws_item_sk
           and wr_order_number = ws_order_number)
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_web_site
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date)
                  and (cast('2000-08-19' as date) +  14 days)
       and wsr_web_site_sk = web_site_sk
 group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || s_store_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || cp_catalog_page_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_page
POSTHOOK: Input: default@impala_tpcds_catalog_returns
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_returns
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_returns
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Input: default@impala_tpcds_web_site
CBO PLAN:
ImpalaSortRel(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[100])
  ImpalaAggregateRel(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], agg#0=[sum($2)], agg#1=[sum($3)], agg#2=[sum($4)])
    ImpalaUnionRel(all=[true])
      ImpalaProjectPassthroughRel(channel=[_UTF-16LE'store channel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], id=[||(_UTF-16LE'store':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", $0)], sales=[$1], returns=[$3], profit=[-($2, $4)])
        ImpalaAggregateRel(group=[{8}], agg#0=[sum($2)], agg#1=[sum($3)], agg#2=[sum($4)], agg#3=[sum($5)])
          ImpalaJoinRel(condition=[=($0, $7)], joinType=[inner])
            ImpalaJoinRel(condition=[=($1, $6)], joinType=[inner])
              ImpalaUnionRel(all=[true])
                ImpalaProjectPassthroughRel(store_sk=[$6], date_sk=[$22], sales_price=[$14], profit=[$21], return_amt=[0:DECIMAL(7, 2)], net_loss=[0:DECIMAL(7, 2)])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_sales]], condition=[AND(IS NOT NULL($6), IS NOT NULL($22))])
                ImpalaProjectPassthroughRel(store_sk=[$7], date_sk=[$0], sales_price=[0:DECIMAL(7, 2)], profit=[0:DECIMAL(7, 2)], return_amt=[$11], net_loss=[$19])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_store_returns]], condition=[AND(IS NOT NULL($7), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(d_date_sk=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), CAST(CAST(_UTF-16LE'2000-08-19':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), +(CAST(CAST(_UTF-16LE'2000-08-19':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), 1209600000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(s_store_sk=[$0], s_store_id=[$1])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_store]], condition=[IS NOT NULL($0)])
      ImpalaProjectPassthroughRel(channel=[_UTF-16LE'catalog channel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], id=[||(_UTF-16LE'catalog_page':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", $0)], sales=[$1], returns=[$3], profit=[-($2, $4)])
        ImpalaAggregateRel(group=[{8}], agg#0=[sum($2)], agg#1=[sum($3)], agg#2=[sum($4)], agg#3=[sum($5)])
          ImpalaJoinRel(condition=[=($0, $7)], joinType=[inner])
            ImpalaJoinRel(condition=[=($1, $6)], joinType=[inner])
              ImpalaUnionRel(all=[true])
                ImpalaProjectPassthroughRel(page_sk=[$12], date_sk=[$0], sales_price=[$23], profit=[$33], return_amt=[0:DECIMAL(7, 2)], net_loss=[0:DECIMAL(7, 2)])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_sales]], condition=[AND(IS NOT NULL($12), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(page_sk=[$12], date_sk=[$0], sales_price=[0:DECIMAL(7, 2)], profit=[0:DECIMAL(7, 2)], return_amt=[$18], net_loss=[$26])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_returns]], condition=[AND(IS NOT NULL($12), IS NOT NULL($0))])
              ImpalaProjectPassthroughRel(d_date_sk=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), CAST(CAST(_UTF-16LE'2000-08-19':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), +(CAST(CAST(_UTF-16LE'2000-08-19':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), 1209600000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(cp_catalog_page_sk=[$0], cp_catalog_page_id=[$1])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_catalog_page]], condition=[IS NOT NULL($0)])
      ImpalaProjectPassthroughRel(channel=[_UTF-16LE'web channel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"], id=[||(_UTF-16LE'web_site':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", $0)], sales=[$1], returns=[$3], profit=[-($2, $4)])
        ImpalaAggregateRel(group=[{8}], agg#0=[sum($2)], agg#1=[sum($3)], agg#2=[sum($4)], agg#3=[sum($5)])
          ImpalaJoinRel(condition=[=($0, $7)], joinType=[inner])
            ImpalaJoinRel(condition=[=($1, $6)], joinType=[inner])
              ImpalaUnionRel(all=[true])
                ImpalaProjectPassthroughRel(wsr_web_site_sk=[$13], date_sk=[$0], sales_price=[$23], profit=[$33], return_amt=[0:DECIMAL(7, 2)], net_loss=[0:DECIMAL(7, 2)])
                  ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($13), IS NOT NULL($0))])
                ImpalaProjectPassthroughRel(wsr_web_site_sk=[$6], date_sk=[$0], sales_price=[0:DECIMAL(7, 2)], profit=[0:DECIMAL(7, 2)], return_amt=[$3], net_loss=[$4])
                  ImpalaJoinRel(condition=[AND(=($1, $5), =($2, $7))], joinType=[inner])
                    ImpalaProjectPassthroughRel(wr_returned_date_sk=[$0], wr_item_sk=[$2], wr_order_number=[$13], wr_return_amt=[$15], wr_net_loss=[$23])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_returns]], condition=[AND(IS NOT NULL($0), IS NOT NULL($2), IS NOT NULL($13))])
                    ImpalaProjectPassthroughRel(ws_item_sk=[$3], ws_web_site_sk=[$13], ws_order_number=[$17])
                      ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_sales]], condition=[AND(IS NOT NULL($13), IS NOT NULL($3), IS NOT NULL($17))])
              ImpalaProjectPassthroughRel(d_date_sk=[$0])
                ImpalaHdfsScanRel(table=[[default, impala_tpcds_date_dim]], condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), CAST(CAST(_UTF-16LE'2000-08-19':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), +(CAST(CAST(_UTF-16LE'2000-08-19':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):DATE):TIMESTAMP(9), 1209600000.000000:INTERVAL MILLISECOND)), IS NOT NULL($0))])
            ImpalaProjectPassthroughRel(web_site_sk=[$0], web_site_id=[$1])
              ImpalaHdfsScanRel(table=[[default, impala_tpcds_web_site]], condition=[IS NOT NULL($0)])

PREHOOK: query: explain with ssr as
 (select s_store_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ss_store_sk as store_sk,
            ss_sold_date_sk  as date_sk,
            ss_ext_sales_price as sales_price,
            ss_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_store_sales
    union all
    select sr_store_sk as store_sk,
           sr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           sr_return_amt as return_amt,
           sr_net_loss as net_loss
    from impala_tpcds_store_returns
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_store
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date) 
                  and (cast('2000-08-19' as date) +  14 days)
       and store_sk = s_store_sk
 group by s_store_id)
 ,
 csr as
 (select cp_catalog_page_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  cs_catalog_page_sk as page_sk,
            cs_sold_date_sk  as date_sk,
            cs_ext_sales_price as sales_price,
            cs_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_catalog_sales
    union all
    select cr_catalog_page_sk as page_sk,
           cr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           cr_return_amount as return_amt,
           cr_net_loss as net_loss
    from impala_tpcds_catalog_returns
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_catalog_page
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date)
                  and (cast('2000-08-19' as date) +  14 days)
       and page_sk = cp_catalog_page_sk
 group by cp_catalog_page_id)
 ,
 wsr as
 (select web_site_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ws_web_site_sk as wsr_web_site_sk,
            ws_sold_date_sk  as date_sk,
            ws_ext_sales_price as sales_price,
            ws_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_web_sales
    union all
    select ws_web_site_sk as wsr_web_site_sk,
           wr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           wr_return_amt as return_amt,
           wr_net_loss as net_loss
    from impala_tpcds_web_returns left outer join impala_tpcds_web_sales on
         ( wr_item_sk = ws_item_sk
           and wr_order_number = ws_order_number)
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_web_site
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date)
                  and (cast('2000-08-19' as date) +  14 days)
       and wsr_web_site_sk = web_site_sk
 group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || s_store_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || cp_catalog_page_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@impala_tpcds_catalog_page
PREHOOK: Input: default@impala_tpcds_catalog_returns
PREHOOK: Input: default@impala_tpcds_catalog_sales
PREHOOK: Input: default@impala_tpcds_date_dim
PREHOOK: Input: default@impala_tpcds_store
PREHOOK: Input: default@impala_tpcds_store_returns
PREHOOK: Input: default@impala_tpcds_store_sales
PREHOOK: Input: default@impala_tpcds_web_returns
PREHOOK: Input: default@impala_tpcds_web_sales
PREHOOK: Input: default@impala_tpcds_web_site
PREHOOK: Output: streaming
POSTHOOK: query: explain with ssr as
 (select s_store_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ss_store_sk as store_sk,
            ss_sold_date_sk  as date_sk,
            ss_ext_sales_price as sales_price,
            ss_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_store_sales
    union all
    select sr_store_sk as store_sk,
           sr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           sr_return_amt as return_amt,
           sr_net_loss as net_loss
    from impala_tpcds_store_returns
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_store
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date) 
                  and (cast('2000-08-19' as date) +  14 days)
       and store_sk = s_store_sk
 group by s_store_id)
 ,
 csr as
 (select cp_catalog_page_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  cs_catalog_page_sk as page_sk,
            cs_sold_date_sk  as date_sk,
            cs_ext_sales_price as sales_price,
            cs_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_catalog_sales
    union all
    select cr_catalog_page_sk as page_sk,
           cr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           cr_return_amount as return_amt,
           cr_net_loss as net_loss
    from impala_tpcds_catalog_returns
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_catalog_page
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date)
                  and (cast('2000-08-19' as date) +  14 days)
       and page_sk = cp_catalog_page_sk
 group by cp_catalog_page_id)
 ,
 wsr as
 (select web_site_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ws_web_site_sk as wsr_web_site_sk,
            ws_sold_date_sk  as date_sk,
            ws_ext_sales_price as sales_price,
            ws_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from impala_tpcds_web_sales
    union all
    select ws_web_site_sk as wsr_web_site_sk,
           wr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           wr_return_amt as return_amt,
           wr_net_loss as net_loss
    from impala_tpcds_web_returns left outer join impala_tpcds_web_sales on
         ( wr_item_sk = ws_item_sk
           and wr_order_number = ws_order_number)
   ) salesreturns,
     impala_tpcds_date_dim,
     impala_tpcds_web_site
 where date_sk = d_date_sk
       and d_date between cast('2000-08-19' as date)
                  and (cast('2000-08-19' as date) +  14 days)
       and wsr_web_site_sk = web_site_sk
 group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || s_store_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || cp_catalog_page_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@impala_tpcds_catalog_page
POSTHOOK: Input: default@impala_tpcds_catalog_returns
POSTHOOK: Input: default@impala_tpcds_catalog_sales
POSTHOOK: Input: default@impala_tpcds_date_dim
POSTHOOK: Input: default@impala_tpcds_store
POSTHOOK: Input: default@impala_tpcds_store_returns
POSTHOOK: Input: default@impala_tpcds_store_sales
POSTHOOK: Input: default@impala_tpcds_web_returns
POSTHOOK: Input: default@impala_tpcds_web_sales
POSTHOOK: Input: default@impala_tpcds_web_site
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Impala
      Impala Plan: 
F21:PLAN FRAGMENT [UNPARTITIONED] hosts=1 instances=1
Per-Host Resources: mem-estimate=76.00KB mem-reservation=0B thread-reservation=1
  PLAN-ROOT SINK
  |  output exprs: CASE valid_tid(32,33,34) WHEN 32 THEN channel WHEN 33 THEN channel WHEN 34 THEN NULL END, CASE valid_tid(32,33,34) WHEN 32 THEN id WHEN 33 THEN NULL WHEN 34 THEN NULL END, aggif(valid_tid(32,33,34) IN (32, 33, 34), CASE valid_tid(32,33,34) WHEN 32 THEN _impala_builtins.sum(sales) WHEN 33 THEN sum(sales) WHEN 34 THEN sum(sales) END), aggif(valid_tid(32,33,34) IN (32, 33, 34), CASE valid_tid(32,33,34) WHEN 32 THEN _impala_builtins.sum(returns) WHEN 33 THEN sum(returns) WHEN 34 THEN sum(returns) END), aggif(valid_tid(32,33,34) IN (32, 33, 34), CASE valid_tid(32,33,34) WHEN 32 THEN _impala_builtins.sum(profit) WHEN 33 THEN sum(profit) WHEN 34 THEN sum(profit) END)
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |
  45:MERGING-EXCHANGE [UNPARTITIONED]
     order by: CASE valid_tid(32,33,34) WHEN 32 THEN channel WHEN 33 THEN channel WHEN 34 THEN NULL END ASC NULLS LAST, CASE valid_tid(32,33,34) WHEN 32 THEN id WHEN 33 THEN NULL WHEN 34 THEN NULL END ASC NULLS LAST
     limit: 100
     mem-estimate=76.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=36 row-size=72B cardinality=0
     in pipelines: 29(GETNEXT)

F20:PLAN FRAGMENT [HASH(CASE valid_tid(32,33,34) WHEN 32 THEN murmur_hash(channel) WHEN 33 THEN murmur_hash(channel) WHEN 34 THEN murmur_hash(NULL) END,CASE valid_tid(32,33,34) WHEN 32 THEN murmur_hash(id) WHEN 33 THEN murmur_hash(NULL) WHEN 34 THEN murmur_hash(NULL) END)] hosts=1 instances=1
Per-Host Resources: mem-estimate=394.00MB mem-reservation=103.94MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F21, EXCHANGE=45, UNPARTITIONED]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  29:TOP-N [LIMIT=100]
  |  order by: CASE valid_tid(32,33,34) WHEN 32 THEN channel WHEN 33 THEN channel WHEN 34 THEN NULL END ASC NULLS LAST, CASE valid_tid(32,33,34) WHEN 32 THEN id WHEN 33 THEN NULL WHEN 34 THEN NULL END ASC NULLS LAST
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=36 row-size=72B cardinality=0
  |  in pipelines: 29(GETNEXT), 28(OPEN)
  |
  28:AGGREGATE [FINALIZE]
  |  output: aggif(valid_tid(32,33,34) IN (CAST(32 AS INT), CAST(33 AS INT), CAST(34 AS INT)), CASE valid_tid(32,33,34) WHEN CAST(32 AS INT) THEN _impala_builtins.sum(sales) WHEN CAST(33 AS INT) THEN sum(sales) WHEN CAST(34 AS INT) THEN sum(sales) END), aggif(valid_tid(32,33,34) IN (CAST(32 AS INT), CAST(33 AS INT), CAST(34 AS INT)), CASE valid_tid(32,33,34) WHEN CAST(32 AS INT) THEN _impala_builtins.sum(returns) WHEN CAST(33 AS INT) THEN sum(returns) WHEN CAST(34 AS INT) THEN sum(returns) END), aggif(valid_tid(32,33,34) IN (CAST(32 AS INT), CAST(33 AS INT), CAST(34 AS INT)), CASE valid_tid(32,33,34) WHEN CAST(32 AS INT) THEN _impala_builtins.sum(profit) WHEN CAST(33 AS INT) THEN sum(profit) WHEN CAST(34 AS INT) THEN sum(profit) END)
  |  group by: CASE valid_tid(32,33,34) WHEN CAST(32 AS INT) THEN channel WHEN CAST(33 AS INT) THEN channel WHEN CAST(34 AS INT) THEN NULL END, CASE valid_tid(32,33,34) WHEN CAST(32 AS INT) THEN id WHEN CAST(33 AS INT) THEN NULL WHEN CAST(34 AS INT) THEN NULL END, CASE valid_tid(32,33,34) WHEN CAST(32 AS INT) THEN CAST(32 AS INT) WHEN CAST(33 AS INT) THEN CAST(33 AS INT) WHEN CAST(34 AS INT) THEN CAST(34 AS INT) END
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=35 row-size=76B cardinality=0
  |  in pipelines: 28(GETNEXT), 44(OPEN)
  |
  44:AGGREGATE [FINALIZE]
  |  Class 0
  |    output: _impala_builtins.sum:merge(sales), _impala_builtins.sum:merge(returns), _impala_builtins.sum:merge(profit)
  |    group by: channel, id
  |  Class 1
  |    output: sum:merge(sales), sum:merge(returns), sum:merge(profit)
  |    group by: channel, NULL
  |  Class 2
  |    output: sum:merge(sales), sum:merge(returns), sum:merge(profit)
  |    group by: NULL, NULL
  |  mem-estimate=266.00MB mem-reservation=69.94MB thread-reservation=0
  |  tuple-ids=32N,33N,34N row-size=216B cardinality=0
  |  in pipelines: 44(GETNEXT), 33(OPEN), 37(OPEN), 42(OPEN)
  |
  43:EXCHANGE [HASH(CASE valid_tid(32,33,34) WHEN 32 THEN murmur_hash(channel) WHEN 33 THEN murmur_hash(channel) WHEN 34 THEN murmur_hash(NULL) END,CASE valid_tid(32,33,34) WHEN 32 THEN murmur_hash(id) WHEN 33 THEN murmur_hash(NULL) WHEN 34 THEN murmur_hash(NULL) END)]
     mem-estimate=228.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=32N,33N,34N row-size=216B cardinality=0
     in pipelines: 33(GETNEXT), 37(GETNEXT), 42(GETNEXT)

F19:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=394.08MB mem-reservation=104.00MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F20, EXCHANGE=43, HASH(CASE valid_tid(32,33,34) WHEN 32 THEN murmur_hash(channel) WHEN 33 THEN murmur_hash(channel) WHEN 34 THEN murmur_hash(NULL) END,CASE valid_tid(32,33,34) WHEN 32 THEN murmur_hash(id) WHEN 33 THEN murmur_hash(NULL) WHEN 34 THEN murmur_hash(NULL) END)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  27:AGGREGATE [STREAMING]
  |  Class 0
  |    output: sum(sales), sum(returns), sum(profit)
  |    group by: channel, id
  |  Class 1
  |    output: sum(sales), sum(returns), sum(profit)
  |    group by: channel, NULL
  |  Class 2
  |    output: sum(sales), sum(returns), sum(profit)
  |    group by: NULL, NULL
  |  mem-estimate=266.00MB mem-reservation=70.00MB thread-reservation=0
  |  tuple-ids=32N,33N,34N row-size=216B cardinality=0
  |  in pipelines: 33(GETNEXT), 37(GETNEXT), 42(GETNEXT)
  |
  00:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=0 row-size=72B cardinality=0
  |  in pipelines: 33(GETNEXT), 37(GETNEXT), 42(GETNEXT)
  |
  |--42:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.sum:merge(sales_price), _impala_builtins.sum:merge(profit), _impala_builtins.sum:merge(return_amt), _impala_builtins.sum:merge(net_loss)
  |  |  group by: default.impala_tpcds_web_site.web_site_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=31 row-size=76B cardinality=0
  |  |  in pipelines: 42(GETNEXT), 18(OPEN), 19(OPEN)
  |  |
  |  41:EXCHANGE [HASH(default.impala_tpcds_web_site.web_site_id)]
  |     mem-estimate=80.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=31 row-size=76B cardinality=0
  |     in pipelines: 18(GETNEXT), 19(GETNEXT)
  |
  |--37:AGGREGATE [FINALIZE]
  |  |  output: _impala_builtins.sum:merge(sales_price), _impala_builtins.sum:merge(profit), _impala_builtins.sum:merge(return_amt), _impala_builtins.sum:merge(net_loss)
  |  |  group by: default.impala_tpcds_catalog_page.cp_catalog_page_id
  |  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  |  tuple-ids=19 row-size=76B cardinality=0
  |  |  in pipelines: 37(GETNEXT), 10(OPEN), 11(OPEN)
  |  |
  |  36:EXCHANGE [HASH(default.impala_tpcds_catalog_page.cp_catalog_page_id)]
  |     mem-estimate=80.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=19 row-size=76B cardinality=0
  |     in pipelines: 10(GETNEXT), 11(GETNEXT)
  |
  33:AGGREGATE [FINALIZE]
  |  output: _impala_builtins.sum:merge(sales_price), _impala_builtins.sum:merge(profit), _impala_builtins.sum:merge(return_amt), _impala_builtins.sum:merge(net_loss)
  |  group by: default.impala_tpcds_store.s_store_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=9 row-size=76B cardinality=0
  |  in pipelines: 33(GETNEXT), 02(OPEN), 03(OPEN)
  |
  32:EXCHANGE [HASH(default.impala_tpcds_store.s_store_id)]
     mem-estimate=80.00KB mem-reservation=0B thread-reservation=0
     tuple-ids=9 row-size=76B cardinality=0
     in pipelines: 02(GETNEXT), 03(GETNEXT)

F02:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F19, EXCHANGE=32, HASH(default.impala_tpcds_store.s_store_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  08:AGGREGATE [STREAMING]
  |  output: sum(sales_price), sum(profit), sum(return_amt), sum(net_loss)
  |  group by: default.impala_tpcds_store.s_store_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=9 row-size=76B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(GETNEXT)
  |
  07:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: store_sk = default.impala_tpcds_store.s_store_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,5,7 row-size=56B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(GETNEXT), 06(OPEN)
  |
  |--31:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=7 row-size=16B cardinality=0
  |     in pipelines: 06(GETNEXT)
  |
  05:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: date_sk = default.impala_tpcds_date_dim.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=1,5 row-size=40B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(GETNEXT), 04(OPEN)
  |
  |--30:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=5 row-size=16B cardinality=0
  |     in pipelines: 04(GETNEXT)
  |
  01:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=1 row-size=24B cardinality=0
  |  in pipelines: 02(GETNEXT), 03(GETNEXT)
  |
  |--03:SCAN HDFS [default.impala_tpcds_store_returns, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_store_returns.sr_returned_date_sk IS NOT NULL, default.impala_tpcds_store_returns.sr_store_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=3 row-size=16B cardinality=0
  |     in pipelines: 03(GETNEXT)
  |
  02:SCAN HDFS [default.impala_tpcds_store_sales, RANDOM]
     partition predicates: default.impala_tpcds_store_sales.ss_sold_date_sk IS NOT NULL
     partitions=0/0 files=0 size=0B
     predicates: default.impala_tpcds_store_sales.ss_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       partitions: 0/0 rows=unavailable
       columns missing stats: ss_store_sk, ss_ext_sales_price, ss_net_profit
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=2 row-size=16B cardinality=0
     in pipelines: 02(GETNEXT)

F03:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=30, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  04:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim.d_date_sk IS NOT NULL, casttotimestamp(default.impala_tpcds_date_dim.d_date) >= casttotimestamp(casttodate('2000-08-19')) AND casttotimestamp(default.impala_tpcds_date_dim.d_date) <= MILLISECONDS_ADD(casttotimestamp(casttodate('2000-08-19')), INTERVAL CAST(1209600000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=5 row-size=16B cardinality=0
     in pipelines: 04(GETNEXT)

F04:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F02, EXCHANGE=31, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  06:SCAN HDFS [default.impala_tpcds_store, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_store.s_store_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=7 row-size=16B cardinality=0
     in pipelines: 06(GETNEXT)

F08:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=131.91MB mem-reservation=37.88MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F19, EXCHANGE=36, HASH(default.impala_tpcds_catalog_page.cp_catalog_page_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  16:AGGREGATE [STREAMING]
  |  output: sum(sales_price), sum(profit), sum(return_amt), sum(net_loss)
  |  group by: default.impala_tpcds_catalog_page.cp_catalog_page_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=19 row-size=76B cardinality=0
  |  in pipelines: 10(GETNEXT), 11(GETNEXT)
  |
  15:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: page_sk = default.impala_tpcds_catalog_page.cp_catalog_page_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=10,15,17 row-size=56B cardinality=0
  |  in pipelines: 10(GETNEXT), 11(GETNEXT), 14(OPEN)
  |
  |--35:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=17 row-size=16B cardinality=0
  |     in pipelines: 14(GETNEXT)
  |
  13:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: date_sk = default.impala_tpcds_date_dim_0.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=10,15 row-size=40B cardinality=0
  |  in pipelines: 10(GETNEXT), 11(GETNEXT), 12(OPEN)
  |
  |--34:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=15 row-size=16B cardinality=0
  |     in pipelines: 12(GETNEXT)
  |
  09:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=10 row-size=24B cardinality=0
  |  in pipelines: 10(GETNEXT), 11(GETNEXT)
  |
  |--11:SCAN HDFS [default.impala_tpcds_catalog_returns, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_catalog_returns.cr_catalog_page_sk IS NOT NULL, default.impala_tpcds_catalog_returns.cr_returned_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=13 row-size=16B cardinality=0
  |     in pipelines: 11(GETNEXT)
  |
  10:SCAN HDFS [default.impala_tpcds_catalog_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_sales.cs_catalog_page_sk IS NOT NULL, default.impala_tpcds_catalog_sales.cs_sold_date_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=11 row-size=16B cardinality=0
     in pipelines: 10(GETNEXT)

F09:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=34, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  12:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_0.d_date_sk IS NOT NULL, casttotimestamp(default.impala_tpcds_date_dim_0.d_date) >= casttotimestamp(casttodate('2000-08-19')) AND casttotimestamp(default.impala_tpcds_date_dim_0.d_date) <= MILLISECONDS_ADD(casttotimestamp(casttodate('2000-08-19')), INTERVAL CAST(1209600000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=15 row-size=16B cardinality=0
     in pipelines: 12(GETNEXT)

F10:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F08, EXCHANGE=35, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  14:SCAN HDFS [default.impala_tpcds_catalog_page, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_catalog_page.cp_catalog_page_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=17 row-size=16B cardinality=0
     in pipelines: 14(GETNEXT)

F15:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=133.88MB mem-reservation=39.81MB thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F19, EXCHANGE=41, HASH(default.impala_tpcds_web_site.web_site_id)]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  26:AGGREGATE [STREAMING]
  |  output: sum(sales_price), sum(profit), sum(return_amt), sum(net_loss)
  |  group by: default.impala_tpcds_web_site.web_site_id
  |  mem-estimate=128.00MB mem-reservation=34.00MB spill-buffer=2.00MB thread-reservation=0
  |  tuple-ids=31 row-size=76B cardinality=0
  |  in pipelines: 18(GETNEXT), 19(GETNEXT)
  |
  25:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: wsr_web_site_sk = default.impala_tpcds_web_site.web_site_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=20,27,29 row-size=56B cardinality=0
  |  in pipelines: 18(GETNEXT), 19(GETNEXT), 24(OPEN)
  |
  |--40:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=29 row-size=16B cardinality=0
  |     in pipelines: 24(GETNEXT)
  |
  23:HASH JOIN [INNER JOIN, BROADCAST]
  |  hash predicates: date_sk = default.impala_tpcds_date_dim_1.d_date_sk
  |  fk/pk conjuncts: assumed fk/pk
  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  tuple-ids=20,27 row-size=40B cardinality=0
  |  in pipelines: 18(GETNEXT), 19(GETNEXT), 22(OPEN)
  |
  |--39:EXCHANGE [BROADCAST]
  |     mem-estimate=20.00KB mem-reservation=0B thread-reservation=0
  |     tuple-ids=27 row-size=16B cardinality=0
  |     in pipelines: 22(GETNEXT)
  |
  17:UNION
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  |  tuple-ids=20 row-size=24B cardinality=0
  |  in pipelines: 18(GETNEXT), 19(GETNEXT)
  |
  |--21:HASH JOIN [INNER JOIN, BROADCAST]
  |  |  hash predicates: default.impala_tpcds_web_returns.wr_item_sk = default.impala_tpcds_web_sales_0.ws_item_sk, default.impala_tpcds_web_returns.wr_order_number = default.impala_tpcds_web_sales_0.ws_order_number
  |  |  fk/pk conjuncts: assumed fk/pk
  |  |  mem-estimate=1.94MB mem-reservation=1.94MB spill-buffer=64.00KB thread-reservation=0
  |  |  tuple-ids=23,25 row-size=48B cardinality=0
  |  |  in pipelines: 19(GETNEXT), 20(OPEN)
  |  |
  |  |--38:EXCHANGE [BROADCAST]
  |  |     mem-estimate=24.00KB mem-reservation=0B thread-reservation=0
  |  |     tuple-ids=25 row-size=20B cardinality=0
  |  |     in pipelines: 20(GETNEXT)
  |  |
  |  19:SCAN HDFS [default.impala_tpcds_web_returns, RANDOM]
  |     HDFS partitions=1/1 files=0 size=0B
  |     predicates: default.impala_tpcds_web_returns.wr_item_sk IS NOT NULL, default.impala_tpcds_web_returns.wr_order_number IS NOT NULL, default.impala_tpcds_web_returns.wr_returned_date_sk IS NOT NULL
  |     stored statistics:
  |       table: rows=unavailable size=unavailable
  |       columns: unavailable
  |     extrapolated-rows=disabled max-scan-range-rows=0
  |     mem-estimate=0B mem-reservation=0B thread-reservation=0
  |     tuple-ids=23 row-size=28B cardinality=0
  |     in pipelines: 19(GETNEXT)
  |
  18:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales.ws_sold_date_sk IS NOT NULL, default.impala_tpcds_web_sales.ws_web_site_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=21 row-size=16B cardinality=0
     in pipelines: 18(GETNEXT)

F14:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F15, EXCHANGE=38, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  20:SCAN HDFS [default.impala_tpcds_web_sales, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_sales_0.ws_item_sk IS NOT NULL, default.impala_tpcds_web_sales_0.ws_order_number IS NOT NULL, default.impala_tpcds_web_sales_0.ws_web_site_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=25 row-size=20B cardinality=0
     in pipelines: 20(GETNEXT)

F16:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F15, EXCHANGE=39, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  22:SCAN HDFS [default.impala_tpcds_date_dim, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_date_dim_1.d_date_sk IS NOT NULL, casttotimestamp(default.impala_tpcds_date_dim_1.d_date) >= casttotimestamp(casttodate('2000-08-19')) AND casttotimestamp(default.impala_tpcds_date_dim_1.d_date) <= MILLISECONDS_ADD(casttotimestamp(casttodate('2000-08-19')), INTERVAL CAST(1209600000 AS BIGINT) MILLISECOND)
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=27 row-size=16B cardinality=0
     in pipelines: 22(GETNEXT)

F17:PLAN FRAGMENT [RANDOM] hosts=1 instances=1
Per-Host Resources: mem-estimate=0B mem-reservation=0B thread-reservation=1
  DATASTREAM SINK [FRAGMENT=F15, EXCHANGE=40, BROADCAST]
  |  mem-estimate=0B mem-reservation=0B thread-reservation=0
  24:SCAN HDFS [default.impala_tpcds_web_site, RANDOM]
     HDFS partitions=1/1 files=0 size=0B
     predicates: default.impala_tpcds_web_site.web_site_sk IS NOT NULL
     stored statistics:
       table: rows=unavailable size=unavailable
       columns: unavailable
     extrapolated-rows=disabled max-scan-range-rows=0
     mem-estimate=0B mem-reservation=0B thread-reservation=0
     tuple-ids=29 row-size=16B cardinality=0
     in pipelines: 24(GETNEXT)


  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

