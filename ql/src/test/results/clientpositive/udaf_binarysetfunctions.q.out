PREHOOK: query: drop table t
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table t
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table t (id int,px int,y decimal,x decimal)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t
POSTHOOK: query: create table t (id int,px int,y decimal,x decimal)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t
PREHOOK: query: insert into t values (101,1,1,1)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (101,1,1,1)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (201,2,1,1)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (201,2,1,1)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (301,3,1,1)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (301,3,1,1)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (401,4,1,11)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (401,4,1,11)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (501,5,1,null)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (501,5,1,null)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__5)values__tmp__table__5.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__5)values__tmp__table__5.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__5)values__tmp__table__5.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__5)values__tmp__table__5.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (601,6,null,1)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (601,6,null,1)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__6)values__tmp__table__6.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__6)values__tmp__table__6.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__6)values__tmp__table__6.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__6)values__tmp__table__6.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (701,6,null,null)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (701,6,null,null)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__7)values__tmp__table__7.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__7)values__tmp__table__7.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__7)values__tmp__table__7.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__7)values__tmp__table__7.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (102,1,2,2)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (102,1,2,2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__8)values__tmp__table__8.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__8)values__tmp__table__8.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__8)values__tmp__table__8.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__8)values__tmp__table__8.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (202,2,1,2)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (202,2,1,2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__9)values__tmp__table__9.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__9)values__tmp__table__9.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__9)values__tmp__table__9.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__9)values__tmp__table__9.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (302,3,2,1)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (302,3,2,1)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__10)values__tmp__table__10.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__10)values__tmp__table__10.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__10)values__tmp__table__10.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__10)values__tmp__table__10.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (402,4,2,12)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (402,4,2,12)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__11)values__tmp__table__11.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__11)values__tmp__table__11.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__11)values__tmp__table__11.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__11)values__tmp__table__11.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (502,5,2,null)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (502,5,2,null)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__12)values__tmp__table__12.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__12)values__tmp__table__12.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__12)values__tmp__table__12.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__12)values__tmp__table__12.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (602,6,null,2)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (602,6,null,2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__13)values__tmp__table__13.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__13)values__tmp__table__13.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__13)values__tmp__table__13.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__13)values__tmp__table__13.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (702,6,null,null)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (702,6,null,null)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__14)values__tmp__table__14.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__14)values__tmp__table__14.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__14)values__tmp__table__14.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__14)values__tmp__table__14.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (103,1,3,3)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (103,1,3,3)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__15)values__tmp__table__15.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__15)values__tmp__table__15.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__15)values__tmp__table__15.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__15)values__tmp__table__15.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (203,2,1,3)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (203,2,1,3)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__16)values__tmp__table__16.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__16)values__tmp__table__16.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__16)values__tmp__table__16.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__16)values__tmp__table__16.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (303,3,3,1)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (303,3,3,1)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__17)values__tmp__table__17.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__17)values__tmp__table__17.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__17)values__tmp__table__17.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__17)values__tmp__table__17.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (403,4,3,13)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (403,4,3,13)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__18)values__tmp__table__18.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__18)values__tmp__table__18.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__18)values__tmp__table__18.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__18)values__tmp__table__18.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (503,5,3,null)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (503,5,3,null)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__19)values__tmp__table__19.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__19)values__tmp__table__19.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__19)values__tmp__table__19.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__19)values__tmp__table__19.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (603,6,null,3)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (603,6,null,3)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__20)values__tmp__table__20.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__20)values__tmp__table__20.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__20)values__tmp__table__20.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__20)values__tmp__table__20.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (703,6,null,null)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (703,6,null,null)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__21)values__tmp__table__21.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__21)values__tmp__table__21.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__21)values__tmp__table__21.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__21)values__tmp__table__21.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (104,1,4,4)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (104,1,4,4)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__22)values__tmp__table__22.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__22)values__tmp__table__22.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__22)values__tmp__table__22.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__22)values__tmp__table__22.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (204,2,1,4)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (204,2,1,4)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__23)values__tmp__table__23.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__23)values__tmp__table__23.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__23)values__tmp__table__23.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__23)values__tmp__table__23.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (304,3,4,1)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (304,3,4,1)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__24)values__tmp__table__24.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__24)values__tmp__table__24.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__24)values__tmp__table__24.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__24)values__tmp__table__24.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (404,4,4,14)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (404,4,4,14)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__25)values__tmp__table__25.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__25)values__tmp__table__25.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__25)values__tmp__table__25.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__25)values__tmp__table__25.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (504,5,4,null)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (504,5,4,null)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__26)values__tmp__table__26.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__26)values__tmp__table__26.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__26)values__tmp__table__26.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__26)values__tmp__table__26.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (604,6,null,4)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (604,6,null,4)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__27)values__tmp__table__27.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__27)values__tmp__table__27.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__27)values__tmp__table__27.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__27)values__tmp__table__27.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (704,6,null,null)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (704,6,null,null)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__28)values__tmp__table__28.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__28)values__tmp__table__28.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__28)values__tmp__table__28.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__28)values__tmp__table__28.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: insert into t values (800,7,1,1)
PREHOOK: type: QUERY
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (800,7,1,1)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.id EXPRESSION [(values__tmp__table__29)values__tmp__table__29.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: t.px EXPRESSION [(values__tmp__table__29)values__tmp__table__29.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: t.x EXPRESSION [(values__tmp__table__29)values__tmp__table__29.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: t.y EXPRESSION [(values__tmp__table__29)values__tmp__table__29.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: explain select px,var_pop(x),var_pop(y),corr(y,x),covar_samp(y,x),covar_pop(y,x),regr_count(y,x),regr_slope(y,x),
regr_intercept(y,x), regr_r2(y,x), regr_sxx(y,x), regr_syy(y,x), regr_sxy(y,x), regr_avgx(y,x), regr_avgy(y,x), regr_count(y,x)
 from t group by px order by px
PREHOOK: type: QUERY
POSTHOOK: query: explain select px,var_pop(x),var_pop(y),corr(y,x),covar_samp(y,x),covar_pop(y,x),regr_count(y,x),regr_slope(y,x),
regr_intercept(y,x), regr_r2(y,x), regr_sxx(y,x), regr_syy(y,x), regr_sxy(y,x), regr_avgx(y,x), regr_avgy(y,x), regr_count(y,x)
 from t group by px order by px
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t
            Statistics: Num rows: 29 Data size: 281 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: px (type: int), y (type: decimal(10,0)), x (type: decimal(10,0))
              outputColumnNames: px, y, x
              Statistics: Num rows: 29 Data size: 281 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: var_pop(x), var_pop(y), corr(y, x), covar_samp(y, x), covar_pop(y, x), regr_count(y, x), regr_slope(y, x), regr_intercept(y, x), regr_r2(y, x), regr_sxx(y, x), regr_syy(y, x), regr_sxy(y, x), regr_avgx(y, x), regr_avgy(y, x)
                keys: px (type: int)
                mode: hash
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14
                Statistics: Num rows: 29 Data size: 281 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 29 Data size: 281 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: struct<count:bigint,sum:double,variance:double>), _col2 (type: struct<count:bigint,sum:double,variance:double>), _col3 (type: struct<count:bigint,xavg:double,yavg:double,xvar:double,yvar:double,covar:double>), _col4 (type: struct<count:bigint,xavg:double,yavg:double,covar:double>), _col5 (type: struct<count:bigint,xavg:double,yavg:double,covar:double>), _col6 (type: bigint), _col7 (type: struct<count:bigint,xavg:double,yavg:double,xvar:double,yvar:double,covar:double>), _col8 (type: struct<count:bigint,xavg:double,yavg:double,xvar:double,yvar:double,covar:double>), _col9 (type: struct<count:bigint,xavg:double,yavg:double,xvar:double,yvar:double,covar:double>), _col10 (type: struct<count:bigint,sum:double,variance:double>), _col11 (type: struct<count:bigint,sum:double,variance:double>), _col12 (type: struct<count:bigint,xavg:double,yavg:double,xvar:double,yvar:double,covar:double>), _col13 (type: struct<count:bigint,sum:decimal(20,0),input:decimal(10,0)>), _col14 (type: struct<count:bigint,sum:decimal(20,0),input:decimal(10,0)>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: var_pop(VALUE._col0), var_pop(VALUE._col1), corr(VALUE._col2), covar_samp(VALUE._col3), covar_pop(VALUE._col4), regr_count(VALUE._col5), regr_slope(VALUE._col6), regr_intercept(VALUE._col7), regr_r2(VALUE._col8), regr_sxx(VALUE._col9), regr_syy(VALUE._col10), regr_sxy(VALUE._col11), regr_avgx(VALUE._col12), regr_avgy(VALUE._col13)
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14
          Statistics: Num rows: 14 Data size: 135 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: int)
              sort order: +
              Statistics: Num rows: 14 Data size: 135 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: double), _col2 (type: double), _col3 (type: double), _col4 (type: double), _col5 (type: double), _col6 (type: bigint), _col7 (type: double), _col8 (type: double), _col9 (type: double), _col10 (type: double), _col11 (type: double), _col12 (type: double), _col13 (type: decimal(14,4)), _col14 (type: decimal(14,4))
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: double), VALUE._col1 (type: double), VALUE._col2 (type: double), VALUE._col3 (type: double), VALUE._col4 (type: double), VALUE._col5 (type: bigint), VALUE._col6 (type: double), VALUE._col7 (type: double), VALUE._col8 (type: double), VALUE._col9 (type: double), VALUE._col10 (type: double), VALUE._col11 (type: double), VALUE._col12 (type: decimal(14,4)), VALUE._col13 (type: decimal(14,4)), VALUE._col5 (type: bigint)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15
          Statistics: Num rows: 14 Data size: 135 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 14 Data size: 135 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select	px,
	round(	var_pop(x),5),
	round(	var_pop(y),5),
	round(	corr(y,x),5),
	round(	covar_samp(y,x),5),
	round(	covar_pop(y,x),5),
	regr_count(y,x),
	round(	regr_slope(y,x),5),
	round(	regr_intercept(y,x),5),
	round(	regr_r2(y,x),5),
	round(	regr_sxx(y,x),5),
	round(	regr_syy(y,x),5),
	round(	regr_sxy(y,x),5),
	round(	regr_avgx(y,x),5),
	round(	regr_avgy(y,x),5),
	round(	regr_count(y,x),5)
 from t group by px order by px
PREHOOK: type: QUERY
PREHOOK: Input: default@t
#### A masked pattern was here ####
POSTHOOK: query: select	px,
	round(	var_pop(x),5),
	round(	var_pop(y),5),
	round(	corr(y,x),5),
	round(	covar_samp(y,x),5),
	round(	covar_pop(y,x),5),
	regr_count(y,x),
	round(	regr_slope(y,x),5),
	round(	regr_intercept(y,x),5),
	round(	regr_r2(y,x),5),
	round(	regr_sxx(y,x),5),
	round(	regr_syy(y,x),5),
	round(	regr_sxy(y,x),5),
	round(	regr_avgx(y,x),5),
	round(	regr_avgy(y,x),5),
	round(	regr_count(y,x),5)
 from t group by px order by px
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t
#### A masked pattern was here ####
1	1.25	1.25	1.0	1.66667	1.25	4	1.0	0.0	1.0	5.0	5.0	5.0	2.50000	2.50000	4
2	1.25	0.0	NULL	0.0	0.0	4	0.0	1.0	1.0	5.0	0.0	0.0	2.50000	1.00000	4
3	0.0	1.25	NULL	0.0	0.0	4	NULL	NULL	NULL	0.0	5.0	0.0	1.00000	2.50000	4
4	1.25	1.25	1.0	1.66667	1.25	4	1.0	-10.0	1.0	5.0	5.0	5.0	12.50000	2.50000	4
5	NULL	1.25	NULL	NULL	NULL	0	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	0
6	1.25	NULL	NULL	NULL	NULL	0	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	0
7	0.0	0.0	NULL	NULL	0.0	1	NULL	NULL	NULL	0.0	0.0	0.0	1.00000	1.00000	1
PREHOOK: query: select id,regr_count(y,x) over (partition by px) from t order by id
PREHOOK: type: QUERY
PREHOOK: Input: default@t
#### A masked pattern was here ####
POSTHOOK: query: select id,regr_count(y,x) over (partition by px) from t order by id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t
#### A masked pattern was here ####
101	4
102	4
103	4
104	4
201	4
202	4
203	4
204	4
301	4
302	4
303	4
304	4
401	4
402	4
403	4
404	4
501	0
502	0
503	0
504	0
601	0
602	0
603	0
604	0
701	0
702	0
703	0
704	0
800	1
