PREHOOK: query: create table e1 (count int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@e1
POSTHOOK: query: create table e1 (count int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@e1
PREHOOK: query: create table e2_n0 (percentile double)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@e2_n0
POSTHOOK: query: create table e2_n0 (percentile double)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@e2_n0
PREHOOK: query: explain
FROM (select key, cast(key as double) as value from src order by key) a
INSERT OVERWRITE TABLE e1
    SELECT COUNT(*)
INSERT OVERWRITE TABLE e2_n0
    SELECT percentile_approx(value, 0.5)
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM (select key, cast(key as double) as value from src order by key) a
INSERT OVERWRITE TABLE e1
    SELECT COUNT(*)
INSERT OVERWRITE TABLE e2_n0
    SELECT percentile_approx(value, 0.5)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToDouble(key) (type: double)
              outputColumnNames: _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                sort order: 
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: double)
      Execution mode: vectorized
      Reduce Operator Tree:
        Forward
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: count()
            mode: complete
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToInteger(_col0) (type: int)
              outputColumnNames: _col0
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.e1
              Select Operator
                expressions: _col0 (type: int)
                outputColumnNames: count
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(count, 'hll')
                  mode: complete
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 424 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 424 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 424 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          Group By Operator
            aggregations: percentile_approx(VALUE._col0, 0.5)
            mode: complete
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.e2_n0
            Select Operator
              expressions: _col0 (type: double)
              outputColumnNames: percentile
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: compute_stats(percentile, 'hll')
                mode: complete
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 424 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: struct<columntype:string,min:double,max:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 424 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 424 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.e1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: count
          Column Types: int
          Table: default.e1

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.e2_n0

  Stage: Stage-4
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: percentile
          Column Types: double
          Table: default.e2_n0

PREHOOK: query: FROM (select key, cast(key as double) as value from src order by key) a
INSERT OVERWRITE TABLE e1
    SELECT COUNT(*)
INSERT OVERWRITE TABLE e2_n0
    SELECT percentile_approx(value, 0.5)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@e1
PREHOOK: Output: default@e2_n0
POSTHOOK: query: FROM (select key, cast(key as double) as value from src order by key) a
INSERT OVERWRITE TABLE e1
    SELECT COUNT(*)
INSERT OVERWRITE TABLE e2_n0
    SELECT percentile_approx(value, 0.5)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@e1
POSTHOOK: Output: default@e2_n0
POSTHOOK: Lineage: e1.count EXPRESSION [(src)src.null, ]
POSTHOOK: Lineage: e2_n0.percentile EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: select * from e1
PREHOOK: type: QUERY
PREHOOK: Input: default@e1
#### A masked pattern was here ####
POSTHOOK: query: select * from e1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@e1
#### A masked pattern was here ####
500
PREHOOK: query: select * from e2_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@e2_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from e2_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@e2_n0
#### A masked pattern was here ####
255.5
