PREHOOK: query: CREATE TABLE shtb_test1_n0(KEY STRING, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@shtb_test1_n0
POSTHOOK: query: CREATE TABLE shtb_test1_n0(KEY STRING, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@shtb_test1_n0
PREHOOK: query: CREATE TABLE shtb_test2_n0(KEY STRING, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@shtb_test2_n0
POSTHOOK: query: CREATE TABLE shtb_test2_n0(KEY STRING, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@shtb_test2_n0
PREHOOK: query: EXPLAIN
SHOW TABLES 'shtb_*'
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: EXPLAIN
SHOW TABLES 'shtb_*'
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Show Tables
      database name: default
      pattern: shtb_*

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SHOW TABLES 'shtb_*'
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: SHOW TABLES 'shtb_*'
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
shtb_test1_n0
shtb_test2_n0
PREHOOK: query: EXPLAIN
SHOW TABLES LIKE 'shtb_test1_n0|shtb_test2_n0'
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: EXPLAIN
SHOW TABLES LIKE 'shtb_test1_n0|shtb_test2_n0'
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Show Tables
      database name: default
      pattern: shtb_test1_n0|shtb_test2_n0

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SHOW TABLES LIKE 'shtb_test1_n0|shtb_test2_n0'
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: SHOW TABLES LIKE 'shtb_test1_n0|shtb_test2_n0'
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
shtb_test1_n0
shtb_test2_n0
PREHOOK: query: CREATE DATABASE test_db
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:test_db
POSTHOOK: query: CREATE DATABASE test_db
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:test_db
PREHOOK: query: USE test_db
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test_db
POSTHOOK: query: USE test_db
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test_db
PREHOOK: query: CREATE TABLE foo_n4(a INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:test_db
PREHOOK: Output: test_db@foo_n4
POSTHOOK: query: CREATE TABLE foo_n4(a INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:test_db
POSTHOOK: Output: test_db@foo_n4
PREHOOK: query: CREATE TABLE bar_n0(a INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:test_db
PREHOOK: Output: test_db@bar_n0
POSTHOOK: query: CREATE TABLE bar_n0(a INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:test_db
POSTHOOK: Output: test_db@bar_n0
PREHOOK: query: CREATE TABLE baz(a INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:test_db
PREHOOK: Output: test_db@baz
POSTHOOK: query: CREATE TABLE baz(a INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:test_db
POSTHOOK: Output: test_db@baz
PREHOOK: query: CREATE VIEW test_view_n100 AS SELECT * FROM foo_n4
PREHOOK: type: CREATEVIEW
PREHOOK: Input: test_db@foo_n4
PREHOOK: Output: database:test_db
PREHOOK: Output: test_db@test_view_n100
POSTHOOK: query: CREATE VIEW test_view_n100 AS SELECT * FROM foo_n4
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: test_db@foo_n4
POSTHOOK: Output: database:test_db
POSTHOOK: Output: test_db@test_view_n100
POSTHOOK: Lineage: test_view_n100.a SIMPLE [(foo_n4)foo_n4.FieldSchema(name:a, type:int, comment:null), ]
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: SHOW TABLES FROM test_db
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:test_db
POSTHOOK: query: SHOW TABLES FROM test_db
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:test_db
bar_n0
baz
foo_n4
test_view_n100
PREHOOK: query: SHOW EXTENDED TABLES FROM test_db
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:test_db
POSTHOOK: query: SHOW EXTENDED TABLES FROM test_db
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:test_db
# Table Name        	Table Type          
bar_n0              	MANAGED_TABLE       
baz                 	MANAGED_TABLE       
foo_n4              	MANAGED_TABLE       
test_view_n100      	VIRTUAL_VIEW        
	 
PREHOOK: query: SHOW TABLES IN test_db
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:test_db
POSTHOOK: query: SHOW TABLES IN test_db
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:test_db
bar_n0
baz
foo_n4
test_view_n100
PREHOOK: query: SHOW EXTENDED TABLES IN test_db
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:test_db
POSTHOOK: query: SHOW EXTENDED TABLES IN test_db
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:test_db
# Table Name        	Table Type          
bar_n0              	MANAGED_TABLE       
baz                 	MANAGED_TABLE       
foo_n4              	MANAGED_TABLE       
test_view_n100      	VIRTUAL_VIEW        
	 
PREHOOK: query: SHOW TABLES IN test_db "test*"
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:test_db
POSTHOOK: query: SHOW TABLES IN test_db "test*"
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:test_db
test_view_n100
PREHOOK: query: SHOW TABLES IN test_db LIKE "nomatch"
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:test_db
POSTHOOK: query: SHOW TABLES IN test_db LIKE "nomatch"
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:test_db
PREHOOK: query: SHOW TABLES IN test_db WHERE `table_type` = "MANAGED_TABLE"
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:test_db
POSTHOOK: query: SHOW TABLES IN test_db WHERE `table_type` = "MANAGED_TABLE"
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:test_db
bar_n0
baz
foo_n4
PREHOOK: query: SHOW EXTENDED TABLES IN test_db WHERE `table_type` = "VIRTUAL_VIEW"
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:test_db
POSTHOOK: query: SHOW EXTENDED TABLES IN test_db WHERE `table_type` = "VIRTUAL_VIEW"
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:test_db
# Table Name        	Table Type          
test_view_n100      	VIRTUAL_VIEW        
	 
PREHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE foo_n4
PREHOOK: type: SHOW_TABLESTATUS
POSTHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE foo_n4
POSTHOOK: type: SHOW_TABLESTATUS
tableName:foo_n4
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

PREHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE "foo_n4"
PREHOOK: type: SHOW_TABLESTATUS
POSTHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE "foo_n4"
POSTHOOK: type: SHOW_TABLESTATUS
tableName:foo_n4
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

PREHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE 'foo_n4'
PREHOOK: type: SHOW_TABLESTATUS
POSTHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE 'foo_n4'
POSTHOOK: type: SHOW_TABLESTATUS
tableName:foo_n4
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

PREHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE `foo_n4`
PREHOOK: type: SHOW_TABLESTATUS
POSTHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE `foo_n4`
POSTHOOK: type: SHOW_TABLESTATUS
tableName:foo_n4
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

PREHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE 'ba*'
PREHOOK: type: SHOW_TABLESTATUS
POSTHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE 'ba*'
POSTHOOK: type: SHOW_TABLESTATUS
tableName:bar_n0
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

tableName:baz
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

PREHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE "ba*"
PREHOOK: type: SHOW_TABLESTATUS
POSTHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE "ba*"
POSTHOOK: type: SHOW_TABLESTATUS
tableName:bar_n0
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

tableName:baz
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

PREHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE `ba*`
PREHOOK: type: SHOW_TABLESTATUS
POSTHOOK: query: SHOW TABLE EXTENDED IN test_db LIKE `ba*`
POSTHOOK: type: SHOW_TABLESTATUS
tableName:bar_n0
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

tableName:baz
#### A masked pattern was here ####
inputformat:org.apache.hadoop.mapred.TextInputFormat
outputformat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
columns:struct columns { i32 a}
partitioned:false
partitionColumns:
totalNumberFiles:0
totalFileSize:0
maxFileSize:0
minFileSize:0
#### A masked pattern was here ####

PREHOOK: query: CREATE DATABASE `database`
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:database
POSTHOOK: query: CREATE DATABASE `database`
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:database
PREHOOK: query: USE `database`
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:database
POSTHOOK: query: USE `database`
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:database
PREHOOK: query: CREATE TABLE foo_n4(a INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:database
PREHOOK: Output: database@foo_n4
POSTHOOK: query: CREATE TABLE foo_n4(a INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:database
POSTHOOK: Output: database@foo_n4
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: SHOW TABLES FROM `database` LIKE "foo_n4"
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:database
POSTHOOK: query: SHOW TABLES FROM `database` LIKE "foo_n4"
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:database
foo_n4
