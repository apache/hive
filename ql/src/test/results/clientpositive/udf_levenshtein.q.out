PREHOOK: query: DESCRIBE FUNCTION levenshtein
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION levenshtein
POSTHOOK: type: DESCFUNCTION
levenshtein(str1, str2) - This function calculates the Levenshtein distance between two strings.
PREHOOK: query: DESC FUNCTION EXTENDED levenshtein
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESC FUNCTION EXTENDED levenshtein
POSTHOOK: type: DESCFUNCTION
levenshtein(str1, str2) - This function calculates the Levenshtein distance between two strings.
Levenshtein distance is a string metric for measuring the difference between two sequences. Informally, the Levenshtein distance between two words is the minimum number of single-character edits (i.e. insertions, deletions or substitutions) required to change one word into the other. It is named after Vladimir Levenshtein, who considered this distance in 1965.Example:
  > SELECT levenshtein('kitten', 'sitting');
 3
Function class:org.apache.hadoop.hive.ql.udf.generic.GenericUDFLevenshtein
Function type:BUILTIN
PREHOOK: query: explain select levenshtein('Test String1', 'Test String2')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: explain select levenshtein('Test String1', 'Test String2')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: _dummy_table
          Row Limit Per Split: 1
          Statistics: Num rows: 1 Data size: 10 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: 1 (type: int)
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
            ListSink

PREHOOK: query: select
levenshtein('kitten', 'sitting'),
levenshtein('Test String1', 'Test String2'),
levenshtein('Test String1', 'test String2'),
levenshtein('', 'Test String2'),
levenshtein('Test String1', ''),
levenshtein(cast(null as string), 'Test String2'),
levenshtein('Test String1', cast(null as string)),
levenshtein(cast(null as string), cast(null as string))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
levenshtein('kitten', 'sitting'),
levenshtein('Test String1', 'Test String2'),
levenshtein('Test String1', 'test String2'),
levenshtein('', 'Test String2'),
levenshtein('Test String1', ''),
levenshtein(cast(null as string), 'Test String2'),
levenshtein('Test String1', cast(null as string)),
levenshtein(cast(null as string), cast(null as string))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
3	1	2	12	12	NULL	NULL	NULL
