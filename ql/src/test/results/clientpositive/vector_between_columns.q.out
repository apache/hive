PREHOOK: query: create table if not exists TSINT_txt ( RNUM int , CSINT smallint )
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TSINT_txt
POSTHOOK: query: create table if not exists TSINT_txt ( RNUM int , CSINT smallint )
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TSINT_txt
PREHOOK: query: create table if not exists TINT_txt ( RNUM int , CINT int )
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TINT_txt
POSTHOOK: query: create table if not exists TINT_txt ( RNUM int , CINT int )
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TINT_txt
PREHOOK: query: load data local inpath '../../data/files/TSINT' into table TSINT_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tsint_txt
POSTHOOK: query: load data local inpath '../../data/files/TSINT' into table TSINT_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tsint_txt
PREHOOK: query: load data local inpath '../../data/files/TINT' into table TINT_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tint_txt
POSTHOOK: query: load data local inpath '../../data/files/TINT' into table TINT_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tint_txt
PREHOOK: query: create table TSINT stored as orc AS SELECT * FROM TSINT_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tsint_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TSINT
POSTHOOK: query: create table TSINT stored as orc AS SELECT * FROM TSINT_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tsint_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TSINT
POSTHOOK: Lineage: tsint.csint SIMPLE [(tsint_txt)tsint_txt.FieldSchema(name:csint, type:smallint, comment:null), ]
POSTHOOK: Lineage: tsint.rnum SIMPLE [(tsint_txt)tsint_txt.FieldSchema(name:rnum, type:int, comment:null), ]
tsint_txt.rnum	tsint_txt.csint
PREHOOK: query: insert into TSINT values (NULL, NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tsint
POSTHOOK: query: insert into TSINT values (NULL, NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tsint
POSTHOOK: Lineage: tsint.csint EXPRESSION []
POSTHOOK: Lineage: tsint.rnum EXPRESSION []
_col0	_col1
PREHOOK: query: create table TINT stored as orc AS SELECT * FROM TINT_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tint_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TINT
POSTHOOK: query: create table TINT stored as orc AS SELECT * FROM TINT_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tint_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TINT
POSTHOOK: Lineage: tint.cint SIMPLE [(tint_txt)tint_txt.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: tint.rnum SIMPLE [(tint_txt)tint_txt.FieldSchema(name:rnum, type:int, comment:null), ]
tint_txt.rnum	tint_txt.cint
PREHOOK: query: insert into TINT values (NULL, NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tint
POSTHOOK: query: insert into TINT values (NULL, NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tint
POSTHOOK: Lineage: tint.cint EXPRESSION []
POSTHOOK: Lineage: tint.rnum EXPRESSION []
_col0	_col1
Warning: Map Join MAPJOIN[9][bigTable=?] in task 'Stage-3:MAPRED' is a cross product
PREHOOK: query: explain vectorization expression
select tint.rnum, tsint.rnum, tint.cint, tsint.csint, (case when (tint.cint between tsint.csint and tsint.csint) then "Ok" else "NoOk" end) as between_col from tint , tsint
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization expression
select tint.rnum, tsint.rnum, tint.cint, tsint.csint, (case when (tint.cint between tsint.csint and tsint.csint) then "Ok" else "NoOk" end) as between_col from tint , tsint
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_0:tint 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_0:tint 
          TableScan
            alias: tint
            Statistics: Num rows: 6 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: rnum (type: int), cint (type: int)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 6 Data size: 36 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 
                  1 

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: tsint
            Statistics: Num rows: 6 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
            Select Operator
              expressions: rnum (type: int), csint (type: smallint)
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 1]
              Statistics: Num rows: 6 Data size: 36 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                Map Join Vectorization:
                    bigTableValueExpressions: col 0:int, col 1:smallint
                    className: VectorMapJoinOperator
                    native: false
                    nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Optimized Table and Supports Key Types IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 36 Data size: 468 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col2 (type: int), _col1 (type: int), _col3 (type: smallint), CASE WHEN (_col1 BETWEEN UDFToInteger(_col3) AND UDFToInteger(_col3)) THEN ('Ok') ELSE ('NoOk') END (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4
                  Select Vectorization:
                      className: VectorSelectOperator
                      native: true
                      projectedOutputColumnNums: [0, 2, 1, 3, 5]
                      selectExpressions: IfExprStringScalarStringScalar(col 4:boolean, val Ok, val NoOk)(children: VectorUDFAdaptor(_col1 BETWEEN UDFToInteger(_col3) AND UDFToInteger(_col3))(children: col 3:smallint, col 3:smallint) -> 4:boolean) -> 5:string
                  Statistics: Num rows: 36 Data size: 468 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    File Sink Vectorization:
                        className: VectorFileSinkOperator
                        native: false
                    Statistics: Num rows: 36 Data size: 468 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: true
          vectorized: true
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Map Join MAPJOIN[9][bigTable=?] in task 'Stage-3:MAPRED' is a cross product
PREHOOK: query: select tint.rnum, tsint.rnum, tint.cint, tsint.csint, (case when (tint.cint between tsint.csint and tsint.csint) then "Ok" else "NoOk" end) as between_col from tint , tsint
PREHOOK: type: QUERY
PREHOOK: Input: default@tint
PREHOOK: Input: default@tsint
#### A masked pattern was here ####
POSTHOOK: query: select tint.rnum, tsint.rnum, tint.cint, tsint.csint, (case when (tint.cint between tsint.csint and tsint.csint) then "Ok" else "NoOk" end) as between_col from tint , tsint
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tint
POSTHOOK: Input: default@tsint
#### A masked pattern was here ####
tint.rnum	tsint.rnum	tint.cint	tsint.csint	between_col
0	0	NULL	NULL	NoOk
0	1	NULL	-1	NoOk
0	2	NULL	0	NoOk
0	3	NULL	1	NoOk
0	4	NULL	10	NoOk
0	NULL	NULL	NULL	NoOk
1	0	-1	NULL	NoOk
1	1	-1	-1	Ok
1	2	-1	0	NoOk
1	3	-1	1	NoOk
1	4	-1	10	NoOk
1	NULL	-1	NULL	NoOk
2	0	0	NULL	NoOk
2	1	0	-1	NoOk
2	2	0	0	Ok
2	3	0	1	NoOk
2	4	0	10	NoOk
2	NULL	0	NULL	NoOk
3	0	1	NULL	NoOk
3	1	1	-1	NoOk
3	2	1	0	NoOk
3	3	1	1	Ok
3	4	1	10	NoOk
3	NULL	1	NULL	NoOk
4	0	10	NULL	NoOk
4	1	10	-1	NoOk
4	2	10	0	NoOk
4	3	10	1	NoOk
4	4	10	10	Ok
4	NULL	10	NULL	NoOk
NULL	0	NULL	NULL	NoOk
NULL	1	NULL	-1	NoOk
NULL	2	NULL	0	NoOk
NULL	3	NULL	1	NoOk
NULL	4	NULL	10	NoOk
NULL	NULL	NULL	NULL	NoOk
Warning: Map Join MAPJOIN[10][bigTable=?] in task 'Stage-3:MAPRED' is a cross product
PREHOOK: query: explain vectorization expression
select tint.rnum, tsint.rnum, tint.cint, tsint.csint from tint , tsint where tint.cint between tsint.csint and tsint.csint
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization expression
select tint.rnum, tsint.rnum, tint.cint, tsint.csint from tint , tsint where tint.cint between tsint.csint and tsint.csint
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_0:tint 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_0:tint 
          TableScan
            alias: tint
            Statistics: Num rows: 6 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: rnum (type: int), cint (type: int)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 6 Data size: 36 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 
                  1 

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: tsint
            Statistics: Num rows: 6 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
            Select Operator
              expressions: rnum (type: int), csint (type: smallint)
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 1]
              Statistics: Num rows: 6 Data size: 36 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                Map Join Vectorization:
                    bigTableValueExpressions: col 0:int, col 1:smallint
                    className: VectorMapJoinOperator
                    native: false
                    nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Optimized Table and Supports Key Types IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 36 Data size: 468 Basic stats: COMPLETE Column stats: NONE
                Filter Operator
                  Filter Vectorization:
                      className: VectorFilterOperator
                      native: true
                      predicateExpression: SelectColumnIsTrue(col 4:boolean)(children: VectorUDFAdaptor(_col1 BETWEEN UDFToInteger(_col3) AND UDFToInteger(_col3))(children: col 3:smallint, col 3:smallint) -> 4:boolean)
                  predicate: _col1 BETWEEN UDFToInteger(_col3) AND UDFToInteger(_col3) (type: boolean)
                  Statistics: Num rows: 4 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: int), _col2 (type: int), _col1 (type: int), _col3 (type: smallint)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 2, 1, 3]
                    Statistics: Num rows: 4 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 4 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: true
          vectorized: true
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Map Join MAPJOIN[10][bigTable=?] in task 'Stage-3:MAPRED' is a cross product
PREHOOK: query: select tint.rnum, tsint.rnum, tint.cint, tsint.csint from tint , tsint where tint.cint between tsint.csint and tsint.csint
PREHOOK: type: QUERY
PREHOOK: Input: default@tint
PREHOOK: Input: default@tsint
#### A masked pattern was here ####
POSTHOOK: query: select tint.rnum, tsint.rnum, tint.cint, tsint.csint from tint , tsint where tint.cint between tsint.csint and tsint.csint
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tint
POSTHOOK: Input: default@tsint
#### A masked pattern was here ####
tint.rnum	tsint.rnum	tint.cint	tsint.csint
1	1	-1	-1
2	2	0	0
3	3	1	1
4	4	10	10
