PREHOOK: query: CREATE TABLE T1_mm(key STRING, val STRING) PARTITIONED BY (ds string)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE  tblproperties ("transactional"="true", "transactional_properties"="insert_only")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_mm
POSTHOOK: query: CREATE TABLE T1_mm(key STRING, val STRING) PARTITIONED BY (ds string)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE  tblproperties ("transactional"="true", "transactional_properties"="insert_only")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_mm
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_mm  PARTITION (ds='1')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_mm
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_mm  PARTITION (ds='1')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_mm
POSTHOOK: Output: default@t1_mm@ds=1
PREHOOK: query: INSERT OVERWRITE TABLE T1_mm PARTITION (ds='1') select key, val from T1_mm where ds = '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_mm
PREHOOK: Input: default@t1_mm@ds=1
PREHOOK: Output: default@t1_mm@ds=1
POSTHOOK: query: INSERT OVERWRITE TABLE T1_mm PARTITION (ds='1') select key, val from T1_mm where ds = '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_mm
POSTHOOK: Input: default@t1_mm@ds=1
POSTHOOK: Output: default@t1_mm@ds=1
POSTHOOK: Lineage: t1_mm PARTITION(ds=1).key SIMPLE [(t1_mm)t1_mm.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t1_mm PARTITION(ds=1).val SIMPLE [(t1_mm)t1_mm.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: select * from T1_mm
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_mm
PREHOOK: Input: default@t1_mm@ds=1
#### A masked pattern was here ####
POSTHOOK: query: select * from T1_mm
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_mm
POSTHOOK: Input: default@t1_mm@ds=1
#### A masked pattern was here ####
1	11	1
2	12	1
3	13	1
7	17	1
8	18	1
8	28	1
PREHOOK: query: explain
select count(distinct key) from T1_mm
PREHOOK: type: QUERY
POSTHOOK: query: explain
select count(distinct key) from T1_mm
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1_mm
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: key
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                keys: key (type: string)
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: string)
          mode: partial2
          outputColumnNames: _col0
          Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: count(_col0)
            mode: partial2
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(distinct key) from T1_mm
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_mm
PREHOOK: Input: default@t1_mm@ds=1
#### A masked pattern was here ####
POSTHOOK: query: select count(distinct key) from T1_mm
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_mm
POSTHOOK: Input: default@t1_mm@ds=1
#### A masked pattern was here ####
5
PREHOOK: query: DROP TABLE T1_mm
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t1_mm
PREHOOK: Output: default@t1_mm
POSTHOOK: query: DROP TABLE T1_mm
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t1_mm
POSTHOOK: Output: default@t1_mm
