PREHOOK: query: create table vectortab_a_1k(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab_a_1k
POSTHOOK: query: create table vectortab_a_1k(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab_a_1k
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab_a_1k' OVERWRITE INTO TABLE vectortab_a_1k
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@vectortab_a_1k
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab_a_1k' OVERWRITE INTO TABLE vectortab_a_1k
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@vectortab_a_1k
PREHOOK: query: CREATE TABLE vectortab_a_1korc STORED AS ORC AS SELECT * FROM vectortab_a_1k
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@vectortab_a_1k
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab_a_1korc
POSTHOOK: query: CREATE TABLE vectortab_a_1korc STORED AS ORC AS SELECT * FROM vectortab_a_1k
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@vectortab_a_1k
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab_a_1korc
POSTHOOK: Lineage: vectortab_a_1korc.b SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.bo SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.d SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:d, type:double, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.dc SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:dc, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.dt SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:dt, type:date, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.f SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:f, type:float, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.i SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.s SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:s, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.s2 SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:s2, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.si SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.t SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.ts SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:ts, type:timestamp, comment:null), ]
POSTHOOK: Lineage: vectortab_a_1korc.ts2 SIMPLE [(vectortab_a_1k)vectortab_a_1k.FieldSchema(name:ts2, type:timestamp, comment:null), ]
PREHOOK: query: create table vectortab_b_1k(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab_b_1k
POSTHOOK: query: create table vectortab_b_1k(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab_b_1k
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab_b_1k' OVERWRITE INTO TABLE vectortab_b_1k
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@vectortab_b_1k
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab_b_1k' OVERWRITE INTO TABLE vectortab_b_1k
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@vectortab_b_1k
PREHOOK: query: CREATE TABLE vectortab_b_1korc STORED AS ORC AS SELECT * FROM vectortab_b_1k
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@vectortab_b_1k
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab_b_1korc
POSTHOOK: query: CREATE TABLE vectortab_b_1korc STORED AS ORC AS SELECT * FROM vectortab_b_1k
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@vectortab_b_1k
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab_b_1korc
POSTHOOK: Lineage: vectortab_b_1korc.b SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.bo SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.d SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:d, type:double, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.dc SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:dc, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.dt SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:dt, type:date, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.f SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:f, type:float, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.i SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.s SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:s, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.s2 SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:s2, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.si SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.t SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.ts SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:ts, type:timestamp, comment:null), ]
POSTHOOK: Lineage: vectortab_b_1korc.ts2 SIMPLE [(vectortab_b_1k)vectortab_b_1k.FieldSchema(name:ts2, type:timestamp, comment:null), ]
PREHOOK: query: explain vectorization expression
select
   v1.s,
   v2.s,
   v1.intrvl1 
from
   ( select
      s,
      (cast(dt as date) - cast(ts as date)) as intrvl1 
   from
      vectortab_a_1korc ) v1 
join
   (
      select
         s ,
         (cast(dt as date) - cast(ts as date)) as intrvl2 
      from
         vectortab_b_1korc 
   ) v2 
      on v1.intrvl1 = v2.intrvl2 
      and v1.s = v2.s
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization expression
select
   v1.s,
   v2.s,
   v1.intrvl1 
from
   ( select
      s,
      (cast(dt as date) - cast(ts as date)) as intrvl1 
   from
      vectortab_a_1korc ) v1 
join
   (
      select
         s ,
         (cast(dt as date) - cast(ts as date)) as intrvl2 
      from
         vectortab_b_1korc 
   ) v2 
      on v1.intrvl1 = v2.intrvl2 
      and v1.s = v2.s
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_1:vectortab_b_1korc 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_1:vectortab_b_1korc 
          TableScan
            alias: vectortab_b_1korc
            Statistics: Num rows: 1000 Data size: 458448 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (dt is not null and s is not null and ts is not null) (type: boolean)
              Statistics: Num rows: 1000 Data size: 458448 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: s (type: string), (dt - CAST( ts AS DATE)) (type: interval_day_time)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1000 Data size: 458448 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: string), _col1 (type: interval_day_time)
                    1 _col0 (type: string), _col1 (type: interval_day_time)

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: vectortab_a_1korc
            Statistics: Num rows: 1000 Data size: 460264 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
            Filter Operator
              Filter Vectorization:
                  className: VectorFilterOperator
                  native: true
                  predicateExpression: FilterExprAndExpr(children: SelectColumnIsNotNull(col 12:date), SelectColumnIsNotNull(col 10:timestamp), SelectColumnIsNotNull(col 8:string))
              predicate: (dt is not null and s is not null and ts is not null) (type: boolean)
              Statistics: Num rows: 1000 Data size: 460264 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: s (type: string), (dt - CAST( ts AS DATE)) (type: interval_day_time)
                outputColumnNames: _col0, _col1
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [8, 15]
                    selectExpressions: DateColSubtractDateColumn(col 12:date, col 14:date)(children: CastTimestampToDate(col 10:timestamp) -> 14:date) -> 15:interval_day_time
                Statistics: Num rows: 1000 Data size: 460264 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: string), _col1 (type: interval_day_time)
                    1 _col0 (type: string), _col1 (type: interval_day_time)
                  Map Join Vectorization:
                      bigTableKeyExpressions: col 8:string, col 15:interval_day_time
                      bigTableValueExpressions: col 8:string, col 15:interval_day_time
                      className: VectorMapJoinOperator
                      native: false
                      nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Optimized Table and Supports Key Types IS true
                      nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1100 Data size: 506290 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: string), _col2 (type: string), _col1 (type: interval_day_time)
                    outputColumnNames: _col0, _col1, _col2
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 2, 1]
                    Statistics: Num rows: 1100 Data size: 506290 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 1100 Data size: 506290 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select
   v1.s,
   v2.s,
   v1.intrvl1 
from
   ( select
      s,
      (cast(dt as date) - cast(ts as date)) as intrvl1 
   from
      vectortab_a_1korc ) v1 
join
   (
      select
         s ,
         (cast(dt as date) - cast(ts as date)) as intrvl2 
      from
         vectortab_b_1korc 
   ) v2 
      on v1.intrvl1 = v2.intrvl2 
      and v1.s = v2.s
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab_a_1korc
PREHOOK: Input: default@vectortab_b_1korc
#### A masked pattern was here ####
POSTHOOK: query: select
   v1.s,
   v2.s,
   v1.intrvl1 
from
   ( select
      s,
      (cast(dt as date) - cast(ts as date)) as intrvl1 
   from
      vectortab_a_1korc ) v1 
join
   (
      select
         s ,
         (cast(dt as date) - cast(ts as date)) as intrvl2 
      from
         vectortab_b_1korc 
   ) v2 
      on v1.intrvl1 = v2.intrvl2 
      and v1.s = v2.s
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab_a_1korc
POSTHOOK: Input: default@vectortab_b_1korc
#### A masked pattern was here ####
