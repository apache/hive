PREHOOK: query: DROP TABLE orcfile_merge2a_n0
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE orcfile_merge2a_n0
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE orcfile_merge2a_n0 (key INT, value STRING)
    PARTITIONED BY (one string, two string, three string)
    STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@orcfile_merge2a_n0
POSTHOOK: query: CREATE TABLE orcfile_merge2a_n0 (key INT, value STRING)
    PARTITIONED BY (one string, two string, three string)
    STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orcfile_merge2a_n0
PREHOOK: query: EXPLAIN INSERT OVERWRITE TABLE orcfile_merge2a_n0 PARTITION (one='1', two, three)
    SELECT key, value, PMOD(HASH(key), 10) as two, 
        PMOD(HASH(value), 10) as three
    FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@orcfile_merge2a_n0@one=1
POSTHOOK: query: EXPLAIN INSERT OVERWRITE TABLE orcfile_merge2a_n0 PARTITION (one='1', two, three)
    SELECT key, value, PMOD(HASH(key), 10) as two, 
        PMOD(HASH(value), 10) as three
    FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1 , consists of Stage-4, Stage-3, Stage-5
  Stage-4
  Stage-0 depends on stages: Stage-4, Stage-3, Stage-6
  Stage-2 depends on stages: Stage-0
  Stage-3
  Stage-5
  Stage-6 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToInteger(key) (type: int), value (type: string), (hash(key) pmod 10) (type: int), (hash(value) pmod 10) (type: int)
              outputColumnNames: _col0, _col1, _col2, _col3
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                    output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                    serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    name: default.orcfile_merge2a_n0
              Select Operator
                expressions: _col0 (type: int), _col1 (type: string), '1' (type: string), CAST( _col2 AS STRING) (type: string), CAST( _col3 AS STRING) (type: string)
                outputColumnNames: key, value, one, two, three
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(key, 'hll'), compute_stats(value, 'hll')
                  keys: one (type: string), two (type: string), three (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                    sort order: +++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                    Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col3 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>), _col4 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3, _col4
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col3 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col4 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col0 (type: string), _col1 (type: string), _col2 (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-4
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            one 1
            three 
            two 
          replace: true
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.orcfile_merge2a_n0

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.orcfile_merge2a_n0

  Stage: Stage-3
    Merge File Operator
      Map Operator Tree:
          ORC File Merge Operator
      merge level: stripe
      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat

  Stage: Stage-5
    Merge File Operator
      Map Operator Tree:
          ORC File Merge Operator
      merge level: stripe
      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat

  Stage: Stage-6
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE orcfile_merge2a_n0 PARTITION (one='1', two, three)
    SELECT key, value, PMOD(HASH(key), 10) as two, 
        PMOD(HASH(value), 10) as three
    FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@orcfile_merge2a_n0@one=1
POSTHOOK: query: INSERT OVERWRITE TABLE orcfile_merge2a_n0 PARTITION (one='1', two, three)
    SELECT key, value, PMOD(HASH(key), 10) as two, 
        PMOD(HASH(value), 10) as three
    FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=0/three=2
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=0/three=8
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=1/three=3
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=1/three=9
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=2/three=0
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=2/three=4
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=3/three=1
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=3/three=5
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=4/three=2
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=4/three=6
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=5/three=3
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=5/three=7
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=6/three=4
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=6/three=8
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=7/three=5
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=7/three=9
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=8/three=0
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=8/three=6
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=9/three=1
POSTHOOK: Output: default@orcfile_merge2a_n0@one=1/two=9/three=7
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=0,three=2).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=0,three=2).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=0,three=8).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=0,three=8).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=1,three=3).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=1,three=3).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=1,three=9).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=1,three=9).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=2,three=0).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=2,three=0).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=2,three=4).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=2,three=4).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=3,three=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=3,three=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=3,three=5).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=3,three=5).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=4,three=2).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=4,three=2).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=4,three=6).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=4,three=6).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=5,three=3).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=5,three=3).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=5,three=7).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=5,three=7).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=6,three=4).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=6,three=4).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=6,three=8).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=6,three=8).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=7,three=5).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=7,three=5).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=7,three=9).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=7,three=9).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=8,three=0).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=8,three=0).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=8,three=6).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=8,three=6).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=9,three=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=9,three=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=9,three=7).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge2a_n0 PARTITION(one=1,two=9,three=7).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
Found 1 items
#### A masked pattern was here ####
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c)
    FROM orcfile_merge2a_n0
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@orcfile_merge2a_n0
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=0/three=2
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=0/three=8
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=1/three=3
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=1/three=9
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=2/three=0
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=2/three=4
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=3/three=1
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=3/three=5
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=4/three=2
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=4/three=6
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=5/three=3
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=5/three=7
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=6/three=4
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=6/three=8
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=7/three=5
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=7/three=9
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=8/three=0
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=8/three=6
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=9/three=1
PREHOOK: Input: default@orcfile_merge2a_n0@one=1/two=9/three=7
#### A masked pattern was here ####
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(*) USING 'tr \t _' AS (c)
    FROM orcfile_merge2a_n0
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcfile_merge2a_n0
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=0/three=2
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=0/three=8
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=1/three=3
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=1/three=9
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=2/three=0
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=2/three=4
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=3/three=1
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=3/three=5
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=4/three=2
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=4/three=6
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=5/three=3
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=5/three=7
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=6/three=4
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=6/three=8
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=7/three=5
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=7/three=9
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=8/three=0
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=8/three=6
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=9/three=1
POSTHOOK: Input: default@orcfile_merge2a_n0@one=1/two=9/three=7
#### A masked pattern was here ####
-4209012844
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value, '1', PMOD(HASH(key), 10), 
        PMOD(HASH(value), 10)) USING 'tr \t _' AS (c)
    FROM src
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value, '1', PMOD(HASH(key), 10), 
        PMOD(HASH(value), 10)) USING 'tr \t _' AS (c)
    FROM src
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
-4209012844
PREHOOK: query: DROP TABLE orcfile_merge2a_n0
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@orcfile_merge2a_n0
PREHOOK: Output: default@orcfile_merge2a_n0
POSTHOOK: query: DROP TABLE orcfile_merge2a_n0
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@orcfile_merge2a_n0
POSTHOOK: Output: default@orcfile_merge2a_n0
