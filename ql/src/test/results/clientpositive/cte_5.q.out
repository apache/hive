PREHOOK: query: create database mydb
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:mydb
POSTHOOK: query: create database mydb
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:mydb
PREHOOK: query: use mydb
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:mydb
POSTHOOK: query: use mydb
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:mydb
PREHOOK: query: create table q1 (colnum int, colstring string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:mydb
PREHOOK: Output: mydb@q1
POSTHOOK: query: create table q1 (colnum int, colstring string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:mydb
POSTHOOK: Output: mydb@q1
PREHOOK: query: insert into q1 values (5, 'A')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: mydb@q1
POSTHOOK: query: insert into q1 values (5, 'A')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: mydb@q1
POSTHOOK: Lineage: q1.colnum SCRIPT []
POSTHOOK: Lineage: q1.colstring SCRIPT []
PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: show tables in mydb
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:mydb
POSTHOOK: query: show tables in mydb
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:mydb
q1
PREHOOK: query: show tables
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: show tables
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
alltypesorc
alltypesparquet
cbo_t1
cbo_t2
cbo_t3
lineitem
part
src
src1
src_cbo
src_json
src_sequencefile
src_thrift
srcbucket
srcbucket2
srcpart
Warning: Shuffle Join JOIN[8][tables = [$hdt$_0, $hdt$_1]] in Stage 'Stage-1:MAPRED' is a cross product
PREHOOK: query: explain
with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (UDFToDouble(colnum) = 5.0D) (type: boolean)
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = '5') (type: boolean)
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 
            1 
          Statistics: Num rows: 250 Data size: 3656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: 5 (type: int)
            outputColumnNames: _col0
            Statistics: Num rows: 250 Data size: 3656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 250 Data size: 3656 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join JOIN[8][tables = [$hdt$_0, $hdt$_1]] in Stage 'Stage-1:MAPRED' is a cross product
PREHOOK: query: with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: mydb@q1
#### A masked pattern was here ####
POSTHOOK: query: with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: mydb@q1
#### A masked pattern was here ####
5
5
5
