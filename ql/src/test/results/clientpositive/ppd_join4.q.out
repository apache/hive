PREHOOK: query: create table dual(a string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dual
POSTHOOK: query: create table dual(a string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dual
PREHOOK: query: drop table if exists test_tbl
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists test_tbl
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table test_tbl (id string,name string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_tbl
POSTHOOK: query: create table test_tbl (id string,name string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_tbl
PREHOOK: query: insert into table test_tbl
select 'a','b' from dual
PREHOOK: type: QUERY
PREHOOK: Input: default@dual
PREHOOK: Output: default@test_tbl
POSTHOOK: query: insert into table test_tbl
select 'a','b' from dual
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dual
POSTHOOK: Output: default@test_tbl
POSTHOOK: Lineage: test_tbl.id SIMPLE []
POSTHOOK: Lineage: test_tbl.name SIMPLE []
PREHOOK: query: explain
select t2.* 
from
(select id,name from (select id,name from test_tbl) t1 sort by id) t2
join test_tbl t3 on (t2.id=t3.id )
where t2.name='c' and t3.id='a'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select t2.* 
from
(select id,name from (select id,name from test_tbl) t1 sort by id) t2
join test_tbl t3 on (t2.id=t3.id )
where t2.name='c' and t3.id='a'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: test_tbl
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: ((name = 'c') and (id = 'a')) (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                Reduce Output Operator
                  key expressions: 'a' (type: string)
                  sort order: +
                  Map-reduce partition columns: 'a' (type: string)
                  Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          TableScan
            alias: t3
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Filter Operator
              predicate: (id = 'a') (type: boolean)
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Reduce Output Operator
                key expressions: 'a' (type: string)
                sort order: +
                Map-reduce partition columns: 'a' (type: string)
                Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: string)
            1 id (type: string)
          Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
          Select Operator
            expressions: 'a' (type: string), 'c' (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select t2.* 
from
(select id,name from (select id,name from test_tbl) t1 sort by id) t2
join test_tbl t3 on (t2.id=t3.id )
where t2.name='c' and t3.id='a'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_tbl
#### A masked pattern was here ####
POSTHOOK: query: select t2.* 
from
(select id,name from (select id,name from test_tbl) t1 sort by id) t2
join test_tbl t3 on (t2.id=t3.id )
where t2.name='c' and t3.id='a'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_tbl
#### A masked pattern was here ####
