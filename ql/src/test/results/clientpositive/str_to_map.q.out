PREHOOK: query: desc function str_to_map
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: desc function str_to_map
POSTHOOK: type: DESCFUNCTION
str_to_map(text, delimiter1, delimiter2) - Creates a map by parsing text 
PREHOOK: query: desc function extended str_to_map
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: desc function extended str_to_map
POSTHOOK: type: DESCFUNCTION
str_to_map(text, delimiter1, delimiter2) - Creates a map by parsing text 
Split text into key-value pairs using two delimiters. The first delimiter separates pairs, and the second delimiter sperates key and value. If only one parameter is given, default delimiters are used: ',' as delimiter1 and ':' as delimiter2.
Function class:org.apache.hadoop.hive.ql.udf.generic.GenericUDFStringToMap
Function type:BUILTIN
PREHOOK: query: explain select str_to_map('a=1,b=2,c=3',',','=')['a'] from src limit 3
PREHOOK: type: QUERY
POSTHOOK: query: explain select str_to_map('a=1,b=2,c=3',',','=')['a'] from src limit 3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        TableScan
          alias: src
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: str_to_map('a=1,b=2,c=3',',','=')['a'] (type: string)
            outputColumnNames: _col0
            Statistics: Num rows: 500 Data size: 42500 Basic stats: COMPLETE Column stats: COMPLETE
            Limit
              Number of rows: 3
              Statistics: Num rows: 3 Data size: 255 Basic stats: COMPLETE Column stats: COMPLETE
              ListSink

PREHOOK: query: select str_to_map('a=1,b=2,c=3',',','=')['a'] from src limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select str_to_map('a=1,b=2,c=3',',','=')['a'] from src limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
1
1
1
PREHOOK: query: explain select str_to_map('a:1,b:2,c:3') from src limit 3
PREHOOK: type: QUERY
POSTHOOK: query: explain select str_to_map('a:1,b:2,c:3') from src limit 3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        TableScan
          alias: src
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: str_to_map('a:1,b:2,c:3') (type: map<string,string>)
            outputColumnNames: _col0
            Statistics: Num rows: 500 Data size: 377000 Basic stats: COMPLETE Column stats: COMPLETE
            Limit
              Number of rows: 3
              Statistics: Num rows: 3 Data size: 2262 Basic stats: COMPLETE Column stats: COMPLETE
              ListSink

PREHOOK: query: select str_to_map('a:1,b:2,c:3') from src limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select str_to_map('a:1,b:2,c:3') from src limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
{"a":"1","b":"2","c":"3"}
{"a":"1","b":"2","c":"3"}
{"a":"1","b":"2","c":"3"}
PREHOOK: query: explain select str_to_map('a:1,b:2,c:3',',',':') from src limit 3
PREHOOK: type: QUERY
POSTHOOK: query: explain select str_to_map('a:1,b:2,c:3',',',':') from src limit 3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        TableScan
          alias: src
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: str_to_map('a:1,b:2,c:3',',',':') (type: map<string,string>)
            outputColumnNames: _col0
            Statistics: Num rows: 500 Data size: 377000 Basic stats: COMPLETE Column stats: COMPLETE
            Limit
              Number of rows: 3
              Statistics: Num rows: 3 Data size: 2262 Basic stats: COMPLETE Column stats: COMPLETE
              ListSink

PREHOOK: query: select str_to_map('a:1,b:2,c:3',',',':') from src limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select str_to_map('a:1,b:2,c:3',',',':') from src limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
{"a":"1","b":"2","c":"3"}
{"a":"1","b":"2","c":"3"}
{"a":"1","b":"2","c":"3"}
PREHOOK: query: explain select str_to_map(t.ss,',',':')['a']
from (select transform('a:1,b:2,c:3') using 'cat' as (ss) from src) t
limit 3
PREHOOK: type: QUERY
POSTHOOK: query: explain select str_to_map(t.ss,',',':')['a']
from (select transform('a:1,b:2,c:3') using 'cat' as (ss) from src) t
limit 3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
            Select Operator
              expressions: 'a:1,b:2,c:3' (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
              Transform Operator
                command: cat
                output info:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: str_to_map(_col0,',',':')['a'] (type: string)
                  outputColumnNames: _col0
                  Statistics: Num rows: 500 Data size: 92000 Basic stats: COMPLETE Column stats: COMPLETE
                  Limit
                    Number of rows: 3
                    Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: select str_to_map(t.ss,',',':')['a']
from (select transform('a:1,b:2,c:3') using 'cat' as (ss) from src) t
limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select str_to_map(t.ss,',',':')['a']
from (select transform('a:1,b:2,c:3') using 'cat' as (ss) from src) t
limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
1
1
1
PREHOOK: query: drop table tbl_s2m
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table tbl_s2m
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table tbl_s2m as select 'ABC=CC_333=444' as t from src tablesample (3 rows)
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_s2m
POSTHOOK: query: create table tbl_s2m as select 'ABC=CC_333=444' as t from src tablesample (3 rows)
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_s2m
POSTHOOK: Lineage: tbl_s2m.t SIMPLE []
PREHOOK: query: select str_to_map(t,'_','=')['333'] from tbl_s2m
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_s2m
#### A masked pattern was here ####
POSTHOOK: query: select str_to_map(t,'_','=')['333'] from tbl_s2m
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_s2m
#### A masked pattern was here ####
444
444
444
PREHOOK: query: drop table tbl_s2m
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tbl_s2m
PREHOOK: Output: default@tbl_s2m
POSTHOOK: query: drop table tbl_s2m
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tbl_s2m
POSTHOOK: Output: default@tbl_s2m
