PREHOOK: query: drop table if exists foo
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists foo
POSTHOOK: type: DROPTABLE
PREHOOK: query: create temporary table foo (x int, y int) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@foo
POSTHOOK: query: create temporary table foo (x int, y int) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@foo
PREHOOK: query: insert into foo values(1,1),(2,NULL),(3,1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@foo
POSTHOOK: query: insert into foo values(1,1),(2,NULL),(3,1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@foo
POSTHOOK: Lineage: foo.x SCRIPT []
POSTHOOK: Lineage: foo.y SCRIPT []
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
select x, IF(x > 0,y,0) from foo order by x
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
select x, IF(x > 0,y,0) from foo order by x
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: foo
            Statistics: Num rows: 3 Data size: 20 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
            Select Operator
              expressions: x (type: int), if((x > 0), y, 0) (type: int)
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 4]
                  selectExpressions: IfExprLongColumnLongScalar(col 3:boolean, col 1:int, val 0)(children: LongColGreaterLongScalar(col 0:int, val 0) -> 3:boolean) -> 4:int
              Statistics: Num rows: 3 Data size: 20 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: int)
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 3 Data size: 20 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: int)
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: int)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 3 Data size: 20 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 3 Data size: 20 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select x, IF(x > 0,y,0) from foo order by x
PREHOOK: type: QUERY
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: select x, IF(x > 0,y,0) from foo order by x
POSTHOOK: type: QUERY
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
1	1
2	NULL
3	1
PREHOOK: query: select x, IF(x > 0,y,0) from foo order by x
PREHOOK: type: QUERY
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: select x, IF(x > 0,y,0) from foo order by x
POSTHOOK: type: QUERY
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
1	1
2	NULL
3	1
