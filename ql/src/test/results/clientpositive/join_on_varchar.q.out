PREHOOK: query: create table tbl1(c1 varchar(10), intcol int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl1
POSTHOOK: query: create table tbl1(c1 varchar(10), intcol int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl1
PREHOOK: query: create table tbl2(c2 varchar(30))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl2
POSTHOOK: query: create table tbl2(c2 varchar(30))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl2
PREHOOK: query: insert into table tbl1 select repeat('t', 10), 11 from src limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tbl1
POSTHOOK: query: insert into table tbl1 select repeat('t', 10), 11 from src limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tbl1
POSTHOOK: Lineage: tbl1.c1 EXPRESSION []
POSTHOOK: Lineage: tbl1.intcol SIMPLE []
PREHOOK: query: insert into table tbl1 select repeat('s', 10), 22 from src limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tbl1
POSTHOOK: query: insert into table tbl1 select repeat('s', 10), 22 from src limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tbl1
POSTHOOK: Lineage: tbl1.c1 EXPRESSION []
POSTHOOK: Lineage: tbl1.intcol SIMPLE []
PREHOOK: query: insert into table tbl2 select concat(repeat('t', 10), 'ppp') from src limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tbl2
POSTHOOK: query: insert into table tbl2 select concat(repeat('t', 10), 'ppp') from src limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tbl2
POSTHOOK: Lineage: tbl2.c2 EXPRESSION []
PREHOOK: query: insert into table tbl2 select repeat('s', 10) from src limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tbl2
POSTHOOK: query: insert into table tbl2 select repeat('s', 10) from src limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tbl2
POSTHOOK: Lineage: tbl2.c2 EXPRESSION []
PREHOOK: query: explain
select /*+ MAPJOIN(tbl2) */ c1,c2 from tbl1 join tbl2 on (c1 = c2) order by c1,c2
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+ MAPJOIN(tbl2) */ c1,c2 from tbl1 join tbl2 on (c1 = c2) order by c1,c2
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-2 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_1:tbl2 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_1:tbl2 
          TableScan
            alias: tbl2
            Statistics: Num rows: 2 Data size: 23 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: c2 is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 23 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: c2 (type: varchar(30))
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 23 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: varchar(30))
                    1 _col0 (type: varchar(30))

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: tbl1
            Statistics: Num rows: 2 Data size: 26 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: c1 is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 26 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: c1 (type: varchar(10))
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: varchar(30))
                    1 _col0 (type: varchar(30))
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 28 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: varchar(10)), _col1 (type: varchar(30))
                    sort order: ++
                    Statistics: Num rows: 2 Data size: 28 Basic stats: COMPLETE Column stats: NONE
      Local Work:
        Map Reduce Local Work
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: varchar(10)), KEY.reducesinkkey1 (type: varchar(30))
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 2 Data size: 28 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 2 Data size: 28 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+ MAPJOIN(tbl2) */ c1,c2 from tbl1 join tbl2 on (c1 = c2) order by c1,c2
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl1
PREHOOK: Input: default@tbl2
#### A masked pattern was here ####
POSTHOOK: query: select /*+ MAPJOIN(tbl2) */ c1,c2 from tbl1 join tbl2 on (c1 = c2) order by c1,c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl1
POSTHOOK: Input: default@tbl2
#### A masked pattern was here ####
ssssssssss	ssssssssss
