PREHOOK: query: DROP TABLE parquet_create_staging
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE parquet_create_staging
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE parquet_create
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE parquet_create
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE parquet_create_staging (
    id int,
    str string,
    mp  MAP<STRING,STRING>,
    lst ARRAY<STRING>,
    strct STRUCT<A:STRING,B:STRING>
) ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
COLLECTION ITEMS TERMINATED BY ','
MAP KEYS TERMINATED BY ':'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@parquet_create_staging
POSTHOOK: query: CREATE TABLE parquet_create_staging (
    id int,
    str string,
    mp  MAP<STRING,STRING>,
    lst ARRAY<STRING>,
    strct STRUCT<A:STRING,B:STRING>
) ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
COLLECTION ITEMS TERMINATED BY ','
MAP KEYS TERMINATED BY ':'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@parquet_create_staging
PREHOOK: query: CREATE TABLE parquet_create (
    id int,
    str string,
    mp  MAP<STRING,STRING>,
    lst ARRAY<STRING>,
    strct STRUCT<A:STRING,B:STRING>
) STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@parquet_create
POSTHOOK: query: CREATE TABLE parquet_create (
    id int,
    str string,
    mp  MAP<STRING,STRING>,
    lst ARRAY<STRING>,
    strct STRUCT<A:STRING,B:STRING>
) STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@parquet_create
PREHOOK: query: DESCRIBE FORMATTED parquet_create
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@parquet_create
POSTHOOK: query: DESCRIBE FORMATTED parquet_create
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@parquet_create
# col_name            	data_type           	comment             
	 	 
id                  	int                 	                    
str                 	string              	                    
mp                  	map<string,string>  	                    
lst                 	array<string>       	                    
strct               	struct<A:string,B:string>	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"id\":\"true\",\"lst\":\"true\",\"mp\":\"true\",\"str\":\"true\",\"strct\":\"true\"}}
	numFiles            	0                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	0                   
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe	 
InputFormat:        	org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/parquet_create.txt' OVERWRITE INTO TABLE parquet_create_staging
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@parquet_create_staging
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/parquet_create.txt' OVERWRITE INTO TABLE parquet_create_staging
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@parquet_create_staging
PREHOOK: query: SELECT * FROM parquet_create_staging
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_create_staging
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM parquet_create_staging
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_create_staging
#### A masked pattern was here ####
1	foo line1	{"key11":"value11","key12":"value12","key13":"value13"}	["a","b","c"]	{"a":"one","b":"two"}
2	bar line2	{"key21":"value21","key22":"value22","key23":"value23"}	["d","e","f"]	{"a":"three","b":"four"}
3	baz line3	{"key31":"value31","key32":"value32","key33":"value33"}	["g","h","i"]	{"a":"five","b":"six"}
PREHOOK: query: INSERT OVERWRITE TABLE parquet_create SELECT * FROM parquet_create_staging
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_create_staging
PREHOOK: Output: default@parquet_create
POSTHOOK: query: INSERT OVERWRITE TABLE parquet_create SELECT * FROM parquet_create_staging
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_create_staging
POSTHOOK: Output: default@parquet_create
POSTHOOK: Lineage: parquet_create.id SIMPLE [(parquet_create_staging)parquet_create_staging.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: parquet_create.lst SIMPLE [(parquet_create_staging)parquet_create_staging.FieldSchema(name:lst, type:array<string>, comment:null), ]
POSTHOOK: Lineage: parquet_create.mp SIMPLE [(parquet_create_staging)parquet_create_staging.FieldSchema(name:mp, type:map<string,string>, comment:null), ]
POSTHOOK: Lineage: parquet_create.str SIMPLE [(parquet_create_staging)parquet_create_staging.FieldSchema(name:str, type:string, comment:null), ]
POSTHOOK: Lineage: parquet_create.strct SIMPLE [(parquet_create_staging)parquet_create_staging.FieldSchema(name:strct, type:struct<A:string,B:string>, comment:null), ]
PREHOOK: query: SELECT id, count(0) FROM parquet_create group by id
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_create
#### A masked pattern was here ####
POSTHOOK: query: SELECT id, count(0) FROM parquet_create group by id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_create
#### A masked pattern was here ####
1	1
2	1
3	1
PREHOOK: query: SELECT str from parquet_create
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_create
#### A masked pattern was here ####
POSTHOOK: query: SELECT str from parquet_create
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_create
#### A masked pattern was here ####
foo line1
bar line2
baz line3
PREHOOK: query: SELECT mp from parquet_create
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_create
#### A masked pattern was here ####
POSTHOOK: query: SELECT mp from parquet_create
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_create
#### A masked pattern was here ####
{"key11":"value11","key12":"value12","key13":"value13"}
{"key21":"value21","key22":"value22","key23":"value23"}
{"key31":"value31","key32":"value32","key33":"value33"}
PREHOOK: query: SELECT lst from parquet_create
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_create
#### A masked pattern was here ####
POSTHOOK: query: SELECT lst from parquet_create
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_create
#### A masked pattern was here ####
["a","b","c"]
["d","e","f"]
["g","h","i"]
PREHOOK: query: SELECT strct from parquet_create
PREHOOK: type: QUERY
PREHOOK: Input: default@parquet_create
#### A masked pattern was here ####
POSTHOOK: query: SELECT strct from parquet_create
POSTHOOK: type: QUERY
POSTHOOK: Input: default@parquet_create
#### A masked pattern was here ####
{"A":"one","B":"two"}
{"A":"three","B":"four"}
{"A":"five","B":"six"}
