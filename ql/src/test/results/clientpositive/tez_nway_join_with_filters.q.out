PREHOOK: query: create temporary table foo (id int, code int) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@foo
POSTHOOK: query: create temporary table foo (id int, code int) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@foo
PREHOOK: query: create temporary table bar (id int, code int) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bar
POSTHOOK: query: create temporary table bar (id int, code int) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bar
PREHOOK: query: create temporary table baz (id int) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@baz
POSTHOOK: query: create temporary table baz (id int) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@baz
PREHOOK: query: insert into foo values(1, 1),(2, 2),(3, 3),(4, 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@foo
POSTHOOK: query: insert into foo values(1, 1),(2, 2),(3, 3),(4, 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@foo
POSTHOOK: Lineage: foo.code SCRIPT []
POSTHOOK: Lineage: foo.id SCRIPT []
PREHOOK: query: insert into bar values(2, 2),(4, 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@bar
POSTHOOK: query: insert into bar values(2, 2),(4, 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@bar
POSTHOOK: Lineage: bar.code SCRIPT []
POSTHOOK: Lineage: bar.id SCRIPT []
PREHOOK: query: insert into baz values(2),(4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@baz
POSTHOOK: query: insert into baz values(2),(4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@baz
POSTHOOK: Lineage: baz.id SCRIPT []
PREHOOK: query: explain select count(*) from foo a left outer join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
PREHOOK: type: QUERY
PREHOOK: Input: default@bar
PREHOOK: Input: default@baz
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: explain select count(*) from foo a left outer join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bar
POSTHOOK: Input: default@baz
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-6 is a root stage
  Stage-2 depends on stages: Stage-6
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-6
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_1:b 
          Fetch Operator
            limit: -1
        $hdt$_2:c 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_1:b 
          TableScan
            alias: b
            filterExpr: id is not null (type: boolean)
            Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  filter predicates:
                    0 {_col1}
                    1 
                    2 
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                    2 _col0 (type: int)
        $hdt$_2:c 
          TableScan
            alias: c
            filterExpr: id is not null (type: boolean)
            Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  filter predicates:
                    0 {_col1}
                    1 
                    2 
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                    2 _col0 (type: int)

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: id (type: int), (code) IN (2, 4) (type: boolean)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Left Outer Join 0 to 1
                     Left Outer Join 0 to 2
                filter predicates:
                  0 {_col1}
                  1 
                  2 
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                Statistics: Num rows: 8 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count()
                  minReductionHashAggr: 0.99
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain select count(*) from foo a left outer join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
PREHOOK: type: QUERY
PREHOOK: Input: default@bar
PREHOOK: Input: default@baz
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: explain select count(*) from foo a left outer join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bar
POSTHOOK: Input: default@baz
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-8 is a root stage
  Stage-3 depends on stages: Stage-8
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-8
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_1:b 
          Fetch Operator
            limit: -1
        $hdt$_2:c 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_1:b 
          TableScan
            alias: b
            filterExpr: id is not null (type: boolean)
            Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  filter predicates:
                    0 {_col1}
                    1 
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
        $hdt$_2:c 
          TableScan
            alias: c
            filterExpr: id is not null (type: boolean)
            Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: id (type: int), (code) IN (2, 4) (type: boolean)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Left Outer Join 0 to 1
                filter predicates:
                  0 {_col1}
                  1 
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 4 Data size: 35 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Left Outer Join 0 to 1
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  Statistics: Num rows: 4 Data size: 38 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: count()
                    minReductionHashAggr: 0.99
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      null sort order: 
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: bigint)
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from foo a left outer join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
PREHOOK: type: QUERY
PREHOOK: Input: default@bar
PREHOOK: Input: default@baz
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from foo a left outer join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bar
POSTHOOK: Input: default@baz
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
4
PREHOOK: query: select count(*) from foo a left outer join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
PREHOOK: type: QUERY
PREHOOK: Input: default@bar
PREHOOK: Input: default@baz
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from foo a left outer join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bar
POSTHOOK: Input: default@baz
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
4
PREHOOK: query: explain select count(*) from foo a inner join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
PREHOOK: type: QUERY
PREHOOK: Input: default@bar
PREHOOK: Input: default@baz
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: explain select count(*) from foo a inner join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bar
POSTHOOK: Input: default@baz
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-6 is a root stage
  Stage-2 depends on stages: Stage-6
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-6
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_1:b 
          Fetch Operator
            limit: -1
        $hdt$_2:c 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_1:b 
          TableScan
            alias: b
            filterExpr: id is not null (type: boolean)
            Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                    2 _col0 (type: int)
        $hdt$_2:c 
          TableScan
            alias: c
            filterExpr: id is not null (type: boolean)
            Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                    2 _col0 (type: int)

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            filterExpr: ((code) IN (2, 4) and id is not null) (type: boolean)
            Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((code) IN (2, 4) and id is not null) (type: boolean)
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                       Left Outer Join 0 to 2
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                    2 _col0 (type: int)
                  Statistics: Num rows: 4 Data size: 17 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: count()
                    minReductionHashAggr: 0.99
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      null sort order: 
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: bigint)
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain select count(*) from foo a inner join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
PREHOOK: type: QUERY
PREHOOK: Input: default@bar
PREHOOK: Input: default@baz
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: explain select count(*) from foo a inner join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bar
POSTHOOK: Input: default@baz
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-8 is a root stage
  Stage-3 depends on stages: Stage-8
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-8
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_1:b 
          Fetch Operator
            limit: -1
        $hdt$_2:c 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_1:b 
          TableScan
            alias: b
            filterExpr: id is not null (type: boolean)
            Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
        $hdt$_2:c 
          TableScan
            alias: c
            filterExpr: id is not null (type: boolean)
            Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: id is not null (type: boolean)
              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            filterExpr: ((code) IN (2, 4) and id is not null) (type: boolean)
            Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((code) IN (2, 4) and id is not null) (type: boolean)
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: id (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Map Join Operator
                    condition map:
                         Left Outer Join 0 to 1
                    keys:
                      0 _col0 (type: int)
                      1 _col0 (type: int)
                    Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint)
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from foo a inner join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
PREHOOK: type: QUERY
PREHOOK: Input: default@bar
PREHOOK: Input: default@baz
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from foo a inner join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bar
POSTHOOK: Input: default@baz
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
2
PREHOOK: query: select count(*) from foo a inner join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
PREHOOK: type: QUERY
PREHOOK: Input: default@bar
PREHOOK: Input: default@baz
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from foo a inner join bar b on a.id = b.id and (a.code = 2 or a.code = 4) left outer join baz c on a.id = c.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bar
POSTHOOK: Input: default@baz
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
2
