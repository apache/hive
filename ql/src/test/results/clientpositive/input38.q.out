PREHOOK: query: CREATE TABLE dest1_n91(key STRING, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1_n91
POSTHOOK: query: CREATE TABLE dest1_n91(key STRING, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1_n91
PREHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value, 1+2, 3+4)
         USING 'cat'
) tmap
INSERT OVERWRITE TABLE dest1_n91 SELECT tmap.key, tmap.value
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value, 1+2, 3+4)
         USING 'cat'
) tmap
INSERT OVERWRITE TABLE dest1_n91 SELECT tmap.key, tmap.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1 , consists of Stage-4, Stage-3, Stage-5
  Stage-4
  Stage-0 depends on stages: Stage-4, Stage-3, Stage-6
  Stage-2 depends on stages: Stage-0
  Stage-3
  Stage-5
  Stage-6 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string), 3 (type: int), 7 (type: int)
              outputColumnNames: _col0, _col1, _col2, _col3
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Transform Operator
                command: cat
                output info:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.dest1_n91
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string)
                  outputColumnNames: key, value
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: compute_stats(key, 'hll'), compute_stats(value, 'hll')
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-4
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1_n91

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: string, string
          Table: default.dest1_n91

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.dest1_n91

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.dest1_n91

  Stage: Stage-6
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value, 1+2, 3+4)
         USING 'cat'
) tmap
INSERT OVERWRITE TABLE dest1_n91 SELECT tmap.key, tmap.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@dest1_n91
POSTHOOK: query: FROM (
  FROM src
  SELECT TRANSFORM(src.key, src.value, 1+2, 3+4)
         USING 'cat'
) tmap
INSERT OVERWRITE TABLE dest1_n91 SELECT tmap.key, tmap.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@dest1_n91
POSTHOOK: Lineage: dest1_n91.key SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest1_n91.value SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SELECT dest1_n91.* FROM dest1_n91
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n91
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1_n91.* FROM dest1_n91
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n91
#### A masked pattern was here ####
238	val_238	3	7
86	val_86	3	7
311	val_311	3	7
27	val_27	3	7
165	val_165	3	7
409	val_409	3	7
255	val_255	3	7
278	val_278	3	7
98	val_98	3	7
484	val_484	3	7
265	val_265	3	7
193	val_193	3	7
401	val_401	3	7
150	val_150	3	7
273	val_273	3	7
224	val_224	3	7
369	val_369	3	7
66	val_66	3	7
128	val_128	3	7
213	val_213	3	7
146	val_146	3	7
406	val_406	3	7
429	val_429	3	7
374	val_374	3	7
152	val_152	3	7
469	val_469	3	7
145	val_145	3	7
495	val_495	3	7
37	val_37	3	7
327	val_327	3	7
281	val_281	3	7
277	val_277	3	7
209	val_209	3	7
15	val_15	3	7
82	val_82	3	7
403	val_403	3	7
166	val_166	3	7
417	val_417	3	7
430	val_430	3	7
252	val_252	3	7
292	val_292	3	7
219	val_219	3	7
287	val_287	3	7
153	val_153	3	7
193	val_193	3	7
338	val_338	3	7
446	val_446	3	7
459	val_459	3	7
394	val_394	3	7
237	val_237	3	7
482	val_482	3	7
174	val_174	3	7
413	val_413	3	7
494	val_494	3	7
207	val_207	3	7
199	val_199	3	7
466	val_466	3	7
208	val_208	3	7
174	val_174	3	7
399	val_399	3	7
396	val_396	3	7
247	val_247	3	7
417	val_417	3	7
489	val_489	3	7
162	val_162	3	7
377	val_377	3	7
397	val_397	3	7
309	val_309	3	7
365	val_365	3	7
266	val_266	3	7
439	val_439	3	7
342	val_342	3	7
367	val_367	3	7
325	val_325	3	7
167	val_167	3	7
195	val_195	3	7
475	val_475	3	7
17	val_17	3	7
113	val_113	3	7
155	val_155	3	7
203	val_203	3	7
339	val_339	3	7
0	val_0	3	7
455	val_455	3	7
128	val_128	3	7
311	val_311	3	7
316	val_316	3	7
57	val_57	3	7
302	val_302	3	7
205	val_205	3	7
149	val_149	3	7
438	val_438	3	7
345	val_345	3	7
129	val_129	3	7
170	val_170	3	7
20	val_20	3	7
489	val_489	3	7
157	val_157	3	7
378	val_378	3	7
221	val_221	3	7
92	val_92	3	7
111	val_111	3	7
47	val_47	3	7
72	val_72	3	7
4	val_4	3	7
280	val_280	3	7
35	val_35	3	7
427	val_427	3	7
277	val_277	3	7
208	val_208	3	7
356	val_356	3	7
399	val_399	3	7
169	val_169	3	7
382	val_382	3	7
498	val_498	3	7
125	val_125	3	7
386	val_386	3	7
437	val_437	3	7
469	val_469	3	7
192	val_192	3	7
286	val_286	3	7
187	val_187	3	7
176	val_176	3	7
54	val_54	3	7
459	val_459	3	7
51	val_51	3	7
138	val_138	3	7
103	val_103	3	7
239	val_239	3	7
213	val_213	3	7
216	val_216	3	7
430	val_430	3	7
278	val_278	3	7
176	val_176	3	7
289	val_289	3	7
221	val_221	3	7
65	val_65	3	7
318	val_318	3	7
332	val_332	3	7
311	val_311	3	7
275	val_275	3	7
137	val_137	3	7
241	val_241	3	7
83	val_83	3	7
333	val_333	3	7
180	val_180	3	7
284	val_284	3	7
12	val_12	3	7
230	val_230	3	7
181	val_181	3	7
67	val_67	3	7
260	val_260	3	7
404	val_404	3	7
384	val_384	3	7
489	val_489	3	7
353	val_353	3	7
373	val_373	3	7
272	val_272	3	7
138	val_138	3	7
217	val_217	3	7
84	val_84	3	7
348	val_348	3	7
466	val_466	3	7
58	val_58	3	7
8	val_8	3	7
411	val_411	3	7
230	val_230	3	7
208	val_208	3	7
348	val_348	3	7
24	val_24	3	7
463	val_463	3	7
431	val_431	3	7
179	val_179	3	7
172	val_172	3	7
42	val_42	3	7
129	val_129	3	7
158	val_158	3	7
119	val_119	3	7
496	val_496	3	7
0	val_0	3	7
322	val_322	3	7
197	val_197	3	7
468	val_468	3	7
393	val_393	3	7
454	val_454	3	7
100	val_100	3	7
298	val_298	3	7
199	val_199	3	7
191	val_191	3	7
418	val_418	3	7
96	val_96	3	7
26	val_26	3	7
165	val_165	3	7
327	val_327	3	7
230	val_230	3	7
205	val_205	3	7
120	val_120	3	7
131	val_131	3	7
51	val_51	3	7
404	val_404	3	7
43	val_43	3	7
436	val_436	3	7
156	val_156	3	7
469	val_469	3	7
468	val_468	3	7
308	val_308	3	7
95	val_95	3	7
196	val_196	3	7
288	val_288	3	7
481	val_481	3	7
457	val_457	3	7
98	val_98	3	7
282	val_282	3	7
197	val_197	3	7
187	val_187	3	7
318	val_318	3	7
318	val_318	3	7
409	val_409	3	7
470	val_470	3	7
137	val_137	3	7
369	val_369	3	7
316	val_316	3	7
169	val_169	3	7
413	val_413	3	7
85	val_85	3	7
77	val_77	3	7
0	val_0	3	7
490	val_490	3	7
87	val_87	3	7
364	val_364	3	7
179	val_179	3	7
118	val_118	3	7
134	val_134	3	7
395	val_395	3	7
282	val_282	3	7
138	val_138	3	7
238	val_238	3	7
419	val_419	3	7
15	val_15	3	7
118	val_118	3	7
72	val_72	3	7
90	val_90	3	7
307	val_307	3	7
19	val_19	3	7
435	val_435	3	7
10	val_10	3	7
277	val_277	3	7
273	val_273	3	7
306	val_306	3	7
224	val_224	3	7
309	val_309	3	7
389	val_389	3	7
327	val_327	3	7
242	val_242	3	7
369	val_369	3	7
392	val_392	3	7
272	val_272	3	7
331	val_331	3	7
401	val_401	3	7
242	val_242	3	7
452	val_452	3	7
177	val_177	3	7
226	val_226	3	7
5	val_5	3	7
497	val_497	3	7
402	val_402	3	7
396	val_396	3	7
317	val_317	3	7
395	val_395	3	7
58	val_58	3	7
35	val_35	3	7
336	val_336	3	7
95	val_95	3	7
11	val_11	3	7
168	val_168	3	7
34	val_34	3	7
229	val_229	3	7
233	val_233	3	7
143	val_143	3	7
472	val_472	3	7
322	val_322	3	7
498	val_498	3	7
160	val_160	3	7
195	val_195	3	7
42	val_42	3	7
321	val_321	3	7
430	val_430	3	7
119	val_119	3	7
489	val_489	3	7
458	val_458	3	7
78	val_78	3	7
76	val_76	3	7
41	val_41	3	7
223	val_223	3	7
492	val_492	3	7
149	val_149	3	7
449	val_449	3	7
218	val_218	3	7
228	val_228	3	7
138	val_138	3	7
453	val_453	3	7
30	val_30	3	7
209	val_209	3	7
64	val_64	3	7
468	val_468	3	7
76	val_76	3	7
74	val_74	3	7
342	val_342	3	7
69	val_69	3	7
230	val_230	3	7
33	val_33	3	7
368	val_368	3	7
103	val_103	3	7
296	val_296	3	7
113	val_113	3	7
216	val_216	3	7
367	val_367	3	7
344	val_344	3	7
167	val_167	3	7
274	val_274	3	7
219	val_219	3	7
239	val_239	3	7
485	val_485	3	7
116	val_116	3	7
223	val_223	3	7
256	val_256	3	7
263	val_263	3	7
70	val_70	3	7
487	val_487	3	7
480	val_480	3	7
401	val_401	3	7
288	val_288	3	7
191	val_191	3	7
5	val_5	3	7
244	val_244	3	7
438	val_438	3	7
128	val_128	3	7
467	val_467	3	7
432	val_432	3	7
202	val_202	3	7
316	val_316	3	7
229	val_229	3	7
469	val_469	3	7
463	val_463	3	7
280	val_280	3	7
2	val_2	3	7
35	val_35	3	7
283	val_283	3	7
331	val_331	3	7
235	val_235	3	7
80	val_80	3	7
44	val_44	3	7
193	val_193	3	7
321	val_321	3	7
335	val_335	3	7
104	val_104	3	7
466	val_466	3	7
366	val_366	3	7
175	val_175	3	7
403	val_403	3	7
483	val_483	3	7
53	val_53	3	7
105	val_105	3	7
257	val_257	3	7
406	val_406	3	7
409	val_409	3	7
190	val_190	3	7
406	val_406	3	7
401	val_401	3	7
114	val_114	3	7
258	val_258	3	7
90	val_90	3	7
203	val_203	3	7
262	val_262	3	7
348	val_348	3	7
424	val_424	3	7
12	val_12	3	7
396	val_396	3	7
201	val_201	3	7
217	val_217	3	7
164	val_164	3	7
431	val_431	3	7
454	val_454	3	7
478	val_478	3	7
298	val_298	3	7
125	val_125	3	7
431	val_431	3	7
164	val_164	3	7
424	val_424	3	7
187	val_187	3	7
382	val_382	3	7
5	val_5	3	7
70	val_70	3	7
397	val_397	3	7
480	val_480	3	7
291	val_291	3	7
24	val_24	3	7
351	val_351	3	7
255	val_255	3	7
104	val_104	3	7
70	val_70	3	7
163	val_163	3	7
438	val_438	3	7
119	val_119	3	7
414	val_414	3	7
200	val_200	3	7
491	val_491	3	7
237	val_237	3	7
439	val_439	3	7
360	val_360	3	7
248	val_248	3	7
479	val_479	3	7
305	val_305	3	7
417	val_417	3	7
199	val_199	3	7
444	val_444	3	7
120	val_120	3	7
429	val_429	3	7
169	val_169	3	7
443	val_443	3	7
323	val_323	3	7
325	val_325	3	7
277	val_277	3	7
230	val_230	3	7
478	val_478	3	7
178	val_178	3	7
468	val_468	3	7
310	val_310	3	7
317	val_317	3	7
333	val_333	3	7
493	val_493	3	7
460	val_460	3	7
207	val_207	3	7
249	val_249	3	7
265	val_265	3	7
480	val_480	3	7
83	val_83	3	7
136	val_136	3	7
353	val_353	3	7
172	val_172	3	7
214	val_214	3	7
462	val_462	3	7
233	val_233	3	7
406	val_406	3	7
133	val_133	3	7
175	val_175	3	7
189	val_189	3	7
454	val_454	3	7
375	val_375	3	7
401	val_401	3	7
421	val_421	3	7
407	val_407	3	7
384	val_384	3	7
256	val_256	3	7
26	val_26	3	7
134	val_134	3	7
67	val_67	3	7
384	val_384	3	7
379	val_379	3	7
18	val_18	3	7
462	val_462	3	7
492	val_492	3	7
100	val_100	3	7
298	val_298	3	7
9	val_9	3	7
341	val_341	3	7
498	val_498	3	7
146	val_146	3	7
458	val_458	3	7
362	val_362	3	7
186	val_186	3	7
285	val_285	3	7
348	val_348	3	7
167	val_167	3	7
18	val_18	3	7
273	val_273	3	7
183	val_183	3	7
281	val_281	3	7
344	val_344	3	7
97	val_97	3	7
469	val_469	3	7
315	val_315	3	7
84	val_84	3	7
28	val_28	3	7
37	val_37	3	7
448	val_448	3	7
152	val_152	3	7
348	val_348	3	7
307	val_307	3	7
194	val_194	3	7
414	val_414	3	7
477	val_477	3	7
222	val_222	3	7
126	val_126	3	7
90	val_90	3	7
169	val_169	3	7
403	val_403	3	7
400	val_400	3	7
200	val_200	3	7
97	val_97	3	7
