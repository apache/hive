PREHOOK: query: -- SORT_QUERY_RESULTS

CREATE TABLE orcsrc STORED AS ORC AS SELECT * FROM src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@orcsrc
POSTHOOK: query: -- SORT_QUERY_RESULTS

CREATE TABLE orcsrc STORED AS ORC AS SELECT * FROM src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orcsrc
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1, Stage-4 , consists of Stage-8, Stage-9, Stage-2
  Stage-8 has a backup stage: Stage-2
  Stage-5 depends on stages: Stage-8
  Stage-3 depends on stages: Stage-2, Stage-5, Stage-6
  Stage-9 has a backup stage: Stage-2
  Stage-6 depends on stages: Stage-9
  Stage-2
  Stage-4 is a root stage
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-8
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME1 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-9
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
          outputColumnNames: _col2, _col3
          Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(hash(_col2,_col3))
            mode: hash
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col1 (type: string)
                  sort order: +
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
103231310608
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-6 depends on stages: Stage-1, Stage-4 , consists of Stage-7, Stage-2
  Stage-7 has a backup stage: Stage-2
  Stage-5 depends on stages: Stage-7
  Stage-3 depends on stages: Stage-2, Stage-5
  Stage-2
  Stage-4 is a root stage
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-6
    Conditional Operator

  Stage: Stage-7
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME1 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Left Outer Join0 to 1
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
          outputColumnNames: _col2, _col3
          Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(hash(_col2,_col3))
            mode: hash
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
103231310608
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-6 depends on stages: Stage-1, Stage-4 , consists of Stage-7, Stage-2
  Stage-7 has a backup stage: Stage-2
  Stage-5 depends on stages: Stage-7
  Stage-3 depends on stages: Stage-2, Stage-5
  Stage-2
  Stage-4 is a root stage
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-6
    Conditional Operator

  Stage: Stage-7
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Right Outer Join0 to 1
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Right Outer Join0 to 1
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
          outputColumnNames: _col2, _col3
          Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(hash(_col2,_col3))
            mode: hash
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
103231310608
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-9 depends on stages: Stage-1, Stage-4, Stage-5 , consists of Stage-10, Stage-11, Stage-12, Stage-2
  Stage-10 has a backup stage: Stage-2
  Stage-6 depends on stages: Stage-10
  Stage-3 depends on stages: Stage-2, Stage-6, Stage-7, Stage-8
  Stage-11 has a backup stage: Stage-2
  Stage-7 depends on stages: Stage-11
  Stage-12 has a backup stage: Stage-2
  Stage-8 depends on stages: Stage-12
  Stage-2
  Stage-4 is a root stage
  Stage-5 is a root stage
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-9
    Conditional Operator

  Stage: Stage-10
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME1 
          Fetch Operator
            limit: -1
        $INTNAME2 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
        $INTNAME2 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-11
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME 
          Fetch Operator
            limit: -1
        $INTNAME2 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
        $INTNAME2 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-12
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME 
          Fetch Operator
            limit: -1
        $INTNAME1 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)

  Stage: Stage-8
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Inner Join 0 to 2
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
            2 _col0 (type: string)
          outputColumnNames: _col2, _col3
          Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(hash(_col2,_col3))
            mode: hash
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col1 (type: string)
                  sort order: +
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: string), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col1 (type: string)
                  sort order: +
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-8 depends on stages: Stage-1, Stage-4, Stage-5 , consists of Stage-9, Stage-10, Stage-2
  Stage-9 has a backup stage: Stage-2
  Stage-6 depends on stages: Stage-9
  Stage-3 depends on stages: Stage-2, Stage-6, Stage-7
  Stage-10 has a backup stage: Stage-2
  Stage-7 depends on stages: Stage-10
  Stage-2
  Stage-4 is a root stage
  Stage-5 is a root stage
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-8
    Conditional Operator

  Stage: Stage-9
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME1 
          Fetch Operator
            limit: -1
        $INTNAME2 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
        $INTNAME2 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Left Outer Join0 to 2
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-10
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME 
          Fetch Operator
            limit: -1
        $INTNAME2 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
        $INTNAME2 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Left Outer Join0 to 2
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Left Outer Join0 to 2
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
            2 _col0 (type: string)
          outputColumnNames: _col2, _col3
          Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(hash(_col2,_col3))
            mode: hash
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1, Stage-4, Stage-5 , consists of Stage-8, Stage-2
  Stage-8 has a backup stage: Stage-2
  Stage-6 depends on stages: Stage-8
  Stage-3 depends on stages: Stage-2, Stage-6
  Stage-2
  Stage-4 is a root stage
  Stage-5 is a root stage
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-8
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME1 
          Fetch Operator
            limit: -1
        $INTNAME2 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
        $INTNAME2 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Left Outer Join0 to 1
                   Left Outer Join0 to 2
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
               Left Outer Join0 to 2
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
            2 _col0 (type: string)
          outputColumnNames: _col2, _col3
          Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(hash(_col2,_col3))
            mode: hash
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1, Stage-4, Stage-5 , consists of Stage-8, Stage-2
  Stage-8 has a backup stage: Stage-2
  Stage-6 depends on stages: Stage-8
  Stage-3 depends on stages: Stage-2, Stage-6
  Stage-2
  Stage-4 is a root stage
  Stage-5 is a root stage
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-8
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME 
          Fetch Operator
            limit: -1
        $INTNAME1 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Left Outer Join0 to 1
                   Right Outer Join0 to 2
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
               Right Outer Join0 to 2
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
            2 _col0 (type: string)
          outputColumnNames: _col2, _col3
          Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(hash(_col2,_col3))
            mode: hash
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1, Stage-4, Stage-5 , consists of Stage-8, Stage-2
  Stage-8 has a backup stage: Stage-2
  Stage-6 depends on stages: Stage-8
  Stage-3 depends on stages: Stage-2, Stage-6
  Stage-2
  Stage-4 is a root stage
  Stage-5 is a root stage
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string)
              outputColumnNames: _col0
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-8
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $INTNAME 
          Fetch Operator
            limit: -1
        $INTNAME1 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $INTNAME 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
        $INTNAME1 
          TableScan
            HashTable Sink Operator
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            Map Join Operator
              condition map:
                   Right Outer Join0 to 1
                   Right Outer Join0 to 2
              keys:
                0 _col0 (type: string)
                1 _col0 (type: string)
                2 _col0 (type: string)
              outputColumnNames: _col2, _col3
              Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(hash(_col2,_col3))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Local Work:
        Map Reduce Local Work

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: string)
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Right Outer Join0 to 1
               Right Outer Join0 to 2
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
            2 _col0 (type: string)
          outputColumnNames: _col2, _col3
          Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: sum(hash(_col2,_col3))
            mode: hash
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orcsrc
            Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: string)
                sort order: +
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string)
          outputColumnNames: _col0
          Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
