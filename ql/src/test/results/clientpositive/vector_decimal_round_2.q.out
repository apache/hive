PREHOOK: query: create table decimal_tbl_1_orc (`dec` decimal(38,18)) 
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@decimal_tbl_1_orc
POSTHOOK: query: create table decimal_tbl_1_orc (`dec` decimal(38,18)) 
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@decimal_tbl_1_orc
PREHOOK: query: insert into table decimal_tbl_1_orc values(55555)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@decimal_tbl_1_orc
POSTHOOK: query: insert into table decimal_tbl_1_orc values(55555)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@decimal_tbl_1_orc
POSTHOOK: Lineage: decimal_tbl_1_orc.dec SCRIPT []
PREHOOK: query: select * from decimal_tbl_1_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_1_orc
#### A masked pattern was here ####
POSTHOOK: query: select * from decimal_tbl_1_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_1_orc
#### A masked pattern was here ####
55555.000000000000000000
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT
  round(`dec`) as d, round(`dec`, 0), round(`dec`, 1), round(`dec`, 2), round(`dec`, 3),
  round(`dec`, -1), round(`dec`, -2), round(`dec`, -3), round(`dec`, -4),
  round(`dec`, -5), round(`dec`, -6), round(`dec`, -7), round(`dec`, -8)
FROM decimal_tbl_1_orc ORDER BY d
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT
  round(`dec`) as d, round(`dec`, 0), round(`dec`, 1), round(`dec`, 2), round(`dec`, 3),
  round(`dec`, -1), round(`dec`, -2), round(`dec`, -3), round(`dec`, -4),
  round(`dec`, -5), round(`dec`, -6), round(`dec`, -7), round(`dec`, -8)
FROM decimal_tbl_1_orc ORDER BY d
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_1_orc
            Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(38,18), 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: round(dec) (type: decimal(21,0)), round(dec, 0) (type: decimal(21,0)), round(dec, 1) (type: decimal(22,1)), round(dec, 2) (type: decimal(23,2)), round(dec, 3) (type: decimal(24,3)), round(dec, -1) (type: decimal(21,0)), round(dec, -2) (type: decimal(21,0)), round(dec, -3) (type: decimal(21,0)), round(dec, -4) (type: decimal(21,0)), round(dec, -5) (type: decimal(21,0)), round(dec, -6) (type: decimal(21,0)), round(dec, -7) (type: decimal(21,0)), round(dec, -8) (type: decimal(21,0))
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
                  selectExpressions: FuncRoundDecimalToDecimal(col 0:decimal(38,18)) -> 2:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 0) -> 3:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 1) -> 4:decimal(22,1), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 2) -> 5:decimal(23,2), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 3) -> 6:decimal(24,3), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -1) -> 7:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -2) -> 8:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -3) -> 9:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -4) -> 10:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -5) -> 11:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -6) -> 12:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -7) -> 13:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -8) -> 14:decimal(21,0)
              Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: decimal(21,0))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: decimal(21,0)), _col2 (type: decimal(22,1)), _col3 (type: decimal(23,2)), _col4 (type: decimal(24,3)), _col5 (type: decimal(21,0)), _col6 (type: decimal(21,0)), _col7 (type: decimal(21,0)), _col8 (type: decimal(21,0)), _col9 (type: decimal(21,0)), _col10 (type: decimal(21,0)), _col11 (type: decimal(21,0)), _col12 (type: decimal(21,0))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(38,18)
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(21,0), decimal(21,0), decimal(22,1), decimal(23,2), decimal(24,3), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: decimal(21,0)), VALUE._col0 (type: decimal(21,0)), VALUE._col1 (type: decimal(22,1)), VALUE._col2 (type: decimal(23,2)), VALUE._col3 (type: decimal(24,3)), VALUE._col4 (type: decimal(21,0)), VALUE._col5 (type: decimal(21,0)), VALUE._col6 (type: decimal(21,0)), VALUE._col7 (type: decimal(21,0)), VALUE._col8 (type: decimal(21,0)), VALUE._col9 (type: decimal(21,0)), VALUE._col10 (type: decimal(21,0)), VALUE._col11 (type: decimal(21,0))
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
          Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  round(`dec`) as d, round(`dec`, 0), round(`dec`, 1), round(`dec`, 2), round(`dec`, 3),
  round(`dec`, -1), round(`dec`, -2), round(`dec`, -3), round(`dec`, -4),
  round(`dec`, -5), round(`dec`, -6), round(`dec`, -7), round(`dec`, -8)
FROM decimal_tbl_1_orc ORDER BY d
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_1_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  round(`dec`) as d, round(`dec`, 0), round(`dec`, 1), round(`dec`, 2), round(`dec`, 3),
  round(`dec`, -1), round(`dec`, -2), round(`dec`, -3), round(`dec`, -4),
  round(`dec`, -5), round(`dec`, -6), round(`dec`, -7), round(`dec`, -8)
FROM decimal_tbl_1_orc ORDER BY d
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_1_orc
#### A masked pattern was here ####
55555	55555	55555.0	55555.00	55555.000	55560	55600	56000	60000	100000	0	0	0
PREHOOK: query: create table decimal_tbl_2_orc (pos decimal(38,18), neg decimal(38,18)) 
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@decimal_tbl_2_orc
POSTHOOK: query: create table decimal_tbl_2_orc (pos decimal(38,18), neg decimal(38,18)) 
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@decimal_tbl_2_orc
PREHOOK: query: insert into table decimal_tbl_2_orc values(125.315, -125.315)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@decimal_tbl_2_orc
POSTHOOK: query: insert into table decimal_tbl_2_orc values(125.315, -125.315)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@decimal_tbl_2_orc
POSTHOOK: Lineage: decimal_tbl_2_orc.neg SCRIPT []
POSTHOOK: Lineage: decimal_tbl_2_orc.pos SCRIPT []
PREHOOK: query: select * from decimal_tbl_2_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_2_orc
#### A masked pattern was here ####
POSTHOOK: query: select * from decimal_tbl_2_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_2_orc
#### A masked pattern was here ####
125.315000000000000000	-125.315000000000000000
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT
  round(pos) as p, round(pos, 0),
  round(pos, 1), round(pos, 2), round(pos, 3), round(pos, 4),
  round(pos, -1), round(pos, -2), round(pos, -3), round(pos, -4),
  round(neg), round(neg, 0),
  round(neg, 1), round(neg, 2), round(neg, 3), round(neg, 4),
  round(neg, -1), round(neg, -2), round(neg, -3), round(neg, -4)
FROM decimal_tbl_2_orc ORDER BY p
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT
  round(pos) as p, round(pos, 0),
  round(pos, 1), round(pos, 2), round(pos, 3), round(pos, 4),
  round(pos, -1), round(pos, -2), round(pos, -3), round(pos, -4),
  round(neg), round(neg, 0),
  round(neg, 1), round(neg, 2), round(neg, 3), round(neg, 4),
  round(neg, -1), round(neg, -2), round(neg, -3), round(neg, -4)
FROM decimal_tbl_2_orc ORDER BY p
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_2_orc
            Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:pos:decimal(38,18), 1:neg:decimal(38,18), 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: round(pos) (type: decimal(21,0)), round(pos, 0) (type: decimal(21,0)), round(pos, 1) (type: decimal(22,1)), round(pos, 2) (type: decimal(23,2)), round(pos, 3) (type: decimal(24,3)), round(pos, 4) (type: decimal(25,4)), round(pos, -1) (type: decimal(21,0)), round(pos, -2) (type: decimal(21,0)), round(pos, -3) (type: decimal(21,0)), round(pos, -4) (type: decimal(21,0)), round(neg) (type: decimal(21,0)), round(neg, 0) (type: decimal(21,0)), round(neg, 1) (type: decimal(22,1)), round(neg, 2) (type: decimal(23,2)), round(neg, 3) (type: decimal(24,3)), round(neg, 4) (type: decimal(25,4)), round(neg, -1) (type: decimal(21,0)), round(neg, -2) (type: decimal(21,0)), round(neg, -3) (type: decimal(21,0)), round(neg, -4) (type: decimal(21,0))
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                  selectExpressions: FuncRoundDecimalToDecimal(col 0:decimal(38,18)) -> 3:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 0) -> 4:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 1) -> 5:decimal(22,1), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 2) -> 6:decimal(23,2), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 3) -> 7:decimal(24,3), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 4) -> 8:decimal(25,4), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -1) -> 9:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -2) -> 10:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -3) -> 11:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -4) -> 12:decimal(21,0), FuncRoundDecimalToDecimal(col 1:decimal(38,18)) -> 13:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces 0) -> 14:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces 1) -> 15:decimal(22,1), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces 2) -> 16:decimal(23,2), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces 3) -> 17:decimal(24,3), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces 4) -> 18:decimal(25,4), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces -1) -> 19:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces -2) -> 20:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces -3) -> 21:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces -4) -> 22:decimal(21,0)
              Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: decimal(21,0))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: decimal(21,0)), _col2 (type: decimal(22,1)), _col3 (type: decimal(23,2)), _col4 (type: decimal(24,3)), _col5 (type: decimal(25,4)), _col6 (type: decimal(21,0)), _col7 (type: decimal(21,0)), _col8 (type: decimal(21,0)), _col9 (type: decimal(21,0)), _col10 (type: decimal(21,0)), _col11 (type: decimal(21,0)), _col12 (type: decimal(22,1)), _col13 (type: decimal(23,2)), _col14 (type: decimal(24,3)), _col15 (type: decimal(25,4)), _col16 (type: decimal(21,0)), _col17 (type: decimal(21,0)), _col18 (type: decimal(21,0)), _col19 (type: decimal(21,0))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 2
              includeColumns: [0, 1]
              dataColumns: pos:decimal(38,18), neg:decimal(38,18)
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(21,0), decimal(21,0), decimal(22,1), decimal(23,2), decimal(24,3), decimal(25,4), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(22,1), decimal(23,2), decimal(24,3), decimal(25,4), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: decimal(21,0)), VALUE._col0 (type: decimal(21,0)), VALUE._col1 (type: decimal(22,1)), VALUE._col2 (type: decimal(23,2)), VALUE._col3 (type: decimal(24,3)), VALUE._col4 (type: decimal(25,4)), VALUE._col5 (type: decimal(21,0)), VALUE._col6 (type: decimal(21,0)), VALUE._col7 (type: decimal(21,0)), VALUE._col8 (type: decimal(21,0)), VALUE._col9 (type: decimal(21,0)), VALUE._col10 (type: decimal(21,0)), VALUE._col11 (type: decimal(22,1)), VALUE._col12 (type: decimal(23,2)), VALUE._col13 (type: decimal(24,3)), VALUE._col14 (type: decimal(25,4)), VALUE._col15 (type: decimal(21,0)), VALUE._col16 (type: decimal(21,0)), VALUE._col17 (type: decimal(21,0)), VALUE._col18 (type: decimal(21,0))
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19
          Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  round(pos) as p, round(pos, 0),
  round(pos, 1), round(pos, 2), round(pos, 3), round(pos, 4),
  round(pos, -1), round(pos, -2), round(pos, -3), round(pos, -4),
  round(neg), round(neg, 0),
  round(neg, 1), round(neg, 2), round(neg, 3), round(neg, 4),
  round(neg, -1), round(neg, -2), round(neg, -3), round(neg, -4)
FROM decimal_tbl_2_orc ORDER BY p
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_2_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  round(pos) as p, round(pos, 0),
  round(pos, 1), round(pos, 2), round(pos, 3), round(pos, 4),
  round(pos, -1), round(pos, -2), round(pos, -3), round(pos, -4),
  round(neg), round(neg, 0),
  round(neg, 1), round(neg, 2), round(neg, 3), round(neg, 4),
  round(neg, -1), round(neg, -2), round(neg, -3), round(neg, -4)
FROM decimal_tbl_2_orc ORDER BY p
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_2_orc
#### A masked pattern was here ####
125	125	125.3	125.32	125.315	125.3150	130	100	0	0	-125	-125	-125.3	-125.32	-125.315	-125.3150	-130	-100	0	0
PREHOOK: query: create table decimal_tbl_3_orc (`dec` decimal(38,18)) 
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@decimal_tbl_3_orc
POSTHOOK: query: create table decimal_tbl_3_orc (`dec` decimal(38,18)) 
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@decimal_tbl_3_orc
PREHOOK: query: insert into table decimal_tbl_3_orc values(3.141592653589793)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@decimal_tbl_3_orc
POSTHOOK: query: insert into table decimal_tbl_3_orc values(3.141592653589793)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@decimal_tbl_3_orc
POSTHOOK: Lineage: decimal_tbl_3_orc.dec SCRIPT []
PREHOOK: query: select * from decimal_tbl_3_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_3_orc
#### A masked pattern was here ####
POSTHOOK: query: select * from decimal_tbl_3_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_3_orc
#### A masked pattern was here ####
3.141592653589793000
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT
  round(`dec`, -15) as d, round(`dec`, -16),
  round(`dec`, -13), round(`dec`, -14),
  round(`dec`, -11), round(`dec`, -12),
  round(`dec`, -9), round(`dec`, -10),
  round(`dec`, -7), round(`dec`, -8),
  round(`dec`, -5), round(`dec`, -6),
  round(`dec`, -3), round(`dec`, -4),
  round(`dec`, -1), round(`dec`, -2),
  round(`dec`, 0), round(`dec`, 1),
  round(`dec`, 2), round(`dec`, 3),
  round(`dec`, 4), round(`dec`, 5),
  round(`dec`, 6), round(`dec`, 7),
  round(`dec`, 8), round(`dec`, 9),
  round(`dec`, 10), round(`dec`, 11),
  round(`dec`, 12), round(`dec`, 13),
  round(`dec`, 13), round(`dec`, 14),
  round(`dec`, 15), round(`dec`, 16)
FROM decimal_tbl_3_orc ORDER BY d
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT
  round(`dec`, -15) as d, round(`dec`, -16),
  round(`dec`, -13), round(`dec`, -14),
  round(`dec`, -11), round(`dec`, -12),
  round(`dec`, -9), round(`dec`, -10),
  round(`dec`, -7), round(`dec`, -8),
  round(`dec`, -5), round(`dec`, -6),
  round(`dec`, -3), round(`dec`, -4),
  round(`dec`, -1), round(`dec`, -2),
  round(`dec`, 0), round(`dec`, 1),
  round(`dec`, 2), round(`dec`, 3),
  round(`dec`, 4), round(`dec`, 5),
  round(`dec`, 6), round(`dec`, 7),
  round(`dec`, 8), round(`dec`, 9),
  round(`dec`, 10), round(`dec`, 11),
  round(`dec`, 12), round(`dec`, 13),
  round(`dec`, 13), round(`dec`, 14),
  round(`dec`, 15), round(`dec`, 16)
FROM decimal_tbl_3_orc ORDER BY d
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_3_orc
            Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:dec:decimal(38,18), 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: round(dec, -15) (type: decimal(21,0)), round(dec, -16) (type: decimal(21,0)), round(dec, -13) (type: decimal(21,0)), round(dec, -14) (type: decimal(21,0)), round(dec, -11) (type: decimal(21,0)), round(dec, -12) (type: decimal(21,0)), round(dec, -9) (type: decimal(21,0)), round(dec, -10) (type: decimal(21,0)), round(dec, -7) (type: decimal(21,0)), round(dec, -8) (type: decimal(21,0)), round(dec, -5) (type: decimal(21,0)), round(dec, -6) (type: decimal(21,0)), round(dec, -3) (type: decimal(21,0)), round(dec, -4) (type: decimal(21,0)), round(dec, -1) (type: decimal(21,0)), round(dec, -2) (type: decimal(21,0)), round(dec, 0) (type: decimal(21,0)), round(dec, 1) (type: decimal(22,1)), round(dec, 2) (type: decimal(23,2)), round(dec, 3) (type: decimal(24,3)), round(dec, 4) (type: decimal(25,4)), round(dec, 5) (type: decimal(26,5)), round(dec, 6) (type: decimal(27,6)), round(dec, 7) (type: decimal(28,7)), round(dec, 8) (type: decimal(29,8)), round(dec, 9) (type: decimal(30,9)), round(dec, 10) (type: decimal(31,10)), round(dec, 11) (type: decimal(32,11)), round(dec, 12) (type: decimal(33,12)), round(dec, 13) (type: decimal(34,13)), round(dec, 14) (type: decimal(35,14)), round(dec, 15) (type: decimal(36,15)), round(dec, 16) (type: decimal(37,16))
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col31, _col32, _col33
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]
                  selectExpressions: FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -15) -> 2:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -16) -> 3:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -13) -> 4:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -14) -> 5:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -11) -> 6:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -12) -> 7:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -9) -> 8:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -10) -> 9:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -7) -> 10:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -8) -> 11:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -5) -> 12:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -6) -> 13:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -3) -> 14:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -4) -> 15:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -1) -> 16:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces -2) -> 17:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 0) -> 18:decimal(21,0), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 1) -> 19:decimal(22,1), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 2) -> 20:decimal(23,2), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 3) -> 21:decimal(24,3), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 4) -> 22:decimal(25,4), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 5) -> 23:decimal(26,5), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 6) -> 24:decimal(27,6), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 7) -> 25:decimal(28,7), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 8) -> 26:decimal(29,8), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 9) -> 27:decimal(30,9), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 10) -> 28:decimal(31,10), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 11) -> 29:decimal(32,11), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 12) -> 30:decimal(33,12), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 13) -> 31:decimal(34,13), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 14) -> 32:decimal(35,14), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 15) -> 33:decimal(36,15), FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 16) -> 34:decimal(37,16)
              Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: decimal(21,0))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: decimal(21,0)), _col2 (type: decimal(21,0)), _col3 (type: decimal(21,0)), _col4 (type: decimal(21,0)), _col5 (type: decimal(21,0)), _col6 (type: decimal(21,0)), _col7 (type: decimal(21,0)), _col8 (type: decimal(21,0)), _col9 (type: decimal(21,0)), _col10 (type: decimal(21,0)), _col11 (type: decimal(21,0)), _col12 (type: decimal(21,0)), _col13 (type: decimal(21,0)), _col14 (type: decimal(21,0)), _col15 (type: decimal(21,0)), _col16 (type: decimal(21,0)), _col17 (type: decimal(22,1)), _col18 (type: decimal(23,2)), _col19 (type: decimal(24,3)), _col20 (type: decimal(25,4)), _col21 (type: decimal(26,5)), _col22 (type: decimal(27,6)), _col23 (type: decimal(28,7)), _col24 (type: decimal(29,8)), _col25 (type: decimal(30,9)), _col26 (type: decimal(31,10)), _col27 (type: decimal(32,11)), _col28 (type: decimal(33,12)), _col29 (type: decimal(34,13)), _col31 (type: decimal(35,14)), _col32 (type: decimal(36,15)), _col33 (type: decimal(37,16))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 1
              includeColumns: [0]
              dataColumns: dec:decimal(38,18)
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(21,0), decimal(22,1), decimal(23,2), decimal(24,3), decimal(25,4), decimal(26,5), decimal(27,6), decimal(28,7), decimal(29,8), decimal(30,9), decimal(31,10), decimal(32,11), decimal(33,12), decimal(34,13), decimal(35,14), decimal(36,15), decimal(37,16)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: decimal(21,0)), VALUE._col0 (type: decimal(21,0)), VALUE._col1 (type: decimal(21,0)), VALUE._col2 (type: decimal(21,0)), VALUE._col3 (type: decimal(21,0)), VALUE._col4 (type: decimal(21,0)), VALUE._col5 (type: decimal(21,0)), VALUE._col6 (type: decimal(21,0)), VALUE._col7 (type: decimal(21,0)), VALUE._col8 (type: decimal(21,0)), VALUE._col9 (type: decimal(21,0)), VALUE._col10 (type: decimal(21,0)), VALUE._col11 (type: decimal(21,0)), VALUE._col12 (type: decimal(21,0)), VALUE._col13 (type: decimal(21,0)), VALUE._col14 (type: decimal(21,0)), VALUE._col15 (type: decimal(21,0)), VALUE._col16 (type: decimal(22,1)), VALUE._col17 (type: decimal(23,2)), VALUE._col18 (type: decimal(24,3)), VALUE._col19 (type: decimal(25,4)), VALUE._col20 (type: decimal(26,5)), VALUE._col21 (type: decimal(27,6)), VALUE._col22 (type: decimal(28,7)), VALUE._col23 (type: decimal(29,8)), VALUE._col24 (type: decimal(30,9)), VALUE._col25 (type: decimal(31,10)), VALUE._col26 (type: decimal(32,11)), VALUE._col27 (type: decimal(33,12)), VALUE._col28 (type: decimal(34,13)), VALUE._col28 (type: decimal(34,13)), VALUE._col29 (type: decimal(35,14)), VALUE._col30 (type: decimal(36,15)), VALUE._col31 (type: decimal(37,16))
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col30, _col31, _col32, _col33
          Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  round(`dec`, -15) as d, round(`dec`, -16),
  round(`dec`, -13), round(`dec`, -14),
  round(`dec`, -11), round(`dec`, -12),
  round(`dec`, -9), round(`dec`, -10),
  round(`dec`, -7), round(`dec`, -8),
  round(`dec`, -5), round(`dec`, -6),
  round(`dec`, -3), round(`dec`, -4),
  round(`dec`, -1), round(`dec`, -2),
  round(`dec`, 0), round(`dec`, 1),
  round(`dec`, 2), round(`dec`, 3),
  round(`dec`, 4), round(`dec`, 5),
  round(`dec`, 6), round(`dec`, 7),
  round(`dec`, 8), round(`dec`, 9),
  round(`dec`, 10), round(`dec`, 11),
  round(`dec`, 12), round(`dec`, 13),
  round(`dec`, 13), round(`dec`, 14),
  round(`dec`, 15), round(`dec`, 16)
FROM decimal_tbl_3_orc ORDER BY d
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_3_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  round(`dec`, -15) as d, round(`dec`, -16),
  round(`dec`, -13), round(`dec`, -14),
  round(`dec`, -11), round(`dec`, -12),
  round(`dec`, -9), round(`dec`, -10),
  round(`dec`, -7), round(`dec`, -8),
  round(`dec`, -5), round(`dec`, -6),
  round(`dec`, -3), round(`dec`, -4),
  round(`dec`, -1), round(`dec`, -2),
  round(`dec`, 0), round(`dec`, 1),
  round(`dec`, 2), round(`dec`, 3),
  round(`dec`, 4), round(`dec`, 5),
  round(`dec`, 6), round(`dec`, 7),
  round(`dec`, 8), round(`dec`, 9),
  round(`dec`, 10), round(`dec`, 11),
  round(`dec`, 12), round(`dec`, 13),
  round(`dec`, 13), round(`dec`, 14),
  round(`dec`, 15), round(`dec`, 16)
FROM decimal_tbl_3_orc ORDER BY d
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_3_orc
#### A masked pattern was here ####
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	3	3.1	3.14	3.142	3.1416	3.14159	3.141593	3.1415927	3.14159265	3.141592654	3.1415926536	3.14159265359	3.141592653590	3.1415926535898	3.1415926535898	3.14159265358979	3.141592653589793	3.1415926535897930
PREHOOK: query: create table decimal_tbl_4_orc (pos decimal(38,18), neg decimal(38,18)) 
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@decimal_tbl_4_orc
POSTHOOK: query: create table decimal_tbl_4_orc (pos decimal(38,18), neg decimal(38,18)) 
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@decimal_tbl_4_orc
PREHOOK: query: insert into table decimal_tbl_4_orc values(1809242.3151111344, -1809242.3151111344)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@decimal_tbl_4_orc
POSTHOOK: query: insert into table decimal_tbl_4_orc values(1809242.3151111344, -1809242.3151111344)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@decimal_tbl_4_orc
POSTHOOK: Lineage: decimal_tbl_4_orc.neg SCRIPT []
POSTHOOK: Lineage: decimal_tbl_4_orc.pos SCRIPT []
PREHOOK: query: select * from decimal_tbl_4_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_4_orc
#### A masked pattern was here ####
POSTHOOK: query: select * from decimal_tbl_4_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_4_orc
#### A masked pattern was here ####
1809242.315111134400000000	-1809242.315111134400000000
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT round(pos, 9) as p, round(neg, 9), round(1809242.3151111344BD, 9), round(-1809242.3151111344BD, 9)
FROM decimal_tbl_4_orc ORDER BY p
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT round(pos, 9) as p, round(neg, 9), round(1809242.3151111344BD, 9), round(-1809242.3151111344BD, 9)
FROM decimal_tbl_4_orc ORDER BY p
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_tbl_4_orc
            Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:pos:decimal(38,18), 1:neg:decimal(38,18), 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: round(pos, 9) (type: decimal(30,9)), round(neg, 9) (type: decimal(30,9))
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [3, 4]
                  selectExpressions: FuncRoundWithNumDigitsDecimalToDecimal(col 0:decimal(38,18), decimalPlaces 9) -> 3:decimal(30,9), FuncRoundWithNumDigitsDecimalToDecimal(col 1:decimal(38,18), decimalPlaces 9) -> 4:decimal(30,9)
              Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: decimal(30,9))
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: decimal(30,9))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 2
              includeColumns: [0, 1]
              dataColumns: pos:decimal(38,18), neg:decimal(38,18)
              partitionColumnCount: 0
              scratchColumnTypeNames: [decimal(30,9), decimal(30,9)]
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: decimal(30,9)), VALUE._col0 (type: decimal(30,9)), 1809242.315111134 (type: decimal(17,9)), -1809242.315111134 (type: decimal(17,9))
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 224 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT round(pos, 9) as p, round(neg, 9), round(1809242.3151111344BD, 9), round(-1809242.3151111344BD, 9)
FROM decimal_tbl_4_orc ORDER BY p
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_tbl_4_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT round(pos, 9) as p, round(neg, 9), round(1809242.3151111344BD, 9), round(-1809242.3151111344BD, 9)
FROM decimal_tbl_4_orc ORDER BY p
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_tbl_4_orc
#### A masked pattern was here ####
1809242.315111134	-1809242.315111134	1809242.315111134	-1809242.315111134
