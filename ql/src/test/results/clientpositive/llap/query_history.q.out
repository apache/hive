PREHOOK: query: CREATE TABLE test_part(id int) PARTITIONED BY(dt string) STORED AS ORC TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_part
POSTHOOK: query: CREATE TABLE test_part(id int) PARTITIONED BY(dt string) STORED AS ORC TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_part
PREHOOK: query: SELECT * FROM test_part
PREHOOK: type: QUERY
PREHOOK: Input: default@test_part
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM test_part
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_part
#### A masked pattern was here ####
PREHOOK: query: SELECT * FROM test_part
PREHOOK: type: QUERY
PREHOOK: Input: default@test_part
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM test_part
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_part
#### A masked pattern was here ####
PREHOOK: query: INSERT INTO test_part VALUES (1, '1')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test_part
POSTHOOK: query: INSERT INTO test_part VALUES (1, '1')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test_part
POSTHOOK: Output: default@test_part@dt=1
POSTHOOK: Lineage: test_part PARTITION(dt=1).id SCRIPT []
PREHOOK: query: ANALYZE TABLE test_part COMPUTE STATISTICS
PREHOOK: type: QUERY
PREHOOK: Input: default@test_part
PREHOOK: Input: default@test_part@dt=1
PREHOOK: Output: default@test_part
PREHOOK: Output: default@test_part@dt=1
POSTHOOK: query: ANALYZE TABLE test_part COMPUTE STATISTICS
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_part
POSTHOOK: Input: default@test_part@dt=1
POSTHOOK: Output: default@test_part
POSTHOOK: Output: default@test_part@dt=1
PREHOOK: query: ANALYZE TABLE test_part COMPUTE STATISTICS FOR COLUMNS
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@test_part
PREHOOK: Input: default@test_part@dt=1
PREHOOK: Output: default@test_part
PREHOOK: Output: default@test_part@dt=1
#### A masked pattern was here ####
POSTHOOK: query: ANALYZE TABLE test_part COMPUTE STATISTICS FOR COLUMNS
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@test_part
POSTHOOK: Input: default@test_part@dt=1
POSTHOOK: Output: default@test_part
POSTHOOK: Output: default@test_part@dt=1
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN SELECT * FROM test_part
PREHOOK: type: QUERY
PREHOOK: Input: default@test_part
PREHOOK: Input: default@test_part@dt=1
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT * FROM test_part
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_part
POSTHOOK: Input: default@test_part@dt=1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: test_part
                  Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), dt (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN INSERT INTO test_part VALUES (1, '1')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test_part
POSTHOOK: query: EXPLAIN INSERT INTO test_part VALUES (1, '1')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test_part
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: _dummy_table
                  Row Limit Per Split: 1
                  Statistics: Num rows: 1 Data size: 10 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: array(const struct(1,'1')) (type: array<struct<col1:int,col2:string>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                    UDTF Operator
                      Statistics: Num rows: 1 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      function name: inline
                      Select Operator
                        expressions: col1 (type: int), col2 (type: string)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col1 (type: string)
                          null sort order: a
                          sort order: +
                          Map-reduce partition columns: _col1 (type: string)
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int)
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: string)
                          outputColumnNames: id, dt
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          Group By Operator
                            aggregations: min(id), max(id), count(1), count(id), compute_bit_vector_hll(id)
                            keys: dt (type: string)
                            minReductionHashAggr: 0.4
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                            Statistics: Num rows: 1 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              key expressions: _col0 (type: string)
                              null sort order: z
                              sort order: +
                              Map-reduce partition columns: _col0 (type: string)
                              Statistics: Num rows: 1 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                              value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), KEY._col1 (type: string)
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.test_part
                  Write Type: INSERT
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 1 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col1) (type: bigint), UDFToLong(_col2) (type: bigint), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                  Statistics: Num rows: 1 Data size: 448 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 448 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            dt 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.test_part
          Write Type: INSERT

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: id
          Column Types: int
          Table: default.test_part

PREHOOK: query: ALTER TABLE test_part ADD PARTITION (dt='3')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@test_part
POSTHOOK: query: ALTER TABLE test_part ADD PARTITION (dt='3')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@test_part
POSTHOOK: Output: default@test_part@dt=3
PREHOOK: query: UPDATE test_part SET id = 2 WHERE dt = '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_part
PREHOOK: Input: default@test_part@dt=1
PREHOOK: Output: default@test_part
PREHOOK: Output: default@test_part@dt=1
POSTHOOK: query: UPDATE test_part SET id = 2 WHERE dt = '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_part
POSTHOOK: Input: default@test_part@dt=1
POSTHOOK: Output: default@test_part
POSTHOOK: Output: default@test_part@dt=1
POSTHOOK: Output: default@test_part@dt=1
POSTHOOK: Lineage: test_part PARTITION(dt=1).id SIMPLE []
PREHOOK: query: DELETE FROM test_part WHERE dt = '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_part
PREHOOK: Input: default@test_part@dt=1
PREHOOK: Output: default@test_part@dt=1
POSTHOOK: query: DELETE FROM test_part WHERE dt = '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_part
POSTHOOK: Input: default@test_part@dt=1
POSTHOOK: Output: default@test_part@dt=1
PREHOOK: query: CREATE TABLE test_part2(id int) PARTITIONED BY(dt string) STORED AS ORC TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_part2
POSTHOOK: query: CREATE TABLE test_part2(id int) PARTITIONED BY(dt string) STORED AS ORC TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_part2
PREHOOK: query: INSERT OVERWRITE TABLE test_part2 SELECT * FROM test_part
PREHOOK: type: QUERY
PREHOOK: Input: default@test_part
PREHOOK: Input: default@test_part@dt=1
PREHOOK: Input: default@test_part@dt=3
PREHOOK: Output: default@test_part2
POSTHOOK: query: INSERT OVERWRITE TABLE test_part2 SELECT * FROM test_part
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_part
POSTHOOK: Input: default@test_part@dt=1
POSTHOOK: Input: default@test_part@dt=3
POSTHOOK: Output: default@test_part2
PREHOOK: query: MERGE INTO test_part2 AS target USING test_part AS source ON source.id = target.id
WHEN MATCHED THEN UPDATE SET id=3
WHEN NOT MATCHED THEN INSERT VALUES (3, '4')
PREHOOK: type: QUERY
PREHOOK: Input: default@test_part
PREHOOK: Input: default@test_part2
PREHOOK: Input: default@test_part@dt=1
PREHOOK: Input: default@test_part@dt=3
PREHOOK: Output: default@merge_tmp_table
PREHOOK: Output: default@test_part2
PREHOOK: Output: default@test_part2
POSTHOOK: query: MERGE INTO test_part2 AS target USING test_part AS source ON source.id = target.id
WHEN MATCHED THEN UPDATE SET id=3
WHEN NOT MATCHED THEN INSERT VALUES (3, '4')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_part
POSTHOOK: Input: default@test_part2
POSTHOOK: Input: default@test_part@dt=1
POSTHOOK: Input: default@test_part@dt=3
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Output: default@test_part2
POSTHOOK: Output: default@test_part2
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(test_part2)test_part2.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), (test_part2)test_part2.FieldSchema(name:dt, type:string, comment:null), ]
PREHOOK: query: TRUNCATE TABLE test_part2
PREHOOK: type: TRUNCATETABLE
POSTHOOK: query: TRUNCATE TABLE test_part2
POSTHOOK: type: TRUNCATETABLE
PREHOOK: query: CREATE EXTERNAL TABLE test_iceberg(id int) PARTITIONED BY(dt string) STORED BY ICEBERG
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_iceberg
POSTHOOK: query: CREATE EXTERNAL TABLE test_iceberg(id int) PARTITIONED BY(dt string) STORED BY ICEBERG
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_iceberg
PREHOOK: query: INSERT INTO test_iceberg VALUES (1, '1')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test_iceberg
POSTHOOK: query: INSERT INTO test_iceberg VALUES (1, '1')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test_iceberg
PREHOOK: query: TRUNCATE TABLE test_iceberg
PREHOOK: type: TRUNCATETABLE
PREHOOK: Output: default@test_iceberg
POSTHOOK: query: TRUNCATE TABLE test_iceberg
POSTHOOK: type: TRUNCATETABLE
POSTHOOK: Output: default@test_iceberg
PREHOOK: query: CREATE DATABASE query_history_qtest_db
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:query_history_qtest_db
POSTHOOK: query: CREATE DATABASE query_history_qtest_db
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:query_history_qtest_db
PREHOOK: query: CREATE TABLE query_history_qtest_db.test_table(id int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:query_history_qtest_db
PREHOOK: Output: query_history_qtest_db@test_table
POSTHOOK: query: CREATE TABLE query_history_qtest_db.test_table(id int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:query_history_qtest_db
POSTHOOK: Output: query_history_qtest_db@test_table
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
information_schema
query_history_qtest_db
sys
PREHOOK: query: USE query_history_qtest_db
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:query_history_qtest_db
POSTHOOK: query: USE query_history_qtest_db
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:query_history_qtest_db
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:query_history_qtest_db
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:query_history_qtest_db
test_table
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: with test_part_with_alias as (select * from test_part) select * from test_part_with_alias
PREHOOK: type: QUERY
PREHOOK: Input: default@test_part
PREHOOK: Input: default@test_part@dt=1
PREHOOK: Input: default@test_part@dt=3
#### A masked pattern was here ####
POSTHOOK: query: with test_part_with_alias as (select * from test_part) select * from test_part_with_alias
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_part
POSTHOOK: Input: default@test_part@dt=1
POSTHOOK: Input: default@test_part@dt=3
#### A masked pattern was here ####
PREHOOK: query: SELECT concat(substr(sql, 0, 30), "..."), cluster_id, session_type, cluster_user, end_user, db_name, query_type, operation
FROM sys.query_history ORDER BY start_time
PREHOOK: type: QUERY
PREHOOK: Input: sys@query_history
#### A masked pattern was here ####
POSTHOOK: query: SELECT concat(substr(sql, 0, 30), "..."), cluster_id, session_type, cluster_user, end_user, db_name, query_type, operation
FROM sys.query_history ORDER BY start_time
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@query_history
#### A masked pattern was here ####




CREATE TABLE test_part(id ...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	CREATETABLE

SELECT * FROM test_part...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DQL	QUERY

SELECT * FROM test_part...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DQL	QUERY



INSERT INTO test_part VALUE...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DML	INSERT



ANALYZE TABLE test_part COM...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	STATS	QUERY

ANALYZE TABLE test_part COMPU...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	STATS	ANALYZE_TABLE



EXPLAIN SELECT * FROM test_...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DQL	EXPLAIN

EXPLAIN INSERT INTO test_part...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DQL	EXPLAIN



ALTER TABLE test_part ADD P...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	ALTERTABLE_ADDPARTS


UPDATE test_part SET id = 2 ...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DML	UPDATE

DELETE FROM test_part WHERE d...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DML	DELETE


CREATE TABLE test_part2(id i...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	CREATETABLE

INSERT OVERWRITE TABLE test_p...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DML	INSERT


MERGE INTO test_part2 AS tar...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DML	MERGE

TRUNCATE TABLE test_part2...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	TRUNCATETABLE



CREATE EXTERNAL TABLE test_...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	CREATETABLE

INSERT INTO test_iceberg VALU...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DML	INSERT

TRUNCATE TABLE test_iceberg...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	TRUNCATETABLE



CREATE DATABASE query_histo...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	CREATEDATABASE

CREATE TABLE query_history_qt...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	CREATETABLE



SHOW DATABASES...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	SHOWDATABASES

USE query_history_qtest_db...	hive-test-cluster-id-cli	OTHER	NULL	NULL	query_history_qtest_db	DDL	SWITCHDATABASE

SHOW TABLES...	hive-test-cluster-id-cli	OTHER	NULL	NULL	query_history_qtest_db	DDL	SHOWTABLES

USE default...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DDL	SWITCHDATABASE



with test_part_with_alias a...	hive-test-cluster-id-cli	OTHER	NULL	NULL	default	DQL	QUERY
PREHOOK: query: SELECT concat(substr(sql, 0, 30), "..."), server_address, server_port, client_address
FROM sys.query_history ORDER BY start_time
PREHOOK: type: QUERY
PREHOOK: Input: sys@query_history
#### A masked pattern was here ####
POSTHOOK: query: SELECT concat(substr(sql, 0, 30), "..."), server_address, server_port, client_address
FROM sys.query_history ORDER BY start_time
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@query_history
#### A masked pattern was here ####




CREATE TABLE test_part(id ...	localhost	0	NULL

SELECT * FROM test_part...	localhost	0	NULL

SELECT * FROM test_part...	localhost	0	NULL



INSERT INTO test_part VALUE...	localhost	0	NULL



ANALYZE TABLE test_part COM...	localhost	0	NULL

ANALYZE TABLE test_part COMPU...	localhost	0	NULL



EXPLAIN SELECT * FROM test_...	localhost	0	NULL

EXPLAIN INSERT INTO test_part...	localhost	0	NULL



ALTER TABLE test_part ADD P...	localhost	0	NULL


UPDATE test_part SET id = 2 ...	localhost	0	NULL

DELETE FROM test_part WHERE d...	localhost	0	NULL


CREATE TABLE test_part2(id i...	localhost	0	NULL

INSERT OVERWRITE TABLE test_p...	localhost	0	NULL


MERGE INTO test_part2 AS tar...	localhost	0	NULL

TRUNCATE TABLE test_part2...	localhost	0	NULL



CREATE EXTERNAL TABLE test_...	localhost	0	NULL

INSERT INTO test_iceberg VALU...	localhost	0	NULL

TRUNCATE TABLE test_iceberg...	localhost	0	NULL



CREATE DATABASE query_histo...	localhost	0	NULL

CREATE TABLE query_history_qt...	localhost	0	NULL



SHOW DATABASES...	localhost	0	NULL

USE query_history_qtest_db...	localhost	0	NULL

SHOW TABLES...	localhost	0	NULL

USE default...	localhost	0	NULL



with test_part_with_alias a...	localhost	0	NULL
PREHOOK: query: SELECT concat(substr(sql, 0, 30), "..."), failure_reason, num_rows_fetched, configuration_options_changed
FROM sys.query_history ORDER BY start_time
PREHOOK: type: QUERY
PREHOOK: Input: sys@query_history
#### A masked pattern was here ####
POSTHOOK: query: SELECT concat(substr(sql, 0, 30), "..."), failure_reason, num_rows_fetched, configuration_options_changed
FROM sys.query_history ORDER BY start_time
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@query_history
#### A masked pattern was here ####




CREATE TABLE test_part(id ...	NULL	0	

SELECT * FROM test_part...	NULL	0	hive.fetch.task.conversion=more

SELECT * FROM test_part...	NULL	0	hive.fetch.task.conversion=none



INSERT INTO test_part VALUE...	NULL	0	hive.fetch.task.conversion=none



ANALYZE TABLE test_part COM...	NULL	0	hive.fetch.task.conversion=none

ANALYZE TABLE test_part COMPU...	NULL	0	hive.fetch.task.conversion=none



EXPLAIN SELECT * FROM test_...	NULL	0	hive.fetch.task.conversion=none

EXPLAIN INSERT INTO test_part...	NULL	0	hive.fetch.task.conversion=none



ALTER TABLE test_part ADD P...	NULL	0	hive.fetch.task.conversion=none


UPDATE test_part SET id = 2 ...	NULL	0	hive.fetch.task.conversion=none

DELETE FROM test_part WHERE d...	NULL	0	hive.fetch.task.conversion=none


CREATE TABLE test_part2(id i...	NULL	0	hive.fetch.task.conversion=none

INSERT OVERWRITE TABLE test_p...	NULL	0	hive.fetch.task.conversion=none


MERGE INTO test_part2 AS tar...	NULL	0	hive.fetch.task.conversion=none

TRUNCATE TABLE test_part2...	NULL	0	hive.fetch.task.conversion=none



CREATE EXTERNAL TABLE test_...	NULL	0	hive.fetch.task.conversion=none

INSERT INTO test_iceberg VALU...	NULL	0	hive.fetch.task.conversion=none

TRUNCATE TABLE test_iceberg...	NULL	0	hive.fetch.task.conversion=none



CREATE DATABASE query_histo...	NULL	0	hive.fetch.task.conversion=none

CREATE TABLE query_history_qt...	NULL	0	hive.fetch.task.conversion=none



SHOW DATABASES...	NULL	4	hive.fetch.task.conversion=none

USE query_history_qtest_db...	NULL	0	hive.fetch.task.conversion=none

SHOW TABLES...	NULL	1	hive.fetch.task.conversion=none

USE default...	NULL	0	hive.fetch.task.conversion=none



with test_part_with_alias a...	NULL	0	hive.fetch.task.conversion=none
