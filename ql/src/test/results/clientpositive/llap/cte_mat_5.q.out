PREHOOK: query: create database mydb
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:mydb
POSTHOOK: query: create database mydb
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:mydb
PREHOOK: query: use mydb
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:mydb
POSTHOOK: query: use mydb
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:mydb
PREHOOK: query: create table q1 (colnum int, colstring string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:mydb
PREHOOK: Output: mydb@q1
POSTHOOK: query: create table q1 (colnum int, colstring string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:mydb
POSTHOOK: Output: mydb@q1
PREHOOK: query: insert into q1 values (5, 'A')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: mydb@q1
POSTHOOK: query: insert into q1 values (5, 'A')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: mydb@q1
POSTHOOK: Lineage: q1.colnum SCRIPT []
POSTHOOK: Lineage: q1.colstring SCRIPT []
PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: show tables in mydb
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:mydb
POSTHOOK: query: show tables in mydb
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:mydb
q1
PREHOOK: query: show tables
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: show tables
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
alltypesorc
alltypesparquet
cbo_t1
cbo_t2
cbo_t3
lineitem
part
src
src1
src_cbo
src_json
src_sequencefile
src_thrift
srcbucket
srcbucket2
srcpart
PREHOOK: query: explain
with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in Stage-4
Reducer 3 <- Map 2 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)

Stage-3
  Fetch Operator
    limit:-1
    Stage-4
      Reducer 3 llap
      File Output Operator [FS_18]
        Merge Join Operator [MERGEJOIN_23] (rows=1 width=4)
          Conds:RS_26.UDFToDouble(_col0)=RS_29.UDFToDouble(_col0)(Inner),Output:["_col0"]
        <-Map 2 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_26]
            PartitionCols:UDFToDouble(_col0)
            Select Operator [SEL_25] (rows=1 width=4)
              Output:["_col0"]
              Filter Operator [FIL_24] (rows=1 width=4)
                predicate:colnum is not null
                TableScan [TS_8] (rows=1 width=4)
                  mydb@q1,a,Tbl:COMPLETE,Col:COMPLETE,Output:["colnum"]
        <-Map 4 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_29]
            PartitionCols:UDFToDouble(_col0)
            Select Operator [SEL_28] (rows=1 width=184)
              Output:["_col0"]
              Filter Operator [FIL_27] (rows=1 width=184)
                predicate:key is not null
                TableScan [TS_11] (rows=1 width=184)
                  default@q1,b,Tbl:COMPLETE,Col:NONE,Output:["key"]
        Stage-2
          Dependency Collection{}
            Stage-1
              Map 1 vectorized, llap
              File Output Operator [FS_7]
                table:{"name:":"default.q1"}
                Select Operator [SEL_6] (rows=2 width=176)
                  Output:["_col0","_col1"]
                  Filter Operator [FIL_5] (rows=2 width=178)
                    predicate:(key = '5')
                    TableScan [TS_0] (rows=500 width=178)
                      default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
        Stage-0
          Move Operator
             Please refer to the previous Stage-1

PREHOOK: query: with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@q1
PREHOOK: Input: default@src
PREHOOK: Input: mydb@q1
PREHOOK: Output: database:default
PREHOOK: Output: default@q1
#### A masked pattern was here ####
POSTHOOK: query: with q1 as (select * from src where key= '5')
select a.colnum
from mydb.q1 as a join q1 as b
on a.colnum=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@q1
POSTHOOK: Input: default@src
POSTHOOK: Input: mydb@q1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@q1
#### A masked pattern was here ####
5
5
5
