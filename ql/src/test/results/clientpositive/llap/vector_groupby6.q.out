PREHOOK: query: CREATE TABLE srcorc_n0 STORED AS ORC AS SELECT * FROM src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@srcorc_n0
POSTHOOK: query: CREATE TABLE srcorc_n0 STORED AS ORC AS SELECT * FROM src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcorc_n0
POSTHOOK: Lineage: srcorc_n0.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcorc_n0.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: CREATE TABLE dest1_n73(c1 STRING) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1_n73
POSTHOOK: query: CREATE TABLE dest1_n73(c1 STRING) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1_n73
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
FROM srcorc_n0
INSERT OVERWRITE TABLE dest1_n73 SELECT DISTINCT substr(srcorc_n0.value,5,1)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcorc_n0
PREHOOK: Output: default@dest1_n73
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
FROM srcorc_n0
INSERT OVERWRITE TABLE dest1_n73 SELECT DISTINCT substr(srcorc_n0.value,5,1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcorc_n0
POSTHOOK: Output: default@dest1_n73
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcorc_n0
                  Statistics: Num rows: 500 Data size: 87584 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                  Select Operator
                    expressions: substr(value, 5, 1) (type: string)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [3]
                        selectExpressions: StringSubstrColStartLen(col 1:string, start 4, length 1) -> 3:string
                    Statistics: Num rows: 500 Data size: 87584 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Map-reduce partition columns: rand() (type: double)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkObjectHashOperator
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 500 Data size: 87584 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
              Group By Operator
                Group By Vectorization:
                    className: VectorGroupByOperator
                    groupByMode: PARTIAL1
                    keyExpressions: col 0:string
                    native: false
                    vectorProcessingMode: STREAMING
                    projectedOutputColumnNums: []
                keys: KEY._col0 (type: string)
                mode: partial1
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 87584 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkStringOperator
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                  Statistics: Num rows: 500 Data size: 87584 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
              Group By Operator
                Group By Vectorization:
                    className: VectorGroupByOperator
                    groupByMode: FINAL
                    keyExpressions: col 0:string
                    native: false
                    vectorProcessingMode: STREAMING
                    projectedOutputColumnNums: []
                keys: KEY._col0 (type: string)
                mode: final
                outputColumnNames: _col0
                Statistics: Num rows: 250 Data size: 43792 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 250 Data size: 43792 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.dest1_n73
                Select Operator
                  expressions: _col0 (type: string)
                  outputColumnNames: c1
                  Select Vectorization:
                      className: VectorSelectOperator
                      native: true
                      projectedOutputColumnNums: [0]
                  Statistics: Num rows: 250 Data size: 43792 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Map-reduce partition columns: rand() (type: double)
                    Reduce Sink Vectorization:
                        className: VectorReduceSinkObjectHashOperator
                        native: true
                        nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    Statistics: Num rows: 250 Data size: 43792 Basic stats: COMPLETE Column stats: NONE
                    value expressions: c1 (type: string)
        Reducer 4 
            Execution mode: llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                notVectorizedReason: Aggregation Function expression for GROUPBY operator: UDF compute_stats not supported
                vectorized: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: compute_stats(VALUE._col0, 'hll')
                mode: partial1
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 624 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1 Data size: 624 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
        Reducer 5 
            Execution mode: llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                notVectorizedReason: Aggregation Function expression for GROUPBY operator: UDF compute_stats not supported
                vectorized: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: compute_stats(VALUE._col0)
                mode: final
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 624 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 624 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.dest1_n73

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1
          Column Types: string
          Table: default.dest1_n73

PREHOOK: query: FROM srcorc_n0
INSERT OVERWRITE TABLE dest1_n73 SELECT DISTINCT substr(srcorc_n0.value,5,1)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcorc_n0
PREHOOK: Output: default@dest1_n73
POSTHOOK: query: FROM srcorc_n0
INSERT OVERWRITE TABLE dest1_n73 SELECT DISTINCT substr(srcorc_n0.value,5,1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcorc_n0
POSTHOOK: Output: default@dest1_n73
POSTHOOK: Lineage: dest1_n73.c1 EXPRESSION [(srcorc_n0)srcorc_n0.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT dest1_n73.* FROM dest1_n73
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n73
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1_n73.* FROM dest1_n73
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n73
#### A masked pattern was here ####
0
1
2
3
4
5
6
7
8
9
