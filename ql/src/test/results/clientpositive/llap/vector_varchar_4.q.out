PREHOOK: query: drop table if exists vectortab2k_n1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists vectortab2k_n1
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists vectortab2korc_n1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists vectortab2korc_n1
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table vectortab2k_n1(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2k_n1
POSTHOOK: query: create table vectortab2k_n1(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2k_n1
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab2k' OVERWRITE INTO TABLE vectortab2k_n1
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@vectortab2k_n1
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab2k' OVERWRITE INTO TABLE vectortab2k_n1
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@vectortab2k_n1
PREHOOK: query: create table vectortab2korc_n1(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2korc_n1
POSTHOOK: query: create table vectortab2korc_n1(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2korc_n1
PREHOOK: query: INSERT INTO TABLE vectortab2korc_n1 SELECT * FROM vectortab2k_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_n1
PREHOOK: Output: default@vectortab2korc_n1
POSTHOOK: query: INSERT INTO TABLE vectortab2korc_n1 SELECT * FROM vectortab2k_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_n1
POSTHOOK: Output: default@vectortab2korc_n1
POSTHOOK: Lineage: vectortab2korc_n1.b SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.bo SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.d SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:d, type:double, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.dc SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:dc, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.dt SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:dt, type:date, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.f SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:f, type:float, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.i SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.s SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:s, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.s2 SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:s2, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.si SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.t SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.ts SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:ts, type:timestamp, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n1.ts2 SIMPLE [(vectortab2k_n1)vectortab2k_n1.FieldSchema(name:ts2, type:timestamp, comment:null), ]
PREHOOK: query: drop table if exists varchar_lazy_binary_columnar
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists varchar_lazy_binary_columnar
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table varchar_lazy_binary_columnar(vt varchar(10), vsi varchar(10), vi varchar(20), vb varchar(30), vf varchar(20),vd varchar(20),vs varchar(50)) row format serde 'org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe' stored as rcfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@varchar_lazy_binary_columnar
POSTHOOK: query: create table varchar_lazy_binary_columnar(vt varchar(10), vsi varchar(10), vi varchar(20), vb varchar(30), vf varchar(20),vd varchar(20),vs varchar(50)) row format serde 'org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe' stored as rcfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@varchar_lazy_binary_columnar
PREHOOK: query: explain vectorization expression
insert overwrite table varchar_lazy_binary_columnar select t, si, i, b, f, d, s from vectortab2korc_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization expression
insert overwrite table varchar_lazy_binary_columnar select t, si, i, b, f, d, s from vectortab2korc_n1
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: vectortab2korc_n1
                  Statistics: Num rows: 2000 Data size: 410616 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                  Select Operator
                    expressions: CAST( t AS varchar(10)) (type: varchar(10)), CAST( si AS varchar(10)) (type: varchar(10)), CAST( i AS varchar(20)) (type: varchar(20)), CAST( b AS varchar(30)) (type: varchar(30)), CAST( f AS varchar(20)) (type: varchar(20)), CAST( d AS varchar(20)) (type: varchar(20)), CAST( s AS varchar(50)) (type: varchar(50))
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [14, 15, 16, 17, 18, 19, 20]
                        selectExpressions: CastLongToVarChar(col 0:tinyint, maxLength 10) -> 14:varchar(10), CastLongToVarChar(col 1:smallint, maxLength 10) -> 15:varchar(10), CastLongToVarChar(col 2:int, maxLength 20) -> 16:varchar(20), CastLongToVarChar(col 3:bigint, maxLength 30) -> 17:varchar(30), CastFloatToVarChar(col 4:float, maxLength 20) -> 18:varchar(20), CastDoubleToVarChar(col 5:double, maxLength 20) -> 19:varchar(20), CastStringGroupToVarChar(col 8:string, maxLength 50) -> 20:varchar(50)
                    Statistics: Num rows: 2000 Data size: 410616 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 2000 Data size: 410616 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.RCFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe
                          name: default.varchar_lazy_binary_columnar
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.RCFileOutputFormat
              serde: org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe
              name: default.varchar_lazy_binary_columnar

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

