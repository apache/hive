PREHOOK: query: DROP TABLE IF EXISTS DECIMAL_UDF_txt
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS DECIMAL_UDF_txt
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS DECIMAL_UDF
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS DECIMAL_UDF
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE DECIMAL_UDF_txt (key decimal(20,10), value int)
ROW FORMAT DELIMITED
   FIELDS TERMINATED BY ' '
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DECIMAL_UDF_txt
POSTHOOK: query: CREATE TABLE DECIMAL_UDF_txt (key decimal(20,10), value int)
ROW FORMAT DELIMITED
   FIELDS TERMINATED BY ' '
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DECIMAL_UDF_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv7.txt' INTO TABLE DECIMAL_UDF_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@decimal_udf_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv7.txt' INTO TABLE DECIMAL_UDF_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@decimal_udf_txt
PREHOOK: query: CREATE TABLE DECIMAL_UDF (key decimal(20,10), value int)
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DECIMAL_UDF
POSTHOOK: query: CREATE TABLE DECIMAL_UDF (key decimal(20,10), value int)
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DECIMAL_UDF
PREHOOK: query: INSERT OVERWRITE TABLE DECIMAL_UDF SELECT * FROM DECIMAL_UDF_txt
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf_txt
PREHOOK: Output: default@decimal_udf
POSTHOOK: query: INSERT OVERWRITE TABLE DECIMAL_UDF SELECT * FROM DECIMAL_UDF_txt
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf_txt
POSTHOOK: Output: default@decimal_udf
POSTHOOK: Lineage: decimal_udf.key SIMPLE [(decimal_udf_txt)decimal_udf_txt.FieldSchema(name:key, type:decimal(20,10), comment:null), ]
POSTHOOK: Lineage: decimal_udf.value SIMPLE [(decimal_udf_txt)decimal_udf_txt.FieldSchema(name:value, type:int, comment:null), ]
PREHOOK: query: EXPLAIN SELECT key + key FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key + key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (key + key) (type: decimal(21,10))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key + key FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key + key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-8800.0000000000
NULL
0.0000000000
0.0000000000
200.0000000000
20.0000000000
2.0000000000
0.2000000000
0.0200000000
400.0000000000
40.0000000000
4.0000000000
0.0000000000
0.4000000000
0.0400000000
0.6000000000
0.6600000000
0.6660000000
-0.6000000000
-0.6600000000
-0.6660000000
2.0000000000
4.0000000000
6.2800000000
-2.2400000000
-2.2400000000
-2.2440000000
2.2400000000
2.2440000000
248.0000000000
250.4000000000
-2510.9800000000
6.2800000000
6.2800000000
6.2800000000
2.0000000000
-2469135780.2469135780
2469135780.2469135600
PREHOOK: query: EXPLAIN SELECT key + value FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key + value FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (key + CAST( value AS decimal(10,0))) (type: decimal(21,10))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key + value FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key + value FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
0.0000000000
NULL
0.0000000000
0.0000000000
200.0000000000
20.0000000000
2.0000000000
0.1000000000
0.0100000000
400.0000000000
40.0000000000
4.0000000000
0.0000000000
0.2000000000
0.0200000000
0.3000000000
0.3300000000
0.3330000000
-0.3000000000
-0.3300000000
-0.3330000000
2.0000000000
4.0000000000
6.1400000000
-2.1200000000
-2.1200000000
-12.1220000000
2.1200000000
2.1220000000
248.0000000000
250.2000000000
-2510.4900000000
6.1400000000
6.1400000000
7.1400000000
2.0000000000
-2469135780.1234567890
2469135780.1234567800
PREHOOK: query: EXPLAIN SELECT key + (value/2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key + (value/2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (UDFToDouble(key) + (UDFToDouble(value) / 2.0)) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key + (value/2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key + (value/2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-2200.0
NULL
0.0
0.0
150.0
15.0
1.5
0.1
0.01
300.0
30.0
3.0
0.0
0.2
0.02
0.3
0.33
0.333
-0.3
-0.33
-0.333
1.5
3.0
4.640000000000001
-1.62
-1.62
-6.622
1.62
1.622
186.0
187.7
-1882.99
4.640000000000001
4.640000000000001
5.140000000000001
1.5
-1.8518518351234567E9
1.8518518351234567E9
PREHOOK: query: EXPLAIN SELECT key + '1.0' FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key + '1.0' FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (UDFToDouble(key) + 1.0) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key + '1.0' FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key + '1.0' FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-4399.0
NULL
1.0
1.0
101.0
11.0
2.0
1.1
1.01
201.0
21.0
3.0
1.0
1.2
1.02
1.3
1.33
1.333
0.7
0.6699999999999999
0.667
2.0
3.0
4.140000000000001
-0.1200000000000001
-0.1200000000000001
-0.12200000000000011
2.12
2.122
125.0
126.2
-1254.49
4.140000000000001
4.140000000000001
4.140000000000001
2.0
-1.2345678891234567E9
1.2345678911234567E9
PREHOOK: query: EXPLAIN SELECT key - key FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key - key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (key - key) (type: decimal(21,10))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key - key FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key - key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
0.0000000000
NULL
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
PREHOOK: query: EXPLAIN SELECT key - value FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key - value FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (key - CAST( value AS decimal(10,0))) (type: decimal(21,10))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key - value FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key - value FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-8800.0000000000
NULL
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.1000000000
0.0100000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.2000000000
0.0200000000
0.3000000000
0.3300000000
0.3330000000
-0.3000000000
-0.3300000000
-0.3330000000
0.0000000000
0.0000000000
0.1400000000
-0.1200000000
-0.1200000000
9.8780000000
0.1200000000
0.1220000000
0.0000000000
0.2000000000
-0.4900000000
0.1400000000
0.1400000000
-0.8600000000
0.0000000000
-0.1234567890
0.1234567800
PREHOOK: query: EXPLAIN SELECT key - (value/2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key - (value/2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (UDFToDouble(key) - (UDFToDouble(value) / 2.0)) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key - (value/2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key - (value/2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-6600.0
NULL
0.0
0.0
50.0
5.0
0.5
0.1
0.01
100.0
10.0
1.0
0.0
0.2
0.02
0.3
0.33
0.333
-0.3
-0.33
-0.333
0.5
1.0
1.6400000000000001
-0.6200000000000001
-0.6200000000000001
4.378
0.6200000000000001
0.6220000000000001
62.0
62.7
-627.99
1.6400000000000001
1.6400000000000001
1.1400000000000001
0.5
-6.172839451234567E8
6.172839451234567E8
PREHOOK: query: EXPLAIN SELECT key - '1.0' FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key - '1.0' FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (UDFToDouble(key) - 1.0) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key - '1.0' FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key - '1.0' FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-4401.0
NULL
-1.0
-1.0
99.0
9.0
0.0
-0.9
-0.99
199.0
19.0
1.0
-1.0
-0.8
-0.98
-0.7
-0.6699999999999999
-0.667
-1.3
-1.33
-1.333
0.0
1.0
2.14
-2.12
-2.12
-2.122
0.1200000000000001
0.12200000000000011
123.0
124.2
-1256.49
2.14
2.14
2.14
0.0
-1.2345678911234567E9
1.2345678891234567E9
PREHOOK: query: EXPLAIN SELECT key * key FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key * key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (key * key) (type: decimal(38,17))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key * key FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key * key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
19360000.00000000000000000
NULL
0.00000000000000000
0.00000000000000000
10000.00000000000000000
100.00000000000000000
1.00000000000000000
0.01000000000000000
0.00010000000000000
40000.00000000000000000
400.00000000000000000
4.00000000000000000
0.00000000000000000
0.04000000000000000
0.00040000000000000
0.09000000000000000
0.10890000000000000
0.11088900000000000
0.09000000000000000
0.10890000000000000
0.11088900000000000
1.00000000000000000
4.00000000000000000
9.85960000000000000
1.25440000000000000
1.25440000000000000
1.25888400000000000
1.25440000000000000
1.25888400000000000
15376.00000000000000000
15675.04000000000000000
1576255.14010000000000000
9.85960000000000000
9.85960000000000000
9.85960000000000000
1.00000000000000000
1524157875323883675.01905199875019052
1524157875323883652.79682997652796840
PREHOOK: query: EXPLAIN SELECT key, value FROM DECIMAL_UDF where key * value > 0
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key, value FROM DECIMAL_UDF where key * value > 0
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key * CAST( value AS decimal(10,0))) > 0) (type: boolean)
                    Statistics: Num rows: 12 Data size: 1356 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: decimal(20,10)), value (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 12 Data size: 1356 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 12 Data size: 1356 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key, value FROM DECIMAL_UDF where key * value > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key, value FROM DECIMAL_UDF where key * value > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
100.0000000000	100
10.0000000000	10
1.0000000000	1
200.0000000000	200
20.0000000000	20
2.0000000000	2
1.0000000000	1
2.0000000000	2
3.1400000000	3
-1.1200000000	-1
-1.1200000000	-1
-1.1220000000	-11
1.1200000000	1
1.1220000000	1
124.0000000000	124
125.2000000000	125
-1255.4900000000	-1255
3.1400000000	3
3.1400000000	3
3.1400000000	4
1.0000000000	1
-1234567890.1234567890	-1234567890
1234567890.1234567800	1234567890
PREHOOK: query: EXPLAIN SELECT key * value FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key * value FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (key * CAST( value AS decimal(10,0))) (type: decimal(31,10))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key * value FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key * value FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-19360000.0000000000
NULL
0.0000000000
0.0000000000
10000.0000000000
100.0000000000
1.0000000000
0.0000000000
0.0000000000
40000.0000000000
400.0000000000
4.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
0.0000000000
1.0000000000
4.0000000000
9.4200000000
1.1200000000
1.1200000000
12.3420000000
1.1200000000
1.1220000000
15376.0000000000
15650.0000000000
1575639.9500000000
9.4200000000
9.4200000000
12.5600000000
1.0000000000
1524157875171467887.5019052100
1524157875171467876.3907942000
PREHOOK: query: EXPLAIN SELECT key * (value/2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key * (value/2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (UDFToDouble(key) * (UDFToDouble(value) / 2.0)) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key * (value/2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key * (value/2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-9680000.0
NULL
0.0
0.0
5000.0
50.0
0.5
0.0
0.0
20000.0
200.0
2.0
0.0
0.0
0.0
0.0
0.0
0.0
-0.0
-0.0
-0.0
0.5
2.0
4.71
0.56
0.56
6.171
0.56
0.561
7688.0
7825.0
787819.975
4.71
4.71
6.28
0.5
7.6207893758573389E17
7.6207893758573389E17
PREHOOK: query: EXPLAIN SELECT key * '2.0' FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key * '2.0' FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (UDFToDouble(key) * 2.0) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key * '2.0' FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key * '2.0' FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-8800.0
NULL
0.0
0.0
200.0
20.0
2.0
0.2
0.02
400.0
40.0
4.0
0.0
0.4
0.04
0.6
0.66
0.666
-0.6
-0.66
-0.666
2.0
4.0
6.28
-2.24
-2.24
-2.244
2.24
2.244
248.0
250.4
-2510.98
6.28
6.28
6.28
2.0
-2.4691357802469134E9
2.4691357802469134E9
PREHOOK: query: EXPLAIN SELECT key / 0 FROM DECIMAL_UDF limit 1
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key / 0 FROM DECIMAL_UDF limit 1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (key / 0) (type: decimal(22,12))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Limit
                      Number of rows: 1
                      Statistics: Num rows: 1 Data size: 113 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 1 Data size: 113 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key / 0 FROM DECIMAL_UDF limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key / 0 FROM DECIMAL_UDF limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
NULL
PREHOOK: query: EXPLAIN SELECT key / NULL FROM DECIMAL_UDF limit 1
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key / NULL FROM DECIMAL_UDF limit 1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (UDFToDouble(key) / null) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Limit
                      Number of rows: 1
                      Statistics: Num rows: 1 Data size: 113 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 1 Data size: 113 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key / NULL FROM DECIMAL_UDF limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key / NULL FROM DECIMAL_UDF limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
NULL
PREHOOK: query: EXPLAIN SELECT key / key FROM DECIMAL_UDF WHERE key is not null and key <> 0
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key / key FROM DECIMAL_UDF WHERE key is not null and key <> 0
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key <> 0) (type: boolean)
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: (key / key) (type: decimal(38,18))
                      outputColumnNames: _col0
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key / key FROM DECIMAL_UDF WHERE key is not null and key <> 0
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key / key FROM DECIMAL_UDF WHERE key is not null and key <> 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
1.000000000000000000
PREHOOK: query: EXPLAIN SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (value <> 0) (type: boolean)
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: (key / CAST( value AS decimal(10,0))) (type: decimal(31,21))
                      outputColumnNames: _col0
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-1.000000000000000000000
1.000000000000000000000
1.000000000000000000000
1.000000000000000000000
1.000000000000000000000
1.000000000000000000000
1.000000000000000000000
1.000000000000000000000
1.000000000000000000000
1.046666666666666666667
1.120000000000000000000
1.120000000000000000000
0.102000000000000000000
1.120000000000000000000
1.122000000000000000000
1.000000000000000000000
1.001600000000000000000
1.000390438247011952191
1.046666666666666666667
1.046666666666666666667
0.785000000000000000000
1.000000000000000000000
1.000000000100000000000
1.000000000099999992710
PREHOOK: query: EXPLAIN SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (value <> 0) (type: boolean)
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: (UDFToDouble(key) / (UDFToDouble(value) / 2.0)) (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0933333333333333
2.24
2.24
0.20400000000000001
2.24
2.244
2.0
2.0032
2.000780876494024
2.0933333333333333
2.0933333333333333
1.57
2.0
2.0000000002
2.0000000002
PREHOOK: query: EXPLAIN SELECT 1 + (key / '2.0') FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT 1 + (key / '2.0') FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (1.0 + (UDFToDouble(key) / 2.0)) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT 1 + (key / '2.0') FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT 1 + (key / '2.0') FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-2199.0
NULL
1.0
1.0
51.0
6.0
1.5
1.05
1.005
101.0
11.0
2.0
1.0
1.1
1.01
1.15
1.165
1.1665
0.85
0.835
0.8335
1.5
2.0
2.5700000000000003
0.43999999999999995
0.43999999999999995
0.43899999999999995
1.56
1.561
63.0
63.6
-626.745
2.5700000000000003
2.5700000000000003
2.5700000000000003
1.5
-6.172839440617284E8
6.172839460617284E8
PREHOOK: query: EXPLAIN SELECT abs(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT abs(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: abs(key) (type: decimal(20,10))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT abs(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT abs(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
4400.0000000000
NULL
0.0000000000
0.0000000000
100.0000000000
10.0000000000
1.0000000000
0.1000000000
0.0100000000
200.0000000000
20.0000000000
2.0000000000
0.0000000000
0.2000000000
0.0200000000
0.3000000000
0.3300000000
0.3330000000
0.3000000000
0.3300000000
0.3330000000
1.0000000000
2.0000000000
3.1400000000
1.1200000000
1.1200000000
1.1220000000
1.1200000000
1.1220000000
124.0000000000
125.2000000000
1255.4900000000
3.1400000000
3.1400000000
3.1400000000
1.0000000000
1234567890.1234567890
1234567890.1234567800
PREHOOK: query: EXPLAIN SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: decimal(20,10)), value (type: int)
                    outputColumnNames: key, value
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: sum(key), count(key), avg(key)
                      keys: value (type: int)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: decimal(30,10)), _col2 (type: bigint), _col3 (type: struct<count:bigint,sum:decimal(30,10),input:decimal(20,10)>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1), avg(VALUE._col2)
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 19 Data size: 2148 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), (_col1 / CAST( _col2 AS decimal(19,0))) (type: decimal(38,18)), _col3 (type: decimal(24,14)), _col1 (type: decimal(30,10))
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 19 Data size: 2148 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    sort order: +
                    Statistics: Num rows: 19 Data size: 2148 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: decimal(38,18)), _col2 (type: decimal(24,14)), _col3 (type: decimal(30,10))
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: decimal(38,18)), VALUE._col1 (type: decimal(24,14)), VALUE._col2 (type: decimal(30,10))
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 19 Data size: 2148 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 19 Data size: 2148 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-1234567890	-1234567890.123456789000000000	-1234567890.12345678900000	-1234567890.1234567890
-1255	-1255.490000000000000000	-1255.49000000000000	-1255.4900000000
-11	-1.122000000000000000	-1.12200000000000	-1.1220000000
-1	-1.120000000000000000	-1.12000000000000	-2.2400000000
0	0.025384615384615385	0.02538461538462	0.3300000000
1	1.048400000000000000	1.04840000000000	5.2420000000
2	2.000000000000000000	2.00000000000000	4.0000000000
3	3.140000000000000000	3.14000000000000	9.4200000000
4	3.140000000000000000	3.14000000000000	3.1400000000
10	10.000000000000000000	10.00000000000000	10.0000000000
20	20.000000000000000000	20.00000000000000	20.0000000000
100	100.000000000000000000	100.00000000000000	100.0000000000
124	124.000000000000000000	124.00000000000000	124.0000000000
125	125.200000000000000000	125.20000000000000	125.2000000000
200	200.000000000000000000	200.00000000000000	200.0000000000
4400	-4400.000000000000000000	-4400.00000000000000	-4400.0000000000
1234567890	1234567890.123456780000000000	1234567890.12345678000000	1234567890.1234567800
PREHOOK: query: EXPLAIN SELECT -key FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT -key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (- key) (type: decimal(20,10))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT -key FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT -key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
4400.0000000000
NULL
0.0000000000
0.0000000000
-100.0000000000
-10.0000000000
-1.0000000000
-0.1000000000
-0.0100000000
-200.0000000000
-20.0000000000
-2.0000000000
0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
0.3000000000
0.3300000000
0.3330000000
-1.0000000000
-2.0000000000
-3.1400000000
1.1200000000
1.1200000000
1.1220000000
-1.1200000000
-1.1220000000
-124.0000000000
-125.2000000000
1255.4900000000
-3.1400000000
-3.1400000000
-3.1400000000
-1.0000000000
1234567890.1234567890
-1234567890.1234567800
PREHOOK: query: EXPLAIN SELECT +key FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT +key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: decimal_udf
          Select Operator
            expressions: key (type: decimal(20,10))
            outputColumnNames: _col0
            ListSink

PREHOOK: query: SELECT +key FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT +key FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-4400.0000000000
NULL
0.0000000000
0.0000000000
100.0000000000
10.0000000000
1.0000000000
0.1000000000
0.0100000000
200.0000000000
20.0000000000
2.0000000000
0.0000000000
0.2000000000
0.0200000000
0.3000000000
0.3300000000
0.3330000000
-0.3000000000
-0.3300000000
-0.3330000000
1.0000000000
2.0000000000
3.1400000000
-1.1200000000
-1.1200000000
-1.1220000000
1.1200000000
1.1220000000
124.0000000000
125.2000000000
-1255.4900000000
3.1400000000
3.1400000000
3.1400000000
1.0000000000
-1234567890.1234567890
1234567890.1234567800
PREHOOK: query: EXPlAIN SELECT CEIL(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPlAIN SELECT CEIL(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ceil(key) (type: decimal(11,0))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT CEIL(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT CEIL(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-4400
NULL
0
0
100
10
1
1
1
200
20
2
0
1
1
1
1
1
0
0
0
1
2
4
-1
-1
-1
2
2
124
126
-1255
4
4
4
1
-1234567890
1234567891
PREHOOK: query: EXPLAIN SELECT FLOOR(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT FLOOR(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: floor(key) (type: decimal(11,0))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT FLOOR(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT FLOOR(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-4400
NULL
0
0
100
10
1
0
0
200
20
2
0
0
0
0
0
0
-1
-1
-1
1
2
3
-2
-2
-2
1
1
124
125
-1256
3
3
3
1
-1234567891
1234567890
PREHOOK: query: EXPLAIN SELECT ROUND(key, 2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT ROUND(key, 2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: round(key, 2) (type: decimal(13,2))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT ROUND(key, 2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT ROUND(key, 2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-4400.00
NULL
0.00
0.00
100.00
10.00
1.00
0.10
0.01
200.00
20.00
2.00
0.00
0.20
0.02
0.30
0.33
0.33
-0.30
-0.33
-0.33
1.00
2.00
3.14
-1.12
-1.12
-1.12
1.12
1.12
124.00
125.20
-1255.49
3.14
3.14
3.14
1.00
-1234567890.12
1234567890.12
PREHOOK: query: EXPLAIN SELECT POWER(key, 2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT POWER(key, 2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: power(key, 2) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT POWER(key, 2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT POWER(key, 2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
1.936E7
NULL
0.0
0.0
10000.0
100.0
1.0
0.010000000000000002
1.0E-4
40000.0
400.0
4.0
0.0
0.04000000000000001
4.0E-4
0.09
0.10890000000000001
0.11088900000000002
0.09
0.10890000000000001
0.11088900000000002
1.0
4.0
9.8596
1.2544000000000002
1.2544000000000002
1.2588840000000003
1.2544000000000002
1.2588840000000003
15376.0
15675.04
1576255.1401
9.8596
9.8596
9.8596
1.0
1.52415787532388352E18
1.52415787532388352E18
PREHOOK: query: EXPLAIN SELECT (key + 1) % (key / 2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT (key + 1) % (key / 2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ((key + 1) % (key / 2)) (type: decimal(22,12))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT (key + 1) % (key / 2) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT (key + 1) % (key / 2) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-2199.000000000000
NULL
NULL
NULL
1.000000000000
1.000000000000
0.000000000000
0.000000000000
0.000000000000
1.000000000000
1.000000000000
0.000000000000
NULL
0.000000000000
0.000000000000
0.100000000000
0.010000000000
0.001000000000
0.100000000000
0.010000000000
0.001000000000
0.000000000000
0.000000000000
1.000000000000
-0.120000000000
-0.120000000000
-0.122000000000
0.440000000000
0.439000000000
1.000000000000
1.000000000000
-626.745000000000
1.000000000000
1.000000000000
1.000000000000
0.000000000000
-617283944.061728394500
1.000000000000
PREHOOK: query: EXPLAIN SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: decimal(20,10)), value (type: int)
                    outputColumnNames: key, value
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: stddev(key), variance(key)
                      keys: value (type: int)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: struct<count:bigint,sum:double,variance:double>), _col2 (type: struct<count:bigint,sum:double,variance:double>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: stddev(VALUE._col0), variance(VALUE._col1)
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 19 Data size: 2148 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 19 Data size: 2148 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
4	0.0	0.0
-1234567890	0.0	0.0
0	0.22561046704494161	0.050900082840236685
1	0.05928102563215321	0.0035142400000000066
2	0.0	0.0
3	0.0	0.0
124	0.0	0.0
200	0.0	0.0
4400	0.0	0.0
1234567890	0.0	0.0
10	0.0	0.0
125	0.0	0.0
-1255	0.0	0.0
-11	0.0	0.0
-1	0.0	0.0
20	0.0	0.0
100	0.0	0.0
PREHOOK: query: EXPLAIN SELECT value, stddev_samp(key), var_samp(key) FROM DECIMAL_UDF GROUP BY value
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT value, stddev_samp(key), var_samp(key) FROM DECIMAL_UDF GROUP BY value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: decimal(20,10)), value (type: int)
                    outputColumnNames: key, value
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: stddev_samp(key), var_samp(key)
                      keys: value (type: int)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: struct<count:bigint,sum:double,variance:double>), _col2 (type: struct<count:bigint,sum:double,variance:double>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: stddev_samp(VALUE._col0), var_samp(VALUE._col1)
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 19 Data size: 2148 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 19 Data size: 2148 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT value, stddev_samp(key), var_samp(key) FROM DECIMAL_UDF GROUP BY value
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT value, stddev_samp(key), var_samp(key) FROM DECIMAL_UDF GROUP BY value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
4	0.0	0.0
-1234567890	0.0	0.0
0	0.2348228191855647	0.055141756410256405
1	0.06627820154470102	0.004392800000000008
2	0.0	0.0
3	0.0	0.0
124	0.0	0.0
200	0.0	0.0
4400	0.0	0.0
1234567890	0.0	0.0
10	0.0	0.0
125	0.0	0.0
-1255	0.0	0.0
-11	0.0	0.0
-1	0.0	0.0
20	0.0	0.0
100	0.0	0.0
PREHOOK: query: EXPLAIN SELECT histogram_numeric(key, 3) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT histogram_numeric(key, 3) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: decimal(20,10))
                    outputColumnNames: _col0
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: histogram_numeric(_col0, 3)
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 160 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 1 Data size: 160 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: array<double>)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: histogram_numeric(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT histogram_numeric(key, 3) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT histogram_numeric(key, 3) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
[{"x":-1.2345678901234567E9,"y":1.0},{"x":-144.50057142857142,"y":35.0},{"x":1.2345678901234567E9,"y":1.0}]
PREHOOK: query: EXPLAIN SELECT MIN(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT MIN(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: decimal(20,10))
                    outputColumnNames: key
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: min(key)
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: decimal(20,10))
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT MIN(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT MIN(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
-1234567890.1234567890
PREHOOK: query: EXPLAIN SELECT MAX(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT MAX(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: decimal(20,10))
                    outputColumnNames: key
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: max(key)
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: decimal(20,10))
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT MAX(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT MAX(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
1234567890.1234567800
PREHOOK: query: EXPLAIN SELECT COUNT(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN SELECT COUNT(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: decimal_udf
                  Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: decimal(20,10))
                    outputColumnNames: key
                    Statistics: Num rows: 38 Data size: 4296 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count(key)
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT COUNT(key) FROM DECIMAL_UDF
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
POSTHOOK: query: SELECT COUNT(key) FROM DECIMAL_UDF
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_udf
#### A masked pattern was here ####
37
PREHOOK: query: DROP TABLE IF EXISTS DECIMAL_UDF_txt
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@decimal_udf_txt
PREHOOK: Output: default@decimal_udf_txt
POSTHOOK: query: DROP TABLE IF EXISTS DECIMAL_UDF_txt
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@decimal_udf_txt
POSTHOOK: Output: default@decimal_udf_txt
PREHOOK: query: DROP TABLE IF EXISTS DECIMAL_UDF
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@decimal_udf
PREHOOK: Output: default@decimal_udf
POSTHOOK: query: DROP TABLE IF EXISTS DECIMAL_UDF
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@decimal_udf
POSTHOOK: Output: default@decimal_udf
