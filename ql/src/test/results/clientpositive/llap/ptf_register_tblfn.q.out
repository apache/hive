PREHOOK: query: DROP TABLE flights_tiny
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE flights_tiny
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table flights_tiny ( 
ORIGIN_CITY_NAME string, 
DEST_CITY_NAME string, 
YEAR int, 
MONTH int, 
DAY_OF_MONTH int, 
ARR_DELAY float, 
FL_NUM string 
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@flights_tiny
POSTHOOK: query: create table flights_tiny ( 
ORIGIN_CITY_NAME string, 
DEST_CITY_NAME string, 
YEAR int, 
MONTH int, 
DAY_OF_MONTH int, 
ARR_DELAY float, 
FL_NUM string 
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@flights_tiny
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/flights_tiny.txt' OVERWRITE INTO TABLE flights_tiny
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@flights_tiny
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/flights_tiny.txt' OVERWRITE INTO TABLE flights_tiny
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@flights_tiny
PREHOOK: query: create temporary function matchpathtest as 'org.apache.hadoop.hive.ql.udf.ptf.MatchPath$MatchPathResolver'
PREHOOK: type: CREATEFUNCTION
PREHOOK: Output: matchpathtest
POSTHOOK: query: create temporary function matchpathtest as 'org.apache.hadoop.hive.ql.udf.ptf.MatchPath$MatchPathResolver'
POSTHOOK: type: CREATEFUNCTION
POSTHOOK: Output: matchpathtest
PREHOOK: query: select origin_city_name, fl_num, year, month, day_of_month, sz, tpath 
from matchpathtest(on 
        flights_tiny 
        distribute by fl_num 
        sort by year, month, day_of_month  
      arg1('LATE.LATE+'), 
      arg2('LATE'), arg3(arr_delay > 15), 
    arg4('origin_city_name, fl_num, year, month, day_of_month, size(tpath) as sz, tpath[0].day_of_month as tpath') 
   )
PREHOOK: type: QUERY
PREHOOK: Input: default@flights_tiny
#### A masked pattern was here ####
POSTHOOK: query: select origin_city_name, fl_num, year, month, day_of_month, sz, tpath 
from matchpathtest(on 
        flights_tiny 
        distribute by fl_num 
        sort by year, month, day_of_month  
      arg1('LATE.LATE+'), 
      arg2('LATE'), arg3(arr_delay > 15), 
    arg4('origin_city_name, fl_num, year, month, day_of_month, size(tpath) as sz, tpath[0].day_of_month as tpath') 
   )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@flights_tiny
#### A masked pattern was here ####
Baltimore	1142	2010	10	20	6	20
Baltimore	1142	2010	10	21	5	21
Baltimore	1142	2010	10	22	4	22
Baltimore	1142	2010	10	25	3	25
Baltimore	1142	2010	10	26	2	26
Baltimore	1599	2010	10	21	2	21
Baltimore	1599	2010	10	25	3	25
Baltimore	1599	2010	10	26	2	26
Chicago	1531	2010	10	21	2	21
Chicago	1531	2010	10	25	3	25
Chicago	1531	2010	10	26	2	26
Chicago	361	2010	10	20	2	20
Chicago	897	2010	10	20	4	20
Chicago	897	2010	10	21	3	21
Chicago	897	2010	10	22	2	22
Washington	7291	2010	10	27	2	27
PREHOOK: query: drop temporary function matchpathtest
PREHOOK: type: DROPFUNCTION
PREHOOK: Output: matchpathtest
POSTHOOK: query: drop temporary function matchpathtest
POSTHOOK: type: DROPFUNCTION
POSTHOOK: Output: matchpathtest
