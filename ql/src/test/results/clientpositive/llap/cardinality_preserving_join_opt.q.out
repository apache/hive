PREHOOK: query: create table if not exists customer
(
    c_first_name            string,
    c_last_name             string,
    c_customer_sk           bigint,
    c_discount              float
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@customer
POSTHOOK: query: create table if not exists customer
(
    c_first_name            string,
    c_last_name             string,
    c_customer_sk           bigint,
    c_discount              float
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@customer
PREHOOK: query: create table store_sales
(
    ss_quantity            float,
    ss_customer_sk         int,
    ss_list_price          float
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@store_sales
POSTHOOK: query: create table store_sales
(
    ss_quantity            float,
    ss_customer_sk         int,
    ss_list_price          float
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@store_sales
PREHOOK: query: insert into customer(c_customer_sk, c_first_name, c_last_name, c_discount) values (1, 'John', 'Doe', 0.15)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@customer
POSTHOOK: query: insert into customer(c_customer_sk, c_first_name, c_last_name, c_discount) values (1, 'John', 'Doe', 0.15)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@customer
POSTHOOK: Lineage: customer.c_customer_sk SCRIPT []
POSTHOOK: Lineage: customer.c_discount SCRIPT []
POSTHOOK: Lineage: customer.c_first_name SCRIPT []
POSTHOOK: Lineage: customer.c_last_name SCRIPT []
PREHOOK: query: insert into store_sales(ss_customer_sk, ss_quantity, ss_list_price) values (1, 10.0, 2.5)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@store_sales
POSTHOOK: query: insert into store_sales(ss_customer_sk, ss_quantity, ss_list_price) values (1, 10.0, 2.5)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@store_sales
POSTHOOK: Lineage: store_sales.ss_customer_sk SCRIPT []
POSTHOOK: Lineage: store_sales.ss_list_price SCRIPT []
POSTHOOK: Lineage: store_sales.ss_quantity SCRIPT []
PREHOOK: query: explain cbo
select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveProject(c_first_name=[$3], _o__c1=[$5], _o__c2=[*($1, $6)], c_customer_sk=[$4], ss_customer_sk=[$0])
  HiveJoin(condition=[=($2, $4)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(ss_customer_sk=[$1], *=[*(+($0, $0), $2)], CAST=[CAST($1):BIGINT])
      HiveFilter(condition=[IS NOT NULL(CAST($1):BIGINT)])
        HiveTableScan(table=[[default, store_sales]], table:alias=[ss])
    HiveProject(c_first_name=[$0], c_customer_sk=[$2], ||=[||(||(||(||($0, _UTF-16LE' ':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), $1), _UTF-16LE' ':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), $1)], -=[-(1, $3)])
      HiveFilter(condition=[IS NOT NULL($2)])
        HiveTableScan(table=[[default, customer]], table:alias=[c])

PREHOOK: query: select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
John	John Doe Doe	42.5	1	1
PREHOOK: query: alter table store_sales add constraint pk_c primary key (ss_customer_sk) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table store_sales add constraint pk_c primary key (ss_customer_sk) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: explain cbo
select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveProject(c_first_name=[$2], _o__c1=[$4], _o__c2=[*(*(+($6, $6), $8), $5)], c_customer_sk=[$3], ss_customer_sk=[$0])
  HiveJoin(condition=[=($0, $7)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[=($1, $3)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(ss_customer_sk=[$0], CAST=[CAST($0):BIGINT])
        HiveFilter(condition=[IS NOT NULL(CAST($0):BIGINT)])
          HiveProject(ss_customer_sk=[$1])
            HiveTableScan(table=[[default, store_sales]], table:alias=[ss])
      HiveProject(c_first_name=[$0], c_customer_sk=[$2], ||=[||(||(||(||($0, _UTF-16LE' ':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), $1), _UTF-16LE' ':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), $1)], -=[-(1, $3)])
        HiveFilter(condition=[IS NOT NULL($2)])
          HiveProject(c_first_name=[$0], c_last_name=[$1], c_customer_sk=[$2], c_discount=[$3])
            HiveTableScan(table=[[default, customer]], table:alias=[c])
    HiveProject(ss_quantity=[$0], ss_customer_sk=[$1], ss_list_price=[$2])
      HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])

PREHOOK: query: select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
John	John Doe Doe	42.5	1	1
PREHOOK: query: alter table store_sales drop constraint pk_c
PREHOOK: type: ALTERTABLE_DROPCONSTRAINT
POSTHOOK: query: alter table store_sales drop constraint pk_c
POSTHOOK: type: ALTERTABLE_DROPCONSTRAINT
PREHOOK: query: alter table customer add constraint pk_c primary key (c_customer_sk) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table customer add constraint pk_c primary key (c_customer_sk) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: explain cbo
select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveProject(c_first_name=[$4], _o__c1=[||(||(||(||($4, _UTF-16LE' ':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), $5), _UTF-16LE' ':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), $5)], _o__c2=[*($1, -(1, $7))], c_customer_sk=[$3], ss_customer_sk=[$0])
  HiveJoin(condition=[=($3, $6)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[=($2, $3)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(ss_customer_sk=[$1], *=[*(+($0, $0), $2)], CAST=[CAST($1):BIGINT])
        HiveFilter(condition=[IS NOT NULL(CAST($1):BIGINT)])
          HiveProject(ss_quantity=[$0], ss_customer_sk=[$1], ss_list_price=[$2])
            HiveTableScan(table=[[default, store_sales]], table:alias=[ss])
      HiveProject(c_customer_sk=[$2])
        HiveTableScan(table=[[default, customer]], table:alias=[c])
    HiveProject(c_first_name=[$0], c_last_name=[$1], c_customer_sk=[$2], c_discount=[$3])
      HiveTableScan(table=[[default, customer]], table:alias=[customer])

PREHOOK: query: select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
John	John Doe Doe	42.5	1	1
PREHOOK: query: alter table store_sales add constraint pk_c primary key (ss_customer_sk) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table store_sales add constraint pk_c primary key (ss_customer_sk) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: explain cbo
select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveProject(c_first_name=[$6], _o__c1=[||(||(||(||($6, _UTF-16LE' ':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), $7), _UTF-16LE' ':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), $7)], _o__c2=[*(*(+($3, $3), $5), -(1, $9))], c_customer_sk=[$2], ss_customer_sk=[$0])
  HiveJoin(condition=[=($2, $8)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[=($0, $4)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveJoin(condition=[=($1, $2)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject(ss_customer_sk=[$0], CAST=[CAST($0):BIGINT])
          HiveFilter(condition=[IS NOT NULL(CAST($0):BIGINT)])
            HiveProject(ss_customer_sk=[$1])
              HiveTableScan(table=[[default, store_sales]], table:alias=[ss])
        HiveProject(c_customer_sk=[$2])
          HiveTableScan(table=[[default, customer]], table:alias=[c])
      HiveProject(ss_quantity=[$0], ss_customer_sk=[$1], ss_list_price=[$2])
        HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
    HiveProject(c_first_name=[$0], c_last_name=[$1], c_customer_sk=[$2], c_discount=[$3])
      HiveTableScan(table=[[default, customer]], table:alias=[customer])

PREHOOK: query: select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: select
    c_first_name,
    c_first_name || ' ' || c_last_name || ' ' || c_last_name,
    ((ss_quantity + ss_quantity) * ss_list_price) * (1.0 - c_discount),
    c_customer_sk,
    ss_customer_sk
from store_sales ss
join customer c on ss_customer_sk = c_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
John	John Doe Doe	42.5	1	1
PREHOOK: query: explain cbo
select
    c_first_name,
    ss_customer_sk,
    c_customer_sk
from store_sales ss
join customer on c_customer_sk = ss_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select
    c_first_name,
    ss_customer_sk,
    c_customer_sk
from store_sales ss
join customer on c_customer_sk = ss_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveProject(c_first_name=[$3], ss_customer_sk=[$0], c_customer_sk=[$2])
  HiveJoin(condition=[=($2, $4)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[=($2, $1)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(ss_customer_sk=[$0], CAST=[CAST($0):BIGINT])
        HiveFilter(condition=[IS NOT NULL(CAST($0):BIGINT)])
          HiveProject(ss_customer_sk=[$1])
            HiveTableScan(table=[[default, store_sales]], table:alias=[ss])
      HiveProject(c_customer_sk=[$2])
        HiveTableScan(table=[[default, customer]], table:alias=[customer])
    HiveProject(c_first_name=[$0], c_customer_sk=[$2])
      HiveTableScan(table=[[default, customer]], table:alias=[customer])

PREHOOK: query: select
    c_first_name,
    ss_customer_sk,
    c_customer_sk
from store_sales ss
join customer on c_customer_sk = ss_customer_sk
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: select
    c_first_name,
    ss_customer_sk,
    c_customer_sk
from store_sales ss
join customer on c_customer_sk = ss_customer_sk
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
John	1	1
