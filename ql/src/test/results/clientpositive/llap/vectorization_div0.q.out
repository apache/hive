PREHOOK: query: -- TODO: add more stuff here after HIVE-5918 is fixed, such as cbigint and constants
explain
select cdouble / 0.0 from alltypesorc limit 100
PREHOOK: type: QUERY
POSTHOOK: query: -- TODO: add more stuff here after HIVE-5918 is fixed, such as cbigint and constants
explain
select cdouble / 0.0 from alltypesorc limit 100
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        TableScan
          alias: alltypesorc
          Select Operator
            expressions: (cdouble / 0.0) (type: double)
            outputColumnNames: _col0
            Limit
              Number of rows: 100
              ListSink

PREHOOK: query: select cdouble / 0.0 from alltypesorc limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select cdouble / 0.0 from alltypesorc limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
PREHOOK: query: -- There are no zeros in the table, but there is 988888, so use it as zero

-- TODO: add more stuff here after HIVE-5918 is fixed, such as cbigint and constants as numerators
explain
select (cbigint - 988888L) as s1, cdouble / (cbigint - 988888L) as s2, 1.2 / (cbigint - 988888L) 
from alltypesorc where cbigint > 0 and cbigint < 100000000 order by s1, s2 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: -- There are no zeros in the table, but there is 988888, so use it as zero

-- TODO: add more stuff here after HIVE-5918 is fixed, such as cbigint and constants as numerators
explain
select (cbigint - 988888L) as s1, cdouble / (cbigint - 988888L) as s2, 1.2 / (cbigint - 988888L) 
from alltypesorc where cbigint > 0 and cbigint < 100000000 order by s1, s2 limit 100
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  Statistics: Num rows: 12288 Data size: 2641964 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((cbigint > 0) and (cbigint < 100000000)) (type: boolean)
                    Statistics: Num rows: 1365 Data size: 293479 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: (cbigint - 988888) (type: bigint), (cdouble / UDFToDouble((cbigint - 988888))) (type: double), (1.2 / UDFToDouble((cbigint - 988888))) (type: double)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1365 Data size: 293479 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: bigint), _col1 (type: double)
                        sort order: ++
                        Statistics: Num rows: 1365 Data size: 293479 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col2 (type: double)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: bigint), KEY.reducesinkkey1 (type: double), VALUE._col0 (type: double)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1365 Data size: 293479 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 100 Data size: 21500 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 100 Data size: 21500 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        ListSink

PREHOOK: query: select (cbigint - 988888L) as s1, cdouble / (cbigint - 988888L) as s2, 1.2 / (cbigint - 988888L) 
from alltypesorc where cbigint > 0 and cbigint < 100000000 order by s1, s2 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select (cbigint - 988888L) as s1, cdouble / (cbigint - 988888L) as s2, 1.2 / (cbigint - 988888L) 
from alltypesorc where cbigint > 0 and cbigint < 100000000 order by s1, s2 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
-985319	NULL	-1.21787969175465E-6
-985319	2.0297994862577501E-4	-1.21787969175465E-6
-63925	0.11256941728588189	-1.8771998435666796E-5
0	NULL	NULL
0	NULL	NULL
0	NULL	NULL
0	NULL	NULL
0	NULL	NULL
0	NULL	NULL
0	NULL	NULL
0	NULL	NULL
0	NULL	NULL
392309	NULL	3.05881333336732E-6
673083	-0.010691103474608629	1.7828410463494101E-6
2331159	NULL	5.147654021025593E-7
2342037	NULL	5.123744842630582E-7
3533105	-5.660743170667161E-5	3.3964459024002967E-7
3768727	0.004139594085748318	3.184099033970887E-7
4728619	NULL	2.5377388197272816E-7
5391403	NULL	2.2257657236901044E-7
7022666	-0.0010246820794268159	1.708752772807364E-7
7470430	NULL	1.6063332365071354E-7
8276429	NULL	1.4499006757624573E-7
8286860	-8.683626850218298E-4	1.44807562816314E-7
8299981	-8.669899364829872E-4	1.445786442161735E-7
9247593	NULL	1.297634962957388E-7
9821695	-7.326637611939691E-4	1.2217850381222386E-7
10000738	0.001559984873116364	1.1999114465352456E-7
10081828	0.0015474376273826532	1.190260337708598E-7
10745355	-6.696847149303117E-4	1.1167616146697805E-7
11127199	-1.797397530142132E-5	1.0784385180852791E-7
11722580	NULL	1.023665438836843E-7
12649396	NULL	9.486618965838368E-8
13126214	-1.5236685917203544E-5	9.142011550322126E-8
14042667	NULL	8.545385288991044E-8
14943972	-1.3383322720358416E-5	8.02999363221505E-8
16259022	NULL	7.380517721176587E-8
16531556	-1.2098074736582569E-5	7.258844841949542E-8
16596157	NULL	7.230589587697923E-8
17058489	-1.1724367849930905E-5	7.034620709958544E-8
17247320	-4.172242412154468E-4	6.957602688417679E-8
19004427	8.209139901981786E-4	6.314318237534864E-8
19498517	NULL	6.154314197331007E-8
20165679	7.736411950224934E-4	5.95070466013071E-8
20547875	NULL	5.840019953401507E-8
23264783	NULL	5.158010715165492E-8
23475527	6.645644206411213E-4	5.111706331448917E-8
24379905	NULL	4.922086447834805E-8
24514624	-2.935390728407664E-4	4.895037345871591E-8
25154198	-2.860755091456305E-4	4.770575472133916E-8
25245192	-7.922300610745999E-6	4.7533803664475993E-8
26610943	NULL	4.509423059528556E-8
27520143	5.668938566198584E-4	4.360442458456702E-8
27818379	NULL	4.313694913711543E-8
28400244	NULL	4.225315810666979E-8
28698999	5.43607810153936E-4	4.18133050563889E-8
28806400	-6.9429015774272385E-6	4.165740946456343E-8
29920877	5.214085135271938E-4	4.010577631130264E-8
33126539	NULL	3.622473207961749E-8
34603086	NULL	3.467898787986713E-8
35156265	NULL	3.413331876978399E-8
35862260	NULL	3.346136021544654E-8
36123797	-1.992038655294182E-4	3.321909931007529E-8
36341671	-1.980096072082101E-4	3.301994561559924E-8
36413215	-5.4925114412446145E-6	3.2955068647467685E-8
36578596	4.2650625518814335E-4	3.280607052277239E-8
36796441	-1.955623914823719E-4	3.2611849607955287E-8
39723587	NULL	3.0208752296211316E-8
39985709	-1.7996429674411925E-4	3.001072208073139E-8
40018606	NULL	2.998605198791782E-8
41003161	NULL	2.9266036342905367E-8
41158231	3.790493328053871E-4	2.9155772025284565E-8
41848817	NULL	2.8674645689506587E-8
44047567	-1.633688416888043E-4	2.724327543448654E-8
45125678	NULL	2.6592398234991615E-8
45180154	NULL	2.6560334433565674E-8
45717793	3.4124569399052136E-4	2.6247986205283355E-8
46163162	NULL	2.5994753132378583E-8
46525838	3.353190543284787E-4	2.5792120068852925E-8
48626663	NULL	2.4677819244968545E-8
49102701	-1.465499830650864E-4	2.4438574163160596E-8
50300445	-1.4306036457530346E-4	2.3856647789100076E-8
50929325	-1.412938420055636E-4	2.356206370298448E-8
52422534	-1.3726921327381848E-4	2.2890919389741823E-8
52667422	2.9621727070673783E-4	2.2784483356713376E-8
52962061	2.945693522010029E-4	2.265772852004381E-8
53695172	NULL	2.234837798824818E-8
54760317	NULL	2.1913678841559662E-8
55020655	2.835480602693661E-4	2.180999117513232E-8
56102034	NULL	2.1389598815615135E-8
56131313	NULL	2.13784416551952E-8
56838351	-3.5187509222426247E-6	2.1112505533455745E-8
56997841	-3.5089048372902406E-6	2.105342902374144E-8
57778807	-1.2454393528755274E-4	2.076886080392764E-8
58080381	NULL	2.0661021490199935E-8
58307527	NULL	2.058053328174937E-8
58536385	-1.2293208745295768E-4	2.0500070170031853E-8
59347745	NULL	2.0219807846111087E-8
60229567	NULL	1.992376933408802E-8
60330397	NULL	1.9890470801974003E-8
PREHOOK: query: -- There are no zeros in the table, but there is -200.0, so use it as zero

explain
select (cdouble + 200.0) as s1, cbigint / (cdouble + 200.0) as s2, (cdouble + 200.0) / (cdouble + 200.0), cbigint / (cdouble + 200.0), 3 / (cdouble + 200.0), 1.2 / (cdouble + 200.0) 
from alltypesorc where cdouble >= -500 and cdouble < -199 order by s1, s2 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: -- There are no zeros in the table, but there is -200.0, so use it as zero

explain
select (cdouble + 200.0) as s1, cbigint / (cdouble + 200.0) as s2, (cdouble + 200.0) / (cdouble + 200.0), cbigint / (cdouble + 200.0), 3 / (cdouble + 200.0), 1.2 / (cdouble + 200.0) 
from alltypesorc where cdouble >= -500 and cdouble < -199 order by s1, s2 limit 100
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  Statistics: Num rows: 12288 Data size: 2641964 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((cdouble >= -500.0) and (cdouble < -199.0)) (type: boolean)
                    Statistics: Num rows: 1365 Data size: 293479 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: (cdouble + 200.0) (type: double), (UDFToDouble(cbigint) / (cdouble + 200.0)) (type: double), ((cdouble + 200.0) / (cdouble + 200.0)) (type: double), (3.0 / (cdouble + 200.0)) (type: double), (1.2 / (cdouble + 200.0)) (type: double)
                      outputColumnNames: _col0, _col1, _col2, _col4, _col5
                      Statistics: Num rows: 1365 Data size: 293479 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: double), _col1 (type: double)
                        sort order: ++
                        Statistics: Num rows: 1365 Data size: 293479 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col2 (type: double), _col4 (type: double), _col5 (type: double)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: double), KEY.reducesinkkey1 (type: double), VALUE._col0 (type: double), KEY.reducesinkkey1 (type: double), VALUE._col1 (type: double), VALUE._col2 (type: double)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 1365 Data size: 293479 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 100 Data size: 21500 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 100 Data size: 21500 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        ListSink

PREHOOK: query: select (cdouble + 200.0) as s1, cbigint / (cdouble + 200.0) as s2, (cdouble + 200.0) / (cdouble + 200.0), cbigint / (cdouble + 200.0), 3 / (cdouble + 200.0), 1.2 / (cdouble + 200.0) 
from alltypesorc where cdouble >= -500 and cdouble < -199 order by s1, s2 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select (cdouble + 200.0) as s1, cbigint / (cdouble + 200.0) as s2, (cdouble + 200.0) / (cdouble + 200.0), cbigint / (cdouble + 200.0), 3 / (cdouble + 200.0), 1.2 / (cdouble + 200.0) 
from alltypesorc where cdouble >= -500 and cdouble < -199 order by s1, s2 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
-292.0	NULL	1.0	NULL	-0.010273972602739725	-0.00410958904109589
-290.0	NULL	1.0	NULL	-0.010344827586206896	-0.004137931034482759
-289.0	NULL	1.0	NULL	-0.010380622837370242	-0.004152249134948096
-281.0	NULL	1.0	NULL	-0.010676156583629894	-0.004270462633451957
-279.0	NULL	1.0	NULL	-0.010752688172043012	-0.004301075268817204
-274.0	6888911.518248175	1.0	6888911.518248175	-0.010948905109489052	-0.00437956204379562
-273.0	6028764.868131869	1.0	6028764.868131869	-0.01098901098901099	-0.004395604395604396
-257.0	6404096.53307393	1.0	6404096.53307393	-0.011673151750972763	-0.004669260700389105
-250.0	6583411.236	1.0	6583411.236	-0.012	-0.0048
-247.0	NULL	1.0	NULL	-0.012145748987854251	-0.004858299595141701
-247.0	-7546669.174089069	1.0	-7546669.174089069	-0.012145748987854251	-0.004858299595141701
-246.0	NULL	1.0	NULL	-0.012195121951219513	-0.004878048780487805
-237.0	NULL	1.0	NULL	-0.012658227848101266	-0.005063291139240506
-236.0	NULL	1.0	NULL	-0.012711864406779662	-0.005084745762711864
-229.0	7187130.170305677	1.0	7187130.170305677	-0.013100436681222707	-0.005240174672489083
-228.0	8278779.631578947	1.0	8278779.631578947	-0.013157894736842105	-0.005263157894736842
-225.0	NULL	1.0	NULL	-0.013333333333333334	-0.005333333333333333
-210.0	-8876320.40952381	1.0	-8876320.40952381	-0.014285714285714285	-0.005714285714285714
-201.0	NULL	1.0	NULL	-0.014925373134328358	-0.005970149253731343
-199.0	NULL	1.0	NULL	-0.01507537688442211	-0.006030150753768844
-189.0	NULL	1.0	NULL	-0.015873015873015872	-0.006349206349206349
-188.0	NULL	1.0	NULL	-0.015957446808510637	-0.006382978723404255
-184.0	8944852.222826088	1.0	8944852.222826088	-0.016304347826086956	-0.006521739130434782
-183.0	8993731.196721312	1.0	8993731.196721312	-0.01639344262295082	-0.006557377049180328
-181.0	NULL	1.0	NULL	-0.016574585635359115	-0.0066298342541436465
-179.0	NULL	1.0	NULL	-0.01675977653631285	-0.0067039106145251395
-169.0	9738774.01775148	1.0	9738774.01775148	-0.01775147928994083	-0.007100591715976331
-164.0	NULL	1.0	NULL	-0.018292682926829267	-0.007317073170731707
-161.0	NULL	1.0	NULL	-0.018633540372670808	-0.007453416149068323
-154.0	1.2256894519480519E7	1.0	1.2256894519480519E7	-0.01948051948051948	-0.007792207792207792
-152.0	NULL	1.0	NULL	-0.019736842105263157	-0.007894736842105263
-148.0	NULL	1.0	NULL	-0.02027027027027027	-0.008108108108108109
-140.0	NULL	1.0	NULL	-0.02142857142857143	-0.008571428571428572
-138.0	NULL	1.0	NULL	-0.021739130434782608	-0.008695652173913044
-137.0	NULL	1.0	NULL	-0.021897810218978103	-0.00875912408759124
-132.0	NULL	1.0	NULL	-0.022727272727272728	-0.00909090909090909
-129.0	1.2758548906976745E7	1.0	1.2758548906976745E7	-0.023255813953488372	-0.009302325581395349
-128.0	NULL	1.0	NULL	-0.0234375	-0.009375
-126.0	NULL	1.0	NULL	-0.023809523809523808	-0.009523809523809523
-126.0	-1.4793867349206349E7	1.0	-1.4793867349206349E7	-0.023809523809523808	-0.009523809523809523
-116.0	NULL	1.0	NULL	-0.02586206896551724	-0.010344827586206896
-113.0	NULL	1.0	NULL	-0.02654867256637168	-0.010619469026548672
-113.0	-1.6495816690265486E7	1.0	-1.6495816690265486E7	-0.02654867256637168	-0.010619469026548672
-96.0	NULL	1.0	NULL	-0.03125	-0.012499999999999999
-94.0	-1.9830077510638297E7	1.0	-1.9830077510638297E7	-0.031914893617021274	-0.01276595744680851
-93.0	NULL	1.0	NULL	-0.03225806451612903	-0.012903225806451613
-77.0	2.4513789038961038E7	1.0	2.4513789038961038E7	-0.03896103896103896	-0.015584415584415584
-69.0	2.735596747826087E7	1.0	2.735596747826087E7	-0.043478260869565216	-0.017391304347826087
-62.0	NULL	1.0	NULL	-0.04838709677419355	-0.01935483870967742
-62.0	3.0444544451612905E7	1.0	3.0444544451612905E7	-0.04838709677419355	-0.01935483870967742
-60.0	NULL	1.0	NULL	-0.05	-0.02
-57.0	-3.27022330877193E7	1.0	-3.27022330877193E7	-0.05263157894736842	-0.021052631578947368
-49.0	3.35888328367347E7	1.0	3.35888328367347E7	-0.061224489795918366	-0.024489795918367346
-46.0	3.577940889130435E7	1.0	3.577940889130435E7	-0.06521739130434782	-0.02608695652173913
-38.0	4.3311916026315786E7	1.0	4.3311916026315786E7	-0.07894736842105263	-0.031578947368421054
-28.0	5.878045746428572E7	1.0	5.878045746428572E7	-0.10714285714285714	-0.04285714285714286
-28.0	6.741291985714285E7	1.0	6.741291985714285E7	-0.10714285714285714	-0.04285714285714286
-21.0	8.988389314285715E7	1.0	8.988389314285715E7	-0.14285714285714285	-0.05714285714285714
-20.0	NULL	1.0	NULL	-0.15	-0.06
-17.0	NULL	1.0	NULL	-0.17647058823529413	-0.07058823529411765
-12.0	-1.5533560716666666E8	1.0	-1.5533560716666666E8	-0.25	-0.09999999999999999
-3.0	NULL	1.0	NULL	-1.0	-0.39999999999999997
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
0.0	NULL	NULL	NULL	NULL	NULL
