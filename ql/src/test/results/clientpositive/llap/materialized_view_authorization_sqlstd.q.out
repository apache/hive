PREHOOK: query: create table amvs_table (a int, b varchar(256), c decimal(10,2))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@amvs_table
POSTHOOK: query: create table amvs_table (a int, b varchar(256), c decimal(10,2))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@amvs_table
PREHOOK: query: insert into amvs_table values (1, 'alfred', 10.30),(2, 'bob', 3.14),(2, 'bonnie', 172342.2),(3, 'calvin', 978.76),(3, 'charlie', 9.8)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@amvs_table
POSTHOOK: query: insert into amvs_table values (1, 'alfred', 10.30),(2, 'bob', 3.14),(2, 'bonnie', 172342.2),(3, 'calvin', 978.76),(3, 'charlie', 9.8)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@amvs_table
POSTHOOK: Lineage: amvs_table.a SCRIPT []
POSTHOOK: Lineage: amvs_table.b SCRIPT []
POSTHOOK: Lineage: amvs_table.c SCRIPT []
PREHOOK: query: create materialized view amvs_mat_view disable rewrite as select a, c from amvs_table
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@amvs_table
PREHOOK: Output: database:default
PREHOOK: Output: default@amvs_mat_view
POSTHOOK: query: create materialized view amvs_mat_view disable rewrite as select a, c from amvs_table
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@amvs_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@amvs_mat_view
POSTHOOK: Lineage: amvs_mat_view.a SIMPLE [(amvs_table)amvs_table.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: amvs_mat_view.c SIMPLE [(amvs_table)amvs_table.FieldSchema(name:c, type:decimal(10,2), comment:null), ]
PREHOOK: query: show grant user user1 on table amvs_mat_view
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant user user1 on table amvs_mat_view
POSTHOOK: type: SHOW_GRANT
default	amvs_mat_view			user1	USER	DELETE	true	-1	user1
default	amvs_mat_view			user1	USER	INSERT	true	-1	user1
default	amvs_mat_view			user1	USER	SELECT	true	-1	user1
default	amvs_mat_view			user1	USER	UPDATE	true	-1	user1
PREHOOK: query: grant select on amvs_mat_view to user user2
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: default@amvs_mat_view
POSTHOOK: query: grant select on amvs_mat_view to user user2
POSTHOOK: type: GRANT_PRIVILEGE
POSTHOOK: Output: default@amvs_mat_view
PREHOOK: query: show grant user user2 on table amvs_mat_view
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant user user2 on table amvs_mat_view
POSTHOOK: type: SHOW_GRANT
default	amvs_mat_view			user2	USER	SELECT	false	-1	user1
PREHOOK: query: select * from amvs_mat_view
PREHOOK: type: QUERY
PREHOOK: Input: default@amvs_mat_view
#### A masked pattern was here ####
POSTHOOK: query: select * from amvs_mat_view
POSTHOOK: type: QUERY
POSTHOOK: Input: default@amvs_mat_view
#### A masked pattern was here ####
1	10.30
2	3.14
2	172342.20
3	978.76
3	9.80
PREHOOK: query: show grant user user3 on table amvs_mat_view
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant user user3 on table amvs_mat_view
POSTHOOK: type: SHOW_GRANT
PREHOOK: query: set role admin
PREHOOK: type: SHOW_ROLES
POSTHOOK: query: set role admin
POSTHOOK: type: SHOW_ROLES
PREHOOK: query: show grant on table amvs_mat_view
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant on table amvs_mat_view
POSTHOOK: type: SHOW_GRANT
default	amvs_mat_view			user1	USER	DELETE	true	-1	user1
default	amvs_mat_view			user1	USER	INSERT	true	-1	user1
default	amvs_mat_view			user1	USER	SELECT	true	-1	user1
default	amvs_mat_view			user1	USER	UPDATE	true	-1	user1
default	amvs_mat_view			user2	USER	SELECT	false	-1	user1
PREHOOK: query: revoke select on table amvs_mat_view from user user2
PREHOOK: type: REVOKE_PRIVILEGE
PREHOOK: Output: default@amvs_mat_view
POSTHOOK: query: revoke select on table amvs_mat_view from user user2
POSTHOOK: type: REVOKE_PRIVILEGE
POSTHOOK: Output: default@amvs_mat_view
PREHOOK: query: show grant user user2 on table amvs_mat_view
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant user user2 on table amvs_mat_view
POSTHOOK: type: SHOW_GRANT
PREHOOK: query: set role ADMIN
PREHOOK: type: SHOW_ROLES
POSTHOOK: query: set role ADMIN
POSTHOOK: type: SHOW_ROLES
PREHOOK: query: create role role_v
PREHOOK: type: CREATEROLE
POSTHOOK: query: create role role_v
POSTHOOK: type: CREATEROLE
PREHOOK: query: grant  role_v to user user4
PREHOOK: type: GRANT_ROLE
POSTHOOK: query: grant  role_v to user user4
POSTHOOK: type: GRANT_ROLE
PREHOOK: query: show role grant user user4
PREHOOK: type: SHOW_ROLE_GRANT
POSTHOOK: query: show role grant user user4
POSTHOOK: type: SHOW_ROLE_GRANT
public	false	-1	
role_v	false	-1	hive_admin_user
PREHOOK: query: show roles
PREHOOK: type: SHOW_ROLES
POSTHOOK: query: show roles
POSTHOOK: type: SHOW_ROLES
admin
public
role_v
PREHOOK: query: grant all on table amvs_mat_view to role role_v
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: default@amvs_mat_view
POSTHOOK: query: grant all on table amvs_mat_view to role role_v
POSTHOOK: type: GRANT_PRIVILEGE
POSTHOOK: Output: default@amvs_mat_view
PREHOOK: query: show grant role role_v on table amvs_mat_view
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant role role_v on table amvs_mat_view
POSTHOOK: type: SHOW_GRANT
default	amvs_mat_view			role_v	ROLE	DELETE	false	-1	hive_admin_user
default	amvs_mat_view			role_v	ROLE	INSERT	false	-1	hive_admin_user
default	amvs_mat_view			role_v	ROLE	SELECT	false	-1	hive_admin_user
default	amvs_mat_view			role_v	ROLE	UPDATE	false	-1	hive_admin_user
PREHOOK: query: show grant user user4 on table amvs_mat_view
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant user user4 on table amvs_mat_view
POSTHOOK: type: SHOW_GRANT
PREHOOK: query: select * from amvs_mat_view
PREHOOK: type: QUERY
PREHOOK: Input: default@amvs_mat_view
#### A masked pattern was here ####
POSTHOOK: query: select * from amvs_mat_view
POSTHOOK: type: QUERY
POSTHOOK: Input: default@amvs_mat_view
#### A masked pattern was here ####
1	10.30
2	3.14
2	172342.20
3	978.76
3	9.80
PREHOOK: query: grant select on table amvs_table to user user2 with grant option
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: default@amvs_table
POSTHOOK: query: grant select on table amvs_table to user user2 with grant option
POSTHOOK: type: GRANT_PRIVILEGE
POSTHOOK: Output: default@amvs_table
PREHOOK: query: create materialized view amvs_mat_view2 disable rewrite as select a, b from amvs_table
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@amvs_table
PREHOOK: Output: database:default
PREHOOK: Output: default@amvs_mat_view2
POSTHOOK: query: create materialized view amvs_mat_view2 disable rewrite as select a, b from amvs_table
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@amvs_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@amvs_mat_view2
POSTHOOK: Lineage: amvs_mat_view2.a SIMPLE [(amvs_table)amvs_table.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: amvs_mat_view2.b SIMPLE [(amvs_table)amvs_table.FieldSchema(name:b, type:varchar(256), comment:null), ]
PREHOOK: query: select * from amvs_mat_view2
PREHOOK: type: QUERY
PREHOOK: Input: default@amvs_mat_view2
#### A masked pattern was here ####
POSTHOOK: query: select * from amvs_mat_view2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@amvs_mat_view2
#### A masked pattern was here ####
1	alfred
2	bob
2	bonnie
3	calvin
3	charlie
PREHOOK: query: drop materialized view amvs_mat_view2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@amvs_mat_view2
PREHOOK: Output: default@amvs_mat_view2
POSTHOOK: query: drop materialized view amvs_mat_view2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@amvs_mat_view2
POSTHOOK: Output: default@amvs_mat_view2
PREHOOK: query: set role ADMIN
PREHOOK: type: SHOW_ROLES
POSTHOOK: query: set role ADMIN
POSTHOOK: type: SHOW_ROLES
PREHOOK: query: create database db1
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:db1
POSTHOOK: query: create database db1
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:db1
PREHOOK: query: create table db1.testmvtable(id int, name string) partitioned by(year int) stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:db1
PREHOOK: Output: db1@testmvtable
POSTHOOK: query: create table db1.testmvtable(id int, name string) partitioned by(year int) stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:db1
POSTHOOK: Output: db1@testmvtable
PREHOOK: query: insert into db1.testmvtable partition(year=2016) values(1,'Name1')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: db1@testmvtable@year=2016
POSTHOOK: query: insert into db1.testmvtable partition(year=2016) values(1,'Name1')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: db1@testmvtable@year=2016
POSTHOOK: Lineage: testmvtable PARTITION(year=2016).id SCRIPT []
POSTHOOK: Lineage: testmvtable PARTITION(year=2016).name SCRIPT []
PREHOOK: query: create database db2
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:db2
POSTHOOK: query: create database db2
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:db2
PREHOOK: query: CREATE MATERIALIZED VIEW db2.testmv PARTITIONED ON(year) as select * from db1.testmvtable tmv where year >= 2018
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: db1@testmvtable
PREHOOK: Output: database:db2
PREHOOK: Output: db2@testmv
PREHOOK: Output: db2@testmv
POSTHOOK: query: CREATE MATERIALIZED VIEW db2.testmv PARTITIONED ON(year) as select * from db1.testmvtable tmv where year >= 2018
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: db1@testmvtable
POSTHOOK: Output: database:db2
POSTHOOK: Output: db2@testmv
POSTHOOK: Output: db2@testmv
PREHOOK: query: grant all on table db1.testmvtable to user user2
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: db1@testmvtable
POSTHOOK: query: grant all on table db1.testmvtable to user user2
POSTHOOK: type: GRANT_PRIVILEGE
POSTHOOK: Output: db1@testmvtable
PREHOOK: query: explain select * from db1.testmvtable where year=2020
PREHOOK: type: QUERY
PREHOOK: Input: db1@testmvtable
#### A masked pattern was here ####
POSTHOOK: query: explain select * from db1.testmvtable where year=2020
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@testmvtable
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: testmvtable
          filterExpr: (year = 2020) (type: boolean)
          Filter Operator
            predicate: (year = 2020) (type: boolean)
            Select Operator
              expressions: id (type: int), name (type: string), 2020 (type: int)
              outputColumnNames: _col0, _col1, _col2
              ListSink

PREHOOK: query: drop materialized view db2.testmv
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: db2@testmv
PREHOOK: Output: db2@testmv
POSTHOOK: query: drop materialized view db2.testmv
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: db2@testmv
POSTHOOK: Output: db2@testmv
PREHOOK: query: drop table db1.testmvtable
PREHOOK: type: DROPTABLE
PREHOOK: Input: db1@testmvtable
PREHOOK: Output: db1@testmvtable
POSTHOOK: query: drop table db1.testmvtable
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: db1@testmvtable
POSTHOOK: Output: db1@testmvtable
PREHOOK: query: drop database db1 cascade
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:db1
PREHOOK: Output: database:db1
POSTHOOK: query: drop database db1 cascade
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:db1
POSTHOOK: Output: database:db1
PREHOOK: query: drop database db2 cascade
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:db2
PREHOOK: Output: database:db2
POSTHOOK: query: drop database db2 cascade
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:db2
POSTHOOK: Output: database:db2
