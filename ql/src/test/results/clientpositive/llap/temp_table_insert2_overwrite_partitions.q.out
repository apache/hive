PREHOOK: query: CREATE DATABASE db1
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:db1
POSTHOOK: query: CREATE DATABASE db1
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:db1
PREHOOK: query: CREATE DATABASE db2
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:db2
POSTHOOK: query: CREATE DATABASE db2
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:db2
PREHOOK: query: CREATE TEMPORARY TABLE db1.sourceTable_temp (one string,two string) PARTITIONED BY (ds string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:db1
PREHOOK: Output: db1@sourceTable_temp
POSTHOOK: query: CREATE TEMPORARY TABLE db1.sourceTable_temp (one string,two string) PARTITIONED BY (ds string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:db1
POSTHOOK: Output: db1@sourceTable_temp
PREHOOK: query: load data local inpath '../../data/files/kv1.txt' INTO TABLE db1.sourceTable_temp partition(ds='2011-11-11')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: db1@sourcetable_temp
POSTHOOK: query: load data local inpath '../../data/files/kv1.txt' INTO TABLE db1.sourceTable_temp partition(ds='2011-11-11')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: db1@sourcetable_temp
POSTHOOK: Output: db1@sourcetable_temp@ds=2011-11-11
PREHOOK: query: load data local inpath '../../data/files/kv3.txt' INTO TABLE db1.sourceTable_temp partition(ds='2011-11-11')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: db1@sourcetable_temp@ds=2011-11-11
POSTHOOK: query: load data local inpath '../../data/files/kv3.txt' INTO TABLE db1.sourceTable_temp partition(ds='2011-11-11')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: db1@sourcetable_temp@ds=2011-11-11
PREHOOK: query: CREATE TEMPORARY TABLE db2.destinTable_temp (one string,two string) PARTITIONED BY (ds string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:db2
PREHOOK: Output: db2@destinTable_temp
POSTHOOK: query: CREATE TEMPORARY TABLE db2.destinTable_temp (one string,two string) PARTITIONED BY (ds string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:db2
POSTHOOK: Output: db2@destinTable_temp
PREHOOK: query: EXPLAIN INSERT OVERWRITE TABLE db2.destinTable_temp PARTITION (ds='2011-11-11')
  SELECT one,two FROM db1.sourceTable_temp WHERE ds='2011-11-11' order by one desc, two desc limit 5
PREHOOK: type: QUERY
PREHOOK: Input: db1@sourcetable_temp
PREHOOK: Input: db1@sourcetable_temp@ds=2011-11-11
PREHOOK: Output: db2@destintable_temp@ds=2011-11-11
POSTHOOK: query: EXPLAIN INSERT OVERWRITE TABLE db2.destinTable_temp PARTITION (ds='2011-11-11')
  SELECT one,two FROM db1.sourceTable_temp WHERE ds='2011-11-11' order by one desc, two desc limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@sourcetable_temp
POSTHOOK: Input: db1@sourcetable_temp@ds=2011-11-11
POSTHOOK: Output: db2@destintable_temp@ds=2011-11-11
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: sourcetable_temp
                  filterExpr: (ds = '2011-11-11') (type: boolean)
                  Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
                  Top N Key Operator
                    sort order: --
                    keys: one (type: string), two (type: string)
                    null sort order: aa
                    Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
                    top n: 5
                    Select Operator
                      expressions: one (type: string), two (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        null sort order: aa
                        sort order: --
                        Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
                Limit
                  Number of rows: 5
                  Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: db2.destintable_temp
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string), '2011-11-11' (type: string)
                    outputColumnNames: one, two, ds
                    Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                    Group By Operator
                      aggregations: max(length(one)), avg(COALESCE(length(one),0)), count(1), count(one), compute_bit_vector_hll(one), max(length(two)), avg(COALESCE(length(two),0)), count(two), compute_bit_vector_hll(two)
                      keys: ds (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                      Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                        value expressions: _col1 (type: int), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary), _col6 (type: int), _col7 (type: struct<count:bigint,sum:double,input:int>), _col8 (type: bigint), _col9 (type: binary)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                Statistics: Num rows: 2 Data size: 652 Basic stats: PARTIAL Column stats: NONE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col1,0)) (type: bigint), COALESCE(_col2,0) (type: double), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col6,0)) (type: bigint), COALESCE(_col7,0) (type: double), (_col3 - _col8) (type: bigint), COALESCE(ndv_compute_bit_vector(_col9),0) (type: bigint), _col9 (type: binary), _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                  Statistics: Num rows: 2 Data size: 652 Basic stats: PARTIAL Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 652 Basic stats: PARTIAL Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 2011-11-11
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: db2.destintable_temp

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: one, two
          Column Types: string, string
          Table: db2.destintable_temp

PREHOOK: query: INSERT OVERWRITE TABLE db2.destinTable_temp PARTITION (ds='2011-11-11')
  SELECT one,two FROM db1.sourceTable_temp WHERE ds='2011-11-11' order by one desc, two desc limit 5
PREHOOK: type: QUERY
PREHOOK: Input: db1@sourcetable_temp
PREHOOK: Input: db1@sourcetable_temp@ds=2011-11-11
PREHOOK: Output: db2@destintable_temp@ds=2011-11-11
POSTHOOK: query: INSERT OVERWRITE TABLE db2.destinTable_temp PARTITION (ds='2011-11-11')
  SELECT one,two FROM db1.sourceTable_temp WHERE ds='2011-11-11' order by one desc, two desc limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@sourcetable_temp
POSTHOOK: Input: db1@sourcetable_temp@ds=2011-11-11
POSTHOOK: Output: db2@destintable_temp@ds=2011-11-11
POSTHOOK: Lineage: destintable_temp PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable_temp)sourcetable_temp.FieldSchema(name:one, type:string, comment:null), ]
POSTHOOK: Lineage: destintable_temp PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable_temp)sourcetable_temp.FieldSchema(name:two, type:string, comment:null), ]
PREHOOK: query: select one,two from db2.destinTable_temp order by one desc, two desc
PREHOOK: type: QUERY
PREHOOK: Input: db2@destintable_temp
PREHOOK: Input: db2@destintable_temp@ds=2011-11-11
#### A masked pattern was here ####
POSTHOOK: query: select one,two from db2.destinTable_temp order by one desc, two desc
POSTHOOK: type: QUERY
POSTHOOK: Input: db2@destintable_temp
POSTHOOK: Input: db2@destintable_temp@ds=2011-11-11
#### A masked pattern was here ####
98	val_98
98	val_98
98	val_98
97	val_97
97	val_97
PREHOOK: query: EXPLAIN INSERT OVERWRITE TABLE db2.destinTable_temp PARTITION (ds='2011-11-11')
  SELECT one,two FROM db1.sourceTable_temp WHERE ds='2011-11-11' order by one desc, two desc limit 5
PREHOOK: type: QUERY
PREHOOK: Input: db1@sourcetable_temp
PREHOOK: Input: db1@sourcetable_temp@ds=2011-11-11
PREHOOK: Output: db2@destintable_temp@ds=2011-11-11
POSTHOOK: query: EXPLAIN INSERT OVERWRITE TABLE db2.destinTable_temp PARTITION (ds='2011-11-11')
  SELECT one,two FROM db1.sourceTable_temp WHERE ds='2011-11-11' order by one desc, two desc limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@sourcetable_temp
POSTHOOK: Input: db1@sourcetable_temp@ds=2011-11-11
POSTHOOK: Output: db2@destintable_temp@ds=2011-11-11
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: sourcetable_temp
                  filterExpr: (ds = '2011-11-11') (type: boolean)
                  Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
                  Top N Key Operator
                    sort order: --
                    keys: one (type: string), two (type: string)
                    null sort order: aa
                    Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
                    top n: 5
                    Select Operator
                      expressions: one (type: string), two (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        null sort order: aa
                        sort order: --
                        Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 124 Data size: 40480 Basic stats: PARTIAL Column stats: NONE
                Limit
                  Number of rows: 5
                  Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: db2.destintable_temp
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string), '2011-11-11' (type: string)
                    outputColumnNames: one, two, ds
                    Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                    Group By Operator
                      aggregations: max(length(one)), avg(COALESCE(length(one),0)), count(1), count(one), compute_bit_vector_hll(one), max(length(two)), avg(COALESCE(length(two),0)), count(two), compute_bit_vector_hll(two)
                      keys: ds (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                      Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 5 Data size: 1630 Basic stats: PARTIAL Column stats: NONE
                        value expressions: _col1 (type: int), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary), _col6 (type: int), _col7 (type: struct<count:bigint,sum:double,input:int>), _col8 (type: bigint), _col9 (type: binary)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                Statistics: Num rows: 2 Data size: 652 Basic stats: PARTIAL Column stats: NONE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col1,0)) (type: bigint), COALESCE(_col2,0) (type: double), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col6,0)) (type: bigint), COALESCE(_col7,0) (type: double), (_col3 - _col8) (type: bigint), COALESCE(ndv_compute_bit_vector(_col9),0) (type: bigint), _col9 (type: binary), _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                  Statistics: Num rows: 2 Data size: 652 Basic stats: PARTIAL Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 652 Basic stats: PARTIAL Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 2011-11-11
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: db2.destintable_temp

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: one, two
          Column Types: string, string
          Table: db2.destintable_temp

PREHOOK: query: INSERT OVERWRITE TABLE db2.destinTable_temp PARTITION (ds='2011-11-11')
  SELECT one,two FROM db1.sourceTable_temp WHERE ds='2011-11-11' order by one desc, two desc limit 5
PREHOOK: type: QUERY
PREHOOK: Input: db1@sourcetable_temp
PREHOOK: Input: db1@sourcetable_temp@ds=2011-11-11
PREHOOK: Output: db2@destintable_temp@ds=2011-11-11
POSTHOOK: query: INSERT OVERWRITE TABLE db2.destinTable_temp PARTITION (ds='2011-11-11')
  SELECT one,two FROM db1.sourceTable_temp WHERE ds='2011-11-11' order by one desc, two desc limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@sourcetable_temp
POSTHOOK: Input: db1@sourcetable_temp@ds=2011-11-11
POSTHOOK: Output: db2@destintable_temp@ds=2011-11-11
POSTHOOK: Lineage: destintable_temp PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable_temp)sourcetable_temp.FieldSchema(name:one, type:string, comment:null), ]
POSTHOOK: Lineage: destintable_temp PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable_temp)sourcetable_temp.FieldSchema(name:two, type:string, comment:null), ]
PREHOOK: query: select one,two from db2.destinTable_temp order by one desc, two desc
PREHOOK: type: QUERY
PREHOOK: Input: db2@destintable_temp
PREHOOK: Input: db2@destintable_temp@ds=2011-11-11
#### A masked pattern was here ####
POSTHOOK: query: select one,two from db2.destinTable_temp order by one desc, two desc
POSTHOOK: type: QUERY
POSTHOOK: Input: db2@destintable_temp
POSTHOOK: Input: db2@destintable_temp@ds=2011-11-11
#### A masked pattern was here ####
98	val_98
98	val_98
98	val_98
97	val_97
97	val_97
PREHOOK: query: drop table db2.destinTable_temp
PREHOOK: type: DROPTABLE
PREHOOK: Input: db2@destintable_temp
PREHOOK: Output: db2@destintable_temp
POSTHOOK: query: drop table db2.destinTable_temp
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: db2@destintable_temp
POSTHOOK: Output: db2@destintable_temp
PREHOOK: query: drop table db1.sourceTable_temp
PREHOOK: type: DROPTABLE
PREHOOK: Input: db1@sourcetable_temp
PREHOOK: Output: db1@sourcetable_temp
POSTHOOK: query: drop table db1.sourceTable_temp
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: db1@sourcetable_temp
POSTHOOK: Output: db1@sourcetable_temp
PREHOOK: query: DROP DATABASE db1
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:db1
PREHOOK: Output: database:db1
POSTHOOK: query: DROP DATABASE db1
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:db1
POSTHOOK: Output: database:db1
PREHOOK: query: DROP DATABASE db2
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:db2
PREHOOK: Output: database:db2
POSTHOOK: query: DROP DATABASE db2
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:db2
POSTHOOK: Output: database:db2
