PREHOOK: query: EXPLAIN CREATE TEMPORARY TABLE foo AS SELECT * FROM src WHERE key % 2 = 0
PREHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: query: EXPLAIN CREATE TEMPORARY TABLE foo AS SELECT * FROM src WHERE key % 2 = 0
POSTHOOK: type: CREATETABLE_AS_SELECT
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-2, Stage-0
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((UDFToDouble(key) % 2.0D) = 0.0D) (type: boolean)
                    Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            name: default.foo
            Execution mode: vectorized, llap
            LLAP IO: no inputs

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
      Create Table Operator:
        Create Table
          columns: key string, value string
          input format: org.apache.hadoop.mapred.TextInputFormat
#### A masked pattern was here ####
          output format: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
          serde name: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          name: default.foo
          isTemporary: true

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: CREATE TEMPORARY TABLE foo AS SELECT * FROM src WHERE key % 2 = 0
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@foo
POSTHOOK: query: CREATE TEMPORARY TABLE foo AS SELECT * FROM src WHERE key % 2 = 0
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@foo
PREHOOK: query: EXPLAIN CREATE TEMPORARY TABLE bar AS SELECT * FROM src WHERE key % 2 = 1
PREHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: query: EXPLAIN CREATE TEMPORARY TABLE bar AS SELECT * FROM src WHERE key % 2 = 1
POSTHOOK: type: CREATETABLE_AS_SELECT
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-2, Stage-0
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((UDFToDouble(key) % 2.0D) = 1.0D) (type: boolean)
                    Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            name: default.bar
            Execution mode: vectorized, llap
            LLAP IO: no inputs

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
      Create Table Operator:
        Create Table
          columns: key string, value string
          input format: org.apache.hadoop.mapred.TextInputFormat
#### A masked pattern was here ####
          output format: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
          serde name: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          name: default.bar
          isTemporary: true

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: CREATE TEMPORARY TABLE bar AS SELECT * FROM src WHERE key % 2 = 1
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@bar
POSTHOOK: query: CREATE TEMPORARY TABLE bar AS SELECT * FROM src WHERE key % 2 = 1
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bar
PREHOOK: query: DESCRIBE foo
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@foo
POSTHOOK: query: DESCRIBE foo
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@foo
key                 	string              	                    
value               	string              	                    
PREHOOK: query: DESCRIBE bar
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@bar
POSTHOOK: query: DESCRIBE bar
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@bar
key                 	string              	                    
value               	string              	                    
PREHOOK: query: explain select * from foo order by key limit 10
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from foo order by key limit 10
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: foo
                  Statistics: Num rows: 247 Data size: 86848 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 247 Data size: 86848 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Statistics: Num rows: 247 Data size: 86848 Basic stats: COMPLETE Column stats: NONE
                      TopN Hash Memory Usage: 0.1
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 247 Data size: 86848 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 10 Data size: 3510 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 10 Data size: 3510 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

PREHOOK: query: select * from foo order by key limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: select * from foo order by key limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
100	val_100
104	val_104
104	val_104
114	val_114
116	val_116
PREHOOK: query: explain select * from (select * from foo union all select * from bar) u order by key limit 10
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from (select * from foo union all select * from bar) u order by key limit 10
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Union 2 (CONTAINS)
        Map 4 <- Union 2 (CONTAINS)
        Reducer 3 <- Union 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: foo
                  Statistics: Num rows: 247 Data size: 86848 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 247 Data size: 86848 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 175904 Basic stats: COMPLETE Column stats: NONE
                      TopN Hash Memory Usage: 0.1
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: bar
                  Statistics: Num rows: 253 Data size: 89056 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 253 Data size: 89056 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 175904 Basic stats: COMPLETE Column stats: NONE
                      TopN Hash Memory Usage: 0.1
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 175904 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 10 Data size: 3510 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 10 Data size: 3510 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Union 2 
            Vertex: Union 2

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

PREHOOK: query: select * from (select * from foo union all select * from bar) u order by key limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@bar
PREHOOK: Input: default@foo
#### A masked pattern was here ####
POSTHOOK: query: select * from (select * from foo union all select * from bar) u order by key limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bar
POSTHOOK: Input: default@foo
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
100	val_100
103	val_103
103	val_103
104	val_104
104	val_104
PREHOOK: query: CREATE TEMPORARY TABLE baz LIKE foo
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@baz
POSTHOOK: query: CREATE TEMPORARY TABLE baz LIKE foo
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@baz
PREHOOK: query: INSERT OVERWRITE TABLE baz SELECT * from foo
PREHOOK: type: QUERY
PREHOOK: Input: default@foo
PREHOOK: Output: default@baz
POSTHOOK: query: INSERT OVERWRITE TABLE baz SELECT * from foo
POSTHOOK: type: QUERY
POSTHOOK: Input: default@foo
POSTHOOK: Output: default@baz
POSTHOOK: Lineage: baz.key SIMPLE [(foo)foo.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: baz.value SIMPLE [(foo)foo.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE TEMPORARY TABLE bay (key string, value string) STORED AS orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bay
POSTHOOK: query: CREATE TEMPORARY TABLE bay (key string, value string) STORED AS orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bay
PREHOOK: query: select * from bay
PREHOOK: type: QUERY
PREHOOK: Input: default@bay
#### A masked pattern was here ####
POSTHOOK: query: select * from bay
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bay
#### A masked pattern was here ####
PREHOOK: query: INSERT OVERWRITE TABLE bay SELECT * FROM src ORDER BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@bay
POSTHOOK: query: INSERT OVERWRITE TABLE bay SELECT * FROM src ORDER BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@bay
POSTHOOK: Lineage: bay.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bay.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from bay order by key limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@bay
#### A masked pattern was here ####
POSTHOOK: query: select * from bay order by key limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bay
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
100	val_100
103	val_103
103	val_103
104	val_104
104	val_104
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
alltypesorc
alltypesparquet
bar
bay
baz
cbo_t1
cbo_t2
cbo_t3
foo
lineitem
part
src
src1
src_cbo
src_json
src_sequencefile
src_thrift
srcbucket
srcbucket2
srcpart
PREHOOK: query: CREATE DATABASE two
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:two
POSTHOOK: query: CREATE DATABASE two
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:two
PREHOOK: query: USE two
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:two
POSTHOOK: query: USE two
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:two
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:two
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:two
PREHOOK: query: CREATE TEMPORARY TABLE foo AS SELECT * FROM default.foo
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@foo
PREHOOK: Output: database:two
PREHOOK: Output: two@foo
POSTHOOK: query: CREATE TEMPORARY TABLE foo AS SELECT * FROM default.foo
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@foo
POSTHOOK: Output: database:two
POSTHOOK: Output: two@foo
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:two
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:two
foo
PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: DROP DATABASE two CASCADE
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:two
PREHOOK: Output: database:two
PREHOOK: Output: two@foo
POSTHOOK: query: DROP DATABASE two CASCADE
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:two
POSTHOOK: Output: database:two
POSTHOOK: Output: two@foo
PREHOOK: query: DROP TABLE bay
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@bay
PREHOOK: Output: default@bay
POSTHOOK: query: DROP TABLE bay
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@bay
POSTHOOK: Output: default@bay
PREHOOK: query: create table s_n4 as select * from src limit 10
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@s_n4
POSTHOOK: query: create table s_n4 as select * from src limit 10
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@s_n4
POSTHOOK: Lineage: s_n4.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: s_n4.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select count(*) from s_n4
PREHOOK: type: QUERY
PREHOOK: Input: default@s_n4
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from s_n4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@s_n4
#### A masked pattern was here ####
10
PREHOOK: query: create temporary table s_n4 as select * from s_n4 limit 2
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@s_n4
PREHOOK: Output: database:default
PREHOOK: Output: default@s_n4
POSTHOOK: query: create temporary table s_n4 as select * from s_n4 limit 2
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@s_n4
POSTHOOK: Output: database:default
POSTHOOK: Output: default@s_n4
PREHOOK: query: select count(*) from s_n4
PREHOOK: type: QUERY
PREHOOK: Input: default@s_n4
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from s_n4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@s_n4
#### A masked pattern was here ####
2
PREHOOK: query: with s_n4 as ( select * from src limit 1)
select count(*) from s_n4
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: with s_n4 as ( select * from src limit 1)
select count(*) from s_n4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
1
PREHOOK: query: with src as ( select * from s_n4)
select count(*) from src
PREHOOK: type: QUERY
PREHOOK: Input: default@s_n4
#### A masked pattern was here ####
POSTHOOK: query: with src as ( select * from s_n4)
select count(*) from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@s_n4
#### A masked pattern was here ####
2
PREHOOK: query: drop table s_n4
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@s_n4
PREHOOK: Output: default@s_n4
POSTHOOK: query: drop table s_n4
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@s_n4
POSTHOOK: Output: default@s_n4
PREHOOK: query: select count(*) from s_n4
PREHOOK: type: QUERY
PREHOOK: Input: default@s_n4
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from s_n4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@s_n4
#### A masked pattern was here ####
10
PREHOOK: query: with s_n4 as ( select * from src limit 1)
select count(*) from s_n4
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: with s_n4 as ( select * from src limit 1)
select count(*) from s_n4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
1
PREHOOK: query: with src as ( select * from s_n4)
select count(*) from src
PREHOOK: type: QUERY
PREHOOK: Input: default@s_n4
#### A masked pattern was here ####
POSTHOOK: query: with src as ( select * from s_n4)
select count(*) from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@s_n4
#### A masked pattern was here ####
10
PREHOOK: query: drop table s_n4
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@s_n4
PREHOOK: Output: default@s_n4
POSTHOOK: query: drop table s_n4
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@s_n4
POSTHOOK: Output: default@s_n4
