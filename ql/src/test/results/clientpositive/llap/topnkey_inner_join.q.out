PREHOOK: query: drop table if exists customer
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists customer
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists orders
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists orders
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table customer (id int, name string, email string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@customer
POSTHOOK: query: create table customer (id int, name string, email string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@customer
PREHOOK: query: create table orders (customer_id int , amount int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@orders
POSTHOOK: query: create table orders (customer_id int , amount int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orders
PREHOOK: query: alter table customer add constraint pk_customer_id primary key (id) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table customer add constraint pk_customer_id primary key (id) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table orders add constraint fk_order_customer_id foreign key (customer_id) references customer(id) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table orders add constraint fk_order_customer_id foreign key (customer_id) references customer(id) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: insert into customer values
  (4, 'Heisenberg', 'heisenberg@email.com'),
  (3, 'Smith', 'smith@email.com'),
  (2, 'Jones', 'jones@email.com'),
  (1, 'Robinson', 'robinson@email.com')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@customer
POSTHOOK: query: insert into customer values
  (4, 'Heisenberg', 'heisenberg@email.com'),
  (3, 'Smith', 'smith@email.com'),
  (2, 'Jones', 'jones@email.com'),
  (1, 'Robinson', 'robinson@email.com')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@customer
POSTHOOK: Lineage: customer.email SCRIPT []
POSTHOOK: Lineage: customer.id SCRIPT []
POSTHOOK: Lineage: customer.name SCRIPT []
PREHOOK: query: insert into orders values
  (null, 1),
  (2, 200),
  (3, 40),
  (1, 100),
  (1, 50),
  (3, 30)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@orders
POSTHOOK: query: insert into orders values
  (null, 1),
  (2, 200),
  (3, 40),
  (1, 100),
  (1, 50),
  (3, 30)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@orders
POSTHOOK: Lineage: orders.amount SCRIPT []
POSTHOOK: Lineage: orders.customer_id SCRIPT []
PREHOOK: query: select 'positive: order by columns are coming from child table'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'positive: order by columns are coming from child table'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
positive: order by columns are coming from child table
PREHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by orders.amount limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by orders.amount limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Top N Key Operator
                      sort order: +
                      keys: amount (type: int)
                      null sort order: z
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      top n: 3
                      Select Operator
                        expressions: customer_id (type: int), amount (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: customer
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), name (type: string), email (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col1 (type: int)
                  null sort order: z
                  sort order: +
                  Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col2 (type: int), _col3 (type: string), _col4 (type: string)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), KEY.reducesinkkey0 (type: int), VALUE._col1 (type: int), VALUE._col2 (type: string), VALUE._col3 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by orders.customer_id, orders.amount limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by orders.customer_id, orders.amount limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Top N Key Operator
                      sort order: ++
                      keys: customer_id (type: int), amount (type: int)
                      null sort order: zz
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      top n: 3
                      Select Operator
                        expressions: customer_id (type: int), amount (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: customer
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), name (type: string), email (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int), _col1 (type: int)
                  null sort order: zz
                  sort order: ++
                  Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col2 (type: int), _col3 (type: string), _col4 (type: string)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: int), VALUE._col0 (type: int), VALUE._col1 (type: string), VALUE._col2 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: explain select * from customer join orders on orders.customer_id = customer.id order by orders.amount, orders.customer_id limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from customer join orders on orders.customer_id = customer.id order by orders.amount, orders.customer_id limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: customer
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), name (type: string), email (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Top N Key Operator
                      sort order: ++
                      keys: amount (type: int), customer_id (type: int)
                      null sort order: zz
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      top n: 3
                      Select Operator
                        expressions: customer_id (type: int), amount (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col4 (type: int), _col3 (type: int)
                  null sort order: zz
                  sort order: ++
                  Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), VALUE._col2 (type: string), KEY.reducesinkkey1 (type: int), KEY.reducesinkkey0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by orders.amount limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by orders.amount limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
3	30	3	Smith	smith@email.com
3	40	3	Smith	smith@email.com
1	50	1	Robinson	robinson@email.com
PREHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by orders.customer_id, orders.amount limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by orders.customer_id, orders.amount limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
1	50	1	Robinson	robinson@email.com
1	100	1	Robinson	robinson@email.com
2	200	2	Jones	jones@email.com
PREHOOK: query: select * from customer join orders on orders.customer_id = customer.id order by orders.amount, orders.customer_id limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from customer join orders on orders.customer_id = customer.id order by orders.amount, orders.customer_id limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
3	Smith	smith@email.com	3	30
3	Smith	smith@email.com	3	40
1	Robinson	robinson@email.com	1	50
PREHOOK: query: select 'negative: order by columns are coming from referenced table'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'negative: order by columns are coming from referenced table'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
negative: order by columns are coming from referenced table
PREHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by customer.name limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by customer.name limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: customer_id (type: int), amount (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: customer
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), name (type: string), email (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                Top N Key Operator
                  sort order: +
                  keys: _col3 (type: string)
                  null sort order: z
                  Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                  top n: 3
                  Reduce Output Operator
                    key expressions: _col3 (type: string)
                    null sort order: z
                    sort order: +
                    Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col4 (type: string)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: int), VALUE._col2 (type: int), KEY.reducesinkkey0 (type: string), VALUE._col3 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by customer.email, customer.name limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by customer.email, customer.name limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: customer_id (type: int), amount (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: customer
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), name (type: string), email (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                Top N Key Operator
                  sort order: ++
                  keys: _col4 (type: string), _col3 (type: string)
                  null sort order: zz
                  Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                  top n: 3
                  Reduce Output Operator
                    key expressions: _col4 (type: string), _col3 (type: string)
                    null sort order: zz
                    sort order: ++
                    Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: int), VALUE._col2 (type: int), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by customer.name limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by customer.name limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
2	200	2	Jones	jones@email.com
1	100	1	Robinson	robinson@email.com
1	50	1	Robinson	robinson@email.com
PREHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by customer.email, customer.name limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by customer.email, customer.name limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
2	200	2	Jones	jones@email.com
1	100	1	Robinson	robinson@email.com
1	50	1	Robinson	robinson@email.com
PREHOOK: query: select 'negative: 1st order by columns is coming from referenced table'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'negative: 1st order by columns is coming from referenced table'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
negative: 1st order by columns is coming from referenced table
PREHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by customer.name, orders.amount limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by customer.name, orders.amount limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: customer_id (type: int), amount (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: customer
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), name (type: string), email (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                Top N Key Operator
                  sort order: ++
                  keys: _col3 (type: string), _col1 (type: int)
                  null sort order: zz
                  Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                  top n: 3
                  Reduce Output Operator
                    key expressions: _col3 (type: string), _col1 (type: int)
                    null sort order: zz
                    sort order: ++
                    Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: int), _col2 (type: int), _col4 (type: string)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), KEY.reducesinkkey1 (type: int), VALUE._col1 (type: int), KEY.reducesinkkey0 (type: string), VALUE._col2 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by customer.name, orders.amount limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by customer.name, orders.amount limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
2	200	2	Jones	jones@email.com
1	50	1	Robinson	robinson@email.com
1	100	1	Robinson	robinson@email.com
PREHOOK: query: select 'mixed/positive: 1st n order by columns are coming from child table'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'mixed/positive: 1st n order by columns are coming from child table'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
mixed/positive: 1st n order by columns are coming from child table
PREHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by orders.amount, customer.name limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from orders join customer on customer.id = orders.customer_id order by orders.amount, customer.name limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Top N Key Operator
                      sort order: +
                      keys: amount (type: int)
                      null sort order: z
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      top n: 3
                      Select Operator
                        expressions: customer_id (type: int), amount (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: customer
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), name (type: string), email (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Top N Key Operator
                  sort order: ++
                  keys: _col1 (type: int), _col3 (type: string)
                  null sort order: zz
                  Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                  top n: 3
                  Reduce Output Operator
                    key expressions: _col1 (type: int), _col3 (type: string)
                    null sort order: zz
                    sort order: ++
                    Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: int), _col2 (type: int), _col4 (type: string)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), KEY.reducesinkkey0 (type: int), VALUE._col1 (type: int), KEY.reducesinkkey1 (type: string), VALUE._col2 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1008 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 608 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 608 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by orders.amount, customer.name limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from orders join customer on customer.id = orders.customer_id order by orders.amount, customer.name limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
3	30	3	Smith	smith@email.com
3	40	3	Smith	smith@email.com
1	50	1	Robinson	robinson@email.com
PREHOOK: query: select 'positive: nulls first'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'positive: nulls first'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
positive: nulls first
PREHOOK: query: explain select * from customer join orders on orders.customer_id = customer.id order by customer_id nulls first limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from customer join orders on orders.customer_id = customer.id order by customer_id nulls first limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: customer
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), name (type: string), email (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Top N Key Operator
                      sort order: +
                      keys: customer_id (type: int)
                      null sort order: a
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      top n: 1
                      Select Operator
                        expressions: customer_id (type: int), amount (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 5 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col3 (type: int)
                  null sort order: a
                  sort order: +
                  Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col4 (type: int)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), VALUE._col2 (type: string), KEY.reducesinkkey0 (type: int), VALUE._col3 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 1
                  Statistics: Num rows: 1 Data size: 204 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 204 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: select * from customer join orders on orders.customer_id = customer.id order by customer_id nulls first limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from customer join orders on orders.customer_id = customer.id order by customer_id nulls first limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
1	Robinson	robinson@email.com	1	100
PREHOOK: query: select 'negative: no PK/FK'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'negative: no PK/FK'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
negative: no PK/FK
PREHOOK: query: alter table customer drop constraint pk_customer_id
PREHOOK: type: ALTERTABLE_DROPCONSTRAINT
POSTHOOK: query: alter table customer drop constraint pk_customer_id
POSTHOOK: type: ALTERTABLE_DROPCONSTRAINT
PREHOOK: query: alter table orders drop constraint fk_order_customer_id
PREHOOK: type: ALTERTABLE_DROPCONSTRAINT
POSTHOOK: query: alter table orders drop constraint fk_order_customer_id
POSTHOOK: type: ALTERTABLE_DROPCONSTRAINT
PREHOOK: query: explain select * from customer join orders on customer.id = orders.customer_id order by customer.id limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from customer join orders on customer.id = orders.customer_id order by customer.id limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: customer
                  filterExpr: id is not null (type: boolean)
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: id is not null (type: boolean)
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: id (type: int), name (type: string), email (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: customer_id (type: int), amount (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                Top N Key Operator
                  sort order: +
                  keys: _col0 (type: int)
                  null sort order: z
                  Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                  top n: 3
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    null sort order: z
                    sort order: +
                    Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: int), _col4 (type: int)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: int), VALUE._col3 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: select * from customer join orders on customer.id = orders.customer_id order by customer.id limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from customer join orders on customer.id = orders.customer_id order by customer.id limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
1	Robinson	robinson@email.com	1	100
1	Robinson	robinson@email.com	1	50
2	Jones	jones@email.com	2	200
PREHOOK: query: select 'negatie: no RELY'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'negatie: no RELY'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
negatie: no RELY
PREHOOK: query: alter table customer add constraint pk_customer_id primary key (id) disable novalidate
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table customer add constraint pk_customer_id primary key (id) disable novalidate
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table orders add constraint fk_order_customer_id foreign key (customer_id) references customer(id) disable novalidate
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table orders add constraint fk_order_customer_id foreign key (customer_id) references customer(id) disable novalidate
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: explain select * from customer join orders on customer.id = orders.customer_id order by customer.id limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: explain select * from customer join orders on customer.id = orders.customer_id order by customer.id limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: customer
                  filterExpr: id is not null (type: boolean)
                  Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: id is not null (type: boolean)
                    Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: id (type: int), name (type: string), email (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 4 Data size: 784 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: orders
                  filterExpr: customer_id is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: customer_id is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: customer_id (type: int), amount (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                Top N Key Operator
                  sort order: +
                  keys: _col0 (type: int)
                  null sort order: z
                  Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                  top n: 3
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    null sort order: z
                    sort order: +
                    Statistics: Num rows: 5 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: int), _col4 (type: int)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: int), VALUE._col3 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 5 Data size: 1016 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 3
                  Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 3
      Processor Tree:
        ListSink

PREHOOK: query: select * from customer join orders on customer.id = orders.customer_id order by customer.id limit 3
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@orders
#### A masked pattern was here ####
POSTHOOK: query: select * from customer join orders on customer.id = orders.customer_id order by customer.id limit 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@orders
#### A masked pattern was here ####
1	Robinson	robinson@email.com	1	100
1	Robinson	robinson@email.com	1	50
2	Jones	jones@email.com	2	200
