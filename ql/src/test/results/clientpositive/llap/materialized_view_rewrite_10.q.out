PREHOOK: query: create table emps_n10 (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@emps_n10
POSTHOOK: query: create table emps_n10 (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emps_n10
PREHOOK: query: insert into emps_n10 values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (110, 10, 'Bill', 10000, 250)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps_n10
POSTHOOK: query: insert into emps_n10 values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (110, 10, 'Bill', 10000, 250)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps_n10
POSTHOOK: Lineage: emps_n10.commission SCRIPT []
POSTHOOK: Lineage: emps_n10.deptno SCRIPT []
POSTHOOK: Lineage: emps_n10.empid SCRIPT []
POSTHOOK: Lineage: emps_n10.name SCRIPT []
POSTHOOK: Lineage: emps_n10.salary SCRIPT []
PREHOOK: query: analyze table emps_n10 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@emps_n10
PREHOOK: Output: default@emps_n10
#### A masked pattern was here ####
POSTHOOK: query: analyze table emps_n10 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@emps_n10
POSTHOOK: Output: default@emps_n10
#### A masked pattern was here ####
PREHOOK: query: create materialized view mv1_n10 as
select deptno, sum(salary), count(salary) as a
from emps_n10 group by deptno
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n10
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n10
POSTHOOK: query: create materialized view mv1_n10 as
select deptno, sum(salary), count(salary) as a
from emps_n10 group by deptno
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n10
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n10
PREHOOK: query: analyze table mv1_n10 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n10
PREHOOK: Output: default@mv1_n10
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n10 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n10
POSTHOOK: Output: default@mv1_n10
#### A masked pattern was here ####
PREHOOK: query: explain
select deptno, avg(salary) as a
from emps_n10 group by deptno
PREHOOK: type: QUERY
POSTHOOK: query: explain
select deptno, avg(salary) as a
from emps_n10 group by deptno
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n10
          Select Operator
            expressions: deptno (type: int), (_c1 / a) (type: double)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: select deptno, avg(salary) as a
from emps_n10 group by deptno
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n10
PREHOOK: Input: default@mv1_n10
#### A masked pattern was here ####
POSTHOOK: query: select deptno, avg(salary) as a
from emps_n10 group by deptno
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n10
POSTHOOK: Input: default@mv1_n10
#### A masked pattern was here ####
10	9250.0
20	8000.0
PREHOOK: query: drop materialized view mv1_n10
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n10
PREHOOK: Output: default@mv1_n10
POSTHOOK: query: drop materialized view mv1_n10
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n10
POSTHOOK: Output: default@mv1_n10
PREHOOK: query: create materialized view mv1_n10 as
select salary, sum(salary), count(salary) as a
from emps_n10 group by salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n10
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n10
POSTHOOK: query: create materialized view mv1_n10 as
select salary, sum(salary), count(salary) as a
from emps_n10 group by salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n10
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n10
PREHOOK: query: analyze table mv1_n10 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n10
PREHOOK: Output: default@mv1_n10
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n10 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n10
POSTHOOK: Output: default@mv1_n10
#### A masked pattern was here ####
PREHOOK: query: explain
select salary, avg(salary) as a
from emps_n10 group by salary
PREHOOK: type: QUERY
POSTHOOK: query: explain
select salary, avg(salary) as a
from emps_n10 group by salary
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n10
          Select Operator
            expressions: salary (type: float), (_c1 / a) (type: double)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: select salary, avg(salary) as a
from emps_n10 group by salary
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n10
PREHOOK: Input: default@mv1_n10
#### A masked pattern was here ####
POSTHOOK: query: select salary, avg(salary) as a
from emps_n10 group by salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n10
POSTHOOK: Input: default@mv1_n10
#### A masked pattern was here ####
10000.0	10000.0
7000.0	7000.0
8000.0	8000.0
PREHOOK: query: drop materialized view mv1_n10
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n10
PREHOOK: Output: default@mv1_n10
POSTHOOK: query: drop materialized view mv1_n10
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n10
POSTHOOK: Output: default@mv1_n10
PREHOOK: query: create materialized view mv1_n10 as
select salary, sum(salary), count(salary) as a
from emps_n10 where salary > 0 group by salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n10
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n10
POSTHOOK: query: create materialized view mv1_n10 as
select salary, sum(salary), count(salary) as a
from emps_n10 where salary > 0 group by salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n10
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n10
PREHOOK: query: analyze table mv1_n10 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n10
PREHOOK: Output: default@mv1_n10
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n10 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n10
POSTHOOK: Output: default@mv1_n10
#### A masked pattern was here ####
PREHOOK: query: explain
select salary, avg(salary) as a
from emps_n10 where salary > 0 group by salary
PREHOOK: type: QUERY
POSTHOOK: query: explain
select salary, avg(salary) as a
from emps_n10 where salary > 0 group by salary
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n10
          Select Operator
            expressions: salary (type: float), (_c1 / a) (type: double)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: select salary, avg(salary) as a
from emps_n10 where salary > 0 group by salary
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n10
PREHOOK: Input: default@mv1_n10
#### A masked pattern was here ####
POSTHOOK: query: select salary, avg(salary) as a
from emps_n10 where salary > 0 group by salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n10
POSTHOOK: Input: default@mv1_n10
#### A masked pattern was here ####
10000.0	10000.0
7000.0	7000.0
8000.0	8000.0
PREHOOK: query: drop materialized view mv1_n10
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n10
PREHOOK: Output: default@mv1_n10
POSTHOOK: query: drop materialized view mv1_n10
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n10
POSTHOOK: Output: default@mv1_n10
PREHOOK: query: create table emps_n10_2 (
  empid int,
  deptno int,
  name varchar(256),
  salary tinyint,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@emps_n10_2
POSTHOOK: query: create table emps_n10_2 (
  empid int,
  deptno int,
  name varchar(256),
  salary tinyint,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emps_n10_2
PREHOOK: query: insert into emps_n10_2 values (100, 10, 'Bill', 1, 1000), (200, 20, 'Eric', 2, 500),
  (150, 10, 'Sebastian', 2, null), (110, 10, 'Theodore', 3, 250), (110, 10, 'Bill', 0, 250)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps_n10_2
POSTHOOK: query: insert into emps_n10_2 values (100, 10, 'Bill', 1, 1000), (200, 20, 'Eric', 2, 500),
  (150, 10, 'Sebastian', 2, null), (110, 10, 'Theodore', 3, 250), (110, 10, 'Bill', 0, 250)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps_n10_2
POSTHOOK: Lineage: emps_n10_2.commission SCRIPT []
POSTHOOK: Lineage: emps_n10_2.deptno SCRIPT []
POSTHOOK: Lineage: emps_n10_2.empid SCRIPT []
POSTHOOK: Lineage: emps_n10_2.name SCRIPT []
POSTHOOK: Lineage: emps_n10_2.salary SCRIPT []
PREHOOK: query: analyze table emps_n10_2 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@emps_n10_2
PREHOOK: Output: default@emps_n10_2
#### A masked pattern was here ####
POSTHOOK: query: analyze table emps_n10_2 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@emps_n10_2
POSTHOOK: Output: default@emps_n10_2
#### A masked pattern was here ####
PREHOOK: query: create materialized view mv1_n10 as
select salary, sum(salary), count(salary) as a
from emps_n10_2 where salary > 0 group by salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n10_2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n10
POSTHOOK: query: create materialized view mv1_n10 as
select salary, sum(salary), count(salary) as a
from emps_n10_2 where salary > 0 group by salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n10_2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n10
PREHOOK: query: analyze table mv1_n10 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n10
PREHOOK: Output: default@mv1_n10
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n10 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n10
POSTHOOK: Output: default@mv1_n10
#### A masked pattern was here ####
PREHOOK: query: explain
select avg(salary)
from emps_n10_2 where salary > 0
PREHOOK: type: QUERY
POSTHOOK: query: explain
select avg(salary)
from emps_n10_2 where salary > 0
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv1_n10
                  Statistics: Num rows: 3 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _c1 (type: bigint), a (type: bigint)
                    outputColumnNames: _c1, a
                    Statistics: Num rows: 3 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: sum(_c1), $sum0(a)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: bigint), _col1 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), $sum0(VALUE._col1)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: (UDFToDouble(_col0) / _col1) (type: double)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select avg(salary)
from emps_n10_2 where salary > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n10_2
PREHOOK: Input: default@mv1_n10
#### A masked pattern was here ####
POSTHOOK: query: select avg(salary)
from emps_n10_2 where salary > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n10_2
POSTHOOK: Input: default@mv1_n10
#### A masked pattern was here ####
2.0
PREHOOK: query: drop materialized view mv1_n10
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n10
PREHOOK: Output: default@mv1_n10
POSTHOOK: query: drop materialized view mv1_n10
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n10
POSTHOOK: Output: default@mv1_n10
PREHOOK: query: drop table emps_n10
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@emps_n10
PREHOOK: Output: default@emps_n10
POSTHOOK: query: drop table emps_n10
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@emps_n10
POSTHOOK: Output: default@emps_n10
PREHOOK: query: drop table emps_n10_2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@emps_n10_2
PREHOOK: Output: default@emps_n10_2
POSTHOOK: query: drop table emps_n10_2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@emps_n10_2
POSTHOOK: Output: default@emps_n10_2
