PREHOOK: query: CREATE TABLE table_16 (
timestamp_col_19    timestamp,
timestamp_col_29    timestamp
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_16
POSTHOOK: query: CREATE TABLE table_16 (
timestamp_col_19    timestamp,
timestamp_col_29    timestamp
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_16
PREHOOK: query: INSERT INTO table_16(timestamp_col_19, timestamp_col_29) VALUES
('2018-01-10 15:03:55.0', '2018-01-10 15:04:55.0'),
('2018-01-10 15:03:55.0', '2018-01-10 15:04:55.0'),
('2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0'),
('2020-01-01 00:00:01.0', '2020-01-01 00:00:02.0')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_16
POSTHOOK: query: INSERT INTO table_16(timestamp_col_19, timestamp_col_29) VALUES
('2018-01-10 15:03:55.0', '2018-01-10 15:04:55.0'),
('2018-01-10 15:03:55.0', '2018-01-10 15:04:55.0'),
('2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0'),
('2020-01-01 00:00:01.0', '2020-01-01 00:00:02.0')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_16
POSTHOOK: Lineage: table_16.timestamp_col_19 SCRIPT []
POSTHOOK: Lineage: table_16.timestamp_col_29 SCRIPT []
PREHOOK: query: CREATE TABLE table_7 (
int_col_10      int,
bigint_col_3    bigint
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_7
POSTHOOK: query: CREATE TABLE table_7 (
int_col_10      int,
bigint_col_3    bigint
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_7
PREHOOK: query: INSERT INTO table_7(int_col_10, bigint_col_3) VALUES
(3, 200),
(3, 100),
(2, 250),
(2, 280),
(2, 50)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_7
POSTHOOK: query: INSERT INTO table_7(int_col_10, bigint_col_3) VALUES
(3, 200),
(3, 100),
(2, 250),
(2, 280),
(2, 50)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_7
POSTHOOK: Lineage: table_7.bigint_col_3 SCRIPT []
POSTHOOK: Lineage: table_7.int_col_10 SCRIPT []
PREHOOK: query: CREATE TABLE table_10 (
boolean_col_16      boolean,
timestamp_col_5     timestamp,
timestamp_col_15    timestamp,
timestamp_col_30    timestamp,
int_col_18          int
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_10
POSTHOOK: query: CREATE TABLE table_10 (
boolean_col_16      boolean,
timestamp_col_5     timestamp,
timestamp_col_15    timestamp,
timestamp_col_30    timestamp,
int_col_18          int
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_10
PREHOOK: query: INSERT INTO table_10(boolean_col_16, timestamp_col_5, timestamp_col_15, timestamp_col_30, int_col_18) VALUES
(true, '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', 11),
(true, '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', 11),
(true, '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', 11),
(true, '2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0', 15),
(true, '2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0', 15),
(true, '2018-03-10 03:05:01.0', '2018-03-10 03:05:01.0', '2018-03-10 03:05:01.0', 18)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_10
POSTHOOK: query: INSERT INTO table_10(boolean_col_16, timestamp_col_5, timestamp_col_15, timestamp_col_30, int_col_18) VALUES
(true, '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', 11),
(true, '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', 11),
(true, '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', '2018-01-10 15:03:55.0', 11),
(true, '2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0', 15),
(true, '2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0', '2018-02-10 07:12:55.0', 15),
(true, '2018-03-10 03:05:01.0', '2018-03-10 03:05:01.0', '2018-03-10 03:05:01.0', 18)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_10
POSTHOOK: Lineage: table_10.boolean_col_16 SCRIPT []
POSTHOOK: Lineage: table_10.int_col_18 SCRIPT []
POSTHOOK: Lineage: table_10.timestamp_col_15 SCRIPT []
POSTHOOK: Lineage: table_10.timestamp_col_30 SCRIPT []
POSTHOOK: Lineage: table_10.timestamp_col_5 SCRIPT []
Warning: Shuffle Join MERGEJOIN[47][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain cbo
SELECT
    DISTINCT COALESCE(a4.timestamp_col_15, IF(a4.boolean_col_16, a4.timestamp_col_30, a4.timestamp_col_5)) AS timestamp_col
FROM table_7 a3
RIGHT JOIN table_10 a4
WHERE (a3.bigint_col_3) >= (a4.int_col_18)
INTERSECT ALL
SELECT
    COALESCE(LEAST(
        COALESCE(a1.timestamp_col_19, CAST('2010-03-29 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2014-08-16 00:00:00' AS TIMESTAMP))
        ),
        GREATEST(COALESCE(a1.timestamp_col_19, CAST('2013-07-01 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2028-06-18 00:00:00' AS TIMESTAMP)))
    ) AS timestamp_col
FROM table_16 a1
    GROUP BY COALESCE(LEAST(
        COALESCE(a1.timestamp_col_19, CAST('2010-03-29 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2014-08-16 00:00:00' AS TIMESTAMP))
    ),
    GREATEST(
        COALESCE(a1.timestamp_col_19, CAST('2013-07-01 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2028-06-18 00:00:00' AS TIMESTAMP)))
    )
PREHOOK: type: QUERY
PREHOOK: Input: default@table_10
PREHOOK: Input: default@table_16
PREHOOK: Input: default@table_7
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
SELECT
    DISTINCT COALESCE(a4.timestamp_col_15, IF(a4.boolean_col_16, a4.timestamp_col_30, a4.timestamp_col_5)) AS timestamp_col
FROM table_7 a3
RIGHT JOIN table_10 a4
WHERE (a3.bigint_col_3) >= (a4.int_col_18)
INTERSECT ALL
SELECT
    COALESCE(LEAST(
        COALESCE(a1.timestamp_col_19, CAST('2010-03-29 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2014-08-16 00:00:00' AS TIMESTAMP))
        ),
        GREATEST(COALESCE(a1.timestamp_col_19, CAST('2013-07-01 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2028-06-18 00:00:00' AS TIMESTAMP)))
    ) AS timestamp_col
FROM table_16 a1
    GROUP BY COALESCE(LEAST(
        COALESCE(a1.timestamp_col_19, CAST('2010-03-29 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2014-08-16 00:00:00' AS TIMESTAMP))
    ),
    GREATEST(
        COALESCE(a1.timestamp_col_19, CAST('2013-07-01 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2028-06-18 00:00:00' AS TIMESTAMP)))
    )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_10
POSTHOOK: Input: default@table_16
POSTHOOK: Input: default@table_7
#### A masked pattern was here ####
CBO PLAN:
HiveProject($f0=[$1])
  HiveTableFunctionScan(invocation=[replicate_rows($0, $1)], rowType=[RecordType(BIGINT $f0, TIMESTAMP(9) $f1)])
    HiveProject($f0=[$2], $f1=[$0])
      HiveFilter(condition=[=($1, 2)])
        HiveAggregate(group=[{0}], agg#0=[count($1)], agg#1=[min($1)])
          HiveProject($f0=[$0], $f1=[$1])
            HiveUnion(all=[true])
              HiveProject($f0=[$0], $f1=[$1])
                HiveAggregate(group=[{0}], agg#0=[count()])
                  HiveProject(CASE=[$0])
                    HiveAggregate(group=[{1}])
                      HiveJoin(condition=[>=($0, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                        HiveProject(bigint_col_3=[$1])
                          HiveFilter(condition=[IS NOT NULL($1)])
                            HiveTableScan(table=[[default, table_7]], table:alias=[a3])
                        HiveProject(CASE=[CASE(IS NOT NULL($2), $2, if($0, $3, $1))], CAST=[CAST($4):BIGINT])
                          HiveFilter(condition=[IS NOT NULL(CAST($4):BIGINT)])
                            HiveTableScan(table=[[default, table_10]], table:alias=[a4])
              HiveProject($f0=[$0], $f1=[$1])
                HiveAggregate(group=[{0}], agg#0=[count()])
                  HiveProject($f0=[$0])
                    HiveAggregate(group=[{0}])
                      HiveProject($f0=[CASE(IS NOT NULL(least(CASE(IS NOT NULL($0), $0, 2010-03-29 00:00:00:TIMESTAMP(9)), CASE(IS NOT NULL($1), $1, 2014-08-16 00:00:00:TIMESTAMP(9)))), least(CASE(IS NOT NULL($0), $0, 2010-03-29 00:00:00:TIMESTAMP(9)), CASE(IS NOT NULL($1), $1, 2014-08-16 00:00:00:TIMESTAMP(9))), greatest(CASE(IS NOT NULL($0), $0, 2013-07-01 00:00:00:TIMESTAMP(9)), CASE(IS NOT NULL($1), $1, 2028-06-18 00:00:00:TIMESTAMP(9))))])
                        HiveTableScan(table=[[default, table_16]], table:alias=[a1])

Warning: Shuffle Join MERGEJOIN[47][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: SELECT
    DISTINCT COALESCE(a4.timestamp_col_15, IF(a4.boolean_col_16, a4.timestamp_col_30, a4.timestamp_col_5)) AS timestamp_col
FROM table_7 a3
RIGHT JOIN table_10 a4
WHERE (a3.bigint_col_3) >= (a4.int_col_18)
INTERSECT ALL
SELECT
    COALESCE(LEAST(
        COALESCE(a1.timestamp_col_19, CAST('2010-03-29 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2014-08-16 00:00:00' AS TIMESTAMP))
        ),
        GREATEST(COALESCE(a1.timestamp_col_19, CAST('2013-07-01 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2028-06-18 00:00:00' AS TIMESTAMP)))
    ) AS timestamp_col
FROM table_16 a1
    GROUP BY COALESCE(LEAST(
        COALESCE(a1.timestamp_col_19, CAST('2010-03-29 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2014-08-16 00:00:00' AS TIMESTAMP))
    ),
    GREATEST(
        COALESCE(a1.timestamp_col_19, CAST('2013-07-01 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2028-06-18 00:00:00' AS TIMESTAMP)))
    )
PREHOOK: type: QUERY
PREHOOK: Input: default@table_10
PREHOOK: Input: default@table_16
PREHOOK: Input: default@table_7
#### A masked pattern was here ####
POSTHOOK: query: SELECT
    DISTINCT COALESCE(a4.timestamp_col_15, IF(a4.boolean_col_16, a4.timestamp_col_30, a4.timestamp_col_5)) AS timestamp_col
FROM table_7 a3
RIGHT JOIN table_10 a4
WHERE (a3.bigint_col_3) >= (a4.int_col_18)
INTERSECT ALL
SELECT
    COALESCE(LEAST(
        COALESCE(a1.timestamp_col_19, CAST('2010-03-29 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2014-08-16 00:00:00' AS TIMESTAMP))
        ),
        GREATEST(COALESCE(a1.timestamp_col_19, CAST('2013-07-01 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2028-06-18 00:00:00' AS TIMESTAMP)))
    ) AS timestamp_col
FROM table_16 a1
    GROUP BY COALESCE(LEAST(
        COALESCE(a1.timestamp_col_19, CAST('2010-03-29 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2014-08-16 00:00:00' AS TIMESTAMP))
    ),
    GREATEST(
        COALESCE(a1.timestamp_col_19, CAST('2013-07-01 00:00:00' AS TIMESTAMP)),
        COALESCE(a1.timestamp_col_29, CAST('2028-06-18 00:00:00' AS TIMESTAMP)))
    )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_10
POSTHOOK: Input: default@table_16
POSTHOOK: Input: default@table_7
#### A masked pattern was here ####
2018-02-10 07:12:55
2018-01-10 15:03:55
