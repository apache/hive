PREHOOK: query: CREATE TABLE T1_n56(key STRING, val STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n56
POSTHOOK: query: CREATE TABLE T1_n56(key STRING, val STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n56
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_n56
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_n56
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_n56
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_n56
PREHOOK: query: INSERT OVERWRITE TABLE T1_n56 select key, val from T1_n56
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@t1_n56
POSTHOOK: query: INSERT OVERWRITE TABLE T1_n56 select key, val from T1_n56
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@t1_n56
POSTHOOK: Lineage: t1_n56.key SIMPLE [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t1_n56.val SIMPLE [(t1_n56)t1_n56.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE outputTbl1_n13(key int, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl1_n13
POSTHOOK: query: CREATE TABLE outputTbl1_n13(key int, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl1_n13
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM T1_n56 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM T1_n56 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
OPTIMIZED SQL: SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n56`
GROUP BY `key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n13
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n13
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int)
                          outputColumnNames: key, cnt
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                          Group By Operator
                            aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.99
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                            Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n13
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n13

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n13
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM T1_n56 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM T1_n56 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
POSTHOOK: Lineage: outputtbl1_n13.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl1_n13.key EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: CREATE TABLE outputTbl2_n3(key1 int, key2 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl2_n3
POSTHOOK: query: CREATE TABLE outputTbl2_n3(key1 int, key2 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl2_n3
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl2_n3
SELECT key, val, count(1) FROM T1_n56 GROUP BY key, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl2_n3
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl2_n3
SELECT key, val, count(1) FROM T1_n56 GROUP BY key, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl2_n3
OPTIMIZED SQL: SELECT `key`, `val`, COUNT(*) AS `$f2`
FROM `default`.`t1_n56`
GROUP BY `key`, `val`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        key expressions: _col0 (type: string), _col1 (type: string)
                        null sort order: zz
                        numBuckets: -1
                        sort order: ++
                        Map-reduce partition columns: rand() (type: double)
                        Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col2 (type: bigint)
                        auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: partials
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: string), _col1 (type: string)
                  null sort order: zz
                  numBuckets: -1
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col2 (type: bigint)
                  auto parallelism: true
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key1,key2,cnt
                          columns.comments 
                          columns.types int:string:int
#### A masked pattern was here ####
                          name default.outputtbl2_n3
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl2_n3
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: string), _col2 (type: int)
                    outputColumnNames: key1, key2, cnt
                    Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: min(key1), max(key1), count(1), count(key1), compute_bit_vector_hll(key1), max(length(key2)), avg(COALESCE(length(key2),0)), count(key2), compute_bit_vector_hll(key2), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                      Statistics: Num rows: 1 Data size: 928 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        null sort order: 
                        numBuckets: -1
                        sort order: 
                        Statistics: Num rows: 1 Data size: 928 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: int), _col11 (type: bigint), _col12 (type: binary)
                        auto parallelism: false
        Reducer 4 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), min(VALUE._col9), max(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                Statistics: Num rows: 1 Data size: 928 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'LONG' (type: string), UDFToLong(_col9) (type: bigint), UDFToLong(_col10) (type: bigint), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
                  Statistics: Num rows: 1 Data size: 928 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 928 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,cnt
                columns.comments 
                columns.types int:string:int
#### A masked pattern was here ####
                name default.outputtbl2_n3
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl2_n3

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key1, key2, cnt
          Column Types: int, string, int
          Table: default.outputtbl2_n3
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl2_n3
SELECT key, val, count(1) FROM T1_n56 GROUP BY key, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl2_n3
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl2_n3
SELECT key, val, count(1) FROM T1_n56 GROUP BY key, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl2_n3
POSTHOOK: Lineage: outputtbl2_n3.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl2_n3.key1 EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl2_n3.key2 SIMPLE [(t1_n56)t1_n56.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl2_n3
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl2_n3
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl2_n3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl2_n3
#### A masked pattern was here ####
1	11	1
2	12	1
3	13	1
7	17	1
8	18	1
8	28	1
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM (SELECT key, val FROM T1_n56) subq1 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM (SELECT key, val FROM T1_n56) subq1 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
OPTIMIZED SQL: SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n56`
GROUP BY `key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n13
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n13
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int)
                          outputColumnNames: key, cnt
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                          Group By Operator
                            aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.99
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                            Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n13
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n13

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n13
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM (SELECT key, val FROM T1_n56) subq1 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM (SELECT key, val FROM T1_n56) subq1 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
POSTHOOK: Lineage: outputtbl1_n13.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl1_n13.key EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT k, count(1) FROM (SELECT key as k, val as v FROM T1_n56) subq1 GROUP BY k
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT k, count(1) FROM (SELECT key as k, val as v FROM T1_n56) subq1 GROUP BY k
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
OPTIMIZED SQL: SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n56`
GROUP BY `key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n13
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n13
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int)
                          outputColumnNames: key, cnt
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                          Group By Operator
                            aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.99
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                            Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n13
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n13

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n13
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT k, count(1) FROM (SELECT key as k, val as v FROM T1_n56) subq1 GROUP BY k
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT k, count(1) FROM (SELECT key as k, val as v FROM T1_n56) subq1 GROUP BY k
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
POSTHOOK: Lineage: outputtbl1_n13.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl1_n13.key EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: CREATE TABLE outputTbl3_n1(key1 int, key2 int, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl3_n1
POSTHOOK: query: CREATE TABLE outputTbl3_n1(key1 int, key2 int, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl3_n1
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl3_n1
SELECT 1, key, count(1) FROM T1_n56 GROUP BY 1, key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl3_n1
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl3_n1
SELECT 1, key, count(1) FROM T1_n56 GROUP BY 1, key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl3_n1
OPTIMIZED SQL: SELECT 1 AS `_o__c0`, `key`, COUNT(*) AS `_o__c2`
FROM `default`.`t1_n56`
GROUP BY `key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: 1 (type: int), UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,cnt
                                columns.comments 
                                columns.types int:int:int
#### A masked pattern was here ####
                                name default.outputtbl3_n1
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl3_n1
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int)
                          outputColumnNames: key1, key2, cnt
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                          Group By Operator
                            aggregations: min(key1), max(key1), count(1), count(key1), compute_bit_vector_hll(key1), min(key2), max(key2), count(key2), compute_bit_vector_hll(key2), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.99
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                            Statistics: Num rows: 1 Data size: 676 Basic stats: COMPLETE Column stats: NONE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 676 Basic stats: COMPLETE Column stats: NONE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: int), _col11 (type: bigint), _col12 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), min(VALUE._col9), max(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                Statistics: Num rows: 1 Data size: 676 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'LONG' (type: string), UDFToLong(_col9) (type: bigint), UDFToLong(_col10) (type: bigint), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
                  Statistics: Num rows: 1 Data size: 676 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 676 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,cnt
                columns.comments 
                columns.types int:int:int
#### A masked pattern was here ####
                name default.outputtbl3_n1
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl3_n1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key1, key2, cnt
          Column Types: int, int, int
          Table: default.outputtbl3_n1
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl3_n1
SELECT 1, key, count(1) FROM T1_n56 GROUP BY 1, key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl3_n1
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl3_n1
SELECT 1, key, count(1) FROM T1_n56 GROUP BY 1, key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl3_n1
POSTHOOK: Lineage: outputtbl3_n1.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl3_n1.key1 SIMPLE []
POSTHOOK: Lineage: outputtbl3_n1.key2 EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl3_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl3_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl3_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl3_n1
#### A masked pattern was here ####
1	1	1
1	2	1
1	3	1
1	7	1
1	8	2
PREHOOK: query: CREATE TABLE outputTbl4_n1(key1 int, key2 int, key3 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl4_n1
POSTHOOK: query: CREATE TABLE outputTbl4_n1(key1 int, key2 int, key3 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl4_n1
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, 1, val, count(1) FROM T1_n56 GROUP BY key, 1, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl4_n1
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, 1, val, count(1) FROM T1_n56 GROUP BY key, 1, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl4_n1
OPTIMIZED SQL: SELECT `key`, 1 AS `_o__c1`, `val`, COUNT(*) AS `_o__c3`
FROM `default`.`t1_n56`
GROUP BY `key`, `val`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        key expressions: _col0 (type: string), _col1 (type: string)
                        null sort order: zz
                        numBuckets: -1
                        sort order: ++
                        Map-reduce partition columns: rand() (type: double)
                        Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col2 (type: bigint)
                        auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: partials
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: string), _col1 (type: string)
                  null sort order: zz
                  numBuckets: -1
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col2 (type: bigint)
                  auto parallelism: true
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), 1 (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key1,key2,key3,cnt
                          columns.comments 
                          columns.types int:int:string:int
#### A masked pattern was here ####
                          name default.outputtbl4_n1
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl4_n1
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: int)
                    outputColumnNames: key1, key2, key3, cnt
                    Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: min(key1), max(key1), count(1), count(key1), compute_bit_vector_hll(key1), min(key2), max(key2), count(key2), compute_bit_vector_hll(key2), max(length(key3)), avg(COALESCE(length(key3),0)), count(key3), compute_bit_vector_hll(key3), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                      Statistics: Num rows: 1 Data size: 1088 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        null sort order: 
                        numBuckets: -1
                        sort order: 
                        Statistics: Num rows: 1 Data size: 1088 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary), _col13 (type: int), _col14 (type: int), _col15 (type: bigint), _col16 (type: binary)
                        auto parallelism: false
        Reducer 4 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12), min(VALUE._col13), max(VALUE._col14), count(VALUE._col15), compute_bit_vector_hll(VALUE._col16)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                Statistics: Num rows: 1 Data size: 1088 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary), 'LONG' (type: string), UDFToLong(_col13) (type: bigint), UDFToLong(_col14) (type: bigint), (_col2 - _col15) (type: bigint), COALESCE(ndv_compute_bit_vector(_col16),0) (type: bigint), _col16 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23
                  Statistics: Num rows: 1 Data size: 1088 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 1088 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17,_col18,_col19,_col20,_col21,_col22,_col23
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,cnt
                columns.comments 
                columns.types int:int:string:int
#### A masked pattern was here ####
                name default.outputtbl4_n1
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl4_n1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key1, key2, key3, cnt
          Column Types: int, int, string, int
          Table: default.outputtbl4_n1
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, 1, val, count(1) FROM T1_n56 GROUP BY key, 1, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl4_n1
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, 1, val, count(1) FROM T1_n56 GROUP BY key, 1, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl4_n1
POSTHOOK: Lineage: outputtbl4_n1.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl4_n1.key1 EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl4_n1.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl4_n1.key3 SIMPLE [(t1_n56)t1_n56.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl4_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl4_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl4_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl4_n1
#### A masked pattern was here ####
1	1	11	1
2	1	12	1
3	1	13	1
7	1	17	1
8	1	18	1
8	1	28	1
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl3_n1
SELECT key, key + 1, count(1) FROM T1_n56 GROUP BY key, key + 1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl3_n1
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl3_n1
SELECT key, key + 1, count(1) FROM T1_n56 GROUP BY key, key + 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl3_n1
OPTIMIZED SQL: SELECT `key` AS `$f0`, CAST(`key` AS DOUBLE) + 1 AS `$f1`, COUNT(*) AS `$f2`
FROM `default`.`t1_n56`
GROUP BY `key`, CAST(`key` AS DOUBLE) + 1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), (UDFToDouble(key) + 1.0D) (type: double)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: _col0 (type: string), _col1 (type: double)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        key expressions: _col0 (type: string), _col1 (type: double)
                        null sort order: zz
                        numBuckets: -1
                        sort order: ++
                        Map-reduce partition columns: rand() (type: double)
                        Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col2 (type: bigint)
                        auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: double)
                mode: partials
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: string), _col1 (type: double)
                  null sort order: zz
                  numBuckets: -1
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: double)
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col2 (type: bigint)
                  auto parallelism: true
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: double)
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int), UDFToInteger(_col2) (type: int)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key1,key2,cnt
                          columns.comments 
                          columns.types int:int:int
#### A masked pattern was here ####
                          name default.outputtbl3_n1
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl3_n1
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int)
                    outputColumnNames: key1, key2, cnt
                    Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: min(key1), max(key1), count(1), count(key1), compute_bit_vector_hll(key1), min(key2), max(key2), count(key2), compute_bit_vector_hll(key2), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                      Statistics: Num rows: 1 Data size: 672 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        null sort order: 
                        numBuckets: -1
                        sort order: 
                        Statistics: Num rows: 1 Data size: 672 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: int), _col11 (type: bigint), _col12 (type: binary)
                        auto parallelism: false
        Reducer 4 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), min(VALUE._col9), max(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                Statistics: Num rows: 1 Data size: 672 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'LONG' (type: string), UDFToLong(_col9) (type: bigint), UDFToLong(_col10) (type: bigint), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
                  Statistics: Num rows: 1 Data size: 672 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 672 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,cnt
                columns.comments 
                columns.types int:int:int
#### A masked pattern was here ####
                name default.outputtbl3_n1
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl3_n1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key1, key2, cnt
          Column Types: int, int, int
          Table: default.outputtbl3_n1
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl3_n1
SELECT key, key + 1, count(1) FROM T1_n56 GROUP BY key, key + 1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl3_n1
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl3_n1
SELECT key, key + 1, count(1) FROM T1_n56 GROUP BY key, key + 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl3_n1
POSTHOOK: Lineage: outputtbl3_n1.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl3_n1.key1 EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl3_n1.key2 EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl3_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl3_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl3_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl3_n1
#### A masked pattern was here ####
1	2	1
2	3	1
3	4	1
7	8	1
8	9	2
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT cast(key + key as string), sum(cnt) from
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq1
group by key + key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT cast(key + key as string), sum(cnt) from
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq1
group by key + key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
OPTIMIZED SQL: SELECT CAST(CAST(`key` AS DOUBLE) + CAST(`key` AS DOUBLE) AS STRING) AS `_o__c0`, SUM(COUNT(*)) AS `_o__c1`
FROM `default`.`t1_n56`
GROUP BY CAST(`key` AS DOUBLE) + CAST(`key` AS DOUBLE)
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: (UDFToDouble(_col0) + UDFToDouble(_col0)) (type: double), _col1 (type: bigint)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                        Group By Operator
                          aggregations: sum(_col1)
                          keys: _col0 (type: double)
                          minReductionHashAggr: 0.99
                          mode: hash
                          outputColumnNames: _col0, _col1
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                          Reduce Output Operator
                            bucketingVersion: 2
                            key expressions: _col0 (type: double)
                            null sort order: z
                            numBuckets: -1
                            sort order: +
                            Map-reduce partition columns: rand() (type: double)
                            Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                            tag: -1
                            value expressions: _col1 (type: bigint)
                            auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: double)
                mode: partials
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: double)
                  null sort order: z
                  numBuckets: -1
                  sort order: +
                  Map-reduce partition columns: _col0 (type: double)
                  Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col1 (type: bigint)
                  auto parallelism: true
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: double)
                mode: final
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(CAST( _col0 AS STRING)) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,cnt
                          columns.comments 
                          columns.types int:int
#### A masked pattern was here ####
                          name default.outputtbl1_n13
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1_n13
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: int)
                    outputColumnNames: key, cnt
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        null sort order: 
                        numBuckets: -1
                        sort order: 
                        Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                        auto parallelism: false
        Reducer 4 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n13
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n13

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n13
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT cast(key + key as string), sum(cnt) from
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq1
group by key + key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT cast(key + key as string), sum(cnt) from
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq1
group by key + key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
POSTHOOK: Lineage: outputtbl1_n13.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl1_n13.key EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
14	1
16	2
2	1
4	1
6	1
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT * FROM (
SELECT key, count(1) FROM T1_n56 GROUP BY key
  UNION ALL
SELECT key, count(1) FROM T1_n56 GROUP BY key
) subq1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT * FROM (
SELECT key, count(1) FROM T1_n56 GROUP BY key
  UNION ALL
SELECT key, count(1) FROM T1_n56 GROUP BY key
) subq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
OPTIMIZED SQL: SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n56`
GROUP BY `key`
UNION ALL
SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n56`
GROUP BY `key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Union 2 (CONTAINS)
        Map 4 <- Union 2 (CONTAINS)
        Reducer 3 <- Union 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n13
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n13
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int)
                          outputColumnNames: key, cnt
                          Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                          Group By Operator
                            aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.99
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                            Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n13
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n13
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int)
                          outputColumnNames: key, cnt
                          Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                          Group By Operator
                            aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.99
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                            Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false
        Union 2 
            Vertex: Union 2

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n13
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n13

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n13
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT * FROM (
SELECT key, count(1) FROM T1_n56 GROUP BY key
  UNION ALL
SELECT key, count(1) FROM T1_n56 GROUP BY key
) subq1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT * FROM (
SELECT key, count(1) FROM T1_n56 GROUP BY key
  UNION ALL
SELECT key, count(1) FROM T1_n56 GROUP BY key
) subq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
POSTHOOK: Lineage: outputtbl1_n13.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl1_n13.key EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
1	1
1	1
2	1
2	1
3	1
3	1
7	1
7	1
8	2
8	2
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT * FROM (
SELECT key, count(1) FROM T1_n56 GROUP BY key
  UNION ALL
SELECT cast(key + key as string) as key, count(1) FROM T1_n56 GROUP BY key + key
) subq1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT * FROM (
SELECT key, count(1) FROM T1_n56 GROUP BY key
  UNION ALL
SELECT cast(key + key as string) as key, count(1) FROM T1_n56 GROUP BY key + key
) subq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
OPTIMIZED SQL: SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n56`
GROUP BY `key`
UNION ALL
SELECT CAST(CAST(`key` AS DOUBLE) + CAST(`key` AS DOUBLE) AS STRING) AS `key`, COUNT(*) AS `_o__c1`
FROM `default`.`t1_n56`
GROUP BY CAST(`key` AS DOUBLE) + CAST(`key` AS DOUBLE)
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Union 2 (CONTAINS)
        Reducer 3 <- Union 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Map 4 (SIMPLE_EDGE)
        Reducer 6 <- Reducer 5 (SIMPLE_EDGE), Union 2 (CONTAINS)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n13
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n13
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int)
                          outputColumnNames: key, cnt
                          Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                          Group By Operator
                            aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.99
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                            Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: (UDFToDouble(key) + UDFToDouble(key)) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: _col0 (type: double)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        key expressions: _col0 (type: double)
                        null sort order: z
                        numBuckets: -1
                        sort order: +
                        Map-reduce partition columns: rand() (type: double)
                        Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col1 (type: bigint)
                        auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false
        Reducer 5 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: double)
                mode: partials
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: double)
                  null sort order: z
                  numBuckets: -1
                  sort order: +
                  Map-reduce partition columns: _col0 (type: double)
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col1 (type: bigint)
                  auto parallelism: true
        Reducer 6 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: double)
                mode: final
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: CAST( _col0 AS STRING) (type: string), _col1 (type: bigint)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      bucketingVersion: 2
                      compressed: false
                      GlobalTableId: 1
#### A masked pattern was here ####
                      NumFilesPerFileSink: 1
                      Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          properties:
                            bucketing_version 2
                            column.name.delimiter ,
                            columns key,cnt
                            columns.comments 
                            columns.types int:int
#### A masked pattern was here ####
                            name default.outputtbl1_n13
                            serialization.format 1
                            serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.outputtbl1_n13
                      TotalFiles: 1
                      GatherStats: true
                      MultiFileSpray: false
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: int)
                      outputColumnNames: key, cnt
                      Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                        Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          bucketingVersion: 2
                          null sort order: 
                          numBuckets: -1
                          sort order: 
                          Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                          tag: -1
                          value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                          auto parallelism: false
        Union 2 
            Vertex: Union 2

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n13
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n13

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n13
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT * FROM (
SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key
  UNION ALL
SELECT cast(key + key as string) as key, count(1) as cnt FROM T1_n56 GROUP BY key + key
) subq1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT * FROM (
SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key
  UNION ALL
SELECT cast(key + key as string) as key, count(1) as cnt FROM T1_n56 GROUP BY key + key
) subq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
POSTHOOK: Lineage: outputtbl1_n13.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl1_n13.key EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
1	1
14	1
16	2
2	1
2	1
3	1
4	1
6	1
7	1
8	2
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT subq1.key, subq1.cnt+subq2.cnt FROM 
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq1
JOIN
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq2
ON subq1.key = subq2.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT subq1.key, subq1.cnt+subq2.cnt FROM 
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq1
JOIN
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq2
ON subq1.key = subq2.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
OPTIMIZED SQL: SELECT `t0`.`key`, `t0`.`$f1` + `t2`.`$f1` AS `_o__c1`
FROM (SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n56`
WHERE `key` IS NOT NULL
GROUP BY `key`) AS `t0`
INNER JOIN (SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n56`
WHERE `key` IS NOT NULL
GROUP BY `key`) AS `t2` ON `t0`.`key` = `t2`.`key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Dummy Store
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Merge Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: string)
                          1 _col0 (type: string)
                        outputColumnNames: _col0, _col1, _col3
                        Position of Big Table: 0
                        Statistics: Num rows: 3 Data size: 607 Basic stats: COMPLETE Column stats: NONE
                        Select Operator
                          expressions: UDFToInteger(_col0) (type: int), UDFToInteger((_col1 + _col3)) (type: int)
                          outputColumnNames: _col0, _col1
                          Statistics: Num rows: 3 Data size: 607 Basic stats: COMPLETE Column stats: NONE
                          File Output Operator
                            bucketingVersion: 2
                            compressed: false
                            GlobalTableId: 1
#### A masked pattern was here ####
                            NumFilesPerFileSink: 1
                            Statistics: Num rows: 3 Data size: 607 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                            table:
                                input format: org.apache.hadoop.mapred.TextInputFormat
                                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                properties:
                                  bucketing_version 2
                                  column.name.delimiter ,
                                  columns key,cnt
                                  columns.comments 
                                  columns.types int:int
#### A masked pattern was here ####
                                  name default.outputtbl1_n13
                                  serialization.format 1
                                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                name: default.outputtbl1_n13
                            TotalFiles: 1
                            GatherStats: true
                            MultiFileSpray: false
                          Select Operator
                            expressions: _col0 (type: int), _col1 (type: int)
                            outputColumnNames: key, cnt
                            Statistics: Num rows: 3 Data size: 607 Basic stats: COMPLETE Column stats: NONE
                            Group By Operator
                              aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                              minReductionHashAggr: 0.99
                              mode: hash
                              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                              Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: NONE
                              Reduce Output Operator
                                bucketingVersion: 2
                                null sort order: 
                                numBuckets: -1
                                sort order: 
                                Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: NONE
                                tag: -1
                                value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                                auto parallelism: false
            Execution mode: llap
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n13
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n13

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n13
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT subq1.key, subq1.cnt+subq2.cnt FROM 
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq1
JOIN
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq2
ON subq1.key = subq2.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT subq1.key, subq1.cnt+subq2.cnt FROM 
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq1
JOIN
(SELECT key, count(1) as cnt FROM T1_n56 GROUP BY key) subq2
ON subq1.key = subq2.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@outputtbl1_n13
POSTHOOK: Lineage: outputtbl1_n13.cnt EXPRESSION [(t1_n56)t1_n56.null, ]
POSTHOOK: Lineage: outputtbl1_n13.key EXPRESSION [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
1	2
2	2
3	2
7	2
PREHOOK: query: EXPLAIN EXTENDED 
SELECT * FROM 
(SELECT key, count(1) FROM T1_n56 GROUP BY key) subq1
JOIN
(SELECT key, val, count(1) FROM T1_n56 GROUP BY key, val) subq2
ON subq1.key = subq2.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN EXTENDED 
SELECT * FROM 
(SELECT key, count(1) FROM T1_n56 GROUP BY key) subq1
JOIN
(SELECT key, val, count(1) FROM T1_n56 GROUP BY key, val) subq2
ON subq1.key = subq2.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT *
FROM (SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n56`
WHERE `key` IS NOT NULL
GROUP BY `key`) AS `t0`
INNER JOIN (SELECT `key`, `val`, COUNT(*) AS `$f2`
FROM `default`.`t1_n56`
WHERE `key` IS NOT NULL
GROUP BY `key`, `val`) AS `t2` ON `t0`.`key` = `t2`.`key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Map 1 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n56
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        key expressions: _col0 (type: string), _col1 (type: string)
                        null sort order: zz
                        numBuckets: -1
                        sort order: ++
                        Map-reduce partition columns: rand() (type: double)
                        Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col2 (type: bigint)
                        auto parallelism: true
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        key expressions: _col0 (type: string)
                        null sort order: z
                        numBuckets: -1
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                        tag: 0
                        value expressions: _col1 (type: bigint)
                        auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n56
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n56
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n56
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n56
                  name: default.t1_n56
            Truncated Path -> Alias:
              /t1_n56 [t1_n56]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: partials
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: string), _col1 (type: string)
                  null sort order: zz
                  numBuckets: -1
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 6 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                  tag: -1
                  value expressions: _col2 (type: bigint)
                  auto parallelism: true
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: string)
                  null sort order: z
                  numBuckets: -1
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 3 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  tag: 1
                  value expressions: _col1 (type: string), _col2 (type: bigint)
                  auto parallelism: true
        Reducer 4 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Position of Big Table: 1
                Statistics: Num rows: 3 Data size: 607 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  bucketingVersion: 2
                  compressed: false
                  GlobalTableId: 0
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 3 Data size: 607 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        bucketing_version -1
                        columns _col0,_col1,_col2,_col3,_col4
                        columns.types string:bigint:string:string:bigint
                        escape.delim \
                        hive.serialization.extend.additional.nesting.levels true
                        serialization.escape.crlf true
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: CREATE TABLE T2_n34(key STRING, val STRING)
CLUSTERED BY (key, val) SORTED BY (key, val) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T2_n34
POSTHOOK: query: CREATE TABLE T2_n34(key STRING, val STRING)
CLUSTERED BY (key, val) SORTED BY (key, val) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2_n34
PREHOOK: query: INSERT OVERWRITE TABLE T2_n34 select key, val from T1_n56
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n56
PREHOOK: Output: default@t2_n34
POSTHOOK: query: INSERT OVERWRITE TABLE T2_n34 select key, val from T1_n56
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n56
POSTHOOK: Output: default@t2_n34
POSTHOOK: Lineage: t2_n34.key SIMPLE [(t1_n56)t1_n56.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t2_n34.val SIMPLE [(t1_n56)t1_n56.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM T2_n34 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM T2_n34 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl1_n13
OPTIMIZED SQL: SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t2_n34`
GROUP BY `key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n34
                  Statistics: Num rows: 6 Data size: 510 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 510 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      bucketGroup: true
                      keys: key (type: string)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        bucketingVersion: 2
                        key expressions: _col0 (type: string)
                        null sort order: z
                        numBuckets: -1
                        sort order: +
                        Map-reduce partition columns: rand() (type: double)
                        Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                        tag: -1
                        value expressions: _col1 (type: bigint)
                        auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n34
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n34
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n34
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n34
                  name: default.t2_n34
            Truncated Path -> Alias:
              /t2_n34 [t2_n34]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: partials
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: string)
                  null sort order: z
                  numBuckets: -1
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: -1
                  value expressions: _col1 (type: bigint)
                  auto parallelism: true
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: final
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,cnt
                          columns.comments 
                          columns.types int:int
#### A masked pattern was here ####
                          name default.outputtbl1_n13
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1_n13
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: int)
                    outputColumnNames: key, cnt
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.8
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        bucketingVersion: 2
                        null sort order: 
                        numBuckets: -1
                        sort order: 
                        Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                        tag: -1
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                        auto parallelism: false
        Reducer 4 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n13
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n13

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n13
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM T2_n34 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl1_n13
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n13
SELECT key, count(1) FROM T2_n34 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl1_n13
POSTHOOK: Lineage: outputtbl1_n13.cnt EXPRESSION [(t2_n34)t2_n34.null, ]
POSTHOOK: Lineage: outputtbl1_n13.key EXPRESSION [(t2_n34)t2_n34.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n13
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, 1, val, count(1) FROM T2_n34 GROUP BY key, 1, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl4_n1
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, 1, val, count(1) FROM T2_n34 GROUP BY key, 1, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl4_n1
OPTIMIZED SQL: SELECT `key`, 1 AS `_o__c1`, `val`, COUNT(*) AS `_o__c3`
FROM `default`.`t2_n34`
GROUP BY `key`, `val`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n34
                  Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 1074 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), 1 (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 6 Data size: 588 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 588 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,key3,cnt
                                columns.comments 
                                columns.types int:int:string:int
#### A masked pattern was here ####
                                name default.outputtbl4_n1
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl4_n1
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: int)
                          outputColumnNames: key1, key2, key3, cnt
                          Statistics: Num rows: 6 Data size: 588 Basic stats: COMPLETE Column stats: COMPLETE
                          Group By Operator
                            aggregations: min(key1), max(key1), count(1), count(key1), compute_bit_vector_hll(key1), min(key2), max(key2), count(key2), compute_bit_vector_hll(key2), max(length(key3)), avg(COALESCE(length(key3),0)), count(key3), compute_bit_vector_hll(key3), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.8333333
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                            Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: COMPLETE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary), _col13 (type: int), _col14 (type: int), _col15 (type: bigint), _col16 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n34
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n34
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n34
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n34
                  name: default.t2_n34
            Truncated Path -> Alias:
              /t2_n34 [t2_n34]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12), min(VALUE._col13), max(VALUE._col14), count(VALUE._col15), compute_bit_vector_hll(VALUE._col16)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                Statistics: Num rows: 1 Data size: 652 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary), 'LONG' (type: string), UDFToLong(_col13) (type: bigint), UDFToLong(_col14) (type: bigint), (_col2 - _col15) (type: bigint), COALESCE(ndv_compute_bit_vector(_col16),0) (type: bigint), _col16 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23
                  Statistics: Num rows: 1 Data size: 1058 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 1058 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17,_col18,_col19,_col20,_col21,_col22,_col23
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,cnt
                columns.comments 
                columns.types int:int:string:int
#### A masked pattern was here ####
                name default.outputtbl4_n1
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl4_n1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key1, key2, key3, cnt
          Column Types: int, int, string, int
          Table: default.outputtbl4_n1
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, 1, val, count(1) FROM T2_n34 GROUP BY key, 1, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl4_n1
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, 1, val, count(1) FROM T2_n34 GROUP BY key, 1, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl4_n1
POSTHOOK: Lineage: outputtbl4_n1.cnt EXPRESSION [(t2_n34)t2_n34.null, ]
POSTHOOK: Lineage: outputtbl4_n1.key1 EXPRESSION [(t2_n34)t2_n34.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl4_n1.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl4_n1.key3 SIMPLE [(t2_n34)t2_n34.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl4_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl4_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl4_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl4_n1
#### A masked pattern was here ####
1	1	11	1
2	1	12	1
3	1	13	1
7	1	17	1
8	1	18	1
8	1	28	1
PREHOOK: query: CREATE TABLE outputTbl5_n1(key1 int, key2 int, key3 string, key4 int, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl5_n1
POSTHOOK: query: CREATE TABLE outputTbl5_n1(key1 int, key2 int, key3 string, key4 int, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl5_n1
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl5_n1
SELECT key, 1, val, 2, count(1) FROM T2_n34 GROUP BY key, 1, val, 2
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl5_n1
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl5_n1
SELECT key, 1, val, 2, count(1) FROM T2_n34 GROUP BY key, 1, val, 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl5_n1
OPTIMIZED SQL: SELECT `key`, 1 AS `_o__c1`, `val`, 2 AS `_o__c3`, COUNT(*) AS `_o__c4`
FROM `default`.`t2_n34`
GROUP BY `key`, `val`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n34
                  Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 1074 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), 1 (type: int), _col1 (type: string), 2 (type: int), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4
                        Statistics: Num rows: 6 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,key3,key4,cnt
                                columns.comments 
                                columns.types int:int:string:int:int
#### A masked pattern was here ####
                                name default.outputtbl5_n1
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl5_n1
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: int), _col4 (type: int)
                          outputColumnNames: key1, key2, key3, key4, cnt
                          Statistics: Num rows: 6 Data size: 612 Basic stats: COMPLETE Column stats: COMPLETE
                          Group By Operator
                            aggregations: min(key1), max(key1), count(1), count(key1), compute_bit_vector_hll(key1), min(key2), max(key2), count(key2), compute_bit_vector_hll(key2), max(length(key3)), avg(COALESCE(length(key3),0)), count(key3), compute_bit_vector_hll(key3), min(key4), max(key4), count(key4), compute_bit_vector_hll(key4), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.8333333
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20
                            Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 880 Basic stats: COMPLETE Column stats: COMPLETE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary), _col13 (type: int), _col14 (type: int), _col15 (type: bigint), _col16 (type: binary), _col17 (type: int), _col18 (type: int), _col19 (type: bigint), _col20 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n34
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n34
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n34
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n34
                  name: default.t2_n34
            Truncated Path -> Alias:
              /t2_n34 [t2_n34]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12), min(VALUE._col13), max(VALUE._col14), count(VALUE._col15), compute_bit_vector_hll(VALUE._col16), min(VALUE._col17), max(VALUE._col18), count(VALUE._col19), compute_bit_vector_hll(VALUE._col20)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20
                Statistics: Num rows: 1 Data size: 812 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary), 'LONG' (type: string), UDFToLong(_col13) (type: bigint), UDFToLong(_col14) (type: bigint), (_col2 - _col15) (type: bigint), COALESCE(ndv_compute_bit_vector(_col16),0) (type: bigint), _col16 (type: binary), 'LONG' (type: string), UDFToLong(_col17) (type: bigint), UDFToLong(_col18) (type: bigint), (_col2 - _col19) (type: bigint), COALESCE(ndv_compute_bit_vector(_col20),0) (type: bigint), _col20 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29
                  Statistics: Num rows: 1 Data size: 1322 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 1322 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17,_col18,_col19,_col20,_col21,_col22,_col23,_col24,_col25,_col26,_col27,_col28,_col29
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,key4,cnt
                columns.comments 
                columns.types int:int:string:int:int
#### A masked pattern was here ####
                name default.outputtbl5_n1
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl5_n1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key1, key2, key3, key4, cnt
          Column Types: int, int, string, int, int
          Table: default.outputtbl5_n1
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl5_n1
SELECT key, 1, val, 2, count(1) FROM T2_n34 GROUP BY key, 1, val, 2
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl5_n1
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl5_n1
SELECT key, 1, val, 2, count(1) FROM T2_n34 GROUP BY key, 1, val, 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl5_n1
POSTHOOK: Lineage: outputtbl5_n1.cnt EXPRESSION [(t2_n34)t2_n34.null, ]
POSTHOOK: Lineage: outputtbl5_n1.key1 EXPRESSION [(t2_n34)t2_n34.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl5_n1.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl5_n1.key3 SIMPLE [(t2_n34)t2_n34.FieldSchema(name:val, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl5_n1.key4 SIMPLE []
PREHOOK: query: SELECT * FROM outputTbl5_n1 
ORDER BY key1, key2, key3, key4
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl5_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl5_n1 
ORDER BY key1, key2, key3, key4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl5_n1
#### A masked pattern was here ####
1	1	11	2	1
2	1	12	2	1
3	1	13	2	1
7	1	17	2	1
8	1	18	2	1
8	1	28	2	1
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, constant, val, count(1) from 
(SELECT key, 1 as constant, val from T2_n34)subq
group by key, constant, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl4_n1
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, constant, val, count(1) from 
(SELECT key, 1 as constant, val from T2_n34)subq
group by key, constant, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl4_n1
OPTIMIZED SQL: SELECT `key`, 1 AS `constant`, `val`, COUNT(*) AS `_o__c3`
FROM `default`.`t2_n34`
GROUP BY `key`, `val`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n34
                  Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 1074 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), 1 (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 6 Data size: 588 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 588 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,key3,cnt
                                columns.comments 
                                columns.types int:int:string:int
#### A masked pattern was here ####
                                name default.outputtbl4_n1
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl4_n1
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: int)
                          outputColumnNames: key1, key2, key3, cnt
                          Statistics: Num rows: 6 Data size: 588 Basic stats: COMPLETE Column stats: COMPLETE
                          Group By Operator
                            aggregations: min(key1), max(key1), count(1), count(key1), compute_bit_vector_hll(key1), min(key2), max(key2), count(key2), compute_bit_vector_hll(key2), max(length(key3)), avg(COALESCE(length(key3),0)), count(key3), compute_bit_vector_hll(key3), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.8333333
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                            Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: COMPLETE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary), _col13 (type: int), _col14 (type: int), _col15 (type: bigint), _col16 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n34
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n34
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n34
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n34
                  name: default.t2_n34
            Truncated Path -> Alias:
              /t2_n34 [t2_n34]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12), min(VALUE._col13), max(VALUE._col14), count(VALUE._col15), compute_bit_vector_hll(VALUE._col16)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                Statistics: Num rows: 1 Data size: 652 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary), 'LONG' (type: string), UDFToLong(_col13) (type: bigint), UDFToLong(_col14) (type: bigint), (_col2 - _col15) (type: bigint), COALESCE(ndv_compute_bit_vector(_col16),0) (type: bigint), _col16 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23
                  Statistics: Num rows: 1 Data size: 1058 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 1058 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17,_col18,_col19,_col20,_col21,_col22,_col23
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,cnt
                columns.comments 
                columns.types int:int:string:int
#### A masked pattern was here ####
                name default.outputtbl4_n1
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl4_n1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key1, key2, key3, cnt
          Column Types: int, int, string, int
          Table: default.outputtbl4_n1
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, constant, val, count(1) from 
(SELECT key, 1 as constant, val from T2_n34)subq
group by key, constant, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl4_n1
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n1
SELECT key, constant, val, count(1) from 
(SELECT key, 1 as constant, val from T2_n34)subq
group by key, constant, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl4_n1
POSTHOOK: Lineage: outputtbl4_n1.cnt EXPRESSION [(t2_n34)t2_n34.null, ]
POSTHOOK: Lineage: outputtbl4_n1.key1 EXPRESSION [(t2_n34)t2_n34.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl4_n1.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl4_n1.key3 SIMPLE [(t2_n34)t2_n34.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl4_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl4_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl4_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl4_n1
#### A masked pattern was here ####
1	1	11	1
2	1	12	1
3	1	13	1
7	1	17	1
8	1	18	1
8	1	28	1
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl4_n1
select key, constant3, val, count(1) from
(
SELECT key, constant as constant2, val, 2 as constant3 from 
(SELECT key, 1 as constant, val from T2_n34)subq
)subq2
group by key, constant3, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl4_n1
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl4_n1
select key, constant3, val, count(1) from
(
SELECT key, constant as constant2, val, 2 as constant3 from 
(SELECT key, 1 as constant, val from T2_n34)subq
)subq2
group by key, constant3, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl4_n1
OPTIMIZED SQL: SELECT `key`, 2 AS `constant3`, `val`, COUNT(*) AS `_o__c3`
FROM `default`.`t2_n34`
GROUP BY `key`, `val`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n34
                  Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 1074 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), 2 (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 6 Data size: 588 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          bucketingVersion: 2
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 588 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,key3,cnt
                                columns.comments 
                                columns.types int:int:string:int
#### A masked pattern was here ####
                                name default.outputtbl4_n1
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl4_n1
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string), _col3 (type: int)
                          outputColumnNames: key1, key2, key3, cnt
                          Statistics: Num rows: 6 Data size: 588 Basic stats: COMPLETE Column stats: COMPLETE
                          Group By Operator
                            aggregations: min(key1), max(key1), count(1), count(key1), compute_bit_vector_hll(key1), min(key2), max(key2), count(key2), compute_bit_vector_hll(key2), max(length(key3)), avg(COALESCE(length(key3),0)), count(key3), compute_bit_vector_hll(key3), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.8333333
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                            Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              bucketingVersion: 2
                              null sort order: 
                              numBuckets: -1
                              sort order: 
                              Statistics: Num rows: 1 Data size: 720 Basic stats: COMPLETE Column stats: COMPLETE
                              tag: -1
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary), _col13 (type: int), _col14 (type: int), _col15 (type: bigint), _col16 (type: binary)
                              auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n34
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n34
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n34
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n34
                  name: default.t2_n34
            Truncated Path -> Alias:
              /t2_n34 [t2_n34]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12), min(VALUE._col13), max(VALUE._col14), count(VALUE._col15), compute_bit_vector_hll(VALUE._col16)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                Statistics: Num rows: 1 Data size: 652 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary), 'LONG' (type: string), UDFToLong(_col13) (type: bigint), UDFToLong(_col14) (type: bigint), (_col2 - _col15) (type: bigint), COALESCE(ndv_compute_bit_vector(_col16),0) (type: bigint), _col16 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23
                  Statistics: Num rows: 1 Data size: 1058 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 1058 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17,_col18,_col19,_col20,_col21,_col22,_col23
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,cnt
                columns.comments 
                columns.types int:int:string:int
#### A masked pattern was here ####
                name default.outputtbl4_n1
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl4_n1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key1, key2, key3, cnt
          Column Types: int, int, string, int
          Table: default.outputtbl4_n1
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n1
select key, constant3, val, count(1) from
(
SELECT key, constant as constant2, val, 2 as constant3 from 
(SELECT key, 1 as constant, val from T2_n34)subq
)subq2
group by key, constant3, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@outputtbl4_n1
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n1
select key, constant3, val, count(1) from
(
SELECT key, constant as constant2, val, 2 as constant3 from 
(SELECT key, 1 as constant, val from T2_n34)subq
)subq2
group by key, constant3, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@outputtbl4_n1
POSTHOOK: Lineage: outputtbl4_n1.cnt EXPRESSION [(t2_n34)t2_n34.null, ]
POSTHOOK: Lineage: outputtbl4_n1.key1 EXPRESSION [(t2_n34)t2_n34.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl4_n1.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl4_n1.key3 SIMPLE [(t2_n34)t2_n34.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl4_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl4_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl4_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl4_n1
#### A masked pattern was here ####
1	2	11	1
2	2	12	1
3	2	13	1
7	2	17	1
8	2	18	1
8	2	28	1
PREHOOK: query: CREATE TABLE DEST1_n57(key INT, cnt INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DEST1_n57
POSTHOOK: query: CREATE TABLE DEST1_n57(key INT, cnt INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DEST1_n57
PREHOOK: query: CREATE TABLE DEST2_n12(key INT, val STRING, cnt INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DEST2_n12
POSTHOOK: query: CREATE TABLE DEST2_n12(key INT, val STRING, cnt INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DEST2_n12
PREHOOK: query: EXPLAIN
FROM T2_n34
INSERT OVERWRITE TABLE DEST1_n57 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n12 SELECT key, val, count(1) GROUP BY key, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@dest1_n57
PREHOOK: Output: default@dest2_n12
POSTHOOK: query: EXPLAIN
FROM T2_n34
INSERT OVERWRITE TABLE DEST1_n57 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n12 SELECT key, val, count(1) GROUP BY key, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@dest1_n57
POSTHOOK: Output: default@dest2_n12
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-3
  Stage-4 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-3
  Stage-5 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n34
                  Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count(1)
                      bucketGroup: true
                      keys: key (type: string)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: rand() (type: double)
                        Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: bigint)
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count(1)
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 1074 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          compressed: true
                          Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: COMPLETE
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.dest2_n12
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: string), _col2 (type: int)
                          outputColumnNames: key, val, cnt
                          Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: COMPLETE
                          Group By Operator
                            aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), max(length(val)), avg(COALESCE(length(val),0)), count(val), compute_bit_vector_hll(val), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.8333333
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                            Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              null sort order: 
                              sort order: 
                              Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: COMPLETE
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: int), _col11 (type: bigint), _col12 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: partials
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: final
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: true
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.dest1_n57
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: int)
                    outputColumnNames: key, cnt
                    Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.8
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: true
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), min(VALUE._col9), max(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                Statistics: Num rows: 1 Data size: 492 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'LONG' (type: string), UDFToLong(_col9) (type: bigint), UDFToLong(_col10) (type: bigint), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
                  Statistics: Num rows: 1 Data size: 794 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: true
                    Statistics: Num rows: 1 Data size: 794 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1_n57

  Stage: Stage-4
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.dest1_n57

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest2_n12

  Stage: Stage-5
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, val, cnt
          Column Types: int, string, int
          Table: default.dest2_n12

PREHOOK: query: FROM T2_n34
INSERT OVERWRITE TABLE DEST1_n57 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n12 SELECT key, val, count(1) GROUP BY key, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@dest1_n57
PREHOOK: Output: default@dest2_n12
POSTHOOK: query: FROM T2_n34
INSERT OVERWRITE TABLE DEST1_n57 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n12 SELECT key, val, count(1) GROUP BY key, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@dest1_n57
POSTHOOK: Output: default@dest2_n12
POSTHOOK: Lineage: dest1_n57.cnt EXPRESSION [(t2_n34)t2_n34.null, ]
POSTHOOK: Lineage: dest1_n57.key EXPRESSION [(t2_n34)t2_n34.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: dest2_n12.cnt EXPRESSION [(t2_n34)t2_n34.null, ]
POSTHOOK: Lineage: dest2_n12.key EXPRESSION [(t2_n34)t2_n34.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: dest2_n12.val SIMPLE [(t2_n34)t2_n34.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: select * from DEST1_n57
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n57
#### A masked pattern was here ####
POSTHOOK: query: select * from DEST1_n57
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n57
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: select * from DEST2_n12
PREHOOK: type: QUERY
PREHOOK: Input: default@dest2_n12
#### A masked pattern was here ####
POSTHOOK: query: select * from DEST2_n12
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest2_n12
#### A masked pattern was here ####
1	11	1
2	12	1
3	13	1
7	17	1
8	18	1
8	28	1
PREHOOK: query: EXPLAIN
FROM (select key, val from T2_n34 where key = 8) x
INSERT OVERWRITE TABLE DEST1_n57 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n12 SELECT key, val, count(1) GROUP BY key, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@dest1_n57
PREHOOK: Output: default@dest2_n12
POSTHOOK: query: EXPLAIN
FROM (select key, val from T2_n34 where key = 8) x
INSERT OVERWRITE TABLE DEST1_n57 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n12 SELECT key, val, count(1) GROUP BY key, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@dest1_n57
POSTHOOK: Output: default@dest2_n12
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-3
  Stage-4 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-3
  Stage-5 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n34
                  filterExpr: (UDFToDouble(key) = 8.0D) (type: boolean)
                  Statistics: Num rows: 6 Data size: 1026 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (UDFToDouble(key) = 8.0D) (type: boolean)
                    Statistics: Num rows: 3 Data size: 513 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 513 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: _col0 (type: string)
                        outputColumnNames: _col0
                        Statistics: Num rows: 3 Data size: 513 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: count(1)
                          bucketGroup: true
                          keys: _col0 (type: string)
                          minReductionHashAggr: 0.4
                          mode: hash
                          outputColumnNames: _col0, _col1
                          Statistics: Num rows: 3 Data size: 279 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col0 (type: string)
                            null sort order: z
                            sort order: +
                            Map-reduce partition columns: rand() (type: double)
                            Statistics: Num rows: 3 Data size: 279 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col1 (type: bigint)
                      Group By Operator
                        aggregations: count(1)
                        keys: _col0 (type: string), _col1 (type: string)
                        mode: final
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 3 Data size: 537 Basic stats: COMPLETE Column stats: COMPLETE
                        Select Operator
                          expressions: UDFToInteger(_col0) (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 3 Data size: 282 Basic stats: COMPLETE Column stats: COMPLETE
                          File Output Operator
                            compressed: true
                            Statistics: Num rows: 3 Data size: 282 Basic stats: COMPLETE Column stats: COMPLETE
                            table:
                                input format: org.apache.hadoop.mapred.TextInputFormat
                                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                name: default.dest2_n12
                          Select Operator
                            expressions: _col0 (type: int), _col1 (type: string), _col2 (type: int)
                            outputColumnNames: key, val, cnt
                            Statistics: Num rows: 3 Data size: 282 Basic stats: COMPLETE Column stats: COMPLETE
                            Group By Operator
                              aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), max(length(val)), avg(COALESCE(length(val),0)), count(val), compute_bit_vector_hll(val), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                              minReductionHashAggr: 0.6666666
                              mode: hash
                              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                              Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: COMPLETE
                              Reduce Output Operator
                                null sort order: 
                                sort order: 
                                Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: COMPLETE
                                value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: int), _col11 (type: bigint), _col12 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: partials
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3 Data size: 279 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 3 Data size: 279 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: final
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3 Data size: 279 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: true
                    Statistics: Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.dest1_n57
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: int)
                    outputColumnNames: key, cnt
                    Statistics: Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.6666666
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: true
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), min(VALUE._col9), max(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                Statistics: Num rows: 1 Data size: 492 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'LONG' (type: string), UDFToLong(_col9) (type: bigint), UDFToLong(_col10) (type: bigint), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
                  Statistics: Num rows: 1 Data size: 794 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: true
                    Statistics: Num rows: 1 Data size: 794 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1_n57

  Stage: Stage-4
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.dest1_n57

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest2_n12

  Stage: Stage-5
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, val, cnt
          Column Types: int, string, int
          Table: default.dest2_n12

PREHOOK: query: FROM (select key, val from T2_n34 where key = 8) x
INSERT OVERWRITE TABLE DEST1_n57 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n12 SELECT key, val, count(1) GROUP BY key, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n34
PREHOOK: Output: default@dest1_n57
PREHOOK: Output: default@dest2_n12
POSTHOOK: query: FROM (select key, val from T2_n34 where key = 8) x
INSERT OVERWRITE TABLE DEST1_n57 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n12 SELECT key, val, count(1) GROUP BY key, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n34
POSTHOOK: Output: default@dest1_n57
POSTHOOK: Output: default@dest2_n12
POSTHOOK: Lineage: dest1_n57.cnt EXPRESSION [(t2_n34)t2_n34.null, ]
POSTHOOK: Lineage: dest1_n57.key EXPRESSION [(t2_n34)t2_n34.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: dest2_n12.cnt EXPRESSION [(t2_n34)t2_n34.null, ]
POSTHOOK: Lineage: dest2_n12.key EXPRESSION [(t2_n34)t2_n34.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: dest2_n12.val SIMPLE [(t2_n34)t2_n34.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: select * from DEST1_n57
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n57
#### A masked pattern was here ####
POSTHOOK: query: select * from DEST1_n57
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n57
#### A masked pattern was here ####
8	2
PREHOOK: query: select * from DEST2_n12
PREHOOK: type: QUERY
PREHOOK: Input: default@dest2_n12
#### A masked pattern was here ####
POSTHOOK: query: select * from DEST2_n12
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest2_n12
#### A masked pattern was here ####
8	18	1
8	28	1
