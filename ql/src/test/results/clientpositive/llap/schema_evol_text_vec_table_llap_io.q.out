PREHOOK: query: CREATE TABLE schema_evolution_data_n5(insert_num int, boolean1 boolean, tinyint1 tinyint, smallint1 smallint, int1 int, bigint1 bigint, decimal1 decimal(38,18), float1 float, double1 double, string1 string, string2 string, date1 date, timestamp1 timestamp, boolean_str string, tinyint_str string, smallint_str string, int_str string, bigint_str string, decimal_str string, float_str string, double_str string, date_str string, timestamp_str string, filler string)
row format delimited fields terminated by '|' stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@schema_evolution_data_n5
POSTHOOK: query: CREATE TABLE schema_evolution_data_n5(insert_num int, boolean1 boolean, tinyint1 tinyint, smallint1 smallint, int1 int, bigint1 bigint, decimal1 decimal(38,18), float1 float, double1 double, string1 string, string2 string, date1 date, timestamp1 timestamp, boolean_str string, tinyint_str string, smallint_str string, int_str string, bigint_str string, decimal_str string, float_str string, double_str string, date_str string, timestamp_str string, filler string)
row format delimited fields terminated by '|' stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@schema_evolution_data_n5
PREHOOK: query: load data local inpath '../../data/files/schema_evolution/schema_evolution_data.txt' overwrite into table schema_evolution_data_n5
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@schema_evolution_data_n5
POSTHOOK: query: load data local inpath '../../data/files/schema_evolution/schema_evolution_data.txt' overwrite into table schema_evolution_data_n5
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@schema_evolution_data_n5
PREHOOK: query: CREATE TABLE table_add_int_permute_select_n1(insert_num int, a INT, b STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_add_int_permute_select_n1
POSTHOOK: query: CREATE TABLE table_add_int_permute_select_n1(insert_num int, a INT, b STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_add_int_permute_select_n1
PREHOOK: query: insert into table table_add_int_permute_select_n1 SELECT insert_num, int1, 'original' FROM schema_evolution_data_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_evolution_data_n5
PREHOOK: Output: default@table_add_int_permute_select_n1
POSTHOOK: query: insert into table table_add_int_permute_select_n1 SELECT insert_num, int1, 'original' FROM schema_evolution_data_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_evolution_data_n5
POSTHOOK: Output: default@table_add_int_permute_select_n1
POSTHOOK: Lineage: table_add_int_permute_select_n1.a SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_add_int_permute_select_n1.b SIMPLE []
POSTHOOK: Lineage: table_add_int_permute_select_n1.insert_num SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:insert_num, type:int, comment:null), ]
insert_num	int1	_c2
PREHOOK: query: explain vectorization detail
select insert_num,a,b from table_add_int_permute_select_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,a,b from table_add_int_permute_select_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_add_int_permute_select_n1
                  Statistics: Num rows: 5 Data size: 500 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:a:int, 2:b:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), a (type: int), b (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2]
                    Statistics: Num rows: 5 Data size: 500 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 5 Data size: 500 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    includeColumns: [0, 1, 2]
                    dataColumns: insert_num:int, a:int, b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select insert_num,a,b from table_add_int_permute_select_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_add_int_permute_select_n1
#### A masked pattern was here ####
POSTHOOK: query: select insert_num,a,b from table_add_int_permute_select_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_add_int_permute_select_n1
#### A masked pattern was here ####
insert_num	a	b
101	-2147483648	original
102	2147483647	original
103	NULL	original
104	203332	original
105	-999992	original
PREHOOK: query: alter table table_add_int_permute_select_n1 add columns(c int)
PREHOOK: type: ALTERTABLE_ADDCOLS
PREHOOK: Input: default@table_add_int_permute_select_n1
PREHOOK: Output: default@table_add_int_permute_select_n1
POSTHOOK: query: alter table table_add_int_permute_select_n1 add columns(c int)
POSTHOOK: type: ALTERTABLE_ADDCOLS
POSTHOOK: Input: default@table_add_int_permute_select_n1
POSTHOOK: Output: default@table_add_int_permute_select_n1
PREHOOK: query: insert into table table_add_int_permute_select_n1 VALUES (111, 80000, 'new', 80000)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_add_int_permute_select_n1
POSTHOOK: query: insert into table table_add_int_permute_select_n1 VALUES (111, 80000, 'new', 80000)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_add_int_permute_select_n1
POSTHOOK: Lineage: table_add_int_permute_select_n1.a SCRIPT []
POSTHOOK: Lineage: table_add_int_permute_select_n1.b SCRIPT []
POSTHOOK: Lineage: table_add_int_permute_select_n1.c SCRIPT []
POSTHOOK: Lineage: table_add_int_permute_select_n1.insert_num SCRIPT []
col1	col2	col3	col4
PREHOOK: query: explain vectorization detail
select insert_num,a,b from table_add_int_permute_select_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,a,b from table_add_int_permute_select_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_add_int_permute_select_n1
                  Statistics: Num rows: 6 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:a:int, 2:b:string, 3:c:int, 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), a (type: int), b (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2]
                    Statistics: Num rows: 6 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 6 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    includeColumns: [0, 1, 2]
                    dataColumns: insert_num:int, a:int, b:string, c:int
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: drop table table_add_int_permute_select_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_add_int_permute_select_n1
PREHOOK: Output: default@table_add_int_permute_select_n1
POSTHOOK: query: drop table table_add_int_permute_select_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_add_int_permute_select_n1
POSTHOOK: Output: default@table_add_int_permute_select_n1
PREHOOK: query: CREATE TABLE table_add_int_string_permute_select_n1(insert_num int, a INT, b STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_add_int_string_permute_select_n1
POSTHOOK: query: CREATE TABLE table_add_int_string_permute_select_n1(insert_num int, a INT, b STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_add_int_string_permute_select_n1
PREHOOK: query: insert into table table_add_int_string_permute_select_n1 SELECT insert_num, int1, 'original' FROM schema_evolution_data_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_evolution_data_n5
PREHOOK: Output: default@table_add_int_string_permute_select_n1
POSTHOOK: query: insert into table table_add_int_string_permute_select_n1 SELECT insert_num, int1, 'original' FROM schema_evolution_data_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_evolution_data_n5
POSTHOOK: Output: default@table_add_int_string_permute_select_n1
POSTHOOK: Lineage: table_add_int_string_permute_select_n1.a SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_add_int_string_permute_select_n1.b SIMPLE []
POSTHOOK: Lineage: table_add_int_string_permute_select_n1.insert_num SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:insert_num, type:int, comment:null), ]
insert_num	int1	_c2
PREHOOK: query: explain vectorization detail
select insert_num,a,b from table_add_int_string_permute_select_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,a,b from table_add_int_string_permute_select_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_add_int_string_permute_select_n1
                  Statistics: Num rows: 5 Data size: 500 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:a:int, 2:b:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), a (type: int), b (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2]
                    Statistics: Num rows: 5 Data size: 500 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 5 Data size: 500 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    includeColumns: [0, 1, 2]
                    dataColumns: insert_num:int, a:int, b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select insert_num,a,b from table_add_int_string_permute_select_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_add_int_string_permute_select_n1
#### A masked pattern was here ####
POSTHOOK: query: select insert_num,a,b from table_add_int_string_permute_select_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_add_int_string_permute_select_n1
#### A masked pattern was here ####
insert_num	a	b
101	-2147483648	original
102	2147483647	original
103	NULL	original
104	203332	original
105	-999992	original
PREHOOK: query: alter table table_add_int_string_permute_select_n1 add columns(c int, d string)
PREHOOK: type: ALTERTABLE_ADDCOLS
PREHOOK: Input: default@table_add_int_string_permute_select_n1
PREHOOK: Output: default@table_add_int_string_permute_select_n1
POSTHOOK: query: alter table table_add_int_string_permute_select_n1 add columns(c int, d string)
POSTHOOK: type: ALTERTABLE_ADDCOLS
POSTHOOK: Input: default@table_add_int_string_permute_select_n1
POSTHOOK: Output: default@table_add_int_string_permute_select_n1
PREHOOK: query: insert into table table_add_int_string_permute_select_n1 VALUES (111, 80000, 'new', 80000, 'filler')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_add_int_string_permute_select_n1
POSTHOOK: query: insert into table table_add_int_string_permute_select_n1 VALUES (111, 80000, 'new', 80000, 'filler')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_add_int_string_permute_select_n1
POSTHOOK: Lineage: table_add_int_string_permute_select_n1.a SCRIPT []
POSTHOOK: Lineage: table_add_int_string_permute_select_n1.b SCRIPT []
POSTHOOK: Lineage: table_add_int_string_permute_select_n1.c SCRIPT []
POSTHOOK: Lineage: table_add_int_string_permute_select_n1.d SCRIPT []
POSTHOOK: Lineage: table_add_int_string_permute_select_n1.insert_num SCRIPT []
col1	col2	col3	col4	col5
PREHOOK: query: explain vectorization detail
select insert_num,a,b from table_add_int_string_permute_select_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,a,b from table_add_int_string_permute_select_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_add_int_string_permute_select_n1
                  Statistics: Num rows: 6 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:a:int, 2:b:string, 3:c:int, 4:d:string, 5:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), a (type: int), b (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2]
                    Statistics: Num rows: 6 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 6 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 5
                    includeColumns: [0, 1, 2]
                    dataColumns: insert_num:int, a:int, b:string, c:int, d:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: drop table table_add_int_string_permute_select_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_add_int_string_permute_select_n1
PREHOOK: Output: default@table_add_int_string_permute_select_n1
POSTHOOK: query: drop table table_add_int_string_permute_select_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_add_int_string_permute_select_n1
POSTHOOK: Output: default@table_add_int_string_permute_select_n1
PREHOOK: query: CREATE TABLE table_change_string_group_double_n1(insert_num int, c1 STRING, c2 CHAR(50), c3 VARCHAR(50), b STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_change_string_group_double_n1
POSTHOOK: query: CREATE TABLE table_change_string_group_double_n1(insert_num int, c1 STRING, c2 CHAR(50), c3 VARCHAR(50), b STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_change_string_group_double_n1
PREHOOK: query: insert into table table_change_string_group_double_n1 SELECT insert_num, double_str, double_str, double_str, 'original' FROM schema_evolution_data_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_evolution_data_n5
PREHOOK: Output: default@table_change_string_group_double_n1
POSTHOOK: query: insert into table table_change_string_group_double_n1 SELECT insert_num, double_str, double_str, double_str, 'original' FROM schema_evolution_data_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_evolution_data_n5
POSTHOOK: Output: default@table_change_string_group_double_n1
POSTHOOK: Lineage: table_change_string_group_double_n1.b SIMPLE []
POSTHOOK: Lineage: table_change_string_group_double_n1.c1 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:double_str, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_double_n1.c2 EXPRESSION [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:double_str, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_double_n1.c3 EXPRESSION [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:double_str, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_double_n1.insert_num SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:insert_num, type:int, comment:null), ]
_col0	_col1	_col2	_col3	_col4
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,b from table_change_string_group_double_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,b from table_change_string_group_double_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_string_group_double_n1
                  Statistics: Num rows: 5 Data size: 1935 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:string, 2:c2:char(50), 3:c3:varchar(50), 4:b:string, 5:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: string), c2 (type: char(50)), c3 (type: varchar(50)), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4]
                    Statistics: Num rows: 5 Data size: 1935 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 5 Data size: 1935 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 5
                    includeColumns: [0, 1, 2, 3, 4]
                    dataColumns: insert_num:int, c1:string, c2:char(50), c3:varchar(50), b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select insert_num,c1,c2,c3,b from table_change_string_group_double_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_change_string_group_double_n1
#### A masked pattern was here ####
POSTHOOK: query: select insert_num,c1,c2,c3,b from table_change_string_group_double_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_change_string_group_double_n1
#### A masked pattern was here ####
insert_num	c1	c2	c3	b
101	1.79769313486231570E+308	1.79769313486231570E+308                          	1.79769313486231570E+308	original
102	-1.79769313486231570E+308	-1.79769313486231570E+308                         	-1.79769313486231570E+308	original
103		                                                  		original
104	30.774	30.774                                            	30.774	original
105	46114.28	46114.28                                          	46114.28	original
PREHOOK: query: alter table table_change_string_group_double_n1 replace columns (insert_num int, c1 DOUBLE, c2 DOUBLE, c3 DOUBLE, b STRING)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@table_change_string_group_double_n1
PREHOOK: Output: default@table_change_string_group_double_n1
POSTHOOK: query: alter table table_change_string_group_double_n1 replace columns (insert_num int, c1 DOUBLE, c2 DOUBLE, c3 DOUBLE, b STRING)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@table_change_string_group_double_n1
POSTHOOK: Output: default@table_change_string_group_double_n1
PREHOOK: query: insert into table table_change_string_group_double_n1 VALUES (111, 789.321, 789.321, 789.321, 'new')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_change_string_group_double_n1
POSTHOOK: query: insert into table table_change_string_group_double_n1 VALUES (111, 789.321, 789.321, 789.321, 'new')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_change_string_group_double_n1
POSTHOOK: Lineage: table_change_string_group_double_n1.b SCRIPT []
POSTHOOK: Lineage: table_change_string_group_double_n1.c1 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_double_n1.c2 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_double_n1.c3 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_double_n1.insert_num SCRIPT []
_col0	_col1	_col2	_col3	_col4
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,b from table_change_string_group_double_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,b from table_change_string_group_double_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_string_group_double_n1
                  Statistics: Num rows: 6 Data size: 720 Basic stats: COMPLETE Column stats: PARTIAL
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:double, 2:c2:double, 3:c3:double, 4:b:string, 5:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: double), c2 (type: double), c3 (type: double), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4]
                    Statistics: Num rows: 6 Data size: 720 Basic stats: COMPLETE Column stats: PARTIAL
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 6 Data size: 720 Basic stats: COMPLETE Column stats: PARTIAL
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 5
                    includeColumns: [0, 1, 2, 3, 4]
                    dataColumns: insert_num:int, c1:double, c2:double, c3:double, b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: drop table table_change_string_group_double_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_change_string_group_double_n1
PREHOOK: Output: default@table_change_string_group_double_n1
POSTHOOK: query: drop table table_change_string_group_double_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_change_string_group_double_n1
POSTHOOK: Output: default@table_change_string_group_double_n1
PREHOOK: query: CREATE TABLE table_change_date_group_string_group_date_group_n1(insert_num int, c1 DATE, c2 DATE, c3 DATE, c4 DATE, c5 DATE, c6 TIMESTAMP, c7 TIMESTAMP, c8 TIMESTAMP, c9 TIMESTAMP, c10 TIMESTAMP, b STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_change_date_group_string_group_date_group_n1
POSTHOOK: query: CREATE TABLE table_change_date_group_string_group_date_group_n1(insert_num int, c1 DATE, c2 DATE, c3 DATE, c4 DATE, c5 DATE, c6 TIMESTAMP, c7 TIMESTAMP, c8 TIMESTAMP, c9 TIMESTAMP, c10 TIMESTAMP, b STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_change_date_group_string_group_date_group_n1
PREHOOK: query: insert into table table_change_date_group_string_group_date_group_n1 SELECT insert_num, date1, date1, date1, date1, date1, timestamp1, timestamp1, timestamp1, timestamp1, timestamp1, 'original' FROM schema_evolution_data_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_evolution_data_n5
PREHOOK: Output: default@table_change_date_group_string_group_date_group_n1
POSTHOOK: query: insert into table table_change_date_group_string_group_date_group_n1 SELECT insert_num, date1, date1, date1, date1, date1, timestamp1, timestamp1, timestamp1, timestamp1, timestamp1, 'original' FROM schema_evolution_data_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_evolution_data_n5
POSTHOOK: Output: default@table_change_date_group_string_group_date_group_n1
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.b SIMPLE []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c1 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:date1, type:date, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c10 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:timestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c2 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:date1, type:date, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c3 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:date1, type:date, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c4 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:date1, type:date, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c5 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:date1, type:date, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c6 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:timestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c7 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:timestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c8 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:timestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c9 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:timestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.insert_num SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:insert_num, type:int, comment:null), ]
insert_num	date1	date1_1	date1_2	date1_3	date1_4	timestamp1	timestamp1_1	timestamp1_2	timestamp1_3	timestamp1_4	_c11
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,b from table_change_date_group_string_group_date_group_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,b from table_change_date_group_string_group_date_group_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_date_group_string_group_date_group_n1
                  Statistics: Num rows: 5 Data size: 3340 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:date, 2:c2:date, 3:c3:date, 4:c4:date, 5:c5:date, 6:c6:timestamp, 7:c7:timestamp, 8:c8:timestamp, 9:c9:timestamp, 10:c10:timestamp, 11:b:string, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: date), c2 (type: date), c3 (type: date), c4 (type: date), c5 (type: date), c6 (type: timestamp), c7 (type: timestamp), c8 (type: timestamp), c9 (type: timestamp), c10 (type: timestamp), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
                    Statistics: Num rows: 5 Data size: 3340 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 5 Data size: 3340 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 12
                    includeColumns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
                    dataColumns: insert_num:int, c1:date, c2:date, c3:date, c4:date, c5:date, c6:timestamp, c7:timestamp, c8:timestamp, c9:timestamp, c10:timestamp, b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: alter table table_change_date_group_string_group_date_group_n1 replace columns(insert_num int, c1 STRING, c2 CHAR(50), c3 CHAR(15), c4 VARCHAR(50), c5 VARCHAR(15), c6 STRING, c7 CHAR(50), c8 CHAR(15), c9 VARCHAR(50), c10 VARCHAR(15), b STRING)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@table_change_date_group_string_group_date_group_n1
PREHOOK: Output: default@table_change_date_group_string_group_date_group_n1
POSTHOOK: query: alter table table_change_date_group_string_group_date_group_n1 replace columns(insert_num int, c1 STRING, c2 CHAR(50), c3 CHAR(15), c4 VARCHAR(50), c5 VARCHAR(15), c6 STRING, c7 CHAR(50), c8 CHAR(15), c9 VARCHAR(50), c10 VARCHAR(15), b STRING)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@table_change_date_group_string_group_date_group_n1
POSTHOOK: Output: default@table_change_date_group_string_group_date_group_n1
PREHOOK: query: insert into table table_change_date_group_string_group_date_group_n1 VALUES (111, 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'new')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_change_date_group_string_group_date_group_n1
POSTHOOK: query: insert into table table_change_date_group_string_group_date_group_n1 VALUES (111, 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'new')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_change_date_group_string_group_date_group_n1
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.b SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c1 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c10 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c2 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c3 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c4 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c5 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c6 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c7 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c8 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.c9 SCRIPT []
POSTHOOK: Lineage: table_change_date_group_string_group_date_group_n1.insert_num SCRIPT []
_col0	_col1	_col2	_col3	_col4	_col5	_col6	_col7	_col8	_col9	_col10	_col11
PREHOOK: query: drop table table_change_date_group_string_group_date_group_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_change_date_group_string_group_date_group_n1
PREHOOK: Output: default@table_change_date_group_string_group_date_group_n1
POSTHOOK: query: drop table table_change_date_group_string_group_date_group_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_change_date_group_string_group_date_group_n1
POSTHOOK: Output: default@table_change_date_group_string_group_date_group_n1
PREHOOK: query: CREATE TABLE table_change_numeric_group_string_group_multi_ints_string_group_n1(insert_num int,
             c1 tinyint, c2 smallint, c3 int, c4 bigint,
             c5 tinyint, c6 smallint, c7 int, c8 bigint, c9 tinyint, c10 smallint, c11 int, c12 bigint,
             c13 tinyint, c14 smallint, c15 int, c16 bigint, c17 tinyint, c18 smallint, c19 int, c20 bigint,
             b STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: query: CREATE TABLE table_change_numeric_group_string_group_multi_ints_string_group_n1(insert_num int,
             c1 tinyint, c2 smallint, c3 int, c4 bigint,
             c5 tinyint, c6 smallint, c7 int, c8 bigint, c9 tinyint, c10 smallint, c11 int, c12 bigint,
             c13 tinyint, c14 smallint, c15 int, c16 bigint, c17 tinyint, c18 smallint, c19 int, c20 bigint,
             b STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
PREHOOK: query: insert into table table_change_numeric_group_string_group_multi_ints_string_group_n1 SELECT insert_num,
             tinyint1, smallint1, int1, bigint1,
             tinyint1, smallint1, int1, bigint1, tinyint1, smallint1, int1, bigint1,
             tinyint1, smallint1, int1, bigint1, tinyint1, smallint1, int1, bigint1,
             'original' FROM schema_evolution_data_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_evolution_data_n5
PREHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: query: insert into table table_change_numeric_group_string_group_multi_ints_string_group_n1 SELECT insert_num,
             tinyint1, smallint1, int1, bigint1,
             tinyint1, smallint1, int1, bigint1, tinyint1, smallint1, int1, bigint1,
             tinyint1, smallint1, int1, bigint1, tinyint1, smallint1, int1, bigint1,
             'original' FROM schema_evolution_data_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_evolution_data_n5
POSTHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.b SIMPLE []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c1 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c10 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c11 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c12 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:bigint1, type:bigint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c13 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c14 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c15 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c16 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:bigint1, type:bigint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c17 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c18 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c19 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c2 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c20 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:bigint1, type:bigint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c3 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c4 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:bigint1, type:bigint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c5 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c6 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c7 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c8 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:bigint1, type:bigint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c9 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.insert_num SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:insert_num, type:int, comment:null), ]
insert_num	tinyint1	smallint1	int1	bigint1	tinyint1_1	smallint1_1	int1_1	bigint1_1	tinyint1_2	smallint1_2	int1_2	bigint1_2	tinyint1_3	smallint1_3	int1_3	bigint1_3	tinyint1_4	smallint1_4	int1_4	bigint1_4	_c21
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,b from table_change_numeric_group_string_group_multi_ints_string_group_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,b from table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_numeric_group_string_group_multi_ints_string_group_n1
                  Statistics: Num rows: 5 Data size: 920 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:tinyint, 2:c2:smallint, 3:c3:int, 4:c4:bigint, 5:c5:tinyint, 6:c6:smallint, 7:c7:int, 8:c8:bigint, 9:c9:tinyint, 10:c10:smallint, 11:c11:int, 12:c12:bigint, 13:c13:tinyint, 14:c14:smallint, 15:c15:int, 16:c16:bigint, 17:c17:tinyint, 18:c18:smallint, 19:c19:int, 20:c20:bigint, 21:b:string, 22:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: tinyint), c2 (type: smallint), c3 (type: int), c4 (type: bigint), c5 (type: tinyint), c6 (type: smallint), c7 (type: int), c8 (type: bigint), c9 (type: tinyint), c10 (type: smallint), c11 (type: int), c12 (type: bigint), c13 (type: tinyint), c14 (type: smallint), c15 (type: int), c16 (type: bigint), c17 (type: tinyint), c18 (type: smallint), c19 (type: int), c20 (type: bigint), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
                    Statistics: Num rows: 5 Data size: 920 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 5 Data size: 920 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 22
                    includeColumns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
                    dataColumns: insert_num:int, c1:tinyint, c2:smallint, c3:int, c4:bigint, c5:tinyint, c6:smallint, c7:int, c8:bigint, c9:tinyint, c10:smallint, c11:int, c12:bigint, c13:tinyint, c14:smallint, c15:int, c16:bigint, c17:tinyint, c18:smallint, c19:int, c20:bigint, b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: alter table table_change_numeric_group_string_group_multi_ints_string_group_n1 replace columns (insert_num int,
             c1 STRING, c2 STRING, c3 STRING, c4 STRING,
             c5 CHAR(50), c6 CHAR(50), c7 CHAR(50), c8 CHAR(50), c9 CHAR(5), c10 CHAR(5), c11 CHAR(5), c12 CHAR(5),
             c13 VARCHAR(50), c14 VARCHAR(50), c15 VARCHAR(50), c16 VARCHAR(50), c17 VARCHAR(5), c18 VARCHAR(5), c19 VARCHAR(5), c20 VARCHAR(5),
             b STRING)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
PREHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: query: alter table table_change_numeric_group_string_group_multi_ints_string_group_n1 replace columns (insert_num int,
             c1 STRING, c2 STRING, c3 STRING, c4 STRING,
             c5 CHAR(50), c6 CHAR(50), c7 CHAR(50), c8 CHAR(50), c9 CHAR(5), c10 CHAR(5), c11 CHAR(5), c12 CHAR(5),
             c13 VARCHAR(50), c14 VARCHAR(50), c15 VARCHAR(50), c16 VARCHAR(50), c17 VARCHAR(5), c18 VARCHAR(5), c19 VARCHAR(5), c20 VARCHAR(5),
             b STRING)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
PREHOOK: query: insert into table table_change_numeric_group_string_group_multi_ints_string_group_n1 VALUES (111,
            'filler', 'filler', 'filler', 'filler',
            'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler',
            'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler',
            'new')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: query: insert into table table_change_numeric_group_string_group_multi_ints_string_group_n1 VALUES (111,
            'filler', 'filler', 'filler', 'filler',
            'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler',
            'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler', 'filler',
            'new')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.b SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c1 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c10 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c11 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c12 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c13 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c14 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c15 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c16 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c17 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c18 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c19 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c2 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c20 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c3 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c4 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c5 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c6 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c7 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c8 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.c9 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_multi_ints_string_group_n1.insert_num SCRIPT []
_col0	_col1	_col2	_col3	_col4	_col5	_col6	_col7	_col8	_col9	_col10	_col11	_col12	_col13	_col14	_col15	_col16	_col17	_col18	_col19	_col20	_col21
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,b from table_change_numeric_group_string_group_multi_ints_string_group_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,b from table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_numeric_group_string_group_multi_ints_string_group_n1
                  Statistics: Num rows: 6 Data size: 15696 Basic stats: COMPLETE Column stats: PARTIAL
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:string, 2:c2:string, 3:c3:string, 4:c4:string, 5:c5:char(50), 6:c6:char(50), 7:c7:char(50), 8:c8:char(50), 9:c9:char(5), 10:c10:char(5), 11:c11:char(5), 12:c12:char(5), 13:c13:varchar(50), 14:c14:varchar(50), 15:c15:varchar(50), 16:c16:varchar(50), 17:c17:varchar(5), 18:c18:varchar(5), 19:c19:varchar(5), 20:c20:varchar(5), 21:b:string, 22:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: string), c2 (type: string), c3 (type: string), c4 (type: string), c5 (type: char(50)), c6 (type: char(50)), c7 (type: char(50)), c8 (type: char(50)), c9 (type: char(5)), c10 (type: char(5)), c11 (type: char(5)), c12 (type: char(5)), c13 (type: varchar(50)), c14 (type: varchar(50)), c15 (type: varchar(50)), c16 (type: varchar(50)), c17 (type: varchar(5)), c18 (type: varchar(5)), c19 (type: varchar(5)), c20 (type: varchar(5)), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
                    Statistics: Num rows: 6 Data size: 15696 Basic stats: COMPLETE Column stats: PARTIAL
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 6 Data size: 15696 Basic stats: COMPLETE Column stats: PARTIAL
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 22
                    includeColumns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
                    dataColumns: insert_num:int, c1:string, c2:string, c3:string, c4:string, c5:char(50), c6:char(50), c7:char(50), c8:char(50), c9:char(5), c10:char(5), c11:char(5), c12:char(5), c13:varchar(50), c14:varchar(50), c15:varchar(50), c16:varchar(50), c17:varchar(5), c18:varchar(5), c19:varchar(5), c20:varchar(5), b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: drop table table_change_numeric_group_string_group_multi_ints_string_group_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
PREHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: query: drop table table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
POSTHOOK: Output: default@table_change_numeric_group_string_group_multi_ints_string_group_n1
PREHOOK: query: CREATE TABLE table_change_numeric_group_string_group_floating_string_group_n1(insert_num int,
              c1 decimal(38,18), c2 float, c3 double,
              c4 decimal(38,18), c5 float, c6 double, c7 decimal(38,18), c8 float, c9 double,
              c10 decimal(38,18), c11 float, c12 double, c13 decimal(38,18), c14 float, c15 double,
              b STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: query: CREATE TABLE table_change_numeric_group_string_group_floating_string_group_n1(insert_num int,
              c1 decimal(38,18), c2 float, c3 double,
              c4 decimal(38,18), c5 float, c6 double, c7 decimal(38,18), c8 float, c9 double,
              c10 decimal(38,18), c11 float, c12 double, c13 decimal(38,18), c14 float, c15 double,
              b STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
PREHOOK: query: insert into table table_change_numeric_group_string_group_floating_string_group_n1 SELECT insert_num,
              decimal1, float1, double1,
              decimal1, float1, double1, decimal1, float1, double1,
              decimal1, float1, double1, decimal1, float1, double1,
             'original' FROM schema_evolution_data_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_evolution_data_n5
PREHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: query: insert into table table_change_numeric_group_string_group_floating_string_group_n1 SELECT insert_num,
              decimal1, float1, double1,
              decimal1, float1, double1, decimal1, float1, double1,
              decimal1, float1, double1, decimal1, float1, double1,
             'original' FROM schema_evolution_data_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_evolution_data_n5
POSTHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.b SIMPLE []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c1 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:decimal1, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c10 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:decimal1, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c11 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:float1, type:float, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c12 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:double1, type:double, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c13 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:decimal1, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c14 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:float1, type:float, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c15 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:double1, type:double, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c2 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:float1, type:float, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c3 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:double1, type:double, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c4 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:decimal1, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c5 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:float1, type:float, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c6 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:double1, type:double, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c7 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:decimal1, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c8 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:float1, type:float, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c9 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:double1, type:double, comment:null), ]
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.insert_num SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:insert_num, type:int, comment:null), ]
insert_num	decimal1	float1	double1	decimal1_1	float1_1	double1_1	decimal1_2	float1_2	double1_2	decimal1_3	float1_3	double1_3	decimal1_4	float1_4	double1_4	_c16
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,b from table_change_numeric_group_string_group_floating_string_group_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,b from table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_numeric_group_string_group_floating_string_group_n1
                  Statistics: Num rows: 5 Data size: 3580 Basic stats: COMPLETE Column stats: PARTIAL
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:decimal(38,18), 2:c2:float, 3:c3:double, 4:c4:decimal(38,18), 5:c5:float, 6:c6:double, 7:c7:decimal(38,18), 8:c8:float, 9:c9:double, 10:c10:decimal(38,18), 11:c11:float, 12:c12:double, 13:c13:decimal(38,18), 14:c14:float, 15:c15:double, 16:b:string, 17:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: decimal(38,18)), c2 (type: float), c3 (type: double), c4 (type: decimal(38,18)), c5 (type: float), c6 (type: double), c7 (type: decimal(38,18)), c8 (type: float), c9 (type: double), c10 (type: decimal(38,18)), c11 (type: float), c12 (type: double), c13 (type: decimal(38,18)), c14 (type: float), c15 (type: double), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                    Statistics: Num rows: 5 Data size: 3580 Basic stats: COMPLETE Column stats: PARTIAL
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 5 Data size: 3580 Basic stats: COMPLETE Column stats: PARTIAL
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 17
                    includeColumns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                    dataColumns: insert_num:int, c1:decimal(38,18), c2:float, c3:double, c4:decimal(38,18), c5:float, c6:double, c7:decimal(38,18), c8:float, c9:double, c10:decimal(38,18), c11:float, c12:double, c13:decimal(38,18), c14:float, c15:double, b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: alter table table_change_numeric_group_string_group_floating_string_group_n1 replace columns (insert_num int,
              c1 STRING, c2 STRING, c3 STRING,
              c4 CHAR(50), c5 CHAR(50), c6 CHAR(50), c7 CHAR(7), c8 CHAR(7), c9 CHAR(7),
              c10 VARCHAR(50), c11 VARCHAR(50), c12 VARCHAR(50), c13 VARCHAR(7), c14 VARCHAR(7), c15 VARCHAR(7),
              b STRING)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@table_change_numeric_group_string_group_floating_string_group_n1
PREHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: query: alter table table_change_numeric_group_string_group_floating_string_group_n1 replace columns (insert_num int,
              c1 STRING, c2 STRING, c3 STRING,
              c4 CHAR(50), c5 CHAR(50), c6 CHAR(50), c7 CHAR(7), c8 CHAR(7), c9 CHAR(7),
              c10 VARCHAR(50), c11 VARCHAR(50), c12 VARCHAR(50), c13 VARCHAR(7), c14 VARCHAR(7), c15 VARCHAR(7),
              b STRING)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
PREHOOK: query: insert into table table_change_numeric_group_string_group_floating_string_group_n1 VALUES (111,
             'filler', 'filler', 'filler',
             'filler', 'filler', 'filler', 'filler', 'filler', 'filler',
             'filler', 'filler', 'filler', 'filler', 'filler', 'filler',
             'new')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: query: insert into table table_change_numeric_group_string_group_floating_string_group_n1 VALUES (111,
             'filler', 'filler', 'filler',
             'filler', 'filler', 'filler', 'filler', 'filler', 'filler',
             'filler', 'filler', 'filler', 'filler', 'filler', 'filler',
             'new')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.b SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c1 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c10 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c11 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c12 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c13 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c14 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c15 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c2 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c3 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c4 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c5 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c6 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c7 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c8 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.c9 SCRIPT []
POSTHOOK: Lineage: table_change_numeric_group_string_group_floating_string_group_n1.insert_num SCRIPT []
_col0	_col1	_col2	_col3	_col4	_col5	_col6	_col7	_col8	_col9	_col10	_col11	_col12	_col13	_col14	_col15	_col16
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,b from table_change_numeric_group_string_group_floating_string_group_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,b from table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_numeric_group_string_group_floating_string_group_n1
                  Statistics: Num rows: 6 Data size: 10884 Basic stats: COMPLETE Column stats: PARTIAL
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:string, 2:c2:string, 3:c3:string, 4:c4:char(50), 5:c5:char(50), 6:c6:char(50), 7:c7:char(7), 8:c8:char(7), 9:c9:char(7), 10:c10:varchar(50), 11:c11:varchar(50), 12:c12:varchar(50), 13:c13:varchar(7), 14:c14:varchar(7), 15:c15:varchar(7), 16:b:string, 17:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: string), c2 (type: string), c3 (type: string), c4 (type: char(50)), c5 (type: char(50)), c6 (type: char(50)), c7 (type: char(7)), c8 (type: char(7)), c9 (type: char(7)), c10 (type: varchar(50)), c11 (type: varchar(50)), c12 (type: varchar(50)), c13 (type: varchar(7)), c14 (type: varchar(7)), c15 (type: varchar(7)), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                    Statistics: Num rows: 6 Data size: 10884 Basic stats: COMPLETE Column stats: PARTIAL
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 6 Data size: 10884 Basic stats: COMPLETE Column stats: PARTIAL
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 17
                    includeColumns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                    dataColumns: insert_num:int, c1:string, c2:string, c3:string, c4:char(50), c5:char(50), c6:char(50), c7:char(7), c8:char(7), c9:char(7), c10:varchar(50), c11:varchar(50), c12:varchar(50), c13:varchar(7), c14:varchar(7), c15:varchar(7), b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: drop table table_change_numeric_group_string_group_floating_string_group_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_change_numeric_group_string_group_floating_string_group_n1
PREHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: query: drop table table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_change_numeric_group_string_group_floating_string_group_n1
POSTHOOK: Output: default@table_change_numeric_group_string_group_floating_string_group_n1
PREHOOK: query: CREATE TABLE table_change_string_group_string_group_string_n1(insert_num int,
           c1 string, c2 string, c3 string, c4 string,
           c5 CHAR(50), c6 CHAR(50), c7 CHAR(50),
           c8 VARCHAR(50), c9 VARCHAR(50), c10 VARCHAR(50), b STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_change_string_group_string_group_string_n1
POSTHOOK: query: CREATE TABLE table_change_string_group_string_group_string_n1(insert_num int,
           c1 string, c2 string, c3 string, c4 string,
           c5 CHAR(50), c6 CHAR(50), c7 CHAR(50),
           c8 VARCHAR(50), c9 VARCHAR(50), c10 VARCHAR(50), b STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_change_string_group_string_group_string_n1
PREHOOK: query: insert into table table_change_string_group_string_group_string_n1 SELECT insert_num,
           string2, string2, string2, string2,
           string2, string2, string2,
           string2, string2, string2,
          'original' FROM schema_evolution_data_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_evolution_data_n5
PREHOOK: Output: default@table_change_string_group_string_group_string_n1
POSTHOOK: query: insert into table table_change_string_group_string_group_string_n1 SELECT insert_num,
           string2, string2, string2, string2,
           string2, string2, string2,
           string2, string2, string2,
          'original' FROM schema_evolution_data_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_evolution_data_n5
POSTHOOK: Output: default@table_change_string_group_string_group_string_n1
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.b SIMPLE []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c1 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c10 EXPRESSION [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c2 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c3 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c4 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c5 EXPRESSION [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c6 EXPRESSION [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c7 EXPRESSION [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c8 EXPRESSION [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c9 EXPRESSION [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:string2, type:string, comment:null), ]
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.insert_num SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:insert_num, type:int, comment:null), ]
_col0	_col1	_col2	_col3	_col4	_col5	_col6	_col7	_col8	_col9	_col10	_col11
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,b from table_change_string_group_string_group_string_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,b from table_change_string_group_string_group_string_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_string_group_string_group_string_n1
                  Statistics: Num rows: 5 Data size: 2240 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:string, 2:c2:string, 3:c3:string, 4:c4:string, 5:c5:char(50), 6:c6:char(50), 7:c7:char(50), 8:c8:varchar(50), 9:c9:varchar(50), 10:c10:varchar(50), 11:b:string, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: string), c2 (type: string), c3 (type: string), c4 (type: string), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4, 11]
                    Statistics: Num rows: 5 Data size: 2240 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 5 Data size: 2240 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 12
                    includeColumns: [0, 1, 2, 3, 4, 11]
                    dataColumns: insert_num:int, c1:string, c2:string, c3:string, c4:string, c5:char(50), c6:char(50), c7:char(50), c8:varchar(50), c9:varchar(50), c10:varchar(50), b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: alter table table_change_string_group_string_group_string_n1 replace columns (insert_num int,
           c1 CHAR(50), c2 CHAR(9), c3 VARCHAR(50), c4 CHAR(9),
           c5 VARCHAR(50), c6 VARCHAR(9), c7 STRING,
           c8 CHAR(50), c9 CHAR(9), c10 STRING, b STRING)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@table_change_string_group_string_group_string_n1
PREHOOK: Output: default@table_change_string_group_string_group_string_n1
POSTHOOK: query: alter table table_change_string_group_string_group_string_n1 replace columns (insert_num int,
           c1 CHAR(50), c2 CHAR(9), c3 VARCHAR(50), c4 CHAR(9),
           c5 VARCHAR(50), c6 VARCHAR(9), c7 STRING,
           c8 CHAR(50), c9 CHAR(9), c10 STRING, b STRING)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@table_change_string_group_string_group_string_n1
POSTHOOK: Output: default@table_change_string_group_string_group_string_n1
PREHOOK: query: insert into table table_change_string_group_string_group_string_n1 VALUES (111,
          'filler', 'filler', 'filler', 'filler',
          'filler', 'filler', 'filler',
          'filler', 'filler', 'filler',
          'new')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_change_string_group_string_group_string_n1
POSTHOOK: query: insert into table table_change_string_group_string_group_string_n1 VALUES (111,
          'filler', 'filler', 'filler', 'filler',
          'filler', 'filler', 'filler',
          'filler', 'filler', 'filler',
          'new')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_change_string_group_string_group_string_n1
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.b SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c1 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c10 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c2 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c3 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c4 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c5 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c6 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c7 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c8 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.c9 SCRIPT []
POSTHOOK: Lineage: table_change_string_group_string_group_string_n1.insert_num SCRIPT []
_col0	_col1	_col2	_col3	_col4	_col5	_col6	_col7	_col8	_col9	_col10	_col11
PREHOOK: query: drop table table_change_string_group_string_group_string_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_change_string_group_string_group_string_n1
PREHOOK: Output: default@table_change_string_group_string_group_string_n1
POSTHOOK: query: drop table table_change_string_group_string_group_string_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_change_string_group_string_group_string_n1
POSTHOOK: Output: default@table_change_string_group_string_group_string_n1
PREHOOK: query: CREATE TABLE table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1(insert_num int,
                                c1 tinyint, c2 tinyint, c3 tinyint, c4 tinyint, c5 tinyint, c6 tinyint,
                                c7 smallint, c8 smallint, c9 smallint, c10 smallint, c11 smallint,
                                c12 int, c13 int, c14 int, c15 int,
                                c16 bigint, c17 bigint, c18 bigint,
                                b STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: query: CREATE TABLE table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1(insert_num int,
                                c1 tinyint, c2 tinyint, c3 tinyint, c4 tinyint, c5 tinyint, c6 tinyint,
                                c7 smallint, c8 smallint, c9 smallint, c10 smallint, c11 smallint,
                                c12 int, c13 int, c14 int, c15 int,
                                c16 bigint, c17 bigint, c18 bigint,
                                b STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
PREHOOK: query: insert into table table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1 SELECT insert_num,
                                tinyint1, tinyint1, tinyint1, tinyint1, tinyint1, tinyint1,
                                smallint1, smallint1, smallint1, smallint1, smallint1,
                                int1, int1, int1, int1,
                                bigint1, bigint1, bigint1, 
                                'original' FROM schema_evolution_data_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_evolution_data_n5
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: query: insert into table table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1 SELECT insert_num,
                                tinyint1, tinyint1, tinyint1, tinyint1, tinyint1, tinyint1,
                                smallint1, smallint1, smallint1, smallint1, smallint1,
                                int1, int1, int1, int1,
                                bigint1, bigint1, bigint1, 
                                'original' FROM schema_evolution_data_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_evolution_data_n5
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.b SIMPLE []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c1 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c10 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c11 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c12 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c13 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c14 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c15 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:int1, type:int, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c16 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:bigint1, type:bigint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c17 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:bigint1, type:bigint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c18 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:bigint1, type:bigint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c2 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c3 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c4 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c5 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c6 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:tinyint1, type:tinyint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c7 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c8 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c9 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:smallint1, type:smallint, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.insert_num SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:insert_num, type:int, comment:null), ]
insert_num	tinyint1	tinyint1_1	tinyint1_2	tinyint1_3	tinyint1_4	tinyint1_5	smallint1	smallint1_1	smallint1_2	smallint1_3	smallint1_4	int1	int1_1	int1_2	int1_3	bigint1	bigint1_1	bigint1_2	_c19
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,b from table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,b from table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
                  Statistics: Num rows: 5 Data size: 856 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:tinyint, 2:c2:tinyint, 3:c3:tinyint, 4:c4:tinyint, 5:c5:tinyint, 6:c6:tinyint, 7:c7:smallint, 8:c8:smallint, 9:c9:smallint, 10:c10:smallint, 11:c11:smallint, 12:c12:int, 13:c13:int, 14:c14:int, 15:c15:int, 16:c16:bigint, 17:c17:bigint, 18:c18:bigint, 19:b:string, 20:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: tinyint), c2 (type: tinyint), c3 (type: tinyint), c4 (type: tinyint), c5 (type: tinyint), c6 (type: tinyint), c7 (type: smallint), c8 (type: smallint), c9 (type: smallint), c10 (type: smallint), c11 (type: smallint), c12 (type: int), c13 (type: int), c14 (type: int), c15 (type: int), c16 (type: bigint), c17 (type: bigint), c18 (type: bigint), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
                    Statistics: Num rows: 5 Data size: 856 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 5 Data size: 856 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 20
                    includeColumns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
                    dataColumns: insert_num:int, c1:tinyint, c2:tinyint, c3:tinyint, c4:tinyint, c5:tinyint, c6:tinyint, c7:smallint, c8:smallint, c9:smallint, c10:smallint, c11:smallint, c12:int, c13:int, c14:int, c15:int, c16:bigint, c17:bigint, c18:bigint, b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: alter table table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1 replace columns (insert_num int,
             c1 SMALLINT, c2 INT, c3 BIGINT, c4 decimal(38,18), c5 FLOAT, c6 DOUBLE,
             c7 INT, c8 BIGINT, c9 decimal(38,18), c10 FLOAT, c11 DOUBLE,
             c12 BIGINT, c13 decimal(38,18), c14 FLOAT, c15 DOUBLE,
             c16 decimal(38,18), c17 FLOAT, c18 DOUBLE,
             b STRING)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: query: alter table table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1 replace columns (insert_num int,
             c1 SMALLINT, c2 INT, c3 BIGINT, c4 decimal(38,18), c5 FLOAT, c6 DOUBLE,
             c7 INT, c8 BIGINT, c9 decimal(38,18), c10 FLOAT, c11 DOUBLE,
             c12 BIGINT, c13 decimal(38,18), c14 FLOAT, c15 DOUBLE,
             c16 decimal(38,18), c17 FLOAT, c18 DOUBLE,
             b STRING)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
PREHOOK: query: insert into table table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1 VALUES (111,
            7000, 80000, 90000000, 1234.5678, 9876.543, 789.321,
            80000, 90000000, 1234.5678, 9876.543, 789.321,
            90000000, 1234.5678, 9876.543, 789.321,
            1234.5678, 9876.543, 789.321,
           'new')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: query: insert into table table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1 VALUES (111,
            7000, 80000, 90000000, 1234.5678, 9876.543, 789.321,
            80000, 90000000, 1234.5678, 9876.543, 789.321,
            90000000, 1234.5678, 9876.543, 789.321,
            1234.5678, 9876.543, 789.321,
           'new')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.b SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c1 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c10 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c11 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c12 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c13 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c14 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c15 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c16 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c17 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c18 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c2 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c3 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c4 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c5 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c6 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c7 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c8 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.c9 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1.insert_num SCRIPT []
_col0	_col1	_col2	_col3	_col4	_col5	_col6	_col7	_col8	_col9	_col10	_col11	_col12	_col13	_col14	_col15	_col16	_col17	_col18	_col19
PREHOOK: query: drop table table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: query: drop table table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_tinyint_to_bigint_n1
PREHOOK: query: CREATE TABLE table_change_lower_to_higher_numeric_group_decimal_to_float_n1(insert_num int,
           c1 decimal(38,18), c2 decimal(38,18),
           c3 float,
           b STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: query: CREATE TABLE table_change_lower_to_higher_numeric_group_decimal_to_float_n1(insert_num int,
           c1 decimal(38,18), c2 decimal(38,18),
           c3 float,
           b STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
PREHOOK: query: insert into table table_change_lower_to_higher_numeric_group_decimal_to_float_n1 SELECT insert_num,
           decimal1, decimal1,
           float1,
          'original' FROM schema_evolution_data_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_evolution_data_n5
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: query: insert into table table_change_lower_to_higher_numeric_group_decimal_to_float_n1 SELECT insert_num,
           decimal1, decimal1,
           float1,
          'original' FROM schema_evolution_data_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_evolution_data_n5
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.b SIMPLE []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.c1 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:decimal1, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.c2 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:decimal1, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.c3 SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:float1, type:float, comment:null), ]
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.insert_num SIMPLE [(schema_evolution_data_n5)schema_evolution_data_n5.FieldSchema(name:insert_num, type:int, comment:null), ]
insert_num	decimal1	decimal1_1	float1	_c4
PREHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,b from table_change_lower_to_higher_numeric_group_decimal_to_float_n1
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select insert_num,c1,c2,c3,b from table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: table_change_lower_to_higher_numeric_group_decimal_to_float_n1
                  Statistics: Num rows: 5 Data size: 1620 Basic stats: COMPLETE Column stats: PARTIAL
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:insert_num:int, 1:c1:decimal(38,18), 2:c2:decimal(38,18), 3:c3:float, 4:b:string, 5:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: insert_num (type: int), c1 (type: decimal(38,18)), c2 (type: decimal(38,18)), c3 (type: float), b (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3, 4]
                    Statistics: Num rows: 5 Data size: 1620 Basic stats: COMPLETE Column stats: PARTIAL
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 5 Data size: 1620 Basic stats: COMPLETE Column stats: PARTIAL
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 5
                    includeColumns: [0, 1, 2, 3, 4]
                    dataColumns: insert_num:int, c1:decimal(38,18), c2:decimal(38,18), c3:float, b:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: alter table table_change_lower_to_higher_numeric_group_decimal_to_float_n1 replace columns (insert_num int, c1 float, c2 double, c3 DOUBLE, b STRING)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: query: alter table table_change_lower_to_higher_numeric_group_decimal_to_float_n1 replace columns (insert_num int, c1 float, c2 double, c3 DOUBLE, b STRING)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
PREHOOK: query: insert into table table_change_lower_to_higher_numeric_group_decimal_to_float_n1 VALUES (111, 1234.5678, 9876.543, 1234.5678, 'new')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: query: insert into table table_change_lower_to_higher_numeric_group_decimal_to_float_n1 VALUES (111, 1234.5678, 9876.543, 1234.5678, 'new')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.b SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.c1 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.c2 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.c3 SCRIPT []
POSTHOOK: Lineage: table_change_lower_to_higher_numeric_group_decimal_to_float_n1.insert_num SCRIPT []
_col0	_col1	_col2	_col3	_col4
PREHOOK: query: drop table table_change_lower_to_higher_numeric_group_decimal_to_float_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
PREHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: query: drop table table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
POSTHOOK: Output: default@table_change_lower_to_higher_numeric_group_decimal_to_float_n1
