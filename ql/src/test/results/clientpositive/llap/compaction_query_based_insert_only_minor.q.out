PREHOOK: query: drop table orc_table
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: drop table orc_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: create table orc_table (a int, b string) stored as orc TBLPROPERTIES('transactional'='true', 'transactional_properties'='insert_only')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@orc_table
POSTHOOK: query: create table orc_table (a int, b string) stored as orc TBLPROPERTIES('transactional'='true', 'transactional_properties'='insert_only')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orc_table
PREHOOK: query: insert into orc_table values('1', 'text1')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@orc_table
POSTHOOK: query: insert into orc_table values('1', 'text1')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@orc_table
POSTHOOK: Lineage: orc_table.a SCRIPT []
POSTHOOK: Lineage: orc_table.b SCRIPT []
PREHOOK: query: insert into orc_table values('2', 'text2')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@orc_table
POSTHOOK: query: insert into orc_table values('2', 'text2')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@orc_table
POSTHOOK: Lineage: orc_table.a SCRIPT []
POSTHOOK: Lineage: orc_table.b SCRIPT []
PREHOOK: query: insert into orc_table values('3', 'text3')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@orc_table
POSTHOOK: query: insert into orc_table values('3', 'text3')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@orc_table
POSTHOOK: Lineage: orc_table.a SCRIPT []
POSTHOOK: Lineage: orc_table.b SCRIPT []
PREHOOK: query: alter table orc_table compact 'MINOR' and wait
PREHOOK: type: ALTERTABLE_COMPACT
PREHOOK: Input: default@orc_table
PREHOOK: Output: default@orc_table
POSTHOOK: query: alter table orc_table compact 'MINOR' and wait
POSTHOOK: type: ALTERTABLE_COMPACT
POSTHOOK: Input: default@orc_table
POSTHOOK: Output: default@orc_table
PREHOOK: query: analyze table orc_table compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@orc_table
PREHOOK: Output: default@orc_table
POSTHOOK: query: analyze table orc_table compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orc_table
POSTHOOK: Output: default@orc_table
PREHOOK: query: describe extended orc_table
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@orc_table
POSTHOOK: query: describe extended orc_table
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@orc_table
a                   	int                 	                    
b                   	string              	                    
	 	 
Detailed Table Information	Table(tableName:orc_table, dbName:default, #Masked# #Masked#, #Masked#, retention:0, sd:StorageDescriptor(cols:[FieldSchema(name:a, type:int, comment:null), FieldSchema(name:b, type:string, comment:null)], #Masked# inputFormat:org.apache.hadoop.hive.ql.io.orc.OrcInputFormat, outputFormat:org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat, compressed:false, numBuckets:-1, serdeInfo:SerDeInfo(name:null, serializationLib:org.apache.hadoop.hive.ql.io.orc.OrcSerde, parameters:{serialization.format=1}), bucketCols:[], sortCols:[], parameters:{}, skewedInfo:SkewedInfo(skewedColNames:[], skewedColValues:[], #Masked# storedAsSubDirectories:false), partitionKeys:[], parameters:{#Masked#, numRows=3, #Masked#, transactional_properties=insert_only, COLUMN_STATS_ACCURATE={\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"a\":\"true\",\"b\":\"true\"}}, numFiles=1, #Masked#, #Masked#, numFilesErasureCoded=0, transactional=true}, viewOriginalText:null, viewExpandedText:null, tableType:MANAGED_TABLE, rewriteEnabled:false, catName:hive, #Masked# #Masked#, #Masked#)	
