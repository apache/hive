PREHOOK: query: create table sketch_input (id int, category char(1))
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sketch_input
POSTHOOK: query: create table sketch_input (id int, category char(1))
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sketch_input
PREHOOK: query: insert into table sketch_input values
  (1, 'a'), (2, 'a'), (3, 'a'), (4, 'a'), (5, 'a'), (6, 'a'), (7, 'a'), (8, 'a'), (9, 'a'), (10, 'a'),
  (6, 'b'), (7, 'b'), (8, 'b'), (9, 'b'), (10, 'b'), (11, 'b'), (12, 'b'), (13, 'b'), (14, 'b'), (15, 'b')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@sketch_input
POSTHOOK: query: insert into table sketch_input values
  (1, 'a'), (2, 'a'), (3, 'a'), (4, 'a'), (5, 'a'), (6, 'a'), (7, 'a'), (8, 'a'), (9, 'a'), (10, 'a'),
  (6, 'b'), (7, 'b'), (8, 'b'), (9, 'b'), (10, 'b'), (11, 'b'), (12, 'b'), (13, 'b'), (14, 'b'), (15, 'b')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@sketch_input
POSTHOOK: Lineage: sketch_input.category SCRIPT []
POSTHOOK: Lineage: sketch_input.id SCRIPT []
PREHOOK: query: create table sketch_intermediate (category char(1), sketch binary)
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sketch_intermediate
POSTHOOK: query: create table sketch_intermediate (category char(1), sketch binary)
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sketch_intermediate
PREHOOK: query: insert into sketch_intermediate select category, datatosketch(id) from sketch_input group by category
PREHOOK: type: QUERY
PREHOOK: Input: default@sketch_input
PREHOOK: Output: default@sketch_intermediate
POSTHOOK: query: insert into sketch_intermediate select category, datatosketch(id) from sketch_input group by category
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sketch_input
POSTHOOK: Output: default@sketch_intermediate
POSTHOOK: Lineage: sketch_intermediate.category SIMPLE [(sketch_input)sketch_input.FieldSchema(name:category, type:char(1), comment:null), ]
POSTHOOK: Lineage: sketch_intermediate.sketch EXPRESSION [(sketch_input)sketch_input.FieldSchema(name:id, type:int, comment:null), ]
PREHOOK: query: create  materialized view mv_1 as
  select category, SketchToEstimate(sketch) from sketch_intermediate
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@sketch_intermediate
PREHOOK: Output: database:default
PREHOOK: Output: default@mv_1
POSTHOOK: query: create  materialized view mv_1 as
  select category, SketchToEstimate(sketch) from sketch_intermediate
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@sketch_intermediate
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv_1
PREHOOK: query: explain
select category, SketchToEstimate(sketch) from sketch_intermediate
PREHOOK: type: QUERY
PREHOOK: Input: default@sketch_intermediate
#### A masked pattern was here ####
POSTHOOK: query: explain
select category, SketchToEstimate(sketch) from sketch_intermediate
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sketch_intermediate
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: sketch_intermediate
          Select Operator
            expressions: category (type: char(1)), sketchtoestimate(sketch) (type: double)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: select category, SketchToEstimate(sketch) from sketch_intermediate
PREHOOK: type: QUERY
PREHOOK: Input: default@sketch_intermediate
#### A masked pattern was here ####
POSTHOOK: query: select category, SketchToEstimate(sketch) from sketch_intermediate
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sketch_intermediate
#### A masked pattern was here ####
a	10.000000223517425
b	10.000000223517425
PREHOOK: query: explain
select SketchToEstimate(unionSketch(sketch)) from sketch_intermediate
PREHOOK: type: QUERY
PREHOOK: Input: default@sketch_intermediate
#### A masked pattern was here ####
POSTHOOK: query: explain
select SketchToEstimate(unionSketch(sketch)) from sketch_intermediate
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sketch_intermediate
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: sketch_intermediate
                  Statistics: Num rows: 2 Data size: 192 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: sketch (type: binary)
                    outputColumnNames: sketch
                    Statistics: Num rows: 2 Data size: 192 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: unionsketch(sketch)
                      minReductionHashAggr: 0.5
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 388 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 388 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: struct<lgk:int,type:string,sketch:binary>)
            Execution mode: llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: unionsketch(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 144 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: sketchtoestimate(_col0) (type: double)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select SketchToEstimate(unionSketch(sketch)) from sketch_intermediate
PREHOOK: type: QUERY
PREHOOK: Input: default@sketch_intermediate
#### A masked pattern was here ####
POSTHOOK: query: select SketchToEstimate(unionSketch(sketch)) from sketch_intermediate
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sketch_intermediate
#### A masked pattern was here ####
15.000000521540663
