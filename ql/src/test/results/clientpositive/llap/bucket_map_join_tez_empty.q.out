PREHOOK: query: CREATE TABLE tab1(key1 int, value string) CLUSTERED BY (key1) INTO 10 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab1
POSTHOOK: query: CREATE TABLE tab1(key1 int, value string) CLUSTERED BY (key1) INTO 10 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab1
PREHOOK: query: CREATE TABLE tab2 (key1 int, value string) CLUSTERED BY (key1) INTO 10 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab2
POSTHOOK: query: CREATE TABLE tab2 (key1 int, value string) CLUSTERED BY (key1) INTO 10 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab2
PREHOOK: query: insert into tab1 VALUES (1,"abc"),(4,"def"),(8, "ghi")
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tab1
POSTHOOK: query: insert into tab1 VALUES (1,"abc"),(4,"def"),(8, "ghi")
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tab1
POSTHOOK: Lineage: tab1.key1 SCRIPT []
POSTHOOK: Lineage: tab1.value SCRIPT []
PREHOOK: query: insert into tab2 VALUES (1, "abc"), (5, "aa")
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tab2
POSTHOOK: query: insert into tab2 VALUES (1, "abc"), (5, "aa")
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tab2
POSTHOOK: Lineage: tab2.key1 SCRIPT []
POSTHOOK: Lineage: tab2.value SCRIPT []
PREHOOK: query: explain select * from tab1, tab2 where tab1.key1 = tab2.key1
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from tab1, tab2 where tab1.key1 = tab2.key1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (CUSTOM_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tab1
                  Statistics: Num rows: 3 Data size: 273 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key1 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 273 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key1 (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 273 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 2 Data size: 364 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 2 Data size: 364 Basic stats: COMPLETE Column stats: COMPLETE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: tab2
                  Statistics: Num rows: 2 Data size: 182 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key1 is not null (type: boolean)
                    Statistics: Num rows: 2 Data size: 182 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key1 (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 2 Data size: 182 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 2 Data size: 182 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from tab1, tab2 where tab1.key1 = tab2.key1
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
PREHOOK: Input: default@tab2
#### A masked pattern was here ####
POSTHOOK: query: select * from tab1, tab2 where tab1.key1 = tab2.key1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
POSTHOOK: Input: default@tab2
#### A masked pattern was here ####
1	abc	1	abc
