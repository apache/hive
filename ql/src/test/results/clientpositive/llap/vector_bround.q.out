PREHOOK: query: create table test_vector_bround(v0 double, v1 double) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_vector_bround
POSTHOOK: query: create table test_vector_bround(v0 double, v1 double) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_vector_bround
PREHOOK: query: insert into table test_vector_bround
values
(2.5, 1.25),
(3.5, 1.35),
(-2.5, -1.25),
(-3.5, -1.35),
(2.49, 1.249),
(3.49, 1.349),
(2.51, 1.251),
(3.51, 1.351)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test_vector_bround
POSTHOOK: query: insert into table test_vector_bround
values
(2.5, 1.25),
(3.5, 1.35),
(-2.5, -1.25),
(-3.5, -1.35),
(2.49, 1.249),
(3.49, 1.349),
(2.51, 1.251),
(3.51, 1.351)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test_vector_bround
POSTHOOK: Lineage: test_vector_bround.v0 SCRIPT []
POSTHOOK: Lineage: test_vector_bround.v1 SCRIPT []
PREHOOK: query: insert into test_vector_bround values (NULL, NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test_vector_bround
POSTHOOK: query: insert into test_vector_bround values (NULL, NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test_vector_bround
POSTHOOK: Lineage: test_vector_bround.v0 EXPRESSION []
POSTHOOK: Lineage: test_vector_bround.v1 EXPRESSION []
PREHOOK: query: explain vectorization detail
select bround(v0), bround(v1, 1) from test_vector_bround
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select bround(v0), bround(v1, 1) from test_vector_bround
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: test_vector_bround
                  Statistics: Num rows: 9 Data size: 144 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:v0:double, 1:v1:double, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: bround(v0) (type: double), bround(v1, 1) (type: double)
                    outputColumnNames: _col0, _col1
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [3, 4]
                        selectExpressions: FuncBRoundDoubleToDouble(col 0:double) -> 3:double, BRoundWithNumDigitsDoubleToDouble(col 1, decimalPlaces 1) -> 4:double
                    Statistics: Num rows: 9 Data size: 144 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 9 Data size: 144 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: v0:double, v1:double
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [double, double]

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select bround(v0), bround(v1, 1) from test_vector_bround
PREHOOK: type: QUERY
PREHOOK: Input: default@test_vector_bround
#### A masked pattern was here ####
POSTHOOK: query: select bround(v0), bround(v1, 1) from test_vector_bround
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_vector_bround
#### A masked pattern was here ####
-2.0	-1.2
-4.0	-1.4
2.0	1.2
2.0	1.2
3.0	1.3
3.0	1.3
4.0	1.4
4.0	1.4
NULL	NULL
