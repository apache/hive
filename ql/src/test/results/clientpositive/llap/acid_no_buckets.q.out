PREHOOK: query: drop table if exists srcpart_acid
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists srcpart_acid
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE srcpart_acid (key STRING, value STRING) PARTITIONED BY (ds STRING, hr STRING) stored as ORC TBLPROPERTIES ('transactional'='true', 'transactional_properties'='default')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcpart_acid
POSTHOOK: query: CREATE TABLE srcpart_acid (key STRING, value STRING) PARTITIONED BY (ds STRING, hr STRING) stored as ORC TBLPROPERTIES ('transactional'='true', 'transactional_properties'='default')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcpart_acid
PREHOOK: query: insert into srcpart_acid PARTITION (ds, hr) select * from srcpart
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acid
POSTHOOK: query: insert into srcpart_acid PARTITION (ds, hr) select * from srcpart
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-09,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select ds, hr, key, value from srcpart_acid where cast(key as integer) in(413,43) and hr='11' order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acid where cast(key as integer) in(413,43) and hr='11' order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
#### A masked pattern was here ####
2008-04-08	11	43	val_43
2008-04-08	11	413	val_413
2008-04-08	11	413	val_413
2008-04-09	11	43	val_43
2008-04-09	11	413	val_413
2008-04-09	11	413	val_413
PREHOOK: query: analyze table srcpart_acid PARTITION(ds, hr) compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Output: default@srcpart_acid
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: query: analyze table srcpart_acid PARTITION(ds, hr) compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Output: default@srcpart_acid
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
PREHOOK: query: analyze table srcpart_acid PARTITION(ds, hr) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acid
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: analyze table srcpart_acid PARTITION(ds, hr) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acid
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
PREHOOK: query: explain update srcpart_acid set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
PREHOOK: type: QUERY
POSTHOOK: query: explain update srcpart_acid set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcpart_acid
                  Statistics: Num rows: 1000 Data size: 362000 Basic stats: COMPLETE Column stats: PARTIAL
                  Filter Operator
                    predicate: (UDFToInteger(key)) IN (413, 43) (type: boolean)
                    Statistics: Num rows: 500 Data size: 181000 Basic stats: COMPLETE Column stats: PARTIAL
                    Select Operator
                      expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), key (type: string), concat(value, 'updated') (type: string), ds (type: string)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 500 Data size: 308500 Basic stats: COMPLETE Column stats: PARTIAL
                      Reduce Output Operator
                        key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        sort order: +
                        Statistics: Num rows: 500 Data size: 308500 Basic stats: COMPLETE Column stats: PARTIAL
                        value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string)
            Execution mode: llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: string), '11' (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 500 Data size: 308500 Basic stats: COMPLETE Column stats: PARTIAL
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 500 Data size: 308500 Basic stats: COMPLETE Column stats: PARTIAL
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.srcpart_acid
                  Write Type: UPDATE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.srcpart_acid
          Write Type: UPDATE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: update srcpart_acid set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: query: update srcpart_acid set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: query: select ds, hr, key, value from srcpart_acid where value like '%updated' order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acid where value like '%updated' order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	43	val_43updated
2008-04-08	11	413	val_413updated
2008-04-08	11	413	val_413updated
2008-04-09	11	43	val_43updated
2008-04-09	11	413	val_413updated
2008-04-09	11	413	val_413updated
PREHOOK: query: insert into srcpart_acid PARTITION (ds='2008-04-08', hr=='11') values ('1001','val1001'),('1002','val1002'),('1003','val1003')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: query: insert into srcpart_acid PARTITION (ds='2008-04-08', hr=='11') values ('1001','val1001'),('1002','val1002'),('1003','val1003')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-08,hr=11).key SCRIPT []
POSTHOOK: Lineage: srcpart_acid PARTITION(ds=2008-04-08,hr=11).value SCRIPT []
PREHOOK: query: select ds, hr, key, value from srcpart_acid where cast(key as integer) > 1000 order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acid where cast(key as integer) > 1000 order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	1001	val1001
2008-04-08	11	1002	val1002
2008-04-08	11	1003	val1003
PREHOOK: query: analyze table srcpart_acid PARTITION(ds, hr) compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Output: default@srcpart_acid
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: query: analyze table srcpart_acid PARTITION(ds, hr) compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Output: default@srcpart_acid
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
PREHOOK: query: analyze table srcpart_acid PARTITION(ds, hr) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acid
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: analyze table srcpart_acid PARTITION(ds, hr) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acid
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
PREHOOK: query: explain delete from srcpart_acid where key in( '1001', '213', '43')
PREHOOK: type: QUERY
POSTHOOK: query: explain delete from srcpart_acid where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcpart_acid
                  Statistics: Num rows: 2015 Data size: 916825 Basic stats: COMPLETE Column stats: PARTIAL
                  Filter Operator
                    predicate: (key) IN ('1001', '213', '43') (type: boolean)
                    Statistics: Num rows: 20 Data size: 9100 Basic stats: COMPLETE Column stats: PARTIAL
                    Select Operator
                      expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), ds (type: string), hr (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 20 Data size: 8880 Basic stats: COMPLETE Column stats: PARTIAL
                      Reduce Output Operator
                        key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        sort order: +
                        Statistics: Num rows: 20 Data size: 8880 Basic stats: COMPLETE Column stats: PARTIAL
                        value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), VALUE._col0 (type: string), VALUE._col1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 8880 Basic stats: COMPLETE Column stats: PARTIAL
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 20 Data size: 8880 Basic stats: COMPLETE Column stats: PARTIAL
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.srcpart_acid
                  Write Type: DELETE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.srcpart_acid
          Write Type: DELETE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: delete from srcpart_acid where key in( '1001', '213', '43')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: query: delete from srcpart_acid where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
PREHOOK: query: select count(*) from srcpart_acid where key in( '1001', '213', '43')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acid where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
0
PREHOOK: query: select count(*) from srcpart_acid
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acid
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
1990
PREHOOK: query: merge into srcpart_acid t using (select distinct ds, hr, key, value from srcpart_acid) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
PREHOOK: Output: default@merge_tmp_table
PREHOOK: Output: default@srcpart_acid
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: query: merge into srcpart_acid t using (select distinct ds, hr, key, value from srcpart_acid) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acid@ds=2008-04-09/hr=12
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(srcpart_acid)t.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), (srcpart_acid)t.FieldSchema(name:ds, type:string, comment:null), (srcpart_acid)t.FieldSchema(name:hr, type:string, comment:null), ]
PREHOOK: query: select count(*) from srcpart_acid where ds='2008-04-08' and hr=='12'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acid where ds='2008-04-08' and hr=='12'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
#### A masked pattern was here ####
0
PREHOOK: query: select ds, hr, key, value from srcpart_acid where value like '%updated by merge'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acid where value like '%updated by merge'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acid@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	44	val_44updated by merge
PREHOOK: query: select count(*) from srcpart_acid where ds = 'this' and hr = 'should' and key = 'not' and value = 'be there'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acid
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acid where ds = 'this' and hr = 'should' and key = 'not' and value = 'be there'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acid
#### A masked pattern was here ####
0
PREHOOK: query: drop table if exists srcpart_acid
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcpart_acid
PREHOOK: Output: default@srcpart_acid
POSTHOOK: query: drop table if exists srcpart_acid
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcpart_acid
POSTHOOK: Output: default@srcpart_acid
PREHOOK: query: drop table if exists srcpart_acidb
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists srcpart_acidb
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE srcpart_acidb (key STRING, value STRING) PARTITIONED BY (ds STRING, hr STRING) CLUSTERED BY(key) INTO 2 BUCKETS stored as ORC TBLPROPERTIES ('transactional'='true', 'transactional_properties'='default')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcpart_acidb
POSTHOOK: query: CREATE TABLE srcpart_acidb (key STRING, value STRING) PARTITIONED BY (ds STRING, hr STRING) CLUSTERED BY(key) INTO 2 BUCKETS stored as ORC TBLPROPERTIES ('transactional'='true', 'transactional_properties'='default')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcpart_acidb
PREHOOK: query: insert into srcpart_acidb PARTITION (ds, hr) select * from srcpart
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidb
POSTHOOK: query: insert into srcpart_acidb PARTITION (ds, hr) select * from srcpart
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-09,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select ds, hr, key, value from srcpart_acidb where cast(key as integer) in(413,43) and hr='11' order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidb where cast(key as integer) in(413,43) and hr='11' order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
#### A masked pattern was here ####
2008-04-08	11	43	val_43
2008-04-08	11	413	val_413
2008-04-08	11	413	val_413
2008-04-09	11	43	val_43
2008-04-09	11	413	val_413
2008-04-09	11	413	val_413
PREHOOK: query: analyze table srcpart_acidb PARTITION(ds, hr) compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Output: default@srcpart_acidb
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: query: analyze table srcpart_acidb PARTITION(ds, hr) compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Output: default@srcpart_acidb
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
PREHOOK: query: analyze table srcpart_acidb PARTITION(ds, hr) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidb
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: analyze table srcpart_acidb PARTITION(ds, hr) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidb
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
PREHOOK: query: explain update srcpart_acidb set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
PREHOOK: type: QUERY
POSTHOOK: query: explain update srcpart_acidb set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcpart_acidb
                  Statistics: Num rows: 1000 Data size: 362000 Basic stats: COMPLETE Column stats: PARTIAL
                  Filter Operator
                    predicate: (UDFToInteger(key)) IN (413, 43) (type: boolean)
                    Statistics: Num rows: 500 Data size: 181000 Basic stats: COMPLETE Column stats: PARTIAL
                    Select Operator
                      expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), key (type: string), concat(value, 'updated') (type: string), ds (type: string)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 500 Data size: 308500 Basic stats: COMPLETE Column stats: PARTIAL
                      Reduce Output Operator
                        key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        sort order: +
                        Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                        Statistics: Num rows: 500 Data size: 308500 Basic stats: COMPLETE Column stats: PARTIAL
                        value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string)
            Execution mode: llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: string), '11' (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 500 Data size: 308500 Basic stats: COMPLETE Column stats: PARTIAL
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 500 Data size: 308500 Basic stats: COMPLETE Column stats: PARTIAL
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.srcpart_acidb
                  Write Type: UPDATE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.srcpart_acidb
          Write Type: UPDATE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: update srcpart_acidb set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: query: update srcpart_acidb set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: query: select ds, hr, key, value from srcpart_acidb where value like '%updated' order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidb where value like '%updated' order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	43	val_43updated
2008-04-08	11	413	val_413updated
2008-04-08	11	413	val_413updated
2008-04-09	11	43	val_43updated
2008-04-09	11	413	val_413updated
2008-04-09	11	413	val_413updated
PREHOOK: query: insert into srcpart_acidb PARTITION (ds='2008-04-08', hr=='11') values ('1001','val1001'),('1002','val1002'),('1003','val1003')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: query: insert into srcpart_acidb PARTITION (ds='2008-04-08', hr=='11') values ('1001','val1001'),('1002','val1002'),('1003','val1003')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-08,hr=11).key SCRIPT []
POSTHOOK: Lineage: srcpart_acidb PARTITION(ds=2008-04-08,hr=11).value SCRIPT []
PREHOOK: query: select ds, hr, key, value from srcpart_acidb where cast(key as integer) > 1000 order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidb where cast(key as integer) > 1000 order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	1001	val1001
2008-04-08	11	1002	val1002
2008-04-08	11	1003	val1003
PREHOOK: query: analyze table srcpart_acidb PARTITION(ds, hr) compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Output: default@srcpart_acidb
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: query: analyze table srcpart_acidb PARTITION(ds, hr) compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Output: default@srcpart_acidb
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
PREHOOK: query: analyze table srcpart_acidb PARTITION(ds, hr) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidb
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: analyze table srcpart_acidb PARTITION(ds, hr) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidb
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
PREHOOK: query: explain delete from srcpart_acidb where key in( '1001', '213', '43')
PREHOOK: type: QUERY
POSTHOOK: query: explain delete from srcpart_acidb where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcpart_acidb
                  Statistics: Num rows: 2015 Data size: 916825 Basic stats: COMPLETE Column stats: PARTIAL
                  Filter Operator
                    predicate: (key) IN ('1001', '213', '43') (type: boolean)
                    Statistics: Num rows: 20 Data size: 9100 Basic stats: COMPLETE Column stats: PARTIAL
                    Select Operator
                      expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), ds (type: string), hr (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 20 Data size: 8880 Basic stats: COMPLETE Column stats: PARTIAL
                      Reduce Output Operator
                        key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        sort order: +
                        Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                        Statistics: Num rows: 20 Data size: 8880 Basic stats: COMPLETE Column stats: PARTIAL
                        value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), VALUE._col0 (type: string), VALUE._col1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 8880 Basic stats: COMPLETE Column stats: PARTIAL
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 20 Data size: 8880 Basic stats: COMPLETE Column stats: PARTIAL
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.srcpart_acidb
                  Write Type: DELETE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.srcpart_acidb
          Write Type: DELETE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: delete from srcpart_acidb where key in( '1001', '213', '43')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: query: delete from srcpart_acidb where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
PREHOOK: query: select count(*) from srcpart_acidb where key in( '1001', '213', '43')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidb where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
0
PREHOOK: query: select count(*) from srcpart_acidb
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidb
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
1990
PREHOOK: query: merge into srcpart_acidb t using (select distinct ds, hr, key, value from srcpart_acidb) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
PREHOOK: Output: default@merge_tmp_table
PREHOOK: Output: default@srcpart_acidb
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: query: merge into srcpart_acidb t using (select distinct ds, hr, key, value from srcpart_acidb) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidb@ds=2008-04-09/hr=12
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(srcpart_acidb)t.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), (srcpart_acidb)t.FieldSchema(name:ds, type:string, comment:null), (srcpart_acidb)t.FieldSchema(name:hr, type:string, comment:null), ]
PREHOOK: query: select count(*) from srcpart_acidb where ds='2008-04-08' and hr=='12'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidb where ds='2008-04-08' and hr=='12'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
#### A masked pattern was here ####
0
PREHOOK: query: select ds, hr, key, value from srcpart_acidb where value like '%updated by merge'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidb where value like '%updated by merge'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	44	val_44updated by merge
PREHOOK: query: select count(*) from srcpart_acidb where ds = 'this' and hr = 'should' and key = 'not' and value = 'be there'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidb
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidb where ds = 'this' and hr = 'should' and key = 'not' and value = 'be there'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidb
#### A masked pattern was here ####
0
PREHOOK: query: drop table if exists srcpart_acidb
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcpart_acidb
PREHOOK: Output: default@srcpart_acidb
POSTHOOK: query: drop table if exists srcpart_acidb
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcpart_acidb
POSTHOOK: Output: default@srcpart_acidb
PREHOOK: query: drop table if exists srcpart_acidv
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists srcpart_acidv
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE srcpart_acidv (key STRING, value STRING) PARTITIONED BY (ds STRING, hr STRING) stored as ORC TBLPROPERTIES ('transactional'='true', 'transactional_properties'='default')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcpart_acidv
POSTHOOK: query: CREATE TABLE srcpart_acidv (key STRING, value STRING) PARTITIONED BY (ds STRING, hr STRING) stored as ORC TBLPROPERTIES ('transactional'='true', 'transactional_properties'='default')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcpart_acidv
PREHOOK: query: insert into srcpart_acidv PARTITION (ds, hr) select * from srcpart
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidv
POSTHOOK: query: insert into srcpart_acidv PARTITION (ds, hr) select * from srcpart
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-09,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select ds, hr, key, value from srcpart_acidv where cast(key as integer) in(413,43) and hr='11' order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidv where cast(key as integer) in(413,43) and hr='11' order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
#### A masked pattern was here ####
2008-04-08	11	43	val_43
2008-04-08	11	413	val_413
2008-04-08	11	413	val_413
2008-04-09	11	43	val_43
2008-04-09	11	413	val_413
2008-04-09	11	413	val_413
PREHOOK: query: analyze table srcpart_acidv PARTITION(ds, hr) compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Output: default@srcpart_acidv
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: query: analyze table srcpart_acidv PARTITION(ds, hr) compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Output: default@srcpart_acidv
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
PREHOOK: query: analyze table srcpart_acidv PARTITION(ds, hr) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidv
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: analyze table srcpart_acidv PARTITION(ds, hr) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidv
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
PREHOOK: query: explain vectorization only detail
update srcpart_acidv set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization only detail
update srcpart_acidv set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ds:string, 3:hr:string, 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterLongColumnInList(col 5:int, values [413, 43])(children: CastStringToLong(col 0:string) -> 5:int)
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [4, 0, 6, 2]
                          selectExpressions: StringGroupColConcatStringScalar(col 1:string, val updated) -> 6:string
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            keyColumnNums: [4]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: [0, 6, 2]
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:string, value:string
                    neededVirtualColumns: [ROWID]
                    partitionColumnCount: 2
                    partitionColumns: ds:string, hr:string
                    scratchColumnTypeNames: [bigint, string]
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: a
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    dataColumns: KEY.reducesinkkey0:struct<writeid:bigint,bucketid:int,rowid:bigint>, VALUE._col0:string, VALUE._col1:string, VALUE._col2:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [string]
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3, 4]
                    selectExpressions: ConstantVectorExpression(val 11) -> 4:string
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false

  Stage: Stage-2

  Stage: Stage-0

  Stage: Stage-3

PREHOOK: query: update srcpart_acidv set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: query: update srcpart_acidv set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: query: select ds, hr, key, value from srcpart_acidv where value like '%updated' order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidv where value like '%updated' order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	43	val_43updated
2008-04-08	11	413	val_413updated
2008-04-08	11	413	val_413updated
2008-04-09	11	43	val_43updated
2008-04-09	11	413	val_413updated
2008-04-09	11	413	val_413updated
PREHOOK: query: insert into srcpart_acidv PARTITION (ds='2008-04-08', hr=='11') values ('1001','val1001'),('1002','val1002'),('1003','val1003')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: query: insert into srcpart_acidv PARTITION (ds='2008-04-08', hr=='11') values ('1001','val1001'),('1002','val1002'),('1003','val1003')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-08,hr=11).key SCRIPT []
POSTHOOK: Lineage: srcpart_acidv PARTITION(ds=2008-04-08,hr=11).value SCRIPT []
PREHOOK: query: select ds, hr, key, value from srcpart_acidv where cast(key as integer) > 1000 order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidv where cast(key as integer) > 1000 order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	1001	val1001
2008-04-08	11	1002	val1002
2008-04-08	11	1003	val1003
PREHOOK: query: analyze table srcpart_acidv PARTITION(ds, hr) compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Output: default@srcpart_acidv
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: query: analyze table srcpart_acidv PARTITION(ds, hr) compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Output: default@srcpart_acidv
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
PREHOOK: query: analyze table srcpart_acidv PARTITION(ds, hr) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidv
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: analyze table srcpart_acidv PARTITION(ds, hr) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidv
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
PREHOOK: query: explain vectorization only detail
delete from srcpart_acidv where key in( '1001', '213', '43')
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization only detail
delete from srcpart_acidv where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ds:string, 3:hr:string, 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterStringColumnInList(col 0, values 1001, 213, 43)
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [4, 2, 3]
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            keyColumnNums: [4]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: [2, 3]
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:string, value:string
                    neededVirtualColumns: [ROWID]
                    partitionColumnCount: 2
                    partitionColumns: ds:string, hr:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: a
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: KEY.reducesinkkey0:struct<writeid:bigint,bucketid:int,rowid:bigint>, VALUE._col0:string, VALUE._col1:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2]
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false

  Stage: Stage-2

  Stage: Stage-0

  Stage: Stage-3

PREHOOK: query: delete from srcpart_acidv where key in( '1001', '213', '43')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: query: delete from srcpart_acidv where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
PREHOOK: query: select count(*) from srcpart_acidv where key in( '1001', '213', '43')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidv where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
0
PREHOOK: query: select count(*) from srcpart_acidv
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidv
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
1990
PREHOOK: query: explain vectorization only detail
merge into srcpart_acidv t using (select distinct ds, hr, key, value from srcpart_acidv) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization only detail
merge into srcpart_acidv t using (select distinct ds, hr, key, value from srcpart_acidv) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-5 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-5
  Stage-6 depends on stages: Stage-0
  Stage-2 depends on stages: Stage-5
  Stage-7 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-5
  Stage-8 depends on stages: Stage-3
  Stage-1 depends on stages: Stage-5
  Stage-9 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-4
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (ONE_TO_ONE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 6 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 7 <- Reducer 3 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ds:string, 3:hr:string, 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3]
                      Group By Vectorization:
                          className: VectorGroupByOperator
                          groupByMode: HASH
                          keyExpressions: col 2:string, col 3:string, col 0:string, col 1:string
                          native: false
                          vectorProcessingMode: HASH
                          projectedOutputColumnNums: []
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            keyColumnNums: [0, 1, 2, 3]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            partitionColumnNums: [0, 1, 2, 3]
                            valueColumnNums: []
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:string, value:string
                    partitionColumnCount: 2
                    partitionColumns: ds:string, hr:string
                    scratchColumnTypeNames: []
        Map 8 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ds:string, 3:hr:string, 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                    Reduce Sink Vectorization:
                        className: VectorReduceSinkObjectHashOperator
                        keyColumnNums: [2, 3, 0, 1]
                        native: true
                        nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                        partitionColumnNums: [2, 3, 0, 1]
                        valueColumnNums: [4]
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:string, value:string
                    neededVirtualColumns: [ROWID]
                    partitionColumnCount: 2
                    partitionColumns: ds:string, hr:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: aaaa
                reduceColumnSortOrder: ++++
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    dataColumns: KEY._col0:string, KEY._col1:string, KEY._col2:string, KEY._col3:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
                Group By Vectorization:
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    keyExpressions: col 0:string, col 1:string, col 2:string, col 3:string
                    native: false
                    vectorProcessingMode: MERGE_PARTIAL
                    projectedOutputColumnNums: []
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      keyColumnNums: [0, 1, 2, 3]
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      partitionColumnNums: [0, 1, 2, 3]
                      valueColumnNums: []
                  Select Vectorization:
                      className: VectorSelectOperator
                      native: true
                      projectedOutputColumnNums: [0]
                    Group By Vectorization:
                        className: VectorGroupByOperator
                        groupByMode: HASH
                        keyExpressions: col 0:string
                        native: false
                        vectorProcessingMode: HASH
                        projectedOutputColumnNums: []
                      App Master Event Vectorization:
                          className: VectorAppMasterEventOperator
                          native: true
                  Select Vectorization:
                      className: VectorSelectOperator
                      native: true
                      projectedOutputColumnNums: [1]
                    Group By Vectorization:
                        className: VectorGroupByOperator
                        groupByMode: HASH
                        keyExpressions: col 1:string
                        native: false
                        vectorProcessingMode: HASH
                        projectedOutputColumnNums: []
                      App Master Event Vectorization:
                          className: VectorAppMasterEventOperator
                          native: true
        Reducer 3 
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: a
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: KEY.reducesinkkey0:struct<writeid:bigint,bucketid:int,rowid:bigint>, VALUE._col0:string, VALUE._col1:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2]
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: a
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 5
                    dataColumns: KEY.reducesinkkey0:struct<writeid:bigint,bucketid:int,rowid:bigint>, VALUE._col0:string, VALUE._col1:string, VALUE._col2:string, VALUE._col3:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3, 4]
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
        Reducer 6 
            Execution mode: llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                notVectorizedReason: Key expression for GROUPBY operator: Vectorizing complex type STRUCT not supported
                vectorized: false
            Reduce Operator Tree:
        Reducer 7 
            Execution mode: llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                notVectorizedReason: Aggregation Function expression for GROUPBY operator: UDF compute_stats not supported
                vectorized: false
            Reduce Operator Tree:

  Stage: Stage-5

  Stage: Stage-0

  Stage: Stage-6

  Stage: Stage-2

  Stage: Stage-7

  Stage: Stage-3

  Stage: Stage-8

  Stage: Stage-1

  Stage: Stage-9

PREHOOK: query: merge into srcpart_acidv t using (select distinct ds, hr, key, value from srcpart_acidv) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
PREHOOK: Output: default@merge_tmp_table
PREHOOK: Output: default@srcpart_acidv
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: query: merge into srcpart_acidv t using (select distinct ds, hr, key, value from srcpart_acidv) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidv@ds=2008-04-09/hr=12
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(srcpart_acidv)t.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), (srcpart_acidv)t.FieldSchema(name:ds, type:string, comment:null), (srcpart_acidv)t.FieldSchema(name:hr, type:string, comment:null), ]
PREHOOK: query: select count(*) from srcpart_acidv where ds='2008-04-08' and hr=='12'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidv where ds='2008-04-08' and hr=='12'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
#### A masked pattern was here ####
0
PREHOOK: query: select ds, hr, key, value from srcpart_acidv where value like '%updated by merge'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidv where value like '%updated by merge'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidv@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	44	val_44updated by merge
PREHOOK: query: select count(*) from srcpart_acidv where ds = 'this' and hr = 'should' and key = 'not' and value = 'be there'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidv
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidv where ds = 'this' and hr = 'should' and key = 'not' and value = 'be there'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidv
#### A masked pattern was here ####
0
PREHOOK: query: drop table if exists srcpart_acidv
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcpart_acidv
PREHOOK: Output: default@srcpart_acidv
POSTHOOK: query: drop table if exists srcpart_acidv
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcpart_acidv
POSTHOOK: Output: default@srcpart_acidv
PREHOOK: query: drop table if exists srcpart_acidvb
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists srcpart_acidvb
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE srcpart_acidvb (key STRING, value STRING) PARTITIONED BY (ds STRING, hr STRING) CLUSTERED BY(key) INTO 2 BUCKETS stored as ORC TBLPROPERTIES ('transactional'='true', 'transactional_properties'='default')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcpart_acidvb
POSTHOOK: query: CREATE TABLE srcpart_acidvb (key STRING, value STRING) PARTITIONED BY (ds STRING, hr STRING) CLUSTERED BY(key) INTO 2 BUCKETS stored as ORC TBLPROPERTIES ('transactional'='true', 'transactional_properties'='default')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcpart_acidvb
PREHOOK: query: insert into srcpart_acidvb PARTITION (ds, hr) select * from srcpart
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidvb
POSTHOOK: query: insert into srcpart_acidvb PARTITION (ds, hr) select * from srcpart
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-09,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select ds, hr, key, value from srcpart_acidvb where cast(key as integer) in(413,43) and hr='11' order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidvb where cast(key as integer) in(413,43) and hr='11' order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
#### A masked pattern was here ####
2008-04-08	11	43	val_43
2008-04-08	11	413	val_413
2008-04-08	11	413	val_413
2008-04-09	11	43	val_43
2008-04-09	11	413	val_413
2008-04-09	11	413	val_413
PREHOOK: query: analyze table srcpart_acidvb PARTITION(ds, hr) compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Output: default@srcpart_acidvb
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: query: analyze table srcpart_acidvb PARTITION(ds, hr) compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Output: default@srcpart_acidvb
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
PREHOOK: query: analyze table srcpart_acidvb PARTITION(ds, hr) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidvb
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: analyze table srcpart_acidvb PARTITION(ds, hr) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidvb
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
PREHOOK: query: explain vectorization only detail
update srcpart_acidvb set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization only detail
update srcpart_acidvb set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ds:string, 3:hr:string, 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterLongColumnInList(col 5:int, values [413, 43])(children: CastStringToLong(col 0:string) -> 5:int)
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [4, 0, 6, 2]
                          selectExpressions: StringGroupColConcatStringScalar(col 1:string, val updated) -> 6:string
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            keyColumnNums: [4]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            partitionColumnNums: [5]
                            valueColumnNums: [0, 6, 2]
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:string, value:string
                    neededVirtualColumns: [ROWID]
                    partitionColumnCount: 2
                    partitionColumns: ds:string, hr:string
                    scratchColumnTypeNames: [bigint, string]
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: a
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    dataColumns: KEY.reducesinkkey0:struct<writeid:bigint,bucketid:int,rowid:bigint>, VALUE._col0:string, VALUE._col1:string, VALUE._col2:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [string]
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3, 4]
                    selectExpressions: ConstantVectorExpression(val 11) -> 4:string
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false

  Stage: Stage-2

  Stage: Stage-0

  Stage: Stage-3

PREHOOK: query: update srcpart_acidvb set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: query: update srcpart_acidvb set value = concat(value, 'updated') where cast(key as integer) in(413,43) and hr='11'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: query: select ds, hr, key, value from srcpart_acidvb where value like '%updated' order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidvb where value like '%updated' order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	43	val_43updated
2008-04-08	11	413	val_413updated
2008-04-08	11	413	val_413updated
2008-04-09	11	43	val_43updated
2008-04-09	11	413	val_413updated
2008-04-09	11	413	val_413updated
PREHOOK: query: insert into srcpart_acidvb PARTITION (ds='2008-04-08', hr=='11') values ('1001','val1001'),('1002','val1002'),('1003','val1003')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: query: insert into srcpart_acidvb PARTITION (ds='2008-04-08', hr=='11') values ('1001','val1001'),('1002','val1002'),('1003','val1003')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-08,hr=11).key SCRIPT []
POSTHOOK: Lineage: srcpart_acidvb PARTITION(ds=2008-04-08,hr=11).value SCRIPT []
PREHOOK: query: select ds, hr, key, value from srcpart_acidvb where cast(key as integer) > 1000 order by ds, hr, cast(key as integer)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidvb where cast(key as integer) > 1000 order by ds, hr, cast(key as integer)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	1001	val1001
2008-04-08	11	1002	val1002
2008-04-08	11	1003	val1003
PREHOOK: query: analyze table srcpart_acidvb PARTITION(ds, hr) compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Output: default@srcpart_acidvb
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: query: analyze table srcpart_acidvb PARTITION(ds, hr) compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Output: default@srcpart_acidvb
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
PREHOOK: query: analyze table srcpart_acidvb PARTITION(ds, hr) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidvb
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: analyze table srcpart_acidvb PARTITION(ds, hr) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidvb
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
PREHOOK: query: explain vectorization only detail
delete from srcpart_acidvb where key in( '1001', '213', '43')
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization only detail
delete from srcpart_acidvb where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ds:string, 3:hr:string, 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterStringColumnInList(col 0, values 1001, 213, 43)
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [4, 2, 3]
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            keyColumnNums: [4]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            partitionColumnNums: [5]
                            valueColumnNums: [2, 3]
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:string, value:string
                    neededVirtualColumns: [ROWID]
                    partitionColumnCount: 2
                    partitionColumns: ds:string, hr:string
                    scratchColumnTypeNames: [bigint]
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: a
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: KEY.reducesinkkey0:struct<writeid:bigint,bucketid:int,rowid:bigint>, VALUE._col0:string, VALUE._col1:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2]
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false

  Stage: Stage-2

  Stage: Stage-0

  Stage: Stage-3

PREHOOK: query: delete from srcpart_acidvb where key in( '1001', '213', '43')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: query: delete from srcpart_acidvb where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
PREHOOK: query: select count(*) from srcpart_acidvb where key in( '1001', '213', '43')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidvb where key in( '1001', '213', '43')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
0
PREHOOK: query: select count(*) from srcpart_acidvb
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidvb
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
1990
PREHOOK: query: explain vectorization only detail
merge into srcpart_acidvb t using (select distinct ds, hr, key, value from srcpart_acidvb) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization only detail
merge into srcpart_acidvb t using (select distinct ds, hr, key, value from srcpart_acidvb) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-5 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-5
  Stage-6 depends on stages: Stage-0
  Stage-2 depends on stages: Stage-5
  Stage-7 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-5
  Stage-8 depends on stages: Stage-3
  Stage-1 depends on stages: Stage-5
  Stage-9 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-4
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Map 9 (SIMPLE_EDGE), Reducer 2 (ONE_TO_ONE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 6 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 7 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ds:string, 3:hr:string, 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3]
                      Group By Vectorization:
                          className: VectorGroupByOperator
                          groupByMode: HASH
                          keyExpressions: col 2:string, col 3:string, col 0:string, col 1:string
                          native: false
                          vectorProcessingMode: HASH
                          projectedOutputColumnNums: []
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            keyColumnNums: [0, 1, 2, 3]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            partitionColumnNums: [0, 1, 2, 3]
                            valueColumnNums: []
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:string, value:string
                    partitionColumnCount: 2
                    partitionColumns: ds:string, hr:string
                    scratchColumnTypeNames: []
        Map 9 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ds:string, 3:hr:string, 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                    Reduce Sink Vectorization:
                        className: VectorReduceSinkObjectHashOperator
                        keyColumnNums: [2, 3, 0, 1]
                        native: true
                        nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                        partitionColumnNums: [2, 3, 0, 1]
                        valueColumnNums: [4]
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:string, value:string
                    neededVirtualColumns: [ROWID]
                    partitionColumnCount: 2
                    partitionColumns: ds:string, hr:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: aaaa
                reduceColumnSortOrder: ++++
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    dataColumns: KEY._col0:string, KEY._col1:string, KEY._col2:string, KEY._col3:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
                Group By Vectorization:
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    keyExpressions: col 0:string, col 1:string, col 2:string, col 3:string
                    native: false
                    vectorProcessingMode: MERGE_PARTIAL
                    projectedOutputColumnNums: []
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      keyColumnNums: [0, 1, 2, 3]
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      partitionColumnNums: [0, 1, 2, 3]
                      valueColumnNums: []
                  Select Vectorization:
                      className: VectorSelectOperator
                      native: true
                      projectedOutputColumnNums: [0]
                    Group By Vectorization:
                        className: VectorGroupByOperator
                        groupByMode: HASH
                        keyExpressions: col 0:string
                        native: false
                        vectorProcessingMode: HASH
                        projectedOutputColumnNums: []
                      App Master Event Vectorization:
                          className: VectorAppMasterEventOperator
                          native: true
                  Select Vectorization:
                      className: VectorSelectOperator
                      native: true
                      projectedOutputColumnNums: [1]
                    Group By Vectorization:
                        className: VectorGroupByOperator
                        groupByMode: HASH
                        keyExpressions: col 1:string
                        native: false
                        vectorProcessingMode: HASH
                        projectedOutputColumnNums: []
                      App Master Event Vectorization:
                          className: VectorAppMasterEventOperator
                          native: true
        Reducer 3 
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: a
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: KEY.reducesinkkey0:struct<writeid:bigint,bucketid:int,rowid:bigint>, VALUE._col0:string, VALUE._col1:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2]
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: a
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 5
                    dataColumns: KEY.reducesinkkey0:struct<writeid:bigint,bucketid:int,rowid:bigint>, VALUE._col0:string, VALUE._col1:string, VALUE._col2:string, VALUE._col3:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3, 4]
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
        Reducer 6 
            Execution mode: llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                notVectorizedReason: Key expression for GROUPBY operator: Vectorizing complex type STRUCT not supported
                vectorized: false
            Reduce Operator Tree:
        Reducer 7 
            Execution mode: llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                notVectorizedReason: Aggregation Function expression for GROUPBY operator: UDF compute_stats not supported
                vectorized: false
            Reduce Operator Tree:
        Reducer 8 
            Execution mode: llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                notVectorizedReason: Aggregation Function expression for GROUPBY operator: UDF compute_stats not supported
                vectorized: false
            Reduce Operator Tree:

  Stage: Stage-5

  Stage: Stage-0

  Stage: Stage-6

  Stage: Stage-2

  Stage: Stage-7

  Stage: Stage-3

  Stage: Stage-8

  Stage: Stage-1

  Stage: Stage-9

PREHOOK: query: merge into srcpart_acidvb t using (select distinct ds, hr, key, value from srcpart_acidvb) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
PREHOOK: Output: default@merge_tmp_table
PREHOOK: Output: default@srcpart_acidvb
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: query: merge into srcpart_acidvb t using (select distinct ds, hr, key, value from srcpart_acidvb) s
on s.ds=t.ds and s.hr=t.hr and s.key=t.key and s.value=t.value
when matched and s.ds='2008-04-08' and s.hr=='11' and s.key='44' then update set value=concat(s.value,'updated by merge')
when matched and s.ds='2008-04-08' and s.hr=='12' then delete
when not matched then insert values('this','should','not','be there')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_acidvb@ds=2008-04-09/hr=12
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(srcpart_acidvb)t.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), (srcpart_acidvb)t.FieldSchema(name:ds, type:string, comment:null), (srcpart_acidvb)t.FieldSchema(name:hr, type:string, comment:null), ]
PREHOOK: query: select count(*) from srcpart_acidvb where ds='2008-04-08' and hr=='12'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidvb where ds='2008-04-08' and hr=='12'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
#### A masked pattern was here ####
0
PREHOOK: query: select ds, hr, key, value from srcpart_acidvb where value like '%updated by merge'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select ds, hr, key, value from srcpart_acidvb where value like '%updated by merge'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart_acidvb@ds=2008-04-09/hr=12
#### A masked pattern was here ####
2008-04-08	11	44	val_44updated by merge
PREHOOK: query: select count(*) from srcpart_acidvb where ds = 'this' and hr = 'should' and key = 'not' and value = 'be there'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_acidvb
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from srcpart_acidvb where ds = 'this' and hr = 'should' and key = 'not' and value = 'be there'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_acidvb
#### A masked pattern was here ####
0
PREHOOK: query: drop table if exists srcpart_acidvb
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcpart_acidvb
PREHOOK: Output: default@srcpart_acidvb
POSTHOOK: query: drop table if exists srcpart_acidvb
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcpart_acidvb
POSTHOOK: Output: default@srcpart_acidvb
