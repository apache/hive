PREHOOK: query: create table smalltable_n0(key string, value string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smalltable_n0
POSTHOOK: query: create table smalltable_n0(key string, value string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smalltable_n0
PREHOOK: query: load data local inpath '../../data/files/T1.txt' into table smalltable_n0
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smalltable_n0
POSTHOOK: query: load data local inpath '../../data/files/T1.txt' into table smalltable_n0
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smalltable_n0
PREHOOK: query: analyze table smalltable_n0 compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@smalltable_n0
PREHOOK: Output: default@smalltable_n0
POSTHOOK: query: analyze table smalltable_n0 compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smalltable_n0
POSTHOOK: Output: default@smalltable_n0
PREHOOK: query: explain select src1.key, src2.key, smalltable_n0.key from src src1 JOIN src src2 ON (src1.key = src2.key) JOIN smalltable_n0 ON (src1.key + src2.key = smalltable_n0.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@smalltable_n0
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: explain select src1.key, src2.key, smalltable_n0.key from src src1 JOIN src src2 ON (src1.key = src2.key) JOIN smalltable_n0 ON (src1.key + src2.key = smalltable_n0.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smalltable_n0
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE), Map 4 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src1
                  filterExpr: (key is not null and UDFToDouble(key) is not null) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key is not null and UDFToDouble(key) is not null) (type: boolean)
                    Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), UDFToDouble(key) (type: double)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: double)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: src2
                  filterExpr: (key is not null and UDFToDouble(key) is not null) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key is not null and UDFToDouble(key) is not null) (type: boolean)
                    Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), UDFToDouble(key) (type: double)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: double)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: smalltable_n0
                  filterExpr: UDFToDouble(key) is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: UDFToDouble(key) is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), UDFToDouble(key) (type: double)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: double)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: double)
                        Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 791 Data size: 150290 Basic stats: COMPLETE Column stats: COMPLETE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 (_col1 + _col3) (type: double)
                    1 _col1 (type: double)
                  outputColumnNames: _col0, _col2, _col4
                  input vertices:
                    1 Map 4
                  Statistics: Num rows: 870 Data size: 165319 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: string), _col2 (type: string), _col4 (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 870 Data size: 165319 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 870 Data size: 165319 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select src1.key, src2.key, smalltable_n0.key from src src1 JOIN src src2 ON (src1.key = src2.key) JOIN smalltable_n0 ON (src1.key + src2.key = smalltable_n0.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@smalltable_n0
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select src1.key, src2.key, smalltable_n0.key from src src1 JOIN src src2 ON (src1.key = src2.key) JOIN smalltable_n0 ON (src1.key + src2.key = smalltable_n0.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smalltable_n0
POSTHOOK: Input: default@src
#### A masked pattern was here ####
4	4	8
4	4	8
PREHOOK: query: create table smalltable2_n0(key string, value string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smalltable2_n0
POSTHOOK: query: create table smalltable2_n0(key string, value string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smalltable2_n0
PREHOOK: query: load data local inpath '../../data/files/T1.txt' into table smalltable2_n0
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smalltable2_n0
POSTHOOK: query: load data local inpath '../../data/files/T1.txt' into table smalltable2_n0
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smalltable2_n0
PREHOOK: query: analyze table smalltable_n0 compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@smalltable_n0
PREHOOK: Output: default@smalltable_n0
POSTHOOK: query: analyze table smalltable_n0 compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smalltable_n0
POSTHOOK: Output: default@smalltable_n0
PREHOOK: query: explain select src1.key, src2.key, smalltable_n0.key from src src1 JOIN src src2 ON (src1.key = src2.key) JOIN smalltable_n0 ON (src1.key + src2.key = smalltable_n0.key) JOIN smalltable2_n0 ON (src1.key + src2.key = smalltable2_n0.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@smalltable2_n0
PREHOOK: Input: default@smalltable_n0
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: explain select src1.key, src2.key, smalltable_n0.key from src src1 JOIN src src2 ON (src1.key = src2.key) JOIN smalltable_n0 ON (src1.key + src2.key = smalltable_n0.key) JOIN smalltable2_n0 ON (src1.key + src2.key = smalltable2_n0.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smalltable2_n0
POSTHOOK: Input: default@smalltable_n0
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src1
                  filterExpr: (key is not null and UDFToDouble(key) is not null) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key is not null and UDFToDouble(key) is not null) (type: boolean)
                    Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), UDFToDouble(key) (type: double)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: double)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: src2
                  filterExpr: (key is not null and UDFToDouble(key) is not null) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key is not null and UDFToDouble(key) is not null) (type: boolean)
                    Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), UDFToDouble(key) (type: double)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: double)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: smalltable2_n0
                  filterExpr: UDFToDouble(key) is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: UDFToDouble(key) is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: UDFToDouble(key) (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: double)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: double)
                        Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: smalltable_n0
                  filterExpr: UDFToDouble(key) is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: UDFToDouble(key) is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), UDFToDouble(key) (type: double)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: double)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: double)
                        Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 791 Data size: 150290 Basic stats: COMPLETE Column stats: COMPLETE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 (_col1 + _col3) (type: double)
                    1 _col0 (type: double)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  input vertices:
                    1 Map 4
                  Statistics: Num rows: 870 Data size: 165319 Basic stats: COMPLETE Column stats: NONE
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                    keys:
                      0 (_col1 + _col3) (type: double)
                      1 _col1 (type: double)
                    outputColumnNames: _col0, _col2, _col5
                    input vertices:
                      1 Map 5
                    Statistics: Num rows: 957 Data size: 181850 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col0 (type: string), _col2 (type: string), _col5 (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 957 Data size: 181850 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 957 Data size: 181850 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select src1.key, src2.key, smalltable_n0.key from src src1 JOIN src src2 ON (src1.key = src2.key) JOIN smalltable_n0 ON (src1.key + src2.key = smalltable_n0.key) JOIN smalltable2_n0 ON (src1.key + src2.key = smalltable2_n0.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@smalltable2_n0
PREHOOK: Input: default@smalltable_n0
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select src1.key, src2.key, smalltable_n0.key from src src1 JOIN src src2 ON (src1.key = src2.key) JOIN smalltable_n0 ON (src1.key + src2.key = smalltable_n0.key) JOIN smalltable2_n0 ON (src1.key + src2.key = smalltable2_n0.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smalltable2_n0
POSTHOOK: Input: default@smalltable_n0
POSTHOOK: Input: default@src
#### A masked pattern was here ####
4	4	8
4	4	8
4	4	8
4	4	8
