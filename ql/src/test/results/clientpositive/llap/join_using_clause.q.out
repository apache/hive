PREHOOK: query: create table test (
 a int
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test
POSTHOOK: query: create table test (
 a int
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test
PREHOOK: query: insert into test values (1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test
POSTHOOK: query: insert into test values (1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test
POSTHOOK: Lineage: test.a SCRIPT []
PREHOOK: query: create table test1 (
 a int,
 b int
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test1
POSTHOOK: query: create table test1 (
 a int,
 b int
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test1
PREHOOK: query: insert into test1 values (1, 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test1
POSTHOOK: query: insert into test1 values (1, 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test1
POSTHOOK: Lineage: test1.a SCRIPT []
POSTHOOK: Lineage: test1.b SCRIPT []
PREHOOK: query: create table test2 (
 a int,
 b int,
 c int
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test2
POSTHOOK: query: create table test2 (
 a int,
 b int,
 c int
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test2
PREHOOK: query: insert into test2 values (1, 2, 3)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test2
POSTHOOK: query: insert into test2 values (1, 2, 3)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test2
POSTHOOK: Lineage: test2.a SCRIPT []
POSTHOOK: Lineage: test2.b SCRIPT []
POSTHOOK: Lineage: test2.c SCRIPT []
PREHOOK: query: select * from test t1
join test t2 using(a)
join test t3 using(a)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: select * from test t1
join test t2 using(a)
join test t3 using(a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
1
PREHOOK: query: explain cbo select * from test t1
join test t2 using(a)
join test t3 using(a)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select * from test t1
join test t2 using(a)
join test t3 using(a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
CBO PLAN:
HiveProject(a=[$1])
  HiveJoin(condition=[=($1, $2)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[=($0, $1)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(a=[$0])
        HiveFilter(condition=[IS NOT NULL($0)])
          HiveTableScan(table=[[default, test]], table:alias=[t1])
      HiveProject(a=[$0])
        HiveFilter(condition=[IS NOT NULL($0)])
          HiveTableScan(table=[[default, test]], table:alias=[t2])
    HiveProject(a=[$0])
      HiveFilter(condition=[IS NOT NULL($0)])
        HiveTableScan(table=[[default, test]], table:alias=[t3])

PREHOOK: query: select * from test1 t1
join test1 t2 using(a)
join test1 t3 using(b)
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
#### A masked pattern was here ####
POSTHOOK: query: select * from test1 t1
join test1 t2 using(a)
join test1 t3 using(b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
#### A masked pattern was here ####
2	1	1	1
PREHOOK: query: explain cbo select * from test1 t1
join test1 t2 using(a)
join test1 t3 using(b)
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select * from test1 t1
join test1 t2 using(a)
join test1 t3 using(b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
#### A masked pattern was here ####
CBO PLAN:
HiveProject(b=[$1], a=[$2], a1=[$0], a2=[$3])
  HiveJoin(condition=[=($1, $4)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[=($2, $0)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(a=[$0], b=[$1])
        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
          HiveTableScan(table=[[default, test1]], table:alias=[t2])
      HiveProject(a=[$0])
        HiveFilter(condition=[IS NOT NULL($0)])
          HiveTableScan(table=[[default, test1]], table:alias=[t1])
    HiveProject(a=[$0], b=[$1])
      HiveFilter(condition=[IS NOT NULL($1)])
        HiveTableScan(table=[[default, test1]], table:alias=[t3])

PREHOOK: query: select * from test1 t1
join test t2 using(a)
join test2 t3 using(b)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: select * from test1 t1
join test t2 using(a)
join test2 t3 using(b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
2	1	1	1	3
PREHOOK: query: explain cbo select * from test1 t1
join test t2 using(a)
join test2 t3 using(b)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select * from test1 t1
join test t2 using(a)
join test2 t3 using(b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
CBO PLAN:
HiveProject(b=[$1], a=[$0], a1=[$2], a2=[$3], c=[$5])
  HiveJoin(condition=[=($1, $4)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[=($0, $2)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(a=[$0], b=[$1])
        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
          HiveTableScan(table=[[default, test1]], table:alias=[t1])
      HiveProject(a=[$0])
        HiveFilter(condition=[IS NOT NULL($0)])
          HiveTableScan(table=[[default, test]], table:alias=[t2])
    HiveProject(a=[$0], b=[$1], c=[$2])
      HiveFilter(condition=[IS NOT NULL($1)])
        HiveTableScan(table=[[default, test2]], table:alias=[t3])

PREHOOK: query: select * from test t1
join test1 t2 using(a)
join test2 t3 using(b)
join test2 t4 using(c)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: select * from test t1
join test1 t2 using(a)
join test2 t3 using(b)
join test2 t4 using(c)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
3	1	1	2	1	2	1	2
PREHOOK: query: explain cbo select * from test t1
join test1 t2 using(a)
join test2 t3 using(b)
join test2 t4 using(c)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select * from test t1
join test1 t2 using(a)
join test2 t3 using(b)
join test2 t4 using(c)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
CBO PLAN:
HiveProject(c=[$2], a=[$8], a1=[$6], b=[$7], a2=[$0], b1=[$1], a3=[$3], b2=[$4])
  HiveJoin(condition=[=($7, $1)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[=($2, $5)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(a=[$0], b=[$1], c=[$2])
        HiveFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($2))])
          HiveTableScan(table=[[default, test2]], table:alias=[t3])
      HiveProject(a=[$0], b=[$1], c=[$2])
        HiveFilter(condition=[IS NOT NULL($2)])
          HiveTableScan(table=[[default, test2]], table:alias=[t4])
    HiveProject(a=[$0], b=[$1], a0=[$2])
      HiveJoin(condition=[=($2, $0)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject(a=[$0], b=[$1])
          HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
            HiveTableScan(table=[[default, test1]], table:alias=[t2])
        HiveProject(a=[$0])
          HiveFilter(condition=[IS NOT NULL($0)])
            HiveTableScan(table=[[default, test]], table:alias=[t1])

PREHOOK: query: select * from test1 t1
join test2 t2 using(a, b)
join test2 t3 using(c, b)
join test t4 using(a)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: select * from test1 t1
join test2 t2 using(a, b)
join test2 t3 using(c, b)
join test t4 using(a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
1	2	2	3	2	3
PREHOOK: query: explain cbo select * from test1 t1
join test2 t2 using(a, b)
join test2 t3 using(c, b)
join test t4 using(a)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select * from test1 t1
join test2 t2 using(a, b)
join test2 t3 using(c, b)
join test t4 using(a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
CBO PLAN:
HiveProject(a=[$5], b=[$4], b1=[$1], c=[$2], b2=[$6], c1=[$7])
  HiveJoin(condition=[AND(=($2, $7), =($1, $6))], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[AND(=($3, $0), =($4, $1))], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(a=[$0], b=[$1], c=[$2])
        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2))])
          HiveTableScan(table=[[default, test2]], table:alias=[t2])
      HiveProject(a=[$0], b=[$1])
        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
          HiveTableScan(table=[[default, test1]], table:alias=[t1])
    HiveProject(a=[$0], b=[$1], c=[$2], a0=[$3])
      HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject(a=[$0], b=[$1], c=[$2])
          HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($1), IS NOT NULL($0))])
            HiveTableScan(table=[[default, test2]], table:alias=[t3])
        HiveProject(a=[$0])
          HiveFilter(condition=[IS NOT NULL($0)])
            HiveTableScan(table=[[default, test]], table:alias=[t4])

PREHOOK: query: select * from test1
join test using(a)
join test2 using(b)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: select * from test1
join test using(a)
join test2 using(b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
2	1	1	1	3
PREHOOK: query: explain cbo select * from test1
join test using(a)
join test2 using(b)
PREHOOK: type: QUERY
PREHOOK: Input: default@test
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select * from test1
join test using(a)
join test2 using(b)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
CBO PLAN:
HiveProject(b=[$1], a=[$0], a1=[$2], a2=[$3], c=[$5])
  HiveJoin(condition=[=($1, $4)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[=($0, $2)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(a=[$0], b=[$1])
        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
          HiveTableScan(table=[[default, test1]], table:alias=[test1])
      HiveProject(a=[$0])
        HiveFilter(condition=[IS NOT NULL($0)])
          HiveTableScan(table=[[default, test]], table:alias=[test])
    HiveProject(a=[$0], b=[$1], c=[$2])
      HiveFilter(condition=[IS NOT NULL($1)])
        HiveTableScan(table=[[default, test2]], table:alias=[test2])

