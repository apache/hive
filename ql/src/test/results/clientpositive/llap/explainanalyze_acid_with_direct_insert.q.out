PREHOOK: query: drop table if exists analyze_acid_table
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists analyze_acid_table
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table analyze_acid_table (id int) stored as orc tblproperties('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: create table analyze_acid_table (id int) stored as orc tblproperties('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: insert into analyze_acid_table values (1),(2),(3),(4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: insert into analyze_acid_table values (1),(2),(3),(4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: explain analyze insert into analyze_acid_table values (1),(2),(3),(4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: explain analyze insert into analyze_acid_table values (1),(2),(3),(4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@analyze_acid_table
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: _dummy_table
                  Row Limit Per Split: 1
                  Statistics: Num rows: 1/1 Data size: 10 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: array(const struct(1),const struct(2),const struct(3),const struct(4)) (type: array<struct<col1:int>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1/1 Data size: 72 Basic stats: COMPLETE Column stats: COMPLETE
                    UDTF Operator
                      Statistics: Num rows: 1/4 Data size: 72 Basic stats: COMPLETE Column stats: COMPLETE
                      function name: inline
                      Select Operator
                        expressions: col1 (type: int)
                        outputColumnNames: _col0
                        Statistics: Num rows: 1/4 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 1/4 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          table:
                              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                              name: default.analyze_acid_table
                          Write Type: INSERT
                        Select Operator
                          expressions: _col0 (type: int)
                          outputColumnNames: id
                          Statistics: Num rows: 1/4 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          Group By Operator
                            aggregations: min(id), max(id), count(1), count(id), compute_bit_vector_hll(id)
                            minReductionHashAggr: 0.4
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4
                            Statistics: Num rows: 1/1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              null sort order: 
                              sort order: 
                              Statistics: Num rows: 1/1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1/1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 1/1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1/1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_acid_table
          Write Type: INSERT

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: id
          Column Types: int
          Table: default.analyze_acid_table

PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: insert into analyze_acid_table values (1),(2),(3),(4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: insert into analyze_acid_table values (1),(2),(3),(4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@analyze_acid_table
POSTHOOK: Lineage: analyze_acid_table.id SCRIPT []
PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
2
3
4
PREHOOK: query: update analyze_acid_table set id=11 where id=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: update analyze_acid_table set id=11 where id=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: explain analyze update analyze_acid_table set id=11 where id=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: explain analyze update analyze_acid_table set id=11 where id=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: analyze_acid_table
                  filterExpr: (id = 1) (type: boolean)
                  Statistics: Num rows: 4/4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (id = 1) (type: boolean)
                    Statistics: Num rows: 1/1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                        Statistics: Num rows: 1/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), 11 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.analyze_acid_table
                  Write Type: UPDATE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_acid_table
          Write Type: UPDATE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
2
3
4
PREHOOK: query: update analyze_acid_table set id=22 where id=2
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: update analyze_acid_table set id=22 where id=2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
22
3
4
PREHOOK: query: delete from analyze_acid_table where id=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: delete from analyze_acid_table where id=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: explain analyze delete from analyze_acid_table where id=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: explain analyze delete from analyze_acid_table where id=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: analyze_acid_table
                  filterExpr: (id = 3) (type: boolean)
                  Statistics: Num rows: 4/3 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (id = 3) (type: boolean)
                    Statistics: Num rows: 1/1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1/1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                        Statistics: Num rows: 1/1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                outputColumnNames: _col0
                Statistics: Num rows: 1/1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1/1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.analyze_acid_table
                  Write Type: DELETE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_acid_table
          Write Type: DELETE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
22
3
4
PREHOOK: query: delete from analyze_acid_table where id=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: delete from analyze_acid_table where id=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
22
3
4
PREHOOK: query: drop table if exists analyze_acid_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: drop table if exists analyze_acid_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: create table tmp_table (a int, b int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmp_table
POSTHOOK: query: create table tmp_table (a int, b int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmp_table
PREHOOK: query: insert into tmp_table values (1, 1), (2, 1), (3, 2), (4, 3), (5, 3), (6, 3)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tmp_table
POSTHOOK: query: insert into tmp_table values (1, 1), (2, 1), (3, 2), (4, 3), (5, 3), (6, 3)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tmp_table
POSTHOOK: Lineage: tmp_table.a SCRIPT []
POSTHOOK: Lineage: tmp_table.b SCRIPT []
PREHOOK: query: drop table if exists analyze_part_table
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists analyze_part_table
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table analyze_part_table (a int) partitioned by (b int) stored as orc tblproperties('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: create table analyze_part_table (a int) partitioned by (b int) stored as orc tblproperties('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@analyze_part_table
PREHOOK: query: insert into analyze_part_table select * from tmp_table
PREHOOK: type: QUERY
PREHOOK: Input: default@tmp_table
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: insert into analyze_part_table select * from tmp_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmp_table
POSTHOOK: Output: default@analyze_part_table
PREHOOK: query: explain analyze insert into analyze_part_table select * from tmp_table
PREHOOK: type: QUERY
PREHOOK: Input: default@tmp_table
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: explain analyze insert into analyze_part_table select * from tmp_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmp_table
POSTHOOK: Output: default@analyze_part_table
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tmp_table
                  Statistics: Num rows: 6/6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: a (type: int), b (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6/6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 6/6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                          output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                          serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                          name: default.analyze_part_table
                      Write Type: INSERT
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: int)
                      outputColumnNames: a, b
                      Statistics: Num rows: 6/6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(a), max(a), count(1), count(a), compute_bit_vector_hll(a)
                        keys: b (type: int)
                        minReductionHashAggr: 0.5
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        Statistics: Num rows: 3/3 Data size: 516 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 3/3 Data size: 516 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 3/3 Data size: 516 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col1) (type: bigint), UDFToLong(_col2) (type: bigint), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), _col0 (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                  Statistics: Num rows: 3/3 Data size: 804 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3/3 Data size: 804 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            b 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_part_table
          Write Type: INSERT

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: a
          Column Types: int
          Table: default.analyze_part_table

PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: show partitions analyze_part_table
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@analyze_part_table
POSTHOOK: query: show partitions analyze_part_table
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@analyze_part_table
PREHOOK: query: insert into analyze_part_table select * from tmp_table
PREHOOK: type: QUERY
PREHOOK: Input: default@tmp_table
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: insert into analyze_part_table select * from tmp_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmp_table
POSTHOOK: Output: default@analyze_part_table
POSTHOOK: Output: default@analyze_part_table@b=1
POSTHOOK: Output: default@analyze_part_table@b=2
POSTHOOK: Output: default@analyze_part_table@b=3
POSTHOOK: Lineage: analyze_part_table PARTITION(b=1).a SIMPLE [(tmp_table)tmp_table.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: analyze_part_table PARTITION(b=2).a SIMPLE [(tmp_table)tmp_table.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: analyze_part_table PARTITION(b=3).a SIMPLE [(tmp_table)tmp_table.FieldSchema(name:a, type:int, comment:null), ]
PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	1
2	1
3	2
4	3
5	3
6	3
PREHOOK: query: show partitions analyze_part_table
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@analyze_part_table
POSTHOOK: query: show partitions analyze_part_table
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@analyze_part_table
b=1
b=2
b=3
PREHOOK: query: update analyze_part_table set a=11 where b=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: default@analyze_part_table@b=3
POSTHOOK: query: update analyze_part_table set a=11 where b=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: default@analyze_part_table@b=3
PREHOOK: query: explain analyze update analyze_part_table set a=11 where b=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: default@analyze_part_table@b=3
POSTHOOK: query: explain analyze update analyze_part_table set a=11 where b=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: default@analyze_part_table@b=3
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: analyze_part_table
                  filterExpr: (b = 3) (type: boolean)
                  Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                      Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), 11 (type: int), 3 (type: int)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.analyze_part_table
                  Write Type: UPDATE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            b 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_part_table
          Write Type: UPDATE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	1
2	1
3	2
4	3
5	3
6	3
PREHOOK: query: delete from analyze_part_table where b=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Output: default@analyze_part_table@b=1
POSTHOOK: query: delete from analyze_part_table where b=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Output: default@analyze_part_table@b=1
PREHOOK: query: explain analyze delete from analyze_part_table where b=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Output: default@analyze_part_table@b=1
POSTHOOK: query: explain analyze delete from analyze_part_table where b=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Output: default@analyze_part_table@b=1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: analyze_part_table
                  filterExpr: (b = 1) (type: boolean)
                  Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                      Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), 1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.analyze_part_table
                  Write Type: DELETE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            b 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_part_table
          Write Type: DELETE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	1
2	1
3	2
4	3
5	3
6	3
PREHOOK: query: show partitions analyze_part_table
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@analyze_part_table
POSTHOOK: query: show partitions analyze_part_table
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@analyze_part_table
b=1
b=2
b=3
PREHOOK: query: update analyze_part_table set a=22 where b=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: default@analyze_part_table@b=3
POSTHOOK: query: update analyze_part_table set a=22 where b=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: default@analyze_part_table@b=3
PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	1
2	1
22	3
22	3
22	3
3	2
PREHOOK: query: delete from analyze_part_table where b=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Output: default@analyze_part_table@b=1
POSTHOOK: query: delete from analyze_part_table where b=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Output: default@analyze_part_table@b=1
PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
22	3
22	3
22	3
3	2
PREHOOK: query: show partitions analyze_part_table
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@analyze_part_table
POSTHOOK: query: show partitions analyze_part_table
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@analyze_part_table
b=1
b=2
b=3
PREHOOK: query: drop table if exists analyze_part_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@analyze_part_table
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: drop table if exists analyze_part_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Output: default@analyze_part_table
PREHOOK: query: drop table if exists analyze_acid_table
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists analyze_acid_table
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table analyze_acid_table (id int) stored as orc tblproperties('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: create table analyze_acid_table (id int) stored as orc tblproperties('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: insert into analyze_acid_table values (1),(2),(3),(4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: insert into analyze_acid_table values (1),(2),(3),(4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: explain analyze insert into analyze_acid_table values (1),(2),(3),(4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: explain analyze insert into analyze_acid_table values (1),(2),(3),(4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@analyze_acid_table
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: _dummy_table
                  Row Limit Per Split: 1
                  Statistics: Num rows: 1/1 Data size: 10 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: array(const struct(1),const struct(2),const struct(3),const struct(4)) (type: array<struct<col1:int>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1/1 Data size: 72 Basic stats: COMPLETE Column stats: COMPLETE
                    UDTF Operator
                      Statistics: Num rows: 1/4 Data size: 72 Basic stats: COMPLETE Column stats: COMPLETE
                      function name: inline
                      Select Operator
                        expressions: col1 (type: int)
                        outputColumnNames: _col0
                        Statistics: Num rows: 1/4 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 1/4 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          table:
                              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                              name: default.analyze_acid_table
                          Write Type: INSERT
                        Select Operator
                          expressions: _col0 (type: int)
                          outputColumnNames: id
                          Statistics: Num rows: 1/4 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          Group By Operator
                            aggregations: min(id), max(id), count(1), count(id), compute_bit_vector_hll(id)
                            minReductionHashAggr: 0.4
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4
                            Statistics: Num rows: 1/1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              null sort order: 
                              sort order: 
                              Statistics: Num rows: 1/1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1/1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 1/1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1/1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_acid_table
          Write Type: INSERT

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: id
          Column Types: int
          Table: default.analyze_acid_table

PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: insert into analyze_acid_table values (1),(2),(3),(4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: insert into analyze_acid_table values (1),(2),(3),(4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@analyze_acid_table
POSTHOOK: Lineage: analyze_acid_table.id SCRIPT []
PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
2
3
4
PREHOOK: query: update analyze_acid_table set id=11 where id=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: update analyze_acid_table set id=11 where id=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: explain analyze update analyze_acid_table set id=11 where id=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: explain analyze update analyze_acid_table set id=11 where id=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: analyze_acid_table
                  filterExpr: (id = 1) (type: boolean)
                  Statistics: Num rows: 4/4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (id = 1) (type: boolean)
                    Statistics: Num rows: 1/1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                        Statistics: Num rows: 1/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), 11 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.analyze_acid_table
                  Write Type: UPDATE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_acid_table
          Write Type: UPDATE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
2
3
4
PREHOOK: query: update analyze_acid_table set id=22 where id=2
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: update analyze_acid_table set id=22 where id=2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
22
3
4
PREHOOK: query: delete from analyze_acid_table where id=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: delete from analyze_acid_table where id=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: explain analyze delete from analyze_acid_table where id=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: explain analyze delete from analyze_acid_table where id=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: analyze_acid_table
                  filterExpr: (id = 3) (type: boolean)
                  Statistics: Num rows: 4/3 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (id = 3) (type: boolean)
                    Statistics: Num rows: 1/1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1/1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                        Statistics: Num rows: 1/1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                outputColumnNames: _col0
                Statistics: Num rows: 1/1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1/1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.analyze_acid_table
                  Write Type: DELETE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_acid_table
          Write Type: DELETE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
22
3
4
PREHOOK: query: delete from analyze_acid_table where id=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: delete from analyze_acid_table where id=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: select * from analyze_acid_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_acid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
22
3
4
PREHOOK: query: drop table if exists analyze_acid_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@analyze_acid_table
PREHOOK: Output: default@analyze_acid_table
POSTHOOK: query: drop table if exists analyze_acid_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@analyze_acid_table
POSTHOOK: Output: default@analyze_acid_table
PREHOOK: query: drop table if exists analyze_part_table
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists analyze_part_table
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table analyze_part_table (a int) partitioned by (b int) stored as orc tblproperties('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: create table analyze_part_table (a int) partitioned by (b int) stored as orc tblproperties('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@analyze_part_table
PREHOOK: query: insert into analyze_part_table select * from tmp_table
PREHOOK: type: QUERY
PREHOOK: Input: default@tmp_table
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: insert into analyze_part_table select * from tmp_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmp_table
POSTHOOK: Output: default@analyze_part_table
PREHOOK: query: explain analyze insert into analyze_part_table select * from tmp_table
PREHOOK: type: QUERY
PREHOOK: Input: default@tmp_table
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: explain analyze insert into analyze_part_table select * from tmp_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmp_table
POSTHOOK: Output: default@analyze_part_table
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tmp_table
                  Statistics: Num rows: 6/6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: a (type: int), b (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6/6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 6/6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                          output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                          serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                          name: default.analyze_part_table
                      Write Type: INSERT
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: int)
                      outputColumnNames: a, b
                      Statistics: Num rows: 6/6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(a), max(a), count(1), count(a), compute_bit_vector_hll(a)
                        keys: b (type: int)
                        minReductionHashAggr: 0.5
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        Statistics: Num rows: 3/3 Data size: 516 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 3/3 Data size: 516 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 3/3 Data size: 516 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col1) (type: bigint), UDFToLong(_col2) (type: bigint), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), _col0 (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                  Statistics: Num rows: 3/3 Data size: 804 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3/3 Data size: 804 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            b 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_part_table
          Write Type: INSERT

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: a
          Column Types: int
          Table: default.analyze_part_table

PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: show partitions analyze_part_table
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@analyze_part_table
POSTHOOK: query: show partitions analyze_part_table
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@analyze_part_table
PREHOOK: query: insert into analyze_part_table select * from tmp_table
PREHOOK: type: QUERY
PREHOOK: Input: default@tmp_table
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: insert into analyze_part_table select * from tmp_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmp_table
POSTHOOK: Output: default@analyze_part_table
POSTHOOK: Output: default@analyze_part_table@b=1
POSTHOOK: Output: default@analyze_part_table@b=2
POSTHOOK: Output: default@analyze_part_table@b=3
POSTHOOK: Lineage: analyze_part_table PARTITION(b=1).a SIMPLE [(tmp_table)tmp_table.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: analyze_part_table PARTITION(b=2).a SIMPLE [(tmp_table)tmp_table.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: analyze_part_table PARTITION(b=3).a SIMPLE [(tmp_table)tmp_table.FieldSchema(name:a, type:int, comment:null), ]
PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	1
2	1
3	2
4	3
5	3
6	3
PREHOOK: query: show partitions analyze_part_table
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@analyze_part_table
POSTHOOK: query: show partitions analyze_part_table
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@analyze_part_table
b=1
b=2
b=3
PREHOOK: query: update analyze_part_table set a=11 where b=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: default@analyze_part_table@b=3
POSTHOOK: query: update analyze_part_table set a=11 where b=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: default@analyze_part_table@b=3
PREHOOK: query: explain analyze update analyze_part_table set a=11 where b=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: default@analyze_part_table@b=3
POSTHOOK: query: explain analyze update analyze_part_table set a=11 where b=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: default@analyze_part_table@b=3
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: analyze_part_table
                  filterExpr: (b = 3) (type: boolean)
                  Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                      Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), 11 (type: int), 3 (type: int)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 3/3 Data size: 6374 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.analyze_part_table
                  Write Type: UPDATE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            b 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_part_table
          Write Type: UPDATE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	1
2	1
3	2
4	3
5	3
6	3
PREHOOK: query: delete from analyze_part_table where b=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Output: default@analyze_part_table@b=1
POSTHOOK: query: delete from analyze_part_table where b=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Output: default@analyze_part_table@b=1
PREHOOK: query: explain analyze delete from analyze_part_table where b=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Output: default@analyze_part_table@b=1
POSTHOOK: query: explain analyze delete from analyze_part_table where b=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Output: default@analyze_part_table@b=1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: analyze_part_table
                  filterExpr: (b = 1) (type: boolean)
                  Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                      Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), 1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2/2 Data size: 6316 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.analyze_part_table
                  Write Type: DELETE

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            b 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.analyze_part_table
          Write Type: DELETE

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	1
2	1
3	2
4	3
5	3
6	3
PREHOOK: query: show partitions analyze_part_table
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@analyze_part_table
POSTHOOK: query: show partitions analyze_part_table
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@analyze_part_table
b=1
b=2
b=3
PREHOOK: query: update analyze_part_table set a=22 where b=3
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: default@analyze_part_table@b=3
POSTHOOK: query: update analyze_part_table set a=22 where b=3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: default@analyze_part_table@b=3
PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	1
2	1
22	3
22	3
22	3
3	2
PREHOOK: query: delete from analyze_part_table where b=1
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Output: default@analyze_part_table@b=1
POSTHOOK: query: delete from analyze_part_table where b=1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Output: default@analyze_part_table@b=1
PREHOOK: query: select * from analyze_part_table
PREHOOK: type: QUERY
PREHOOK: Input: default@analyze_part_table
PREHOOK: Input: default@analyze_part_table@b=1
PREHOOK: Input: default@analyze_part_table@b=2
PREHOOK: Input: default@analyze_part_table@b=3
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from analyze_part_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Input: default@analyze_part_table@b=1
POSTHOOK: Input: default@analyze_part_table@b=2
POSTHOOK: Input: default@analyze_part_table@b=3
POSTHOOK: Output: hdfs://### HDFS PATH ###
22	3
22	3
22	3
3	2
PREHOOK: query: show partitions analyze_part_table
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@analyze_part_table
POSTHOOK: query: show partitions analyze_part_table
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@analyze_part_table
b=1
b=2
b=3
PREHOOK: query: drop table if exists analyze_part_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@analyze_part_table
PREHOOK: Output: default@analyze_part_table
POSTHOOK: query: drop table if exists analyze_part_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@analyze_part_table
POSTHOOK: Output: default@analyze_part_table
PREHOOK: query: drop table tmp_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tmp_table
PREHOOK: Output: default@tmp_table
POSTHOOK: query: drop table tmp_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tmp_table
POSTHOOK: Output: default@tmp_table
