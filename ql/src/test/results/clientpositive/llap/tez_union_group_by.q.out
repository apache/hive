PREHOOK: query: CREATE TABLE x_n3
(
u bigint,
t string,
st string
)
PARTITIONED BY (`date` string)
STORED AS ORC 
TBLPROPERTIES ("orc.compress"="ZLIB")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@x_n3
POSTHOOK: query: CREATE TABLE x_n3
(
u bigint,
t string,
st string
)
PARTITIONED BY (`date` string)
STORED AS ORC 
TBLPROPERTIES ("orc.compress"="ZLIB")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@x_n3
PREHOOK: query: CREATE TABLE y_n1
(
u bigint
)
PARTITIONED BY (`date` string)
STORED AS ORC 
TBLPROPERTIES ("orc.compress"="ZLIB")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@y_n1
POSTHOOK: query: CREATE TABLE y_n1
(
u bigint
)
PARTITIONED BY (`date` string)
STORED AS ORC 
TBLPROPERTIES ("orc.compress"="ZLIB")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@y_n1
PREHOOK: query: CREATE TABLE z_n0
(
u bigint
)
PARTITIONED BY (`date` string)
STORED AS ORC 
TBLPROPERTIES ("orc.compress"="ZLIB")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@z_n0
POSTHOOK: query: CREATE TABLE z_n0
(
u bigint
)
PARTITIONED BY (`date` string)
STORED AS ORC 
TBLPROPERTIES ("orc.compress"="ZLIB")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@z_n0
PREHOOK: query: CREATE TABLE v_n15
(
t string, 
st string,
id int
)
STORED AS ORC 
TBLPROPERTIES ("orc.compress"="ZLIB")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@v_n15
POSTHOOK: query: CREATE TABLE v_n15
(
t string, 
st string,
id int
)
STORED AS ORC 
TBLPROPERTIES ("orc.compress"="ZLIB")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v_n15
PREHOOK: query: EXPLAIN CBO
SELECT o.u, n.u
FROM 
(
SELECT m.u, Min(`date`) as ft
FROM 
(
SELECT u, `date` FROM x_n3 WHERE `date` < '2014-09-02' 
UNION ALL
SELECT u, `date` FROM y_n1 WHERE `date` < '2014-09-02' 
UNION ALL
SELECT u, `date` FROM z_n0 WHERE `date` < '2014-09-02' 
) m
GROUP BY m.u
) n 
LEFT OUTER JOIN
(
SELECT x_n3.u
FROM x_n3
JOIN v_n15 
ON (x_n3.t = v_n15.t AND x_n3.st <=> v_n15.st)
WHERE x_n3.`date` >= '2014-03-04' AND x_n3.`date` < '2014-09-03'
GROUP BY x_n3.u
) o
ON n.u = o.u 
WHERE n.u <> 0 AND n.ft <= '2014-09-02'
PREHOOK: type: QUERY
PREHOOK: Input: default@v_n15
PREHOOK: Input: default@x_n3
PREHOOK: Input: default@y_n1
PREHOOK: Input: default@z_n0
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN CBO
SELECT o.u, n.u
FROM 
(
SELECT m.u, Min(`date`) as ft
FROM 
(
SELECT u, `date` FROM x_n3 WHERE `date` < '2014-09-02' 
UNION ALL
SELECT u, `date` FROM y_n1 WHERE `date` < '2014-09-02' 
UNION ALL
SELECT u, `date` FROM z_n0 WHERE `date` < '2014-09-02' 
) m
GROUP BY m.u
) n 
LEFT OUTER JOIN
(
SELECT x_n3.u
FROM x_n3
JOIN v_n15 
ON (x_n3.t = v_n15.t AND x_n3.st <=> v_n15.st)
WHERE x_n3.`date` >= '2014-03-04' AND x_n3.`date` < '2014-09-03'
GROUP BY x_n3.u
) o
ON n.u = o.u 
WHERE n.u <> 0 AND n.ft <= '2014-09-02'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@v_n15
POSTHOOK: Input: default@x_n3
POSTHOOK: Input: default@y_n1
POSTHOOK: Input: default@z_n0
#### A masked pattern was here ####
CBO PLAN:
HiveJoin(condition=[=($1, $0)], joinType=[right], algorithm=[none], cost=[not available])
  HiveProject(u=[$0])
    HiveAggregate(group=[{0}])
      HiveJoin(condition=[AND(=($1, $3), IS NOT DISTINCT FROM($2, $4))], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject(u=[$0], t=[$1], st=[$2])
          HiveFilter(condition=[AND(>=($3, _UTF-16LE'2014-03-04'), <($3, _UTF-16LE'2014-09-03'), <>($0, 0), IS NOT NULL($1))])
            HiveTableScan(table=[[default, x_n3]], table:alias=[x_n3])
        HiveProject(t=[$0], st=[$1])
          HiveFilter(condition=[IS NOT NULL($0)])
            HiveTableScan(table=[[default, v_n15]], table:alias=[v_n15])
  HiveProject($f0=[$0])
    HiveFilter(condition=[<=($1, _UTF-16LE'2014-09-02')])
      HiveAggregate(group=[{0}], agg#0=[min($1)])
        HiveProject(u=[$0], date=[$1])
          HiveUnion(all=[true])
            HiveProject(u=[$0], date=[$3])
              HiveFilter(condition=[AND(<($3, _UTF-16LE'2014-09-02'), <>($0, 0))])
                HiveTableScan(table=[[default, x_n3]], table:alias=[x_n3])
            HiveProject(u=[$0], date=[$1])
              HiveFilter(condition=[AND(<($1, _UTF-16LE'2014-09-02'), <>($0, 0))])
                HiveTableScan(table=[[default, y_n1]], table:alias=[y_n1])
            HiveProject(u=[$0], date=[$1])
              HiveFilter(condition=[AND(<($1, _UTF-16LE'2014-09-02'), <>($0, 0))])
                HiveTableScan(table=[[default, z_n0]], table:alias=[z_n0])

PREHOOK: query: EXPLAIN
SELECT o.u, n.u
FROM
(
SELECT m.u, Min(`date`) as ft
FROM
(
SELECT u, `date` FROM x_n3 WHERE `date` < '2014-09-02'
UNION ALL
SELECT u, `date` FROM y_n1 WHERE `date` < '2014-09-02'
UNION ALL
SELECT u, `date` FROM z_n0 WHERE `date` < '2014-09-02'
) m
GROUP BY m.u
) n
LEFT OUTER JOIN
(
SELECT x_n3.u
FROM x_n3
JOIN v_n15
ON (x_n3.t = v_n15.t AND x_n3.st <=> v_n15.st)
WHERE x_n3.`date` >= '2014-03-04' AND x_n3.`date` < '2014-09-03'
GROUP BY x_n3.u
) o
ON n.u = o.u
WHERE n.u <> 0 AND n.ft <= '2014-09-02'
PREHOOK: type: QUERY
PREHOOK: Input: default@v_n15
PREHOOK: Input: default@x_n3
PREHOOK: Input: default@y_n1
PREHOOK: Input: default@z_n0
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT o.u, n.u
FROM
(
SELECT m.u, Min(`date`) as ft
FROM
(
SELECT u, `date` FROM x_n3 WHERE `date` < '2014-09-02'
UNION ALL
SELECT u, `date` FROM y_n1 WHERE `date` < '2014-09-02'
UNION ALL
SELECT u, `date` FROM z_n0 WHERE `date` < '2014-09-02'
) m
GROUP BY m.u
) n
LEFT OUTER JOIN
(
SELECT x_n3.u
FROM x_n3
JOIN v_n15
ON (x_n3.t = v_n15.t AND x_n3.st <=> v_n15.st)
WHERE x_n3.`date` >= '2014-03-04' AND x_n3.`date` < '2014-09-03'
GROUP BY x_n3.u
) o
ON n.u = o.u
WHERE n.u <> 0 AND n.ft <= '2014-09-02'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@v_n15
POSTHOOK: Input: default@x_n3
POSTHOOK: Input: default@y_n1
POSTHOOK: Input: default@z_n0
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 10 <- Union 7 (CONTAINS)
        Map 6 <- Union 7 (CONTAINS)
        Map 9 <- Union 7 (CONTAINS)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
        Reducer 8 <- Union 7 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: x_n3
                  filterExpr: ((date >= '2014-03-04') and (date < '2014-09-03') and (u <> 0L) and t is not null) (type: boolean)
                  Statistics: Num rows: 1 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((date >= '2014-03-04') and (date < '2014-09-03') and (u <> 0L) and t is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: u (type: bigint), t (type: string), st (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: string), _col2 (type: string)
                        null sort order: zz
                        sort order: ++
                        Map-reduce partition columns: _col1 (type: string), _col2 (type: string)
                        Statistics: Num rows: 1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: unknown
        Map 10 
            Map Operator Tree:
                TableScan
                  alias: z_n0
                  filterExpr: ((date < '2014-09-02') and (u <> 0L)) (type: boolean)
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((date < '2014-09-02') and (u <> 0L)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: u (type: bigint), date (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(_col1)
                        keys: _col0 (type: bigint)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: bigint)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: bigint)
                          Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
                          value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: unknown
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: v_n15
                  filterExpr: t is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: t is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: t (type: string), st (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        null sort order: zz
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                        Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: x_n3
                  filterExpr: ((date < '2014-09-02') and (u <> 0L)) (type: boolean)
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((date < '2014-09-02') and (u <> 0L)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: u (type: bigint), date (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(_col1)
                        keys: _col0 (type: bigint)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: bigint)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: bigint)
                          Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
                          value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: unknown
        Map 9 
            Map Operator Tree:
                TableScan
                  alias: y_n1
                  filterExpr: ((date < '2014-09-02') and (u <> 0L)) (type: boolean)
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((date < '2014-09-02') and (u <> 0L)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: u (type: bigint), date (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(_col1)
                        keys: _col0 (type: bigint)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: bigint)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: bigint)
                          Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
                          value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: unknown
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: string), _col2 (type: string)
                  1 _col0 (type: string), _col1 (type: string)
                nullSafes: [false, true]
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  keys: _col0 (type: bigint)
                  minReductionHashAggr: 0.99
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: bigint)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: bigint)
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: bigint)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: bigint)
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
        Reducer 4 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Right Outer Join 0 to 1
                keys:
                  0 _col0 (type: bigint)
                  1 _col0 (type: bigint)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 202 Basic stats: PARTIAL Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 202 Basic stats: PARTIAL Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0)
                keys: KEY._col0 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
                Filter Operator
                  predicate: (_col1 <= '2014-09-02') (type: boolean)
                  Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
                  Select Operator
                    expressions: _col0 (type: bigint)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: bigint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: bigint)
                      Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: COMPLETE
        Union 7 
            Vertex: Union 7

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT o.u, n.u
FROM 
(
SELECT m.u, Min(`date`) as ft
FROM 
(
SELECT u, `date` FROM x_n3 WHERE `date` < '2014-09-02' 
UNION ALL
SELECT u, `date` FROM y_n1 WHERE `date` < '2014-09-02' 
UNION ALL
SELECT u, `date` FROM z_n0 WHERE `date` < '2014-09-02' 
) m
GROUP BY m.u
) n 
LEFT OUTER JOIN
(
SELECT x_n3.u
FROM x_n3
JOIN v_n15 
ON (x_n3.t = v_n15.t AND x_n3.st <=> v_n15.st)
WHERE x_n3.`date` >= '2014-03-04' AND x_n3.`date` < '2014-09-03'
GROUP BY x_n3.u
) o
ON n.u = o.u 
WHERE n.u <> 0 AND n.ft <= '2014-09-02'
PREHOOK: type: QUERY
PREHOOK: Input: default@v_n15
PREHOOK: Input: default@x_n3
PREHOOK: Input: default@y_n1
PREHOOK: Input: default@z_n0
#### A masked pattern was here ####
POSTHOOK: query: SELECT o.u, n.u
FROM 
(
SELECT m.u, Min(`date`) as ft
FROM 
(
SELECT u, `date` FROM x_n3 WHERE `date` < '2014-09-02' 
UNION ALL
SELECT u, `date` FROM y_n1 WHERE `date` < '2014-09-02' 
UNION ALL
SELECT u, `date` FROM z_n0 WHERE `date` < '2014-09-02' 
) m
GROUP BY m.u
) n 
LEFT OUTER JOIN
(
SELECT x_n3.u
FROM x_n3
JOIN v_n15 
ON (x_n3.t = v_n15.t AND x_n3.st <=> v_n15.st)
WHERE x_n3.`date` >= '2014-03-04' AND x_n3.`date` < '2014-09-03'
GROUP BY x_n3.u
) o
ON n.u = o.u 
WHERE n.u <> 0 AND n.ft <= '2014-09-02'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@v_n15
POSTHOOK: Input: default@x_n3
POSTHOOK: Input: default@y_n1
POSTHOOK: Input: default@z_n0
#### A masked pattern was here ####
