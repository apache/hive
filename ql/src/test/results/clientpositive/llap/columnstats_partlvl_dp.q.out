PREHOOK: query: DROP TABLE Employee_Part_n0
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE Employee_Part_n0
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE Employee_Part_n0(employeeID int, employeeName String) partitioned by (employeeSalary double, country string)
row format delimited fields terminated by '|'  stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@Employee_Part_n0
POSTHOOK: query: CREATE TABLE Employee_Part_n0(employeeID int, employeeName String) partitioned by (employeeSalary double, country string)
row format delimited fields terminated by '|'  stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@Employee_Part_n0
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_Part_n0 partition(employeeSalary='2000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_Part_n0 partition(employeeSalary='2000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part_n0 partition(employeeSalary='2000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part_n0 partition(employeeSalary='2000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part_n0 partition(employeeSalary='3000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part_n0 partition(employeeSalary='3000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part_n0 partition(employeeSalary='4000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part_n0 partition(employeeSalary='4000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part_n0 partition(employeeSalary='3500.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part_n0 partition(employeeSalary='3500.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=3500.0/country=UK
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_Part_n0 partition(employeeSalary='3000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_Part_n0 partition(employeeSalary='3000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=UK
PREHOOK: query: explain 
analyze table Employee_Part_n0 partition (employeeSalary='4000.0', country) compute statistics for columns employeeName, employeeID
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_part_n0
PREHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
PREHOOK: Output: default@employee_part_n0
PREHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: explain 
analyze table Employee_Part_n0 partition (employeeSalary='4000.0', country) compute statistics for columns employeeName, employeeID
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_part_n0
POSTHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: employee_part_n0
                  filterExpr: (employeesalary = 4000.0D) (type: boolean)
                  Statistics: Num rows: 1 Data size: 1012 Basic stats: PARTIAL Column stats: PARTIAL
                  Select Operator
                    expressions: employeeid (type: int), employeename (type: string), country (type: string)
                    outputColumnNames: employeeid, employeename, country
                    Statistics: Num rows: 1 Data size: 1012 Basic stats: PARTIAL Column stats: PARTIAL
                    Group By Operator
                      aggregations: max(length(employeename)), avg(COALESCE(length(employeename),0)), count(1), count(employeename), compute_bit_vector_hll(employeename), min(employeeid), max(employeeid), count(employeeid), compute_bit_vector_hll(employeeid)
                      keys: 4000.0D (type: double), country (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                      Statistics: Num rows: 1 Data size: 772 Basic stats: PARTIAL Column stats: PARTIAL
                      Reduce Output Operator
                        key expressions: 4000.0D (type: double), _col1 (type: string)
                        null sort order: zz
                        sort order: ++
                        Map-reduce partition columns: 4000.0D (type: double), _col1 (type: string)
                        Statistics: Num rows: 1 Data size: 772 Basic stats: PARTIAL Column stats: PARTIAL
                        value expressions: _col2 (type: int), _col3 (type: struct<count:bigint,sum:double,input:int>), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: binary), _col7 (type: int), _col8 (type: int), _col9 (type: bigint), _col10 (type: binary)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                keys: 4000.0D (type: double), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                Statistics: Num rows: 1 Data size: 772 Basic stats: PARTIAL Column stats: PARTIAL
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col2,0)) (type: bigint), COALESCE(_col3,0) (type: double), (_col4 - _col5) (type: bigint), COALESCE(ndv_compute_bit_vector(_col6),0) (type: bigint), _col6 (type: binary), 'LONG' (type: string), UDFToLong(_col7) (type: bigint), UDFToLong(_col8) (type: bigint), (_col4 - _col9) (type: bigint), COALESCE(ndv_compute_bit_vector(_col10),0) (type: bigint), _col10 (type: binary), 4000.0D (type: double), _col1 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13
                  Statistics: Num rows: 1 Data size: 772 Basic stats: PARTIAL Column stats: PARTIAL
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 772 Basic stats: PARTIAL Column stats: PARTIAL
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: employeeName, employeeID
          Column Types: string, int
          Table: default.employee_part_n0

PREHOOK: query: analyze table Employee_Part_n0 partition (employeeSalary='4000.0', country) compute statistics for columns employeeName, employeeID
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_part_n0
PREHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
PREHOOK: Output: default@employee_part_n0
PREHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_Part_n0 partition (employeeSalary='4000.0', country) compute statistics for columns employeeName, employeeID
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_part_n0
POSTHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='4000.0', country='USA')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part_n0
POSTHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='4000.0', country='USA')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part_n0
# col_name            	data_type           	comment             
employeeid          	int                 	                    
employeename        	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
employeesalary      	double              	                    
country             	string              	                    
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[4000.0, USA]       	 
Database:           	default             	 
Table:              	employee_part_n0    	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"employeeid\":\"true\",\"employeename\":\"true\"}}
	numFiles            	1                   
	numRows             	7                   
	rawDataSize         	57                  
	totalSize           	64                  
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	field.delim         	|                   
	serialization.format	|                   
PREHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='4000.0', country='USA') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part_n0
POSTHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='4000.0', country='USA') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part_n0
col_name            	employeeName        
data_type           	string              
min                 	                    
max                 	                    
num_nulls           	0                   
distinct_count      	7                   
avg_col_len         	5.142857142857143   
max_col_len         	6                   
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
PREHOOK: query: explain	
analyze table Employee_Part_n0 partition (employeeSalary='2000.0') compute statistics for columns employeeID
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_part_n0
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Output: default@employee_part_n0
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: explain	
analyze table Employee_Part_n0 partition (employeeSalary='2000.0') compute statistics for columns employeeID
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_part_n0
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: employee_part_n0
                  filterExpr: (employeesalary = 2000.0D) (type: boolean)
                  Statistics: Num rows: 3 Data size: 2254 Basic stats: PARTIAL Column stats: PARTIAL
                  Select Operator
                    expressions: employeeid (type: int), country (type: string)
                    outputColumnNames: employeeid, country
                    Statistics: Num rows: 3 Data size: 2254 Basic stats: PARTIAL Column stats: PARTIAL
                    Group By Operator
                      aggregations: min(employeeid), max(employeeid), count(1), count(employeeid), compute_bit_vector_hll(employeeid)
                      keys: 2000.0D (type: double), country (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                      Statistics: Num rows: 3 Data size: 1068 Basic stats: PARTIAL Column stats: PARTIAL
                      Reduce Output Operator
                        key expressions: 2000.0D (type: double), _col1 (type: string)
                        null sort order: zz
                        sort order: ++
                        Map-reduce partition columns: 2000.0D (type: double), _col1 (type: string)
                        Statistics: Num rows: 3 Data size: 1068 Basic stats: PARTIAL Column stats: PARTIAL
                        value expressions: _col2 (type: int), _col3 (type: int), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: binary)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: 2000.0D (type: double), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                Statistics: Num rows: 1 Data size: 356 Basic stats: PARTIAL Column stats: PARTIAL
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col2) (type: bigint), UDFToLong(_col3) (type: bigint), (_col4 - _col5) (type: bigint), COALESCE(ndv_compute_bit_vector(_col6),0) (type: bigint), _col6 (type: binary), 2000.0D (type: double), _col1 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                  Statistics: Num rows: 1 Data size: 356 Basic stats: PARTIAL Column stats: PARTIAL
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 356 Basic stats: PARTIAL Column stats: PARTIAL
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: employeeID
          Column Types: int
          Table: default.employee_part_n0

PREHOOK: query: analyze table Employee_Part_n0 partition (employeeSalary='2000.0') compute statistics for columns employeeID
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_part_n0
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Output: default@employee_part_n0
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_Part_n0 partition (employeeSalary='2000.0') compute statistics for columns employeeID
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_part_n0
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='2000.0', country='USA') employeeID
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part_n0
POSTHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='2000.0', country='USA') employeeID
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part_n0
col_name            	employeeID          
data_type           	int                 
min                 	16                  
max                 	34                  
num_nulls           	1                   
distinct_count      	12                  
avg_col_len         	                    
max_col_len         	                    
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
PREHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='2000.0', country='UK') employeeID
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part_n0
POSTHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='2000.0', country='UK') employeeID
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part_n0
col_name            	employeeID          
data_type           	int                 
min                 	16                  
max                 	31                  
num_nulls           	0                   
distinct_count      	7                   
avg_col_len         	                    
max_col_len         	                    
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
PREHOOK: query: explain	
analyze table Employee_Part_n0 partition (employeeSalary) compute statistics for columns employeeID
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_part_n0
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=USA
PREHOOK: Input: default@employee_part_n0@employeesalary=3500.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
PREHOOK: Output: default@employee_part_n0
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=USA
PREHOOK: Output: default@employee_part_n0@employeesalary=3500.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: explain	
analyze table Employee_Part_n0 partition (employeeSalary) compute statistics for columns employeeID
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_part_n0
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=USA
POSTHOOK: Input: default@employee_part_n0@employeesalary=3500.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=USA
POSTHOOK: Output: default@employee_part_n0@employeesalary=3500.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: employee_part_n0
                  Statistics: Num rows: 31 Data size: 6072 Basic stats: PARTIAL Column stats: PARTIAL
                  Select Operator
                    expressions: employeeid (type: int), employeesalary (type: double), country (type: string)
                    outputColumnNames: employeeid, employeesalary, country
                    Statistics: Num rows: 31 Data size: 6072 Basic stats: PARTIAL Column stats: PARTIAL
                    Group By Operator
                      aggregations: min(employeeid), max(employeeid), count(1), count(employeeid), compute_bit_vector_hll(employeeid)
                      keys: employeesalary (type: double), country (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                      Statistics: Num rows: 31 Data size: 11280 Basic stats: PARTIAL Column stats: PARTIAL
                      Reduce Output Operator
                        key expressions: _col0 (type: double), _col1 (type: string)
                        null sort order: zz
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: double), _col1 (type: string)
                        Statistics: Num rows: 31 Data size: 11280 Basic stats: PARTIAL Column stats: PARTIAL
                        value expressions: _col2 (type: int), _col3 (type: int), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: binary)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: KEY._col0 (type: double), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                Statistics: Num rows: 15 Data size: 5456 Basic stats: PARTIAL Column stats: PARTIAL
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col2) (type: bigint), UDFToLong(_col3) (type: bigint), (_col4 - _col5) (type: bigint), COALESCE(ndv_compute_bit_vector(_col6),0) (type: bigint), _col6 (type: binary), _col0 (type: double), _col1 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                  Statistics: Num rows: 15 Data size: 5456 Basic stats: PARTIAL Column stats: PARTIAL
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 15 Data size: 5456 Basic stats: PARTIAL Column stats: PARTIAL
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: employeeID
          Column Types: int
          Table: default.employee_part_n0

PREHOOK: query: analyze table Employee_Part_n0 partition (employeeSalary) compute statistics for columns employeeID
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_part_n0
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=USA
PREHOOK: Input: default@employee_part_n0@employeesalary=3500.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
PREHOOK: Output: default@employee_part_n0
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=USA
PREHOOK: Output: default@employee_part_n0@employeesalary=3500.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_Part_n0 partition (employeeSalary) compute statistics for columns employeeID
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_part_n0
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=USA
POSTHOOK: Input: default@employee_part_n0@employeesalary=3500.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=USA
POSTHOOK: Output: default@employee_part_n0@employeesalary=3500.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='3000.0', country='UK') employeeID
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part_n0
POSTHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='3000.0', country='UK') employeeID
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part_n0
col_name            	employeeID          
data_type           	int                 
min                 	16                  
max                 	34                  
num_nulls           	1                   
distinct_count      	12                  
avg_col_len         	                    
max_col_len         	                    
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
PREHOOK: query: explain	
analyze table Employee_Part_n0 partition (employeeSalary,country) compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_part_n0
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=USA
PREHOOK: Input: default@employee_part_n0@employeesalary=3500.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
PREHOOK: Output: default@employee_part_n0
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=USA
PREHOOK: Output: default@employee_part_n0@employeesalary=3500.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: explain	
analyze table Employee_Part_n0 partition (employeeSalary,country) compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_part_n0
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=USA
POSTHOOK: Input: default@employee_part_n0@employeesalary=3500.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=USA
POSTHOOK: Output: default@employee_part_n0@employeesalary=3500.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: employee_part_n0
                  Statistics: Num rows: 54 Data size: 15386 Basic stats: COMPLETE Column stats: PARTIAL
                  Select Operator
                    expressions: employeeid (type: int), employeename (type: string), employeesalary (type: double), country (type: string)
                    outputColumnNames: employeeid, employeename, employeesalary, country
                    Statistics: Num rows: 54 Data size: 15386 Basic stats: COMPLETE Column stats: PARTIAL
                    Group By Operator
                      aggregations: min(employeeid), max(employeeid), count(1), count(employeeid), compute_bit_vector_hll(employeeid), max(length(employeename)), avg(COALESCE(length(employeename),0)), count(employeename), compute_bit_vector_hll(employeename)
                      keys: employeesalary (type: double), country (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                      Statistics: Num rows: 8 Data size: 4736 Basic stats: COMPLETE Column stats: PARTIAL
                      Reduce Output Operator
                        key expressions: _col0 (type: double), _col1 (type: string)
                        null sort order: zz
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: double), _col1 (type: string)
                        Statistics: Num rows: 8 Data size: 4736 Basic stats: COMPLETE Column stats: PARTIAL
                        value expressions: _col2 (type: int), _col3 (type: int), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: binary), _col7 (type: int), _col8 (type: struct<count:bigint,sum:double,input:int>), _col9 (type: bigint), _col10 (type: binary)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                keys: KEY._col0 (type: double), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                Statistics: Num rows: 8 Data size: 4192 Basic stats: COMPLETE Column stats: PARTIAL
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col2) (type: bigint), UDFToLong(_col3) (type: bigint), (_col4 - _col5) (type: bigint), COALESCE(ndv_compute_bit_vector(_col6),0) (type: bigint), _col6 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col7,0)) (type: bigint), COALESCE(_col8,0) (type: double), (_col4 - _col9) (type: bigint), COALESCE(ndv_compute_bit_vector(_col10),0) (type: bigint), _col10 (type: binary), _col0 (type: double), _col1 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13
                  Statistics: Num rows: 8 Data size: 5776 Basic stats: COMPLETE Column stats: PARTIAL
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 8 Data size: 5776 Basic stats: COMPLETE Column stats: PARTIAL
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: employeeid, employeename
          Column Types: int, string
          Table: default.employee_part_n0

PREHOOK: query: analyze table Employee_Part_n0 partition (employeeSalary,country) compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_part_n0
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=USA
PREHOOK: Input: default@employee_part_n0@employeesalary=3500.0/country=UK
PREHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
PREHOOK: Output: default@employee_part_n0
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
PREHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=USA
PREHOOK: Output: default@employee_part_n0@employeesalary=3500.0/country=UK
PREHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_Part_n0 partition (employeeSalary,country) compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_part_n0
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=3000.0/country=USA
POSTHOOK: Input: default@employee_part_n0@employeesalary=3500.0/country=UK
POSTHOOK: Input: default@employee_part_n0@employeesalary=4000.0/country=USA
POSTHOOK: Output: default@employee_part_n0
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=2000.0/country=USA
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=3000.0/country=USA
POSTHOOK: Output: default@employee_part_n0@employeesalary=3500.0/country=UK
POSTHOOK: Output: default@employee_part_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='3500.0', country='UK') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part_n0
POSTHOOK: query: describe formatted Employee_Part_n0 partition (employeeSalary='3500.0', country='UK') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part_n0
col_name            	employeeName        
data_type           	string              
min                 	                    
max                 	                    
num_nulls           	0                   
distinct_count      	7                   
avg_col_len         	5.142857142857143   
max_col_len         	6                   
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
PREHOOK: query: drop table Employee_n0
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table Employee_n0
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE Employee_n0(employeeID int, employeeName String) partitioned by (employeeSalary double, country string)
row format delimited fields terminated by '|'  stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@Employee_n0
POSTHOOK: query: CREATE TABLE Employee_n0(employeeID int, employeeName String) partitioned by (employeeSalary double, country string)
row format delimited fields terminated by '|'  stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@Employee_n0
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_n0 partition(employeeSalary='2000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_n0 partition(employeeSalary='2000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=2000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_n0 partition(employeeSalary='2000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_n0 partition(employeeSalary='2000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=2000.0/country=UK
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_n0 partition(employeeSalary='3500.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_n0 partition(employeeSalary='3500.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=3500.0/country=UK
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_n0 partition(employeeSalary='3000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_n0 partition(employeeSalary='3000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=3000.0/country=UK
PREHOOK: query: analyze table Employee_n0 partition (employeeSalary,country) compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_n0
PREHOOK: Input: default@employee_n0@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_n0@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee_n0@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee_n0@employeesalary=3500.0/country=UK
PREHOOK: Output: default@employee_n0
PREHOOK: Output: default@employee_n0@employeesalary=2000.0/country=UK
PREHOOK: Output: default@employee_n0@employeesalary=2000.0/country=USA
PREHOOK: Output: default@employee_n0@employeesalary=3000.0/country=UK
PREHOOK: Output: default@employee_n0@employeesalary=3500.0/country=UK
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_n0 partition (employeeSalary,country) compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_n0
POSTHOOK: Input: default@employee_n0@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_n0@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee_n0@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee_n0@employeesalary=3500.0/country=UK
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=2000.0/country=UK
POSTHOOK: Output: default@employee_n0@employeesalary=2000.0/country=USA
POSTHOOK: Output: default@employee_n0@employeesalary=3000.0/country=UK
POSTHOOK: Output: default@employee_n0@employeesalary=3500.0/country=UK
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_n0 partition (employeeSalary='3500.0', country='UK') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_n0
POSTHOOK: query: describe formatted Employee_n0 partition (employeeSalary='3500.0', country='UK') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_n0
col_name            	employeeName        
data_type           	string              
min                 	                    
max                 	                    
num_nulls           	0                   
distinct_count      	7                   
avg_col_len         	5.142857142857143   
max_col_len         	6                   
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_n0 partition(employeeSalary='3000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_n0 partition(employeeSalary='3000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=3000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_n0 partition(employeeSalary='4000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_n0 partition(employeeSalary='4000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=4000.0/country=USA
PREHOOK: query: analyze table Employee_n0 partition (employeeSalary) compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_n0
PREHOOK: Input: default@employee_n0@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_n0@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee_n0@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee_n0@employeesalary=3000.0/country=USA
PREHOOK: Input: default@employee_n0@employeesalary=3500.0/country=UK
PREHOOK: Input: default@employee_n0@employeesalary=4000.0/country=USA
PREHOOK: Output: default@employee_n0
PREHOOK: Output: default@employee_n0@employeesalary=2000.0/country=UK
PREHOOK: Output: default@employee_n0@employeesalary=2000.0/country=USA
PREHOOK: Output: default@employee_n0@employeesalary=3000.0/country=UK
PREHOOK: Output: default@employee_n0@employeesalary=3000.0/country=USA
PREHOOK: Output: default@employee_n0@employeesalary=3500.0/country=UK
PREHOOK: Output: default@employee_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_n0 partition (employeeSalary) compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_n0
POSTHOOK: Input: default@employee_n0@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_n0@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee_n0@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee_n0@employeesalary=3000.0/country=USA
POSTHOOK: Input: default@employee_n0@employeesalary=3500.0/country=UK
POSTHOOK: Input: default@employee_n0@employeesalary=4000.0/country=USA
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=2000.0/country=UK
POSTHOOK: Output: default@employee_n0@employeesalary=2000.0/country=USA
POSTHOOK: Output: default@employee_n0@employeesalary=3000.0/country=UK
POSTHOOK: Output: default@employee_n0@employeesalary=3000.0/country=USA
POSTHOOK: Output: default@employee_n0@employeesalary=3500.0/country=UK
POSTHOOK: Output: default@employee_n0@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_n0 partition (employeeSalary='3000.0', country='USA') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_n0
POSTHOOK: query: describe formatted Employee_n0 partition (employeeSalary='3000.0', country='USA') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_n0
col_name            	employeeName        
data_type           	string              
min                 	                    
max                 	                    
num_nulls           	0                   
distinct_count      	7                   
avg_col_len         	5.142857142857143   
max_col_len         	6                   
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
PREHOOK: query: alter table Employee_n0 add columns (c int ,d string)
PREHOOK: type: ALTERTABLE_ADDCOLS
PREHOOK: Input: default@employee_n0
PREHOOK: Output: default@employee_n0
POSTHOOK: query: alter table Employee_n0 add columns (c int ,d string)
POSTHOOK: type: ALTERTABLE_ADDCOLS
POSTHOOK: Input: default@employee_n0
POSTHOOK: Output: default@employee_n0
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee_part.txt"  INTO TABLE Employee_n0 partition(employeeSalary='6000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee_part.txt"  INTO TABLE Employee_n0 partition(employeeSalary='6000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=6000.0/country=UK
PREHOOK: query: analyze table Employee_n0 partition (employeeSalary='6000.0',country='UK') compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@employee_n0
PREHOOK: Input: default@employee_n0@employeesalary=6000.0/country=UK
PREHOOK: Output: default@employee_n0
PREHOOK: Output: default@employee_n0@employeesalary=6000.0/country=UK
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_n0 partition (employeeSalary='6000.0',country='UK') compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@employee_n0
POSTHOOK: Input: default@employee_n0@employeesalary=6000.0/country=UK
POSTHOOK: Output: default@employee_n0
POSTHOOK: Output: default@employee_n0@employeesalary=6000.0/country=UK
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_n0 partition (employeeSalary='6000.0', country='UK') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_n0
POSTHOOK: query: describe formatted Employee_n0 partition (employeeSalary='6000.0', country='UK') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_n0
col_name            	employeeName        
data_type           	string              
min                 	                    
max                 	                    
num_nulls           	0                   
distinct_count      	9                   
avg_col_len         	4.777777777777778   
max_col_len         	6                   
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
PREHOOK: query: describe formatted Employee_n0 partition (employeeSalary='6000.0', country='UK') c
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_n0
POSTHOOK: query: describe formatted Employee_n0 partition (employeeSalary='6000.0', country='UK') c
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_n0
col_name            	c                   
data_type           	int                 
min                 	2000                
max                 	4000                
num_nulls           	0                   
distinct_count      	3                   
avg_col_len         	                    
max_col_len         	                    
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
PREHOOK: query: describe formatted Employee_n0 partition (employeeSalary='6000.0', country='UK') d
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_n0
POSTHOOK: query: describe formatted Employee_n0 partition (employeeSalary='6000.0', country='UK') d
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_n0
col_name            	d                   
data_type           	string              
min                 	                    
max                 	                    
num_nulls           	0                   
distinct_count      	2                   
avg_col_len         	2.4444444444444446  
max_col_len         	3                   
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	from deserializer   
