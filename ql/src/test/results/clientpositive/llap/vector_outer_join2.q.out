PREHOOK: query: create table small_alltypesorc1a_n0 as select * from alltypesorc where cint is not null and cbigint is not null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc1a_n0
POSTHOOK: query: create table small_alltypesorc1a_n0 as select * from alltypesorc where cint is not null and cbigint is not null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc1a_n0
POSTHOOK: Lineage: small_alltypesorc1a_n0.cbigint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.cboolean1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.cboolean2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.cint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.cstring1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.cstring2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.ctimestamp1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.ctimestamp2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n0.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: create table small_alltypesorc2a_n0 as select * from alltypesorc where cint is null and cbigint is not null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc2a_n0
POSTHOOK: query: create table small_alltypesorc2a_n0 as select * from alltypesorc where cint is null and cbigint is not null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc2a_n0
POSTHOOK: Lineage: small_alltypesorc2a_n0.cbigint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.cboolean1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.cboolean2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.cint SIMPLE []
POSTHOOK: Lineage: small_alltypesorc2a_n0.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.cstring1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.cstring2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.ctimestamp1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.ctimestamp2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n0.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: create table small_alltypesorc3a_n0 as select * from alltypesorc where cint is not null and cbigint is null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc3a_n0
POSTHOOK: query: create table small_alltypesorc3a_n0 as select * from alltypesorc where cint is not null and cbigint is null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc3a_n0
POSTHOOK: Lineage: small_alltypesorc3a_n0.cbigint SIMPLE []
POSTHOOK: Lineage: small_alltypesorc3a_n0.cboolean1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.cboolean2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.cint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.cstring1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.cstring2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.ctimestamp1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.ctimestamp2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n0.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: create table small_alltypesorc4a_n0 as select * from alltypesorc where cint is null and cbigint is null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc4a_n0
POSTHOOK: query: create table small_alltypesorc4a_n0 as select * from alltypesorc where cint is null and cbigint is null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc4a_n0
POSTHOOK: Lineage: small_alltypesorc4a_n0.cbigint SIMPLE []
POSTHOOK: Lineage: small_alltypesorc4a_n0.cboolean1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n0.cboolean2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n0.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n0.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n0.cint SIMPLE []
POSTHOOK: Lineage: small_alltypesorc4a_n0.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n0.cstring1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n0.cstring2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n0.ctimestamp1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n0.ctimestamp2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n0.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: select * from small_alltypesorc1a_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc1a_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc1a_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc1a_n0
#### A masked pattern was here ####
-51	NULL	-1064981602	-1444011153	-51.0	NULL	aY3tpnr6wfvmWMG0U881	2Ol4N3Ha0815Ej54lA2N	1969-12-31 16:00:08.451	NULL	false	false
-51	NULL	-1065775394	-1331703092	-51.0	NULL	aD88uS2N8DmqPlvjOa7F46i7	Ut8ka2o8iokF504065PYS	1969-12-31 16:00:08.451	NULL	false	true
-51	NULL	-1066684273	2034191923	-51.0	NULL	2W4Kg220OcCy065HG60k6e	D7GOQhc3qbAR6	1969-12-31 16:00:08.451	NULL	false	false
-51	NULL	-1067683781	1750003656	-51.0	NULL	IbgbUvP5	47x2I874	1969-12-31 16:00:08.451	NULL	false	true
-51	NULL	-1071480828	-1401575336	-51.0	NULL	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA	1969-12-31 16:00:08.451	NULL	true	true
PREHOOK: query: select * from small_alltypesorc2a_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc2a_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc2a_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc2a_n0
#### A masked pattern was here ####
-64	-7196	NULL	-1615920595	-64.0	-7196.0	NULL	X5rDjl	1969-12-31 16:00:11.912	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	-1639157869	-64.0	-7196.0	NULL	IJ0Oj7qAiqNGsN7gn	1969-12-31 16:00:01.785	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	-527203677	-64.0	-7196.0	NULL	JBE4H5RoK412Cs260I72	1969-12-31 15:59:50.184	1969-12-31 15:59:58.174	NULL	true
-64	-7196	NULL	406535485	-64.0	-7196.0	NULL	E011i	1969-12-31 15:59:56.048	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	658026952	-64.0	-7196.0	NULL	4tAur	1969-12-31 15:59:53.866	1969-12-31 15:59:58.174	NULL	true
PREHOOK: query: select * from small_alltypesorc3a_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc3a_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc3a_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc3a_n0
#### A masked pattern was here ####
-64	-10462	626923679	NULL	-64.0	-10462.0	821UdmGbkEf4j	NULL	1969-12-31 16:00:02.496	1969-12-31 16:00:00.164	true	NULL
-64	-15920	528534767	NULL	-64.0	-15920.0	cvLH6Eat2yFsyy7p	NULL	1969-12-31 15:59:51.859	1969-12-31 16:00:14.468	true	NULL
-64	-6907	253665376	NULL	-64.0	-6907.0	1cGVWH7n1QU	NULL	NULL	1969-12-31 15:59:53.66	true	NULL
-64	-8080	528534767	NULL	-64.0	-8080.0	cvLH6Eat2yFsyy7p	NULL	1969-12-31 15:59:58.044	1969-12-31 15:59:48.655	true	NULL
-64	-9842	253665376	NULL	-64.0	-9842.0	1cGVWH7n1QU	NULL	1969-12-31 16:00:00.631	1969-12-31 16:00:01.781	true	NULL
PREHOOK: query: select * from small_alltypesorc4a_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc4a_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc4a_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc4a_n0
#### A masked pattern was here ####
-60	-200	NULL	NULL	-60.0	-200.0	NULL	NULL	1969-12-31 16:00:11.996	1969-12-31 15:59:55.451	NULL	NULL
-61	-7196	NULL	NULL	-61.0	-7196.0	NULL	8Mlns2Tl6E0g	1969-12-31 15:59:44.823	1969-12-31 15:59:58.174	NULL	false
-61	-7196	NULL	NULL	-61.0	-7196.0	NULL	fUJIN	1969-12-31 16:00:11.842	1969-12-31 15:59:58.174	NULL	false
-62	-7196	NULL	NULL	-62.0	-7196.0	NULL	jf1Cw6qhkNToQuud	1969-12-31 16:00:12.388	1969-12-31 15:59:58.174	NULL	false
-62	-7196	NULL	NULL	-62.0	-7196.0	NULL	yLiOchx5PfDTFdcMduBTg	1969-12-31 16:00:02.373	1969-12-31 15:59:58.174	NULL	false
PREHOOK: query: create table small_alltypesorc_a_n0 stored as orc as select * from 
(select * from (select * from small_alltypesorc1a_n0) sq1
 union all
 select * from (select * from small_alltypesorc2a_n0) sq2
 union all
 select * from (select * from small_alltypesorc3a_n0) sq3
 union all
 select * from (select * from small_alltypesorc4a_n0) sq4) q
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@small_alltypesorc1a_n0
PREHOOK: Input: default@small_alltypesorc2a_n0
PREHOOK: Input: default@small_alltypesorc3a_n0
PREHOOK: Input: default@small_alltypesorc4a_n0
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc_a_n0
POSTHOOK: query: create table small_alltypesorc_a_n0 stored as orc as select * from 
(select * from (select * from small_alltypesorc1a_n0) sq1
 union all
 select * from (select * from small_alltypesorc2a_n0) sq2
 union all
 select * from (select * from small_alltypesorc3a_n0) sq3
 union all
 select * from (select * from small_alltypesorc4a_n0) sq4) q
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@small_alltypesorc1a_n0
POSTHOOK: Input: default@small_alltypesorc2a_n0
POSTHOOK: Input: default@small_alltypesorc3a_n0
POSTHOOK: Input: default@small_alltypesorc4a_n0
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc_a_n0
POSTHOOK: Lineage: small_alltypesorc_a_n0.cbigint EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:cbigint, type:bigint, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:cbigint, type:bigint, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:cbigint, type:bigint, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.cboolean1 EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:cboolean1, type:boolean, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:cboolean1, type:boolean, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:cboolean1, type:boolean, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.cboolean2 EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:cboolean2, type:boolean, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:cboolean2, type:boolean, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:cboolean2, type:boolean, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.cdouble EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:cdouble, type:double, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:cdouble, type:double, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:cdouble, type:double, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.cfloat EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:cfloat, type:float, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:cfloat, type:float, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:cfloat, type:float, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.cint EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:cint, type:int, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:cint, type:int, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:cint, type:int, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.csmallint EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:csmallint, type:smallint, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:csmallint, type:smallint, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:csmallint, type:smallint, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.cstring1 EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:cstring1, type:string, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:cstring1, type:string, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:cstring1, type:string, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.cstring2 EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:cstring2, type:string, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:cstring2, type:string, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:cstring2, type:string, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.ctimestamp1 EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.ctimestamp2 EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n0.ctinyint EXPRESSION [(small_alltypesorc1a_n0)small_alltypesorc1a_n0.FieldSchema(name:ctinyint, type:tinyint, comment:null), (small_alltypesorc2a_n0)small_alltypesorc2a_n0.FieldSchema(name:ctinyint, type:tinyint, comment:null), (small_alltypesorc3a_n0)small_alltypesorc3a_n0.FieldSchema(name:ctinyint, type:tinyint, comment:null), (small_alltypesorc4a_n0)small_alltypesorc4a_n0.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: ANALYZE TABLE small_alltypesorc_a_n0 COMPUTE STATISTICS
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n0
PREHOOK: Output: default@small_alltypesorc_a_n0
POSTHOOK: query: ANALYZE TABLE small_alltypesorc_a_n0 COMPUTE STATISTICS
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n0
POSTHOOK: Output: default@small_alltypesorc_a_n0
PREHOOK: query: ANALYZE TABLE small_alltypesorc_a_n0 COMPUTE STATISTICS FOR COLUMNS
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@small_alltypesorc_a_n0
PREHOOK: Output: default@small_alltypesorc_a_n0
#### A masked pattern was here ####
POSTHOOK: query: ANALYZE TABLE small_alltypesorc_a_n0 COMPUTE STATISTICS FOR COLUMNS
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@small_alltypesorc_a_n0
POSTHOOK: Output: default@small_alltypesorc_a_n0
#### A masked pattern was here ####
PREHOOK: query: select * from small_alltypesorc_a_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc_a_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n0
#### A masked pattern was here ####
-51	NULL	-1064981602	-1444011153	-51.0	NULL	aY3tpnr6wfvmWMG0U881	2Ol4N3Ha0815Ej54lA2N	1969-12-31 16:00:08.451	NULL	false	false
-51	NULL	-1065775394	-1331703092	-51.0	NULL	aD88uS2N8DmqPlvjOa7F46i7	Ut8ka2o8iokF504065PYS	1969-12-31 16:00:08.451	NULL	false	true
-51	NULL	-1066684273	2034191923	-51.0	NULL	2W4Kg220OcCy065HG60k6e	D7GOQhc3qbAR6	1969-12-31 16:00:08.451	NULL	false	false
-51	NULL	-1067683781	1750003656	-51.0	NULL	IbgbUvP5	47x2I874	1969-12-31 16:00:08.451	NULL	false	true
-51	NULL	-1071480828	-1401575336	-51.0	NULL	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA	1969-12-31 16:00:08.451	NULL	true	true
-60	-200	NULL	NULL	-60.0	-200.0	NULL	NULL	1969-12-31 16:00:11.996	1969-12-31 15:59:55.451	NULL	NULL
-61	-7196	NULL	NULL	-61.0	-7196.0	NULL	8Mlns2Tl6E0g	1969-12-31 15:59:44.823	1969-12-31 15:59:58.174	NULL	false
-61	-7196	NULL	NULL	-61.0	-7196.0	NULL	fUJIN	1969-12-31 16:00:11.842	1969-12-31 15:59:58.174	NULL	false
-62	-7196	NULL	NULL	-62.0	-7196.0	NULL	jf1Cw6qhkNToQuud	1969-12-31 16:00:12.388	1969-12-31 15:59:58.174	NULL	false
-62	-7196	NULL	NULL	-62.0	-7196.0	NULL	yLiOchx5PfDTFdcMduBTg	1969-12-31 16:00:02.373	1969-12-31 15:59:58.174	NULL	false
-64	-10462	626923679	NULL	-64.0	-10462.0	821UdmGbkEf4j	NULL	1969-12-31 16:00:02.496	1969-12-31 16:00:00.164	true	NULL
-64	-15920	528534767	NULL	-64.0	-15920.0	cvLH6Eat2yFsyy7p	NULL	1969-12-31 15:59:51.859	1969-12-31 16:00:14.468	true	NULL
-64	-6907	253665376	NULL	-64.0	-6907.0	1cGVWH7n1QU	NULL	NULL	1969-12-31 15:59:53.66	true	NULL
-64	-7196	NULL	-1615920595	-64.0	-7196.0	NULL	X5rDjl	1969-12-31 16:00:11.912	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	-1639157869	-64.0	-7196.0	NULL	IJ0Oj7qAiqNGsN7gn	1969-12-31 16:00:01.785	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	-527203677	-64.0	-7196.0	NULL	JBE4H5RoK412Cs260I72	1969-12-31 15:59:50.184	1969-12-31 15:59:58.174	NULL	true
-64	-7196	NULL	406535485	-64.0	-7196.0	NULL	E011i	1969-12-31 15:59:56.048	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	658026952	-64.0	-7196.0	NULL	4tAur	1969-12-31 15:59:53.866	1969-12-31 15:59:58.174	NULL	true
-64	-8080	528534767	NULL	-64.0	-8080.0	cvLH6Eat2yFsyy7p	NULL	1969-12-31 15:59:58.044	1969-12-31 15:59:48.655	true	NULL
-64	-9842	253665376	NULL	-64.0	-9842.0	1cGVWH7n1QU	NULL	1969-12-31 16:00:00.631	1969-12-31 16:00:01.781	true	NULL
PREHOOK: query: explain vectorization detail
select count(*), sum(t1.c_cbigint) from (select c.cbigint as c_cbigint
from small_alltypesorc_a_n0 c
left outer join small_alltypesorc_a_n0 cd
  on cd.cint = c.cint 
left outer join small_alltypesorc_a_n0 hd
  on hd.cbigint = c.cbigint
) t1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n0
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail
select count(*), sum(t1.c_cbigint) from (select c.cbigint as c_cbigint
from small_alltypesorc_a_n0 c
left outer join small_alltypesorc_a_n0 cd
  on cd.cint = c.cint 
left outer join small_alltypesorc_a_n0 hd
  on hd.cbigint = c.cbigint
) t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n0
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 3 (BROADCAST_EDGE), Reducer 4 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 20 Data size: 132 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:ctinyint:tinyint, 1:csmallint:smallint, 2:cint:int, 3:cbigint:bigint, 4:cfloat:float, 5:cdouble:double, 6:cstring1:string, 7:cstring2:string, 8:ctimestamp1:timestamp, 9:ctimestamp2:timestamp, 10:cboolean1:boolean, 11:cboolean2:boolean, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: cint (type: int), cbigint (type: bigint)
                    outputColumnNames: _col0, _col1
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [2, 3]
                    Statistics: Num rows: 20 Data size: 132 Basic stats: COMPLETE Column stats: COMPLETE
                    Map Join Operator
                      condition map:
                           Left Outer Join 0 to 1
                      keys:
                        0 _col0 (type: int)
                        1 _col0 (type: int)
                      Map Join Vectorization:
                          bigTableKeyColumns: 2:int
                          bigTableRetainColumnNums: [3]
                          bigTableValueColumns: 3:bigint
                          className: VectorMapJoinOuterLongOperator
                          native: true
                          nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Outer Join has keys IS true, Optimized Table and Supports Key Types IS true
                          projectedOutput: 3:bigint
                          hashTableImplementationType: OPTIMIZED
                      outputColumnNames: _col1
                      input vertices:
                        1 Map 3
                      Statistics: Num rows: 25 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Left Outer Join 0 to 1
                        keys:
                          0 _col1 (type: bigint)
                          1 _col0 (type: bigint)
                        Map Join Vectorization:
                            bigTableKeyColumns: 3:bigint
                            bigTableRetainColumnNums: [3]
                            bigTableValueColumns: 3:bigint
                            className: VectorMapJoinOuterLongOperator
                            native: true
                            nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Outer Join has keys IS true, Optimized Table and Supports Key Types IS true
                            projectedOutput: 3:bigint
                            hashTableImplementationType: OPTIMIZED
                        outputColumnNames: _col1
                        input vertices:
                          1 Reducer 4
                        Statistics: Num rows: 25 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: count(), sum(_col1)
                          Group By Vectorization:
                              aggregators: VectorUDAFCountStar(*) -> bigint, VectorUDAFSumLong(col 3:bigint) -> bigint
                              className: VectorGroupByOperator
                              groupByMode: HASH
                              native: false
                              vectorProcessingMode: HASH
                              projectedOutputColumnNums: [0, 1]
                          minReductionHashAggr: 0.96
                          mode: hash
                          outputColumnNames: _col0, _col1
                          Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            null sort order: 
                            sort order: 
                            Reduce Sink Vectorization:
                                className: VectorReduceSinkEmptyKeyOperator
                                native: true
                                nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                                valueColumns: 0:bigint, 1:bigint
                            Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col0 (type: bigint), _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 12
                    includeColumns: [2, 3]
                    dataColumns: ctinyint:tinyint, csmallint:smallint, cint:int, cbigint:bigint, cfloat:float, cdouble:double, cstring1:string, cstring2:string, ctimestamp1:timestamp, ctimestamp2:timestamp, cboolean1:boolean, cboolean2:boolean
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: cd
                  filterExpr: (cint is not null or cbigint is not null) (type: boolean)
                  Statistics: Num rows: 20 Data size: 44 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:ctinyint:tinyint, 1:csmallint:smallint, 2:cint:int, 3:cbigint:bigint, 4:cfloat:float, 5:cdouble:double, 6:cstring1:string, 7:cstring2:string, 8:ctimestamp1:timestamp, 9:ctimestamp2:timestamp, 10:cboolean1:boolean, 11:cboolean2:boolean, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 2:int)
                    predicate: cint is not null (type: boolean)
                    Statistics: Num rows: 10 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cint (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [2]
                      Statistics: Num rows: 10 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumns: 2:int
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                        Statistics: Num rows: 10 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 3:bigint)
                    predicate: cbigint is not null (type: boolean)
                    Statistics: Num rows: 10 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cbigint (type: bigint)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [3]
                      Statistics: Num rows: 10 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: bigint)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: bigint)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumns: 3:bigint
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                        Statistics: Num rows: 10 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 12
                    includeColumns: [2, 3]
                    dataColumns: ctinyint:tinyint, csmallint:smallint, cint:int, cbigint:bigint, cfloat:float, cdouble:double, cstring1:string, cstring2:string, ctimestamp1:timestamp, ctimestamp2:timestamp, cboolean1:boolean, cboolean2:boolean
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    dataColumns: VALUE._col0:bigint, VALUE._col1:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0), sum(VALUE._col1)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint, VectorUDAFSumLong(col 1:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0, 1]
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: KEY.reducesinkkey0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: bigint)
                outputColumnNames: _col0
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0]
                Reduce Output Operator
                  key expressions: _col0 (type: bigint)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: bigint)
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkLongOperator
                      keyColumns: 0:bigint
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                  Statistics: Num rows: 10 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*), sum(t1.c_cbigint) from (select c.cbigint as c_cbigint
from small_alltypesorc_a_n0 c
left outer join small_alltypesorc_a_n0 cd
  on cd.cint = c.cint 
left outer join small_alltypesorc_a_n0 hd
  on hd.cbigint = c.cbigint
) t1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n0
#### A masked pattern was here ####
POSTHOOK: query: select count(*), sum(t1.c_cbigint) from (select c.cbigint as c_cbigint
from small_alltypesorc_a_n0 c
left outer join small_alltypesorc_a_n0 cd
  on cd.cint = c.cint 
left outer join small_alltypesorc_a_n0 hd
  on hd.cbigint = c.cbigint
) t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n0
#### A masked pattern was here ####
24	-3110813706
