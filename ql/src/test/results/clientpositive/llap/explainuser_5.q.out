PREHOOK: query: create table small (key string, value string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@small
POSTHOOK: query: create table small (key string, value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small
PREHOOK: query: create table middle (key string, value string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@middle
POSTHOOK: query: create table middle (key string, value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@middle
PREHOOK: query: create table big (key string, value string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@big
POSTHOOK: query: create table big (key string, value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@big
PREHOOK: query: alter table small update statistics set('numRows'='8', 'rawDataSize'='100')
PREHOOK: type: ALTERTABLE_UPDATETABLESTATS
PREHOOK: Input: default@small
PREHOOK: Output: default@small
POSTHOOK: query: alter table small update statistics set('numRows'='8', 'rawDataSize'='100')
POSTHOOK: type: ALTERTABLE_UPDATETABLESTATS
POSTHOOK: Input: default@small
POSTHOOK: Output: default@small
PREHOOK: query: alter table middle update statistics set('numRows'='28', 'rawDataSize'='2000')
PREHOOK: type: ALTERTABLE_UPDATETABLESTATS
PREHOOK: Input: default@middle
PREHOOK: Output: default@middle
POSTHOOK: query: alter table middle update statistics set('numRows'='28', 'rawDataSize'='2000')
POSTHOOK: type: ALTERTABLE_UPDATETABLESTATS
POSTHOOK: Input: default@middle
POSTHOOK: Output: default@middle
PREHOOK: query: alter table big update statistics set('numRows'='1234560', 'rawDataSize'='12345670')
PREHOOK: type: ALTERTABLE_UPDATETABLESTATS
PREHOOK: Input: default@big
PREHOOK: Output: default@big
POSTHOOK: query: alter table big update statistics set('numRows'='1234560', 'rawDataSize'='12345670')
POSTHOOK: type: ALTERTABLE_UPDATETABLESTATS
POSTHOOK: Input: default@big
POSTHOOK: Output: default@big
PREHOOK: query: explain
with first as (
  select big.key + middle.key as a, big.value + middle.value as b from big, middle where big.key = middle.key
)
select first.a, small.value from first, small where first.b = small.key
PREHOOK: type: QUERY
PREHOOK: Input: default@big
PREHOOK: Input: default@middle
PREHOOK: Input: default@small
#### A masked pattern was here ####
POSTHOOK: query: explain
with first as (
  select big.key + middle.key as a, big.value + middle.value as b from big, middle where big.key = middle.key
)
select first.a, small.value from first, small where first.b = small.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@big
POSTHOOK: Input: default@middle
POSTHOOK: Input: default@small
#### A masked pattern was here ####
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 3 (CUSTOM_SIMPLE_EDGE), Map 4 (BROADCAST_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized, llap
      File Output Operator [FS_53]
        Select Operator [SEL_52] (rows=1344435 width=349)
          Output:["_col0","_col1"]
          Map Join Operator [MAPJOIN_51] (rows=1344435 width=349)
            Conds:MAPJOIN_50.(_col2 + _col5)=RS_49._col1(Inner),Output:["_col1","_col4","_col6"]
          <-Map 4 [BROADCAST_EDGE] vectorized, llap
            BROADCAST [RS_49]
              PartitionCols:_col1
              Select Operator [SEL_48] (rows=8 width=368)
                Output:["_col0","_col1"]
                Filter Operator [FIL_47] (rows=8 width=368)
                  predicate:UDFToDouble(key) is not null
                  TableScan [TS_6] (rows=8 width=368)
                    default@small,small,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
          <-Map Join Operator [MAPJOIN_50] (rows=1222214 width=349)
              Conds:RS_43.KEY.reducesinkkey0=RS_46.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col1","_col2","_col4","_col5"]
            <-Map 3 [CUSTOM_SIMPLE_EDGE] vectorized, llap
              PARTITION_ONLY_SHUFFLE [RS_46]
                PartitionCols:_col0
                Select Operator [SEL_45] (rows=26 width=368)
                  Output:["_col0","_col1","_col2"]
                  Filter Operator [FIL_44] (rows=26 width=368)
                    predicate:(key is not null and UDFToDouble(value) is not null)
                    TableScan [TS_3] (rows=28 width=368)
                      default@middle,middle,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
            <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
              PARTITION_ONLY_SHUFFLE [RS_43]
                PartitionCols:_col0
                Select Operator [SEL_42] (rows=1111104 width=349)
                  Output:["_col0","_col1","_col2"]
                  Filter Operator [FIL_41] (rows=1111104 width=349)
                    predicate:(key is not null and UDFToDouble(value) is not null)
                    TableScan [TS_0] (rows=1234560 width=349)
                      default@big,big,Tbl:COMPLETE,Col:NONE,Output:["key","value"]

