PREHOOK: query: drop table if exists mysource
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists mysource
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table mysource (p int,key int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@mysource
POSTHOOK: query: create table mysource (p int,key int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mysource
PREHOOK: query: insert into mysource values (100,20), (101,40), (102,50)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@mysource
POSTHOOK: query: insert into mysource values (100,20), (101,40), (102,50)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@mysource
POSTHOOK: Lineage: mysource.key SCRIPT []
POSTHOOK: Lineage: mysource.p SCRIPT []
PREHOOK: query: insert into mysource values (100,30), (101,50), (102,60)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@mysource
POSTHOOK: query: insert into mysource values (100,30), (101,50), (102,60)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@mysource
POSTHOOK: Lineage: mysource.key SCRIPT []
POSTHOOK: Lineage: mysource.p SCRIPT []
PREHOOK: query: drop table if exists stats_nonpartitioned
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists stats_nonpartitioned
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table stats_nonpartitioned(key int, value int) stored as orc tblproperties ("transactional"="true")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stats_nonpartitioned
POSTHOOK: query: create table stats_nonpartitioned(key int, value int) stored as orc tblproperties ("transactional"="true")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stats_nonpartitioned
PREHOOK: query: explain select count(*) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: explain select count(*) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
0
PREHOOK: query: desc formatted stats_nonpartitioned
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_nonpartitioned
POSTHOOK: query: desc formatted stats_nonpartitioned
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_nonpartitioned
# col_name            	data_type           	comment             
key                 	int                 	                    
value               	int                 	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"key\":\"true\",\"value\":\"true\"}}
	bucketing_version   	2                   
	numFiles            	0                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	0                   
	transactional       	true                
	transactional_properties	default             
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
PREHOOK: query: explain insert into table stats_nonpartitioned select * from mysource where p == 100
PREHOOK: type: QUERY
PREHOOK: Input: default@mysource
PREHOOK: Output: default@stats_nonpartitioned
POSTHOOK: query: explain insert into table stats_nonpartitioned select * from mysource where p == 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mysource
POSTHOOK: Output: default@stats_nonpartitioned
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: mysource
                  filterExpr: (p = 100) (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (p = 100) (type: boolean)
                    Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: 100 (type: int), key (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                            output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                            serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                            name: default.stats_nonpartitioned
                        Write Type: INSERT
                      Select Operator
                        expressions: _col0 (type: int), _col1 (type: int)
                        outputColumnNames: key, value
                        Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(value), max(value), count(value), compute_bit_vector_hll(value)
                          minReductionHashAggr: 0.5
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                          Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            null sort order: 
                            sort order: 
                            Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.stats_nonpartitioned
          Write Type: INSERT

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: int, int
          Table: default.stats_nonpartitioned

PREHOOK: query: insert into table stats_nonpartitioned select * from mysource where p == 100
PREHOOK: type: QUERY
PREHOOK: Input: default@mysource
PREHOOK: Output: default@stats_nonpartitioned
POSTHOOK: query: insert into table stats_nonpartitioned select * from mysource where p == 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mysource
POSTHOOK: Output: default@stats_nonpartitioned
POSTHOOK: Lineage: stats_nonpartitioned.key SIMPLE []
POSTHOOK: Lineage: stats_nonpartitioned.value SIMPLE [(mysource)mysource.FieldSchema(name:key, type:int, comment:null), ]
PREHOOK: query: desc formatted stats_nonpartitioned
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_nonpartitioned
POSTHOOK: query: desc formatted stats_nonpartitioned
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_nonpartitioned
# col_name            	data_type           	comment             
key                 	int                 	                    
value               	int                 	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"key\":\"true\",\"value\":\"true\"}}
	bucketing_version   	2                   
	numFiles            	1                   
	numRows             	2                   
	rawDataSize         	0                   
	totalSize           	720                 
	transactional       	true                
	transactional_properties	default             
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
PREHOOK: query: explain select count(*) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: explain select count(*) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
2
PREHOOK: query: explain select count(key) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: explain select count(key) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: select count(key) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: select count(key) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
2
PREHOOK: query: analyze table stats_nonpartitioned compute statistics for columns key, value
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@stats_nonpartitioned
PREHOOK: Output: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: analyze table stats_nonpartitioned compute statistics for columns key, value
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@stats_nonpartitioned
POSTHOOK: Output: default@stats_nonpartitioned
#### A masked pattern was here ####
PREHOOK: query: explain select count(*) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: explain select count(*) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
2
PREHOOK: query: explain select count(key) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: explain select count(key) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: select count(key) from stats_nonpartitioned
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
POSTHOOK: query: select count(key) from stats_nonpartitioned
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_nonpartitioned
#### A masked pattern was here ####
2
