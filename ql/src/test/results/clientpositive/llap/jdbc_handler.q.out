PREHOOK: query: CREATE TEMPORARY FUNCTION dboutput AS 'org.apache.hadoop.hive.contrib.genericudf.example.GenericUDFDBOutput'
PREHOOK: type: CREATEFUNCTION
PREHOOK: Output: dboutput
POSTHOOK: query: CREATE TEMPORARY FUNCTION dboutput AS 'org.apache.hadoop.hive.contrib.genericudf.example.GenericUDFDBOutput'
POSTHOOK: type: CREATEFUNCTION
POSTHOOK: Output: dboutput
PREHOOK: query: FROM src

#### A masked pattern was here ####
'CREATE TABLE SIMPLE_DERBY_TABLE ("kkey" INTEGER NOT NULL )' ),

#### A masked pattern was here ####
'INSERT INTO SIMPLE_DERBY_TABLE ("kkey") VALUES (?)','20'),

#### A masked pattern was here ####
'INSERT INTO SIMPLE_DERBY_TABLE ("kkey") VALUES (?)','200')

limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: FROM src

#### A masked pattern was here ####
'CREATE TABLE SIMPLE_DERBY_TABLE ("kkey" INTEGER NOT NULL )' ),

#### A masked pattern was here ####
'INSERT INTO SIMPLE_DERBY_TABLE ("kkey") VALUES (?)','20'),

#### A masked pattern was here ####
'INSERT INTO SIMPLE_DERBY_TABLE ("kkey") VALUES (?)','200')

limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	0	0
PREHOOK: query: CREATE EXTERNAL TABLE ext_simple_derby_table
(
 kkey int
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "SIMPLE_DERBY_TABLE",
                "hive.sql.dbcp.maxActive" = "1"
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@ext_simple_derby_table
POSTHOOK: query: CREATE EXTERNAL TABLE ext_simple_derby_table
(
 kkey int
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "SIMPLE_DERBY_TABLE",
                "hive.sql.dbcp.maxActive" = "1"
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@ext_simple_derby_table
PREHOOK: query: select * from ext_simple_derby_table
PREHOOK: type: QUERY
PREHOOK: Input: default@ext_simple_derby_table
#### A masked pattern was here ####
POSTHOOK: query: select * from ext_simple_derby_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@ext_simple_derby_table
#### A masked pattern was here ####
20
200
PREHOOK: query: explain select * from ext_simple_derby_table where 100 < ext_simple_derby_table.kkey
PREHOOK: type: QUERY
PREHOOK: Input: default@ext_simple_derby_table
#### A masked pattern was here ####
POSTHOOK: query: explain select * from ext_simple_derby_table where 100 < ext_simple_derby_table.kkey
POSTHOOK: type: QUERY
POSTHOOK: Input: default@ext_simple_derby_table
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: ext_simple_derby_table
          properties:
            hive.sql.query SELECT "kkey"
FROM "SIMPLE_DERBY_TABLE"
WHERE 100 < "kkey"
            hive.sql.query.fieldNames kkey
            hive.sql.query.fieldTypes int
            hive.sql.query.split true
          Select Operator
            expressions: kkey (type: int)
            outputColumnNames: _col0
            ListSink

PREHOOK: query: select * from ext_simple_derby_table where 100 < ext_simple_derby_table.kkey
PREHOOK: type: QUERY
PREHOOK: Input: default@ext_simple_derby_table
#### A masked pattern was here ####
POSTHOOK: query: select * from ext_simple_derby_table where 100 < ext_simple_derby_table.kkey
POSTHOOK: type: QUERY
POSTHOOK: Input: default@ext_simple_derby_table
#### A masked pattern was here ####
200
PREHOOK: query: CREATE EXTERNAL TABLE tables
(
id bigint,
db_id bigint,
name STRING,
type STRING,
#### A masked pattern was here ####
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
"hive.sql.database.type" = "METASTORE",
"hive.sql.query" = "SELECT TBL_ID, DB_ID, TBL_NAME, TBL_TYPE, OWNER FROM TBLS",
#### A masked pattern was here ####
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tables
POSTHOOK: query: CREATE EXTERNAL TABLE tables
(
id bigint,
db_id bigint,
name STRING,
type STRING,
#### A masked pattern was here ####
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
"hive.sql.database.type" = "METASTORE",
"hive.sql.query" = "SELECT TBL_ID, DB_ID, TBL_NAME, TBL_TYPE, OWNER FROM TBLS",
#### A masked pattern was here ####
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tables
PREHOOK: query: CREATE EXTERNAL TABLE dbs
(
DB_ID bigint,
NAME STRING
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
"hive.sql.database.type" = "METASTORE",
"hive.sql.query" = "SELECT DB_ID, NAME FROM DBS"
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dbs
POSTHOOK: query: CREATE EXTERNAL TABLE dbs
(
DB_ID bigint,
NAME STRING
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
"hive.sql.database.type" = "METASTORE",
"hive.sql.query" = "SELECT DB_ID, NAME FROM DBS"
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dbs
PREHOOK: query: select tables.name as tn, dbs.NAME as dn, tables.type as t
from tables join dbs on (tables.db_id = dbs.DB_ID) WHERE tables.name IN ("src", "dbs", "tables") order by tn, dn, t
PREHOOK: type: QUERY
PREHOOK: Input: default@dbs
PREHOOK: Input: default@tables
#### A masked pattern was here ####
POSTHOOK: query: select tables.name as tn, dbs.NAME as dn, tables.type as t
from tables join dbs on (tables.db_id = dbs.DB_ID) WHERE tables.name IN ("src", "dbs", "tables") order by tn, dn, t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dbs
POSTHOOK: Input: default@tables
#### A masked pattern was here ####
dbs	default	EXTERNAL_TABLE
src	default	MANAGED_TABLE
tables	default	EXTERNAL_TABLE
Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain
select
  t1.name as a, t2.key as b
from
  (select 1 as db_id, tables.name from tables) t1
  join
  (select distinct key from src) t2
  on (t2.key-1) = t1.db_id
order by a,b
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@tables
#### A masked pattern was here ####
POSTHOOK: query: explain
select
  t1.name as a, t2.key as b
from
  (select 1 as db_id, tables.name from tables) t1
  join
  (select distinct key from src) t2
  on (t2.key-1) = t1.db_id
order by a,b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@tables
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (XPROD_EDGE), Reducer 5 (XPROD_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 5 <- Map 4 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tables
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: name (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      null sort order: 
                      sort order: 
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: src
                  filterExpr: ((UDFToDouble(key) - 1.0D) = 1.0D) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((UDFToDouble(key) - 1.0D) = 1.0D) (type: boolean)
                    Statistics: Num rows: 250 Data size: 21750 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: key (type: string)
                      minReductionHashAggr: 0.5
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 125 Data size: 10875 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 125 Data size: 10875 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 125 Data size: 34000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  null sort order: zz
                  sort order: ++
                  Statistics: Num rows: 125 Data size: 34000 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 125 Data size: 34000 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 125 Data size: 34000 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 125 Data size: 10875 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 125 Data size: 10875 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: string)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join MERGEJOIN[19][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select
  t1.name as a, t2.key as b
from
  (select 1 as db_id, tables.name from tables) t1
  join
  (select distinct key from src) t2
  on (t2.key-1) = t1.db_id
  where t1.name IN ("src", "dbs", "tables")
order by a,b
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@tables
#### A masked pattern was here ####
POSTHOOK: query: select
  t1.name as a, t2.key as b
from
  (select 1 as db_id, tables.name from tables) t1
  join
  (select distinct key from src) t2
  on (t2.key-1) = t1.db_id
  where t1.name IN ("src", "dbs", "tables")
order by a,b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@tables
#### A masked pattern was here ####
dbs	2
src	2
tables	2
PREHOOK: query: describe tables
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@tables
POSTHOOK: query: describe tables
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@tables
id                  	bigint              	from deserializer   
db_id               	bigint              	from deserializer   
name                	string              	from deserializer   
type                	string              	from deserializer   
#### A masked pattern was here ####
PREHOOK: query: FROM src

#### A masked pattern was here ####
'CREATE TABLE INSERT_TO_DERBY_TABLE (a BOOLEAN, b  INTEGER, c BIGINT, d FLOAT, e DOUBLE, f DATE, g VARCHAR(27),
                                  h VARCHAR(27), i CHAR(2), j TIMESTAMP, k DECIMAL(5,4), l SMALLINT, m SMALLINT)' )

limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: FROM src

#### A masked pattern was here ####
'CREATE TABLE INSERT_TO_DERBY_TABLE (a BOOLEAN, b  INTEGER, c BIGINT, d FLOAT, e DOUBLE, f DATE, g VARCHAR(27),
                                  h VARCHAR(27), i CHAR(2), j TIMESTAMP, k DECIMAL(5,4), l SMALLINT, m SMALLINT)' )

limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0
PREHOOK: query: CREATE EXTERNAL TABLE insert_to_ext_derby_table
(
 a BOOLEAN,
 b INTEGER,
 c BIGINT,
 d FLOAT,
 e DOUBLE,
 f DATE,
 g VARCHAR(27),
 h STRING,
 i CHAR(2),
 j TIMESTAMP,
 k DECIMAL(5,4),
 l TINYINT,
 m SMALLINT
 )
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "INSERT_TO_DERBY_TABLE",
                "hive.sql.dbcp.maxActive" = "1"
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@insert_to_ext_derby_table
POSTHOOK: query: CREATE EXTERNAL TABLE insert_to_ext_derby_table
(
 a BOOLEAN,
 b INTEGER,
 c BIGINT,
 d FLOAT,
 e DOUBLE,
 f DATE,
 g VARCHAR(27),
 h STRING,
 i CHAR(2),
 j TIMESTAMP,
 k DECIMAL(5,4),
 l TINYINT,
 m SMALLINT
 )
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "INSERT_TO_DERBY_TABLE",
                "hive.sql.dbcp.maxActive" = "1"
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@insert_to_ext_derby_table
PREHOOK: query: CREATE TABLE test_insert_tbl
(
 a BOOLEAN,
 b INTEGER,
 c BIGINT,
 d FLOAT,
 e DOUBLE,
 f DATE,
 g VARCHAR(27),
 h STRING,
 i CHAR(2),
 j TIMESTAMP,
 k DECIMAL(5,4),
 l TINYINT,
 m SMALLINT
 )
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_insert_tbl
POSTHOOK: query: CREATE TABLE test_insert_tbl
(
 a BOOLEAN,
 b INTEGER,
 c BIGINT,
 d FLOAT,
 e DOUBLE,
 f DATE,
 g VARCHAR(27),
 h STRING,
 i CHAR(2),
 j TIMESTAMP,
 k DECIMAL(5,4),
 l TINYINT,
 m SMALLINT
 )
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_insert_tbl
PREHOOK: query: INSERT INTO test_insert_tbl VALUES(true, 342, 8900, 9.63, 1099.9999, '2019-04-11', 'abcd', 'efgh', 'k', '2019-05-01 00:00:00', 1.8899, 1, 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test_insert_tbl
POSTHOOK: query: INSERT INTO test_insert_tbl VALUES(true, 342, 8900, 9.63, 1099.9999, '2019-04-11', 'abcd', 'efgh', 'k', '2019-05-01 00:00:00', 1.8899, 1, 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test_insert_tbl
POSTHOOK: Lineage: test_insert_tbl.a SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.b SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.c SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.d SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.e SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.f SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.g SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.h SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.i SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.j SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.k SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.l SCRIPT []
POSTHOOK: Lineage: test_insert_tbl.m SCRIPT []
PREHOOK: query: INSERT INTO insert_to_ext_derby_table VALUES(true, 10, 100, 2.63, 999.9999, '2019-01-11', 'test', 'test1', 'z', '2019-01-01 00:00:00', 1.7899, 1, 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@insert_to_ext_derby_table
POSTHOOK: query: INSERT INTO insert_to_ext_derby_table VALUES(true, 10, 100, 2.63, 999.9999, '2019-01-11', 'test', 'test1', 'z', '2019-01-01 00:00:00', 1.7899, 1, 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@insert_to_ext_derby_table
PREHOOK: query: INSERT INTO insert_to_ext_derby_table select * from test_insert_tbl
PREHOOK: type: QUERY
PREHOOK: Input: default@test_insert_tbl
PREHOOK: Output: default@insert_to_ext_derby_table
POSTHOOK: query: INSERT INTO insert_to_ext_derby_table select * from test_insert_tbl
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_insert_tbl
POSTHOOK: Output: default@insert_to_ext_derby_table
PREHOOK: query: select * from insert_to_ext_derby_table
PREHOOK: type: QUERY
PREHOOK: Input: default@insert_to_ext_derby_table
#### A masked pattern was here ####
POSTHOOK: query: select * from insert_to_ext_derby_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@insert_to_ext_derby_table
#### A masked pattern was here ####
true	10	100	2.63	999.9999	2019-01-11	test	test1	z 	2019-01-01 00:00:00	1.7899	1	2
true	342	8900	9.63	1099.9999	2019-04-11	abcd	efgh	k 	2019-05-01 00:00:00	1.8899	1	2
PREHOOK: query: INSERT INTO insert_to_ext_derby_table VALUES(false, 324, 53465, 2.6453, 599.9999, '2019-04-11', 'fgeg', 'asda', 'k', '2019-03-01 10:00:00', 1.7899, 1, 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@insert_to_ext_derby_table
POSTHOOK: query: INSERT INTO insert_to_ext_derby_table VALUES(false, 324, 53465, 2.6453, 599.9999, '2019-04-11', 'fgeg', 'asda', 'k', '2019-03-01 10:00:00', 1.7899, 1, 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@insert_to_ext_derby_table
PREHOOK: query: INSERT INTO insert_to_ext_derby_table VALUES(false, 10, 100, 2.63, 999.9999, '2019-11-11', 'test', 'test1', 'a', '2019-01-01 00:00:00', 1.7899, 1, 2),
                                         (true, 100, 1000, 2.632, 9999.99999, '2019-12-11', 'test_1', 'test1_1', 'b', '2019-02-01 01:00:01', 5.7899, 3, 4),
                                         (false, 10, 999, 23.632, 99999.99999, '2019-09-11', 'test_2', 'test1_2', 'c', '2019-03-01 11:00:01', 9.7899, 5, 6)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@insert_to_ext_derby_table
POSTHOOK: query: INSERT INTO insert_to_ext_derby_table VALUES(false, 10, 100, 2.63, 999.9999, '2019-11-11', 'test', 'test1', 'a', '2019-01-01 00:00:00', 1.7899, 1, 2),
                                         (true, 100, 1000, 2.632, 9999.99999, '2019-12-11', 'test_1', 'test1_1', 'b', '2019-02-01 01:00:01', 5.7899, 3, 4),
                                         (false, 10, 999, 23.632, 99999.99999, '2019-09-11', 'test_2', 'test1_2', 'c', '2019-03-01 11:00:01', 9.7899, 5, 6)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@insert_to_ext_derby_table
PREHOOK: query: INSERT INTO insert_to_ext_derby_table select * from test_insert_tbl
PREHOOK: type: QUERY
PREHOOK: Input: default@test_insert_tbl
PREHOOK: Output: default@insert_to_ext_derby_table
POSTHOOK: query: INSERT INTO insert_to_ext_derby_table select * from test_insert_tbl
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_insert_tbl
POSTHOOK: Output: default@insert_to_ext_derby_table
PREHOOK: query: select * from insert_to_ext_derby_table
PREHOOK: type: QUERY
PREHOOK: Input: default@insert_to_ext_derby_table
#### A masked pattern was here ####
POSTHOOK: query: select * from insert_to_ext_derby_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@insert_to_ext_derby_table
#### A masked pattern was here ####
true	10	100	2.63	999.9999	2019-01-11	test	test1	z 	2019-01-01 00:00:00	1.7899	1	2
true	342	8900	9.63	1099.9999	2019-04-11	abcd	efgh	k 	2019-05-01 00:00:00	1.8899	1	2
false	324	53465	2.6453	599.9999	2019-04-11	fgeg	asda	k 	2019-03-01 10:00:00	1.7899	1	2
false	10	100	2.63	999.9999	2019-11-11	test	test1	a 	2019-01-01 00:00:00	1.7899	1	2
true	100	1000	2.632	9999.99999	2019-12-11	test_1	test1_1	b 	2019-02-01 01:00:01	5.7899	3	4
false	10	999	23.632	99999.99999	2019-09-11	test_2	test1_2	c 	2019-03-01 11:00:01	9.7899	5	6
true	342	8900	9.63	1099.9999	2019-04-11	abcd	efgh	k 	2019-05-01 00:00:00	1.8899	1	2
