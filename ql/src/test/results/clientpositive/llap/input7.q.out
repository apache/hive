PREHOOK: query: CREATE TABLE dest1_n167(c1 DOUBLE, c2 INT) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1_n167
POSTHOOK: query: CREATE TABLE dest1_n167(c1 DOUBLE, c2 INT) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1_n167
PREHOOK: query: EXPLAIN
FROM src1
INSERT OVERWRITE TABLE dest1_n167 SELECT NULL, src1.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Output: default@dest1_n167
POSTHOOK: query: EXPLAIN
FROM src1
INSERT OVERWRITE TABLE dest1_n167 SELECT NULL, src1.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Output: default@dest1_n167
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src1
                  Statistics: Num rows: 25 Data size: 2150 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: null (type: double), UDFToInteger(key) (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 25 Data size: 108 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 25 Data size: 108 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.dest1_n167
                    Select Operator
                      expressions: _col0 (type: double), _col1 (type: int)
                      outputColumnNames: c1, c2
                      Statistics: Num rows: 25 Data size: 108 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(c1), max(c1), count(1), count(c1), compute_bit_vector_hll(c1), min(c2), max(c2), count(c2), compute_bit_vector_hll(c2)
                        minReductionHashAggr: 0.96
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                        Statistics: Num rows: 1 Data size: 336 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 336 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: double), _col1 (type: double), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 336 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'DOUBLE' (type: string), _col0 (type: double), _col1 (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1_n167

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1, c2
          Column Types: double, int
          Table: default.dest1_n167

PREHOOK: query: FROM src1
INSERT OVERWRITE TABLE dest1_n167 SELECT NULL, src1.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Output: default@dest1_n167
POSTHOOK: query: FROM src1
INSERT OVERWRITE TABLE dest1_n167 SELECT NULL, src1.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Output: default@dest1_n167
POSTHOOK: Lineage: dest1_n167.c1 EXPRESSION []
POSTHOOK: Lineage: dest1_n167.c2 EXPRESSION [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: SELECT dest1_n167.* FROM dest1_n167
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n167
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1_n167.* FROM dest1_n167
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n167
#### A masked pattern was here ####
NULL	238
NULL	NULL
NULL	311
NULL	NULL
NULL	NULL
NULL	NULL
NULL	255
NULL	278
NULL	98
NULL	NULL
NULL	NULL
NULL	NULL
NULL	401
NULL	150
NULL	273
NULL	224
NULL	369
NULL	66
NULL	128
NULL	213
NULL	146
NULL	406
NULL	NULL
NULL	NULL
NULL	NULL
