PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n17(key int, value string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n17
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n17(key int, value string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n17
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n17
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n17
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n17
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n17
PREHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_n17
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n17
POSTHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_n17
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n17
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part_n18 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_part_n18
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part_n18 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part_n18
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_n18 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n18
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_n18 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n18
POSTHOOK: Output: default@srcbucket_mapjoin_part_n18@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_n18 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n18@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_n18 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n18@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part_n18 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n18@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part_n18 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n18@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part_n18 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n18@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part_n18 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n18@ds=2008-04-08
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part_2_n15 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n15
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part_2_n15 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n15
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_2_n15 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n15
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_2_n15 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n15
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n15@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_2_n15 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n15@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_2_n15 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n15@ds=2008-04-08
PREHOOK: query: create table bucketmapjoin_hash_result_1_n6 (key bigint , value1 bigint, value2 bigint)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketmapjoin_hash_result_1_n6
POSTHOOK: query: create table bucketmapjoin_hash_result_1_n6 (key bigint , value1 bigint, value2 bigint)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketmapjoin_hash_result_1_n6
PREHOOK: query: create table bucketmapjoin_hash_result_2_n6 (key bigint , value1 bigint, value2 bigint)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketmapjoin_hash_result_2_n6
POSTHOOK: query: create table bucketmapjoin_hash_result_2_n6 (key bigint , value1 bigint, value2 bigint)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketmapjoin_hash_result_2_n6
PREHOOK: query: create table bucketmapjoin_tmp_result_n8 (key string , value1 string, value2 string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketmapjoin_tmp_result_n8
POSTHOOK: query: create table bucketmapjoin_tmp_result_n8 (key string , value1 string, value2 string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n8
PREHOOK: query: explain extended
insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(b)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain extended
insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(b)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                        tag: 0
                        value expressions: _col1 (type: string)
                        auto parallelism: true
            Execution mode: llap
            LLAP IO: no inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: srcbucket_mapjoin_n17
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket_mapjoin_n17
                    numFiles 2
                    numRows 0
                    rawDataSize 0
                    serialization.ddl struct srcbucket_mapjoin_n17 { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 2750
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket_mapjoin_n17
                      numFiles 2
                      numRows 0
                      rawDataSize 0
                      serialization.ddl struct srcbucket_mapjoin_n17 { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 2750
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin_n17
                  name: default.srcbucket_mapjoin_n17
            Truncated Path -> Alias:
              /srcbucket_mapjoin_n17 [a]
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                        tag: 1
                        value expressions: _col1 (type: string)
                        auto parallelism: true
            Execution mode: llap
            LLAP IO: no inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: srcbucket_mapjoin_n17
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket_mapjoin_n17
                    numFiles 2
                    numRows 0
                    rawDataSize 0
                    serialization.ddl struct srcbucket_mapjoin_n17 { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 2750
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket_mapjoin_n17
                      numFiles 2
                      numRows 0
                      rawDataSize 0
                      serialization.ddl struct srcbucket_mapjoin_n17 { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 2750
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin_n17
                  name: default.srcbucket_mapjoin_n17
            Truncated Path -> Alias:
              /srcbucket_mapjoin_n17 [b]
        Reducer 2 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col3
                Position of Big Table: 0
                Statistics: Num rows: 1 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToString(_col0) (type: string), _col1 (type: string), _col3 (type: string)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 206 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value1":"true","value2":"true"}}
                          bucket_count -1
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,value1,value2
                          columns.comments 
                          columns.types string:string:string
#### A masked pattern was here ####
                          name default.bucketmapjoin_tmp_result_n8
                          numFiles 0
                          numRows 0
                          rawDataSize 0
                          serialization.ddl struct bucketmapjoin_tmp_result_n8 { string key, string value1, string value2}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          totalSize 0
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.bucketmapjoin_tmp_result_n8
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                    outputColumnNames: key, value1, value2
                    Statistics: Num rows: 1 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: compute_stats(key, 'hll'), compute_stats(value1, 'hll'), compute_stats(value2, 'hll')
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1 Data size: 1320 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 1320 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
                        auto parallelism: false
        Reducer 3 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1), compute_stats(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 1320 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 1 Data size: 1320 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        columns _col0,_col1,_col2
                        columns.types struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>
                        escape.delim \
                        hive.serialization.extend.additional.nesting.levels true
                        serialization.escape.crlf true
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value1":"true","value2":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value1,value2
                columns.comments 
                columns.types string:string:string
#### A masked pattern was here ####
                name default.bucketmapjoin_tmp_result_n8
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct bucketmapjoin_tmp_result_n8 { string key, string value1, string value2}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.bucketmapjoin_tmp_result_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value1, value2
          Column Types: string, string, string
          Table: default.bucketmapjoin_tmp_result_n8
          Is Table Level Stats: true

PREHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(b)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n17
PREHOOK: Output: default@bucketmapjoin_tmp_result_n8
POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(b)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n17
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n8
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.key EXPRESSION [(srcbucket_mapjoin_n17)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.value1 SIMPLE [(srcbucket_mapjoin_n17)a.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.value2 SIMPLE [(srcbucket_mapjoin_n17)b.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select count(1) from bucketmapjoin_tmp_result_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n8
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from bucketmapjoin_tmp_result_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n8
#### A masked pattern was here ####
464
PREHOOK: query: insert overwrite table bucketmapjoin_hash_result_1_n6
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n8
PREHOOK: Output: default@bucketmapjoin_hash_result_1_n6
POSTHOOK: query: insert overwrite table bucketmapjoin_hash_result_1_n6
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n8
POSTHOOK: Output: default@bucketmapjoin_hash_result_1_n6
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n6.key EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n6.value1 EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:value1, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n6.value2 EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:value2, type:string, comment:null), ]
PREHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(b)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n17
PREHOOK: Output: default@bucketmapjoin_tmp_result_n8
POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(b)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n17
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n8
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.key EXPRESSION [(srcbucket_mapjoin_n17)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.value1 SIMPLE [(srcbucket_mapjoin_n17)a.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.value2 SIMPLE [(srcbucket_mapjoin_n17)b.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select count(1) from bucketmapjoin_tmp_result_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n8
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from bucketmapjoin_tmp_result_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n8
#### A masked pattern was here ####
464
PREHOOK: query: insert overwrite table bucketmapjoin_hash_result_2_n6
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n8
PREHOOK: Output: default@bucketmapjoin_hash_result_2_n6
POSTHOOK: query: insert overwrite table bucketmapjoin_hash_result_2_n6
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n8
POSTHOOK: Output: default@bucketmapjoin_hash_result_2_n6
POSTHOOK: Lineage: bucketmapjoin_hash_result_2_n6.key EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_2_n6.value1 EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:value1, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_2_n6.value2 EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:value2, type:string, comment:null), ]
PREHOOK: query: select a.key-b.key, a.value1-b.value1, a.value2-b.value2
from bucketmapjoin_hash_result_1_n6 a left outer join bucketmapjoin_hash_result_2_n6 b
on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_hash_result_1_n6
PREHOOK: Input: default@bucketmapjoin_hash_result_2_n6
#### A masked pattern was here ####
POSTHOOK: query: select a.key-b.key, a.value1-b.value1, a.value2-b.value2
from bucketmapjoin_hash_result_1_n6 a left outer join bucketmapjoin_hash_result_2_n6 b
on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_hash_result_1_n6
POSTHOOK: Input: default@bucketmapjoin_hash_result_2_n6
#### A masked pattern was here ####
0	0	0
PREHOOK: query: explain extended
insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(a)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain extended
insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(a)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                        tag: 0
                        value expressions: _col1 (type: string)
                        auto parallelism: true
            Execution mode: llap
            LLAP IO: no inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: srcbucket_mapjoin_n17
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket_mapjoin_n17
                    numFiles 2
                    numRows 0
                    rawDataSize 0
                    serialization.ddl struct srcbucket_mapjoin_n17 { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 2750
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket_mapjoin_n17
                      numFiles 2
                      numRows 0
                      rawDataSize 0
                      serialization.ddl struct srcbucket_mapjoin_n17 { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 2750
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin_n17
                  name: default.srcbucket_mapjoin_n17
            Truncated Path -> Alias:
              /srcbucket_mapjoin_n17 [a]
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                        tag: 1
                        value expressions: _col1 (type: string)
                        auto parallelism: true
            Execution mode: llap
            LLAP IO: no inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: srcbucket_mapjoin_n17
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket_mapjoin_n17
                    numFiles 2
                    numRows 0
                    rawDataSize 0
                    serialization.ddl struct srcbucket_mapjoin_n17 { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 2750
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket_mapjoin_n17
                      numFiles 2
                      numRows 0
                      rawDataSize 0
                      serialization.ddl struct srcbucket_mapjoin_n17 { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 2750
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin_n17
                  name: default.srcbucket_mapjoin_n17
            Truncated Path -> Alias:
              /srcbucket_mapjoin_n17 [b]
        Reducer 2 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col3
                Position of Big Table: 0
                Statistics: Num rows: 1 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToString(_col0) (type: string), _col1 (type: string), _col3 (type: string)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 206 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value1":"true","value2":"true"}}
                          bucket_count -1
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,value1,value2
                          columns.comments 
                          columns.types string:string:string
#### A masked pattern was here ####
                          name default.bucketmapjoin_tmp_result_n8
                          numFiles 1
                          numRows 464
                          rawDataSize 8519
                          serialization.ddl struct bucketmapjoin_tmp_result_n8 { string key, string value1, string value2}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          totalSize 8983
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.bucketmapjoin_tmp_result_n8
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                    outputColumnNames: key, value1, value2
                    Statistics: Num rows: 1 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: compute_stats(key, 'hll'), compute_stats(value1, 'hll'), compute_stats(value2, 'hll')
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1 Data size: 1320 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 1320 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col0 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
                        auto parallelism: false
        Reducer 3 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1), compute_stats(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 1320 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 1 Data size: 1320 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        columns _col0,_col1,_col2
                        columns.types struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>
                        escape.delim \
                        hive.serialization.extend.additional.nesting.levels true
                        serialization.escape.crlf true
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value1":"true","value2":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value1,value2
                columns.comments 
                columns.types string:string:string
#### A masked pattern was here ####
                name default.bucketmapjoin_tmp_result_n8
                numFiles 1
                numRows 464
                rawDataSize 8519
                serialization.ddl struct bucketmapjoin_tmp_result_n8 { string key, string value1, string value2}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 8983
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.bucketmapjoin_tmp_result_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value1, value2
          Column Types: string, string, string
          Table: default.bucketmapjoin_tmp_result_n8
          Is Table Level Stats: true

PREHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(a)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n17
PREHOOK: Output: default@bucketmapjoin_tmp_result_n8
POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(a)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n17
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n8
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.key EXPRESSION [(srcbucket_mapjoin_n17)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.value1 SIMPLE [(srcbucket_mapjoin_n17)a.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.value2 SIMPLE [(srcbucket_mapjoin_n17)b.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select count(1) from bucketmapjoin_tmp_result_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n8
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from bucketmapjoin_tmp_result_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n8
#### A masked pattern was here ####
464
PREHOOK: query: insert overwrite table bucketmapjoin_hash_result_1_n6
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n8
PREHOOK: Output: default@bucketmapjoin_hash_result_1_n6
POSTHOOK: query: insert overwrite table bucketmapjoin_hash_result_1_n6
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n8
POSTHOOK: Output: default@bucketmapjoin_hash_result_1_n6
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n6.key EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n6.value1 EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:value1, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n6.value2 EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:value2, type:string, comment:null), ]
PREHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(a)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n17
PREHOOK: Output: default@bucketmapjoin_tmp_result_n8
POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n8
select /*+mapjoin(a)*/ a.key, a.value, b.value
from srcbucket_mapjoin_n17 a join srcbucket_mapjoin_n17 b
on a.key=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n17
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n8
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.key EXPRESSION [(srcbucket_mapjoin_n17)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.value1 SIMPLE [(srcbucket_mapjoin_n17)a.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n8.value2 SIMPLE [(srcbucket_mapjoin_n17)b.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select count(1) from bucketmapjoin_tmp_result_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n8
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from bucketmapjoin_tmp_result_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n8
#### A masked pattern was here ####
464
PREHOOK: query: insert overwrite table bucketmapjoin_hash_result_2_n6
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n8
PREHOOK: Output: default@bucketmapjoin_hash_result_2_n6
POSTHOOK: query: insert overwrite table bucketmapjoin_hash_result_2_n6
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n8
POSTHOOK: Output: default@bucketmapjoin_hash_result_2_n6
POSTHOOK: Lineage: bucketmapjoin_hash_result_2_n6.key EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_2_n6.value1 EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:value1, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_2_n6.value2 EXPRESSION [(bucketmapjoin_tmp_result_n8)bucketmapjoin_tmp_result_n8.FieldSchema(name:value2, type:string, comment:null), ]
PREHOOK: query: select a.key-b.key, a.value1-b.value1, a.value2-b.value2
from bucketmapjoin_hash_result_1_n6 a left outer join bucketmapjoin_hash_result_2_n6 b
on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_hash_result_1_n6
PREHOOK: Input: default@bucketmapjoin_hash_result_2_n6
#### A masked pattern was here ####
POSTHOOK: query: select a.key-b.key, a.value1-b.value1, a.value2-b.value2
from bucketmapjoin_hash_result_1_n6 a left outer join bucketmapjoin_hash_result_2_n6 b
on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_hash_result_1_n6
POSTHOOK: Input: default@bucketmapjoin_hash_result_2_n6
#### A masked pattern was here ####
0	0	0
