PREHOOK: query: create table TJOIN1_txt (RNUM int , C1 int, C2 int)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN1_txt
POSTHOOK: query: create table TJOIN1_txt (RNUM int , C1 int, C2 int)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN1_txt
PREHOOK: query: create table TJOIN2_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN2_txt
POSTHOOK: query: create table TJOIN2_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN2_txt
PREHOOK: query: create table if not exists TJOIN3_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN3_txt
POSTHOOK: query: create table if not exists TJOIN3_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN3_txt
PREHOOK: query: create table TJOIN4_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN4_txt
POSTHOOK: query: create table TJOIN4_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN4_txt
PREHOOK: query: load data local inpath '../../data/files/TJOIN1' into table TJOIN1_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tjoin1_txt
POSTHOOK: query: load data local inpath '../../data/files/TJOIN1' into table TJOIN1_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tjoin1_txt
PREHOOK: query: load data local inpath '../../data/files/TJOIN2' into table TJOIN2_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tjoin2_txt
POSTHOOK: query: load data local inpath '../../data/files/TJOIN2' into table TJOIN2_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tjoin2_txt
PREHOOK: query: load data local inpath '../../data/files/TJOIN3' into table TJOIN3_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tjoin3_txt
POSTHOOK: query: load data local inpath '../../data/files/TJOIN3' into table TJOIN3_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tjoin3_txt
PREHOOK: query: load data local inpath '../../data/files/TJOIN4' into table TJOIN4_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tjoin4_txt
POSTHOOK: query: load data local inpath '../../data/files/TJOIN4' into table TJOIN4_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tjoin4_txt
PREHOOK: query: create table TJOIN1_n0 stored as orc AS SELECT * FROM TJOIN1_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tjoin1_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN1_n0
POSTHOOK: query: create table TJOIN1_n0 stored as orc AS SELECT * FROM TJOIN1_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tjoin1_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN1_n0
POSTHOOK: Lineage: tjoin1_n0.c1 SIMPLE [(tjoin1_txt)tjoin1_txt.FieldSchema(name:c1, type:int, comment:null), ]
POSTHOOK: Lineage: tjoin1_n0.c2 SIMPLE [(tjoin1_txt)tjoin1_txt.FieldSchema(name:c2, type:int, comment:null), ]
POSTHOOK: Lineage: tjoin1_n0.rnum SIMPLE [(tjoin1_txt)tjoin1_txt.FieldSchema(name:rnum, type:int, comment:null), ]
PREHOOK: query: create table TJOIN2_n0 stored as orc AS SELECT * FROM TJOIN2_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tjoin2_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN2_n0
POSTHOOK: query: create table TJOIN2_n0 stored as orc AS SELECT * FROM TJOIN2_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tjoin2_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN2_n0
POSTHOOK: Lineage: tjoin2_n0.c1 SIMPLE [(tjoin2_txt)tjoin2_txt.FieldSchema(name:c1, type:int, comment:null), ]
POSTHOOK: Lineage: tjoin2_n0.c2 SIMPLE [(tjoin2_txt)tjoin2_txt.FieldSchema(name:c2, type:char(2), comment:null), ]
POSTHOOK: Lineage: tjoin2_n0.rnum SIMPLE [(tjoin2_txt)tjoin2_txt.FieldSchema(name:rnum, type:int, comment:null), ]
PREHOOK: query: create table TJOIN3 stored as orc AS SELECT * FROM TJOIN3_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tjoin3_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN3
POSTHOOK: query: create table TJOIN3 stored as orc AS SELECT * FROM TJOIN3_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tjoin3_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN3
POSTHOOK: Lineage: tjoin3.c1 SIMPLE [(tjoin3_txt)tjoin3_txt.FieldSchema(name:c1, type:int, comment:null), ]
POSTHOOK: Lineage: tjoin3.c2 SIMPLE [(tjoin3_txt)tjoin3_txt.FieldSchema(name:c2, type:char(2), comment:null), ]
POSTHOOK: Lineage: tjoin3.rnum SIMPLE [(tjoin3_txt)tjoin3_txt.FieldSchema(name:rnum, type:int, comment:null), ]
PREHOOK: query: create table TJOIN4 stored as orc AS SELECT * FROM TJOIN4_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tjoin4_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN4
POSTHOOK: query: create table TJOIN4 stored as orc AS SELECT * FROM TJOIN4_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tjoin4_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN4
POSTHOOK: Lineage: tjoin4.c1 SIMPLE [(tjoin4_txt)tjoin4_txt.FieldSchema(name:c1, type:int, comment:null), ]
POSTHOOK: Lineage: tjoin4.c2 SIMPLE [(tjoin4_txt)tjoin4_txt.FieldSchema(name:c2, type:char(2), comment:null), ]
POSTHOOK: Lineage: tjoin4.rnum SIMPLE [(tjoin4_txt)tjoin4_txt.FieldSchema(name:rnum, type:int, comment:null), ]
PREHOOK: query: explain vectorization detail formatted
select tj1rnum, tj2rnum, tjoin3.rnum as rnumt3 from
   (select tjoin1_n0.rnum tj1rnum, tjoin2_n0.rnum tj2rnum, tjoin2_n0.c1 tj2c1 from tjoin1_n0 left outer join tjoin2_n0 on tjoin1_n0.c1 = tjoin2_n0.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@tjoin1_n0
PREHOOK: Input: default@tjoin2_n0
PREHOOK: Input: default@tjoin3
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail formatted
select tj1rnum, tj2rnum, tjoin3.rnum as rnumt3 from
   (select tjoin1_n0.rnum tj1rnum, tjoin2_n0.rnum tj2rnum, tjoin2_n0.c1 tj2c1 from tjoin1_n0 left outer join tjoin2_n0 on tjoin1_n0.c1 = tjoin2_n0.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tjoin1_n0
POSTHOOK: Input: default@tjoin2_n0
POSTHOOK: Input: default@tjoin3
#### A masked pattern was here ####
{"CBOPlan":"###Masked###","optimizedSQL":"SELECT `t`.`rnum` AS `tj1rnum`, `t1`.`rnum` AS `tj2rnum`, `t3`.`rnum` AS `rnumt3`\nFROM (SELECT `rnum`, `c1`\nFROM `default`.`tjoin1_n0`) AS `t`\nLEFT JOIN (SELECT `rnum`, `c1`\nFROM `default`.`tjoin2_n0`\nWHERE `c1` IS NOT NULL) AS `t1` ON `t`.`c1` = `t1`.`c1`\nLEFT JOIN (SELECT `rnum`, `c1`\nFROM `default`.`tjoin3`\nWHERE `c1` IS NOT NULL) AS `t3` ON `t1`.`c1` = `t3`.`c1`","PLAN VECTORIZATION":{"enabled":true,"enabledConditionsMet":["hive.vectorized.execution.enabled IS true"]},"cboInfo":"Plan optimized by CBO.","STAGE DEPENDENCIES":{"Stage-1":{"ROOT STAGE":"TRUE"},"Stage-0":{"DEPENDENT STAGES":"Stage-1"}},"STAGE PLANS":{"Stage-1":{"Tez":{"DagId:":"###Masked###","Edges:":{"Map 1":[{"parent":"Map 2","type":"BROADCAST_EDGE"},{"parent":"Map 3","type":"BROADCAST_EDGE"}]},"DagName:":"###Masked###","Vertices:":{"Map 1":{"Map Operator Tree:":[{"TableScan":{"alias:":"tjoin1_n0","columns:":["rnum","c1"],"database:":"default","Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","table:":"tjoin1_n0","TableScan Vectorization:":{"native:":"true","vectorizationSchemaColumns:":"[0:rnum:int, 1:c1:int, 2:c2:int, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]"},"isTempTable:":"false","OperatorId:":"TS_0","children":{"Select Operator":{"expressions:":"rnum (type: int), c1 (type: int)","columnExprMap:":{"_col0":"rnum","_col1":"c1"},"outputColumnNames:":["_col0","_col1"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[0, 1]"},"Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_40","children":{"Map Join Operator":{"columnExprMap:":{"_col0":"0:_col0","_col2":"1:_col0","_col3":"1:_col1"},"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col1 (type: int)","1":"_col1 (type: int)"},"Map Join Vectorization:":{"bigTableKeyColumns:":["1:int"],"bigTableRetainColumnNums:":"[0]","bigTableValueColumns:":["0:int"],"className:":"VectorMapJoinOuterLongOperator","native:":"true","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","hive.execution.engine tez IN [tez, spark] IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"outerSmallTableKeyMapping:":["1 -> 5"],"projectedOutput:":["0:int","4:int","5:int"],"smallTableValueMapping:":["4:int"],"hashTableImplementationType:":"OPTIMIZED"},"outputColumnNames:":["_col0","_col2","_col3"],"input vertices:":{"1":"Map 2"},"Statistics:":"Num rows: 4 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_41","children":{"Map Join Operator":{"columnExprMap:":{"_col0":"0:_col0","_col2":"0:_col2","_col4":"1:_col0"},"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col3 (type: int)","1":"_col1 (type: int)"},"Map Join Vectorization:":{"bigTableKeyColumns:":["5:int"],"bigTableRetainColumnNums:":"[0, 4]","bigTableValueColumns:":["0:int","4:int"],"className:":"VectorMapJoinOuterLongOperator","native:":"true","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","hive.execution.engine tez IN [tez, spark] IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"projectedOutput:":["0:int","4:int","6:int"],"smallTableValueMapping:":["6:int"],"hashTableImplementationType:":"OPTIMIZED"},"outputColumnNames:":["_col0","_col2","_col4"],"input vertices:":{"1":"Map 3"},"Statistics:":"Num rows: 4 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_42","children":{"Select Operator":{"expressions:":"_col0 (type: int), _col2 (type: int), _col4 (type: int)","columnExprMap:":{"_col0":"_col0","_col1":"_col2","_col2":"_col4"},"outputColumnNames:":["_col0","_col1","_col2"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[0, 4, 6]"},"Statistics:":"Num rows: 4 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_43","children":{"File Output Operator":{"compressed:":"false","File Sink Vectorization:":{"className:":"VectorFileSinkOperator","native:":"false"},"Statistics:":"Num rows: 4 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE","table:":{"input format:":"org.apache.hadoop.mapred.SequenceFileInputFormat","output format:":"org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat","serde:":"org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"},"OperatorId:":"FS_44"}}}}}}}}}}}}],"Execution mode:":"vectorized, llap","LLAP IO:":"all inputs","Map Vectorization:":{"enabled:":"true","enabledConditionsMet:":["hive.vectorized.use.vectorized.input.format IS true"],"inputFormatFeatureSupport:":"[DECIMAL_64]","featureSupportInUse:":"[DECIMAL_64]","inputFileFormats:":["org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"],"allNative:":"false","usesVectorUDFAdaptor:":"false","vectorized:":"true","rowBatchContext:":{"dataColumnCount:":"3","includeColumns:":"[0, 1]","dataColumns:":["rnum:int","c1:int","c2:int"],"partitionColumnCount:":"0","scratchColumnTypeNames:":"[bigint, bigint, bigint]"}}},"Map 2":{"Map Operator Tree:":[{"TableScan":{"alias:":"tjoin2_n0","columns:":["rnum","c1"],"database:":"default","filterExpr:":"c1 is not null (type: boolean)","Statistics:":"Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE","table:":"tjoin2_n0","TableScan Vectorization:":{"native:":"true","vectorizationSchemaColumns:":"[0:rnum:int, 1:c1:int, 2:c2:char(2), 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]"},"isTempTable:":"false","OperatorId:":"TS_2","children":{"Filter Operator":{"Filter Vectorization:":{"className:":"VectorFilterOperator","native:":"true","predicateExpression:":"SelectColumnIsNotNull(col 1:int)"},"predicate:":"c1 is not null (type: boolean)","Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_34","children":{"Select Operator":{"expressions:":"rnum (type: int), c1 (type: int)","columnExprMap:":{"_col0":"rnum","_col1":"c1"},"outputColumnNames:":["_col0","_col1"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[0, 1]"},"Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_35","children":{"Reduce Output Operator":{"columnExprMap:":{"KEY.reducesinkkey0":"_col1","VALUE._col0":"_col0"},"key expressions:":"_col1 (type: int)","sort order:":"+","Map-reduce partition columns:":"_col1 (type: int)","Reduce Sink Vectorization:":{"className:":"VectorReduceSinkLongOperator","keyColumns:":["1:int"],"native:":"true","nativeConditionsMet:":["hive.vectorized.execution.reducesink.new.enabled IS true","hive.execution.engine tez IN [tez, spark] IS true","No PTF TopN IS true","No DISTINCT columns IS true","BinarySortableSerDe for keys IS true","LazyBinarySerDe for values IS true"],"valueColumns:":["0:int"]},"Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","value expressions:":"_col0 (type: int)","OperatorId:":"RS_36","outputname:":"Map 1","outputOperator:":["TS_0"]}}}}}}}}],"Execution mode:":"vectorized, llap","LLAP IO:":"all inputs","Map Vectorization:":{"enabled:":"true","enabledConditionsMet:":["hive.vectorized.use.vectorized.input.format IS true"],"inputFormatFeatureSupport:":"[DECIMAL_64]","featureSupportInUse:":"[DECIMAL_64]","inputFileFormats:":["org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"],"allNative:":"true","usesVectorUDFAdaptor:":"false","vectorized:":"true","rowBatchContext:":{"dataColumnCount:":"3","includeColumns:":"[0, 1]","dataColumns:":["rnum:int","c1:int","c2:char(2)"],"partitionColumnCount:":"0","scratchColumnTypeNames:":"[]"}}},"Map 3":{"Map Operator Tree:":[{"TableScan":{"alias:":"tjoin3","columns:":["rnum","c1"],"database:":"default","filterExpr:":"c1 is not null (type: boolean)","Statistics:":"Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE","table:":"tjoin3","TableScan Vectorization:":{"native:":"true","vectorizationSchemaColumns:":"[0:rnum:int, 1:c1:int, 2:c2:char(2), 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]"},"isTempTable:":"false","OperatorId:":"TS_5","children":{"Filter Operator":{"Filter Vectorization:":{"className:":"VectorFilterOperator","native:":"true","predicateExpression:":"SelectColumnIsNotNull(col 1:int)"},"predicate:":"c1 is not null (type: boolean)","Statistics:":"Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_37","children":{"Select Operator":{"expressions:":"rnum (type: int), c1 (type: int)","columnExprMap:":{"_col0":"rnum","_col1":"c1"},"outputColumnNames:":["_col0","_col1"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[0, 1]"},"Statistics:":"Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_38","children":{"Reduce Output Operator":{"columnExprMap:":{"KEY.reducesinkkey0":"_col1","VALUE._col0":"_col0"},"key expressions:":"_col1 (type: int)","sort order:":"+","Map-reduce partition columns:":"_col1 (type: int)","Reduce Sink Vectorization:":{"className:":"VectorReduceSinkLongOperator","keyColumns:":["1:int"],"native:":"true","nativeConditionsMet:":["hive.vectorized.execution.reducesink.new.enabled IS true","hive.execution.engine tez IN [tez, spark] IS true","No PTF TopN IS true","No DISTINCT columns IS true","BinarySortableSerDe for keys IS true","LazyBinarySerDe for values IS true"],"valueColumns:":["0:int"]},"Statistics:":"Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE","value expressions:":"_col0 (type: int)","OperatorId:":"RS_39","outputname:":"Map 1","outputOperator:":["TS_0"]}}}}}}}}],"Execution mode:":"vectorized, llap","LLAP IO:":"all inputs","Map Vectorization:":{"enabled:":"true","enabledConditionsMet:":["hive.vectorized.use.vectorized.input.format IS true"],"inputFormatFeatureSupport:":"[DECIMAL_64]","featureSupportInUse:":"[DECIMAL_64]","inputFileFormats:":["org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"],"allNative:":"true","usesVectorUDFAdaptor:":"false","vectorized:":"true","rowBatchContext:":{"dataColumnCount:":"3","includeColumns:":"[0, 1]","dataColumns:":["rnum:int","c1:int","c2:char(2)"],"partitionColumnCount:":"0","scratchColumnTypeNames:":"[]"}}}}}},"Stage-0":{"Fetch Operator":{"limit:":"-1","Processor Tree:":{"ListSink":{"OperatorId:":"LIST_SINK_45"}}}}}}
PREHOOK: query: select tj1rnum, tj2rnum, tjoin3.rnum as rnumt3 from
   (select tjoin1_n0.rnum tj1rnum, tjoin2_n0.rnum tj2rnum, tjoin2_n0.c1 tj2c1 from tjoin1_n0 left outer join tjoin2_n0 on tjoin1_n0.c1 = tjoin2_n0.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@tjoin1_n0
PREHOOK: Input: default@tjoin2_n0
PREHOOK: Input: default@tjoin3
#### A masked pattern was here ####
POSTHOOK: query: select tj1rnum, tj2rnum, tjoin3.rnum as rnumt3 from
   (select tjoin1_n0.rnum tj1rnum, tjoin2_n0.rnum tj2rnum, tjoin2_n0.c1 tj2c1 from tjoin1_n0 left outer join tjoin2_n0 on tjoin1_n0.c1 = tjoin2_n0.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tjoin1_n0
POSTHOOK: Input: default@tjoin2_n0
POSTHOOK: Input: default@tjoin3
#### A masked pattern was here ####
0	0	0
0	3	0
1	NULL	NULL
2	NULL	NULL
PREHOOK: query: explain vectorization detail formatted
select tj1rnum, tj2rnum as rnumt3 from
   (select tjoin1_n0.rnum tj1rnum, tjoin2_n0.rnum tj2rnum, tjoin2_n0.c1 tj2c1 from tjoin1_n0 left outer join tjoin2_n0 on tjoin1_n0.c1 = tjoin2_n0.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@tjoin1_n0
PREHOOK: Input: default@tjoin2_n0
PREHOOK: Input: default@tjoin3
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail formatted
select tj1rnum, tj2rnum as rnumt3 from
   (select tjoin1_n0.rnum tj1rnum, tjoin2_n0.rnum tj2rnum, tjoin2_n0.c1 tj2c1 from tjoin1_n0 left outer join tjoin2_n0 on tjoin1_n0.c1 = tjoin2_n0.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tjoin1_n0
POSTHOOK: Input: default@tjoin2_n0
POSTHOOK: Input: default@tjoin3
#### A masked pattern was here ####
{"CBOPlan":"###Masked###","optimizedSQL":"SELECT `t`.`rnum` AS `tj1rnum`, `t1`.`rnum` AS `rnumt3`\nFROM (SELECT `rnum`, `c1`\nFROM `default`.`tjoin1_n0`) AS `t`\nLEFT JOIN (SELECT `rnum`, `c1`\nFROM `default`.`tjoin2_n0`\nWHERE `c1` IS NOT NULL) AS `t1` ON `t`.`c1` = `t1`.`c1`\nLEFT JOIN (SELECT `c1`\nFROM `default`.`tjoin3`\nWHERE `c1` IS NOT NULL) AS `t3` ON `t1`.`c1` = `t3`.`c1`","PLAN VECTORIZATION":{"enabled":true,"enabledConditionsMet":["hive.vectorized.execution.enabled IS true"]},"cboInfo":"Plan optimized by CBO.","STAGE DEPENDENCIES":{"Stage-1":{"ROOT STAGE":"TRUE"},"Stage-0":{"DEPENDENT STAGES":"Stage-1"}},"STAGE PLANS":{"Stage-1":{"Tez":{"DagId:":"###Masked###","Edges:":{"Map 1":[{"parent":"Map 2","type":"BROADCAST_EDGE"},{"parent":"Map 3","type":"BROADCAST_EDGE"}]},"DagName:":"###Masked###","Vertices:":{"Map 1":{"Map Operator Tree:":[{"TableScan":{"alias:":"tjoin1_n0","columns:":["rnum","c1"],"database:":"default","Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","table:":"tjoin1_n0","TableScan Vectorization:":{"native:":"true","vectorizationSchemaColumns:":"[0:rnum:int, 1:c1:int, 2:c2:int, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]"},"isTempTable:":"false","OperatorId:":"TS_0","children":{"Select Operator":{"expressions:":"rnum (type: int), c1 (type: int)","columnExprMap:":{"_col0":"rnum","_col1":"c1"},"outputColumnNames:":["_col0","_col1"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[0, 1]"},"Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_40","children":{"Map Join Operator":{"columnExprMap:":{"_col0":"0:_col0","_col2":"1:_col0","_col3":"1:_col1"},"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col1 (type: int)","1":"_col1 (type: int)"},"Map Join Vectorization:":{"bigTableKeyColumns:":["1:int"],"bigTableRetainColumnNums:":"[0]","bigTableValueColumns:":["0:int"],"className:":"VectorMapJoinOuterLongOperator","native:":"true","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","hive.execution.engine tez IN [tez, spark] IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"outerSmallTableKeyMapping:":["1 -> 5"],"projectedOutput:":["0:int","4:int","5:int"],"smallTableValueMapping:":["4:int"],"hashTableImplementationType:":"OPTIMIZED"},"outputColumnNames:":["_col0","_col2","_col3"],"input vertices:":{"1":"Map 2"},"Statistics:":"Num rows: 4 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_41","children":{"Map Join Operator":{"columnExprMap:":{"_col0":"0:_col0","_col2":"0:_col2"},"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col3 (type: int)","1":"_col0 (type: int)"},"Map Join Vectorization:":{"bigTableKeyColumns:":["5:int"],"bigTableRetainColumnNums:":"[0, 4]","bigTableValueColumns:":["0:int","4:int"],"className:":"VectorMapJoinOuterLongOperator","native:":"true","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","hive.execution.engine tez IN [tez, spark] IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"projectedOutput:":["0:int","4:int"],"hashTableImplementationType:":"OPTIMIZED"},"outputColumnNames:":["_col0","_col2"],"input vertices:":{"1":"Map 3"},"Statistics:":"Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_42","children":{"Select Operator":{"expressions:":"_col0 (type: int), _col2 (type: int)","columnExprMap:":{"_col0":"_col0","_col1":"_col2"},"outputColumnNames:":["_col0","_col1"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[0, 4]"},"Statistics:":"Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_43","children":{"File Output Operator":{"compressed:":"false","File Sink Vectorization:":{"className:":"VectorFileSinkOperator","native:":"false"},"Statistics:":"Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE","table:":{"input format:":"org.apache.hadoop.mapred.SequenceFileInputFormat","output format:":"org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat","serde:":"org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"},"OperatorId:":"FS_44"}}}}}}}}}}}}],"Execution mode:":"vectorized, llap","LLAP IO:":"all inputs","Map Vectorization:":{"enabled:":"true","enabledConditionsMet:":["hive.vectorized.use.vectorized.input.format IS true"],"inputFormatFeatureSupport:":"[DECIMAL_64]","featureSupportInUse:":"[DECIMAL_64]","inputFileFormats:":["org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"],"allNative:":"false","usesVectorUDFAdaptor:":"false","vectorized:":"true","rowBatchContext:":{"dataColumnCount:":"3","includeColumns:":"[0, 1]","dataColumns:":["rnum:int","c1:int","c2:int"],"partitionColumnCount:":"0","scratchColumnTypeNames:":"[bigint, bigint]"}}},"Map 2":{"Map Operator Tree:":[{"TableScan":{"alias:":"tjoin2_n0","columns:":["rnum","c1"],"database:":"default","filterExpr:":"c1 is not null (type: boolean)","Statistics:":"Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE","table:":"tjoin2_n0","TableScan Vectorization:":{"native:":"true","vectorizationSchemaColumns:":"[0:rnum:int, 1:c1:int, 2:c2:char(2), 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]"},"isTempTable:":"false","OperatorId:":"TS_2","children":{"Filter Operator":{"Filter Vectorization:":{"className:":"VectorFilterOperator","native:":"true","predicateExpression:":"SelectColumnIsNotNull(col 1:int)"},"predicate:":"c1 is not null (type: boolean)","Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_34","children":{"Select Operator":{"expressions:":"rnum (type: int), c1 (type: int)","columnExprMap:":{"_col0":"rnum","_col1":"c1"},"outputColumnNames:":["_col0","_col1"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[0, 1]"},"Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_35","children":{"Reduce Output Operator":{"columnExprMap:":{"KEY.reducesinkkey0":"_col1","VALUE._col0":"_col0"},"key expressions:":"_col1 (type: int)","sort order:":"+","Map-reduce partition columns:":"_col1 (type: int)","Reduce Sink Vectorization:":{"className:":"VectorReduceSinkLongOperator","keyColumns:":["1:int"],"native:":"true","nativeConditionsMet:":["hive.vectorized.execution.reducesink.new.enabled IS true","hive.execution.engine tez IN [tez, spark] IS true","No PTF TopN IS true","No DISTINCT columns IS true","BinarySortableSerDe for keys IS true","LazyBinarySerDe for values IS true"],"valueColumns:":["0:int"]},"Statistics:":"Num rows: 3 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","value expressions:":"_col0 (type: int)","OperatorId:":"RS_36","outputname:":"Map 1","outputOperator:":["TS_0"]}}}}}}}}],"Execution mode:":"vectorized, llap","LLAP IO:":"all inputs","Map Vectorization:":{"enabled:":"true","enabledConditionsMet:":["hive.vectorized.use.vectorized.input.format IS true"],"inputFormatFeatureSupport:":"[DECIMAL_64]","featureSupportInUse:":"[DECIMAL_64]","inputFileFormats:":["org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"],"allNative:":"true","usesVectorUDFAdaptor:":"false","vectorized:":"true","rowBatchContext:":{"dataColumnCount:":"3","includeColumns:":"[0, 1]","dataColumns:":["rnum:int","c1:int","c2:char(2)"],"partitionColumnCount:":"0","scratchColumnTypeNames:":"[]"}}},"Map 3":{"Map Operator Tree:":[{"TableScan":{"alias:":"tjoin3","columns:":["c1"],"database:":"default","filterExpr:":"c1 is not null (type: boolean)","Statistics:":"Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","table:":"tjoin3","TableScan Vectorization:":{"native:":"true","vectorizationSchemaColumns:":"[0:rnum:int, 1:c1:int, 2:c2:char(2), 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]"},"isTempTable:":"false","OperatorId:":"TS_5","children":{"Filter Operator":{"Filter Vectorization:":{"className:":"VectorFilterOperator","native:":"true","predicateExpression:":"SelectColumnIsNotNull(col 1:int)"},"predicate:":"c1 is not null (type: boolean)","Statistics:":"Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_37","children":{"Select Operator":{"expressions:":"c1 (type: int)","columnExprMap:":{"_col0":"c1"},"outputColumnNames:":["_col0"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[1]"},"Statistics:":"Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_38","children":{"Reduce Output Operator":{"columnExprMap:":{"KEY.reducesinkkey0":"_col0"},"key expressions:":"_col0 (type: int)","sort order:":"+","Map-reduce partition columns:":"_col0 (type: int)","Reduce Sink Vectorization:":{"className:":"VectorReduceSinkLongOperator","keyColumns:":["1:int"],"native:":"true","nativeConditionsMet:":["hive.vectorized.execution.reducesink.new.enabled IS true","hive.execution.engine tez IN [tez, spark] IS true","No PTF TopN IS true","No DISTINCT columns IS true","BinarySortableSerDe for keys IS true","LazyBinarySerDe for values IS true"]},"Statistics:":"Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"RS_39","outputname:":"Map 1","outputOperator:":["TS_0"]}}}}}}}}],"Execution mode:":"vectorized, llap","LLAP IO:":"all inputs","Map Vectorization:":{"enabled:":"true","enabledConditionsMet:":["hive.vectorized.use.vectorized.input.format IS true"],"inputFormatFeatureSupport:":"[DECIMAL_64]","featureSupportInUse:":"[DECIMAL_64]","inputFileFormats:":["org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"],"allNative:":"true","usesVectorUDFAdaptor:":"false","vectorized:":"true","rowBatchContext:":{"dataColumnCount:":"3","includeColumns:":"[1]","dataColumns:":["rnum:int","c1:int","c2:char(2)"],"partitionColumnCount:":"0","scratchColumnTypeNames:":"[]"}}}}}},"Stage-0":{"Fetch Operator":{"limit:":"-1","Processor Tree:":{"ListSink":{"OperatorId:":"LIST_SINK_45"}}}}}}
PREHOOK: query: select tj1rnum, tj2rnum as rnumt3 from
   (select tjoin1_n0.rnum tj1rnum, tjoin2_n0.rnum tj2rnum, tjoin2_n0.c1 tj2c1 from tjoin1_n0 left outer join tjoin2_n0 on tjoin1_n0.c1 = tjoin2_n0.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@tjoin1_n0
PREHOOK: Input: default@tjoin2_n0
PREHOOK: Input: default@tjoin3
#### A masked pattern was here ####
POSTHOOK: query: select tj1rnum, tj2rnum as rnumt3 from
   (select tjoin1_n0.rnum tj1rnum, tjoin2_n0.rnum tj2rnum, tjoin2_n0.c1 tj2c1 from tjoin1_n0 left outer join tjoin2_n0 on tjoin1_n0.c1 = tjoin2_n0.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tjoin1_n0
POSTHOOK: Input: default@tjoin2_n0
POSTHOOK: Input: default@tjoin3
#### A masked pattern was here ####
0	0
0	3
1	NULL
2	NULL
