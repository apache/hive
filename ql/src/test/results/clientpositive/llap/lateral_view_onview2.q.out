PREHOOK: query: CREATE TABLE lv_table_n1( c1 STRING,  c2 ARRAY<INT>, c3 INT, c4 CHAR(1))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@lv_table_n1
POSTHOOK: query: CREATE TABLE lv_table_n1( c1 STRING,  c2 ARRAY<INT>, c3 INT, c4 CHAR(1))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@lv_table_n1
PREHOOK: query: INSERT OVERWRITE TABLE lv_table_n1 SELECT 'abc  ', array(1,2,3), 100, 't' FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@lv_table_n1
POSTHOOK: query: INSERT OVERWRITE TABLE lv_table_n1 SELECT 'abc  ', array(1,2,3), 100, 't' FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@lv_table_n1
POSTHOOK: Lineage: lv_table_n1.c1 SIMPLE []
POSTHOOK: Lineage: lv_table_n1.c2 EXPRESSION []
POSTHOOK: Lineage: lv_table_n1.c3 SIMPLE []
POSTHOOK: Lineage: lv_table_n1.c4 EXPRESSION []
PREHOOK: query: CREATE OR REPLACE VIEW lv_view AS SELECT * FROM lv_table_n1
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@lv_table_n1
PREHOOK: Output: database:default
PREHOOK: Output: default@lv_view
POSTHOOK: query: CREATE OR REPLACE VIEW lv_view AS SELECT * FROM lv_table_n1
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@lv_table_n1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@lv_view
POSTHOOK: Lineage: lv_view.c1 SIMPLE [(lv_table_n1)lv_table_n1.FieldSchema(name:c1, type:string, comment:null), ]
POSTHOOK: Lineage: lv_view.c2 SIMPLE [(lv_table_n1)lv_table_n1.FieldSchema(name:c2, type:array<int>, comment:null), ]
POSTHOOK: Lineage: lv_view.c3 SIMPLE [(lv_table_n1)lv_table_n1.FieldSchema(name:c3, type:int, comment:null), ]
POSTHOOK: Lineage: lv_view.c4 SIMPLE [(lv_table_n1)lv_table_n1.FieldSchema(name:c4, type:char(1), comment:null), ]
PREHOOK: query: EXPLAIN SELECT myTable.myCol, myTable2.myCol2 FROM lv_view LATERAL VIEW explode(array(1,2,3)) myTable AS myCol LATERAL VIEW explode(array('a', 'b', 'c')) myTable2 AS myCol2 LIMIT 9
PREHOOK: type: QUERY
PREHOOK: Input: default@lv_table_n1
PREHOOK: Input: default@lv_view
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT myTable.myCol, myTable2.myCol2 FROM lv_view LATERAL VIEW explode(array(1,2,3)) myTable AS myCol LATERAL VIEW explode(array('a', 'b', 'c')) myTable2 AS myCol2 LIMIT 9
POSTHOOK: type: QUERY
POSTHOOK: Input: default@lv_table_n1
POSTHOOK: Input: default@lv_view
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 9
      Processor Tree:
        TableScan
          alias: lv_table_n1
          Select Operator
            Lateral View Forward
              Select Operator
                Lateral View Join Operator
                  outputColumnNames: _col4
                  Lateral View Forward
                    Select Operator
                      expressions: _col4 (type: int)
                      outputColumnNames: _col4
                      Lateral View Join Operator
                        outputColumnNames: _col4, _col5
                        Select Operator
                          expressions: _col4 (type: int), _col5 (type: string)
                          outputColumnNames: _col0, _col1
                          Limit
                            Number of rows: 9
                            ListSink
                    Select Operator
                      expressions: array('a','b','c') (type: array<string>)
                      outputColumnNames: _col0
                      UDTF Operator
                        function name: explode
                        Lateral View Join Operator
                          outputColumnNames: _col4, _col5
                          Select Operator
                            expressions: _col4 (type: int), _col5 (type: string)
                            outputColumnNames: _col0, _col1
                            Limit
                              Number of rows: 9
                              ListSink
              Select Operator
                expressions: array(1,2,3) (type: array<int>)
                outputColumnNames: _col0
                UDTF Operator
                  function name: explode
                  Lateral View Join Operator
                    outputColumnNames: _col4
                    Lateral View Forward
                      Select Operator
                        expressions: _col4 (type: int)
                        outputColumnNames: _col4
                        Lateral View Join Operator
                          outputColumnNames: _col4, _col5
                          Select Operator
                            expressions: _col4 (type: int), _col5 (type: string)
                            outputColumnNames: _col0, _col1
                            Limit
                              Number of rows: 9
                              ListSink
                      Select Operator
                        expressions: array('a','b','c') (type: array<string>)
                        outputColumnNames: _col0
                        UDTF Operator
                          function name: explode
                          Lateral View Join Operator
                            outputColumnNames: _col4, _col5
                            Select Operator
                              expressions: _col4 (type: int), _col5 (type: string)
                              outputColumnNames: _col0, _col1
                              Limit
                                Number of rows: 9
                                ListSink

