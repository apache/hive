PREHOOK: query: CREATE TABLE sourceTable (one string,two string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sourceTable
POSTHOOK: query: CREATE TABLE sourceTable (one string,two string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sourceTable
PREHOOK: query: load data local inpath '../../data/files/kv1.txt' INTO TABLE sourceTable
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@sourcetable
POSTHOOK: query: load data local inpath '../../data/files/kv1.txt' INTO TABLE sourceTable
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@sourcetable
PREHOOK: query: load data local inpath '../../data/files/kv3.txt' INTO TABLE sourceTable
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@sourcetable
POSTHOOK: query: load data local inpath '../../data/files/kv3.txt' INTO TABLE sourceTable
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@sourcetable
PREHOOK: query: CREATE TABLE destinTable (two string) partitioned by (one string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@destinTable
POSTHOOK: query: CREATE TABLE destinTable (two string) partitioned by (one string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@destinTable
PREHOOK: query: EXPLAIN INSERT OVERWRITE TABLE destinTable partition (one) SELECT one,two FROM sourceTable
PREHOOK: type: QUERY
PREHOOK: Input: default@sourcetable
PREHOOK: Output: default@destintable
POSTHOOK: query: EXPLAIN INSERT OVERWRITE TABLE destinTable partition (one) SELECT one,two FROM sourceTable
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sourcetable
POSTHOOK: Output: default@destintable
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: sourcetable
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: one (type: string), two (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      null sort order: a
                      sort order: +
                      Map-reduce partition columns: _col1 (type: string)
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: string)
                      outputColumnNames: two, one
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: max(length(two)), avg(COALESCE(length(two),0)), count(1), count(two), compute_bit_vector_hll(two)
                        keys: one (type: string)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col1 (type: int), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY._col1 (type: string)
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.destintable
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col1,0)) (type: bigint), COALESCE(_col2,0) (type: double), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            one 
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.destintable

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: two
          Column Types: string
          Table: default.destintable

PREHOOK: query: drop table destinTable
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@destintable
PREHOOK: Output: default@destintable
POSTHOOK: query: drop table destinTable
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@destintable
POSTHOOK: Output: default@destintable
PREHOOK: query: drop table sourceTable
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@sourcetable
PREHOOK: Output: default@sourcetable
POSTHOOK: query: drop table sourceTable
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@sourcetable
POSTHOOK: Output: default@sourcetable
