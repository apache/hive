PREHOOK: query: CREATE DATABASE test1
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:test1
POSTHOOK: query: CREATE DATABASE test1
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:test1
PREHOOK: query: CREATE DATABASE test2
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:test2
POSTHOOK: query: CREATE DATABASE test2
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:test2
PREHOOK: query: USE test1
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test1
POSTHOOK: query: USE test1
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test1
PREHOOK: query: CREATE TABLE shtb_test1(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING)
STORED AS ORC TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_test1
POSTHOOK: query: CREATE TABLE shtb_test1(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING)
STORED AS ORC TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_test1
PREHOOK: query: CREATE MATERIALIZED VIEW shtb_test1_view1 DISABLE REWRITE AS
SELECT * FROM shtb_test1 where KEY > 1000 and KEY < 2000
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_test1_view1
POSTHOOK: query: CREATE MATERIALIZED VIEW shtb_test1_view1 DISABLE REWRITE AS
SELECT * FROM shtb_test1 where KEY > 1000 and KEY < 2000
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_test1_view1
POSTHOOK: Lineage: shtb_test1_view1.ds SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view1.key SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view1.value SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE MATERIALIZED VIEW shtb_test1_view2 
TBLPROPERTIES ('rewriting.time.window' = '-1min') AS
SELECT * FROM shtb_test1 where KEY > 100 and KEY < 200
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_test1_view2
POSTHOOK: query: CREATE MATERIALIZED VIEW shtb_test1_view2 
TBLPROPERTIES ('rewriting.time.window' = '-1min') AS
SELECT * FROM shtb_test1 where KEY > 100 and KEY < 200
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_test1_view2
POSTHOOK: Lineage: shtb_test1_view2.ds SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view2.key SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view2.value SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE MATERIALIZED VIEW shtb_full_view2
TBLPROPERTIES ('rewriting.time.window' = '5min') AS
SELECT * FROM shtb_test1
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_full_view2
POSTHOOK: query: CREATE MATERIALIZED VIEW shtb_full_view2
TBLPROPERTIES ('rewriting.time.window' = '5min') AS
SELECT * FROM shtb_test1
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_full_view2
POSTHOOK: Lineage: shtb_full_view2.ds SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_full_view2.key SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_full_view2.value SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE MATERIALIZED VIEW shtb_aggr_view1 AS
SELECT a.value, sum(a.key) FROM shtb_test1 a join shtb_test1 b on (a.key = b.key) group by a.value
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_aggr_view1
POSTHOOK: query: CREATE MATERIALIZED VIEW shtb_aggr_view1 AS
SELECT a.value, sum(a.key) FROM shtb_test1 a join shtb_test1 b on (a.key = b.key) group by a.value
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_aggr_view1
POSTHOOK: Lineage: shtb_aggr_view1._c1 EXPRESSION [(shtb_test1)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_aggr_view1.value SIMPLE [(shtb_test1)a.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE MATERIALIZED VIEW shtb_aggr_view2 AS
SELECT a.value, count(1), sum(a.key) FROM shtb_test1 a join shtb_test1 b on (a.key = b.key) group by a.value
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_aggr_view2
POSTHOOK: query: CREATE MATERIALIZED VIEW shtb_aggr_view2 AS
SELECT a.value, count(1), sum(a.key) FROM shtb_test1 a join shtb_test1 b on (a.key = b.key) group by a.value
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_aggr_view2
POSTHOOK: Lineage: shtb_aggr_view2._c1 EXPRESSION [(shtb_test1)a.null, (shtb_test1)b.null, ]
POSTHOOK: Lineage: shtb_aggr_view2._c2 EXPRESSION [(shtb_test1)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_aggr_view2.value SIMPLE [(shtb_test1)a.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: USE test2
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test2
POSTHOOK: query: USE test2
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test2
PREHOOK: query: CREATE TABLE shtb_test1(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING)
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:test2
PREHOOK: Output: test2@shtb_test1
POSTHOOK: query: CREATE TABLE shtb_test1(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING)
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:test2
POSTHOOK: Output: test2@shtb_test1
PREHOOK: query: CREATE TABLE shtb_test2(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING)
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:test2
PREHOOK: Output: test2@shtb_test2
POSTHOOK: query: CREATE TABLE shtb_test2(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING)
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:test2
POSTHOOK: Output: test2@shtb_test2
PREHOOK: query: CREATE MATERIALIZED VIEW shtb_test1_view1 DISABLE REWRITE AS
SELECT * FROM shtb_test1 where KEY > 1000 and KEY < 2000
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: test2@shtb_test1
PREHOOK: Output: database:test2
PREHOOK: Output: test2@shtb_test1_view1
POSTHOOK: query: CREATE MATERIALIZED VIEW shtb_test1_view1 DISABLE REWRITE AS
SELECT * FROM shtb_test1 where KEY > 1000 and KEY < 2000
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: test2@shtb_test1
POSTHOOK: Output: database:test2
POSTHOOK: Output: test2@shtb_test1_view1
POSTHOOK: Lineage: shtb_test1_view1.ds SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view1.key SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view1.value SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE MATERIALIZED VIEW shtb_test2_view2 DISABLE REWRITE AS
SELECT * FROM shtb_test2 where KEY > 100 and KEY < 200
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: test2@shtb_test2
PREHOOK: Output: database:test2
PREHOOK: Output: test2@shtb_test2_view2
POSTHOOK: query: CREATE MATERIALIZED VIEW shtb_test2_view2 DISABLE REWRITE AS
SELECT * FROM shtb_test2 where KEY > 100 and KEY < 200
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: test2@shtb_test2
POSTHOOK: Output: database:test2
POSTHOOK: Output: test2@shtb_test2_view2
POSTHOOK: Lineage: shtb_test2_view2.ds SIMPLE [(shtb_test2)shtb_test2.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_test2_view2.key SIMPLE [(shtb_test2)shtb_test2.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_test2_view2.value SIMPLE [(shtb_test2)shtb_test2.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: USE test1
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test1
POSTHOOK: query: USE test1
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test1
PREHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Show Materialized Views
      database name: test1

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SHOW MATERIALIZED VIEWS
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
# MV Name           	Rewriting Enabled   	Mode                	Incremental rebuild 
shtb_aggr_view1     	Yes                 	Manual refresh      	Available in presence of insert operations only
shtb_aggr_view2     	Yes                 	Manual refresh      	Available           
shtb_full_view2     	Yes                 	Manual refresh (Valid for 5min)	Available           
shtb_test1_view1    	No                  	Manual refresh      	Unknown             
shtb_test1_view2    	Yes                 	Manual refresh (Valid always)	Available           
PREHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS '%test%'
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS '%test%'
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Show Materialized Views
      database name: test1
      pattern: %test%

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SHOW MATERIALIZED VIEWS '%test%'
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS '%test%'
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
# MV Name           	Rewriting Enabled   	Mode                	Incremental rebuild 
shtb_test1_view1    	No                  	Manual refresh      	Unknown             
shtb_test1_view2    	Yes                 	Manual refresh (Valid always)	Available           
PREHOOK: query: SHOW MATERIALIZED VIEWS '%view2'
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS '%view2'
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
# MV Name           	Rewriting Enabled   	Mode                	Incremental rebuild 
shtb_aggr_view2     	Yes                 	Manual refresh      	Available           
shtb_full_view2     	Yes                 	Manual refresh (Valid for 5min)	Available           
shtb_test1_view2    	Yes                 	Manual refresh (Valid always)	Available           
PREHOOK: query: USE test2
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test2
POSTHOOK: query: USE test2
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test2
PREHOOK: query: SHOW MATERIALIZED VIEWS 'shtb_%'
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS 'shtb_%'
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
# MV Name           	Rewriting Enabled   	Mode                	Incremental rebuild 
shtb_test1_view1    	No                  	Manual refresh      	Unknown             
shtb_test2_view2    	No                  	Manual refresh      	Unknown             
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS FROM test1
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS FROM test1
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Show Materialized Views
      database name: test1

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SHOW MATERIALIZED VIEWS FROM test1
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS FROM test1
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
# MV Name           	Rewriting Enabled   	Mode                	Incremental rebuild 
shtb_aggr_view1     	Yes                 	Manual refresh      	Available in presence of insert operations only
shtb_aggr_view2     	Yes                 	Manual refresh      	Available           
shtb_full_view2     	Yes                 	Manual refresh (Valid for 5min)	Available           
shtb_test1_view1    	No                  	Manual refresh      	Unknown             
shtb_test1_view2    	Yes                 	Manual refresh (Valid always)	Available           
PREHOOK: query: SHOW MATERIALIZED VIEWS FROM test2
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS FROM test2
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
# MV Name           	Rewriting Enabled   	Mode                	Incremental rebuild 
shtb_test1_view1    	No                  	Manual refresh      	Unknown             
shtb_test2_view2    	No                  	Manual refresh      	Unknown             
PREHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS IN test1
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS IN test1
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Show Materialized Views
      database name: test1

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SHOW MATERIALIZED VIEWS IN test1
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS IN test1
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
# MV Name           	Rewriting Enabled   	Mode                	Incremental rebuild 
shtb_aggr_view1     	Yes                 	Manual refresh      	Available in presence of insert operations only
shtb_aggr_view2     	Yes                 	Manual refresh      	Available           
shtb_full_view2     	Yes                 	Manual refresh (Valid for 5min)	Available           
shtb_test1_view1    	No                  	Manual refresh      	Unknown             
shtb_test1_view2    	Yes                 	Manual refresh (Valid always)	Available           
PREHOOK: query: SHOW MATERIALIZED VIEWS IN default
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS IN default
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
PREHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS IN test1 "shtb_test%"
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: EXPLAIN SHOW MATERIALIZED VIEWS IN test1 "shtb_test%"
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Show Materialized Views
      database name: test1
      pattern: shtb_test%

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SHOW MATERIALIZED VIEWS IN test1 "shtb_test%"
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS IN test1 "shtb_test%"
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
# MV Name           	Rewriting Enabled   	Mode                	Incremental rebuild 
shtb_test1_view1    	No                  	Manual refresh      	Unknown             
shtb_test1_view2    	Yes                 	Manual refresh (Valid always)	Available           
PREHOOK: query: DESCRIBE FORMATTED test1.shtb_full_view2
PREHOOK: type: DESCTABLE
PREHOOK: Input: test1@shtb_full_view2
POSTHOOK: query: DESCRIBE FORMATTED test1.shtb_full_view2
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: test1@shtb_full_view2
# col_name            	data_type           	comment             
key                 	int                 	                    
value               	string              	                    
ds                  	string              	                    
	 	 
# Detailed Table Information	 	 
Database:           	test1               	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MATERIALIZED_VIEW   	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"ds\":\"true\",\"key\":\"true\",\"value\":\"true\"}}
	bucketing_version   	2                   
	numFiles            	0                   
	numRows             	0                   
	rawDataSize         	0                   
	rewriting.time.window	5min                
	totalSize           	0                   
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
	 	 
# Materialized View Information	 	 
Original Query:     	SELECT * FROM shtb_test1	 
Expanded Query:     	SELECT `shtb_test1`.`key`, `shtb_test1`.`value`, `shtb_test1`.`ds` FROM `test1`.`shtb_test1`	 
Rewrite Enabled:    	Yes                 	 
Outdated for Rewriting:	No                  	 
PREHOOK: query: DESCRIBE FORMATTED test1.shtb_test1_view1
PREHOOK: type: DESCTABLE
PREHOOK: Input: test1@shtb_test1_view1
POSTHOOK: query: DESCRIBE FORMATTED test1.shtb_test1_view1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: test1@shtb_test1_view1
# col_name            	data_type           	comment             
key                 	int                 	                    
value               	string              	                    
ds                  	string              	                    
	 	 
# Detailed Table Information	 	 
Database:           	test1               	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MATERIALIZED_VIEW   	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"ds\":\"true\",\"key\":\"true\",\"value\":\"true\"}}
	bucketing_version   	2                   
	numFiles            	0                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	0                   
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
	 	 
# Materialized View Information	 	 
Original Query:     	SELECT * FROM shtb_test1 where KEY > 1000 and KEY < 2000	 
Expanded Query:     	SELECT `shtb_test1`.`key`, `shtb_test1`.`value`, `shtb_test1`.`ds` FROM `test1`.`shtb_test1` where `shtb_test1`.`key` > 1000 and `shtb_test1`.`key` < 2000	 
Rewrite Enabled:    	No                  	 
Outdated for Rewriting:	No                  	 
PREHOOK: query: DESCRIBE FORMATTED test1.shtb_test1_view2
PREHOOK: type: DESCTABLE
PREHOOK: Input: test1@shtb_test1_view2
POSTHOOK: query: DESCRIBE FORMATTED test1.shtb_test1_view2
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: test1@shtb_test1_view2
# col_name            	data_type           	comment             
key                 	int                 	                    
value               	string              	                    
ds                  	string              	                    
	 	 
# Detailed Table Information	 	 
Database:           	test1               	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MATERIALIZED_VIEW   	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"ds\":\"true\",\"key\":\"true\",\"value\":\"true\"}}
	bucketing_version   	2                   
	numFiles            	0                   
	numRows             	0                   
	rawDataSize         	0                   
	rewriting.time.window	-1min               
	totalSize           	0                   
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
	 	 
# Materialized View Information	 	 
Original Query:     	SELECT * FROM shtb_test1 where KEY > 100 and KEY < 200	 
Expanded Query:     	SELECT `shtb_test1`.`key`, `shtb_test1`.`value`, `shtb_test1`.`ds` FROM `test1`.`shtb_test1` where `shtb_test1`.`key` > 100 and `shtb_test1`.`key` < 200	 
Rewrite Enabled:    	Yes                 	 
Outdated for Rewriting:	No                  	 
PREHOOK: query: SHOW MATERIALIZED VIEWS IN test2 LIKE "nomatch"
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS IN test2 LIKE "nomatch"
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
PREHOOK: query: CREATE DATABASE `database`
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:database
POSTHOOK: query: CREATE DATABASE `database`
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:database
PREHOOK: query: USE `database`
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:database
POSTHOOK: query: USE `database`
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:database
PREHOOK: query: CREATE TABLE foo_n0(a INT)
STORED AS ORC TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:database
PREHOOK: Output: database@foo_n0
POSTHOOK: query: CREATE TABLE foo_n0(a INT)
STORED AS ORC TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:database
POSTHOOK: Output: database@foo_n0
PREHOOK: query: CREATE MATERIALIZED VIEW fooview
TBLPROPERTIES ('rewriting.time.window' = '0min') AS
SELECT * FROM foo_n0
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: database@foo_n0
PREHOOK: Output: database:database
PREHOOK: Output: database@fooview
POSTHOOK: query: CREATE MATERIALIZED VIEW fooview
TBLPROPERTIES ('rewriting.time.window' = '0min') AS
SELECT * FROM foo_n0
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: database@foo_n0
POSTHOOK: Output: database:database
POSTHOOK: Output: database@fooview
POSTHOOK: Lineage: fooview.a SIMPLE [(foo_n0)foo_n0.FieldSchema(name:a, type:int, comment:null), ]
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: SHOW MATERIALIZED VIEWS FROM `database` LIKE "fooview"
PREHOOK: type: SHOWMATERIALIZEDVIEWS
POSTHOOK: query: SHOW MATERIALIZED VIEWS FROM `database` LIKE "fooview"
POSTHOOK: type: SHOWMATERIALIZEDVIEWS
# MV Name           	Rewriting Enabled   	Mode                	Incremental rebuild 
fooview             	Yes                 	Manual refresh (Valid until source tables modified)	Available           
PREHOOK: query: DESCRIBE FORMATTED `database`.`fooview`
PREHOOK: type: DESCTABLE
PREHOOK: Input: database@fooview
POSTHOOK: query: DESCRIBE FORMATTED `database`.`fooview`
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: database@fooview
# col_name            	data_type           	comment             
a                   	int                 	                    
	 	 
# Detailed Table Information	 	 
Database:           	database            	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MATERIALIZED_VIEW   	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"a\":\"true\"}}
	bucketing_version   	2                   
	numFiles            	0                   
	numRows             	0                   
	rawDataSize         	0                   
	rewriting.time.window	0min                
	totalSize           	0                   
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
	 	 
# Materialized View Information	 	 
Original Query:     	SELECT * FROM foo_n0	 
Expanded Query:     	SELECT `foo_n0`.`a` FROM `database`.`foo_n0`	 
Rewrite Enabled:    	Yes                 	 
Outdated for Rewriting:	No                  	 
PREHOOK: query: DROP MATERIALIZED VIEW fooview
PREHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: query: DROP MATERIALIZED VIEW fooview
POSTHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: query: DROP TABLE foo_n0
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE foo_n0
POSTHOOK: type: DROPTABLE
PREHOOK: query: USE test1
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test1
POSTHOOK: query: USE test1
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test1
PREHOOK: query: DROP MATERIALIZED VIEW shtb_test1_view1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_test1_view1
PREHOOK: Output: test1@shtb_test1_view1
POSTHOOK: query: DROP MATERIALIZED VIEW shtb_test1_view1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_test1_view1
POSTHOOK: Output: test1@shtb_test1_view1
PREHOOK: query: DROP MATERIALIZED VIEW shtb_test1_view2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_test1_view2
PREHOOK: Output: test1@shtb_test1_view2
POSTHOOK: query: DROP MATERIALIZED VIEW shtb_test1_view2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_test1_view2
POSTHOOK: Output: test1@shtb_test1_view2
PREHOOK: query: DROP MATERIALIZED VIEW shtb_full_view2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_full_view2
PREHOOK: Output: test1@shtb_full_view2
POSTHOOK: query: DROP MATERIALIZED VIEW shtb_full_view2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_full_view2
POSTHOOK: Output: test1@shtb_full_view2
PREHOOK: query: DROP MATERIALIZED VIEW shtb_aggr_view1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_aggr_view1
PREHOOK: Output: test1@shtb_aggr_view1
POSTHOOK: query: DROP MATERIALIZED VIEW shtb_aggr_view1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_aggr_view1
POSTHOOK: Output: test1@shtb_aggr_view1
PREHOOK: query: DROP MATERIALIZED VIEW shtb_aggr_view2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: test1@shtb_aggr_view2
PREHOOK: Output: test1@shtb_aggr_view2
POSTHOOK: query: DROP MATERIALIZED VIEW shtb_aggr_view2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: test1@shtb_aggr_view2
POSTHOOK: Output: test1@shtb_aggr_view2
PREHOOK: query: DROP TABLE shtb_test1
PREHOOK: type: DROPTABLE
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: test1@shtb_test1
POSTHOOK: query: DROP TABLE shtb_test1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: test1@shtb_test1
PREHOOK: query: DROP DATABASE test1
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:test1
PREHOOK: Output: database:test1
POSTHOOK: query: DROP DATABASE test1
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:test1
POSTHOOK: Output: database:test1
PREHOOK: query: USE test2
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test2
POSTHOOK: query: USE test2
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test2
PREHOOK: query: DROP MATERIALIZED VIEW shtb_test1_view1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: test2@shtb_test1_view1
PREHOOK: Output: test2@shtb_test1_view1
POSTHOOK: query: DROP MATERIALIZED VIEW shtb_test1_view1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: test2@shtb_test1_view1
POSTHOOK: Output: test2@shtb_test1_view1
PREHOOK: query: DROP MATERIALIZED VIEW shtb_test2_view2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: test2@shtb_test2_view2
PREHOOK: Output: test2@shtb_test2_view2
POSTHOOK: query: DROP MATERIALIZED VIEW shtb_test2_view2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: test2@shtb_test2_view2
POSTHOOK: Output: test2@shtb_test2_view2
PREHOOK: query: DROP TABLE shtb_test1
PREHOOK: type: DROPTABLE
PREHOOK: Input: test2@shtb_test1
PREHOOK: Output: test2@shtb_test1
POSTHOOK: query: DROP TABLE shtb_test1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test2@shtb_test1
POSTHOOK: Output: test2@shtb_test1
PREHOOK: query: DROP TABLE shtb_test2
PREHOOK: type: DROPTABLE
PREHOOK: Input: test2@shtb_test2
PREHOOK: Output: test2@shtb_test2
POSTHOOK: query: DROP TABLE shtb_test2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test2@shtb_test2
POSTHOOK: Output: test2@shtb_test2
PREHOOK: query: DROP DATABASE test2
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:test2
PREHOOK: Output: database:test2
POSTHOOK: query: DROP DATABASE test2
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:test2
POSTHOOK: Output: database:test2
