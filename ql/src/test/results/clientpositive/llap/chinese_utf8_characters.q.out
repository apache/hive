PREHOOK: query: CREATE EXTERNAL TABLE tbl_chinese_chars(a int, b string, c string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_chinese_chars
POSTHOOK: query: CREATE EXTERNAL TABLE tbl_chinese_chars(a int, b string, c string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_chinese_chars
PREHOOK: query: INSERT INTO tbl_chinese_chars values(1,'上海','徐汇'),(2,'北京','海淀')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tbl_chinese_chars
POSTHOOK: query: INSERT INTO tbl_chinese_chars values(1,'上海','徐汇'),(2,'北京','海淀')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tbl_chinese_chars
POSTHOOK: Lineage: tbl_chinese_chars.a SCRIPT []
POSTHOOK: Lineage: tbl_chinese_chars.b SCRIPT []
POSTHOOK: Lineage: tbl_chinese_chars.c SCRIPT []
PREHOOK: query: CREATE EXTERNAL TABLE tbl_chinese_chars_multidelimitserde (col1 varchar(100), col2 varchar(100))
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='|~|', 'serialization.encoding'='UTF-8')
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_chinese_chars_multidelimitserde
POSTHOOK: query: CREATE EXTERNAL TABLE tbl_chinese_chars_multidelimitserde (col1 varchar(100), col2 varchar(100))
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='|~|', 'serialization.encoding'='UTF-8')
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_chinese_chars_multidelimitserde
PREHOOK: query: INSERT INTO TABLE tbl_chinese_chars_multidelimitserde values('测试1','测试2')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tbl_chinese_chars_multidelimitserde
POSTHOOK: query: INSERT INTO TABLE tbl_chinese_chars_multidelimitserde values('测试1','测试2')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tbl_chinese_chars_multidelimitserde
POSTHOOK: Lineage: tbl_chinese_chars_multidelimitserde.col1 SCRIPT []
POSTHOOK: Lineage: tbl_chinese_chars_multidelimitserde.col2 SCRIPT []
PREHOOK: query: EXPLAIN SELECT * FROM default.tbl_chinese_chars where b='北京'
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT * FROM default.tbl_chinese_chars where b='北京'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: tbl_chinese_chars
          filterExpr: (b = '北京') (type: boolean)
          Filter Operator
            predicate: (b = '北京') (type: boolean)
            Select Operator
              expressions: a (type: int), '北京' (type: string), c (type: string)
              outputColumnNames: _col0, _col1, _col2
              ListSink

PREHOOK: query: SELECT * FROM default.tbl_chinese_chars where b='北京'
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM default.tbl_chinese_chars where b='北京'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars
#### A masked pattern was here ####
2	北京	海淀
PREHOOK: query: EXPLAIN SELECT * FROM default.tbl_chinese_chars where b='北京'
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT * FROM default.tbl_chinese_chars where b='北京'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tbl_chinese_chars
                  filterExpr: (b = '北京') (type: boolean)
                  Statistics: Num rows: 2 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (b = '北京') (type: boolean)
                    Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int), '北京' (type: string), c (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT * FROM default.tbl_chinese_chars where b='北京'
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM default.tbl_chinese_chars where b='北京'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars
#### A masked pattern was here ####
2	北京	海淀
PREHOOK: query: SELECT * FROM default.tbl_chinese_chars_multidelimitserde
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM default.tbl_chinese_chars_multidelimitserde
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
测试1	测试2
PREHOOK: query: EXPLAIN SELECT * FROM default.tbl_chinese_chars_multidelimitserde where col1 = '测试1'
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT * FROM default.tbl_chinese_chars_multidelimitserde where col1 = '测试1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: tbl_chinese_chars_multidelimitserde
          filterExpr: (col1 = '测试1') (type: boolean)
          Filter Operator
            predicate: (col1 = '测试1') (type: boolean)
            Select Operator
              expressions: '测试1' (type: varchar(100)), col2 (type: varchar(100))
              outputColumnNames: _col0, _col1
              ListSink

PREHOOK: query: SELECT * FROM default.tbl_chinese_chars_multidelimitserde where col1 = '测试1'
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM default.tbl_chinese_chars_multidelimitserde where col1 = '测试1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
测试1	测试2
PREHOOK: query: SELECT * FROM default.tbl_chinese_chars_multidelimitserde
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM default.tbl_chinese_chars_multidelimitserde
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
测试1	测试2
PREHOOK: query: EXPLAIN SELECT * FROM default.tbl_chinese_chars_multidelimitserde where col1 = '测试1'
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT * FROM default.tbl_chinese_chars_multidelimitserde where col1 = '测试1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tbl_chinese_chars_multidelimitserde
                  filterExpr: (col1 = '测试1') (type: boolean)
                  Statistics: Num rows: 1 Data size: 174 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (col1 = '测试1') (type: boolean)
                    Statistics: Num rows: 1 Data size: 174 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: '测试1' (type: varchar(100)), col2 (type: varchar(100))
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 174 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 1 Data size: 174 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT * FROM default.tbl_chinese_chars_multidelimitserde where col1 = '测试1'
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM default.tbl_chinese_chars_multidelimitserde where col1 = '测试1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_chinese_chars_multidelimitserde
#### A masked pattern was here ####
测试1	测试2
