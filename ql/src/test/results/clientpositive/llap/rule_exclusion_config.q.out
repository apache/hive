PREHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
CBO PLAN:
HiveJoin(condition=[=($0, $4)], joinType=[inner], algorithm=[none], cost=[not available])
  HiveJoin(condition=[=($0, $2)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(key=[$0], value=[$1])
      HiveFilter(condition=[AND(>(CAST($0):DOUBLE, 10), <(CAST($0):DOUBLE, 20))])
        HiveTableScan(table=[[default, src]], table:alias=[src1])
    HiveProject(key=[$0], value=[$1])
      HiveFilter(condition=[AND(>(CAST($0):DOUBLE, 10), <(CAST($0):DOUBLE, 20))])
        HiveTableScan(table=[[default, src]], table:alias=[src2])
  HiveProject(key=[$0], value=[$1])
    HiveFilter(condition=[AND(>(CAST($0):DOUBLE, 10), <(CAST($0):DOUBLE, 20))])
      HiveTableScan(table=[[default, src]], table:alias=[src3])

PREHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
Excluded rules: HiveJoinPushTransitivePredicatesRule

CBO PLAN:
HiveProject(key=[$4], value=[$5], key0=[$2], value0=[$3], key1=[$0], value1=[$1])
  HiveJoin(condition=[=($4, $0)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(key=[$0], value=[$1])
      HiveFilter(condition=[IS NOT NULL($0)])
        HiveTableScan(table=[[default, src]], table:alias=[src3])
    HiveJoin(condition=[=($2, $0)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(key=[$0], value=[$1])
        HiveFilter(condition=[IS NOT NULL($0)])
          HiveTableScan(table=[[default, src]], table:alias=[src2])
      HiveProject(key=[$0], value=[$1])
        HiveFilter(condition=[AND(>(CAST($0):DOUBLE, 10), <(CAST($0):DOUBLE, 20))])
          HiveTableScan(table=[[default, src]], table:alias=[src1])

PREHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
Excluded rules: HiveJoinPushTransitivePredicatesRule|HiveJoinAddNotNullRule

CBO PLAN:
HiveProject(key=[$4], value=[$5], key0=[$2], value0=[$3], key1=[$0], value1=[$1])
  HiveJoin(condition=[=($4, $0)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(key=[$0], value=[$1])
      HiveTableScan(table=[[default, src]], table:alias=[src3])
    HiveJoin(condition=[=($2, $0)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(key=[$0], value=[$1])
        HiveTableScan(table=[[default, src]], table:alias=[src2])
      HiveProject(key=[$0], value=[$1])
        HiveFilter(condition=[AND(>(CAST($0):DOUBLE, 10), <(CAST($0):DOUBLE, 20))])
          HiveTableScan(table=[[default, src]], table:alias=[src1])

PREHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
Excluded rules: HiveJoin.*Rule

CBO PLAN:
HiveProject(key=[$4], value=[$5], key0=[$2], value0=[$3], key1=[$0], value1=[$1])
  HiveJoin(condition=[=($4, $0)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(key=[$0], value=[$1])
      HiveTableScan(table=[[default, src]], table:alias=[src3])
    HiveJoin(condition=[=($2, $0)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(key=[$0], value=[$1])
        HiveTableScan(table=[[default, src]], table:alias=[src2])
      HiveProject(key=[$0], value=[$1])
        HiveFilter(condition=[AND(>(CAST($0):DOUBLE, 10), <(CAST($0):DOUBLE, 20))])
          HiveTableScan(table=[[default, src]], table:alias=[src1])

PREHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN CBO
SELECT *
FROM src src1
  JOIN src src2 ON (src1.key = src2.key)
  JOIN src src3 ON (src1.key = src3.key)
WHERE src1.key > 10 and src1.key < 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
Excluded rules: .*

CBO PLAN:
HiveProject(key=[$0], value=[$1], key1=[$6], value1=[$7], key2=[$12], value2=[$13])
  HiveFilter(condition=[AND(>(CAST($0):DOUBLE, CAST(10):DOUBLE), <(CAST($0):DOUBLE, CAST(20):DOUBLE))])
    HiveJoin(condition=[=($0, $12)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveJoin(condition=[=($0, $6)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveTableScan(table=[[default, src]], table:alias=[src1])
        HiveTableScan(table=[[default, src]], table:alias=[src2])
      HiveTableScan(table=[[default, src]], table:alias=[src3])

