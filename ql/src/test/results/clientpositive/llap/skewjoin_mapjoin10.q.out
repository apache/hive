PREHOOK: query: CREATE TABLE tmpT1_n0(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmpT1_n0
POSTHOOK: query: CREATE TABLE tmpT1_n0(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmpT1_n0
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE tmpT1_n0
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tmpt1_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE tmpT1_n0
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tmpt1_n0
PREHOOK: query: CREATE TABLE T1_n151(key INT, val STRING) SKEWED BY (key) ON ((2))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n151
POSTHOOK: query: CREATE TABLE T1_n151(key INT, val STRING) SKEWED BY (key) ON ((2))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n151
PREHOOK: query: INSERT OVERWRITE TABLE T1_n151 SELECT key, val FROM tmpT1_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@tmpt1_n0
PREHOOK: Output: default@t1_n151
POSTHOOK: query: INSERT OVERWRITE TABLE T1_n151 SELECT key, val FROM tmpT1_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmpt1_n0
POSTHOOK: Output: default@t1_n151
POSTHOOK: Lineage: t1_n151.key EXPRESSION [(tmpt1_n0)tmpt1_n0.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t1_n151.val SIMPLE [(tmpt1_n0)tmpt1_n0.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE tmpT2_n0(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmpT2_n0
POSTHOOK: query: CREATE TABLE tmpT2_n0(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmpT2_n0
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE tmpT2_n0
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tmpt2_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE tmpT2_n0
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tmpt2_n0
PREHOOK: query: CREATE TABLE T2_n88(key INT, val STRING) SKEWED BY (key) ON ((3))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T2_n88
POSTHOOK: query: CREATE TABLE T2_n88(key INT, val STRING) SKEWED BY (key) ON ((3))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2_n88
PREHOOK: query: INSERT OVERWRITE TABLE T2_n88 SELECT key, val FROM tmpT2_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@tmpt2_n0
PREHOOK: Output: default@t2_n88
POSTHOOK: query: INSERT OVERWRITE TABLE T2_n88 SELECT key, val FROM tmpT2_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmpt2_n0
POSTHOOK: Output: default@t2_n88
POSTHOOK: Lineage: t2_n88.key EXPRESSION [(tmpt2_n0)tmpt2_n0.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t2_n88.val SIMPLE [(tmpt2_n0)tmpt2_n0.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n151 a JOIN T2_n88 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n151
PREHOOK: Input: default@t2_n88
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n151 a JOIN T2_n88 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n151
POSTHOOK: Input: default@t2_n88
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 7 Data size: 1260 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 7 Data size: 1260 Basic stats: COMPLETE Column stats: COMPLETE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a.*, b.* FROM T1_n151 a JOIN T2_n88 b ON a.key = b.key
ORDER BY a.key, b.key, a.val, b.val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n151
PREHOOK: Input: default@t2_n88
#### A masked pattern was here ####
POSTHOOK: query: SELECT a.*, b.* FROM T1_n151 a JOIN T2_n88 b ON a.key = b.key
ORDER BY a.key, b.key, a.val, b.val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n151
POSTHOOK: Input: default@t2_n88
#### A masked pattern was here ####
2	12	2	22
3	13	3	13
8	18	8	18
8	18	8	18
8	28	8	18
8	28	8	18
PREHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n151
PREHOOK: Input: default@t2_n88
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n151
POSTHOOK: Input: default@t2_n88
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 2 <- Map 1 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: int), val (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE
                    Map Join Operator
                      condition map:
                           Right Outer Join 0 to 1
                      keys:
                        0 _col0 (type: int)
                        1 _col0 (type: int)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      input vertices:
                        0 Map 1
                      Statistics: Num rows: 7 Data size: 1260 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 7 Data size: 1260 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a.*, b.* FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
ORDER BY a.key, b.key, a.val, b.val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n151
PREHOOK: Input: default@t2_n88
#### A masked pattern was here ####
POSTHOOK: query: SELECT a.*, b.* FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
ORDER BY a.key, b.key, a.val, b.val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n151
POSTHOOK: Input: default@t2_n88
#### A masked pattern was here ####
2	12	2	22
3	13	3	13
8	18	8	18
8	18	8	18
8	28	8	18
8	28	8	18
NULL	NULL	4	14
NULL	NULL	5	15
PREHOOK: query: EXPLAIN
SELECT count(1) FROM T1_n151 a JOIN T2_n88 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n151
PREHOOK: Input: default@t2_n88
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT count(1) FROM T1_n151 a JOIN T2_n88 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n151
POSTHOOK: Input: default@t2_n88
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 3 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: int)
                          1 _col0 (type: int)
                        input vertices:
                          1 Map 3
                        Statistics: Num rows: 7 Data size: 56 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: count()
                          minReductionHashAggr: 0.85714287
                          mode: hash
                          outputColumnNames: _col0
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            null sort order: 
                            sort order: 
                            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT count(1) FROM T1_n151 a JOIN T2_n88 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n151
PREHOOK: Input: default@t2_n88
#### A masked pattern was here ####
POSTHOOK: query: SELECT count(1) FROM T1_n151 a JOIN T2_n88 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n151
POSTHOOK: Input: default@t2_n88
#### A masked pattern was here ####
6
PREHOOK: query: EXPLAIN
SELECT count(1) FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n151
PREHOOK: Input: default@t2_n88
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT count(1) FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n151
POSTHOOK: Input: default@t2_n88
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 2 <- Map 1 (BROADCAST_EDGE)
        Reducer 3 <- Map 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                    Map Join Operator
                      condition map:
                           Right Outer Join 0 to 1
                      keys:
                        0 _col0 (type: int)
                        1 _col0 (type: int)
                      input vertices:
                        0 Map 1
                      Statistics: Num rows: 7 Data size: 56 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.85714287
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT count(1) FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n151
PREHOOK: Input: default@t2_n88
#### A masked pattern was here ####
POSTHOOK: query: SELECT count(1) FROM T1_n151 a RIGHT OUTER JOIN T2_n88 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n151
POSTHOOK: Input: default@t2_n88
#### A masked pattern was here ####
8
