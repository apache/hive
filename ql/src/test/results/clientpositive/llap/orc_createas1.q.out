PREHOOK: query: DROP TABLE orc_createas1a
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE orc_createas1a
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE orc_createas1b
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE orc_createas1b
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE orc_createas1c
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE orc_createas1c
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE orc_createas1a (key INT, value STRING)
    PARTITIONED BY (ds string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@orc_createas1a
POSTHOOK: query: CREATE TABLE orc_createas1a (key INT, value STRING)
    PARTITIONED BY (ds string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orc_createas1a
PREHOOK: query: INSERT OVERWRITE TABLE orc_createas1a PARTITION (ds='1')
    SELECT * FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@orc_createas1a@ds=1
POSTHOOK: query: INSERT OVERWRITE TABLE orc_createas1a PARTITION (ds='1')
    SELECT * FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@orc_createas1a@ds=1
POSTHOOK: Lineage: orc_createas1a PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orc_createas1a PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: INSERT OVERWRITE TABLE orc_createas1a PARTITION (ds='2')
    SELECT * FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@orc_createas1a@ds=2
POSTHOOK: query: INSERT OVERWRITE TABLE orc_createas1a PARTITION (ds='2')
    SELECT * FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@orc_createas1a@ds=2
POSTHOOK: Lineage: orc_createas1a PARTITION(ds=2).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orc_createas1a PARTITION(ds=2).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: EXPLAIN CREATE TABLE orc_createas1b
    STORED AS ORC AS
    SELECT * FROM src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@orc_createas1b
POSTHOOK: query: EXPLAIN CREATE TABLE orc_createas1b
    STORED AS ORC AS
    SELECT * FROM src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orc_createas1b
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-0, Stage-2
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                          output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                          serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                          name: default.orc_createas1b
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: string)
                      outputColumnNames: col1, col2
                      Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: max(length(col1)), avg(COALESCE(length(col1),0)), count(1), count(col1), compute_bit_vector_hll(col1), max(length(col2)), avg(COALESCE(length(col2),0)), count(col2), compute_bit_vector_hll(col2)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                        Statistics: Num rows: 1 Data size: 472 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 472 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 336 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 532 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 532 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
    Create Table
      columns: key string, value string
      name: default.orc_createas1b
      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
      serde name: org.apache.hadoop.hive.ql.io.orc.OrcSerde

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: string, string
          Table: default.orc_createas1b

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
          destination: hdfs://### HDFS PATH ###

PREHOOK: query: CREATE TABLE orc_createas1b
    STORED AS ORC AS
    SELECT * FROM src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@orc_createas1b
POSTHOOK: query: CREATE TABLE orc_createas1b
    STORED AS ORC AS
    SELECT * FROM src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orc_createas1b
POSTHOOK: Lineage: orc_createas1b.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orc_createas1b.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: EXPLAIN SELECT * FROM orc_createas1b ORDER BY key LIMIT 5
PREHOOK: type: QUERY
PREHOOK: Input: default@orc_createas1b
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: EXPLAIN SELECT * FROM orc_createas1b ORDER BY key LIMIT 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orc_createas1b
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orc_createas1b
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Top N Key Operator
                    sort order: +
                    keys: key (type: string)
                    null sort order: z
                    Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                    top n: 5
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 5
                  Statistics: Num rows: 5 Data size: 890 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 5 Data size: 890 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 5
      Processor Tree:
        ListSink

PREHOOK: query: SELECT * FROM orc_createas1b ORDER BY key LIMIT 5
PREHOOK: type: QUERY
PREHOOK: Input: default@orc_createas1b
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM orc_createas1b ORDER BY key LIMIT 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orc_createas1b
POSTHOOK: Output: hdfs://### HDFS PATH ###
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
PREHOOK: query: EXPLAIN
    CREATE TABLE orc_createas1c
    STORED AS ORC AS 
        SELECT key, value, PMOD(HASH(key), 50) as part
        FROM orc_createas1a
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@orc_createas1a
PREHOOK: Input: default@orc_createas1a@ds=1
PREHOOK: Input: default@orc_createas1a@ds=2
PREHOOK: Output: database:default
PREHOOK: Output: default@orc_createas1c
POSTHOOK: query: EXPLAIN
    CREATE TABLE orc_createas1c
    STORED AS ORC AS 
        SELECT key, value, PMOD(HASH(key), 50) as part
        FROM orc_createas1a
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@orc_createas1a
POSTHOOK: Input: default@orc_createas1a@ds=1
POSTHOOK: Input: default@orc_createas1a@ds=2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orc_createas1c
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-0, Stage-2
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orc_createas1a
                  Statistics: Num rows: 1000 Data size: 95000 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: int), value (type: string), (hash(key) pmod 50) (type: int)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 1000 Data size: 99000 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1000 Data size: 99000 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                          output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                          serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                          name: default.orc_createas1c
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: string), _col2 (type: int)
                      outputColumnNames: col1, col2, col3
                      Statistics: Num rows: 1000 Data size: 99000 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(col1), max(col1), count(1), count(col1), compute_bit_vector_hll(col1), max(length(col2)), avg(COALESCE(length(col2),0)), count(col2), compute_bit_vector_hll(col2), min(col3), max(col3), count(col3), compute_bit_vector_hll(col3)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                        Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: int), _col11 (type: bigint), _col12 (type: binary)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), min(VALUE._col9), max(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                Statistics: Num rows: 1 Data size: 492 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'LONG' (type: string), UDFToLong(_col9) (type: bigint), UDFToLong(_col10) (type: bigint), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
                  Statistics: Num rows: 1 Data size: 794 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 794 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
    Create Table
      columns: key int, value string, part int
      name: default.orc_createas1c
      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
      serde name: org.apache.hadoop.hive.ql.io.orc.OrcSerde

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value, part
          Column Types: int, string, int
          Table: default.orc_createas1c

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
          destination: hdfs://### HDFS PATH ###

PREHOOK: query: CREATE TABLE orc_createas1c
    STORED AS ORC AS 
        SELECT key, value, PMOD(HASH(key), 50) as part
        FROM orc_createas1a
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@orc_createas1a
PREHOOK: Input: default@orc_createas1a@ds=1
PREHOOK: Input: default@orc_createas1a@ds=2
PREHOOK: Output: database:default
PREHOOK: Output: default@orc_createas1c
POSTHOOK: query: CREATE TABLE orc_createas1c
    STORED AS ORC AS 
        SELECT key, value, PMOD(HASH(key), 50) as part
        FROM orc_createas1a
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@orc_createas1a
POSTHOOK: Input: default@orc_createas1a@ds=1
POSTHOOK: Input: default@orc_createas1a@ds=2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orc_createas1c
POSTHOOK: Lineage: orc_createas1c.key SIMPLE [(orc_createas1a)orc_createas1a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: orc_createas1c.part EXPRESSION [(orc_createas1a)orc_createas1a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: orc_createas1c.value SIMPLE [(orc_createas1a)orc_createas1a.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value) USING 'tr \t _' AS (c)
    FROM orc_createas1a
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@orc_createas1a
PREHOOK: Input: default@orc_createas1a@ds=1
PREHOOK: Input: default@orc_createas1a@ds=2
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value) USING 'tr \t _' AS (c)
    FROM orc_createas1a
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orc_createas1a
POSTHOOK: Input: default@orc_createas1a@ds=1
POSTHOOK: Input: default@orc_createas1a@ds=2
POSTHOOK: Output: hdfs://### HDFS PATH ###
14412220296
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value) USING 'tr \t _' AS (c)
    FROM orc_createas1c
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@orc_createas1c
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value) USING 'tr \t _' AS (c)
    FROM orc_createas1c
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orc_createas1c
POSTHOOK: Output: hdfs://### HDFS PATH ###
14412220296
PREHOOK: query: DROP TABLE orc_createas1a
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@orc_createas1a
PREHOOK: Output: default@orc_createas1a
POSTHOOK: query: DROP TABLE orc_createas1a
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@orc_createas1a
POSTHOOK: Output: default@orc_createas1a
PREHOOK: query: DROP TABLE orc_createas1b
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@orc_createas1b
PREHOOK: Output: default@orc_createas1b
POSTHOOK: query: DROP TABLE orc_createas1b
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@orc_createas1b
POSTHOOK: Output: default@orc_createas1b
PREHOOK: query: DROP TABLE orc_createas1c
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@orc_createas1c
PREHOOK: Output: default@orc_createas1c
POSTHOOK: query: DROP TABLE orc_createas1c
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@orc_createas1c
POSTHOOK: Output: default@orc_createas1c
