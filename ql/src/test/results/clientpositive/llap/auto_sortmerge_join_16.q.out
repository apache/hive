PREHOOK: query: CREATE TABLE stage_bucket_big
(
key BIGINT,
value STRING
)
PARTITIONED BY (file_tag STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stage_bucket_big
POSTHOOK: query: CREATE TABLE stage_bucket_big
(
key BIGINT,
value STRING
)
PARTITIONED BY (file_tag STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stage_bucket_big
PREHOOK: query: CREATE TABLE bucket_big
(
key BIGINT,
value STRING
)
PARTITIONED BY (day STRING, pri bigint)
clustered by (key) sorted by (key) into 12 buckets
stored as RCFile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucket_big
POSTHOOK: query: CREATE TABLE bucket_big
(
key BIGINT,
value STRING
)
PARTITIONED BY (day STRING, pri bigint)
clustered by (key) sorted by (key) into 12 buckets
stored as RCFile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucket_big
PREHOOK: query: CREATE TABLE stage_bucket_small
(
key BIGINT,
value string
)
PARTITIONED BY (file_tag STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stage_bucket_small
POSTHOOK: query: CREATE TABLE stage_bucket_small
(
key BIGINT,
value string
)
PARTITIONED BY (file_tag STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stage_bucket_small
PREHOOK: query: CREATE TABLE bucket_small
(
key BIGINT,
value string
)
PARTITIONED BY (pri bigint)
clustered by (key) sorted by (key) into 12 buckets
stored as RCFile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucket_small
POSTHOOK: query: CREATE TABLE bucket_small
(
key BIGINT,
value string
)
PARTITIONED BY (pri bigint)
clustered by (key) sorted by (key) into 12 buckets
stored as RCFile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucket_small
PREHOOK: query: load data local inpath '../../data/files/auto_sortmerge_join/big/000000_0' overwrite into table stage_bucket_small partition (file_tag='1')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@stage_bucket_small
POSTHOOK: query: load data local inpath '../../data/files/auto_sortmerge_join/big/000000_0' overwrite into table stage_bucket_small partition (file_tag='1')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@stage_bucket_small
POSTHOOK: Output: default@stage_bucket_small@file_tag=1
PREHOOK: query: load data local inpath '../../data/files/auto_sortmerge_join/big/000000_0' overwrite into table stage_bucket_small partition (file_tag='2')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@stage_bucket_small
POSTHOOK: query: load data local inpath '../../data/files/auto_sortmerge_join/big/000000_0' overwrite into table stage_bucket_small partition (file_tag='2')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@stage_bucket_small
POSTHOOK: Output: default@stage_bucket_small@file_tag=2
PREHOOK: query: insert overwrite table bucket_small partition(pri) 
select 
key, 
value, 
file_tag as pri 
from 
stage_bucket_small 
where file_tag between 1 and 2
PREHOOK: type: QUERY
PREHOOK: Input: default@stage_bucket_small
PREHOOK: Input: default@stage_bucket_small@file_tag=1
PREHOOK: Input: default@stage_bucket_small@file_tag=2
PREHOOK: Output: default@bucket_small
POSTHOOK: query: insert overwrite table bucket_small partition(pri) 
select 
key, 
value, 
file_tag as pri 
from 
stage_bucket_small 
where file_tag between 1 and 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stage_bucket_small
POSTHOOK: Input: default@stage_bucket_small@file_tag=1
POSTHOOK: Input: default@stage_bucket_small@file_tag=2
POSTHOOK: Output: default@bucket_small@pri=1
POSTHOOK: Output: default@bucket_small@pri=2
POSTHOOK: Lineage: bucket_small PARTITION(pri=1).key SIMPLE [(stage_bucket_small)stage_bucket_small.FieldSchema(name:key, type:bigint, comment:null), ]
POSTHOOK: Lineage: bucket_small PARTITION(pri=1).value SIMPLE [(stage_bucket_small)stage_bucket_small.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: bucket_small PARTITION(pri=2).key SIMPLE [(stage_bucket_small)stage_bucket_small.FieldSchema(name:key, type:bigint, comment:null), ]
POSTHOOK: Lineage: bucket_small PARTITION(pri=2).value SIMPLE [(stage_bucket_small)stage_bucket_small.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: load data local inpath '../../data/files/auto_sortmerge_join/small/000000_0' overwrite into table stage_bucket_big partition (file_tag='1')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@stage_bucket_big
POSTHOOK: query: load data local inpath '../../data/files/auto_sortmerge_join/small/000000_0' overwrite into table stage_bucket_big partition (file_tag='1')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@stage_bucket_big
POSTHOOK: Output: default@stage_bucket_big@file_tag=1
PREHOOK: query: insert overwrite table bucket_big partition(day,pri)
 select key, value, 'day1' as day, 1 as pri
   from stage_bucket_big
   where file_tag='1'
PREHOOK: type: QUERY
PREHOOK: Input: default@stage_bucket_big
PREHOOK: Input: default@stage_bucket_big@file_tag=1
PREHOOK: Output: default@bucket_big
POSTHOOK: query: insert overwrite table bucket_big partition(day,pri)
 select key, value, 'day1' as day, 1 as pri
   from stage_bucket_big
   where file_tag='1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stage_bucket_big
POSTHOOK: Input: default@stage_bucket_big@file_tag=1
POSTHOOK: Output: default@bucket_big@day=day1/pri=1
POSTHOOK: Lineage: bucket_big PARTITION(day=day1,pri=1).key SIMPLE [(stage_bucket_big)stage_bucket_big.FieldSchema(name:key, type:bigint, comment:null), ]
POSTHOOK: Lineage: bucket_big PARTITION(day=day1,pri=1).value SIMPLE [(stage_bucket_big)stage_bucket_big.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: explain select a.key , a.value , b.value , 'day1' as day, 1 as pri
        from
        ( select key, value
          from bucket_big where day='day1' ) a
          left outer join
          ( select key, value
            from bucket_small
            where pri between 1 and 2 ) b
            on
          (a.key = b.key)
PREHOOK: type: QUERY
POSTHOOK: query: explain select a.key , a.value , b.value , 'day1' as day, 1 as pri
        from
        ( select key, value
          from bucket_big where day='day1' ) a
          left outer join
          ( select key, value
            from bucket_small
            where pri between 1 and 2 ) b
            on
          (a.key = b.key)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: bucket_big
                  Statistics: Num rows: 5 Data size: 495 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: bigint), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 5 Data size: 495 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: bigint)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: bigint)
                      Statistics: Num rows: 5 Data size: 495 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: bucket_small
                  Statistics: Num rows: 236 Data size: 23364 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: bigint), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 236 Data size: 23364 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: bigint)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: bigint)
                      Statistics: Num rows: 236 Data size: 23364 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Outer Join 0 to 1
                keys:
                  0 _col0 (type: bigint)
                  1 _col0 (type: bigint)
                outputColumnNames: _col0, _col1, _col3
                Statistics: Num rows: 15 Data size: 2850 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: bigint), _col1 (type: string), _col3 (type: string), 'day1' (type: string), 1 (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4
                  Statistics: Num rows: 15 Data size: 4230 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 15 Data size: 4230 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select a.key , a.value , b.value , 'day1' as day, 1 as pri
from
( select key, value
  from bucket_big where day='day1' ) a
  left outer join
  ( select key, value
  from bucket_small
  where pri between 1 and 2 ) b
on
(a.key = b.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@bucket_big
PREHOOK: Input: default@bucket_big@day=day1/pri=1
PREHOOK: Input: default@bucket_small
PREHOOK: Input: default@bucket_small@pri=1
PREHOOK: Input: default@bucket_small@pri=2
#### A masked pattern was here ####
POSTHOOK: query: select a.key , a.value , b.value , 'day1' as day, 1 as pri
from
( select key, value
  from bucket_big where day='day1' ) a
  left outer join
  ( select key, value
  from bucket_small
  where pri between 1 and 2 ) b
on
(a.key = b.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucket_big
POSTHOOK: Input: default@bucket_big@day=day1/pri=1
POSTHOOK: Input: default@bucket_small
POSTHOOK: Input: default@bucket_small@pri=1
POSTHOOK: Input: default@bucket_small@pri=2
#### A masked pattern was here ####
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
103	val_103	val_103	day1	1
103	val_103	val_103	day1	1
103	val_103	val_103	day1	1
103	val_103	val_103	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
172	val_172	val_172	day1	1
172	val_172	val_172	day1	1
172	val_172	val_172	day1	1
172	val_172	val_172	day1	1
374	val_374	val_374	day1	1
374	val_374	val_374	day1	1
PREHOOK: query: explain select a.key , a.value , b.value , 'day1' as day, 1 as pri
from
( select key, value
  from bucket_big where day='day1' ) a
left outer join
( select key, value
  from bucket_small
  where pri between 1 and 2 ) b
on
(a.key = b.key)
PREHOOK: type: QUERY
POSTHOOK: query: explain select a.key , a.value , b.value , 'day1' as day, 1 as pri
from
( select key, value
  from bucket_big where day='day1' ) a
left outer join
( select key, value
  from bucket_small
  where pri between 1 and 2 ) b
on
(a.key = b.key)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: bucket_small
                  Statistics: Num rows: 236 Data size: 23364 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: bigint), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 236 Data size: 23364 Basic stats: COMPLETE Column stats: COMPLETE
            Map Operator Tree:
                TableScan
                  alias: bucket_big
                  Statistics: Num rows: 5 Data size: 495 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: bigint), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 5 Data size: 495 Basic stats: COMPLETE Column stats: COMPLETE
                    Merge Join Operator
                      condition map:
                           Left Outer Join 0 to 1
                      keys:
                        0 _col0 (type: bigint)
                        1 _col0 (type: bigint)
                      outputColumnNames: _col0, _col1, _col3
                      Statistics: Num rows: 15 Data size: 2850 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: _col0 (type: bigint), _col1 (type: string), _col3 (type: string), 'day1' (type: string), 1 (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4
                        Statistics: Num rows: 15 Data size: 4230 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 15 Data size: 4230 Basic stats: COMPLETE Column stats: COMPLETE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select a.key , a.value , b.value , 'day1' as day, 1 as pri
from
( select key, value
  from bucket_big where day='day1' ) a
left outer join
( select key, value
  from bucket_small
  where pri between 1 and 2 ) b
on
(a.key = b.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@bucket_big
PREHOOK: Input: default@bucket_big@day=day1/pri=1
PREHOOK: Input: default@bucket_small
PREHOOK: Input: default@bucket_small@pri=1
PREHOOK: Input: default@bucket_small@pri=2
#### A masked pattern was here ####
POSTHOOK: query: select a.key , a.value , b.value , 'day1' as day, 1 as pri
from
( select key, value
  from bucket_big where day='day1' ) a
left outer join
( select key, value
  from bucket_small
  where pri between 1 and 2 ) b
on
(a.key = b.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucket_big
POSTHOOK: Input: default@bucket_big@day=day1/pri=1
POSTHOOK: Input: default@bucket_small
POSTHOOK: Input: default@bucket_small@pri=1
POSTHOOK: Input: default@bucket_small@pri=2
#### A masked pattern was here ####
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
103	val_103	val_103	day1	1
103	val_103	val_103	day1	1
103	val_103	val_103	day1	1
103	val_103	val_103	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
172	val_172	val_172	day1	1
172	val_172	val_172	day1	1
172	val_172	val_172	day1	1
172	val_172	val_172	day1	1
374	val_374	val_374	day1	1
374	val_374	val_374	day1	1
PREHOOK: query: drop table bucket_big
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@bucket_big
PREHOOK: Output: default@bucket_big
POSTHOOK: query: drop table bucket_big
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@bucket_big
POSTHOOK: Output: default@bucket_big
PREHOOK: query: drop table bucket_small
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@bucket_small
PREHOOK: Output: default@bucket_small
POSTHOOK: query: drop table bucket_small
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@bucket_small
POSTHOOK: Output: default@bucket_small
PREHOOK: query: CREATE TABLE bucket_big
(
key BIGINT,
value STRING
)
PARTITIONED BY (day STRING, pri bigint)
clustered by (key) sorted by (key) into 12 buckets
stored as RCFile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucket_big
POSTHOOK: query: CREATE TABLE bucket_big
(
key BIGINT,
value STRING
)
PARTITIONED BY (day STRING, pri bigint)
clustered by (key) sorted by (key) into 12 buckets
stored as RCFile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucket_big
PREHOOK: query: CREATE TABLE bucket_small
(
key BIGINT,
value string
)
PARTITIONED BY (pri bigint)
clustered by (key) sorted by (key) into 24 buckets
stored as RCFile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucket_small
POSTHOOK: query: CREATE TABLE bucket_small
(
key BIGINT,
value string
)
PARTITIONED BY (pri bigint)
clustered by (key) sorted by (key) into 24 buckets
stored as RCFile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucket_small
PREHOOK: query: insert overwrite table bucket_small partition(pri)
select
key,
value,
file_tag as pri
from
stage_bucket_small
where file_tag between 1 and 2
PREHOOK: type: QUERY
PREHOOK: Input: default@stage_bucket_small
PREHOOK: Input: default@stage_bucket_small@file_tag=1
PREHOOK: Input: default@stage_bucket_small@file_tag=2
PREHOOK: Output: default@bucket_small
POSTHOOK: query: insert overwrite table bucket_small partition(pri)
select
key,
value,
file_tag as pri
from
stage_bucket_small
where file_tag between 1 and 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stage_bucket_small
POSTHOOK: Input: default@stage_bucket_small@file_tag=1
POSTHOOK: Input: default@stage_bucket_small@file_tag=2
POSTHOOK: Output: default@bucket_small@pri=1
POSTHOOK: Output: default@bucket_small@pri=2
POSTHOOK: Lineage: bucket_small PARTITION(pri=1).key SIMPLE [(stage_bucket_small)stage_bucket_small.FieldSchema(name:key, type:bigint, comment:null), ]
POSTHOOK: Lineage: bucket_small PARTITION(pri=1).value SIMPLE [(stage_bucket_small)stage_bucket_small.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: bucket_small PARTITION(pri=2).key SIMPLE [(stage_bucket_small)stage_bucket_small.FieldSchema(name:key, type:bigint, comment:null), ]
POSTHOOK: Lineage: bucket_small PARTITION(pri=2).value SIMPLE [(stage_bucket_small)stage_bucket_small.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: insert overwrite table bucket_big partition(day,pri)
select key, value, 'day1' as day, 1 as pri
from stage_bucket_big
where file_tag='1'
PREHOOK: type: QUERY
PREHOOK: Input: default@stage_bucket_big
PREHOOK: Input: default@stage_bucket_big@file_tag=1
PREHOOK: Output: default@bucket_big
POSTHOOK: query: insert overwrite table bucket_big partition(day,pri)
select key, value, 'day1' as day, 1 as pri
from stage_bucket_big
where file_tag='1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stage_bucket_big
POSTHOOK: Input: default@stage_bucket_big@file_tag=1
POSTHOOK: Output: default@bucket_big@day=day1/pri=1
POSTHOOK: Lineage: bucket_big PARTITION(day=day1,pri=1).key SIMPLE [(stage_bucket_big)stage_bucket_big.FieldSchema(name:key, type:bigint, comment:null), ]
POSTHOOK: Lineage: bucket_big PARTITION(day=day1,pri=1).value SIMPLE [(stage_bucket_big)stage_bucket_big.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: explain select a.key , a.value , b.value , 'day1' as day, 1 as pri
        from
        ( select key, value
          from bucket_big where day='day1' ) a
        left outer join
        ( select key, value
          from bucket_small
          where pri between 1 and 2 ) b
        on
        (a.key = b.key)
PREHOOK: type: QUERY
POSTHOOK: query: explain select a.key , a.value , b.value , 'day1' as day, 1 as pri
        from
        ( select key, value
          from bucket_big where day='day1' ) a
        left outer join
        ( select key, value
          from bucket_small
          where pri between 1 and 2 ) b
        on
        (a.key = b.key)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: bucket_small
                  Statistics: Num rows: 236 Data size: 23364 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: bigint), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 236 Data size: 23364 Basic stats: COMPLETE Column stats: COMPLETE
            Map Operator Tree:
                TableScan
                  alias: bucket_big
                  Statistics: Num rows: 5 Data size: 495 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: bigint), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 5 Data size: 495 Basic stats: COMPLETE Column stats: COMPLETE
                    Merge Join Operator
                      condition map:
                           Left Outer Join 0 to 1
                      keys:
                        0 _col0 (type: bigint)
                        1 _col0 (type: bigint)
                      outputColumnNames: _col0, _col1, _col3
                      Statistics: Num rows: 15 Data size: 2850 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: _col0 (type: bigint), _col1 (type: string), _col3 (type: string), 'day1' (type: string), 1 (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4
                        Statistics: Num rows: 15 Data size: 4230 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 15 Data size: 4230 Basic stats: COMPLETE Column stats: COMPLETE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select a.key , a.value , b.value , 'day1' as day, 1 as pri
from
( select key, value
  from bucket_big where day='day1' ) a
left outer join
( select key, value
  from bucket_small
  where pri between 1 and 2 ) b
on
(a.key = b.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@bucket_big
PREHOOK: Input: default@bucket_big@day=day1/pri=1
PREHOOK: Input: default@bucket_small
PREHOOK: Input: default@bucket_small@pri=1
PREHOOK: Input: default@bucket_small@pri=2
#### A masked pattern was here ####
POSTHOOK: query: select a.key , a.value , b.value , 'day1' as day, 1 as pri
from
( select key, value
  from bucket_big where day='day1' ) a
left outer join
( select key, value
  from bucket_small
  where pri between 1 and 2 ) b
on
(a.key = b.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucket_big
POSTHOOK: Input: default@bucket_big@day=day1/pri=1
POSTHOOK: Input: default@bucket_small
POSTHOOK: Input: default@bucket_small@pri=1
POSTHOOK: Input: default@bucket_small@pri=2
#### A masked pattern was here ####
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
0	val_0	val_0	day1	1
103	val_103	val_103	day1	1
103	val_103	val_103	day1	1
103	val_103	val_103	day1	1
103	val_103	val_103	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
169	val_169	val_169	day1	1
172	val_172	val_172	day1	1
172	val_172	val_172	day1	1
172	val_172	val_172	day1	1
172	val_172	val_172	day1	1
374	val_374	val_374	day1	1
374	val_374	val_374	day1	1
