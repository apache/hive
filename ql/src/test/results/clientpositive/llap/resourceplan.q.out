PREHOOK: query: show grant user hive_test_user
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant user hive_test_user
POSTHOOK: type: SHOW_GRANT
default	alltypesorc			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	alltypesorc			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	alltypesorc			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	alltypesorc			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	alltypesparquet			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	alltypesparquet			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	alltypesparquet			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	alltypesparquet			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	cbo_t1			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	cbo_t1			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	cbo_t1			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	cbo_t1			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	cbo_t2			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	cbo_t2			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	cbo_t2			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	cbo_t2			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	cbo_t3			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	cbo_t3			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	cbo_t3			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	cbo_t3			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	lineitem			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	lineitem			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	lineitem			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	lineitem			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	part			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	part			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	part			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	part			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	src			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	src			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	src			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	src			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	src1			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	src1			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	src1			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	src1			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	src_cbo			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	src_cbo			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	src_cbo			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	src_cbo			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	src_json			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	src_json			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	src_json			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	src_json			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	src_sequencefile			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	src_sequencefile			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	src_sequencefile			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	src_sequencefile			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	src_thrift			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	src_thrift			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	src_thrift			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	src_thrift			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	srcbucket			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	srcbucket			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	srcbucket			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	srcbucket			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	srcbucket2			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	srcbucket2			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	srcbucket2			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	srcbucket2			hive_test_user	USER	UPDATE	true	-1	hive_test_user
default	srcpart			hive_test_user	USER	DELETE	true	-1	hive_test_user
default	srcpart			hive_test_user	USER	INSERT	true	-1	hive_test_user
default	srcpart			hive_test_user	USER	SELECT	true	-1	hive_test_user
default	srcpart			hive_test_user	USER	UPDATE	true	-1	hive_test_user
information_schema	column_privileges			hive_test_user	USER	DELETE	true	-1	hive_test_user
information_schema	column_privileges			hive_test_user	USER	INSERT	true	-1	hive_test_user
information_schema	column_privileges			hive_test_user	USER	SELECT	true	-1	hive_test_user
information_schema	column_privileges			hive_test_user	USER	UPDATE	true	-1	hive_test_user
information_schema	columns			hive_test_user	USER	DELETE	true	-1	hive_test_user
information_schema	columns			hive_test_user	USER	INSERT	true	-1	hive_test_user
information_schema	columns			hive_test_user	USER	SELECT	true	-1	hive_test_user
information_schema	columns			hive_test_user	USER	UPDATE	true	-1	hive_test_user
information_schema	compactions			hive_test_user	USER	DELETE	true	-1	hive_test_user
information_schema	compactions			hive_test_user	USER	INSERT	true	-1	hive_test_user
information_schema	compactions			hive_test_user	USER	SELECT	true	-1	hive_test_user
information_schema	compactions			hive_test_user	USER	UPDATE	true	-1	hive_test_user
information_schema	scheduled_executions			hive_test_user	USER	DELETE	true	-1	hive_test_user
information_schema	scheduled_executions			hive_test_user	USER	INSERT	true	-1	hive_test_user
information_schema	scheduled_executions			hive_test_user	USER	SELECT	true	-1	hive_test_user
information_schema	scheduled_executions			hive_test_user	USER	UPDATE	true	-1	hive_test_user
information_schema	scheduled_queries			hive_test_user	USER	DELETE	true	-1	hive_test_user
information_schema	scheduled_queries			hive_test_user	USER	INSERT	true	-1	hive_test_user
information_schema	scheduled_queries			hive_test_user	USER	SELECT	true	-1	hive_test_user
information_schema	scheduled_queries			hive_test_user	USER	UPDATE	true	-1	hive_test_user
information_schema	schemata			hive_test_user	USER	DELETE	true	-1	hive_test_user
information_schema	schemata			hive_test_user	USER	INSERT	true	-1	hive_test_user
information_schema	schemata			hive_test_user	USER	SELECT	true	-1	hive_test_user
information_schema	schemata			hive_test_user	USER	UPDATE	true	-1	hive_test_user
information_schema	table_privileges			hive_test_user	USER	DELETE	true	-1	hive_test_user
information_schema	table_privileges			hive_test_user	USER	INSERT	true	-1	hive_test_user
information_schema	table_privileges			hive_test_user	USER	SELECT	true	-1	hive_test_user
information_schema	table_privileges			hive_test_user	USER	UPDATE	true	-1	hive_test_user
information_schema	tables			hive_test_user	USER	DELETE	true	-1	hive_test_user
information_schema	tables			hive_test_user	USER	INSERT	true	-1	hive_test_user
information_schema	tables			hive_test_user	USER	SELECT	true	-1	hive_test_user
information_schema	tables			hive_test_user	USER	UPDATE	true	-1	hive_test_user
information_schema	views			hive_test_user	USER	DELETE	true	-1	hive_test_user
information_schema	views			hive_test_user	USER	INSERT	true	-1	hive_test_user
information_schema	views			hive_test_user	USER	SELECT	true	-1	hive_test_user
information_schema	views			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	bucketing_cols			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	bucketing_cols			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	bucketing_cols			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	bucketing_cols			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	cds			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	cds			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	cds			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	cds			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	columns_v2			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	columns_v2			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	columns_v2			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	columns_v2			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	compaction_queue			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	compaction_queue			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	compaction_queue			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	compaction_queue			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	compactions			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	compactions			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	compactions			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	compactions			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	completed_compactions			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	completed_compactions			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	completed_compactions			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	completed_compactions			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	database_params			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	database_params			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	database_params			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	database_params			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	db_privs			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	db_privs			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	db_privs			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	db_privs			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	db_version			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	db_version			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	db_version			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	db_version			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	dbs			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	dbs			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	dbs			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	dbs			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	funcs			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	funcs			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	funcs			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	funcs			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	global_privs			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	global_privs			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	global_privs			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	global_privs			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	hive_locks			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	hive_locks			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	hive_locks			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	hive_locks			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	key_constraints			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	key_constraints			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	key_constraints			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	key_constraints			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	locks			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	locks			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	locks			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	locks			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	mv_creation_metadata			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	mv_creation_metadata			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	mv_creation_metadata			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	mv_creation_metadata			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	mv_tables_used			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	mv_tables_used			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	mv_tables_used			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	mv_tables_used			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	part_col_privs			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	part_col_privs			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	part_col_privs			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	part_col_privs			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	part_col_stats			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	part_col_stats			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	part_col_stats			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	part_col_stats			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	part_privs			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	part_privs			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	part_privs			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	part_privs			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	partition_key_vals			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	partition_key_vals			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	partition_key_vals			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	partition_key_vals			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	partition_keys			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	partition_keys			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	partition_keys			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	partition_keys			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	partition_params			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	partition_params			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	partition_params			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	partition_params			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	partition_stats_view			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	partition_stats_view			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	partition_stats_view			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	partition_stats_view			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	partitions			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	partitions			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	partitions			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	partitions			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	role_map			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	role_map			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	role_map			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	role_map			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	roles			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	roles			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	roles			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	roles			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	scheduled_executions			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	scheduled_executions			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	scheduled_executions			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	scheduled_executions			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	scheduled_queries			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	scheduled_queries			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	scheduled_queries			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	scheduled_queries			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	sd_params			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	sd_params			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	sd_params			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	sd_params			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	sds			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	sds			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	sds			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	sds			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	sequence_table			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	sequence_table			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	sequence_table			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	sequence_table			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	serde_params			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	serde_params			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	serde_params			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	serde_params			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	serdes			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	serdes			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	serdes			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	serdes			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	skewed_col_names			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	skewed_col_names			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	skewed_col_names			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	skewed_col_names			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	skewed_col_value_loc_map			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	skewed_col_value_loc_map			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	skewed_col_value_loc_map			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	skewed_col_value_loc_map			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	skewed_string_list			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	skewed_string_list			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	skewed_string_list			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	skewed_string_list			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	skewed_string_list_values			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	skewed_string_list_values			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	skewed_string_list_values			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	skewed_string_list_values			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	skewed_values			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	skewed_values			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	skewed_values			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	skewed_values			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	sort_cols			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	sort_cols			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	sort_cols			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	sort_cols			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	tab_col_stats			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	tab_col_stats			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	tab_col_stats			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	tab_col_stats			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	table_params			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	table_params			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	table_params			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	table_params			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	table_stats_view			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	table_stats_view			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	table_stats_view			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	table_stats_view			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	tbl_col_privs			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	tbl_col_privs			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	tbl_col_privs			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	tbl_col_privs			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	tbl_privs			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	tbl_privs			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	tbl_privs			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	tbl_privs			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	tbls			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	tbls			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	tbls			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	tbls			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	transactions			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	transactions			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	transactions			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	transactions			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	txn_components			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	txn_components			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	txn_components			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	txn_components			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	txns			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	txns			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	txns			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	txns			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	version			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	version			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	version			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	version			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	wm_mappings			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	wm_mappings			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	wm_mappings			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	wm_mappings			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	wm_pools			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	wm_pools			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	wm_pools			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	wm_pools			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	wm_pools_to_triggers			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	wm_pools_to_triggers			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	wm_pools_to_triggers			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	wm_pools_to_triggers			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	wm_resourceplans			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	wm_resourceplans			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	wm_resourceplans			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	wm_resourceplans			hive_test_user	USER	UPDATE	true	-1	hive_test_user
sys	wm_triggers			hive_test_user	USER	DELETE	true	-1	hive_test_user
sys	wm_triggers			hive_test_user	USER	INSERT	true	-1	hive_test_user
sys	wm_triggers			hive_test_user	USER	SELECT	true	-1	hive_test_user
sys	wm_triggers			hive_test_user	USER	UPDATE	true	-1	hive_test_user
PREHOOK: query: SHOW RESOURCE PLANS
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: SHOW RESOURCE PLANS
POSTHOOK: type: SHOW RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
Activate a resource plan to enable workload management!
PREHOOK: query: EXPLAIN ENABLE WORKLOAD MANAGEMENT
PREHOOK: type: ALTER RESOURCEPLAN
POSTHOOK: query: EXPLAIN ENABLE WORKLOAD MANAGEMENT
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:

STAGE PLANS:
Activate a resource plan to enable workload management!
PREHOOK: query: ENABLE WORKLOAD MANAGEMENT
PREHOOK: type: ALTER RESOURCEPLAN
POSTHOOK: query: ENABLE WORKLOAD MANAGEMENT
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: CREATE RESOURCE PLAN plan_1
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN plan_1
POSTHOOK: type: CREATE RESOURCEPLAN
PREHOOK: query: EXPLAIN SHOW RESOURCE PLANS
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN SHOW RESOURCE PLANS
POSTHOOK: type: SHOW RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Show Resource plans

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SHOW RESOURCE PLANS
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: SHOW RESOURCE PLANS
POSTHOOK: type: SHOW RESOURCEPLAN
plan_1	DISABLED	 
PREHOOK: query: EXPLAIN SHOW RESOURCE PLAN plan_1
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN SHOW RESOURCE PLAN plan_1
POSTHOOK: type: SHOW RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Show Resource plans
      Resource plan name: plan_1

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SHOW RESOURCE PLAN plan_1
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: SHOW RESOURCE PLAN plan_1
POSTHOOK: type: SHOW RESOURCEPLAN
plan_1[status=DISABLED,parallelism=null,defaultPool=default]
 +  default[allocFraction=1.0,schedulingPolicy=null,parallelism=4]
     |  mapped for default
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	DISABLED	NULL	default
PREHOOK: query: EXPLAIN CREATE RESOURCE PLAN plan_2 WITH QUERY_PARALLELISM=5
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN CREATE RESOURCE PLAN plan_2 WITH QUERY_PARALLELISM=5
POSTHOOK: type: CREATE RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Create Resource plan
      Query parallelism: 5
      Resource plan name: plan_2

PREHOOK: query: CREATE RESOURCE PLAN plan_2 WITH QUERY_PARALLELISM=5
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN plan_2 WITH QUERY_PARALLELISM=5
POSTHOOK: type: CREATE RESOURCEPLAN
PREHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_2 SET QUERY_PARALLELISM=10
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_2 SET QUERY_PARALLELISM=10
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Alter Resource plan Set
      Query parallelism: 10
      Resource plan name: plan_2

PREHOOK: query: ALTER RESOURCE PLAN plan_2 SET QUERY_PARALLELISM=10
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_2 SET QUERY_PARALLELISM=10
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SHOW RESOURCE PLANS
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: SHOW RESOURCE PLANS
POSTHOOK: type: SHOW RESOURCEPLAN
plan_1	DISABLED	 
plan_2	DISABLED	10
PREHOOK: query: SHOW RESOURCE PLAN plan_2
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: SHOW RESOURCE PLAN plan_2
POSTHOOK: type: SHOW RESOURCEPLAN
plan_2[status=DISABLED,parallelism=10,defaultPool=default]
 +  default[allocFraction=1.0,schedulingPolicy=null,parallelism=5]
     |  mapped for default
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	DISABLED	NULL	default
plan_2	default	DISABLED	10	default
PREHOOK: query: CREATE RESOURCE PLAN plan_2
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. Resource plan plan_2 already exists
PREHOOK: query: CREATE RESOURCE PLAN IF NOT EXISTS plan_2
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN IF NOT EXISTS plan_2
POSTHOOK: type: CREATE RESOURCEPLAN
FAILED: SemanticException Invalid create arguments (tok_create_rp plan_3 (tok_query_parallelism 5) (tok_default_pool all))
PREHOOK: query: ALTER RESOURCE PLAN plan_1 RENAME TO plan_2
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. AlreadyExistsException(message:Resource plan name should be unique: )
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	DISABLED	NULL	default
plan_2	default	DISABLED	10	default
PREHOOK: query: ALTER RESOURCE PLAN plan_1 RENAME TO plan_3
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_1 RENAME TO plan_3
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	DISABLED	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 SET QUERY_PARALLELISM = 4
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 SET QUERY_PARALLELISM = 4
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	DISABLED	4	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 UNSET QUERY_PARALLELISM
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 UNSET QUERY_PARALLELISM
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	DISABLED	NULL	default
PREHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_3 SET QUERY_PARALLELISM = 30, DEFAULT POOL = default1
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_3 SET QUERY_PARALLELISM = 30, DEFAULT POOL = default1
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Alter Resource plan Set
      Default pool: default1
      Query parallelism: 30
      Resource plan name: plan_3

PREHOOK: query: ALTER RESOURCE PLAN plan_3 SET QUERY_PARALLELISM = 30, DEFAULT POOL = default1
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. NoSuchObjectException(message:Cannot find pool: default1)
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	DISABLED	NULL	default
PREHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_3 ENABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_3 ENABLE
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Enable Resource plan
      Resource plan name: plan_3
      Enable: true

PREHOOK: query: ALTER RESOURCE PLAN plan_3 ENABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 ENABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_3 RENAME TO plan_4
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_3 RENAME TO plan_4
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Rename Resource plan
      New resource plan name: plan_4
      Resource plan name: plan_3

PREHOOK: query: ALTER RESOURCE PLAN plan_3 RENAME TO plan_4
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan must be disabled to edit it.)
PREHOOK: query: ALTER RESOURCE PLAN plan_3 SET QUERY_PARALLELISM = 30
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan must be disabled to edit it.)
PREHOOK: query: ALTER RESOURCE PLAN plan_3 DISABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 DISABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	DISABLED	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan plan_3 is disabled and should be enabled before activation (or in the same command))
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	DISABLED	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 DISABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 DISABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	DISABLED	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 ENABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 ENABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	ENABLED	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 ACTIVATE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	ACTIVE	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 ACTIVATE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	ACTIVE	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 ENABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan plan_3 is active; activate another plan first, or disable workload management.)
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	ACTIVE	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 DISABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan plan_3 is active; activate another plan first, or disable workload management.)
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	ACTIVE	NULL	default
PREHOOK: query: EXPLAIN DISABLE WORKLOAD MANAGEMENT
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN DISABLE WORKLOAD MANAGEMENT
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Disable Resource plan

PREHOOK: query: DISABLE WORKLOAD MANAGEMENT
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DISABLE WORKLOAD MANAGEMENT
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	ENABLED	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 DISABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 DISABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: ALTER RESOURCE PLAN plan_3 ENABLE ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 ENABLE ACTIVATE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	DISABLED	10	default
plan_3	default	ACTIVE	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_2 ENABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_2 ENABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	ENABLED	10	default
plan_3	default	ACTIVE	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_2 ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_2 ACTIVATE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	ACTIVE	10	default
plan_3	default	ENABLED	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 ENABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 ENABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	ACTIVE	10	default
plan_3	default	ENABLED	NULL	default
PREHOOK: query: ALTER RESOURCE PLAN plan_3 DISABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_3 DISABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	ACTIVE	10	default
plan_3	default	DISABLED	NULL	default
PREHOOK: query: EXPLAIN DROP RESOURCE PLAN plan_2
PREHOOK: type: DROP RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN DROP RESOURCE PLAN plan_2
POSTHOOK: type: DROP RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Drop Resource plan
      Resource plan name: plan_2

PREHOOK: query: DROP RESOURCE PLAN plan_2
PREHOOK: type: DROP RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. MetaException(message:Cannot drop an active resource plan)
PREHOOK: query: DROP RESOURCE PLAN plan_3
PREHOOK: type: DROP RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP RESOURCE PLAN plan_3
POSTHOOK: type: DROP RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	ACTIVE	10	default
PREHOOK: query: DROP RESOURCE PLAN plan_99999
PREHOOK: type: DROP RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. Resource plan plan_99999 does not exist
PREHOOK: query: DROP RESOURCE PLAN IF EXISTS plan_99999
PREHOOK: type: DROP RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP RESOURCE PLAN IF EXISTS plan_99999
POSTHOOK: type: DROP RESOURCEPLAN
PREHOOK: query: CREATE RESOURCE PLAN `table`
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN `table`
POSTHOOK: type: CREATE RESOURCEPLAN
PREHOOK: query: ALTER RESOURCE PLAN `table` SET QUERY_PARALLELISM = 1
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN `table` SET QUERY_PARALLELISM = 1
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_2	default	ACTIVE	10	default
table	default	DISABLED	1	default
PREHOOK: query: create table wm_test(key string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@wm_test
POSTHOOK: query: create table wm_test(key string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@wm_test
PREHOOK: query: select key as 30min from wm_test
PREHOOK: type: QUERY
PREHOOK: Input: default@wm_test
#### A masked pattern was here ####
POSTHOOK: query: select key as 30min from wm_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@wm_test
#### A masked pattern was here ####
PREHOOK: query: select "10kb" as str from wm_test
PREHOOK: type: QUERY
PREHOOK: Input: default@wm_test
#### A masked pattern was here ####
POSTHOOK: query: select "10kb" as str from wm_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@wm_test
#### A masked pattern was here ####
PREHOOK: query: drop table wm_test
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@wm_test
PREHOOK: Output: default@wm_test
POSTHOOK: query: drop table wm_test
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@wm_test
POSTHOOK: Output: default@wm_test
PREHOOK: query: CREATE RESOURCE PLAN plan_1
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN plan_1
POSTHOOK: type: CREATE RESOURCEPLAN
PREHOOK: query: EXPLAIN CREATE TRIGGER plan_1.trigger_1 WHEN BYTES_READ > '10kb' DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN CREATE TRIGGER plan_1.trigger_1 WHEN BYTES_READ > '10kb' DO KILL
POSTHOOK: type: CREATE TRIGGER
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Create WM Trigger
      Action expression: KILL
      Resource plan name: plan_1
      Trigger expression: BYTES_READ > '10kb'
      Trigger name: trigger_1

PREHOOK: query: CREATE TRIGGER plan_1.trigger_1 WHEN BYTES_READ > '10kb' DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER plan_1.trigger_1 WHEN BYTES_READ > '10kb' DO KILL
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
plan_1	default	trigger_1	BYTES_READ > '10kb'	KILL
PREHOOK: query: CREATE TRIGGER plan_1.trigger_1 WHEN ELAPSED_TIME > 300 DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. AlreadyExistsException(message:Trigger already exists, use alter: )
FAILED: ParseException line 4:60 mismatched input 'AND' expecting DO near ''30sec'' in create trigger statement
FAILED: ParseException line 2:63 mismatched input 'OR' expecting DO near ''30second'' in create trigger statement
FAILED: ParseException line 2:50 mismatched input '>=' expecting > near 'ELAPSED_TIME' in comparisionOperator
FAILED: ParseException line 2:50 mismatched input '<' expecting > near 'ELAPSED_TIME' in comparisionOperator
FAILED: ParseException line 2:50 mismatched input '<=' expecting > near 'ELAPSED_TIME' in comparisionOperator
FAILED: ParseException line 2:50 mismatched input '=' expecting > near 'ELAPSED_TIME' in comparisionOperator
PREHOOK: query: CREATE TRIGGER plan_1.trigger_2 WHEN BYTES_READ > '10k' DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. java.lang.IllegalArgumentException: Invalid size unit k
PREHOOK: query: CREATE TRIGGER plan_1.trigger_2 WHEN ELAPSED_TIME > '10 millis' DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. java.lang.IllegalArgumentException: Invalid time unit millis
PREHOOK: query: CREATE TRIGGER plan_1.trigger_2 WHEN BYTES_READ > '-1000' DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. java.lang.IllegalArgumentException: Illegal value for counter limit. Expected a positive long value.
PREHOOK: query: CREATE TRIGGER plan_1.trigger_2 WHEN ELAPSED_TIME > '30hour' DO MOVE TO slow_pool
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER plan_1.trigger_2 WHEN ELAPSED_TIME > '30hour' DO MOVE TO slow_pool
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
plan_1	default	trigger_1	BYTES_READ > '10kb'	KILL
plan_1	default	trigger_2	ELAPSED_TIME > '30hour'	MOVE TO slow_pool
PREHOOK: query: EXPLAIN ALTER TRIGGER plan_1.trigger_1 WHEN BYTES_READ > '1GB' DO KILL
PREHOOK: type: ALTER TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER TRIGGER plan_1.trigger_1 WHEN BYTES_READ > '1GB' DO KILL
POSTHOOK: type: ALTER TRIGGER
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Alter WM Trigger
      Action expression: KILL
      Resource plan name: plan_1
      Trigger expression: BYTES_READ > '1GB'
      Trigger name: trigger_1

PREHOOK: query: ALTER TRIGGER plan_1.trigger_1 WHEN BYTES_READ > '1GB' DO KILL
PREHOOK: type: ALTER TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER TRIGGER plan_1.trigger_1 WHEN BYTES_READ > '1GB' DO KILL
POSTHOOK: type: ALTER TRIGGER
PREHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
plan_1	default	trigger_1	BYTES_READ > '1GB'	KILL
plan_1	default	trigger_2	ELAPSED_TIME > '30hour'	MOVE TO slow_pool
PREHOOK: query: EXPLAIN DROP TRIGGER plan_1.trigger_1
PREHOOK: type: DROP TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN DROP TRIGGER plan_1.trigger_1
POSTHOOK: type: DROP TRIGGER
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Drop WM Trigger
      Resource plan name: plan_1
      Trigger name: trigger_1

PREHOOK: query: DROP TRIGGER plan_1.trigger_1
PREHOOK: type: DROP TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP TRIGGER plan_1.trigger_1
POSTHOOK: type: DROP TRIGGER
PREHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
plan_1	default	trigger_2	ELAPSED_TIME > '30hour'	MOVE TO slow_pool
PREHOOK: query: CREATE TRIGGER plan_2.trigger_1 WHEN BYTES_READ > '100mb' DO MOVE TO null_pool
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan must be disabled to edit it.)
PREHOOK: query: CREATE TRIGGER `table`.`table` WHEN BYTES_WRITTEN > '100KB' DO MOVE TO `default`
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER `table`.`table` WHEN BYTES_WRITTEN > '100KB' DO MOVE TO `default`
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: CREATE TRIGGER `table`.`trigger` WHEN BYTES_WRITTEN > '100MB' DO MOVE TO `default`
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER `table`.`trigger` WHEN BYTES_WRITTEN > '100MB' DO MOVE TO `default`
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: CREATE TRIGGER `table`.`database` WHEN BYTES_WRITTEN > "1GB" DO MOVE TO `default`
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER `table`.`database` WHEN BYTES_WRITTEN > "1GB" DO MOVE TO `default`
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: CREATE TRIGGER `table`.`trigger1` WHEN ELAPSED_TIME > 10 DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER `table`.`trigger1` WHEN ELAPSED_TIME > 10 DO KILL
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: CREATE TRIGGER `table`.`trigger2` WHEN ELAPSED_TIME > '1hour' DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER `table`.`trigger2` WHEN ELAPSED_TIME > '1hour' DO KILL
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
plan_1	default	trigger_2	ELAPSED_TIME > '30hour'	MOVE TO slow_pool
table	default	database	BYTES_WRITTEN > "1GB"	MOVE TO default
table	default	table	BYTES_WRITTEN > '100KB'	MOVE TO default
table	default	trigger	BYTES_WRITTEN > '100MB'	MOVE TO default
table	default	trigger1	ELAPSED_TIME > 10	KILL
table	default	trigger2	ELAPSED_TIME > '1hour'	KILL
PREHOOK: query: DROP TRIGGER `table`.`database`
PREHOOK: type: DROP TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP TRIGGER `table`.`database`
POSTHOOK: type: DROP TRIGGER
PREHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
plan_1	default	trigger_2	ELAPSED_TIME > '30hour'	MOVE TO slow_pool
table	default	table	BYTES_WRITTEN > '100KB'	MOVE TO default
table	default	trigger	BYTES_WRITTEN > '100MB'	MOVE TO default
table	default	trigger1	ELAPSED_TIME > 10	KILL
table	default	trigger2	ELAPSED_TIME > '1hour'	KILL
PREHOOK: query: ALTER RESOURCE PLAN plan_1 ENABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_1 ENABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ENABLED	NULL	default
plan_2	default	ACTIVE	10	default
table	default	DISABLED	1	default
PREHOOK: query: DROP TRIGGER plan_1.trigger_2
PREHOOK: type: DROP TRIGGER
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan must be disabled to edit it.)
PREHOOK: query: ALTER TRIGGER plan_1.trigger_2 WHEN BYTES_READ > "1000gb" DO KILL
PREHOOK: type: ALTER TRIGGER
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan must be disabled to edit it.)
PREHOOK: query: ALTER RESOURCE PLAN plan_1 ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_1 ACTIVATE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ACTIVE	NULL	default
plan_2	default	ENABLED	10	default
table	default	DISABLED	1	default
PREHOOK: query: DROP TRIGGER plan_1.trigger_2
PREHOOK: type: DROP TRIGGER
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan must be disabled to edit it.)
PREHOOK: query: ALTER TRIGGER plan_1.trigger_2 WHEN BYTES_READ > "1000KB" DO KILL
PREHOOK: type: ALTER TRIGGER
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan must be disabled to edit it.)
PREHOOK: query: ALTER RESOURCE PLAN plan_2 DISABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_2 DISABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: CREATE TRIGGER plan_2.trigger_1 WHEN BYTES_READ > 0 DO MOVE TO null_pool
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER plan_2.trigger_1 WHEN BYTES_READ > 0 DO MOVE TO null_pool
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
plan_1	default	trigger_2	ELAPSED_TIME > '30hour'	MOVE TO slow_pool
plan_2	default	trigger_1	BYTES_READ > 0	MOVE TO null_pool
table	default	table	BYTES_WRITTEN > '100KB'	MOVE TO default
table	default	trigger	BYTES_WRITTEN > '100MB'	MOVE TO default
table	default	trigger1	ELAPSED_TIME > 10	KILL
table	default	trigger2	ELAPSED_TIME > '1hour'	KILL
PREHOOK: query: EXPLAIN CREATE POOL plan_1.default WITH
   ALLOC_FRACTION=1.0, QUERY_PARALLELISM=5, SCHEDULING_POLICY='default'
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN CREATE POOL plan_1.default WITH
   ALLOC_FRACTION=1.0, QUERY_PARALLELISM=5, SCHEDULING_POLICY='default'
POSTHOOK: type: CREATE POOL
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Create Pool
      Alloc fraction: 1.0
      Pool path: default
      Query parallelism: 5
      Resource plan name: plan_1
      Scheduling policy: default

PREHOOK: query: CREATE POOL plan_1.default WITH
   ALLOC_FRACTION=1.0, QUERY_PARALLELISM=5, SCHEDULING_POLICY='default'
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Resource plan must be disabled to edit it.)
FAILED: SemanticException alloc_fraction should be specified for a pool
FAILED: SemanticException query_parallelism should be specified for a pool
PREHOOK: query: CREATE POOL plan_2.default WITH ALLOC_FRACTION=1.0, QUERY_PARALLELISM=5
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. AlreadyExistsException(message:Pool already exists: )
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	default	1.0	5	NULL
table	default	default	1.0	4	NULL
PREHOOK: query: CREATE POOL plan_2.default.c1 WITH
    ALLOC_FRACTION=0.3, QUERY_PARALLELISM=3, SCHEDULING_POLICY='invalid'
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. Invalid scheduling policy invalid
PREHOOK: query: CREATE POOL plan_2.default.c1 WITH
    ALLOC_FRACTION=0.3, QUERY_PARALLELISM=3, SCHEDULING_POLICY='fair'
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE POOL plan_2.default.c1 WITH
    ALLOC_FRACTION=0.3, QUERY_PARALLELISM=3, SCHEDULING_POLICY='fair'
POSTHOOK: type: CREATE POOL
PREHOOK: query: CREATE POOL plan_2.default.c2 WITH
    QUERY_PARALLELISM=2, SCHEDULING_POLICY='fair', ALLOC_FRACTION=0.75
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE POOL plan_2.default.c2 WITH
    QUERY_PARALLELISM=2, SCHEDULING_POLICY='fair', ALLOC_FRACTION=0.75
POSTHOOK: type: CREATE POOL
PREHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_2 VALIDATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_2 VALIDATE
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Validate Resource Plan
      Resource plan name: plan_2

  Stage: Stage-1
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: ALTER RESOURCE PLAN plan_2 VALIDATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_2 VALIDATE
POSTHOOK: type: ALTER RESOURCEPLAN
Sum of children pools' alloc fraction should be less than 1 got: 1.05 for pool: default
PREHOOK: query: ALTER RESOURCE PLAN plan_2 ENABLE ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:ResourcePlan: plan_2 is invalid: [Sum of children pools' alloc fraction should be less than 1 got: 1.05 for pool: default])
PREHOOK: query: EXPLAIN ALTER POOL plan_2.default.c2 SET ALLOC_FRACTION = 0.7, QUERY_PARALLELISM = 1
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER POOL plan_2.default.c2 SET ALLOC_FRACTION = 0.7, QUERY_PARALLELISM = 1
POSTHOOK: type: ALTER POOL
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Alter Pool
      Alloc fraction: 0.7
      Pool path: default.c2
      Query parallelism: 1
      Resource plan name: plan_2

PREHOOK: query: ALTER POOL plan_2.default.c2 SET ALLOC_FRACTION = 0.7, QUERY_PARALLELISM = 1
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL plan_2.default.c2 SET ALLOC_FRACTION = 0.7, QUERY_PARALLELISM = 1
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER POOL plan_2.default.c2 SET SCHEDULING_POLICY='fair'
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL plan_2.default.c2 SET SCHEDULING_POLICY='fair'
POSTHOOK: type: ALTER POOL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	default	1.0	5	NULL
plan_2	default	default.c1	0.3	3	fair
plan_2	default	default.c2	0.7	1	fair
table	default	default	1.0	4	NULL
PREHOOK: query: ALTER POOL plan_2.default.c2 UNSET SCHEDULING_POLICY
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL plan_2.default.c2 UNSET SCHEDULING_POLICY
POSTHOOK: type: ALTER POOL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	default	1.0	5	NULL
plan_2	default	default.c1	0.3	3	fair
plan_2	default	default.c2	0.7	1	NULL
table	default	default	1.0	4	NULL
PREHOOK: query: ALTER RESOURCE PLAN plan_2 VALIDATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_2 VALIDATE
POSTHOOK: type: ALTER RESOURCEPLAN
warn: Sum of all pools' query parallelism: 9 is less than resource plan query parallelism: 10
PREHOOK: query: ALTER RESOURCE PLAN plan_2 ENABLE ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_2 ENABLE ACTIVATE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: ALTER RESOURCE PLAN plan_1 ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_1 ACTIVATE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: ALTER RESOURCE PLAN plan_2 DISABLE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_2 DISABLE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: ALTER POOL plan_2.default SET path = def
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL plan_2.default SET path = def
POSTHOOK: type: ALTER POOL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	def	1.0	5	NULL
plan_2	default	def.c1	0.3	3	fair
plan_2	default	def.c2	0.7	1	NULL
table	default	default	1.0	4	NULL
PREHOOK: query: EXPLAIN DROP POOL plan_2.default
PREHOOK: type: DROP POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN DROP POOL plan_2.default
POSTHOOK: type: DROP POOL
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Drop WM Pool
      Pool path: default
      Resource plan name: plan_2

PREHOOK: query: DROP POOL plan_2.default
PREHOOK: type: DROP POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. NoSuchObjectException(message:Cannot delete pool: default)
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	def	1.0	5	NULL
plan_2	default	def.c1	0.3	3	fair
plan_2	default	def.c2	0.7	1	NULL
table	default	default	1.0	4	NULL
PREHOOK: query: CREATE POOL plan_2.child1.child2 WITH
    QUERY_PARALLELISM=2, SCHEDULING_POLICY='fifo', ALLOC_FRACTION=0.8
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. NoSuchObjectException(message:Pool path is invalid, the parent does not exist)
PREHOOK: query: CREATE POOL `table`.`table` WITH
  SCHEDULING_POLICY='fifo', ALLOC_FRACTION=0.5, QUERY_PARALLELISM=1
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE POOL `table`.`table` WITH
  SCHEDULING_POLICY='fifo', ALLOC_FRACTION=0.5, QUERY_PARALLELISM=1
POSTHOOK: type: CREATE POOL
PREHOOK: query: CREATE POOL `table`.`table`.pool1 WITH
  SCHEDULING_POLICY='fair', QUERY_PARALLELISM=3, ALLOC_FRACTION=0.9
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE POOL `table`.`table`.pool1 WITH
  SCHEDULING_POLICY='fair', QUERY_PARALLELISM=3, ALLOC_FRACTION=0.9
POSTHOOK: type: CREATE POOL
PREHOOK: query: CREATE POOL `table`.`table`.pool1.child1 WITH
  SCHEDULING_POLICY='fair', QUERY_PARALLELISM=1, ALLOC_FRACTION=0.3
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE POOL `table`.`table`.pool1.child1 WITH
  SCHEDULING_POLICY='fair', QUERY_PARALLELISM=1, ALLOC_FRACTION=0.3
POSTHOOK: type: CREATE POOL
PREHOOK: query: CREATE POOL `table`.`table`.pool1.child2 WITH
  SCHEDULING_POLICY='fair', QUERY_PARALLELISM=3, ALLOC_FRACTION=0.7
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE POOL `table`.`table`.pool1.child2 WITH
  SCHEDULING_POLICY='fair', QUERY_PARALLELISM=3, ALLOC_FRACTION=0.7
POSTHOOK: type: CREATE POOL
PREHOOK: query: ALTER POOL `table`.`table` SET ALLOC_FRACTION=0.0
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL `table`.`table` SET ALLOC_FRACTION=0.0
POSTHOOK: type: ALTER POOL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	def	1.0	5	NULL
plan_2	default	def.c1	0.3	3	fair
plan_2	default	def.c2	0.7	1	NULL
table	default	default	1.0	4	NULL
table	default	table	0.0	1	fifo
table	default	table.pool1	0.9	3	fair
table	default	table.pool1.child1	0.3	1	fair
table	default	table.pool1.child2	0.7	3	fair
PREHOOK: query: ALTER POOL `table`.`table`.pool1 SET PATH = `table`.pool
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL `table`.`table`.pool1 SET PATH = `table`.pool
POSTHOOK: type: ALTER POOL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	def	1.0	5	NULL
plan_2	default	def.c1	0.3	3	fair
plan_2	default	def.c2	0.7	1	NULL
table	default	default	1.0	4	NULL
table	default	table	0.0	1	fifo
table	default	table.pool	0.9	3	fair
table	default	table.pool.child1	0.3	1	fair
table	default	table.pool.child2	0.7	3	fair
PREHOOK: query: DROP POOL `table`.`table`
PREHOOK: type: DROP POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Cannot drop a pool that has child pools)
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	def	1.0	5	NULL
plan_2	default	def.c1	0.3	3	fair
plan_2	default	def.c2	0.7	1	NULL
table	default	default	1.0	4	NULL
table	default	table	0.0	1	fifo
table	default	table.pool	0.9	3	fair
table	default	table.pool.child1	0.3	1	fair
table	default	table.pool.child2	0.7	3	fair
PREHOOK: query: DROP POOL `table`.default
PREHOOK: type: DROP POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Cannot drop default pool of a resource plan)
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	def	1.0	5	NULL
plan_2	default	def.c1	0.3	3	fair
plan_2	default	def.c2	0.7	1	NULL
table	default	default	1.0	4	NULL
table	default	table	0.0	1	fifo
table	default	table.pool	0.9	3	fair
table	default	table.pool.child1	0.3	1	fair
table	default	table.pool.child2	0.7	3	fair
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ACTIVE	NULL	default
plan_2	default	DISABLED	10	def
table	default	DISABLED	1	default
PREHOOK: query: EXPLAIN ALTER RESOURCE PLAN `table` SET DEFAULT POOL = `table`.pool, QUERY_PARALLELISM=2
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER RESOURCE PLAN `table` SET DEFAULT POOL = `table`.pool, QUERY_PARALLELISM=2
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Alter Resource plan Set
      Default pool: table.pool
      Query parallelism: 2
      Resource plan name: table

PREHOOK: query: ALTER RESOURCE PLAN `table` SET DEFAULT POOL = `table`.pool, QUERY_PARALLELISM=2
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN `table` SET DEFAULT POOL = `table`.pool, QUERY_PARALLELISM=2
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ACTIVE	NULL	default
plan_2	default	DISABLED	10	def
table	default	DISABLED	2	table.pool
PREHOOK: query: EXPLAIN ALTER RESOURCE PLAN `table` UNSET DEFAULT POOL, QUERY_PARALLELISM
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER RESOURCE PLAN `table` UNSET DEFAULT POOL, QUERY_PARALLELISM
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Alter Resource plans
      Resource plan name: table
      Unset Default Pool: true
      Unset Query parallelism: true

PREHOOK: query: ALTER RESOURCE PLAN `table` UNSET DEFAULT POOL, QUERY_PARALLELISM
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN `table` UNSET DEFAULT POOL, QUERY_PARALLELISM
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ACTIVE	NULL	default
plan_2	default	DISABLED	10	def
table	default	DISABLED	NULL	NULL
PREHOOK: query: ALTER RESOURCE PLAN `table` SET DEFAULT POOL = `table`.pool, QUERY_PARALLELISM=1
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN `table` SET DEFAULT POOL = `table`.pool, QUERY_PARALLELISM=1
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: DROP POOL `table`.default
PREHOOK: type: DROP POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP POOL `table`.default
POSTHOOK: type: DROP POOL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	def	1.0	5	NULL
plan_2	default	def.c1	0.3	3	fair
plan_2	default	def.c2	0.7	1	NULL
table	default	table	0.0	1	fifo
table	default	table.pool	0.9	3	fair
table	default	table.pool.child1	0.3	1	fair
table	default	table.pool.child2	0.7	3	fair
PREHOOK: query: ALTER RESOURCE PLAN `table` UNSET DEFAULT POOL
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN `table` UNSET DEFAULT POOL
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ACTIVE	NULL	default
plan_2	default	DISABLED	10	def
table	default	DISABLED	1	NULL
PREHOOK: query: EXPLAIN ALTER POOL plan_2.def.c1 ADD TRIGGER trigger_1
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER POOL plan_2.def.c1 ADD TRIGGER trigger_1
POSTHOOK: type: ALTER POOL
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Create Trigger to pool mappings
      Pool path: def.c1
      Resource plan name: plan_2
      Trigger name: trigger_1

PREHOOK: query: ALTER POOL plan_2.def.c1 ADD TRIGGER trigger_1
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL plan_2.def.c1 ADD TRIGGER trigger_1
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER POOL plan_2.def.c2 ADD TRIGGER trigger_1
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL plan_2.def.c2 ADD TRIGGER trigger_1
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER POOL `table`.`table` ADD TRIGGER `table`
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL `table`.`table` ADD TRIGGER `table`
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER POOL `table`.`table`.pool.child1 ADD TRIGGER `table`
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL `table`.`table`.pool.child1 ADD TRIGGER `table`
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER POOL `table`.`table`.pool.child1 ADD TRIGGER `trigger1`
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL `table`.`table`.pool.child1 ADD TRIGGER `trigger1`
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER TRIGGER `table`.`trigger1` ADD TO POOL `table`.pool.child2
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER TRIGGER `table`.`trigger1` ADD TO POOL `table`.pool.child2
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER POOL `table`.`table`.pool.child2 ADD TRIGGER `trigger2`
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL `table`.`table`.pool.child2 ADD TRIGGER `trigger2`
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER TRIGGER `table`.`trigger1` ADD TO UNMANAGED
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER TRIGGER `table`.`trigger1` ADD TO UNMANAGED
POSTHOOK: type: ALTER POOL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
plan_2	default	def.c1	trigger_1
plan_2	default	def.c2	trigger_1
table	default	<unmanaged queries>	trigger1
table	default	table	table
table	default	table.pool.child1	table
table	default	table.pool.child1	trigger1
table	default	table.pool.child2	trigger1
table	default	table.pool.child2	trigger2
PREHOOK: query: SHOW RESOURCE PLAN `table`
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: SHOW RESOURCE PLAN `table`
POSTHOOK: type: SHOW RESOURCEPLAN
table[status=DISABLED,parallelism=1,defaultPool=null]
 +  table[allocFraction=0.0,schedulingPolicy=fifo,parallelism=1]
     |  trigger table: if (BYTES_WRITTEN > '100KB') { MOVE TO default }
     +  pool[allocFraction=0.9,schedulingPolicy=fair,parallelism=3]
         +  child2[allocFraction=0.7,schedulingPolicy=fair,parallelism=3]
             |  trigger trigger1: if (ELAPSED_TIME > 10) { KILL }
             |  trigger trigger2: if (ELAPSED_TIME > '1hour') { KILL }
         +  child1[allocFraction=0.3,schedulingPolicy=fair,parallelism=1]
             |  trigger table: if (BYTES_WRITTEN > '100KB') { MOVE TO default }
             |  trigger trigger1: if (ELAPSED_TIME > 10) { KILL }
 +  <unmanaged queries>
     |  trigger trigger1: if (ELAPSED_TIME > 10) { KILL }
 +  <unused triggers>
     |  trigger trigger: if (BYTES_WRITTEN > '100MB') { MOVE TO default }
PREHOOK: query: ALTER TRIGGER `table`.`trigger1` DROP FROM POOL `table`.pool.child2
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER TRIGGER `table`.`trigger1` DROP FROM POOL `table`.pool.child2
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER TRIGGER `table`.`trigger1` DROP FROM UNMANAGED
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER TRIGGER `table`.`trigger1` DROP FROM UNMANAGED
POSTHOOK: type: ALTER POOL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
plan_2	default	def.c1	trigger_1
plan_2	default	def.c2	trigger_1
table	default	table	table
table	default	table.pool.child1	table
table	default	table.pool.child1	trigger1
table	default	table.pool.child2	trigger2
PREHOOK: query: ALTER POOL plan_2.default ADD TRIGGER trigger_1
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. NoSuchObjectException(message:Cannot find pool: default)
PREHOOK: query: ALTER POOL plan_2.def ADD TRIGGER trigger_2
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. NoSuchObjectException(message:Cannot find trigger with name: trigger_2)
PREHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
plan_2	default	def.c1	trigger_1
plan_2	default	def.c2	trigger_1
table	default	table	table
table	default	table.pool.child1	table
table	default	table.pool.child1	trigger1
table	default	table.pool.child2	trigger2
PREHOOK: query: EXPLAIN ALTER POOL plan_2.def.c1 DROP TRIGGER trigger_1
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER POOL plan_2.def.c1 DROP TRIGGER trigger_1
POSTHOOK: type: ALTER POOL
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Drop Trigger to pool mappings
      Pool path: def.c1
      Resource plan name: plan_2
      Trigger name: trigger_1

PREHOOK: query: ALTER POOL plan_2.def.c1 DROP TRIGGER trigger_1
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL plan_2.def.c1 DROP TRIGGER trigger_1
POSTHOOK: type: ALTER POOL
PREHOOK: query: ALTER POOL plan_2.def.c1 DROP TRIGGER trigger_2
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. NoSuchObjectException(message:Cannot find trigger with name: trigger_2)
PREHOOK: query: DROP POOL `table`.`table`.pool.child1
PREHOOK: type: DROP POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP POOL `table`.`table`.pool.child1
POSTHOOK: type: DROP POOL
PREHOOK: query: DROP POOL `table`.`table`.pool.child2
PREHOOK: type: DROP POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP POOL `table`.`table`.pool.child2
POSTHOOK: type: DROP POOL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
plan_2	default	def.c2	trigger_1
table	default	table	table
PREHOOK: query: EXPLAIN CREATE USER MAPPING "user1" IN plan_2 TO def
PREHOOK: type: CREATE MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN CREATE USER MAPPING "user1" IN plan_2 TO def
POSTHOOK: type: CREATE MAPPING
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Create Mapping
      Entity name: user1
      Entity type: USER
      Pool path: def
      Resource plan name: plan_2

PREHOOK: query: CREATE USER MAPPING "user1" IN plan_2 TO def
PREHOOK: type: CREATE MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE USER MAPPING "user1" IN plan_2 TO def
POSTHOOK: type: CREATE MAPPING
PREHOOK: query: CREATE USER MAPPING 'user2' IN plan_2 TO def WITH ORDER 1
PREHOOK: type: CREATE MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE USER MAPPING 'user2' IN plan_2 TO def WITH ORDER 1
POSTHOOK: type: CREATE MAPPING
PREHOOK: query: CREATE GROUP MAPPING "group1" IN plan_2 TO def.c1
PREHOOK: type: CREATE MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE GROUP MAPPING "group1" IN plan_2 TO def.c1
POSTHOOK: type: CREATE MAPPING
PREHOOK: query: CREATE APPLICATION MAPPING "app1" IN plan_2 TO def.c1
PREHOOK: type: CREATE MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE APPLICATION MAPPING "app1" IN plan_2 TO def.c1
POSTHOOK: type: CREATE MAPPING
PREHOOK: query: CREATE GROUP MAPPING 'group2' IN plan_2 TO def.c2 WITH ORDER 1
PREHOOK: type: CREATE MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE GROUP MAPPING 'group2' IN plan_2 TO def.c2 WITH ORDER 1
POSTHOOK: type: CREATE MAPPING
PREHOOK: query: EXPLAIN CREATE GROUP MAPPING 'group3' IN plan_2 UNMANAGED WITH ORDER 1
PREHOOK: type: CREATE MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN CREATE GROUP MAPPING 'group3' IN plan_2 UNMANAGED WITH ORDER 1
POSTHOOK: type: CREATE MAPPING
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Create Mapping
      Entity name: group3
      Entity type: GROUP
      Ordering: 1
      Resource plan name: plan_2

PREHOOK: query: CREATE GROUP MAPPING 'group3' IN plan_2 UNMANAGED WITH ORDER 1
PREHOOK: type: CREATE MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE GROUP MAPPING 'group3' IN plan_2 UNMANAGED WITH ORDER 1
POSTHOOK: type: CREATE MAPPING
PREHOOK: query: EXPLAIN ALTER USER MAPPING "user1" IN plan_2 UNMANAGED
PREHOOK: type: ALTER MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER USER MAPPING "user1" IN plan_2 UNMANAGED
POSTHOOK: type: ALTER MAPPING
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Alter Mapping
      Entity name: user1
      Entity type: USER
      Resource plan name: plan_2

PREHOOK: query: ALTER USER MAPPING "user1" IN plan_2 UNMANAGED
PREHOOK: type: ALTER MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER USER MAPPING "user1" IN plan_2 UNMANAGED
POSTHOOK: type: ALTER MAPPING
PREHOOK: query: SHOW RESOURCE PLAN plan_2
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: SHOW RESOURCE PLAN plan_2
POSTHOOK: type: SHOW RESOURCEPLAN
plan_2[status=DISABLED,parallelism=10,defaultPool=def]
 +  def[allocFraction=1.0,schedulingPolicy=null,parallelism=5]
     |  mapped for users: user2
     |  mapped for default
     +  c2[allocFraction=0.7,schedulingPolicy=null,parallelism=1]
         |  trigger trigger_1: if (BYTES_READ > 0) { MOVE TO null_pool }
         |  mapped for groups: group2
     +  c1[allocFraction=0.3,schedulingPolicy=fair,parallelism=3]
         |  mapped for groups: group1
         |  mapped for applications: app1
 +  <unmanaged queries>
     |  mapped for users: user1
     |  mapped for groups: group3
PREHOOK: query: SELECT * FROM SYS.WM_MAPPINGS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_mappings
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_MAPPINGS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_mappings
#### A masked pattern was here ####
plan_2	default	APPLICATION	app1	def.c1	0
plan_2	default	GROUP	group1	def.c1	0
plan_2	default	GROUP	group2	def.c2	1
plan_2	default	GROUP	group3	<unmanaged>	1
plan_2	default	USER	user1	<unmanaged>	0
plan_2	default	USER	user2	def	1
PREHOOK: query: DROP POOL plan_2.def.c1
PREHOOK: type: DROP POOL
PREHOOK: Output: dummyHostnameForTest
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.ddl.DDLTask. InvalidOperationException(message:Please remove all mappings for this pool.)
PREHOOK: query: EXPLAIN DROP USER MAPPING "user2" in plan_2
PREHOOK: type: DROP MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN DROP USER MAPPING "user2" in plan_2
POSTHOOK: type: DROP MAPPING
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Drop mapping
      Entity name: user2
      Entity type: USER
      Resource plan name: plan_2

PREHOOK: query: DROP USER MAPPING "user2" in plan_2
PREHOOK: type: DROP MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP USER MAPPING "user2" in plan_2
POSTHOOK: type: DROP MAPPING
PREHOOK: query: EXPLAIN DROP GROUP MAPPING "group2" in plan_2
PREHOOK: type: DROP MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN DROP GROUP MAPPING "group2" in plan_2
POSTHOOK: type: DROP MAPPING
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Drop mapping
      Entity name: group2
      Entity type: GROUP
      Resource plan name: plan_2

PREHOOK: query: DROP GROUP MAPPING "group2" in plan_2
PREHOOK: type: DROP MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP GROUP MAPPING "group2" in plan_2
POSTHOOK: type: DROP MAPPING
PREHOOK: query: DROP GROUP MAPPING "group3" in plan_2
PREHOOK: type: DROP MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP GROUP MAPPING "group3" in plan_2
POSTHOOK: type: DROP MAPPING
PREHOOK: query: DROP APPLICATION MAPPING "app1" in plan_2
PREHOOK: type: DROP MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP APPLICATION MAPPING "app1" in plan_2
POSTHOOK: type: DROP MAPPING
PREHOOK: query: SELECT * FROM SYS.WM_MAPPINGS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_mappings
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_MAPPINGS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_mappings
#### A masked pattern was here ####
plan_2	default	GROUP	group1	def.c1	0
plan_2	default	USER	user1	<unmanaged>	0
PREHOOK: query: CREATE RESOURCE PLAN plan_4
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN plan_4
POSTHOOK: type: CREATE RESOURCEPLAN
PREHOOK: query: ALTER RESOURCE PLAN plan_4 ENABLE ACTIVATE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_4 ENABLE ACTIVATE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SHOW RESOURCE PLAN plan_2
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: SHOW RESOURCE PLAN plan_2
POSTHOOK: type: SHOW RESOURCEPLAN
plan_2[status=DISABLED,parallelism=10,defaultPool=def]
 +  def[allocFraction=1.0,schedulingPolicy=null,parallelism=5]
     |  mapped for default
     +  c2[allocFraction=0.7,schedulingPolicy=null,parallelism=1]
         |  trigger trigger_1: if (BYTES_READ > 0) { MOVE TO null_pool }
     +  c1[allocFraction=0.3,schedulingPolicy=fair,parallelism=3]
         |  mapped for groups: group1
 +  <unmanaged queries>
     |  mapped for users: user1
PREHOOK: query: DROP RESOURCE PLAN plan_2
PREHOOK: type: DROP RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: DROP RESOURCE PLAN plan_2
POSTHOOK: type: DROP RESOURCEPLAN
PREHOOK: query: CREATE RESOURCE PLAN plan_2
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN plan_2
POSTHOOK: type: CREATE RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ENABLED	NULL	default
plan_2	default	DISABLED	NULL	default
plan_4	default	ACTIVE	NULL	default
table	default	DISABLED	1	NULL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	default	1.0	4	NULL
plan_4	default	default	1.0	4	NULL
table	default	table	0.0	1	fifo
table	default	table.pool	0.9	3	fair
PREHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
plan_1	default	trigger_2	ELAPSED_TIME > '30hour'	MOVE TO slow_pool
table	default	table	BYTES_WRITTEN > '100KB'	MOVE TO default
table	default	trigger	BYTES_WRITTEN > '100MB'	MOVE TO default
table	default	trigger1	ELAPSED_TIME > 10	KILL
table	default	trigger2	ELAPSED_TIME > '1hour'	KILL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
table	default	table	table
PREHOOK: query: SELECT * FROM SYS.WM_MAPPINGS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_mappings
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_MAPPINGS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_mappings
#### A masked pattern was here ####
PREHOOK: query: CREATE RESOURCE PLAN plan_4a LIKE plan_4
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN plan_4a LIKE plan_4
POSTHOOK: type: CREATE RESOURCEPLAN
PREHOOK: query: CREATE POOL plan_4a.pool1 WITH SCHEDULING_POLICY='fair', QUERY_PARALLELISM=2, ALLOC_FRACTION=0.0
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE POOL plan_4a.pool1 WITH SCHEDULING_POLICY='fair', QUERY_PARALLELISM=2, ALLOC_FRACTION=0.0
POSTHOOK: type: CREATE POOL
PREHOOK: query: CREATE USER MAPPING "user1" IN plan_4a TO pool1
PREHOOK: type: CREATE MAPPING
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE USER MAPPING "user1" IN plan_4a TO pool1
POSTHOOK: type: CREATE MAPPING
PREHOOK: query: CREATE TRIGGER plan_4a.trigger_1 WHEN BYTES_READ > '10GB' DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER plan_4a.trigger_1 WHEN BYTES_READ > '10GB' DO KILL
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: CREATE TRIGGER plan_4a.trigger_2 WHEN BYTES_READ > '11GB' DO KILL
PREHOOK: type: CREATE TRIGGER
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE TRIGGER plan_4a.trigger_2 WHEN BYTES_READ > '11GB' DO KILL
POSTHOOK: type: CREATE TRIGGER
PREHOOK: query: ALTER POOL plan_4a.pool1 ADD TRIGGER trigger_2
PREHOOK: type: ALTER POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER POOL plan_4a.pool1 ADD TRIGGER trigger_2
POSTHOOK: type: ALTER POOL
PREHOOK: query: CREATE RESOURCE PLAN plan_4b LIKE plan_4a
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN plan_4b LIKE plan_4a
POSTHOOK: type: CREATE RESOURCEPLAN
PREHOOK: query: CREATE POOL plan_4b.pool2 WITH SCHEDULING_POLICY='fair', QUERY_PARALLELISM=3, ALLOC_FRACTION=0.0
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE POOL plan_4b.pool2 WITH SCHEDULING_POLICY='fair', QUERY_PARALLELISM=3, ALLOC_FRACTION=0.0
POSTHOOK: type: CREATE POOL
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ENABLED	NULL	default
plan_2	default	DISABLED	NULL	default
plan_4	default	ACTIVE	NULL	default
plan_4a	default	DISABLED	NULL	default
plan_4b	default	DISABLED	NULL	default
table	default	DISABLED	1	NULL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	default	1.0	4	NULL
plan_4	default	default	1.0	4	NULL
plan_4a	default	default	1.0	4	NULL
plan_4a	default	pool1	0.0	2	fair
plan_4b	default	default	1.0	4	NULL
plan_4b	default	pool1	0.0	2	fair
plan_4b	default	pool2	0.0	3	fair
table	default	table	0.0	1	fifo
table	default	table.pool	0.9	3	fair
PREHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_triggers
#### A masked pattern was here ####
plan_1	default	trigger_2	ELAPSED_TIME > '30hour'	MOVE TO slow_pool
plan_4a	default	trigger_1	BYTES_READ > '10GB'	KILL
plan_4a	default	trigger_2	BYTES_READ > '11GB'	KILL
plan_4b	default	trigger_1	BYTES_READ > '10GB'	KILL
plan_4b	default	trigger_2	BYTES_READ > '11GB'	KILL
table	default	table	BYTES_WRITTEN > '100KB'	MOVE TO default
table	default	trigger	BYTES_WRITTEN > '100MB'	MOVE TO default
table	default	trigger1	ELAPSED_TIME > 10	KILL
table	default	trigger2	ELAPSED_TIME > '1hour'	KILL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS_TO_TRIGGERS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools_to_triggers
#### A masked pattern was here ####
plan_4a	default	pool1	trigger_2
plan_4b	default	pool1	trigger_2
table	default	table	table
PREHOOK: query: SELECT * FROM SYS.WM_MAPPINGS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_mappings
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_MAPPINGS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_mappings
#### A masked pattern was here ####
plan_4a	default	USER	user1	pool1	0
plan_4b	default	USER	user1	pool1	0
PREHOOK: query: EXPLAIN REPLACE RESOURCE PLAN plan_4a WITH plan_4b
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN REPLACE RESOURCE PLAN plan_4a WITH plan_4b
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Replace Resource plan
      Destination Resource plan name: plan_4a
      Resource plan name: plan_4b

PREHOOK: query: REPLACE RESOURCE PLAN plan_4a WITH plan_4b
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: REPLACE RESOURCE PLAN plan_4a WITH plan_4b
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ENABLED	NULL	default
plan_2	default	DISABLED	NULL	default
plan_4	default	ACTIVE	NULL	default
plan_4a	default	DISABLED	NULL	default
plan_4a_old_0	default	DISABLED	NULL	default
table	default	DISABLED	1	NULL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	default	1.0	4	NULL
plan_4	default	default	1.0	4	NULL
plan_4a	default	default	1.0	4	NULL
plan_4a	default	pool1	0.0	2	fair
plan_4a	default	pool2	0.0	3	fair
plan_4a_old_0	default	default	1.0	4	NULL
plan_4a_old_0	default	pool1	0.0	2	fair
table	default	table	0.0	1	fifo
table	default	table.pool	0.9	3	fair
PREHOOK: query: SHOW RESOURCE PLAN plan_4a_old_0
PREHOOK: type: SHOW RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: SHOW RESOURCE PLAN plan_4a_old_0
POSTHOOK: type: SHOW RESOURCEPLAN
plan_4a_old_0[status=DISABLED,parallelism=null,defaultPool=default]
 +  default[allocFraction=1.0,schedulingPolicy=null,parallelism=4]
     |  mapped for default
 +  pool1[allocFraction=0.0,schedulingPolicy=fair,parallelism=2]
     |  trigger trigger_2: if (BYTES_READ > '11GB') { KILL }
     |  mapped for users: user1
 +  <unused triggers>
     |  trigger trigger_1: if (BYTES_READ > '10GB') { KILL }
PREHOOK: query: REPLACE ACTIVE RESOURCE PLAN WITH plan_4a
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: REPLACE ACTIVE RESOURCE PLAN WITH plan_4a
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ENABLED	NULL	default
plan_2	default	DISABLED	NULL	default
plan_4	default	ACTIVE	NULL	default
plan_4_old_0	default	DISABLED	NULL	default
plan_4a_old_0	default	DISABLED	NULL	default
table	default	DISABLED	1	NULL
PREHOOK: query: CREATE RESOURCE PLAN plan_4a LIKE plan_4
PREHOOK: type: CREATE RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE RESOURCE PLAN plan_4a LIKE plan_4
POSTHOOK: type: CREATE RESOURCEPLAN
PREHOOK: query: CREATE POOL plan_4a.pool3 WITH SCHEDULING_POLICY='fair', QUERY_PARALLELISM=3, ALLOC_FRACTION=0.0
PREHOOK: type: CREATE POOL
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: CREATE POOL plan_4a.pool3 WITH SCHEDULING_POLICY='fair', QUERY_PARALLELISM=3, ALLOC_FRACTION=0.0
POSTHOOK: type: CREATE POOL
PREHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_4a ENABLE ACTIVATE WITH REPLACE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: EXPLAIN ALTER RESOURCE PLAN plan_4a ENABLE ACTIVATE WITH REPLACE
POSTHOOK: type: ALTER RESOURCEPLAN
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Enable Resource plan
      Resource plan name: plan_4a
      Activate: true
      Enable: true
      Replace: true

PREHOOK: query: ALTER RESOURCE PLAN plan_4a ENABLE ACTIVATE WITH REPLACE
PREHOOK: type: ALTER RESOURCEPLAN
PREHOOK: Output: dummyHostnameForTest
POSTHOOK: query: ALTER RESOURCE PLAN plan_4a ENABLE ACTIVATE WITH REPLACE
POSTHOOK: type: ALTER RESOURCEPLAN
PREHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_RESOURCEPLANS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_resourceplans
#### A masked pattern was here ####
plan_1	default	ENABLED	NULL	default
plan_2	default	DISABLED	NULL	default
plan_4	default	ACTIVE	NULL	default
plan_4_old_0	default	DISABLED	NULL	default
plan_4_old_1	default	DISABLED	NULL	default
plan_4a_old_0	default	DISABLED	NULL	default
table	default	DISABLED	1	NULL
PREHOOK: query: SELECT * FROM SYS.WM_POOLS
PREHOOK: type: QUERY
PREHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM SYS.WM_POOLS
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@wm_pools
#### A masked pattern was here ####
plan_1	default	default	1.0	4	NULL
plan_2	default	default	1.0	4	NULL
plan_4	default	default	1.0	4	NULL
plan_4	default	pool1	0.0	2	fair
plan_4	default	pool2	0.0	3	fair
plan_4	default	pool3	0.0	3	fair
plan_4_old_0	default	default	1.0	4	NULL
plan_4_old_1	default	default	1.0	4	NULL
plan_4_old_1	default	pool1	0.0	2	fair
plan_4_old_1	default	pool2	0.0	3	fair
plan_4a_old_0	default	default	1.0	4	NULL
plan_4a_old_0	default	pool1	0.0	2	fair
table	default	table	0.0	1	fifo
table	default	table.pool	0.9	3	fair
