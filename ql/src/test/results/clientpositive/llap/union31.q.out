PREHOOK: query: drop table t1_n28
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table t1_n28
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table t2_n19
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table t2_n19
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table t1_n28 as select * from src where key < 10
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_n28
POSTHOOK: query: create table t1_n28 as select * from src where key < 10
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_n28
POSTHOOK: Lineage: t1_n28.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: t1_n28.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create table t2_n19 as select * from src where key < 10
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@t2_n19
POSTHOOK: query: create table t2_n19 as select * from src where key < 10
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t2_n19
POSTHOOK: Lineage: t2_n19.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: t2_n19.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create table t3_n6(key string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t3_n6
POSTHOOK: query: create table t3_n6(key string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t3_n6
PREHOOK: query: create table t4_n2(value string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t4_n2
POSTHOOK: query: create table t4_n2(value string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t4_n2
PREHOOK: query: explain
from
(select * from t1_n28
 union all
 select * from t2_n19
) x
insert overwrite table t3_n6
  select key, count(1) group by key
insert overwrite table t4_n2
  select value, count(1) group by value
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n28
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t3_n6
PREHOOK: Output: default@t4_n2
POSTHOOK: query: explain
from
(select * from t1_n28
 union all
 select * from t2_n19
) x
insert overwrite table t3_n6
  select key, count(1) group by key
insert overwrite table t4_n2
  select value, count(1) group by value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n28
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t3_n6
POSTHOOK: Output: default@t4_n2
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-3
  Stage-4 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-3
  Stage-5 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Union 2 (CONTAINS)
        Map 7 <- Union 2 (CONTAINS)
        Reducer 3 <- Union 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Union 2 (SIMPLE_EDGE)
        Reducer 6 <- Reducer 5 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n28
                  Statistics: Num rows: 10 Data size: 1740 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 10 Data size: 1740 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col0 (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 20 Data size: 3480 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count(1)
                        keys: _col0 (type: string)
                        minReductionHashAggr: 0.7
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: bigint)
                    Select Operator
                      expressions: _col1 (type: string)
                      outputColumnNames: _col1
                      Statistics: Num rows: 20 Data size: 3480 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count(1)
                        keys: _col1 (type: string)
                        minReductionHashAggr: 0.7
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 582 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 6 Data size: 582 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: t2_n19
                  Statistics: Num rows: 10 Data size: 1740 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 10 Data size: 1740 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col0 (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 20 Data size: 3480 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count(1)
                        keys: _col0 (type: string)
                        minReductionHashAggr: 0.7
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: bigint)
                    Select Operator
                      expressions: _col1 (type: string)
                      outputColumnNames: _col1
                      Statistics: Num rows: 20 Data size: 3480 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count(1)
                        keys: _col1 (type: string)
                        minReductionHashAggr: 0.7
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 582 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 6 Data size: 582 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.t3_n6
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: int)
                    outputColumnNames: key, cnt
                    Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: max(length(key)), avg(COALESCE(length(key),0)), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.8333333
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 6 Data size: 582 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.t4_n2
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: int)
                    outputColumnNames: value, cnt
                    Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: max(length(value)), avg(COALESCE(length(value),0)), count(1), count(value), compute_bit_vector_hll(value), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.8333333
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Union 2 
            Vertex: Union 2

  Stage: Stage-3
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t3_n6

  Stage: Stage-4
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, cnt
          Column Types: string, int
          Table: default.t3_n6

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t4_n2

  Stage: Stage-5
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: value, cnt
          Column Types: string, int
          Table: default.t4_n2

PREHOOK: query: from
(select * from t1_n28
 union all
 select * from t2_n19
) x
insert overwrite table t3_n6
  select key, count(1) group by key
insert overwrite table t4_n2
  select value, count(1) group by value
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n28
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t3_n6
PREHOOK: Output: default@t4_n2
POSTHOOK: query: from
(select * from t1_n28
 union all
 select * from t2_n19
) x
insert overwrite table t3_n6
  select key, count(1) group by key
insert overwrite table t4_n2
  select value, count(1) group by value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n28
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t3_n6
POSTHOOK: Output: default@t4_n2
POSTHOOK: Lineage: t3_n6.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
POSTHOOK: Lineage: t3_n6.key EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t4_n2.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
POSTHOOK: Lineage: t4_n2.value EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:value, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from t3_n6
PREHOOK: type: QUERY
PREHOOK: Input: default@t3_n6
#### A masked pattern was here ####
POSTHOOK: query: select * from t3_n6
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3_n6
#### A masked pattern was here ####
0	6
2	2
4	2
5	6
8	2
9	2
PREHOOK: query: select * from t4_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@t4_n2
#### A masked pattern was here ####
POSTHOOK: query: select * from t4_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t4_n2
#### A masked pattern was here ####
val_0	6
val_2	2
val_4	2
val_5	6
val_8	2
val_9	2
PREHOOK: query: create table t5_n0(c1 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t5_n0
POSTHOOK: query: create table t5_n0(c1 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t5_n0
PREHOOK: query: create table t6_n0(c1 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t6_n0
POSTHOOK: query: create table t6_n0(c1 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t6_n0
PREHOOK: query: explain
from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, count(1) as cnt from t2_n19 group by key
) x
insert overwrite table t5_n0
  select c1, sum(cnt) group by c1
insert overwrite table t6_n0
  select c1, sum(cnt) group by c1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n28
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t5_n0
PREHOOK: Output: default@t6_n0
POSTHOOK: query: explain
from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, count(1) as cnt from t2_n19 group by key
) x
insert overwrite table t5_n0
  select c1, sum(cnt) group by c1
insert overwrite table t6_n0
  select c1, sum(cnt) group by c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n28
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t5_n0
POSTHOOK: Output: default@t6_n0
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-3
  Stage-4 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-3
  Stage-5 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Union 3 (CONTAINS)
        Reducer 4 <- Union 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
        Reducer 6 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
        Reducer 8 <- Map 7 (SIMPLE_EDGE), Union 3 (CONTAINS)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n28
                  Statistics: Num rows: 10 Data size: 850 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 10 Data size: 850 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: t2_n19
                  Statistics: Num rows: 10 Data size: 850 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 10 Data size: 850 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 12 Data size: 1116 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: bigint)
        Reducer 4 
            Execution mode: llap
            Reduce Operator Tree:
              Forward
                Statistics: Num rows: 12 Data size: 1116 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(VALUE._col0)
                  keys: KEY._col0 (type: string)
                  mode: complete
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.t5_n0
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: int)
                      outputColumnNames: c1, cnt
                      Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: max(length(c1)), avg(COALESCE(length(c1),0)), count(1), count(c1), compute_bit_vector_hll(c1), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                        minReductionHashAggr: 0.8333333
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                        Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                Group By Operator
                  aggregations: sum(VALUE._col0)
                  keys: KEY._col0 (type: string)
                  mode: complete
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.t6_n0
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: int)
                      outputColumnNames: c1, cnt
                      Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: max(length(c1)), avg(COALESCE(length(c1),0)), count(1), count(c1), compute_bit_vector_hll(c1), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                        minReductionHashAggr: 0.8333333
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                        Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 12 Data size: 1116 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: bigint)
        Union 3 
            Vertex: Union 3

  Stage: Stage-3
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t5_n0

  Stage: Stage-4
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1, cnt
          Column Types: string, int
          Table: default.t5_n0

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t6_n0

  Stage: Stage-5
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1, cnt
          Column Types: string, int
          Table: default.t6_n0

PREHOOK: query: from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, count(1) as cnt from t2_n19 group by key
) x
insert overwrite table t5_n0
  select c1, sum(cnt) group by c1
insert overwrite table t6_n0
  select c1, sum(cnt) group by c1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n28
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t5_n0
PREHOOK: Output: default@t6_n0
POSTHOOK: query: from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, count(1) as cnt from t2_n19 group by key
) x
insert overwrite table t5_n0
  select c1, sum(cnt) group by c1
insert overwrite table t6_n0
  select c1, sum(cnt) group by c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n28
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t5_n0
POSTHOOK: Output: default@t6_n0
POSTHOOK: Lineage: t5_n0.c1 EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t5_n0.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
POSTHOOK: Lineage: t6_n0.c1 EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t6_n0.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
PREHOOK: query: select * from t5_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@t5_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from t5_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t5_n0
#### A masked pattern was here ####
0	6
2	2
4	2
5	6
8	2
9	2
PREHOOK: query: select * from t6_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@t6_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from t6_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t6_n0
#### A masked pattern was here ####
0	6
2	2
4	2
5	6
8	2
9	2
PREHOOK: query: drop table t1_n28
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t1_n28
PREHOOK: Output: default@t1_n28
POSTHOOK: query: drop table t1_n28
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t1_n28
POSTHOOK: Output: default@t1_n28
PREHOOK: query: drop table t2_n19
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t2_n19
POSTHOOK: query: drop table t2_n19
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t2_n19
PREHOOK: query: create table t1_n28 as select * from src where key < 10
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_n28
POSTHOOK: query: create table t1_n28 as select * from src where key < 10
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_n28
POSTHOOK: Lineage: t1_n28.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: t1_n28.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create table t2_n19 as select key, count(1) as cnt from src where key < 10 group by key
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@t2_n19
POSTHOOK: query: create table t2_n19 as select key, count(1) as cnt from src where key < 10 group by key
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t2_n19
POSTHOOK: Lineage: t2_n19.cnt EXPRESSION [(src)src.null, ]
POSTHOOK: Lineage: t2_n19.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: create table t7_n1(c1 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t7_n1
POSTHOOK: query: create table t7_n1(c1 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t7_n1
PREHOOK: query: create table t8_n0(c1 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t8_n0
POSTHOOK: query: create table t8_n0(c1 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t8_n0
PREHOOK: query: explain
from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, cnt from t2_n19
) x
insert overwrite table t7_n1
  select c1, count(1) group by c1
insert overwrite table t8_n0
  select c1, count(1) group by c1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n28
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t7_n1
PREHOOK: Output: default@t8_n0
POSTHOOK: query: explain
from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, cnt from t2_n19
) x
insert overwrite table t7_n1
  select c1, count(1) group by c1
insert overwrite table t8_n0
  select c1, count(1) group by c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n28
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t7_n1
POSTHOOK: Output: default@t8_n0
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-3
  Stage-4 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-3
  Stage-5 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Tez
#### A masked pattern was here ####
      Edges:
        Map 7 <- Union 3 (CONTAINS)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Union 3 (CONTAINS)
        Reducer 4 <- Union 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
        Reducer 6 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n28
                  Statistics: Num rows: 10 Data size: 850 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 10 Data size: 850 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: t2_n19
                  Statistics: Num rows: 6 Data size: 510 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 6 Data size: 510 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col0 (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 12 Data size: 1068 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 12 Data size: 1068 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string)
                  outputColumnNames: _col0
                  Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col0 (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 12 Data size: 1068 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: string)
                      Statistics: Num rows: 12 Data size: 1068 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 4 
            Execution mode: llap
            Reduce Operator Tree:
              Forward
                Statistics: Num rows: 12 Data size: 1068 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count(1)
                  keys: KEY._col0 (type: string)
                  mode: complete
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.t7_n1
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: int)
                      outputColumnNames: c1, cnt
                      Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: max(length(c1)), avg(COALESCE(length(c1),0)), count(1), count(c1), compute_bit_vector_hll(c1), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                        minReductionHashAggr: 0.8333333
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                        Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                Group By Operator
                  aggregations: count(1)
                  keys: KEY._col0 (type: string)
                  mode: complete
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 6 Data size: 558 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.t8_n0
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: int)
                      outputColumnNames: c1, cnt
                      Statistics: Num rows: 6 Data size: 534 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: max(length(c1)), avg(COALESCE(length(c1),0)), count(1), count(c1), compute_bit_vector_hll(c1), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                        minReductionHashAggr: 0.8333333
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                        Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Union 3 
            Vertex: Union 3

  Stage: Stage-3
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t7_n1

  Stage: Stage-4
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1, cnt
          Column Types: string, int
          Table: default.t7_n1

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.t8_n0

  Stage: Stage-5
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: c1, cnt
          Column Types: string, int
          Table: default.t8_n0

PREHOOK: query: from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, cnt from t2_n19
) x
insert overwrite table t7_n1
  select c1, count(1) group by c1
insert overwrite table t8_n0
  select c1, count(1) group by c1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n28
PREHOOK: Input: default@t2_n19
PREHOOK: Output: default@t7_n1
PREHOOK: Output: default@t8_n0
POSTHOOK: query: from
(
 select key as c1, count(1) as cnt from t1_n28 group by key
   union all
 select key as c1, cnt from t2_n19
) x
insert overwrite table t7_n1
  select c1, count(1) group by c1
insert overwrite table t8_n0
  select c1, count(1) group by c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n28
POSTHOOK: Input: default@t2_n19
POSTHOOK: Output: default@t7_n1
POSTHOOK: Output: default@t8_n0
POSTHOOK: Lineage: t7_n1.c1 EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t7_n1.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
POSTHOOK: Lineage: t8_n0.c1 EXPRESSION [(t1_n28)t1_n28.FieldSchema(name:key, type:string, comment:null), (t2_n19)t2_n19.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t8_n0.cnt EXPRESSION [(t1_n28)t1_n28.null, (t2_n19)t2_n19.null, ]
PREHOOK: query: select * from t7_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@t7_n1
#### A masked pattern was here ####
POSTHOOK: query: select * from t7_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t7_n1
#### A masked pattern was here ####
0	2
2	2
4	2
5	2
8	2
9	2
PREHOOK: query: select * from t8_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@t8_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from t8_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t8_n0
#### A masked pattern was here ####
0	2
2	2
4	2
5	2
8	2
9	2
