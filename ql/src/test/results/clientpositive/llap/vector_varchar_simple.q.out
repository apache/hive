PREHOOK: query: drop table varchar_2_n0
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table varchar_2_n0
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table varchar_2_n0 (
  key varchar(10),
  value varchar(20)
) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@varchar_2_n0
POSTHOOK: query: create table varchar_2_n0 (
  key varchar(10),
  value varchar(20)
) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@varchar_2_n0
PREHOOK: query: insert overwrite table varchar_2_n0 select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@varchar_2_n0
POSTHOOK: query: insert overwrite table varchar_2_n0 select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@varchar_2_n0
POSTHOOK: Lineage: varchar_2_n0.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: varchar_2_n0.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select key, value
from src
order by key asc
limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, value
from src
order by key asc
limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
PREHOOK: query: explain vectorization select key, value
from varchar_2_n0
order by key asc
limit 5
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization select key, value
from varchar_2_n0
order by key asc
limit 5
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: varchar_2_n0
                  Statistics: Num rows: 500 Data size: 94248 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: varchar(10)), value (type: varchar(20))
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 94248 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: varchar(10))
                      sort order: +
                      Statistics: Num rows: 500 Data size: 94248 Basic stats: COMPLETE Column stats: NONE
                      TopN Hash Memory Usage: 0.1
                      value expressions: _col1 (type: varchar(20))
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: varchar(10)), VALUE._col0 (type: varchar(20))
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 94248 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 5
                  Statistics: Num rows: 5 Data size: 940 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 5 Data size: 940 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 5
      Processor Tree:
        ListSink

PREHOOK: query: select key, value
from varchar_2_n0
order by key asc
limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@varchar_2_n0
#### A masked pattern was here ####
POSTHOOK: query: select key, value
from varchar_2_n0
order by key asc
limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@varchar_2_n0
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
PREHOOK: query: select key, value
from src
order by key desc
limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, value
from src
order by key desc
limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
98	val_98
98	val_98
97	val_97
97	val_97
96	val_96
PREHOOK: query: explain vectorization select key, value
from varchar_2_n0
order by key desc
limit 5
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization select key, value
from varchar_2_n0
order by key desc
limit 5
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: varchar_2_n0
                  Statistics: Num rows: 500 Data size: 94248 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: varchar(10)), value (type: varchar(20))
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 94248 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: varchar(10))
                      sort order: -
                      Statistics: Num rows: 500 Data size: 94248 Basic stats: COMPLETE Column stats: NONE
                      TopN Hash Memory Usage: 0.1
                      value expressions: _col1 (type: varchar(20))
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: varchar(10)), VALUE._col0 (type: varchar(20))
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 94248 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 5
                  Statistics: Num rows: 5 Data size: 940 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 5 Data size: 940 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 5
      Processor Tree:
        ListSink

PREHOOK: query: select key, value
from varchar_2_n0
order by key desc
limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@varchar_2_n0
#### A masked pattern was here ####
POSTHOOK: query: select key, value
from varchar_2_n0
order by key desc
limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@varchar_2_n0
#### A masked pattern was here ####
98	val_98
98	val_98
97	val_97
97	val_97
96	val_96
PREHOOK: query: drop table varchar_2_n0
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@varchar_2_n0
PREHOOK: Output: default@varchar_2_n0
POSTHOOK: query: drop table varchar_2_n0
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@varchar_2_n0
POSTHOOK: Output: default@varchar_2_n0
PREHOOK: query: create table varchar_3 (
  field varchar(25)
) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@varchar_3
POSTHOOK: query: create table varchar_3 (
  field varchar(25)
) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@varchar_3
PREHOOK: query: explain vectorization expression
insert into table varchar_3 select cint from alltypesorc limit 10
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization expression
insert into table varchar_3 select cint from alltypesorc limit 10
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  Statistics: Num rows: 12288 Data size: 36696 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                  Select Operator
                    expressions: cint (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [2]
                    Statistics: Num rows: 12288 Data size: 36696 Basic stats: COMPLETE Column stats: COMPLETE
                    Limit
                      Number of rows: 10
                      Limit Vectorization:
                          className: VectorLimitOperator
                          native: true
                      Statistics: Num rows: 10 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        sort order: 
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkEmptyKeyOperator
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                        Statistics: Num rows: 10 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                        TopN Hash Memory Usage: 0.1
                        value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int)
                outputColumnNames: _col0
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0]
                Statistics: Num rows: 10 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 10
                  Limit Vectorization:
                      className: VectorLimitOperator
                      native: true
                  Statistics: Num rows: 10 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: CAST( _col0 AS varchar(25)) (type: varchar(25))
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [1]
                        selectExpressions: CastLongToVarChar(col 0:int, maxLength 25) -> 1:varchar(25)
                    Statistics: Num rows: 10 Data size: 872 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 10 Data size: 872 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                          output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                          serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                          name: default.varchar_3

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.varchar_3

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: insert into table varchar_3 select cint from alltypesorc limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: default@varchar_3
POSTHOOK: query: insert into table varchar_3 select cint from alltypesorc limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: default@varchar_3
POSTHOOK: Lineage: varchar_3.field EXPRESSION [(alltypesorc)alltypesorc.FieldSchema(name:cint, type:int, comment:null), ]
PREHOOK: query: drop table varchar_3
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@varchar_3
PREHOOK: Output: default@varchar_3
POSTHOOK: query: drop table varchar_3
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@varchar_3
POSTHOOK: Output: default@varchar_3
