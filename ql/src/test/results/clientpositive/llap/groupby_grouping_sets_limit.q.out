PREHOOK: query: CREATE TABLE T1_n141(a STRING, b STRING, c STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY ' ' STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n141
POSTHOOK: query: CREATE TABLE T1_n141(a STRING, b STRING, c STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY ' ' STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n141
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/grouping_sets.txt' INTO TABLE T1_n141
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_n141
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/grouping_sets.txt' INTO TABLE T1_n141
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_n141
PREHOOK: query: EXPLAIN
SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b WITH CUBE ORDER BY a, b, GROUPING__ID LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b WITH CUBE ORDER BY a, b, GROUPING__ID LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n141
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: ++
                    keys: a (type: string), b (type: string)
                    null sort order: zz
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    top n: 10
                    Select Operator
                      expressions: a (type: string), b (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: count()
                        keys: _col0 (type: string), _col1 (type: string), 0L (type: bigint)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 4 Data size: 1472 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                          null sort order: zzz
                          sort order: +++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                          Statistics: Num rows: 4 Data size: 1472 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col3 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint)
                    null sort order: zzz
                    sort order: +++
                    Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: bigint)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b WITH CUBE ORDER BY a, b, GROUPING__ID LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b WITH CUBE ORDER BY a, b, GROUPING__ID LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
1	1	1
1	NULL	1
2	2	1
2	3	1
2	NULL	2
3	2	1
3	NULL	1
5	2	1
5	NULL	1
8	1	1
PREHOOK: query: EXPLAIN
SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b  GROUPING SETS (a, (a, b), b, ()) ORDER BY a, b, GROUPING__ID LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b  GROUPING SETS (a, (a, b), b, ()) ORDER BY a, b, GROUPING__ID LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n141
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: ++
                    keys: a (type: string), b (type: string)
                    null sort order: zz
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    top n: 10
                    Select Operator
                      expressions: a (type: string), b (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: count()
                        keys: _col0 (type: string), _col1 (type: string), 0L (type: bigint)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 4 Data size: 1472 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                          null sort order: zzz
                          sort order: +++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                          Statistics: Num rows: 4 Data size: 1472 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col3 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint)
                    null sort order: zzz
                    sort order: +++
                    Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: bigint)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b  GROUPING SETS (a, (a, b), b, ()) ORDER BY a, b, GROUPING__ID LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b  GROUPING SETS (a, (a, b), b, ()) ORDER BY a, b, GROUPING__ID LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
1	1	1
1	NULL	1
2	2	1
2	3	1
2	NULL	2
3	2	1
3	NULL	1
5	2	1
5	NULL	1
8	1	1
PREHOOK: query: EXPLAIN
SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b GROUPING SETS (a, (a, b)) ORDER BY a, b, GROUPING__ID LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b GROUPING SETS (a, (a, b)) ORDER BY a, b, GROUPING__ID LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n141
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: ++
                    keys: a (type: string), b (type: string)
                    null sort order: zz
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    top n: 10
                    Select Operator
                      expressions: a (type: string), b (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: count()
                        keys: _col0 (type: string), _col1 (type: string), 0L (type: bigint)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                          null sort order: zzz
                          sort order: +++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: bigint)
                          Statistics: Num rows: 2 Data size: 736 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col3 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint)
                    null sort order: zzz
                    sort order: +++
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: bigint)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b GROUPING SETS (a, (a, b)) ORDER BY a, b, GROUPING__ID LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b, count(*) FROM T1_n141 GROUP BY a, b GROUPING SETS (a, (a, b)) ORDER BY a, b, GROUPING__ID LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
1	1	1
1	NULL	1
2	2	1
2	3	1
2	NULL	2
3	2	1
3	NULL	1
5	2	1
5	NULL	1
8	1	1
PREHOOK: query: EXPLAIN
SELECT a FROM T1_n141 GROUP BY a, b, c GROUPING SETS (a, b, c) ORDER BY a, b, c, GROUPING__ID LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a FROM T1_n141 GROUP BY a, b, c GROUPING SETS (a, b, c) ORDER BY a, b, c, GROUPING__ID LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n141
                  Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: +++
                    keys: a (type: string), b (type: string), c (type: string)
                    null sort order: zzz
                    Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                    top n: 10
                    Select Operator
                      expressions: a (type: string), b (type: string), c (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        keys: _col0 (type: string), _col1 (type: string), _col2 (type: string), 0L (type: bigint)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 3 Data size: 1656 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: bigint)
                          null sort order: zzzz
                          sort order: ++++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: bigint)
                          Statistics: Num rows: 3 Data size: 1656 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: bigint)
                    null sort order: zzzz
                    sort order: ++++
                    Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a FROM T1_n141 GROUP BY a, b, c GROUPING SETS (a, b, c) ORDER BY a, b, c, GROUPING__ID LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: SELECT a FROM T1_n141 GROUP BY a, b, c GROUPING SETS (a, b, c) ORDER BY a, b, c, GROUPING__ID LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
1
2
3
5
8
NULL
NULL
NULL
NULL
NULL
PREHOOK: query: EXPLAIN
SELECT a FROM T1_n141 GROUP BY a GROUPING SETS ((a), (a)) ORDER BY a LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a FROM T1_n141 GROUP BY a GROUPING SETS ((a), (a)) ORDER BY a LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n141
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: +
                    keys: a (type: string)
                    null sort order: z
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    top n: 10
                    Select Operator
                      expressions: a (type: string)
                      outputColumnNames: a
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        keys: a (type: string)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: z
                  sort order: +
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a FROM T1_n141 GROUP BY a GROUPING SETS ((a), (a)) ORDER BY a LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: SELECT a FROM T1_n141 GROUP BY a GROUPING SETS ((a), (a)) ORDER BY a LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
1
2
3
5
8
PREHOOK: query: EXPLAIN
SELECT a + b, count(*) FROM T1_n141 GROUP BY a + b GROUPING SETS (a + b) ORDER BY a + b LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a + b, count(*) FROM T1_n141 GROUP BY a + b GROUPING SETS (a + b) ORDER BY a + b LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n141
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: +
                    keys: (UDFToDouble(a) + UDFToDouble(b)) (type: double)
                    null sort order: z
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    top n: 10
                    Select Operator
                      expressions: (UDFToDouble(a) + UDFToDouble(b)) (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: count()
                        keys: _col0 (type: double)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: double)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: double)
                          Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: double)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col1 (type: bigint), _col0 (type: double)
                  outputColumnNames: _col1, _col2
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col2 (type: double)
                    null sort order: z
                    sort order: +
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: double), VALUE._col0 (type: bigint)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a + b, count(*) FROM T1_n141 GROUP BY a + b GROUPING SETS (a + b) ORDER BY a + b LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n141
#### A masked pattern was here ####
POSTHOOK: query: SELECT a + b, count(*) FROM T1_n141 GROUP BY a + b GROUPING SETS (a + b) ORDER BY a + b LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n141
#### A masked pattern was here ####
2.0	1
4.0	1
5.0	2
7.0	1
9.0	1
