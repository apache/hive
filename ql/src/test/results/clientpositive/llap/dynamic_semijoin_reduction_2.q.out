PREHOOK: query: CREATE TABLE `table_1_n2`(
  `bigint_col_7` bigint,
  `decimal2016_col_26` decimal(20,16),
  `tinyint_col_3` tinyint,
  `decimal2612_col_77` decimal(26,12),
  `timestamp_col_9` timestamp)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_1_n2
POSTHOOK: query: CREATE TABLE `table_1_n2`(
  `bigint_col_7` bigint,
  `decimal2016_col_26` decimal(20,16),
  `tinyint_col_3` tinyint,
  `decimal2612_col_77` decimal(26,12),
  `timestamp_col_9` timestamp)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_1_n2
PREHOOK: query: CREATE TABLE `table_18_n2`(
  `tinyint_col_15` tinyint,
  `decimal2709_col_9` decimal(27,9),
  `tinyint_col_20` tinyint,
  `smallint_col_19` smallint,
  `decimal1911_col_16` decimal(19,11),
  `timestamp_col_18` timestamp)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_18_n2
POSTHOOK: query: CREATE TABLE `table_18_n2`(
  `tinyint_col_15` tinyint,
  `decimal2709_col_9` decimal(27,9),
  `tinyint_col_20` tinyint,
  `smallint_col_19` smallint,
  `decimal1911_col_16` decimal(19,11),
  `timestamp_col_18` timestamp)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_18_n2
PREHOOK: query: EXPLAIN
SELECT
COUNT(*)
FROM table_1_n2 t1

INNER JOIN table_18_n2 t2 ON (((t2.tinyint_col_15) = (t1.bigint_col_7)) AND
((t2.decimal2709_col_9) = (t1.decimal2016_col_26))) AND
((t2.tinyint_col_20) = (t1.tinyint_col_3))
WHERE (t2.smallint_col_19) IN (SELECT
COALESCE(-92, -994) AS int_col
FROM table_1_n2 tt1
INNER JOIN table_18_n2 tt2 ON (tt2.decimal1911_col_16) = (tt1.decimal2612_col_77)
WHERE (t1.timestamp_col_9) = (tt2.timestamp_col_18))
PREHOOK: type: QUERY
PREHOOK: Input: default@table_18_n2
PREHOOK: Input: default@table_1_n2
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT
COUNT(*)
FROM table_1_n2 t1

INNER JOIN table_18_n2 t2 ON (((t2.tinyint_col_15) = (t1.bigint_col_7)) AND
((t2.decimal2709_col_9) = (t1.decimal2016_col_26))) AND
((t2.tinyint_col_20) = (t1.tinyint_col_3))
WHERE (t2.smallint_col_19) IN (SELECT
COALESCE(-92, -994) AS int_col
FROM table_1_n2 tt1
INNER JOIN table_18_n2 tt2 ON (tt2.decimal1911_col_16) = (tt1.decimal2612_col_77)
WHERE (t1.timestamp_col_9) = (tt2.timestamp_col_18))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_18_n2
POSTHOOK: Input: default@table_1_n2
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Reducer 6 (BROADCAST_EDGE), Reducer 8 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 6 <- Map 5 (CUSTOM_SIMPLE_EDGE)
        Reducer 7 <- Map 5 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
        Reducer 8 <- Reducer 7 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  filterExpr: (bigint_col_7 is not null and decimal2016_col_26 is not null and tinyint_col_3 is not null and timestamp_col_9 is not null and timestamp_col_9 BETWEEN DynamicValue(RS_22_tt2_timestamp_col_18_min) AND DynamicValue(RS_22_tt2_timestamp_col_18_max) and in_bloom_filter(timestamp_col_9, DynamicValue(RS_22_tt2_timestamp_col_18_bloom_filter)) and decimal2016_col_26 BETWEEN DynamicValue(RS[102]_col0) AND DynamicValue(RS[102]_col1) and tinyint_col_3 BETWEEN DynamicValue(RS[102]_col2) AND DynamicValue(RS[102]_col3) and bigint_col_7 BETWEEN DynamicValue(RS[102]_col4) AND DynamicValue(RS[102]_col5) and in_bloom_filter(hash(hash(decimal2016_col_26,tinyint_col_3),bigint_col_7), DynamicValue(RS[102]_col6))) (type: boolean)
                  Statistics: Num rows: 1 Data size: 164 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (bigint_col_7 is not null and decimal2016_col_26 is not null and tinyint_col_3 is not null and timestamp_col_9 is not null and decimal2016_col_26 BETWEEN DynamicValue(RS[102]_col0) AND DynamicValue(RS[102]_col1) and tinyint_col_3 BETWEEN DynamicValue(RS[102]_col2) AND DynamicValue(RS[102]_col3) and bigint_col_7 BETWEEN DynamicValue(RS[102]_col4) AND DynamicValue(RS[102]_col5) and timestamp_col_9 BETWEEN DynamicValue(RS_22_tt2_timestamp_col_18_min) AND DynamicValue(RS_22_tt2_timestamp_col_18_max) and in_bloom_filter(hash(hash(decimal2016_col_26,tinyint_col_3),bigint_col_7), DynamicValue(RS[102]_col6)) and in_bloom_filter(timestamp_col_9, DynamicValue(RS_22_tt2_timestamp_col_18_bloom_filter))) (type: boolean)
                    Statistics: Num rows: 1 Data size: 164 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: bigint_col_7 (type: bigint), decimal2016_col_26 (type: decimal(20,16)), tinyint_col_3 (type: tinyint), timestamp_col_9 (type: timestamp)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 1 Data size: 164 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: decimal(34,16)), _col2 (type: tinyint), _col0 (type: bigint)
                        null sort order: zzz
                        sort order: +++
                        Map-reduce partition columns: _col1 (type: decimal(34,16)), _col2 (type: tinyint), _col0 (type: bigint)
                        Statistics: Num rows: 1 Data size: 164 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col3 (type: timestamp)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: t2
                  filterExpr: ((UDFToLong(tinyint_col_15) is not null and decimal2709_col_9 is not null and tinyint_col_20 is not null and UDFToInteger(smallint_col_19) is not null) or (timestamp_col_18 is not null and decimal1911_col_16 is not null)) (type: boolean)
                  Statistics: Num rows: 1 Data size: 124 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (UDFToLong(tinyint_col_15) is not null and decimal2709_col_9 is not null and tinyint_col_20 is not null and UDFToInteger(smallint_col_19) is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 124 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: tinyint_col_15 (type: tinyint), decimal2709_col_9 (type: decimal(27,9)), tinyint_col_20 (type: tinyint), smallint_col_19 (type: smallint)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 1 Data size: 124 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: decimal(34,16)), _col2 (type: tinyint), UDFToLong(_col0) (type: bigint)
                        null sort order: zzz
                        sort order: +++
                        Map-reduce partition columns: _col1 (type: decimal(34,16)), _col2 (type: tinyint), UDFToLong(_col0) (type: bigint)
                        Statistics: Num rows: 1 Data size: 124 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col3 (type: smallint)
                      Select Operator
                        expressions: _col1 (type: decimal(34,16)), _col2 (type: tinyint), UDFToLong(_col0) (type: bigint), hash(hash(_col1,_col2),UDFToLong(_col0)) (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col4
                        Statistics: Num rows: 1 Data size: 124 Basic stats: COMPLETE Column stats: NONE
                        Group By Operator
                          aggregations: min(_col0), max(_col0), min(_col1), max(_col1), min(_col2), max(_col2), bloom_filter(_col4, expectedEntries=1)
                          minReductionHashAggr: 0.99
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                          Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                          Reduce Output Operator
                            null sort order: 
                            sort order: 
                            Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                            value expressions: _col0 (type: decimal(34,16)), _col1 (type: decimal(34,16)), _col2 (type: tinyint), _col3 (type: tinyint), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: binary)
                  Filter Operator
                    predicate: (timestamp_col_18 is not null and decimal1911_col_16 is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 152 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: decimal1911_col_16 (type: decimal(19,11)), timestamp_col_18 (type: timestamp)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 152 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: decimal(26,12))
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: decimal(26,12))
                        Statistics: Num rows: 1 Data size: 152 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: timestamp)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 9 
            Map Operator Tree:
                TableScan
                  alias: tt1
                  filterExpr: decimal2612_col_77 is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: decimal2612_col_77 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: decimal2612_col_77 (type: decimal(26,12))
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: decimal(26,12))
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: decimal(26,12))
                        Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: decimal(34,16)), _col2 (type: tinyint), _col0 (type: bigint)
                  1 _col1 (type: decimal(34,16)), _col2 (type: tinyint), UDFToLong(_col0) (type: bigint)
                outputColumnNames: _col3, _col7
                Statistics: Num rows: 1 Data size: 180 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col3 (type: timestamp), UDFToInteger(_col7) (type: int)
                  null sort order: zz
                  sort order: ++
                  Map-reduce partition columns: _col3 (type: timestamp), UDFToInteger(_col7) (type: int)
                  Statistics: Num rows: 1 Data size: 180 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Semi Join 0 to 1
                keys:
                  0 _col3 (type: timestamp), UDFToInteger(_col7) (type: int)
                  1 _col0 (type: timestamp), _col1 (type: int)
                Statistics: Num rows: 1 Data size: 198 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count()
                  minReductionHashAggr: 0.99
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), min(VALUE._col2), max(VALUE._col3), min(VALUE._col4), max(VALUE._col5), bloom_filter(VALUE._col6, expectedEntries=1)
                mode: final
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: decimal(34,16)), _col1 (type: decimal(34,16)), _col2 (type: tinyint), _col3 (type: tinyint), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: binary)
        Reducer 7 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: decimal(26,12))
                  1 _col0 (type: decimal(26,12))
                outputColumnNames: _col1
                Statistics: Num rows: 1 Data size: 167 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col1 (type: timestamp), -92 (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 167 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    keys: _col0 (type: timestamp), _col1 (type: int)
                    minReductionHashAggr: 0.99
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 167 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: timestamp), _col1 (type: int)
                      null sort order: zz
                      sort order: ++
                      Map-reduce partition columns: _col0 (type: timestamp), _col1 (type: int)
                      Statistics: Num rows: 1 Data size: 167 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col0 (type: timestamp)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 167 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: min(_col0), max(_col0), bloom_filter(_col0, expectedEntries=1)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 1 Data size: 120 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 120 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col0 (type: timestamp), _col1 (type: timestamp), _col2 (type: binary)
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), bloom_filter(VALUE._col2, expectedEntries=1)
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 120 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 120 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: timestamp), _col1 (type: timestamp), _col2 (type: binary)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: drop table table_1_n2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_1_n2
PREHOOK: Output: default@table_1_n2
POSTHOOK: query: drop table table_1_n2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_1_n2
POSTHOOK: Output: default@table_1_n2
PREHOOK: query: drop table table_18_n2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@table_18_n2
PREHOOK: Output: default@table_18_n2
POSTHOOK: query: drop table table_18_n2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@table_18_n2
POSTHOOK: Output: default@table_18_n2
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n20(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n20
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n20(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n20
PREHOOK: query: CREATE TABLE src2_n7 as select * from src1
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src1
PREHOOK: Output: database:default
PREHOOK: Output: default@src2_n7
POSTHOOK: query: CREATE TABLE src2_n7 as select * from src1
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@src2_n7
POSTHOOK: Lineage: src2_n7.key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: src2_n7.value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert into src2_n7 select * from src2_n7
PREHOOK: type: QUERY
PREHOOK: Input: default@src2_n7
PREHOOK: Output: default@src2_n7
POSTHOOK: query: insert into src2_n7 select * from src2_n7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src2_n7
POSTHOOK: Output: default@src2_n7
POSTHOOK: Lineage: src2_n7.key SIMPLE [(src2_n7)src2_n7.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: src2_n7.value SIMPLE [(src2_n7)src2_n7.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: insert into src2_n7 select * from src2_n7
PREHOOK: type: QUERY
PREHOOK: Input: default@src2_n7
PREHOOK: Output: default@src2_n7
POSTHOOK: query: insert into src2_n7 select * from src2_n7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src2_n7
POSTHOOK: Output: default@src2_n7
POSTHOOK: Lineage: src2_n7.key SIMPLE [(src2_n7)src2_n7.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: src2_n7.value SIMPLE [(src2_n7)src2_n7.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n20 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n20
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n20 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n20
POSTHOOK: Output: default@srcbucket_mapjoin_n20@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj1/000001_0' INTO TABLE srcbucket_mapjoin_n20 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n20@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj1/000001_0' INTO TABLE srcbucket_mapjoin_n20 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n20@ds=2008-04-08
PREHOOK: query: CREATE TABLE tab_n12(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab_n12
POSTHOOK: query: CREATE TABLE tab_n12(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab_n12
PREHOOK: query: insert overwrite table tab_n12 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_n20
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n20
PREHOOK: Input: default@srcbucket_mapjoin_n20@ds=2008-04-08
PREHOOK: Output: default@tab_n12@ds=2008-04-08
POSTHOOK: query: insert overwrite table tab_n12 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_n20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n20
POSTHOOK: Input: default@srcbucket_mapjoin_n20@ds=2008-04-08
POSTHOOK: Output: default@tab_n12@ds=2008-04-08
POSTHOOK: Lineage: tab_n12 PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_n20)srcbucket_mapjoin_n20.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: tab_n12 PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_n20)srcbucket_mapjoin_n20.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE tab2_n6 (key int, value string, ds string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab2_n6
POSTHOOK: query: CREATE TABLE tab2_n6 (key int, value string, ds string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab2_n6
PREHOOK: query: insert into tab2_n6 select key, value, ds from tab_n12
PREHOOK: type: QUERY
PREHOOK: Input: default@tab_n12
PREHOOK: Input: default@tab_n12@ds=2008-04-08
PREHOOK: Output: default@tab2_n6
POSTHOOK: query: insert into tab2_n6 select key, value, ds from tab_n12
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab_n12
POSTHOOK: Input: default@tab_n12@ds=2008-04-08
POSTHOOK: Output: default@tab2_n6
POSTHOOK: Lineage: tab2_n6.ds SIMPLE [(tab_n12)tab_n12.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: tab2_n6.key SIMPLE [(tab_n12)tab_n12.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: tab2_n6.value SIMPLE [(tab_n12)tab_n12.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: analyze table tab2_n6 compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@tab2_n6
PREHOOK: Output: default@tab2_n6
POSTHOOK: query: analyze table tab2_n6 compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab2_n6
POSTHOOK: Output: default@tab2_n6
PREHOOK: query: analyze table tab2_n6 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@tab2_n6
PREHOOK: Output: default@tab2_n6
#### A masked pattern was here ####
POSTHOOK: query: analyze table tab2_n6 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@tab2_n6
POSTHOOK: Output: default@tab2_n6
#### A masked pattern was here ####
PREHOOK: query: explain
select
  count(*)
  from
  (select x.key as key, min(x.value) as value from tab2_n6 x group by x.key) a
  join
  (select x.key as key, min(x.value) as value from tab2_n6 x group by x.key) b
  on
  a.key = b.key join src1 c on a.value = c.value where c.key < 0
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Input: default@tab2_n6
#### A masked pattern was here ####
POSTHOOK: query: explain
select
  count(*)
  from
  (select x.key as key, min(x.value) as value from tab2_n6 x group by x.key) a
  join
  (select x.key as key, min(x.value) as value from tab2_n6 x group by x.key) b
  on
  a.key = b.key join src1 c on a.value = c.value where c.key < 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@tab2_n6
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 8 <- Reducer 5 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
        Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: x
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: min(value)
                      keys: key (type: int)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 146 Data size: 27448 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 146 Data size: 27448 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: x
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: key (type: int)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 146 Data size: 584 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 146 Data size: 584 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: c
                  filterExpr: ((UDFToDouble(key) < 0.0D) and value is not null and value BETWEEN DynamicValue(RS_21_x__col1_min) AND DynamicValue(RS_21_x__col1_max) and in_bloom_filter(value, DynamicValue(RS_21_x__col1_bloom_filter))) (type: boolean)
                  Statistics: Num rows: 25 Data size: 4375 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((UDFToDouble(key) < 0.0D) and value is not null and value BETWEEN DynamicValue(RS_21_x__col1_min) AND DynamicValue(RS_21_x__col1_max) and in_bloom_filter(value, DynamicValue(RS_21_x__col1_bloom_filter))) (type: boolean)
                    Statistics: Num rows: 8 Data size: 1400 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: value (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 8 Data size: 712 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 8 Data size: 712 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 146 Data size: 584 Basic stats: COMPLETE Column stats: COMPLETE
                Dummy Store
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0)
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 146 Data size: 27448 Basic stats: COMPLETE Column stats: COMPLETE
                Filter Operator
                  predicate: _col1 is not null (type: boolean)
                  Statistics: Num rows: 146 Data size: 27448 Basic stats: COMPLETE Column stats: COMPLETE
                  Merge Join Operator
                    condition map:
                         Inner Join 0 to 1
                    keys:
                      0 _col0 (type: int)
                      1 _col0 (type: int)
                    outputColumnNames: _col1
                    Statistics: Num rows: 146 Data size: 26864 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col1 (type: string)
                      Statistics: Num rows: 146 Data size: 26864 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col1 (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 146 Data size: 53728 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(_col0), max(_col0), bloom_filter(_col0, expectedEntries=146)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: string)
                  1 _col0 (type: string)
                Statistics: Num rows: 8 Data size: 64 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  minReductionHashAggr: 0.875
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), bloom_filter(VALUE._col2, expectedEntries=146)
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

