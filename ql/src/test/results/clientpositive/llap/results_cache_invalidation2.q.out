PREHOOK: query: select reflect('org.apache.hadoop.hive.ql.QTestUtil', 'initEventNotificationPoll')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select reflect('org.apache.hadoop.hive.ql.QTestUtil', 'initEventNotificationPoll')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
null
PREHOOK: query: create table tab1 stored as textfile as select * from src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@tab1
POSTHOOK: query: create table tab1 stored as textfile as select * from src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab1
POSTHOOK: Lineage: tab1.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: tab1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert into tab1 select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tab1
POSTHOOK: query: insert into tab1 select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tab1
POSTHOOK: Lineage: tab1.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: tab1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create table tab2 (key string, value string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab2
POSTHOOK: query: create table tab2 (key string, value string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab2
PREHOOK: query: insert into tab2 select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tab2
POSTHOOK: query: insert into tab2 select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tab2
POSTHOOK: Lineage: tab2.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: tab2.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select count(*) from tab1 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from tab1 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
#### A masked pattern was here ####
994
PREHOOK: query: select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
PREHOOK: Input: default@tab2
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
POSTHOOK: Input: default@tab2
#### A masked pattern was here ####
2056
PREHOOK: query: select count(*) from tab2 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab2
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from tab2 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab2
#### A masked pattern was here ####
497
test.comment="Cached entry should be used"
PREHOOK: query: explain
select count(*) from tab1 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
POSTHOOK: query: explain
select count(*) from tab1 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink
      Cached Query Result: true

PREHOOK: query: select count(*) from tab1 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
POSTHOOK: query: select count(*) from tab1 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
994
test.comment="Cached entry should be used"
PREHOOK: query: explain
select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
PREHOOK: Input: default@tab2
POSTHOOK: query: explain
select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
POSTHOOK: Input: default@tab2
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink
      Cached Query Result: true

PREHOOK: query: select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
PREHOOK: Input: default@tab2
POSTHOOK: query: select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
POSTHOOK: Input: default@tab2
2056
test.comment="Cached entry should be used"
PREHOOK: query: explain
select count(*) from tab2 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab2
POSTHOOK: query: explain
select count(*) from tab2 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab2
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink
      Cached Query Result: true

PREHOOK: query: select count(*) from tab2 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab2
POSTHOOK: query: select count(*) from tab2 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab2
497
PREHOOK: query: insert into tab1 select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tab1
POSTHOOK: query: insert into tab1 select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tab1
POSTHOOK: Lineage: tab1.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: tab1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select reflect("java.lang.Thread", 'sleep', cast(10000 as bigint))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select reflect("java.lang.Thread", 'sleep', cast(10000 as bigint))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
null
test.comment="Cached entry should be invalidated - query should not use cache"
PREHOOK: query: explain
select count(*) from tab1 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
POSTHOOK: query: explain
select count(*) from tab1 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink
      Cached Query Result: true

PREHOOK: query: select count(*) from tab1 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
POSTHOOK: query: select count(*) from tab1 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
994
test.comment="Cached entry should be invalidated - query should not use cache"
PREHOOK: query: explain
select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
PREHOOK: Input: default@tab2
POSTHOOK: query: explain
select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
POSTHOOK: Input: default@tab2
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink
      Cached Query Result: true

PREHOOK: query: select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
PREHOOK: type: QUERY
PREHOOK: Input: default@tab1
PREHOOK: Input: default@tab2
POSTHOOK: query: select count(*) from tab1 join tab2 on (tab1.key = tab2.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab1
POSTHOOK: Input: default@tab2
2056
test.comment="tab2 was not modified, this query should still use cache"
PREHOOK: query: explain
select count(*) from tab2 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab2
POSTHOOK: query: explain
select count(*) from tab2 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab2
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink
      Cached Query Result: true

PREHOOK: query: select count(*) from tab2 where key > 0
PREHOOK: type: QUERY
PREHOOK: Input: default@tab2
POSTHOOK: query: select count(*) from tab2 where key > 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab2
497
