PREHOOK: query: -- SORT_QUERY_RESULTS

CREATE TABLE orcsrc STORED AS ORC AS SELECT * FROM src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@orcsrc
POSTHOOK: query: -- SORT_QUERY_RESULTS

CREATE TABLE orcsrc STORED AS ORC AS SELECT * FROM src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orcsrc
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 5 (BROADCAST_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 5 <- Map 4 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: string)
                        sort order: +
                        Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: string)
                    1 _col0 (type: string)
                  outputColumnNames: _col2, _col3
                  input vertices:
                    1 Reducer 5
                  Statistics: Num rows: 275 Data size: 48400 Basic stats: COMPLETE Column stats: NONE
                  HybridGraceHashJoin: true
                  Group By Operator
                    aggregations: sum(hash(_col2,_col3))
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
103231310608
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 5 (BROADCAST_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 5 <- Map 4 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Left Outer Join0 to 1
                  keys:
                    0 _col0 (type: string)
                    1 _col0 (type: string)
                  outputColumnNames: _col2, _col3
                  input vertices:
                    1 Reducer 5
                  Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
                  HybridGraceHashJoin: true
                  Group By Operator
                    aggregations: sum(hash(_col2,_col3))
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
103231310608
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 4 <- Map 3 (SIMPLE_EDGE), Reducer 2 (BROADCAST_EDGE)
        Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
        Reducer 4 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Right Outer Join0 to 1
                  keys:
                    0 _col0 (type: string)
                    1 _col0 (type: string)
                  outputColumnNames: _col2, _col3
                  input vertices:
                    0 Reducer 2
                  Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
                  HybridGraceHashJoin: true
                  Group By Operator
                    aggregations: sum(hash(_col2,_col3))
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: bigint)
        Reducer 5 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN 
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
103231310608
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 5 (BROADCAST_EDGE), Reducer 7 (BROADCAST_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 5 <- Map 4 (SIMPLE_EDGE)
        Reducer 7 <- Map 6 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: string)
                        sort order: +
                        Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: string)
                        sort order: +
                        Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                       Inner Join 0 to 2
                  keys:
                    0 _col0 (type: string)
                    1 _col0 (type: string)
                    2 _col0 (type: string)
                  outputColumnNames: _col2, _col3
                  input vertices:
                    1 Reducer 5
                    2 Reducer 7
                  Statistics: Num rows: 550 Data size: 96800 Basic stats: COMPLETE Column stats: NONE
                  HybridGraceHashJoin: true
                  Group By Operator
                    aggregations: sum(hash(_col2,_col3))
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string)
        Reducer 7 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 250 Data size: 44000 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 6 <- Map 5 (SIMPLE_EDGE)
        Reducer 8 <- Map 7 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                     Left Outer Join0 to 2
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                  2 _col0 (type: string)
                outputColumnNames: _col2, _col3
                Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(hash(_col2,_col3))
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string)
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 6 <- Map 5 (SIMPLE_EDGE)
        Reducer 8 <- Map 7 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Outer Join0 to 1
                     Left Outer Join0 to 2
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                  2 _col0 (type: string)
                outputColumnNames: _col2, _col3
                Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(hash(_col2,_col3))
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string)
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 6 <- Map 5 (SIMPLE_EDGE)
        Reducer 8 <- Map 7 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Outer Join0 to 1
                     Right Outer Join0 to 2
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                  2 _col0 (type: string)
                outputColumnNames: _col2, _col3
                Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(hash(_col2,_col3))
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string)
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
LEFT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
PREHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM 
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 6 <- Map 5 (SIMPLE_EDGE)
        Reducer 8 <- Map 7 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: orcsrc
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: string)
                      sort order: +
                      Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Right Outer Join0 to 1
                     Right Outer Join0 to 2
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                  2 _col0 (type: string)
                outputColumnNames: _col2, _col3
                Statistics: Num rows: 1100 Data size: 193600 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(hash(_col2,_col3))
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, uber
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string)
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 88000 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
PREHOOK: type: QUERY
PREHOOK: Input: default@orcsrc
#### A masked pattern was here ####
POSTHOOK: query: FROM
(SELECT orcsrc.* FROM orcsrc sort by key) x
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Y
ON (x.key = Y.key)
RIGHT OUTER JOIN
(SELECT orcsrc.* FROM orcsrc sort by value) Z
ON (x.key = Z.key)
select sum(hash(Y.key,Y.value))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcsrc
#### A masked pattern was here ####
348019368476
