PREHOOK: query: create table test(id string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test
POSTHOOK: query: create table test(id string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test
PREHOOK: query: insert into test(id) values
(4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (2), (1), (5)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test
POSTHOOK: query: insert into test(id) values
(4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (3), (4), (2), (1), (5)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test
POSTHOOK: Lineage: test.id SCRIPT []
PREHOOK: query: explain cbo
select id, count(1) from test group by id limit 2
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select id, count(1) from test group by id limit 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
CBO PLAN:
HiveSortLimit(sort0=[$0], dir0=[ASC], fetch=[2])
  HiveProject(id=[$0], $f1=[$1])
    HiveAggregate(group=[{0}], agg#0=[count()])
      HiveTableScan(table=[[default, test]], table:alias=[test])

PREHOOK: query: explain extended
select id, count(1) from test group by id limit 2
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select id, count(1) from test group by id limit 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `id`, COUNT(*) AS `$f1`
FROM `default`.`test`
GROUP BY `id`
ORDER BY `id`
LIMIT 2
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: test
                  Statistics: Num rows: 22 Data size: 1870 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Select Operator
                    expressions: id (type: string)
                    outputColumnNames: id
                    Statistics: Num rows: 22 Data size: 1870 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count()
                      keys: id (type: string)
                      minReductionHashAggr: 0.77272725
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        bucketingVersion: 2
                        key expressions: _col0 (type: string)
                        null sort order: z
                        numBuckets: -1
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                        tag: -1
                        TopN: 2
                        TopN Hash Memory Usage: 0.1
                        value expressions: _col1 (type: bigint)
                        auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: test
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucket_count -1
                    bucketing_version 2
                    column.name.delimiter ,
                    columns id
                    columns.types string
#### A masked pattern was here ####
                    name default.test
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns id
                      columns.comments 
                      columns.types string
#### A masked pattern was here ####
                      name default.test
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.test
                  name: default.test
            Truncated Path -> Alias:
              /test [test]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: string)
                  null sort order: z
                  numBuckets: -1
                  sort order: +
                  Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: -1
                  TopN: 2
                  TopN Hash Memory Usage: 0.1
                  value expressions: _col1 (type: bigint)
                  auto parallelism: false
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: bigint)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 2
                  Statistics: Num rows: 2 Data size: 186 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 2 Data size: 186 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1
                          columns.types string:bigint
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: 2
      Processor Tree:
        ListSink

PREHOOK: query: select id, count(1) from test group by id limit 2
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: select id, count(1) from test group by id limit 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
1	1
2	1
PREHOOK: query: explain extended
select id, count(1) from test group by id limit 2
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select id, count(1) from test group by id limit 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `id`, COUNT(*) AS `$f1`
FROM `default`.`test`
GROUP BY `id`
ORDER BY `id`
LIMIT 2
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: test
                  Statistics: Num rows: 22 Data size: 1870 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Top N Key Operator
                    sort order: +
                    keys: id (type: string)
                    null sort order: z
                    Statistics: Num rows: 22 Data size: 1870 Basic stats: COMPLETE Column stats: COMPLETE
                    top n: 2
                    Select Operator
                      expressions: id (type: string)
                      outputColumnNames: id
                      Statistics: Num rows: 22 Data size: 1870 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        keys: id (type: string)
                        minReductionHashAggr: 0.77272725
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          bucketingVersion: 2
                          key expressions: _col0 (type: string)
                          null sort order: z
                          numBuckets: -1
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                          tag: -1
                          value expressions: _col1 (type: bigint)
                          auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: test
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucket_count -1
                    bucketing_version 2
                    column.name.delimiter ,
                    columns id
                    columns.types string
#### A masked pattern was here ####
                    name default.test
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns id
                      columns.comments 
                      columns.types string
#### A masked pattern was here ####
                      name default.test
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.test
                  name: default.test
            Truncated Path -> Alias:
              /test [test]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  bucketingVersion: 2
                  key expressions: _col0 (type: string)
                  null sort order: z
                  numBuckets: -1
                  sort order: +
                  Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: -1
                  value expressions: _col1 (type: bigint)
                  auto parallelism: false
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: bigint)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 5 Data size: 465 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 2
                  Statistics: Num rows: 2 Data size: 186 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 2 Data size: 186 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1
                          columns.types string:bigint
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: 2
      Processor Tree:
        ListSink

PREHOOK: query: select id, count(1) from test group by id limit 2
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: select id, count(1) from test group by id limit 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
1	1
2	1
