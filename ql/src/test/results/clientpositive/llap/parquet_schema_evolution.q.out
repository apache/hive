PREHOOK: query: DROP TABLE NewStructField
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE NewStructField
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE NewStructFieldTable
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE NewStructFieldTable
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE NewStructField(a struct<a1:map<string,string>, a2:struct<e1:int>>) STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@NewStructField
POSTHOOK: query: CREATE TABLE NewStructField(a struct<a1:map<string,string>, a2:struct<e1:int>>) STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@NewStructField
PREHOOK: query: INSERT OVERWRITE TABLE NewStructField SELECT named_struct('a1', map('k1','v1'), 'a2', named_struct('e1',5)) FROM srcpart LIMIT 5
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
PREHOOK: Output: default@newstructfield
POSTHOOK: query: INSERT OVERWRITE TABLE NewStructField SELECT named_struct('a1', map('k1','v1'), 'a2', named_struct('e1',5)) FROM srcpart LIMIT 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
POSTHOOK: Output: default@newstructfield
POSTHOOK: Lineage: newstructfield.a EXPRESSION []
PREHOOK: query: DESCRIBE NewStructField
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@newstructfield
POSTHOOK: query: DESCRIBE NewStructField
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@newstructfield
a                   	struct<a1:map<string,string>,a2:struct<e1:int>>	                    
PREHOOK: query: SELECT * FROM NewStructField
PREHOOK: type: QUERY
PREHOOK: Input: default@newstructfield
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM NewStructField
POSTHOOK: type: QUERY
POSTHOOK: Input: default@newstructfield
#### A masked pattern was here ####
{"a1":{"k1":"v1"},"a2":{"e1":5}}
{"a1":{"k1":"v1"},"a2":{"e1":5}}
{"a1":{"k1":"v1"},"a2":{"e1":5}}
{"a1":{"k1":"v1"},"a2":{"e1":5}}
{"a1":{"k1":"v1"},"a2":{"e1":5}}
PREHOOK: query: ALTER TABLE NewStructField REPLACE COLUMNS (a struct<a1:map<string,string>, a2:struct<e1:int,e2:string>, a3:int>, b int)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@newstructfield
PREHOOK: Output: default@newstructfield
POSTHOOK: query: ALTER TABLE NewStructField REPLACE COLUMNS (a struct<a1:map<string,string>, a2:struct<e1:int,e2:string>, a3:int>, b int)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@newstructfield
POSTHOOK: Output: default@newstructfield
PREHOOK: query: DESCRIBE NewStructField
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@newstructfield
POSTHOOK: query: DESCRIBE NewStructField
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@newstructfield
a                   	struct<a1:map<string,string>,a2:struct<e1:int,e2:string>,a3:int>	                    
b                   	int                 	                    
PREHOOK: query: SELECT * FROM NewStructField
PREHOOK: type: QUERY
PREHOOK: Input: default@newstructfield
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM NewStructField
POSTHOOK: type: QUERY
POSTHOOK: Input: default@newstructfield
#### A masked pattern was here ####
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
PREHOOK: query: CREATE TABLE NewStructFieldTable STORED AS PARQUET AS SELECT * FROM NewStructField
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@newstructfield
PREHOOK: Output: database:default
PREHOOK: Output: default@NewStructFieldTable
POSTHOOK: query: CREATE TABLE NewStructFieldTable STORED AS PARQUET AS SELECT * FROM NewStructField
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@newstructfield
POSTHOOK: Output: database:default
POSTHOOK: Output: default@NewStructFieldTable
POSTHOOK: Lineage: newstructfieldtable.a SIMPLE [(newstructfield)newstructfield.FieldSchema(name:a, type:struct<a1:map<string,string>,a2:struct<e1:int,e2:string>,a3:int>, comment:null), ]
POSTHOOK: Lineage: newstructfieldtable.b SIMPLE [(newstructfield)newstructfield.FieldSchema(name:b, type:int, comment:null), ]
PREHOOK: query: DESCRIBE NewStructFieldTable
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@newstructfieldtable
POSTHOOK: query: DESCRIBE NewStructFieldTable
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@newstructfieldtable
a                   	struct<a1:map<string,string>,a2:struct<e1:int,e2:string>,a3:int>	                    
b                   	int                 	                    
PREHOOK: query: SELECT * FROM NewStructFieldTable
PREHOOK: type: QUERY
PREHOOK: Input: default@newstructfieldtable
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM NewStructFieldTable
POSTHOOK: type: QUERY
POSTHOOK: Input: default@newstructfieldtable
#### A masked pattern was here ####
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
{"a1":{"k1":"v1"},"a2":{"e1":5,"e2":null},"a3":null}	NULL
PREHOOK: query: DROP TABLE IF EXISTS schema_test
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS schema_test
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE schema_test (msg array<struct<f1: string, f2: string, a: array<struct<a1: string, a2: string>>, b: array<struct<b1: int, b2: int>>>>) STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@schema_test
POSTHOOK: query: CREATE TABLE schema_test (msg array<struct<f1: string, f2: string, a: array<struct<a1: string, a2: string>>, b: array<struct<b1: int, b2: int>>>>) STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@schema_test
PREHOOK: query: INSERT INTO TABLE schema_test SELECT array(named_struct('f1', 'abc', 'f2', 'abc2', 'a', array(named_struct('a1', 'a1', 'a2', 'a2')),
   'b', array(named_struct('b1', 1, 'b2', 2)))) FROM NewStructField LIMIT 2
PREHOOK: type: QUERY
PREHOOK: Input: default@newstructfield
PREHOOK: Output: default@schema_test
POSTHOOK: query: INSERT INTO TABLE schema_test SELECT array(named_struct('f1', 'abc', 'f2', 'abc2', 'a', array(named_struct('a1', 'a1', 'a2', 'a2')),
   'b', array(named_struct('b1', 1, 'b2', 2)))) FROM NewStructField LIMIT 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@newstructfield
POSTHOOK: Output: default@schema_test
POSTHOOK: Lineage: schema_test.msg EXPRESSION []
PREHOOK: query: SELECT * FROM schema_test
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_test
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM schema_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_test
#### A masked pattern was here ####
[{"f1":"abc","f2":"abc2","a":[{"a1":"a1","a2":"a2"}],"b":[{"b1":1,"b2":2}]}]
[{"f1":"abc","f2":"abc2","a":[{"a1":"a1","a2":"a2"}],"b":[{"b1":1,"b2":2}]}]
PREHOOK: query: ALTER TABLE schema_test CHANGE msg msg array<struct<a: array<struct<a2: string, a1: string>>, b: array<struct<b2: int, b1: int>>, f2: string, f1: string>>
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@schema_test
PREHOOK: Output: default@schema_test
POSTHOOK: query: ALTER TABLE schema_test CHANGE msg msg array<struct<a: array<struct<a2: string, a1: string>>, b: array<struct<b2: int, b1: int>>, f2: string, f1: string>>
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@schema_test
POSTHOOK: Output: default@schema_test
PREHOOK: query: SELECT * FROM schema_test
PREHOOK: type: QUERY
PREHOOK: Input: default@schema_test
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM schema_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@schema_test
#### A masked pattern was here ####
[{"a":[{"a2":"a2","a1":"a1"}],"b":[{"b2":2,"b1":1}],"f2":"abc2","f1":"abc"}]
[{"a":[{"a2":"a2","a1":"a1"}],"b":[{"b2":2,"b1":1}],"f2":"abc2","f1":"abc"}]
PREHOOK: query: DROP TABLE schema_test
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@schema_test
PREHOOK: Output: default@schema_test
POSTHOOK: query: DROP TABLE schema_test
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@schema_test
POSTHOOK: Output: default@schema_test
PREHOOK: query: DROP TABLE NewStructField
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@newstructfield
PREHOOK: Output: default@newstructfield
POSTHOOK: query: DROP TABLE NewStructField
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@newstructfield
POSTHOOK: Output: default@newstructfield
PREHOOK: query: DROP TABLE NewStructFieldTable
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@newstructfieldtable
PREHOOK: Output: default@newstructfieldtable
POSTHOOK: query: DROP TABLE NewStructFieldTable
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@newstructfieldtable
POSTHOOK: Output: default@newstructfieldtable
