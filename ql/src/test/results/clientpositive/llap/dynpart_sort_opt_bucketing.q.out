PREHOOK: query: drop table if exists t1_staging
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists t1_staging
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table t1_staging(
a string,
b int,
c int,
d string)
partitioned by (e  string)
clustered by(a)
sorted by(a desc)
into 256 buckets stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_staging
POSTHOOK: query: create table t1_staging(
a string,
b int,
c int,
d string)
partitioned by (e  string)
clustered by(a)
sorted by(a desc)
into 256 buckets stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_staging
PREHOOK: query: load data local inpath '../../data/files/sortdp/000000_0' overwrite into table t1_staging partition (e='epart')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_staging
POSTHOOK: query: load data local inpath '../../data/files/sortdp/000000_0' overwrite into table t1_staging partition (e='epart')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_staging
POSTHOOK: Output: default@t1_staging@e=epart
PREHOOK: query: drop table t1_n147
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table t1_n147
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table t1_n147(
a string,
b int,
c int,
d string)
partitioned by (e string)
clustered by(a)
sorted by(a desc) into 10 buckets stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_n147
POSTHOOK: query: create table t1_n147(
a string,
b int,
c int,
d string)
partitioned by (e string)
clustered by(a)
sorted by(a desc) into 10 buckets stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_n147
PREHOOK: query: insert overwrite table t1_n147 partition(e) select a,b,c,d,'epart' from t1_staging
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_staging
PREHOOK: Input: default@t1_staging@e=epart
PREHOOK: Output: default@t1_n147
POSTHOOK: query: insert overwrite table t1_n147 partition(e) select a,b,c,d,'epart' from t1_staging
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_staging
POSTHOOK: Input: default@t1_staging@e=epart
POSTHOOK: Output: default@t1_n147
POSTHOOK: Output: default@t1_n147@e=epart
POSTHOOK: Lineage: t1_n147 PARTITION(e=epart).a SIMPLE [(t1_staging)t1_staging.FieldSchema(name:a, type:string, comment:null), ]
POSTHOOK: Lineage: t1_n147 PARTITION(e=epart).b SIMPLE [(t1_staging)t1_staging.FieldSchema(name:b, type:int, comment:null), ]
POSTHOOK: Lineage: t1_n147 PARTITION(e=epart).c SIMPLE [(t1_staging)t1_staging.FieldSchema(name:c, type:int, comment:null), ]
POSTHOOK: Lineage: t1_n147 PARTITION(e=epart).d SIMPLE [(t1_staging)t1_staging.FieldSchema(name:d, type:string, comment:null), ]
PREHOOK: query: select 'bucket_0'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_0'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_0
fff06c6e0fd675ebeff09350e6b7a3900115f72341fd353e5e185e8983d10534002015-01-21
PREHOOK: query: select 'bucket_2'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_2'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_2
ffff67aef705abda0b89d899e408c28ef230fd0bb2cb0bb23b057e946ba9ca91\N\N2015-01-21
fff3474e56ee23c0df629b538268a438d74da36208bdb114bda2da4253f0b4c9\N\N2015-01-21
PREHOOK: query: select 'bucket_4'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_4'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_4
fffcb494aa56beb88fddb83cc3b0296d417d3ab7782be76c8c12d33e3f3d6a3c\N\N2015-01-21
fffad1074d813e6db5c23302a9170fe472c2968844499c90445cbc8559d64fe1082015-01-21
fff03007f38c32085bb4c9389270b965d371168032845555b663b7d4653ec8ee\N\N2015-01-21
ffefa017a261a0b3e94c2386e0c47a015e2095e5d56b0f4fca2033d9755c9e45012015-01-21
PREHOOK: query: select 'bucket_6'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_6'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_6
fffee943d640a7714d09f9bd50dba08a9d0ebdd146655e4642c293a4396cb385\N\N2015-01-21
fffc0450ec9b28bae495dffc87a37cc3eea6d2d067ccea8b333185d28847ae2a\N\N2015-01-21
PREHOOK: query: select 'bucket_8'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_8'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_8
fffcf74695669d1f444936243869f3586418c6d61d3abb5cc9acb67a3ad7bd2f002015-01-21
fffbe3c110c390ec20218e5ad4a026ff515668ed55488b717319b556daa962a1002015-01-21
fffb1b226efc3cfaac8d73647ce4fa4e82413d67265fb55366ac3a4996518738012015-01-21
fff56191e39b15f0e2f04984c70152fb1bde2ecba52ff5a73b4c28bf4d58c017002015-01-21
fff4166378aa9d94cd4f8a9cd543375890a61b4f09a57dbfb31a66b33b3e3fd9\N\N2015-01-21
PREHOOK: query: drop table t1_n147
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t1_n147
PREHOOK: Output: default@t1_n147
POSTHOOK: query: drop table t1_n147
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t1_n147
POSTHOOK: Output: default@t1_n147
PREHOOK: query: create table t1_n147(
a string,
b int,
c int,
d string)
partitioned by (e string)
clustered by(a)
sorted by(a desc) into 10 buckets stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_n147
POSTHOOK: query: create table t1_n147(
a string,
b int,
c int,
d string)
partitioned by (e string)
clustered by(a)
sorted by(a desc) into 10 buckets stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_n147
PREHOOK: query: insert overwrite table t1_n147 partition(e) select a,b,c,d,'epart' from t1_staging
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_staging
PREHOOK: Input: default@t1_staging@e=epart
PREHOOK: Output: default@t1_n147
POSTHOOK: query: insert overwrite table t1_n147 partition(e) select a,b,c,d,'epart' from t1_staging
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_staging
POSTHOOK: Input: default@t1_staging@e=epart
POSTHOOK: Output: default@t1_n147
POSTHOOK: Output: default@t1_n147@e=epart
POSTHOOK: Lineage: t1_n147 PARTITION(e=epart).a SIMPLE [(t1_staging)t1_staging.FieldSchema(name:a, type:string, comment:null), ]
POSTHOOK: Lineage: t1_n147 PARTITION(e=epart).b SIMPLE [(t1_staging)t1_staging.FieldSchema(name:b, type:int, comment:null), ]
POSTHOOK: Lineage: t1_n147 PARTITION(e=epart).c SIMPLE [(t1_staging)t1_staging.FieldSchema(name:c, type:int, comment:null), ]
POSTHOOK: Lineage: t1_n147 PARTITION(e=epart).d SIMPLE [(t1_staging)t1_staging.FieldSchema(name:d, type:string, comment:null), ]
PREHOOK: query: select 'bucket_0'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_0'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_0
fff06c6e0fd675ebeff09350e6b7a3900115f72341fd353e5e185e8983d10534002015-01-21
PREHOOK: query: select 'bucket_2'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_2'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_2
ffff67aef705abda0b89d899e408c28ef230fd0bb2cb0bb23b057e946ba9ca91\N\N2015-01-21
fff3474e56ee23c0df629b538268a438d74da36208bdb114bda2da4253f0b4c9\N\N2015-01-21
PREHOOK: query: select 'bucket_4'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_4'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_4
fffcb494aa56beb88fddb83cc3b0296d417d3ab7782be76c8c12d33e3f3d6a3c\N\N2015-01-21
fffad1074d813e6db5c23302a9170fe472c2968844499c90445cbc8559d64fe1082015-01-21
fff03007f38c32085bb4c9389270b965d371168032845555b663b7d4653ec8ee\N\N2015-01-21
ffefa017a261a0b3e94c2386e0c47a015e2095e5d56b0f4fca2033d9755c9e45012015-01-21
PREHOOK: query: select 'bucket_6'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_6'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_6
fffee943d640a7714d09f9bd50dba08a9d0ebdd146655e4642c293a4396cb385\N\N2015-01-21
fffc0450ec9b28bae495dffc87a37cc3eea6d2d067ccea8b333185d28847ae2a\N\N2015-01-21
PREHOOK: query: select 'bucket_8'
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select 'bucket_8'
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
bucket_8
fffcf74695669d1f444936243869f3586418c6d61d3abb5cc9acb67a3ad7bd2f002015-01-21
fffbe3c110c390ec20218e5ad4a026ff515668ed55488b717319b556daa962a1002015-01-21
fffb1b226efc3cfaac8d73647ce4fa4e82413d67265fb55366ac3a4996518738012015-01-21
fff56191e39b15f0e2f04984c70152fb1bde2ecba52ff5a73b4c28bf4d58c017002015-01-21
fff4166378aa9d94cd4f8a9cd543375890a61b4f09a57dbfb31a66b33b3e3fd9\N\N2015-01-21
PREHOOK: query: CREATE TABLE dynpart_sort_opt_bucketing_test (ca_address_sk int, ca_address_id string, ca_street_number string, ca_street_name string,
    ca_street_type string, ca_suite_number string, ca_city string, ca_county string, ca_state string,
    ca_zip string, ca_country string, ca_gmt_offset decimal(5,2))
    PARTITIONED BY (ca_location_type string)
    CLUSTERED BY (ca_state) INTO 50 BUCKETS STORED AS ORC TBLPROPERTIES('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dynpart_sort_opt_bucketing_test
POSTHOOK: query: CREATE TABLE dynpart_sort_opt_bucketing_test (ca_address_sk int, ca_address_id string, ca_street_number string, ca_street_name string,
    ca_street_type string, ca_suite_number string, ca_city string, ca_county string, ca_state string,
    ca_zip string, ca_country string, ca_gmt_offset decimal(5,2))
    PARTITIONED BY (ca_location_type string)
    CLUSTERED BY (ca_state) INTO 50 BUCKETS STORED AS ORC TBLPROPERTIES('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dynpart_sort_opt_bucketing_test
PREHOOK: query: explain INSERT INTO TABLE dynpart_sort_opt_bucketing_test PARTITION (ca_location_type) VALUES (5555, 'AAAAAAAADLFBAAAA', '126',
                'Highland Park', 'Court', 'Suite E', 'San Jose', 'King George County', 'VA', '28003', 'United States',
                '-5', 'single family')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@dynpart_sort_opt_bucketing_test
POSTHOOK: query: explain INSERT INTO TABLE dynpart_sort_opt_bucketing_test PARTITION (ca_location_type) VALUES (5555, 'AAAAAAAADLFBAAAA', '126',
                'Highland Park', 'Court', 'Suite E', 'San Jose', 'King George County', 'VA', '28003', 'United States',
                '-5', 'single family')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@dynpart_sort_opt_bucketing_test
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: _dummy_table
                  Row Limit Per Split: 1
                  Statistics: Num rows: 1 Data size: 10 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: array(const struct(5555,'AAAAAAAADLFBAAAA','126','Highland Park','Court','Suite E','San Jose','King George County','VA','28003','United States','-5','single family')) (type: array<struct<col1:int,col2:string,col3:string,col4:string,col5:string,col6:string,col7:string,col8:string,col9:string,col10:string,col11:string,col12:string,col13:string>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                    UDTF Operator
                      Statistics: Num rows: 1 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      function name: inline
                      Select Operator
                        expressions: col1 (type: int), col2 (type: string), col3 (type: string), col4 (type: string), col5 (type: string), col6 (type: string), col7 (type: string), col8 (type: string), col9 (type: string), col10 (type: string), col11 (type: string), CAST( col12 AS decimal(5,2)) (type: decimal(5,2)), col13 (type: string)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                        Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col12 (type: string), _bucket_number (type: string), _col8 (type: string)
                          null sort order: aaa
                          sort order: +++
                          Map-reduce partition columns: _col12 (type: string)
                          Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: decimal(5,2))
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), VALUE._col2 (type: string), VALUE._col3 (type: string), VALUE._col4 (type: string), VALUE._col5 (type: string), VALUE._col6 (type: string), VALUE._col7 (type: string), KEY._col8 (type: string), VALUE._col9 (type: string), VALUE._col10 (type: string), VALUE._col11 (type: decimal(5,2)), KEY._col12 (type: string), KEY._bucket_number (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _bucket_number
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_BUCKET_SORTED
                  Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.dynpart_sort_opt_bucketing_test
                  Write Type: INSERT

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ca_location_type 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.dynpart_sort_opt_bucketing_test
          Write Type: INSERT

PREHOOK: query: INSERT INTO TABLE dynpart_sort_opt_bucketing_test PARTITION (ca_location_type) VALUES (5555, 'AAAAAAAADLFBAAAA', '126',
                'Highland Park', 'Court', 'Suite E', 'San Jose', 'King George County', 'VA', '28003', 'United States',
                '-5', 'single family')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@dynpart_sort_opt_bucketing_test
POSTHOOK: query: INSERT INTO TABLE dynpart_sort_opt_bucketing_test PARTITION (ca_location_type) VALUES (5555, 'AAAAAAAADLFBAAAA', '126',
                'Highland Park', 'Court', 'Suite E', 'San Jose', 'King George County', 'VA', '28003', 'United States',
                '-5', 'single family')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@dynpart_sort_opt_bucketing_test
POSTHOOK: Output: default@dynpart_sort_opt_bucketing_test@ca_location_type=single family
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_address_id SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_address_sk SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_city SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_country SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_county SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_gmt_offset SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_state SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_street_name SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_street_number SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_street_type SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_suite_number SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_zip SCRIPT []
PREHOOK: query: select * from dynpart_sort_opt_bucketing_test
PREHOOK: type: QUERY
PREHOOK: Input: default@dynpart_sort_opt_bucketing_test
PREHOOK: Input: default@dynpart_sort_opt_bucketing_test@ca_location_type=single family
#### A masked pattern was here ####
POSTHOOK: query: select * from dynpart_sort_opt_bucketing_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dynpart_sort_opt_bucketing_test
POSTHOOK: Input: default@dynpart_sort_opt_bucketing_test@ca_location_type=single family
#### A masked pattern was here ####
5555	AAAAAAAADLFBAAAA	126	Highland Park	Court	Suite E	San Jose	King George County	VA	28003	United States	-5.00	single family
PREHOOK: query: explain INSERT INTO TABLE dynpart_sort_opt_bucketing_test PARTITION (ca_location_type) VALUES (5555, 'AAAAAAAADLFBAAAA', '126',
                   'Highland Park', 'Court', 'Suite E', 'San Jose', 'King George County', 'VA', '28003', 'United States',
                   '-5', 'single family')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@dynpart_sort_opt_bucketing_test
POSTHOOK: query: explain INSERT INTO TABLE dynpart_sort_opt_bucketing_test PARTITION (ca_location_type) VALUES (5555, 'AAAAAAAADLFBAAAA', '126',
                   'Highland Park', 'Court', 'Suite E', 'San Jose', 'King George County', 'VA', '28003', 'United States',
                   '-5', 'single family')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@dynpart_sort_opt_bucketing_test
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: _dummy_table
                  Row Limit Per Split: 1
                  Statistics: Num rows: 1 Data size: 10 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: array(const struct(5555,'AAAAAAAADLFBAAAA','126','Highland Park','Court','Suite E','San Jose','King George County','VA','28003','United States','-5','single family')) (type: array<struct<col1:int,col2:string,col3:string,col4:string,col5:string,col6:string,col7:string,col8:string,col9:string,col10:string,col11:string,col12:string,col13:string>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                    UDTF Operator
                      Statistics: Num rows: 1 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      function name: inline
                      Select Operator
                        expressions: col1 (type: int), col2 (type: string), col3 (type: string), col4 (type: string), col5 (type: string), col6 (type: string), col7 (type: string), col8 (type: string), col9 (type: string), col10 (type: string), col11 (type: string), CAST( col12 AS decimal(5,2)) (type: decimal(5,2)), col13 (type: string)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                        Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col12 (type: string), _bucket_number (type: string), _col8 (type: string)
                          null sort order: aaa
                          sort order: +++
                          Map-reduce partition columns: _col12 (type: string)
                          Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: decimal(5,2))
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: decimal(5,2)), _col12 (type: string)
                          outputColumnNames: ca_address_sk, ca_address_id, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type
                          Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: COMPLETE
                          Group By Operator
                            aggregations: min(ca_address_sk), max(ca_address_sk), count(1), count(ca_address_sk), compute_bit_vector_hll(ca_address_sk), max(length(ca_address_id)), avg(COALESCE(length(ca_address_id),0)), count(ca_address_id), compute_bit_vector_hll(ca_address_id), max(length(ca_street_number)), avg(COALESCE(length(ca_street_number),0)), count(ca_street_number), compute_bit_vector_hll(ca_street_number), max(length(ca_street_name)), avg(COALESCE(length(ca_street_name),0)), count(ca_street_name), compute_bit_vector_hll(ca_street_name), max(length(ca_street_type)), avg(COALESCE(length(ca_street_type),0)), count(ca_street_type), compute_bit_vector_hll(ca_street_type), max(length(ca_suite_number)), avg(COALESCE(length(ca_suite_number),0)), count(ca_suite_number), compute_bit_vector_hll(ca_suite_number), max(length(ca_city)), avg(COALESCE(length(ca_city),0)), count(ca_city), compute_bit_vector_hll(ca_city), max(length(ca_county)), avg(COALESCE(length(ca_county),0)), count(ca_county), compute_bit_vector_hll(ca_county), max(length(ca_state)), avg(COALESCE(length(ca_state),0)), count(ca_state), compute_bit_vector_hll(ca_state), max(length(ca_zip)), avg(COALESCE(length(ca_zip),0)), count(ca_zip), compute_bit_vector_hll(ca_zip), max(length(ca_country)), avg(COALESCE(length(ca_country),0)), count(ca_country), compute_bit_vector_hll(ca_country), min(ca_gmt_offset), max(ca_gmt_offset), count(ca_gmt_offset), compute_bit_vector_hll(ca_gmt_offset)
                            keys: ca_location_type (type: string)
                            minReductionHashAggr: 0.4
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col30, _col31, _col32, _col33, _col34, _col35, _col36, _col37, _col38, _col39, _col40, _col41, _col42, _col43, _col44, _col45, _col46, _col47, _col48, _col49
                            Statistics: Num rows: 1 Data size: 3048 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              key expressions: _col0 (type: string)
                              null sort order: z
                              sort order: +
                              Map-reduce partition columns: _col0 (type: string)
                              Statistics: Num rows: 1 Data size: 3048 Basic stats: COMPLETE Column stats: COMPLETE
                              value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary), _col6 (type: int), _col7 (type: struct<count:bigint,sum:double,input:int>), _col8 (type: bigint), _col9 (type: binary), _col10 (type: int), _col11 (type: struct<count:bigint,sum:double,input:int>), _col12 (type: bigint), _col13 (type: binary), _col14 (type: int), _col15 (type: struct<count:bigint,sum:double,input:int>), _col16 (type: bigint), _col17 (type: binary), _col18 (type: int), _col19 (type: struct<count:bigint,sum:double,input:int>), _col20 (type: bigint), _col21 (type: binary), _col22 (type: int), _col23 (type: struct<count:bigint,sum:double,input:int>), _col24 (type: bigint), _col25 (type: binary), _col26 (type: int), _col27 (type: struct<count:bigint,sum:double,input:int>), _col28 (type: bigint), _col29 (type: binary), _col30 (type: int), _col31 (type: struct<count:bigint,sum:double,input:int>), _col32 (type: bigint), _col33 (type: binary), _col34 (type: int), _col35 (type: struct<count:bigint,sum:double,input:int>), _col36 (type: bigint), _col37 (type: binary), _col38 (type: int), _col39 (type: struct<count:bigint,sum:double,input:int>), _col40 (type: bigint), _col41 (type: binary), _col42 (type: int), _col43 (type: struct<count:bigint,sum:double,input:int>), _col44 (type: bigint), _col45 (type: binary), _col46 (type: decimal(5,2)), _col47 (type: decimal(5,2)), _col48 (type: bigint), _col49 (type: binary)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), VALUE._col2 (type: string), VALUE._col3 (type: string), VALUE._col4 (type: string), VALUE._col5 (type: string), VALUE._col6 (type: string), VALUE._col7 (type: string), KEY._col8 (type: string), VALUE._col9 (type: string), VALUE._col10 (type: string), VALUE._col11 (type: decimal(5,2)), KEY._col12 (type: string), KEY._bucket_number (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _bucket_number
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_BUCKET_SORTED
                  Statistics: Num rows: 1 Data size: 112 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.dynpart_sort_opt_bucketing_test
                  Write Type: INSERT
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12), max(VALUE._col13), avg(VALUE._col14), count(VALUE._col15), compute_bit_vector_hll(VALUE._col16), max(VALUE._col17), avg(VALUE._col18), count(VALUE._col19), compute_bit_vector_hll(VALUE._col20), max(VALUE._col21), avg(VALUE._col22), count(VALUE._col23), compute_bit_vector_hll(VALUE._col24), max(VALUE._col25), avg(VALUE._col26), count(VALUE._col27), compute_bit_vector_hll(VALUE._col28), max(VALUE._col29), avg(VALUE._col30), count(VALUE._col31), compute_bit_vector_hll(VALUE._col32), max(VALUE._col33), avg(VALUE._col34), count(VALUE._col35), compute_bit_vector_hll(VALUE._col36), max(VALUE._col37), avg(VALUE._col38), count(VALUE._col39), compute_bit_vector_hll(VALUE._col40), max(VALUE._col41), avg(VALUE._col42), count(VALUE._col43), compute_bit_vector_hll(VALUE._col44), min(VALUE._col45), max(VALUE._col46), count(VALUE._col47), compute_bit_vector_hll(VALUE._col48)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col30, _col31, _col32, _col33, _col34, _col35, _col36, _col37, _col38, _col39, _col40, _col41, _col42, _col43, _col44, _col45, _col46, _col47, _col48, _col49
                Statistics: Num rows: 1 Data size: 2368 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col1) (type: bigint), UDFToLong(_col2) (type: bigint), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col6,0)) (type: bigint), COALESCE(_col7,0) (type: double), (_col3 - _col8) (type: bigint), COALESCE(ndv_compute_bit_vector(_col9),0) (type: bigint), _col9 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col10,0)) (type: bigint), COALESCE(_col11,0) (type: double), (_col3 - _col12) (type: bigint), COALESCE(ndv_compute_bit_vector(_col13),0) (type: bigint), _col13 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col14,0)) (type: bigint), COALESCE(_col15,0) (type: double), (_col3 - _col16) (type: bigint), COALESCE(ndv_compute_bit_vector(_col17),0) (type: bigint), _col17 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col18,0)) (type: bigint), COALESCE(_col19,0) (type: double), (_col3 - _col20) (type: bigint), COALESCE(ndv_compute_bit_vector(_col21),0) (type: bigint), _col21 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col22,0)) (type: bigint), COALESCE(_col23,0) (type: double), (_col3 - _col24) (type: bigint), COALESCE(ndv_compute_bit_vector(_col25),0) (type: bigint), _col25 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col26,0)) (type: bigint), COALESCE(_col27,0) (type: double), (_col3 - _col28) (type: bigint), COALESCE(ndv_compute_bit_vector(_col29),0) (type: bigint), _col29 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col30,0)) (type: bigint), COALESCE(_col31,0) (type: double), (_col3 - _col32) (type: bigint), COALESCE(ndv_compute_bit_vector(_col33),0) (type: bigint), _col33 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col34,0)) (type: bigint), COALESCE(_col35,0) (type: double), (_col3 - _col36) (type: bigint), COALESCE(ndv_compute_bit_vector(_col37),0) (type: bigint), _col37 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col38,0)) (type: bigint), COALESCE(_col39,0) (type: double), (_col3 - _col40) (type: bigint), COALESCE(ndv_compute_bit_vector(_col41),0) (type: bigint), _col41 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col42,0)) (type: bigint), COALESCE(_col43,0) (type: double), (_col3 - _col44) (type: bigint), COALESCE(ndv_compute_bit_vector(_col45),0) (type: bigint), _col45 (type: binary), 'DECIMAL' (type: string), _col46 (type: decimal(5,2)), _col47 (type: decimal(5,2)), (_col3 - _col48) (type: bigint), COALESCE(ndv_compute_bit_vector(_col49),0) (type: bigint), _col49 (type: binary), _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col30, _col31, _col32, _col33, _col34, _col35, _col36, _col37, _col38, _col39, _col40, _col41, _col42, _col43, _col44, _col45, _col46, _col47, _col48, _col49, _col50, _col51, _col52, _col53, _col54, _col55, _col56, _col57, _col58, _col59, _col60, _col61, _col62, _col63, _col64, _col65, _col66, _col67, _col68, _col69, _col70, _col71, _col72
                  Statistics: Num rows: 1 Data size: 3583 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 3583 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ca_location_type 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.dynpart_sort_opt_bucketing_test
          Write Type: INSERT

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: ca_address_sk, ca_address_id, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset
          Column Types: int, string, string, string, string, string, string, string, string, string, string, decimal(5,2)
          Table: default.dynpart_sort_opt_bucketing_test

PREHOOK: query: INSERT INTO TABLE dynpart_sort_opt_bucketing_test PARTITION (ca_location_type) VALUES (5555, 'AAAAAAAADLFBAAAA', '126',
                   'Highland Park', 'Court', 'Suite E', 'San Jose', 'King George County', 'VA', '28003', 'United States',
                   '-5', 'single family')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@dynpart_sort_opt_bucketing_test
POSTHOOK: query: INSERT INTO TABLE dynpart_sort_opt_bucketing_test PARTITION (ca_location_type) VALUES (5555, 'AAAAAAAADLFBAAAA', '126',
                   'Highland Park', 'Court', 'Suite E', 'San Jose', 'King George County', 'VA', '28003', 'United States',
                   '-5', 'single family')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@dynpart_sort_opt_bucketing_test
POSTHOOK: Output: default@dynpart_sort_opt_bucketing_test@ca_location_type=single family
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_address_id SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_address_sk SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_city SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_country SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_county SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_gmt_offset SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_state SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_street_name SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_street_number SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_street_type SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_suite_number SCRIPT []
POSTHOOK: Lineage: dynpart_sort_opt_bucketing_test PARTITION(ca_location_type=single family).ca_zip SCRIPT []
PREHOOK: query: select * from dynpart_sort_opt_bucketing_test
PREHOOK: type: QUERY
PREHOOK: Input: default@dynpart_sort_opt_bucketing_test
PREHOOK: Input: default@dynpart_sort_opt_bucketing_test@ca_location_type=single family
#### A masked pattern was here ####
POSTHOOK: query: select * from dynpart_sort_opt_bucketing_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dynpart_sort_opt_bucketing_test
POSTHOOK: Input: default@dynpart_sort_opt_bucketing_test@ca_location_type=single family
#### A masked pattern was here ####
5555	AAAAAAAADLFBAAAA	126	Highland Park	Court	Suite E	San Jose	King George County	VA	28003	United States	-5.00	single family
5555	AAAAAAAADLFBAAAA	126	Highland Park	Court	Suite E	San Jose	King George County	VA	28003	United States	-5.00	single family
PREHOOK: query: DROP TABLE dynpart_sort_opt_bucketing_test
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@dynpart_sort_opt_bucketing_test
PREHOOK: Output: default@dynpart_sort_opt_bucketing_test
POSTHOOK: query: DROP TABLE dynpart_sort_opt_bucketing_test
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@dynpart_sort_opt_bucketing_test
POSTHOOK: Output: default@dynpart_sort_opt_bucketing_test
PREHOOK: query: drop table if exists t1_staging
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t1_staging
PREHOOK: Output: default@t1_staging
POSTHOOK: query: drop table if exists t1_staging
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t1_staging
POSTHOOK: Output: default@t1_staging
PREHOOK: query: create table t1_staging(
                           a string,
                           b int,
                           c int,
                           d string)
    partitioned by (e  decimal(18,0))
    clustered by(a)
        into 256 buckets STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_staging
POSTHOOK: query: create table t1_staging(
                           a string,
                           b int,
                           c int,
                           d string)
    partitioned by (e  decimal(18,0))
    clustered by(a)
        into 256 buckets STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_staging
PREHOOK: query: load data local inpath '../../data/files/sortdp/000000_0' overwrite into table t1_staging partition (e=100)
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_staging
POSTHOOK: query: load data local inpath '../../data/files/sortdp/000000_0' overwrite into table t1_staging partition (e=100)
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_staging
POSTHOOK: Output: default@t1_staging@e=100
PREHOOK: query: drop table t1_n147
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t1_n147
PREHOOK: Output: default@t1_n147
POSTHOOK: query: drop table t1_n147
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t1_n147
POSTHOOK: Output: default@t1_n147
PREHOOK: query: create table t1_n147(
                        a string,
                        b decimal(6,0),
                        c int,
                        d string)
    partitioned by (e decimal(3,0))
    clustered by(a,b)
        into 10 buckets STORED AS ORC TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_n147
POSTHOOK: query: create table t1_n147(
                        a string,
                        b decimal(6,0),
                        c int,
                        d string)
    partitioned by (e decimal(3,0))
    clustered by(a,b)
        into 10 buckets STORED AS ORC TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_n147
PREHOOK: query: explain insert overwrite table t1_n147 partition(e) select a,b,c,d,e  from t1_staging
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_staging
PREHOOK: Input: default@t1_staging@e=100
PREHOOK: Output: default@t1_n147
POSTHOOK: query: explain insert overwrite table t1_n147 partition(e) select a,b,c,d,e  from t1_staging
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_staging
POSTHOOK: Input: default@t1_staging@e=100
POSTHOOK: Output: default@t1_n147
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_staging
                  Statistics: Num rows: 51 Data size: 23008 Basic stats: PARTIAL Column stats: PARTIAL
                  Select Operator
                    expressions: a (type: string), CAST( b AS decimal(6,0)) (type: decimal(6,0)), c (type: int), d (type: string), CAST( e AS decimal(3,0)) (type: decimal(3,0))
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4
                    Statistics: Num rows: 51 Data size: 23008 Basic stats: PARTIAL Column stats: PARTIAL
                    Reduce Output Operator
                      key expressions: _col4 (type: decimal(3,0)), _bucket_number (type: string), _col0 (type: string), _col1 (type: decimal(6,0))
                      null sort order: aaaa
                      sort order: ++++
                      Map-reduce partition columns: _col4 (type: decimal(3,0))
                      Statistics: Num rows: 51 Data size: 23008 Basic stats: PARTIAL Column stats: PARTIAL
                      value expressions: _col2 (type: int), _col3 (type: string)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY._col0 (type: string), KEY._col1 (type: decimal(6,0)), VALUE._col2 (type: int), VALUE._col3 (type: string), KEY._col4 (type: decimal(3,0)), KEY._bucket_number (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _bucket_number
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_BUCKET_SORTED
                  Statistics: Num rows: 51 Data size: 23008 Basic stats: PARTIAL Column stats: PARTIAL
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.t1_n147
                  Write Type: INSERT

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            e 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.t1_n147
          Write Type: INSERT

PREHOOK: query: insert overwrite table t1_n147 partition(e) select a,b,c,d,e  from t1_staging
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_staging
PREHOOK: Input: default@t1_staging@e=100
PREHOOK: Output: default@t1_n147
POSTHOOK: query: insert overwrite table t1_n147 partition(e) select a,b,c,d,e  from t1_staging
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_staging
POSTHOOK: Input: default@t1_staging@e=100
POSTHOOK: Output: default@t1_n147
POSTHOOK: Output: default@t1_n147@e=100
POSTHOOK: Lineage: t1_n147 PARTITION(e=100).a SIMPLE [(t1_staging)t1_staging.FieldSchema(name:a, type:string, comment:null), ]
POSTHOOK: Lineage: t1_n147 PARTITION(e=100).b EXPRESSION [(t1_staging)t1_staging.FieldSchema(name:b, type:int, comment:null), ]
POSTHOOK: Lineage: t1_n147 PARTITION(e=100).c SIMPLE [(t1_staging)t1_staging.FieldSchema(name:c, type:int, comment:null), ]
POSTHOOK: Lineage: t1_n147 PARTITION(e=100).d SIMPLE [(t1_staging)t1_staging.FieldSchema(name:d, type:string, comment:null), ]
Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: with q1 as (select count(*) as cnt from t1_staging),
    q2 as (select count(*) as cnt from t1_n147)
select q1.cnt = q2.cnt from q1 join q2
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n147
PREHOOK: Input: default@t1_n147@e=100
PREHOOK: Input: default@t1_staging
PREHOOK: Input: default@t1_staging@e=100
#### A masked pattern was here ####
POSTHOOK: query: with q1 as (select count(*) as cnt from t1_staging),
    q2 as (select count(*) as cnt from t1_n147)
select q1.cnt = q2.cnt from q1 join q2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n147
POSTHOOK: Input: default@t1_n147@e=100
POSTHOOK: Input: default@t1_staging
POSTHOOK: Input: default@t1_staging@e=100
#### A masked pattern was here ####
true
PREHOOK: query: drop table t1_staging
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t1_staging
PREHOOK: Output: default@t1_staging
POSTHOOK: query: drop table t1_staging
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t1_staging
POSTHOOK: Output: default@t1_staging
PREHOOK: query: drop table t1_n147
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t1_n147
PREHOOK: Output: default@t1_n147
POSTHOOK: query: drop table t1_n147
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t1_n147
POSTHOOK: Output: default@t1_n147
