PREHOOK: query: CREATE TABLE date_udf_flight_n0 (
  origin_city_name STRING,
  dest_city_name STRING,
  fl_date DATE,
  arr_delay FLOAT,
  fl_num INT
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@date_udf_flight_n0
POSTHOOK: query: CREATE TABLE date_udf_flight_n0 (
  origin_city_name STRING,
  dest_city_name STRING,
  fl_date DATE,
  arr_delay FLOAT,
  fl_num INT
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@date_udf_flight_n0
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/flights_tiny.txt.1' OVERWRITE INTO TABLE date_udf_flight_n0
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@date_udf_flight_n0
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/flights_tiny.txt.1' OVERWRITE INTO TABLE date_udf_flight_n0
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@date_udf_flight_n0
PREHOOK: query: CREATE TABLE date_udf_flight_orc (
  fl_date DATE,
  fl_time TIMESTAMP
) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@date_udf_flight_orc
POSTHOOK: query: CREATE TABLE date_udf_flight_orc (
  fl_date DATE,
  fl_time TIMESTAMP
) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@date_udf_flight_orc
PREHOOK: query: INSERT INTO TABLE date_udf_flight_orc SELECT fl_date, to_utc_timestamp(fl_date, 'America/Los_Angeles') FROM date_udf_flight_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_n0
PREHOOK: Output: default@date_udf_flight_orc
POSTHOOK: query: INSERT INTO TABLE date_udf_flight_orc SELECT fl_date, to_utc_timestamp(fl_date, 'America/Los_Angeles') FROM date_udf_flight_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_n0
POSTHOOK: Output: default@date_udf_flight_orc
POSTHOOK: Lineage: date_udf_flight_orc.fl_date SIMPLE [(date_udf_flight_n0)date_udf_flight_n0.FieldSchema(name:fl_date, type:date, comment:null), ]
POSTHOOK: Lineage: date_udf_flight_orc.fl_time EXPRESSION [(date_udf_flight_n0)date_udf_flight_n0.FieldSchema(name:fl_date, type:date, comment:null), ]
fl_date	_c1
PREHOOK: query: SELECT * FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
date_udf_flight_orc.fl_date	date_udf_flight_orc.fl_time
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_time,
  to_unix_timestamp(fl_time),
  year(fl_time),
  month(fl_time),
  day(fl_time),
  dayofmonth(fl_time),
  dayofweek(fl_time),
  weekofyear(fl_time),
  date(fl_time),
  to_date(fl_time),
  date_add(fl_time, 2),
  date_sub(fl_time, 2),
  datediff(fl_time, "2000-01-01"),
  datediff(fl_time, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14"),
  datediff(fl_time, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_time,
  to_unix_timestamp(fl_time),
  year(fl_time),
  month(fl_time),
  day(fl_time),
  dayofmonth(fl_time),
  dayofweek(fl_time),
  weekofyear(fl_time),
  date(fl_time),
  to_date(fl_time),
  date_add(fl_time, 2),
  date_sub(fl_time, 2),
  datediff(fl_time, "2000-01-01"),
  datediff(fl_time, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14"),
  datediff(fl_time, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: date_udf_flight_orc
                  Statistics: Num rows: 137 Data size: 5480 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                  Select Operator
                    expressions: fl_time (type: timestamp), to_unix_timestamp(fl_time) (type: bigint), year(fl_time) (type: int), month(fl_time) (type: int), day(fl_time) (type: int), day(fl_time) (type: int), dayofweek(fl_time) (type: int), weekofyear(fl_time) (type: int), CAST( fl_time AS DATE) (type: date), to_date(fl_time) (type: date), date_add(fl_time, 2) (type: date), date_sub(fl_time, 2) (type: date), datediff(fl_time, '2000-01-01') (type: int), datediff(fl_time, DATE'2000-01-01') (type: int), datediff(fl_time, TIMESTAMP'2000-01-01 00:00:00') (type: int), datediff(fl_time, TIMESTAMP'2000-01-01 11:13:09') (type: int), datediff(fl_time, '2007-03-14') (type: int), datediff(fl_time, DATE'2007-03-14') (type: int), datediff(fl_time, TIMESTAMP'2007-03-14 00:00:00') (type: int), datediff(fl_time, TIMESTAMP'2007-03-14 08:21:59') (type: int)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                        selectExpressions: VectorUDFUnixTimeStampTimestamp(col 1:timestamp) -> 4:bigint, VectorUDFYearTimestamp(col 1:timestamp, field YEAR) -> 5:int, VectorUDFMonthTimestamp(col 1:timestamp, field MONTH) -> 6:int, VectorUDFDayOfMonthTimestamp(col 1:timestamp, field DAY_OF_MONTH) -> 7:int, VectorUDFDayOfMonthTimestamp(col 1:timestamp, field DAY_OF_MONTH) -> 8:int, VectorUDFDayOfWeekTimestamp(col 1:timestamp, field DAY_OF_WEEK) -> 9:int, VectorUDFWeekOfYearTimestamp(col 1:timestamp, field WEEK_OF_YEAR) -> 10:int, CastTimestampToDate(col 1:timestamp) -> 11:date, VectorUDFDateTimestamp(col 1:timestamp) -> 12:date, VectorUDFDateAddColScalar(col 1:timestamp, val 2) -> 13:date, VectorUDFDateSubColScalar(col 1:timestamp, val 2) -> 14:date, VectorUDFDateDiffColScalar(col 1:timestamp, val 2000-01-01) -> 15:int, VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 16:int, VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 17:int, VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 18:int, VectorUDFDateDiffColScalar(col 1:timestamp, val 2007-03-14) -> 19:int, VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 20:int, VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 21:int, VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 22:int
                    Statistics: Num rows: 137 Data size: 44936 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 137 Data size: 44936 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  fl_time,
  to_unix_timestamp(fl_time),
  year(fl_time),
  month(fl_time),
  day(fl_time),
  dayofmonth(fl_time),
  dayofweek(fl_time),
  weekofyear(fl_time),
  date(fl_time),
  to_date(fl_time),
  date_add(fl_time, 2),
  date_sub(fl_time, 2),
  datediff(fl_time, "2000-01-01"),
  datediff(fl_time, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14"),
  datediff(fl_time, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  fl_time,
  to_unix_timestamp(fl_time),
  year(fl_time),
  month(fl_time),
  day(fl_time),
  dayofmonth(fl_time),
  dayofweek(fl_time),
  weekofyear(fl_time),
  date(fl_time),
  to_date(fl_time),
  date_add(fl_time, 2),
  date_sub(fl_time, 2),
  datediff(fl_time, "2000-01-01"),
  datediff(fl_time, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14"),
  datediff(fl_time, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
fl_time	_c1	_c2	_c3	_c4	_c5	_c6	_c7	_c8	_c9	_c10	_c11	_c12	_c13	_c14	_c15	_c16	_c17	_c18	_c19
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_date,
  to_unix_timestamp(fl_date),
  year(fl_date),
  month(fl_date),
  day(fl_date),
  dayofmonth(fl_date),
  dayofweek(fl_date),
  weekofyear(fl_date),
  date(fl_date),
  to_date(fl_date),
  date_add(fl_date, 2),
  date_sub(fl_date, 2),
  datediff(fl_date, "2000-01-01"),
  datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_date, "2007-03-14"),
  datediff(fl_date, date "2007-03-14"),
  datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_date, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_date,
  to_unix_timestamp(fl_date),
  year(fl_date),
  month(fl_date),
  day(fl_date),
  dayofmonth(fl_date),
  dayofweek(fl_date),
  weekofyear(fl_date),
  date(fl_date),
  to_date(fl_date),
  date_add(fl_date, 2),
  date_sub(fl_date, 2),
  datediff(fl_date, "2000-01-01"),
  datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_date, "2007-03-14"),
  datediff(fl_date, date "2007-03-14"),
  datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_date, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: date_udf_flight_orc
                  Statistics: Num rows: 137 Data size: 7672 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                  Select Operator
                    expressions: fl_date (type: date), to_unix_timestamp(fl_date) (type: bigint), year(fl_date) (type: int), month(fl_date) (type: int), day(fl_date) (type: int), day(fl_date) (type: int), dayofweek(fl_date) (type: int), weekofyear(fl_date) (type: int), fl_date (type: date), to_date(fl_date) (type: date), date_add(fl_date, 2) (type: date), date_sub(fl_date, 2) (type: date), datediff(fl_date, '2000-01-01') (type: int), datediff(fl_date, DATE'2000-01-01') (type: int), datediff(fl_date, TIMESTAMP'2000-01-01 00:00:00') (type: int), datediff(fl_date, TIMESTAMP'2000-01-01 11:13:09') (type: int), datediff(fl_date, '2007-03-14') (type: int), datediff(fl_date, DATE'2007-03-14') (type: int), datediff(fl_date, TIMESTAMP'2007-03-14 00:00:00') (type: int), datediff(fl_date, TIMESTAMP'2007-03-14 08:21:59') (type: int)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
                        selectExpressions: VectorUDFUnixTimeStampDate(col 0) -> 4:bigint, VectorUDFYearDate(col 0, field YEAR) -> 5:int, VectorUDFMonthDate(col 0, field MONTH) -> 6:int, VectorUDFDayOfMonthDate(col 0, field DAY_OF_MONTH) -> 7:int, VectorUDFDayOfMonthDate(col 0, field DAY_OF_MONTH) -> 8:int, VectorUDFDayOfWeekDate(col 0, field DAY_OF_WEEK) -> 9:int, VectorUDFWeekOfYearDate(col 0, field WEEK_OF_YEAR) -> 10:int, VectorUDFDateAddColScalar(col 0:date, val 2) -> 11:date, VectorUDFDateSubColScalar(col 0:date, val 2) -> 12:date, VectorUDFDateDiffColScalar(col 0:date, val 2000-01-01) -> 13:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 14:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 15:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 16:int, VectorUDFDateDiffColScalar(col 0:date, val 2007-03-14) -> 17:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 18:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 19:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 20:int
                    Statistics: Num rows: 137 Data size: 47128 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 137 Data size: 47128 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  fl_date,
  to_unix_timestamp(fl_date),
  year(fl_date),
  month(fl_date),
  day(fl_date),
  dayofmonth(fl_date),
  dayofweek(fl_date),
  weekofyear(fl_date),
  date(fl_date),
  to_date(fl_date),
  date_add(fl_date, 2),
  date_sub(fl_date, 2),
  datediff(fl_date, "2000-01-01"),
  datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_date, "2007-03-14"),
  datediff(fl_date, date "2007-03-14"),
  datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_date, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  fl_date,
  to_unix_timestamp(fl_date),
  year(fl_date),
  month(fl_date),
  day(fl_date),
  dayofmonth(fl_date),
  dayofweek(fl_date),
  weekofyear(fl_date),
  date(fl_date),
  to_date(fl_date),
  date_add(fl_date, 2),
  date_sub(fl_date, 2),
  datediff(fl_date, "2000-01-01"),
  datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_date, "2007-03-14"),
  datediff(fl_date, date "2007-03-14"),
  datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_date, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
fl_date	_c1	_c2	_c3	_c4	_c5	_c6	_c7	_c8	_c9	_c10	_c11	_c12	_c13	_c14	_c15	_c16	_c17	_c18	_c19
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_time,
  fl_date,
  year(fl_time) = year(fl_date),
  month(fl_time) = month(fl_date),
  day(fl_time) = day(fl_date),
  dayofmonth(fl_time) = dayofmonth(fl_date),
  dayofweek(fl_time) = dayofweek(fl_date),
  weekofyear(fl_time) = weekofyear(fl_date),
  date(fl_time) = date(fl_date),
  to_date(fl_time) = to_date(fl_date),
  date_add(fl_time, 2) = date_add(fl_date, 2),
  date_sub(fl_time, 2) = date_sub(fl_date, 2),
  datediff(fl_time, "2000-01-01") = datediff(fl_date, "2000-01-01"),
  datediff(fl_time, date "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00") = datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09") = datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14") = datediff(fl_date, "2007-03-14"),
  datediff(fl_time, date "2007-03-14") = datediff(fl_date, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00") = datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59") = datediff(fl_date, timestamp "2007-03-14 08:21:59"),
  datediff(fl_date, "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, "2007-03-14") = datediff(fl_date, date "2007-03-14")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_time,
  fl_date,
  year(fl_time) = year(fl_date),
  month(fl_time) = month(fl_date),
  day(fl_time) = day(fl_date),
  dayofmonth(fl_time) = dayofmonth(fl_date),
  dayofweek(fl_time) = dayofweek(fl_date),
  weekofyear(fl_time) = weekofyear(fl_date),
  date(fl_time) = date(fl_date),
  to_date(fl_time) = to_date(fl_date),
  date_add(fl_time, 2) = date_add(fl_date, 2),
  date_sub(fl_time, 2) = date_sub(fl_date, 2),
  datediff(fl_time, "2000-01-01") = datediff(fl_date, "2000-01-01"),
  datediff(fl_time, date "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00") = datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09") = datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14") = datediff(fl_date, "2007-03-14"),
  datediff(fl_time, date "2007-03-14") = datediff(fl_date, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00") = datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59") = datediff(fl_date, timestamp "2007-03-14 08:21:59"),
  datediff(fl_date, "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, "2007-03-14") = datediff(fl_date, date "2007-03-14")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: date_udf_flight_orc
                  Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                  Select Operator
                    expressions: fl_time (type: timestamp), fl_date (type: date), (year(fl_time) = year(fl_date)) (type: boolean), (month(fl_time) = month(fl_date)) (type: boolean), (day(fl_time) = day(fl_date)) (type: boolean), (day(fl_time) = day(fl_date)) (type: boolean), (dayofweek(fl_time) = dayofweek(fl_date)) (type: boolean), (weekofyear(fl_time) = weekofyear(fl_date)) (type: boolean), (CAST( fl_time AS DATE) = fl_date) (type: boolean), (to_date(fl_time) = to_date(fl_date)) (type: boolean), (date_add(fl_time, 2) = date_add(fl_date, 2)) (type: boolean), (date_sub(fl_time, 2) = date_sub(fl_date, 2)) (type: boolean), (datediff(fl_time, '2000-01-01') = datediff(fl_date, '2000-01-01')) (type: boolean), (datediff(fl_time, DATE'2000-01-01') = datediff(fl_date, DATE'2000-01-01')) (type: boolean), (datediff(fl_time, TIMESTAMP'2000-01-01 00:00:00') = datediff(fl_date, TIMESTAMP'2000-01-01 00:00:00')) (type: boolean), (datediff(fl_time, TIMESTAMP'2000-01-01 11:13:09') = datediff(fl_date, TIMESTAMP'2000-01-01 11:13:09')) (type: boolean), (datediff(fl_time, '2007-03-14') = datediff(fl_date, '2007-03-14')) (type: boolean), (datediff(fl_time, DATE'2007-03-14') = datediff(fl_date, DATE'2007-03-14')) (type: boolean), (datediff(fl_time, TIMESTAMP'2007-03-14 00:00:00') = datediff(fl_date, TIMESTAMP'2007-03-14 00:00:00')) (type: boolean), (datediff(fl_time, TIMESTAMP'2007-03-14 08:21:59') = datediff(fl_date, TIMESTAMP'2007-03-14 08:21:59')) (type: boolean), (datediff(fl_date, '2000-01-01') = datediff(fl_date, DATE'2000-01-01')) (type: boolean), (datediff(fl_date, '2007-03-14') = datediff(fl_date, DATE'2007-03-14')) (type: boolean)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [1, 0, 6, 9, 12, 15, 18, 21, 23, 25, 28, 31, 34, 37, 40, 43, 46, 49, 52, 55, 58, 61]
                        selectExpressions: LongColEqualLongColumn(col 4:int, col 5:int)(children: VectorUDFYearTimestamp(col 1:timestamp, field YEAR) -> 4:int, VectorUDFYearDate(col 0, field YEAR) -> 5:int) -> 6:boolean, LongColEqualLongColumn(col 7:int, col 8:int)(children: VectorUDFMonthTimestamp(col 1:timestamp, field MONTH) -> 7:int, VectorUDFMonthDate(col 0, field MONTH) -> 8:int) -> 9:boolean, LongColEqualLongColumn(col 10:int, col 11:int)(children: VectorUDFDayOfMonthTimestamp(col 1:timestamp, field DAY_OF_MONTH) -> 10:int, VectorUDFDayOfMonthDate(col 0, field DAY_OF_MONTH) -> 11:int) -> 12:boolean, LongColEqualLongColumn(col 13:int, col 14:int)(children: VectorUDFDayOfMonthTimestamp(col 1:timestamp, field DAY_OF_MONTH) -> 13:int, VectorUDFDayOfMonthDate(col 0, field DAY_OF_MONTH) -> 14:int) -> 15:boolean, LongColEqualLongColumn(col 16:int, col 17:int)(children: VectorUDFDayOfWeekTimestamp(col 1:timestamp, field DAY_OF_WEEK) -> 16:int, VectorUDFDayOfWeekDate(col 0, field DAY_OF_WEEK) -> 17:int) -> 18:boolean, LongColEqualLongColumn(col 19:int, col 20:int)(children: VectorUDFWeekOfYearTimestamp(col 1:timestamp, field WEEK_OF_YEAR) -> 19:int, VectorUDFWeekOfYearDate(col 0, field WEEK_OF_YEAR) -> 20:int) -> 21:boolean, LongColEqualLongColumn(col 22:date, col 0:date)(children: CastTimestampToDate(col 1:timestamp) -> 22:date) -> 23:boolean, LongColEqualLongColumn(col 24:date, col 0:date)(children: VectorUDFDateTimestamp(col 1:timestamp) -> 24:date, col 0:date) -> 25:boolean, LongColEqualLongColumn(col 26:date, col 27:date)(children: VectorUDFDateAddColScalar(col 1:timestamp, val 2) -> 26:date, VectorUDFDateAddColScalar(col 0:date, val 2) -> 27:date) -> 28:boolean, LongColEqualLongColumn(col 29:date, col 30:date)(children: VectorUDFDateSubColScalar(col 1:timestamp, val 2) -> 29:date, VectorUDFDateSubColScalar(col 0:date, val 2) -> 30:date) -> 31:boolean, LongColEqualLongColumn(col 32:int, col 33:int)(children: VectorUDFDateDiffColScalar(col 1:timestamp, val 2000-01-01) -> 32:int, VectorUDFDateDiffColScalar(col 0:date, val 2000-01-01) -> 33:int) -> 34:boolean, LongColEqualLongColumn(col 35:int, col 36:int)(children: VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 35:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 36:int) -> 37:boolean, LongColEqualLongColumn(col 38:int, col 39:int)(children: VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 38:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 39:int) -> 40:boolean, LongColEqualLongColumn(col 41:int, col 42:int)(children: VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 41:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 42:int) -> 43:boolean, LongColEqualLongColumn(col 44:int, col 45:int)(children: VectorUDFDateDiffColScalar(col 1:timestamp, val 2007-03-14) -> 44:int, VectorUDFDateDiffColScalar(col 0:date, val 2007-03-14) -> 45:int) -> 46:boolean, LongColEqualLongColumn(col 47:int, col 48:int)(children: VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 47:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 48:int) -> 49:boolean, LongColEqualLongColumn(col 50:int, col 51:int)(children: VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 50:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 51:int) -> 52:boolean, LongColEqualLongColumn(col 53:int, col 54:int)(children: VectorUDFDateDiffColScalar(col 1:timestamp, val NULL) -> 53:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 54:int) -> 55:boolean, LongColEqualLongColumn(col 56:int, col 57:int)(children: VectorUDFDateDiffColScalar(col 0:date, val 2000-01-01) -> 56:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 57:int) -> 58:boolean, LongColEqualLongColumn(col 59:int, col 60:int)(children: VectorUDFDateDiffColScalar(col 0:date, val 2007-03-14) -> 59:int, VectorUDFDateDiffColScalar(col 0:date, val NULL) -> 60:int) -> 61:boolean
                    Statistics: Num rows: 137 Data size: 24112 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false
                      Statistics: Num rows: 137 Data size: 24112 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  fl_time,
  fl_date,
  year(fl_time) = year(fl_date),
  month(fl_time) = month(fl_date),
  day(fl_time) = day(fl_date),
  dayofmonth(fl_time) = dayofmonth(fl_date),
  dayofweek(fl_time) = dayofweek(fl_date),
  weekofyear(fl_time) = weekofyear(fl_date),
  date(fl_time) = date(fl_date),
  to_date(fl_time) = to_date(fl_date),
  date_add(fl_time, 2) = date_add(fl_date, 2),
  date_sub(fl_time, 2) = date_sub(fl_date, 2),
  datediff(fl_time, "2000-01-01") = datediff(fl_date, "2000-01-01"),
  datediff(fl_time, date "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00") = datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09") = datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14") = datediff(fl_date, "2007-03-14"),
  datediff(fl_time, date "2007-03-14") = datediff(fl_date, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00") = datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59") = datediff(fl_date, timestamp "2007-03-14 08:21:59"),
  datediff(fl_date, "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, "2007-03-14") = datediff(fl_date, date "2007-03-14")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  fl_time,
  fl_date,
  year(fl_time) = year(fl_date),
  month(fl_time) = month(fl_date),
  day(fl_time) = day(fl_date),
  dayofmonth(fl_time) = dayofmonth(fl_date),
  dayofweek(fl_time) = dayofweek(fl_date),
  weekofyear(fl_time) = weekofyear(fl_date),
  date(fl_time) = date(fl_date),
  to_date(fl_time) = to_date(fl_date),
  date_add(fl_time, 2) = date_add(fl_date, 2),
  date_sub(fl_time, 2) = date_sub(fl_date, 2),
  datediff(fl_time, "2000-01-01") = datediff(fl_date, "2000-01-01"),
  datediff(fl_time, date "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00") = datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09") = datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14") = datediff(fl_date, "2007-03-14"),
  datediff(fl_time, date "2007-03-14") = datediff(fl_date, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00") = datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59") = datediff(fl_date, timestamp "2007-03-14 08:21:59"),
  datediff(fl_date, "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, "2007-03-14") = datediff(fl_date, date "2007-03-14")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
fl_time	fl_date	_c2	_c3	_c4	_c5	_c6	_c7	_c8	_c9	_c10	_c11	_c12	_c13	_c14	_c15	_c16	_c17	_c18	_c19	_c20	_c21
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT 
  fl_date, 
  to_date(date_add(fl_date, 2)), 
  to_date(date_sub(fl_date, 2)),
  datediff(fl_date, date_add(fl_date, 2)), 
  datediff(fl_date, date_sub(fl_date, 2)),
  datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) 
FROM date_udf_flight_orc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT 
  fl_date, 
  to_date(date_add(fl_date, 2)), 
  to_date(date_sub(fl_date, 2)),
  datediff(fl_date, date_add(fl_date, 2)), 
  datediff(fl_date, date_sub(fl_date, 2)),
  datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) 
FROM date_udf_flight_orc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: date_udf_flight_orc
                  Statistics: Num rows: 137 Data size: 7672 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                  Limit
                    Number of rows: 10
                    Limit Vectorization:
                        className: VectorLimitOperator
                        native: true
                    Statistics: Num rows: 10 Data size: 560 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: fl_date (type: date), to_date(date_add(fl_date, 2)) (type: date), to_date(date_sub(fl_date, 2)) (type: date), datediff(fl_date, date_add(fl_date, 2)) (type: int), datediff(fl_date, date_sub(fl_date, 2)) (type: int), datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) (type: int)
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0, 4, 5, 7, 9, 12]
                          selectExpressions: VectorUDFDateAddColScalar(col 0:date, val 2) -> 4:date, VectorUDFDateSubColScalar(col 0:date, val 2) -> 5:date, VectorUDFDateDiffColCol(col 0:date, col 6:date)(children: VectorUDFDateAddColScalar(col 0:date, val 2) -> 6:date) -> 7:int, VectorUDFDateDiffColCol(col 0:date, col 8:date)(children: VectorUDFDateSubColScalar(col 0:date, val 2) -> 8:date) -> 9:int, VectorUDFDateDiffColCol(col 10:date, col 11:date)(children: VectorUDFDateAddColScalar(col 0:date, val 2) -> 10:date, VectorUDFDateSubColScalar(col 0:date, val 2) -> 11:date) -> 12:int
                      Statistics: Num rows: 10 Data size: 1800 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        File Sink Vectorization:
                            className: VectorFileSinkOperator
                            native: false
                        Statistics: Num rows: 10 Data size: 1800 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

PREHOOK: query: SELECT 
  fl_date, 
  to_date(date_add(fl_date, 2)), 
  to_date(date_sub(fl_date, 2)),
  datediff(fl_date, date_add(fl_date, 2)), 
  datediff(fl_date, date_sub(fl_date, 2)),
  datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) 
FROM date_udf_flight_orc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT 
  fl_date, 
  to_date(date_add(fl_date, 2)), 
  to_date(date_sub(fl_date, 2)),
  datediff(fl_date, date_add(fl_date, 2)), 
  datediff(fl_date, date_sub(fl_date, 2)),
  datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) 
FROM date_udf_flight_orc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
fl_date	_c1	_c2	_c3	_c4	_c5
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-21	2010-10-23	2010-10-19	-2	2	4
2010-10-21	2010-10-23	2010-10-19	-2	2	4
PREHOOK: query: SELECT to_date('2009-07-30 04:17:52') FROM date_udf_flight_orc LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT to_date('2009-07-30 04:17:52') FROM date_udf_flight_orc LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
_c0
2009-07-30
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  min(fl_date) AS c1,
  max(fl_date),
  count(fl_date),
  count(*)
FROM date_udf_flight_orc
ORDER BY c1
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  min(fl_date) AS c1,
  max(fl_date),
  count(fl_date),
  count(*)
FROM date_udf_flight_orc
ORDER BY c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  min(fl_date) AS c1,
  max(fl_date),
  count(fl_date),
  count(*)
FROM date_udf_flight_orc
ORDER BY c1
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  min(fl_date) AS c1,
  max(fl_date),
  count(fl_date),
  count(*)
FROM date_udf_flight_orc
ORDER BY c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
c1	_c1	_c2	_c3
2010-10-20	2010-10-31	137	137
