PREHOOK: query: create table emps (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@emps
POSTHOOK: query: create table emps (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emps
PREHOOK: query: insert into emps values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (120, 10, 'Bill', 10000, 250)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps
POSTHOOK: query: insert into emps values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (120, 10, 'Bill', 10000, 250)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps
POSTHOOK: Lineage: emps.commission SCRIPT []
POSTHOOK: Lineage: emps.deptno SCRIPT []
POSTHOOK: Lineage: emps.empid SCRIPT []
POSTHOOK: Lineage: emps.name SCRIPT []
POSTHOOK: Lineage: emps.salary SCRIPT []
PREHOOK: query: create table depts (
  deptno int,
  name varchar(256),
  locationid int)
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@depts
POSTHOOK: query: create table depts (
  deptno int,
  name varchar(256),
  locationid int)
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@depts
PREHOOK: query: insert into depts values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@depts
POSTHOOK: query: insert into depts values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@depts
POSTHOOK: Lineage: depts.deptno SCRIPT []
POSTHOOK: Lineage: depts.locationid SCRIPT []
POSTHOOK: Lineage: depts.name SCRIPT []
PREHOOK: query: create table dependents (
  empid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dependents
POSTHOOK: query: create table dependents (
  empid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dependents
PREHOOK: query: insert into dependents values (10, 'Michael'), (20, 'Jane')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@dependents
POSTHOOK: query: insert into dependents values (10, 'Michael'), (20, 'Jane')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@dependents
POSTHOOK: Lineage: dependents.empid SCRIPT []
POSTHOOK: Lineage: dependents.name SCRIPT []
PREHOOK: query: create table locations (
  locationid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@locations
POSTHOOK: query: create table locations (
  locationid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@locations
PREHOOK: query: insert into locations values (10, 'San Francisco'), (20, 'San Diego')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@locations
POSTHOOK: query: insert into locations values (10, 'San Francisco'), (20, 'San Diego')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@locations
POSTHOOK: Lineage: locations.locationid SCRIPT []
POSTHOOK: Lineage: locations.name SCRIPT []
PREHOOK: query: alter table emps add constraint pk1 primary key (empid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table emps add constraint pk1 primary key (empid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table depts add constraint pk2 primary key (deptno) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table depts add constraint pk2 primary key (deptno) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table dependents add constraint pk3 primary key (empid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table dependents add constraint pk3 primary key (empid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table locations add constraint pk4 primary key (locationid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table locations add constraint pk4 primary key (locationid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table emps add constraint fk1 foreign key (deptno) references depts(deptno) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table emps add constraint fk1 foreign key (deptno) references depts(deptno) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table depts add constraint fk2 foreign key (locationid) references locations(locationid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table depts add constraint fk2 foreign key (locationid) references locations(locationid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table emps change column deptno deptno int constraint nn1 not null disable novalidate rely
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@emps
PREHOOK: Output: default@emps
POSTHOOK: query: alter table emps change column deptno deptno int constraint nn1 not null disable novalidate rely
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@emps
POSTHOOK: Output: default@emps
PREHOOK: query: alter table depts change column locationid locationid int constraint nn2 not null disable novalidate rely
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@depts
PREHOOK: Output: default@depts
POSTHOOK: query: alter table depts change column locationid locationid int constraint nn2 not null disable novalidate rely
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@depts
POSTHOOK: Output: default@depts
PREHOOK: query: create materialized view mv1 as
select name, deptno, salary, count(*) + 1 as c, sum(empid) as s
from emps where deptno >= 10 group by name, deptno, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 as
select name, deptno, salary, count(*) + 1 as c, sum(empid) as s
from emps where deptno >= 10 group by name, deptno, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: explain
select salary, sum(empid) + 1 as s
from emps where deptno > 10 group by salary
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: explain
select salary, sum(empid) + 1 as s
from emps where deptno > 10 group by salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv1
                  filterExpr: (deptno > 10) (type: boolean)
                  Statistics: Num rows: 4 Data size: 64 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (deptno > 10) (type: boolean)
                    Statistics: Num rows: 4 Data size: 64 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: salary (type: float), s (type: bigint)
                      outputColumnNames: salary, s
                      Statistics: Num rows: 4 Data size: 64 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: sum(s)
                        keys: salary (type: float)
                        minReductionHashAggr: 0.4
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: float)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: float)
                          Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: float)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: float), (_col1 + 1L) (type: bigint)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select salary, sum(empid) + 1 as s
from emps where deptno > 10 group by salary
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select salary, sum(empid) + 1 as s
from emps where deptno > 10 group by salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
8000.0	201
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 as
select name, deptno, salary, count(*) + 1 as c, sum(empid) as s
from emps where deptno >= 15 group by name, deptno, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 as
select name, deptno, salary, count(*) + 1 as c, sum(empid) as s
from emps where deptno >= 15 group by name, deptno, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: explain
select salary + 1, sum(empid) + 1 as s
from emps where deptno > 15 group by salary
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: explain
select salary + 1, sum(empid) + 1 as s
from emps where deptno > 15 group by salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv1
                  filterExpr: (deptno > 15) (type: boolean)
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (deptno > 15) (type: boolean)
                    Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: salary (type: float), s (type: bigint)
                      outputColumnNames: salary, s
                      Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: sum(s)
                        keys: salary (type: float)
                        minReductionHashAggr: 0.4
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: float)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: float)
                          Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: float)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: (_col0 + 1.0) (type: float), (_col1 + 1L) (type: bigint)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select salary + 1, sum(empid) + 1 as s
from emps where deptno > 15 group by salary
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select salary + 1, sum(empid) + 1 as s
from emps where deptno > 15 group by salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
8001.0	201
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 as
select depts.name
from emps
join depts on (emps.deptno = depts.deptno)
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 as
select depts.name
from emps
join depts on (emps.deptno = depts.deptno)
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: explain
select dependents.empid
from emps
join depts on (emps.deptno = depts.deptno)
join dependents on (depts.name = dependents.name)
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: explain
select dependents.empid
from emps
join depts on (emps.deptno = depts.deptno)
join dependents on (depts.name = dependents.name)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv1
                  filterExpr: name is not null (type: boolean)
                  Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: name is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: name (type: varchar(256))
                      outputColumnNames: _col0
                      Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: varchar(256))
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: varchar(256))
                        Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: dependents
                  filterExpr: name is not null (type: boolean)
                  Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: name is not null (type: boolean)
                    Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: empid (type: int), name (type: varchar(256))
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: varchar(256))
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: varchar(256))
                        Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: varchar(256))
                  1 _col1 (type: varchar(256))
                outputColumnNames: _col1
                Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select dependents.empid
from emps
join depts on (emps.deptno = depts.deptno)
join dependents on (depts.name = dependents.name)
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select dependents.empid
from emps
join depts on (emps.deptno = depts.deptno)
join dependents on (depts.name = dependents.name)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 as
select depts.name
from emps
join depts on (emps.deptno = depts.deptno)
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 as
select depts.name
from emps
join depts on (emps.deptno = depts.deptno)
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: explain
select dependents.empid
from depts
join dependents on (depts.name = dependents.name)
join locations on (locations.name = dependents.name)
join emps on (emps.deptno = depts.deptno)
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@locations
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: explain
select dependents.empid
from depts
join dependents on (depts.name = dependents.name)
join locations on (locations.name = dependents.name)
join emps on (emps.deptno = depts.deptno)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@locations
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Map 5 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv1
                  filterExpr: name is not null (type: boolean)
                  Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: name is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: name (type: varchar(256))
                      outputColumnNames: _col0
                      Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: varchar(256))
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: varchar(256))
                        Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: locations
                  filterExpr: name is not null (type: boolean)
                  Statistics: Num rows: 2 Data size: 190 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: name is not null (type: boolean)
                    Statistics: Num rows: 2 Data size: 190 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: name (type: varchar(256))
                      outputColumnNames: _col0
                      Statistics: Num rows: 2 Data size: 190 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: varchar(256))
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: varchar(256))
                        Statistics: Num rows: 2 Data size: 190 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: dependents
                  filterExpr: name is not null (type: boolean)
                  Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: name is not null (type: boolean)
                    Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: empid (type: int), name (type: varchar(256))
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: varchar(256))
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: varchar(256))
                        Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: varchar(256))
                  1 _col0 (type: varchar(256))
                outputColumnNames: _col0
                Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: varchar(256))
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: varchar(256))
                  Statistics: Num rows: 5 Data size: 440 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: varchar(256))
                  1 _col1 (type: varchar(256))
                outputColumnNames: _col2
                Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col2 (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select dependents.empid
from depts
join dependents on (depts.name = dependents.name)
join locations on (locations.name = dependents.name)
join emps on (emps.deptno = depts.deptno)
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@locations
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select dependents.empid
from depts
join dependents on (depts.name = dependents.name)
join locations on (locations.name = dependents.name)
join emps on (emps.deptno = depts.deptno)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@locations
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 as
select emps.empid, emps.deptno, emps.name as name1, emps.salary, emps.commission, dependents.name as name2
from emps join dependents on (emps.empid = dependents.empid)
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@dependents
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 as
select emps.empid, emps.deptno, emps.name as name1, emps.salary, emps.commission, dependents.name as name2
from emps join dependents on (emps.empid = dependents.empid)
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@dependents
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: explain
select emps.empid, dependents.empid, emps.deptno
from emps
join dependents on (emps.empid = dependents.empid)
join depts a on (emps.deptno=a.deptno)
where emps.name = 'Bill'
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: explain
select emps.empid, dependents.empid, emps.deptno
from emps
join dependents on (emps.empid = dependents.empid)
join depts a on (emps.deptno=a.deptno)
where emps.name = 'Bill'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1
          filterExpr: (name1 = 'Bill') (type: boolean)
          Filter Operator
            predicate: (name1 = 'Bill') (type: boolean)
            Select Operator
              expressions: empid (type: int), empid (type: int), deptno (type: int)
              outputColumnNames: _col0, _col1, _col2
              ListSink

PREHOOK: query: select emps.empid, dependents.empid, emps.deptno
from emps
join dependents on (emps.empid = dependents.empid)
join depts a on (emps.deptno=a.deptno)
where emps.name = 'Bill'
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select emps.empid, dependents.empid, emps.deptno
from emps
join dependents on (emps.empid = dependents.empid)
join depts a on (emps.deptno=a.deptno)
where emps.name = 'Bill'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
