PREHOOK: query: create table tx(a int,u int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tx
POSTHOOK: query: create table tx(a int,u int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tx
PREHOOK: query: insert into tx values (1,1),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(10,10)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tx
POSTHOOK: query: insert into tx values (1,1),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(10,10)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tx
POSTHOOK: Lineage: tx.a SCRIPT []
POSTHOOK: Lineage: tx.u SCRIPT []
PREHOOK: query: create table px(a int,p int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@px
POSTHOOK: query: create table px(a int,p int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@px
PREHOOK: query: insert into px values (2,2),(3,3),(5,5),(7,7),(11,11)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@px
POSTHOOK: query: insert into px values (2,2),(3,3),(5,5),(7,7),(11,11)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@px
POSTHOOK: Lineage: px.a SCRIPT []
POSTHOOK: Lineage: px.p SCRIPT []
PREHOOK: query: explain
select sum(u*p) from tx join px on (u=p) where u<10 and p>2
PREHOOK: type: QUERY
POSTHOOK: query: explain
select sum(u*p) from tx join px on (u=p) where u<10 and p>2
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_15]
        Group By Operator [GBY_13] (rows=1 width=8)
          Output:["_col0"],aggregations:["sum(VALUE._col0)"]
        <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_12]
            Group By Operator [GBY_11] (rows=1 width=8)
              Output:["_col0"],aggregations:["sum(_col0)"]
              Select Operator [SEL_9] (rows=1 width=8)
                Output:["_col0"]
                Merge Join Operator [MERGEJOIN_20] (rows=1 width=8)
                  Conds:RS_6._col0=RS_7._col0(Inner),Output:["_col0","_col1"]
                <-Map 1 [SIMPLE_EDGE] llap
                  SHUFFLE [RS_6]
                    PartitionCols:_col0
                    Select Operator [SEL_2] (rows=1 width=4)
                      Output:["_col0"]
                      Filter Operator [FIL_18] (rows=1 width=4)
                        predicate:((u < 10) and (u > 2))
                        TableScan [TS_0] (rows=8 width=4)
                          default@tx,tx,Tbl:COMPLETE,Col:COMPLETE,Output:["u"]
                <-Map 4 [SIMPLE_EDGE] llap
                  SHUFFLE [RS_7]
                    PartitionCols:_col0
                    Select Operator [SEL_5] (rows=1 width=4)
                      Output:["_col0"]
                      Filter Operator [FIL_19] (rows=1 width=4)
                        predicate:((p < 10) and (p > 2))
                        TableScan [TS_3] (rows=5 width=4)
                          default@px,px,Tbl:COMPLETE,Col:COMPLETE,Output:["p"]

PREHOOK: query: select sum(u*p) from tx join px on (u=p) where u<10 and p>2
PREHOOK: type: QUERY
PREHOOK: Input: default@px
PREHOOK: Input: default@tx
#### A masked pattern was here ####
POSTHOOK: query: select sum(u*p) from tx join px on (u=p) where u<10 and p>2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@px
POSTHOOK: Input: default@tx
#### A masked pattern was here ####
83
PREHOOK: query: explain
select sum(u*p) from tx join px on (u=p) where u<10 and p>2
PREHOOK: type: QUERY
POSTHOOK: query: explain
select sum(u*p) from tx join px on (u=p) where u<10 and p>2
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_15]
        Group By Operator [GBY_13] (runtime: rows=1 width=8)
          Output:["_col0"],aggregations:["sum(VALUE._col0)"]
        <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_12]
            Group By Operator [GBY_11] (runtime: rows=1 width=8)
              Output:["_col0"],aggregations:["sum(_col0)"]
              Select Operator [SEL_9] (runtime: rows=3 width=8)
                Output:["_col0"]
                Merge Join Operator [MERGEJOIN_20] (runtime: rows=3 width=8)
                  Conds:RS_6._col0=RS_7._col0(Inner),Output:["_col0","_col1"]
                <-Map 1 [SIMPLE_EDGE] llap
                  SHUFFLE [RS_6]
                    PartitionCols:_col0
                    Select Operator [SEL_2] (runtime: rows=5 width=4)
                      Output:["_col0"]
                      Filter Operator [FIL_18] (runtime: rows=5 width=4)
                        predicate:((u < 10) and (u > 2))
                        TableScan [TS_0] (runtime: rows=8 width=4)
                          default@tx,tx,Tbl:COMPLETE,Col:COMPLETE,Output:["u"]
                <-Map 4 [SIMPLE_EDGE] llap
                  SHUFFLE [RS_7]
                    PartitionCols:_col0
                    Select Operator [SEL_5] (runtime: rows=3 width=4)
                      Output:["_col0"]
                      Filter Operator [FIL_19] (runtime: rows=3 width=4)
                        predicate:((p < 10) and (p > 2))
                        TableScan [TS_3] (runtime: rows=5 width=4)
                          default@px,px,Tbl:COMPLETE,Col:COMPLETE,Output:["p"]

