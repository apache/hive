PREHOOK: query: CREATE TABLE dest1_n45(key INT, value STRING, hr STRING, ds STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1_n45
POSTHOOK: query: CREATE TABLE dest1_n45(key INT, value STRING, hr STRING, ds STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1_n45
PREHOOK: query: EXPLAIN EXTENDED
FROM srcpart
INSERT OVERWRITE TABLE dest1_n45 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-08' and srcpart.hr = '12'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@dest1_n45
POSTHOOK: query: EXPLAIN EXTENDED
FROM srcpart
INSERT OVERWRITE TABLE dest1_n45 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-08' and srcpart.hr = '12'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@dest1_n45
OPTIMIZED SQL: SELECT `key`, `value`, CAST('12' AS STRING) AS `hr`, CAST('2008-04-08' AS STRING) AS `ds`
FROM `default`.`srcpart`
WHERE `key` < 100 AND `ds` = '2008-04-08' AND `hr` = '12'
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcpart
                  filterExpr: ((UDFToDouble(key) < 100.0D) and (ds = '2008-04-08') and (hr = '12')) (type: boolean)
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: (UDFToDouble(key) < 100.0D) (type: boolean)
                    Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: UDFToInteger(key) (type: int), value (type: string), '12' (type: string), '2008-04-08' (type: string)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 166 Data size: 45650 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        bucketingVersion: 2
                        compressed: false
                        GlobalTableId: 1
#### A masked pattern was here ####
                        NumFilesPerFileSink: 1
                        Statistics: Num rows: 166 Data size: 45650 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            properties:
                              bucketing_version 2
                              column.name.delimiter ,
                              columns key,value,hr,ds
                              columns.comments 
                              columns.types int:string:string:string
#### A masked pattern was here ####
                              name default.dest1_n45
                              serialization.format 1
                              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            name: default.dest1_n45
                        TotalFiles: 1
                        GatherStats: true
                        MultiFileSpray: false
                      Select Operator
                        expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string)
                        outputColumnNames: key, value, hr, ds
                        Statistics: Num rows: 166 Data size: 45650 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), max(length(value)), avg(COALESCE(length(value),0)), count(value), compute_bit_vector_hll(value), max(length(hr)), avg(COALESCE(length(hr),0)), count(hr), compute_bit_vector_hll(hr), max(length(ds)), avg(COALESCE(length(ds),0)), count(ds), compute_bit_vector_hll(ds)
                          minReductionHashAggr: 0.99
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                          Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            bucketingVersion: 2
                            null sort order: 
                            numBuckets: -1
                            sort order: 
                            Statistics: Num rows: 1 Data size: 864 Basic stats: COMPLETE Column stats: COMPLETE
                            tag: -1
                            value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary), _col13 (type: int), _col14 (type: struct<count:bigint,sum:double,input:int>), _col15 (type: bigint), _col16 (type: binary)
                            auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: hr=12
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                    hr 12
                  properties:
                    column.name.delimiter ,
                    columns key,value
                    columns.types string:string
#### A masked pattern was here ####
                    name default.srcpart
                    partition_columns ds/hr
                    partition_columns.types string:string
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 'default','default'
                      columns.types string:string
#### A masked pattern was here ####
                      name default.srcpart
                      partition_columns ds/hr
                      partition_columns.types string:string
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcpart
                  name: default.srcpart
            Truncated Path -> Alias:
              /srcpart/ds=2008-04-08/hr=12 [srcpart]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12), max(VALUE._col13), avg(VALUE._col14), count(VALUE._col15), compute_bit_vector_hll(VALUE._col16)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                Statistics: Num rows: 1 Data size: 660 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col13,0)) (type: bigint), COALESCE(_col14,0) (type: double), (_col2 - _col15) (type: bigint), COALESCE(ndv_compute_bit_vector(_col16),0) (type: bigint), _col16 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23
                  Statistics: Num rows: 1 Data size: 1062 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 1062 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17,_col18,_col19,_col20,_col21,_col22,_col23
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,value,hr,ds
                columns.comments 
                columns.types int:string:string:string
#### A masked pattern was here ####
                name default.dest1_n45
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1_n45

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value, hr, ds
          Column Types: int, string, string, string
          Table: default.dest1_n45
          Is Table Level Stats: true

PREHOOK: query: FROM srcpart
INSERT OVERWRITE TABLE dest1_n45 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-08' and srcpart.hr = '12'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@dest1_n45
POSTHOOK: query: FROM srcpart
INSERT OVERWRITE TABLE dest1_n45 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-08' and srcpart.hr = '12'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@dest1_n45
POSTHOOK: Lineage: dest1_n45.ds SIMPLE []
POSTHOOK: Lineage: dest1_n45.hr SIMPLE []
POSTHOOK: Lineage: dest1_n45.key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest1_n45.value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SELECT dest1_n45.* FROM dest1_n45
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n45
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1_n45.* FROM dest1_n45
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n45
#### A masked pattern was here ####
86	val_86	12	2008-04-08
27	val_27	12	2008-04-08
98	val_98	12	2008-04-08
66	val_66	12	2008-04-08
37	val_37	12	2008-04-08
15	val_15	12	2008-04-08
82	val_82	12	2008-04-08
17	val_17	12	2008-04-08
0	val_0	12	2008-04-08
57	val_57	12	2008-04-08
20	val_20	12	2008-04-08
92	val_92	12	2008-04-08
47	val_47	12	2008-04-08
72	val_72	12	2008-04-08
4	val_4	12	2008-04-08
35	val_35	12	2008-04-08
54	val_54	12	2008-04-08
51	val_51	12	2008-04-08
65	val_65	12	2008-04-08
83	val_83	12	2008-04-08
12	val_12	12	2008-04-08
67	val_67	12	2008-04-08
84	val_84	12	2008-04-08
58	val_58	12	2008-04-08
8	val_8	12	2008-04-08
24	val_24	12	2008-04-08
42	val_42	12	2008-04-08
0	val_0	12	2008-04-08
96	val_96	12	2008-04-08
26	val_26	12	2008-04-08
51	val_51	12	2008-04-08
43	val_43	12	2008-04-08
95	val_95	12	2008-04-08
98	val_98	12	2008-04-08
85	val_85	12	2008-04-08
77	val_77	12	2008-04-08
0	val_0	12	2008-04-08
87	val_87	12	2008-04-08
15	val_15	12	2008-04-08
72	val_72	12	2008-04-08
90	val_90	12	2008-04-08
19	val_19	12	2008-04-08
10	val_10	12	2008-04-08
5	val_5	12	2008-04-08
58	val_58	12	2008-04-08
35	val_35	12	2008-04-08
95	val_95	12	2008-04-08
11	val_11	12	2008-04-08
34	val_34	12	2008-04-08
42	val_42	12	2008-04-08
78	val_78	12	2008-04-08
76	val_76	12	2008-04-08
41	val_41	12	2008-04-08
30	val_30	12	2008-04-08
64	val_64	12	2008-04-08
76	val_76	12	2008-04-08
74	val_74	12	2008-04-08
69	val_69	12	2008-04-08
33	val_33	12	2008-04-08
70	val_70	12	2008-04-08
5	val_5	12	2008-04-08
2	val_2	12	2008-04-08
35	val_35	12	2008-04-08
80	val_80	12	2008-04-08
44	val_44	12	2008-04-08
53	val_53	12	2008-04-08
90	val_90	12	2008-04-08
12	val_12	12	2008-04-08
5	val_5	12	2008-04-08
70	val_70	12	2008-04-08
24	val_24	12	2008-04-08
70	val_70	12	2008-04-08
83	val_83	12	2008-04-08
26	val_26	12	2008-04-08
67	val_67	12	2008-04-08
18	val_18	12	2008-04-08
9	val_9	12	2008-04-08
18	val_18	12	2008-04-08
97	val_97	12	2008-04-08
84	val_84	12	2008-04-08
28	val_28	12	2008-04-08
37	val_37	12	2008-04-08
90	val_90	12	2008-04-08
97	val_97	12	2008-04-08
