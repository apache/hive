PREHOOK: query: DESCRIBE FUNCTION character_length
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION character_length
POSTHOOK: type: DESCFUNCTION
character_length(str | binary) - Returns the number of characters in str or binary data
PREHOOK: query: DESCRIBE FUNCTION EXTENDED character_length
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED character_length
POSTHOOK: type: DESCFUNCTION
character_length(str | binary) - Returns the number of characters in str or binary data
Synonyms: char_length
Example:
  > SELECT character_length('HUX8�') FROM src LIMIT 1;
  5
Function class:org.apache.hadoop.hive.ql.udf.generic.GenericUDFCharacterLength
Function type:BUILTIN
PREHOOK: query: DESCRIBE FUNCTION char_length
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION char_length
POSTHOOK: type: DESCFUNCTION
char_length(str | binary) - Returns the number of characters in str or binary data
PREHOOK: query: DESCRIBE FUNCTION EXTENDED char_length
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED char_length
POSTHOOK: type: DESCFUNCTION
char_length(str | binary) - Returns the number of characters in str or binary data
Synonyms: character_length
Example:
  > SELECT char_length('HUX8�') FROM src LIMIT 1;
  5
Function class:org.apache.hadoop.hive.ql.udf.generic.GenericUDFCharacterLength
Function type:BUILTIN
PREHOOK: query: CREATE TABLE dest1_n59(len INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1_n59
POSTHOOK: query: CREATE TABLE dest1_n59(len INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1_n59
PREHOOK: query: EXPLAIN FROM src1 INSERT OVERWRITE TABLE dest1_n59 SELECT character_length(src1.value)
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Output: default@dest1_n59
POSTHOOK: query: EXPLAIN FROM src1 INSERT OVERWRITE TABLE dest1_n59 SELECT character_length(src1.value)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Output: default@dest1_n59
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src1
                  Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: character_length(value) (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.dest1_n59
            Execution mode: vectorized, llap
            LLAP IO: no inputs

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1_n59

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: FROM src1 INSERT OVERWRITE TABLE dest1_n59 SELECT character_length(src1.value)
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Output: default@dest1_n59
POSTHOOK: query: FROM src1 INSERT OVERWRITE TABLE dest1_n59 SELECT character_length(src1.value)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Output: default@dest1_n59
POSTHOOK: Lineage: dest1_n59.len EXPRESSION [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SELECT dest1_n59.* FROM dest1_n59
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n59
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1_n59.* FROM dest1_n59
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n59
#### A masked pattern was here ####
7
0
7
6
7
7
7
7
6
7
7
7
7
7
7
0
0
6
0
7
7
7
0
0
0
PREHOOK: query: DROP TABLE dest1_n59
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@dest1_n59
PREHOOK: Output: default@dest1_n59
POSTHOOK: query: DROP TABLE dest1_n59
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@dest1_n59
POSTHOOK: Output: default@dest1_n59
PREHOOK: query: CREATE TABLE dest1_n59(name STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1_n59
POSTHOOK: query: CREATE TABLE dest1_n59(name STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1_n59
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv4.txt' INTO TABLE dest1_n59
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@dest1_n59
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv4.txt' INTO TABLE dest1_n59
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@dest1_n59
PREHOOK: query: INSERT INTO dest1_n59 VALUES(NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@dest1_n59
POSTHOOK: query: INSERT INTO dest1_n59 VALUES(NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@dest1_n59
POSTHOOK: Lineage: dest1_n59.name EXPRESSION []
PREHOOK: query: CREATE TABLE dest2_n13 STORED AS ORC AS SELECT * FROM dest1_n59
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@dest1_n59
PREHOOK: Output: database:default
PREHOOK: Output: default@dest2_n13
POSTHOOK: query: CREATE TABLE dest2_n13 STORED AS ORC AS SELECT * FROM dest1_n59
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@dest1_n59
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest2_n13
POSTHOOK: Lineage: dest2_n13.name SIMPLE [(dest1_n59)dest1_n59.FieldSchema(name:name, type:string, comment:null), ]
PREHOOK: query: EXPLAIN SELECT character_length(dest2_n13.name) FROM dest2_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@dest2_n13
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT character_length(dest2_n13.name) FROM dest2_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest2_n13
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: dest2_n13
                  Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: character_length(name) (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT character_length(dest2_n13.name) FROM dest2_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@dest2_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT character_length(dest2_n13.name) FROM dest2_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest2_n13
#### A masked pattern was here ####
2
NULL
PREHOOK: query: EXPLAIN SELECT char_length(dest2_n13.name) FROM dest2_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@dest2_n13
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT char_length(dest2_n13.name) FROM dest2_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest2_n13
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: dest2_n13
                  Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: character_length(name) (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT char_length(dest2_n13.name) FROM dest2_n13
PREHOOK: type: QUERY
PREHOOK: Input: default@dest2_n13
#### A masked pattern was here ####
POSTHOOK: query: SELECT char_length(dest2_n13.name) FROM dest2_n13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest2_n13
#### A masked pattern was here ####
2
NULL
PREHOOK: query: DROP TABLE dest1_n59
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@dest1_n59
PREHOOK: Output: default@dest1_n59
POSTHOOK: query: DROP TABLE dest1_n59
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@dest1_n59
POSTHOOK: Output: default@dest1_n59
PREHOOK: query: DROP TABLE dest2_n13
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@dest2_n13
PREHOOK: Output: default@dest2_n13
POSTHOOK: query: DROP TABLE dest2_n13
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@dest2_n13
POSTHOOK: Output: default@dest2_n13
