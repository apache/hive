PREHOOK: query: CREATE TABLE t_test_grouping_sets(
  a int,
  b int,
  c int
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t_test_grouping_sets
POSTHOOK: query: CREATE TABLE t_test_grouping_sets(
  a int,
  b int,
  c int
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t_test_grouping_sets
PREHOOK: query: INSERT INTO t_test_grouping_sets VALUES
(NULL, NULL, NULL),
(5, 2, 3),
(10, 11, 12),
(NULL, NULL, NULL),
(NULL, NULL, NULL),
(6, 2, 1),
(7, 8, 4), (7, 8, 4), (7, 8, 4),
(5, 1, 2), (5, 1, 2), (5, 1, 2),
(NULL, NULL, NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t_test_grouping_sets
POSTHOOK: query: INSERT INTO t_test_grouping_sets VALUES
(NULL, NULL, NULL),
(5, 2, 3),
(10, 11, 12),
(NULL, NULL, NULL),
(NULL, NULL, NULL),
(6, 2, 1),
(7, 8, 4), (7, 8, 4), (7, 8, 4),
(5, 1, 2), (5, 1, 2), (5, 1, 2),
(NULL, NULL, NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t_test_grouping_sets
POSTHOOK: Lineage: t_test_grouping_sets.a SCRIPT []
POSTHOOK: Lineage: t_test_grouping_sets.b SCRIPT []
POSTHOOK: Lineage: t_test_grouping_sets.c SCRIPT []
PREHOOK: query: EXPLAIN
SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS FIRST LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS FIRST LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t_test_grouping_sets
                  Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: a (type: int), b (type: int)
                    outputColumnNames: a, b
                    Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: a (type: int), b (type: int), 0L (type: bigint)
                      minReductionHashAggr: 0.15384614
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint)
                        null sort order: aaa
                        sort order: +++
                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: bigint)
                        Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
                pruneGroupingSetId: true
                Top N Key Operator
                  sort order: +
                  keys: _col1 (type: int)
                  null sort order: a
                  Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
                  top n: 7
                  Reduce Output Operator
                    key expressions: _col1 (type: int)
                    null sort order: a
                    sort order: +
                    Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
                    TopN Hash Memory Usage: 0.1
                    value expressions: _col0 (type: int)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), KEY.reducesinkkey0 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 26 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 7
                  Statistics: Num rows: 7 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 7 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 7
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS FIRST LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS FIRST LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
NULL	NULL
5	NULL
6	NULL
10	NULL
7	NULL
NULL	NULL
NULL	NULL
PREHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS FIRST LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS FIRST LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
NULL	NULL
5	NULL
6	NULL
10	NULL
7	NULL
NULL	NULL
NULL	NULL
PREHOOK: query: EXPLAIN
SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS LAST LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS LAST LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t_test_grouping_sets
                  Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: a (type: int), b (type: int)
                    outputColumnNames: a, b
                    Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: a (type: int), b (type: int), 0L (type: bigint)
                      minReductionHashAggr: 0.15384614
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint)
                        null sort order: aaa
                        sort order: +++
                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: bigint)
                        Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
                pruneGroupingSetId: true
                Top N Key Operator
                  sort order: +
                  keys: _col1 (type: int)
                  null sort order: z
                  Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
                  top n: 7
                  Reduce Output Operator
                    key expressions: _col1 (type: int)
                    null sort order: z
                    sort order: +
                    Statistics: Num rows: 26 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
                    TopN Hash Memory Usage: 0.1
                    value expressions: _col0 (type: int)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), KEY.reducesinkkey0 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 26 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 7
                  Statistics: Num rows: 7 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 7 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 7
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS LAST LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS LAST LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
NULL	1
5	1
5	2
NULL	2
6	2
NULL	8
7	8
PREHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS LAST LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY b NULLS LAST LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
NULL	1
5	1
5	2
NULL	2
6	2
NULL	8
7	8
PREHOOK: query: EXPLAIN
SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC, b ASC LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC, b ASC LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t_test_grouping_sets
                  Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                  Top N Key Operator
                    sort order: -+
                    keys: a (type: int), b (type: int)
                    null sort order: zz
                    Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                    top n: 7
                    Select Operator
                      expressions: a (type: int), b (type: int)
                      outputColumnNames: a, b
                      Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                      Top N Key Operator
                        sort order: -++
                        keys: a (type: int), b (type: int), 0L (type: bigint)
                        null sort order: zza
                        Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                        top n: 7
                        Group By Operator
                          keys: a (type: int), b (type: int), 0L (type: bigint)
                          minReductionHashAggr: 0.15384614
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 26 Data size: 216 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint)
                            null sort order: zza
                            sort order: -++
                            Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: bigint)
                            Statistics: Num rows: 26 Data size: 216 Basic stats: COMPLETE Column stats: COMPLETE
                            TopN Hash Memory Usage: 0.1
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 26 Data size: 216 Basic stats: COMPLETE Column stats: COMPLETE
                pruneGroupingSetId: true
                Reduce Output Operator
                  key expressions: _col0 (type: int), _col1 (type: int)
                  null sort order: zz
                  sort order: -+
                  Statistics: Num rows: 26 Data size: 216 Basic stats: COMPLETE Column stats: COMPLETE
                  TopN Hash Memory Usage: 0.1
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 26 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 7
                  Statistics: Num rows: 7 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 7 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 7
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC, b ASC LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC, b ASC LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
10	11
10	NULL
7	8
7	NULL
6	2
6	NULL
5	1
PREHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC, b ASC LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC, b ASC LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
10	11
10	NULL
7	8
7	NULL
6	2
6	NULL
5	1
PREHOOK: query: EXPLAIN
SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC NULLS FIRST, b ASC NULLS FIRST LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC NULLS FIRST, b ASC NULLS FIRST LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t_test_grouping_sets
                  Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                  Top N Key Operator
                    sort order: -+
                    keys: a (type: int), b (type: int)
                    null sort order: aa
                    Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                    top n: 7
                    Select Operator
                      expressions: a (type: int), b (type: int)
                      outputColumnNames: a, b
                      Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                      Top N Key Operator
                        sort order: -++
                        keys: a (type: int), b (type: int), 0L (type: bigint)
                        null sort order: aaa
                        Statistics: Num rows: 13 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                        top n: 7
                        Group By Operator
                          keys: a (type: int), b (type: int), 0L (type: bigint)
                          minReductionHashAggr: 0.15384614
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 26 Data size: 216 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint)
                            null sort order: aaa
                            sort order: -++
                            Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: bigint)
                            Statistics: Num rows: 26 Data size: 216 Basic stats: COMPLETE Column stats: COMPLETE
                            TopN Hash Memory Usage: 0.1
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 26 Data size: 216 Basic stats: COMPLETE Column stats: COMPLETE
                pruneGroupingSetId: true
                Reduce Output Operator
                  key expressions: _col0 (type: int), _col1 (type: int)
                  null sort order: aa
                  sort order: -+
                  Statistics: Num rows: 26 Data size: 216 Basic stats: COMPLETE Column stats: COMPLETE
                  TopN Hash Memory Usage: 0.1
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: int)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 26 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 7
                  Statistics: Num rows: 7 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 7 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 7
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC NULLS FIRST, b ASC NULLS FIRST LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC NULLS FIRST, b ASC NULLS FIRST LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	1
NULL	2
NULL	8
PREHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC NULLS FIRST, b ASC NULLS FIRST LIMIT 7
PREHOOK: type: QUERY
PREHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
POSTHOOK: query: SELECT a, b FROM t_test_grouping_sets GROUP BY a,b GROUPING SETS ((a,b), (a), (b), ()) ORDER BY a DESC NULLS FIRST, b ASC NULLS FIRST LIMIT 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t_test_grouping_sets
#### A masked pattern was here ####
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	1
NULL	2
NULL	8
PREHOOK: query: DROP TABLE IF EXISTS t_test_grouping_sets
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t_test_grouping_sets
PREHOOK: Output: default@t_test_grouping_sets
POSTHOOK: query: DROP TABLE IF EXISTS t_test_grouping_sets
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t_test_grouping_sets
POSTHOOK: Output: default@t_test_grouping_sets
