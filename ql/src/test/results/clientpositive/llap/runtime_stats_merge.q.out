PREHOOK: query: create table lineitem1 (L_ORDERKEY integer)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@lineitem1
POSTHOOK: query: create table lineitem1 (L_ORDERKEY integer)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@lineitem1
PREHOOK: query: insert into lineitem1 values (1),(2),(3)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@lineitem1
POSTHOOK: query: insert into lineitem1 values (1),(2),(3)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@lineitem1
POSTHOOK: Lineage: lineitem1.l_orderkey SCRIPT []
PREHOOK: query: create table lineitem2
 stored as orc  TBLPROPERTIES ('transactional'='true')
  as select * from lineitem1
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@lineitem1
PREHOOK: Output: database:default
PREHOOK: Output: default@lineitem2
POSTHOOK: query: create table lineitem2
 stored as orc  TBLPROPERTIES ('transactional'='true')
  as select * from lineitem1
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@lineitem1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@lineitem2
POSTHOOK: Lineage: lineitem2.l_orderkey SIMPLE [(lineitem1)lineitem1.FieldSchema(name:l_orderkey, type:int, comment:null), ]
PREHOOK: query: create table lineitem_stage
 stored as orc  TBLPROPERTIES ('transactional'='true')
  as select * from lineitem1 limit 1
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@lineitem1
PREHOOK: Output: database:default
PREHOOK: Output: default@lineitem_stage
POSTHOOK: query: create table lineitem_stage
 stored as orc  TBLPROPERTIES ('transactional'='true')
  as select * from lineitem1 limit 1
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@lineitem1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@lineitem_stage
POSTHOOK: Lineage: lineitem_stage.l_orderkey SIMPLE [(lineitem1)lineitem1.FieldSchema(name:l_orderkey, type:int, comment:null), ]
PREHOOK: query: analyze table lineitem2 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@lineitem2
PREHOOK: Output: default@lineitem2
#### A masked pattern was here ####
POSTHOOK: query: analyze table lineitem2 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@lineitem2
POSTHOOK: Output: default@lineitem2
#### A masked pattern was here ####
PREHOOK: query: analyze table lineitem_stage compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@lineitem_stage
PREHOOK: Output: default@lineitem_stage
#### A masked pattern was here ####
POSTHOOK: query: analyze table lineitem_stage compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@lineitem_stage
POSTHOOK: Output: default@lineitem_stage
#### A masked pattern was here ####
PREHOOK: query: explain reoptimization
merge into lineitem2 using
	(select * from lineitem_stage) sub
	on sub.L_ORDERKEY = lineitem2.L_ORDERKEY
	when matched then delete
PREHOOK: type: QUERY
PREHOOK: Input: default@lineitem2
PREHOOK: Input: default@lineitem_stage
PREHOOK: Output: default@lineitem2
PREHOOK: Output: default@merge_tmp_table
POSTHOOK: query: explain reoptimization
merge into lineitem2 using
	(select * from lineitem_stage) sub
	on sub.L_ORDERKEY = lineitem2.L_ORDERKEY
	when matched then delete
POSTHOOK: type: QUERY
POSTHOOK: Input: default@lineitem2
POSTHOOK: Input: default@lineitem_stage
POSTHOOK: Output: default@lineitem2
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(lineitem2)lineitem2.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), ]
PREHOOK: query: explain reoptimization
merge into lineitem2 using
	(select * from lineitem_stage) sub
	on sub.L_ORDERKEY = lineitem2.L_ORDERKEY
	when matched then delete
PREHOOK: type: QUERY
PREHOOK: Input: default@lineitem2
PREHOOK: Input: default@lineitem_stage
PREHOOK: Output: default@lineitem2
PREHOOK: Output: default@merge_tmp_table
POSTHOOK: query: explain reoptimization
merge into lineitem2 using
	(select * from lineitem_stage) sub
	on sub.L_ORDERKEY = lineitem2.L_ORDERKEY
	when matched then delete
POSTHOOK: type: QUERY
POSTHOOK: Input: default@lineitem2
POSTHOOK: Input: default@lineitem_stage
POSTHOOK: Output: default@lineitem2
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(lineitem2)lineitem2.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), ]
Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Map 1 (SIMPLE_EDGE)

Stage-4
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.lineitem2"}
        Stage-3
          Dependency Collection{}
            Stage-2
              Reducer 2 vectorized, llap
              File Output Operator [FS_55]
                table:{"name:":"default.lineitem2"}
                Select Operator [SEL_54] (runtime: rows=1 width=76)
                  Output:["_col0"]
                <-Map 1 [SIMPLE_EDGE] llap
                  SHUFFLE [RS_12]
                    PartitionCols:UDFToInteger(_col0)
                    Select Operator [SEL_11] (runtime: rows=1 width=76)
                      Output:["_col0"]
                      Filter Operator [FIL_10] (runtime: rows=1 width=84)
                        predicate:(_col1 = _col2)
                        Select Operator [SEL_9] (runtime: rows=1 width=84)
                          Output:["_col0","_col1","_col2"]
                          Map Join Operator [MAPJOIN_40] (runtime: rows=1 width=84)
                            Conds:SEL_2._col0=RS_44._col0(Inner),Output:["_col0","_col1","_col2"]
                          <-Map 4 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_44]
                              PartitionCols:_col0
                              Select Operator [SEL_43] (runtime: rows=1 width=4)
                                Output:["_col0"]
                                Filter Operator [FIL_42] (runtime: rows=1 width=4)
                                  predicate:l_orderkey is not null
                                  TableScan [TS_3] (runtime: rows=1 width=4)
                                    default@lineitem_stage,lineitem_stage, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["l_orderkey"]
                          <-Select Operator [SEL_2] (runtime: rows=3 width=80)
                              Output:["_col0","_col1"]
                              Filter Operator [FIL_27] (runtime: rows=3 width=4)
                                predicate:l_orderkey is not null
                                TableScan [TS_0] (runtime: rows=3 width=4)
                                  default@lineitem2,lineitem2, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["l_orderkey"]
              Reducer 3 llap
              File Output Operator [FS_24]
                table:{"name:":"default.merge_tmp_table"}
                Select Operator [SEL_23] (runtime: rows=0 width=-1)
                  Output:["_col0"]
                  Filter Operator [FIL_22] (runtime: rows=0 width=-1)
                    predicate:(_col1 > 1L)
                    Group By Operator [GBY_21] (runtime: rows=1 width=84)
                      Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                    <-Map 1 [SIMPLE_EDGE] llap
                      SHUFFLE [RS_20]
                        PartitionCols:_col0
                        Group By Operator [GBY_19] (runtime: rows=1 width=84)
                          Output:["_col0","_col1"],aggregations:["count()"],keys:_col0
                          Select Operator [SEL_18] (runtime: rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_17] (runtime: rows=1 width=84)
                              predicate:(_col1 = _col2)
                               Please refer to the previous Select Operator [SEL_9]
Stage-5
  Stats Work{}
    Stage-1
      Move Operator
        table:{"name:":"default.merge_tmp_table"}
         Please refer to the previous Stage-3

PREHOOK: query: merge into lineitem2 using
	(select * from lineitem_stage) sub
	on sub.L_ORDERKEY = lineitem2.L_ORDERKEY
	when matched then delete
PREHOOK: type: QUERY
PREHOOK: Input: default@lineitem2
PREHOOK: Input: default@lineitem_stage
PREHOOK: Output: default@lineitem2
PREHOOK: Output: default@merge_tmp_table
POSTHOOK: query: merge into lineitem2 using
	(select * from lineitem_stage) sub
	on sub.L_ORDERKEY = lineitem2.L_ORDERKEY
	when matched then delete
POSTHOOK: type: QUERY
POSTHOOK: Input: default@lineitem2
POSTHOOK: Input: default@lineitem_stage
POSTHOOK: Output: default@lineitem2
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(lineitem2)lineitem2.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), ]
