PREHOOK: query: create table table_list_types (id int, c1 array<int>, c2 array<int>)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_list_types
POSTHOOK: query: create table table_list_types (id int, c1 array<int>, c2 array<int>)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_list_types
PREHOOK: query: insert into table_list_types VALUES (1, array(1,1), array(2,1))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_list_types
POSTHOOK: query: insert into table_list_types VALUES (1, array(1,1), array(2,1))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_list_types
POSTHOOK: Lineage: table_list_types.c1 SCRIPT []
POSTHOOK: Lineage: table_list_types.c2 SCRIPT []
POSTHOOK: Lineage: table_list_types.id SCRIPT []
PREHOOK: query: insert into table_list_types VALUES (2, array(1,2), array(2,2))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_list_types
POSTHOOK: query: insert into table_list_types VALUES (2, array(1,2), array(2,2))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_list_types
POSTHOOK: Lineage: table_list_types.c1 SCRIPT []
POSTHOOK: Lineage: table_list_types.c2 SCRIPT []
POSTHOOK: Lineage: table_list_types.id SCRIPT []
PREHOOK: query: insert into table_list_types VALUES (3, array(1,3), array(2,3))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_list_types
POSTHOOK: query: insert into table_list_types VALUES (3, array(1,3), array(2,3))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_list_types
POSTHOOK: Lineage: table_list_types.c1 SCRIPT []
POSTHOOK: Lineage: table_list_types.c2 SCRIPT []
POSTHOOK: Lineage: table_list_types.id SCRIPT []
PREHOOK: query: insert into table_list_types VALUES (4, array(1,4), array(1,4))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_list_types
POSTHOOK: query: insert into table_list_types VALUES (4, array(1,4), array(1,4))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_list_types
POSTHOOK: Lineage: table_list_types.c1 SCRIPT []
POSTHOOK: Lineage: table_list_types.c2 SCRIPT []
POSTHOOK: Lineage: table_list_types.id SCRIPT []
PREHOOK: query: insert into table_list_types VALUES (5, array(1,4), array(null,4))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_list_types
POSTHOOK: query: insert into table_list_types VALUES (5, array(1,4), array(null,4))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_list_types
POSTHOOK: Lineage: table_list_types.c1 SCRIPT []
POSTHOOK: Lineage: table_list_types.c2 SCRIPT []
POSTHOOK: Lineage: table_list_types.id SCRIPT []
PREHOOK: query: create table table_list_types1 (id int, c1 array<int>, c2 array<int>)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_list_types1
POSTHOOK: query: create table table_list_types1 (id int, c1 array<int>, c2 array<int>)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_list_types1
PREHOOK: query: insert into table_list_types1 VALUES (1, array(1,1), array(2,1))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_list_types1
POSTHOOK: query: insert into table_list_types1 VALUES (1, array(1,1), array(2,1))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_list_types1
POSTHOOK: Lineage: table_list_types1.c1 SCRIPT []
POSTHOOK: Lineage: table_list_types1.c2 SCRIPT []
POSTHOOK: Lineage: table_list_types1.id SCRIPT []
PREHOOK: query: insert into table_list_types1 VALUES (2, array(1,2), array(2,2))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_list_types1
POSTHOOK: query: insert into table_list_types1 VALUES (2, array(1,2), array(2,2))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_list_types1
POSTHOOK: Lineage: table_list_types1.c1 SCRIPT []
POSTHOOK: Lineage: table_list_types1.c2 SCRIPT []
POSTHOOK: Lineage: table_list_types1.id SCRIPT []
PREHOOK: query: insert into table_list_types1 VALUES (3, array(1,4), array(1,3))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_list_types1
POSTHOOK: query: insert into table_list_types1 VALUES (3, array(1,4), array(1,3))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_list_types1
POSTHOOK: Lineage: table_list_types1.c1 SCRIPT []
POSTHOOK: Lineage: table_list_types1.c2 SCRIPT []
POSTHOOK: Lineage: table_list_types1.id SCRIPT []
PREHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: c1 (type: array<int>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: c1 (type: array<int>)
                      Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: id (type: int), c2 (type: array<int>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: t2
                  Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: c1 (type: array<int>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: c1 (type: array<int>)
                      Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                      value expressions: id (type: int), c2 (type: array<int>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 c1 (type: array<int>)
                  1 c1 (type: array<int>)
                outputColumnNames: _col0, _col1, _col2, _col7, _col8, _col9
                Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: array<int>), _col2 (type: array<int>), _col7 (type: int), _col8 (type: array<int>), _col9 (type: array<int>)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
1	[1,1]	[2,1]	1	[1,1]	[2,1]
2	[1,2]	[2,2]	2	[1,2]	[2,2]
5	[1,4]	[null,4]	3	[1,4]	[1,3]
4	[1,4]	[1,4]	3	[1,4]	[1,3]
PREHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: c2 (type: array<int>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: c2 (type: array<int>)
                      Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: id (type: int), c1 (type: array<int>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: t2
                  Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: c2 (type: array<int>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: c2 (type: array<int>)
                      Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                      value expressions: id (type: int), c1 (type: array<int>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 c2 (type: array<int>)
                  1 c2 (type: array<int>)
                outputColumnNames: _col0, _col1, _col2, _col7, _col8, _col9
                Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: array<int>), _col2 (type: array<int>), _col7 (type: int), _col8 (type: array<int>), _col9 (type: array<int>)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
1	[1,1]	[2,1]	1	[1,1]	[2,1]
2	[1,2]	[2,2]	2	[1,2]	[2,2]
PREHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: array<int>), c2 (type: array<int>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col1 (type: array<int>)
                          1 _col1 (type: array<int>)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t2
                  Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: array<int>), c2 (type: array<int>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: array<int>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: array<int>)
                        Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col2 (type: array<int>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
5	[1,4]	[null,4]	3	[1,4]	[1,3]
1	[1,1]	[2,1]	1	[1,1]	[2,1]
2	[1,2]	[2,2]	2	[1,2]	[2,2]
4	[1,4]	[1,4]	3	[1,4]	[1,3]
PREHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: array<int>), c2 (type: array<int>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col2 (type: array<int>)
                          1 _col2 (type: array<int>)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t2
                  Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: array<int>), c2 (type: array<int>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col2 (type: array<int>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col2 (type: array<int>)
                        Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col1 (type: array<int>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
1	[1,1]	[2,1]	1	[1,1]	[2,1]
2	[1,2]	[2,2]	2	[1,2]	[2,2]
PREHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  filterExpr: c1 is not null (type: boolean)
                  Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: array<int>), c2 (type: array<int>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col1 (type: array<int>)
                          1 _col1 (type: array<int>)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t2
                  filterExpr: c1 is not null (type: boolean)
                  Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: array<int>), c2 (type: array<int>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: array<int>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: array<int>)
                        Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col2 (type: array<int>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
5	[1,4]	[null,4]	3	[1,4]	[1,3]
1	[1,1]	[2,1]	1	[1,1]	[2,1]
2	[1,2]	[2,2]	2	[1,2]	[2,2]
4	[1,4]	[1,4]	3	[1,4]	[1,3]
PREHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  filterExpr: c2 is not null (type: boolean)
                  Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: array<int>), c2 (type: array<int>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 5 Data size: 1220 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col2 (type: array<int>)
                          1 _col2 (type: array<int>)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 5 Data size: 1342 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t2
                  filterExpr: c2 is not null (type: boolean)
                  Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: array<int>), c2 (type: array<int>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col2 (type: array<int>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col2 (type: array<int>)
                        Statistics: Num rows: 3 Data size: 732 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col1 (type: array<int>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_list_types
PREHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_list_types t1 inner join table_list_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_list_types
POSTHOOK: Input: default@table_list_types1
#### A masked pattern was here ####
1	[1,1]	[2,1]	1	[1,1]	[2,1]
2	[1,2]	[2,2]	2	[1,2]	[2,2]
PREHOOK: query: create table table_struct_types (id int, c1 struct<f1: int,f2: string>, c2 struct<f1: int,f2: string>)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_struct_types
POSTHOOK: query: create table table_struct_types (id int, c1 struct<f1: int,f2: string>, c2 struct<f1: int,f2: string>)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_struct_types
PREHOOK: query: insert into table_struct_types VALUES (1, named_struct("f1",1,"f2",'val1'), named_struct("f1",2,"f2",'val1'))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_struct_types
POSTHOOK: query: insert into table_struct_types VALUES (1, named_struct("f1",1,"f2",'val1'), named_struct("f1",2,"f2",'val1'))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_struct_types
POSTHOOK: Lineage: table_struct_types.c1 SCRIPT []
POSTHOOK: Lineage: table_struct_types.c2 SCRIPT []
POSTHOOK: Lineage: table_struct_types.id SCRIPT []
PREHOOK: query: insert into table_struct_types VALUES (2, named_struct("f1",2,"f2",'val2'), named_struct("f1",2,"f2",'val2'))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_struct_types
POSTHOOK: query: insert into table_struct_types VALUES (2, named_struct("f1",2,"f2",'val2'), named_struct("f1",2,"f2",'val2'))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_struct_types
POSTHOOK: Lineage: table_struct_types.c1 SCRIPT []
POSTHOOK: Lineage: table_struct_types.c2 SCRIPT []
POSTHOOK: Lineage: table_struct_types.id SCRIPT []
PREHOOK: query: insert into table_struct_types VALUES (3, named_struct("f1",3,"f2",'val3'), named_struct("f1",2,"f2",'val3'))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_struct_types
POSTHOOK: query: insert into table_struct_types VALUES (3, named_struct("f1",3,"f2",'val3'), named_struct("f1",2,"f2",'val3'))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_struct_types
POSTHOOK: Lineage: table_struct_types.c1 SCRIPT []
POSTHOOK: Lineage: table_struct_types.c2 SCRIPT []
POSTHOOK: Lineage: table_struct_types.id SCRIPT []
PREHOOK: query: insert into table_struct_types VALUES (4, named_struct("f1",4,"f2",'val4'), named_struct("f1",2,"f2",'val4'))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_struct_types
POSTHOOK: query: insert into table_struct_types VALUES (4, named_struct("f1",4,"f2",'val4'), named_struct("f1",2,"f2",'val4'))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_struct_types
POSTHOOK: Lineage: table_struct_types.c1 SCRIPT []
POSTHOOK: Lineage: table_struct_types.c2 SCRIPT []
POSTHOOK: Lineage: table_struct_types.id SCRIPT []
PREHOOK: query: create table table_struct_types1 (id int, c1 struct<f1: int,f2: string>, c2 struct<f1: int,f2: string>)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@table_struct_types1
POSTHOOK: query: create table table_struct_types1 (id int, c1 struct<f1: int,f2: string>, c2 struct<f1: int,f2: string>)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@table_struct_types1
PREHOOK: query: insert into table_struct_types1 VALUES (1, named_struct("f1",1,"f2",'val1'), named_struct("f1",2,"f2",'val1'))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_struct_types1
POSTHOOK: query: insert into table_struct_types1 VALUES (1, named_struct("f1",1,"f2",'val1'), named_struct("f1",2,"f2",'val1'))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_struct_types1
POSTHOOK: Lineage: table_struct_types1.c1 SCRIPT []
POSTHOOK: Lineage: table_struct_types1.c2 SCRIPT []
POSTHOOK: Lineage: table_struct_types1.id SCRIPT []
PREHOOK: query: insert into table_struct_types1 VALUES (2, named_struct("f1",2,"f2",'val2'), named_struct("f1",2,"f2",'val2'))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_struct_types1
POSTHOOK: query: insert into table_struct_types1 VALUES (2, named_struct("f1",2,"f2",'val2'), named_struct("f1",2,"f2",'val2'))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_struct_types1
POSTHOOK: Lineage: table_struct_types1.c1 SCRIPT []
POSTHOOK: Lineage: table_struct_types1.c2 SCRIPT []
POSTHOOK: Lineage: table_struct_types1.id SCRIPT []
PREHOOK: query: insert into table_struct_types1 VALUES (4, named_struct("f1",4,"f2",'val4'), named_struct("f1",1,"f2",'val3'))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@table_struct_types1
POSTHOOK: query: insert into table_struct_types1 VALUES (4, named_struct("f1",4,"f2",'val4'), named_struct("f1",1,"f2",'val3'))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@table_struct_types1
POSTHOOK: Lineage: table_struct_types1.c1 SCRIPT []
POSTHOOK: Lineage: table_struct_types1.c2 SCRIPT []
POSTHOOK: Lineage: table_struct_types1.id SCRIPT []
PREHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: c1 (type: struct<f1:int,f2:string>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: c1 (type: struct<f1:int,f2:string>)
                      Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                      value expressions: id (type: int), c2 (type: struct<f1:int,f2:string>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: t2
                  Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: c1 (type: struct<f1:int,f2:string>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: c1 (type: struct<f1:int,f2:string>)
                      Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                      value expressions: id (type: int), c2 (type: struct<f1:int,f2:string>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 c1 (type: struct<f1:int,f2:string>)
                  1 c1 (type: struct<f1:int,f2:string>)
                outputColumnNames: _col0, _col1, _col2, _col7, _col8, _col9
                Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: struct<f1:int,f2:string>), _col2 (type: struct<f1:int,f2:string>), _col7 (type: int), _col8 (type: struct<f1:int,f2:string>), _col9 (type: struct<f1:int,f2:string>)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}	1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}
2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}	2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}
4	{"f1":4,"f2":"val4"}	{"f1":2,"f2":"val4"}	4	{"f1":4,"f2":"val4"}	{"f1":1,"f2":"val3"}
PREHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: c2 (type: struct<f1:int,f2:string>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: c2 (type: struct<f1:int,f2:string>)
                      Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                      value expressions: id (type: int), c1 (type: struct<f1:int,f2:string>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: t2
                  Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: c2 (type: struct<f1:int,f2:string>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: c2 (type: struct<f1:int,f2:string>)
                      Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                      value expressions: id (type: int), c1 (type: struct<f1:int,f2:string>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 c2 (type: struct<f1:int,f2:string>)
                  1 c2 (type: struct<f1:int,f2:string>)
                outputColumnNames: _col0, _col1, _col2, _col7, _col8, _col9
                Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: struct<f1:int,f2:string>), _col2 (type: struct<f1:int,f2:string>), _col7 (type: int), _col8 (type: struct<f1:int,f2:string>), _col9 (type: struct<f1:int,f2:string>)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}	1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}
2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}	2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}
PREHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: struct<f1:int,f2:string>), c2 (type: struct<f1:int,f2:string>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col1 (type: struct<f1:int,f2:string>)
                          1 _col1 (type: struct<f1:int,f2:string>)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t2
                  Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: struct<f1:int,f2:string>), c2 (type: struct<f1:int,f2:string>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: struct<f1:int,f2:string>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: struct<f1:int,f2:string>)
                        Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col2 (type: struct<f1:int,f2:string>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}	1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}
2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}	2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}
4	{"f1":4,"f2":"val4"}	{"f1":2,"f2":"val4"}	4	{"f1":4,"f2":"val4"}	{"f1":1,"f2":"val3"}
PREHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: struct<f1:int,f2:string>), c2 (type: struct<f1:int,f2:string>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col2 (type: struct<f1:int,f2:string>)
                          1 _col2 (type: struct<f1:int,f2:string>)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t2
                  Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: struct<f1:int,f2:string>), c2 (type: struct<f1:int,f2:string>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col2 (type: struct<f1:int,f2:string>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col2 (type: struct<f1:int,f2:string>)
                        Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col1 (type: struct<f1:int,f2:string>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}	1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}
2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}	2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}
PREHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  filterExpr: c1 is not null (type: boolean)
                  Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: struct<f1:int,f2:string>), c2 (type: struct<f1:int,f2:string>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col1 (type: struct<f1:int,f2:string>)
                          1 _col1 (type: struct<f1:int,f2:string>)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t2
                  filterExpr: c1 is not null (type: boolean)
                  Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c1 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: struct<f1:int,f2:string>), c2 (type: struct<f1:int,f2:string>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: struct<f1:int,f2:string>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: struct<f1:int,f2:string>)
                        Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col2 (type: struct<f1:int,f2:string>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c1 = t2.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}	1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}
2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}	2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}
4	{"f1":4,"f2":"val4"}	{"f1":2,"f2":"val4"}	4	{"f1":4,"f2":"val4"}	{"f1":1,"f2":"val3"}
PREHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: explain select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  filterExpr: c2 is not null (type: boolean)
                  Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: struct<f1:int,f2:string>), c2 (type: struct<f1:int,f2:string>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 4 Data size: 1904 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col2 (type: struct<f1:int,f2:string>)
                          1 _col2 (type: struct<f1:int,f2:string>)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 4 Data size: 2094 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t2
                  filterExpr: c2 is not null (type: boolean)
                  Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: c2 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: int), c1 (type: struct<f1:int,f2:string>), c2 (type: struct<f1:int,f2:string>)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col2 (type: struct<f1:int,f2:string>)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col2 (type: struct<f1:int,f2:string>)
                        Statistics: Num rows: 3 Data size: 1428 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col1 (type: struct<f1:int,f2:string>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
PREHOOK: type: QUERY
PREHOOK: Input: default@table_struct_types
PREHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
POSTHOOK: query: select * from table_struct_types t1 inner join table_struct_types1 t2 on t1.c2 = t2.c2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@table_struct_types
POSTHOOK: Input: default@table_struct_types1
#### A masked pattern was here ####
1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}	1	{"f1":1,"f2":"val1"}	{"f1":2,"f2":"val1"}
2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}	2	{"f1":2,"f2":"val2"}	{"f1":2,"f2":"val2"}
