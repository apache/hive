PREHOOK: query: create table nested_array_array_table (
nested_array_array  array<array<int>>)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nested_array_array_table
POSTHOOK: query: create table nested_array_array_table (
nested_array_array  array<array<int>>)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nested_array_array_table
PREHOOK: query: create table nested_array_map_table (
nested_array_map  array<map<string,string>>)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nested_array_map_table
POSTHOOK: query: create table nested_array_map_table (
nested_array_map  array<map<string,string>>)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nested_array_map_table
PREHOOK: query: create table nested_array_struct_table (
nested_array_map  array<struct<latitude: DOUBLE, longitude: DOUBLE>>)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nested_array_struct_table
POSTHOOK: query: create table nested_array_struct_table (
nested_array_map  array<struct<latitude: DOUBLE, longitude: DOUBLE>>)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nested_array_struct_table
PREHOOK: query: create table nested_map_array_table (
nested_map_array  map<string,array<int>>)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nested_map_array_table
POSTHOOK: query: create table nested_map_array_table (
nested_map_array  map<string,array<int>>)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nested_map_array_table
PREHOOK: query: create table nested_map_map_table (
nested_map_map    map<string,map<string,string>>)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nested_map_map_table
POSTHOOK: query: create table nested_map_map_table (
nested_map_map    map<string,map<string,string>>)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nested_map_map_table
PREHOOK: query: create table nested_map_struct_table (
nested_map_struct    map<string,struct<latitude: DOUBLE, longitude: DOUBLE>>)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nested_map_struct_table
POSTHOOK: query: create table nested_map_struct_table (
nested_map_struct    map<string,struct<latitude: DOUBLE, longitude: DOUBLE>>)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nested_map_struct_table
PREHOOK: query: create table nested_struct_array_table (
nested_struct_array struct<s:string, i:bigint, a:array<int>>)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nested_struct_array_table
POSTHOOK: query: create table nested_struct_array_table (
nested_struct_array struct<s:string, i:bigint, a:array<int>>)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nested_struct_array_table
PREHOOK: query: create table nested_struct_map_table (
nested_struct_map struct<s:string, i:bigint, m:map<string,string>>)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nested_struct_map_table
POSTHOOK: query: create table nested_struct_map_table (
nested_struct_map struct<s:string, i:bigint, m:map<string,string>>)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nested_struct_map_table
PREHOOK: query: create table nested_struct_struct_table (
nested_struct_struct struct<s:string, i:bigint, s2:struct<latitude: DOUBLE, longitude: DOUBLE>>)
STORED AS PARQUET
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nested_struct_struct_table
POSTHOOK: query: create table nested_struct_struct_table (
nested_struct_struct struct<s:string, i:bigint, s2:struct<latitude: DOUBLE, longitude: DOUBLE>>)
STORED AS PARQUET
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nested_struct_struct_table
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_array_array_table
PREHOOK: type: QUERY
PREHOOK: Input: default@nested_array_array_table
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_array_array_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nested_array_array_table
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: nested_array_array_table
                  Statistics: Num rows: 1 Data size: 1280 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: nested_array_array (type: array<array<int>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 1280 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 1280 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs (cache only)
            Map Vectorization:
                enabled: false
                enabledConditionsNotMet: Row deserialization of vectorized input format not supported IS false, hive.vectorized.use.vectorized.input.format IS true AND hive.vectorized.input.format.excludes NOT CONTAINS org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat IS false
                inputFileFormats: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_array_map_table
PREHOOK: type: QUERY
PREHOOK: Input: default@nested_array_map_table
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_array_map_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nested_array_map_table
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: nested_array_map_table
                  Statistics: Num rows: 1 Data size: 9280 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: nested_array_map (type: array<map<string,string>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 9280 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 9280 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs (cache only)
            Map Vectorization:
                enabled: false
                enabledConditionsNotMet: Row deserialization of vectorized input format not supported IS false, hive.vectorized.use.vectorized.input.format IS true AND hive.vectorized.input.format.excludes NOT CONTAINS org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat IS false
                inputFileFormats: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_array_map_table
PREHOOK: type: QUERY
PREHOOK: Input: default@nested_array_map_table
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_array_map_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nested_array_map_table
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: nested_array_map_table
                  Statistics: Num rows: 1 Data size: 9280 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: nested_array_map (type: array<map<string,string>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 9280 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 9280 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs (cache only)
            Map Vectorization:
                enabled: false
                enabledConditionsNotMet: Row deserialization of vectorized input format not supported IS false, hive.vectorized.use.vectorized.input.format IS true AND hive.vectorized.input.format.excludes NOT CONTAINS org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat IS false
                inputFileFormats: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_map_array_table
PREHOOK: type: QUERY
PREHOOK: Input: default@nested_map_array_table
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_map_array_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nested_map_array_table
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: nested_map_array_table
                  Statistics: Num rows: 1 Data size: 856 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: nested_map_array (type: map<string,array<int>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 856 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 856 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs (cache only)
            Map Vectorization:
                enabled: false
                enabledConditionsNotMet: Row deserialization of vectorized input format not supported IS false, hive.vectorized.use.vectorized.input.format IS true AND hive.vectorized.input.format.excludes NOT CONTAINS org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat IS false
                inputFileFormats: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_map_map_table
PREHOOK: type: QUERY
PREHOOK: Input: default@nested_map_map_table
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_map_map_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nested_map_map_table
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: nested_map_map_table
                  Statistics: Num rows: 1 Data size: 1656 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: nested_map_map (type: map<string,map<string,string>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 1656 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 1656 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs (cache only)
            Map Vectorization:
                enabled: false
                enabledConditionsNotMet: Row deserialization of vectorized input format not supported IS false, hive.vectorized.use.vectorized.input.format IS true AND hive.vectorized.input.format.excludes NOT CONTAINS org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat IS false
                inputFileFormats: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_map_struct_table
PREHOOK: type: QUERY
PREHOOK: Input: default@nested_map_struct_table
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_map_struct_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nested_map_struct_table
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: nested_map_struct_table
                  Statistics: Num rows: 1 Data size: 800 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: nested_map_struct (type: map<string,struct<latitude:double,longitude:double>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 800 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 800 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs (cache only)
            Map Vectorization:
                enabled: false
                enabledConditionsNotMet: Row deserialization of vectorized input format not supported IS false, hive.vectorized.use.vectorized.input.format IS true AND hive.vectorized.input.format.excludes NOT CONTAINS org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat IS false
                inputFileFormats: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_struct_array_table
PREHOOK: type: QUERY
PREHOOK: Input: default@nested_struct_array_table
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_struct_array_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nested_struct_array_table
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: nested_struct_array_table
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: nested_struct_array (type: struct<s:string,i:bigint,a:array<int>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs (cache only)
            Map Vectorization:
                enabled: false
                enabledConditionsNotMet: Row deserialization of vectorized input format not supported IS false, hive.vectorized.use.vectorized.input.format IS true AND hive.vectorized.input.format.excludes NOT CONTAINS org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat IS false
                inputFileFormats: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_struct_map_table
PREHOOK: type: QUERY
PREHOOK: Input: default@nested_struct_map_table
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_struct_map_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nested_struct_map_table
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: nested_struct_map_table
                  Statistics: Num rows: 1 Data size: 1168 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: nested_struct_map (type: struct<s:string,i:bigint,m:map<string,string>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 1168 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 1168 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs (cache only)
            Map Vectorization:
                enabled: false
                enabledConditionsNotMet: Row deserialization of vectorized input format not supported IS false, hive.vectorized.use.vectorized.input.format IS true AND hive.vectorized.input.format.excludes NOT CONTAINS org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat IS false
                inputFileFormats: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_struct_struct_table
PREHOOK: type: QUERY
PREHOOK: Input: default@nested_struct_struct_table
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM nested_struct_struct_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nested_struct_struct_table
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: nested_struct_struct_table
                  Statistics: Num rows: 1 Data size: 312 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: nested_struct_struct (type: struct<s:string,i:bigint,s2:struct<latitude:double,longitude:double>>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 312 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 312 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs (cache only)
            Map Vectorization:
                enabled: false
                enabledConditionsNotMet: Row deserialization of vectorized input format not supported IS false, hive.vectorized.use.vectorized.input.format IS true AND hive.vectorized.input.format.excludes NOT CONTAINS org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat IS false
                inputFileFormats: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

