PREHOOK: query: CREATE EXTERNAL TABLE t1(
   a int,
   b int,
   c int,
   d int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1
POSTHOOK: query: CREATE EXTERNAL TABLE t1(
   a int,
   b int,
   c int,
   d int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1
PREHOOK: query: explain
SELECT * FROM (
  SELECT a,
         b,
         c,
         d,
         DENSE_RANK() OVER (PARTITION BY a,c ORDER BY d DESC) AS drank
  FROM (
     select distinct(a),
            b,
            c,
            d
     FROM t1
     ) subA
 ) subB
 WHERE subB.drank <= 13 limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
#### A masked pattern was here ####
POSTHOOK: query: explain
SELECT * FROM (
  SELECT a,
         b,
         c,
         d,
         DENSE_RANK() OVER (PARTITION BY a,c ORDER BY d DESC) AS drank
  FROM (
     select distinct(a),
            b,
            c,
            d
     FROM t1
     ) subA
 ) subB
 WHERE subB.drank <= 13 limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: a (type: int), b (type: int), c (type: int), d (type: int)
                    outputColumnNames: a, b, c, d
                    Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      keys: a (type: int), b (type: int), c (type: int), d (type: int)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int)
                        null sort order: zzzz
                        sort order: ++++
                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int)
                        Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int), KEY._col3 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                Top N Key Operator
                  sort order: ++-
                  keys: _col0 (type: int), _col2 (type: int), _col3 (type: int)
                  null sort order: aaa
                  Map-reduce partition columns: _col0 (type: int), _col2 (type: int)
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                  top n: 14
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col2 (type: int), _col3 (type: int)
                    null sort order: aaa
                    sort order: ++-
                    Map-reduce partition columns: _col0 (type: int), _col2 (type: int)
                    Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: int)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: int), KEY.reducesinkkey1 (type: int), KEY.reducesinkkey2 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: int, _col1: int, _col2: int, _col3: int
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col3 DESC NULLS FIRST
                        partition by: _col0, _col2
                        raw input shape:
                        window functions:
                            window function definition
                              alias: DENSE_RANK_window_0
                              arguments: _col3
                              name: DENSE_RANK
                              window function: GenericUDAFDenseRankEvaluator
                              window frame: ROWS PRECEDING(MAX)~FOLLOWING(MAX)
                              isPivotResult: true
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (DENSE_RANK_window_0 <= 13) (type: boolean)
                    Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                    Limit
                      Number of rows: 1
                      Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), DENSE_RANK_window_0 (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4
                        Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

