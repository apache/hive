PREHOOK: query: CREATE TABLE u1 as select key, value from src order by key limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@u1
POSTHOOK: query: CREATE TABLE u1 as select key, value from src order by key limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@u1
POSTHOOK: Lineage: u1.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: u1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: CREATE TABLE u2 as select key, value from src order by key limit 3
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@u2
POSTHOOK: query: CREATE TABLE u2 as select key, value from src order by key limit 3
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@u2
POSTHOOK: Lineage: u2.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: u2.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: CREATE TABLE u3 as select key, value from src order by key desc limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@u3
POSTHOOK: query: CREATE TABLE u3 as select key, value from src order by key desc limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@u3
POSTHOOK: Lineage: u3.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: u3.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from u1
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
#### A masked pattern was here ####
POSTHOOK: query: select * from u1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
PREHOOK: query: select * from u2
PREHOOK: type: QUERY
PREHOOK: Input: default@u2
#### A masked pattern was here ####
POSTHOOK: query: select * from u2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u2
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
PREHOOK: query: select * from u3
PREHOOK: type: QUERY
PREHOOK: Input: default@u3
#### A masked pattern was here ####
POSTHOOK: query: select * from u3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u3
#### A masked pattern was here ####
96	val_96
97	val_97
97	val_97
98	val_98
98	val_98
PREHOOK: query: select key, value from 
(
select key, value from u1
union all
select key, value from u2
union all
select key as key, value from u3
) tab
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
#### A masked pattern was here ####
POSTHOOK: query: select key, value from 
(
select key, value from u1
union all
select key, value from u2
union all
select key as key, value from u3
) tab
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
96	val_96
97	val_97
97	val_97
98	val_98
98	val_98
PREHOOK: query: select key, value from 
(
select key, value from u1
union 
select key, value from u2
union all
select key, value from u3
) tab
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
#### A masked pattern was here ####
POSTHOOK: query: select key, value from 
(
select key, value from u1
union 
select key, value from u2
union all
select key, value from u3
) tab
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
96	val_96
97	val_97
97	val_97
98	val_98
98	val_98
PREHOOK: query: select key, value from 
(
select key, value from u1
union distinct
select key, value from u2
union all
select key as key, value from u3
) tab
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
#### A masked pattern was here ####
POSTHOOK: query: select key, value from 
(
select key, value from u1
union distinct
select key, value from u2
union all
select key as key, value from u3
) tab
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
96	val_96
97	val_97
97	val_97
98	val_98
98	val_98
PREHOOK: query: select key, value from 
(
select key, value from u1
union all
select key, value from u2
union
select key, value from u3
) tab
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
#### A masked pattern was here ####
POSTHOOK: query: select key, value from 
(
select key, value from u1
union all
select key, value from u2
union
select key, value from u3
) tab
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
96	val_96
97	val_97
98	val_98
PREHOOK: query: select key, value from 
(
select key, value from u1
union 
select key, value from u2
union
select key as key, value from u3
) tab
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
#### A masked pattern was here ####
POSTHOOK: query: select key, value from 
(
select key, value from u1
union 
select key, value from u2
union
select key as key, value from u3
) tab
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
96	val_96
97	val_97
98	val_98
PREHOOK: query: select distinct * from 
(
select key, value from u1
union all 
select key, value from u2
union all
select key as key, value from u3
) tab
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
#### A masked pattern was here ####
POSTHOOK: query: select distinct * from 
(
select key, value from u1
union all 
select key, value from u2
union all
select key as key, value from u3
) tab
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
96	val_96
97	val_97
98	val_98
PREHOOK: query: select distinct * from 
(
select distinct * from u1
union  
select key, value from u2
union all
select key as key, value from u3
) tab
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
#### A masked pattern was here ####
POSTHOOK: query: select distinct * from 
(
select distinct * from u1
union  
select key, value from u2
union all
select key as key, value from u3
) tab
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
96	val_96
97	val_97
98	val_98
PREHOOK: query: drop view if exists v
PREHOOK: type: DROPVIEW
POSTHOOK: query: drop view if exists v
POSTHOOK: type: DROPVIEW
PREHOOK: query: create view v as select distinct * from 
(
select distinct * from u1
union  
select key, value from u2
union all
select key as key, value from u3
) tab
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
PREHOOK: Output: database:default
PREHOOK: Output: default@v
POSTHOOK: query: create view v as select distinct * from 
(
select distinct * from u1
union  
select key, value from u2
union all
select key as key, value from u3
) tab
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v
POSTHOOK: Lineage: v.key EXPRESSION [(u1)u1.FieldSchema(name:key, type:string, comment:null), (u2)u2.FieldSchema(name:key, type:string, comment:null), (u3)u3.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: v.value EXPRESSION [(u1)u1.FieldSchema(name:value, type:string, comment:null), (u2)u2.FieldSchema(name:value, type:string, comment:null), (u3)u3.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: describe extended v
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@v
POSTHOOK: query: describe extended v
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@v
key                 	string              	                    
value               	string              	                    
	 	 
#### A masked pattern was here ####
(	 	 
select distinct * from u1	 	 
union  	 	 
select key, value from u2	 	 
union all	 	 
select key as key, value from u3	 	 
) tab, viewExpandedText:select distinct `tab`.`key`, `tab`.`value` from 	 	 
(	 	 
select distinct `u1`.`key`, `u1`.`value` from `default`.`u1`	 	 
union  	 	 
select `u2`.`key`, `u2`.`value` from `default`.`u2`	 	 
union all	 	 
select `u3`.`key` as `key`, `u3`.`value` from `default`.`u3`	 	 
) `tab`, tableType:VIRTUAL_VIEW, rewriteEnabled:false)		 
PREHOOK: query: select * from v
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
PREHOOK: Input: default@v
#### A masked pattern was here ####
POSTHOOK: query: select * from v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
POSTHOOK: Input: default@v
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
96	val_96
97	val_97
98	val_98
PREHOOK: query: drop view if exists v
PREHOOK: type: DROPVIEW
PREHOOK: Input: default@v
PREHOOK: Output: default@v
POSTHOOK: query: drop view if exists v
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: default@v
POSTHOOK: Output: default@v
PREHOOK: query: create view v as select tab.* from 
(
select distinct * from u1
union  
select distinct * from u2
) tab
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Output: database:default
PREHOOK: Output: default@v
POSTHOOK: query: create view v as select tab.* from 
(
select distinct * from u1
union  
select distinct * from u2
) tab
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v
POSTHOOK: Lineage: v.key EXPRESSION [(u1)u1.FieldSchema(name:key, type:string, comment:null), (u2)u2.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: v.value EXPRESSION [(u1)u1.FieldSchema(name:value, type:string, comment:null), (u2)u2.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: describe extended v
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@v
POSTHOOK: query: describe extended v
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@v
key                 	string              	                    
value               	string              	                    
	 	 
#### A masked pattern was here ####
(	 	 
select distinct * from u1	 	 
union  	 	 
select distinct * from u2	 	 
) tab, viewExpandedText:select `tab`.`key`, `tab`.`value` from 	 	 
(	 	 
select distinct `u1`.`key`, `u1`.`value` from `default`.`u1`	 	 
union  	 	 
select distinct `u2`.`key`, `u2`.`value` from `default`.`u2`	 	 
) `tab`, tableType:VIRTUAL_VIEW, rewriteEnabled:false)		 
PREHOOK: query: select * from v
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@v
#### A masked pattern was here ####
POSTHOOK: query: select * from v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@v
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
PREHOOK: query: drop view if exists v
PREHOOK: type: DROPVIEW
PREHOOK: Input: default@v
PREHOOK: Output: default@v
POSTHOOK: query: drop view if exists v
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: default@v
POSTHOOK: Output: default@v
PREHOOK: query: create view v as select * from 
(
select distinct u1.* from u1
union all 
select distinct * from u2
) tab
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Output: database:default
PREHOOK: Output: default@v
POSTHOOK: query: create view v as select * from 
(
select distinct u1.* from u1
union all 
select distinct * from u2
) tab
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v
POSTHOOK: Lineage: v.key EXPRESSION [(u1)u1.FieldSchema(name:key, type:string, comment:null), (u2)u2.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: v.value EXPRESSION [(u1)u1.FieldSchema(name:value, type:string, comment:null), (u2)u2.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: describe extended v
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@v
POSTHOOK: query: describe extended v
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@v
key                 	string              	                    
value               	string              	                    
	 	 
#### A masked pattern was here ####
(	 	 
select distinct u1.* from u1	 	 
union all 	 	 
select distinct * from u2	 	 
) tab, viewExpandedText:select `tab`.`key`, `tab`.`value` from 	 	 
(	 	 
select distinct `u1`.`key`, `u1`.`value` from `default`.`u1`	 	 
union all 	 	 
select distinct `u2`.`key`, `u2`.`value` from `default`.`u2`	 	 
) `tab`, tableType:VIRTUAL_VIEW, rewriteEnabled:false)		 
PREHOOK: query: select * from v
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@v
#### A masked pattern was here ####
POSTHOOK: query: select * from v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@v
#### A masked pattern was here ####
0	val_0
0	val_0
10	val_10
100	val_100
PREHOOK: query: select distinct * from 
(
select key, value from u1
union all 
select key, value from u2
union 
select key as key, value from u3
) tab
PREHOOK: type: QUERY
PREHOOK: Input: default@u1
PREHOOK: Input: default@u2
PREHOOK: Input: default@u3
#### A masked pattern was here ####
POSTHOOK: query: select distinct * from 
(
select key, value from u1
union all 
select key, value from u2
union 
select key as key, value from u3
) tab
POSTHOOK: type: QUERY
POSTHOOK: Input: default@u1
POSTHOOK: Input: default@u2
POSTHOOK: Input: default@u3
#### A masked pattern was here ####
0	val_0
10	val_10
100	val_100
96	val_96
97	val_97
98	val_98
