PREHOOK: query: create table inputTbl1_n10(key string, val string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@inputTbl1_n10
POSTHOOK: query: create table inputTbl1_n10(key string, val string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@inputTbl1_n10
PREHOOK: query: create table outputTbl1_n14(key string, `values` bigint) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl1_n14
POSTHOOK: query: create table outputTbl1_n14(key string, `values` bigint) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl1_n14
PREHOOK: query: create table outputTbl2_n4(key string, `values` bigint) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl2_n4
POSTHOOK: query: create table outputTbl2_n4(key string, `values` bigint) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl2_n4
PREHOOK: query: load data local inpath '../../data/files/T1.txt' into table inputTbl1_n10
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@inputtbl1_n10
POSTHOOK: query: load data local inpath '../../data/files/T1.txt' into table inputTbl1_n10
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@inputtbl1_n10
PREHOOK: query: explain
FROM (
  SELECT key, count(1) as `values` from inputTbl1_n10 group by key
  UNION ALL
  SELECT key, count(1) as `values` from inputTbl1_n10 group by key
) a
insert overwrite table outputTbl1_n14 select *
insert overwrite table outputTbl2_n4 select *
PREHOOK: type: QUERY
PREHOOK: Input: default@cte_suggestion_0
PREHOOK: Input: default@inputtbl1_n10
PREHOOK: Output: default@outputtbl1_n14
PREHOOK: Output: default@outputtbl2_n4
POSTHOOK: query: explain
FROM (
  SELECT key, count(1) as `values` from inputTbl1_n10 group by key
  UNION ALL
  SELECT key, count(1) as `values` from inputTbl1_n10 group by key
) a
insert overwrite table outputTbl1_n14 select *
insert overwrite table outputTbl2_n4 select *
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cte_suggestion_0
POSTHOOK: Input: default@inputtbl1_n10
POSTHOOK: Output: default@outputtbl1_n14
POSTHOOK: Output: default@outputtbl2_n4
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-5 depends on stages: Stage-2, Stage-0
  Stage-6 depends on stages: Stage-5
  Stage-3 depends on stages: Stage-6
  Stage-4 depends on stages: Stage-6
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: inputtbl1_n10
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.cte_suggestion_0

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-5
    Tez
#### A masked pattern was here ####
      Edges:
        Map 3 <- Union 4 (CONTAINS)
        Map 5 <- Union 4 (CONTAINS)
#### A masked pattern was here ####
      Vertices:
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: cte_suggestion_0
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), $f1 (type: bigint)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.outputtbl1_n14
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.outputtbl2_n4
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: cte_suggestion_0
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), $f1 (type: bigint)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.outputtbl1_n14
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 2 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.outputtbl2_n4
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Union 4 
            Vertex: Union 4

  Stage: Stage-6
    Dependency Collection

  Stage: Stage-3
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n14

  Stage: Stage-4
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl2_n4

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: FROM (
  SELECT key, count(1) as `values` from inputTbl1_n10 group by key
  UNION ALL
  SELECT key, count(1) as `values` from inputTbl1_n10 group by key
) a
insert overwrite table outputTbl1_n14 select *
insert overwrite table outputTbl2_n4 select *
PREHOOK: type: QUERY
PREHOOK: Input: default@cte_suggestion_0
PREHOOK: Input: default@inputtbl1_n10
PREHOOK: Output: database:default
PREHOOK: Output: default@cte_suggestion_0
PREHOOK: Output: default@outputtbl1_n14
PREHOOK: Output: default@outputtbl2_n4
#### A masked pattern was here ####
POSTHOOK: query: FROM (
  SELECT key, count(1) as `values` from inputTbl1_n10 group by key
  UNION ALL
  SELECT key, count(1) as `values` from inputTbl1_n10 group by key
) a
insert overwrite table outputTbl1_n14 select *
insert overwrite table outputTbl2_n4 select *
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cte_suggestion_0
POSTHOOK: Input: default@inputtbl1_n10
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cte_suggestion_0
POSTHOOK: Output: default@outputtbl1_n14
POSTHOOK: Output: default@outputtbl2_n4
#### A masked pattern was here ####
POSTHOOK: Lineage: outputtbl1_n14.key EXPRESSION [(cte_suggestion_0)cte_suggestion_0.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1_n14.values EXPRESSION [(cte_suggestion_0)cte_suggestion_0.FieldSchema(name:$f1, type:bigint, comment:null), ]
POSTHOOK: Lineage: outputtbl2_n4.key EXPRESSION [(cte_suggestion_0)cte_suggestion_0.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl2_n4.values EXPRESSION [(cte_suggestion_0)cte_suggestion_0.FieldSchema(name:$f1, type:bigint, comment:null), ]
PREHOOK: query: select * from outputTbl1_n14
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n14
#### A masked pattern was here ####
POSTHOOK: query: select * from outputTbl1_n14
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n14
#### A masked pattern was here ####
1	1
1	1
2	1
2	1
3	1
3	1
7	1
7	1
8	2
8	2
PREHOOK: query: select * from outputTbl2_n4
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl2_n4
#### A masked pattern was here ####
POSTHOOK: query: select * from outputTbl2_n4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl2_n4
#### A masked pattern was here ####
1	1
1	1
2	1
2	1
3	1
3	1
7	1
7	1
8	2
8	2
