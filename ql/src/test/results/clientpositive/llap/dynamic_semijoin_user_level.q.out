PREHOOK: query: create table alltypesorc_int_n2 ( cint int, cstring string ) stored as ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alltypesorc_int_n2
POSTHOOK: query: create table alltypesorc_int_n2 ( cint int, cstring string ) stored as ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alltypesorc_int_n2
PREHOOK: query: create table srcpart_date_n9 (key string, value string) partitioned by (ds string ) stored as ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcpart_date_n9
POSTHOOK: query: create table srcpart_date_n9 (key string, value string) partitioned by (ds string ) stored as ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcpart_date_n9
PREHOOK: query: CREATE TABLE srcpart_small_n4(key1 STRING, value1 STRING) partitioned by (ds string) STORED as ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcpart_small_n4
POSTHOOK: query: CREATE TABLE srcpart_small_n4(key1 STRING, value1 STRING) partitioned by (ds string) STORED as ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcpart_small_n4
PREHOOK: query: alter table srcpart_date_n9 add partition (ds = "2008-04-08")
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@srcpart_date_n9
POSTHOOK: query: alter table srcpart_date_n9 add partition (ds = "2008-04-08")
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@srcpart_date_n9
POSTHOOK: Output: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: query: alter table srcpart_date_n9 add partition (ds = "2008-04-09")
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@srcpart_date_n9
POSTHOOK: query: alter table srcpart_date_n9 add partition (ds = "2008-04-09")
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@srcpart_date_n9
POSTHOOK: Output: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: query: alter table srcpart_small_n4 add partition (ds = "2008-04-08")
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@srcpart_small_n4
POSTHOOK: query: alter table srcpart_small_n4 add partition (ds = "2008-04-08")
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@srcpart_small_n4
POSTHOOK: Output: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: query: alter table srcpart_small_n4 add partition (ds = "2008-04-09")
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@srcpart_small_n4
POSTHOOK: query: alter table srcpart_small_n4 add partition (ds = "2008-04-09")
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@srcpart_small_n4
POSTHOOK: Output: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: query: insert overwrite table alltypesorc_int_n2 select cint, cstring1 from alltypesorc
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: default@alltypesorc_int_n2
POSTHOOK: query: insert overwrite table alltypesorc_int_n2 select cint, cstring1 from alltypesorc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: default@alltypesorc_int_n2
POSTHOOK: Lineage: alltypesorc_int_n2.cint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: alltypesorc_int_n2.cstring SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring1, type:string, comment:null), ]
PREHOOK: query: insert overwrite table srcpart_date_n9 partition (ds = "2008-04-08" ) select key, value from srcpart where ds = "2008-04-08"
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: query: insert overwrite table srcpart_date_n9 partition (ds = "2008-04-08" ) select key, value from srcpart where ds = "2008-04-08"
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Lineage: srcpart_date_n9 PARTITION(ds=2008-04-08).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_date_n9 PARTITION(ds=2008-04-08).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table srcpart_date_n9 partition (ds = "2008-04-09") select key, value from srcpart where ds = "2008-04-09"
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: query: insert overwrite table srcpart_date_n9 partition (ds = "2008-04-09") select key, value from srcpart where ds = "2008-04-09"
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Lineage: srcpart_date_n9 PARTITION(ds=2008-04-09).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_date_n9 PARTITION(ds=2008-04-09).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table srcpart_small_n4 partition (ds = "2008-04-09") select key, value from srcpart where ds = "2008-04-09" limit 20
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
PREHOOK: Output: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: query: insert overwrite table srcpart_small_n4 partition (ds = "2008-04-09") select key, value from srcpart where ds = "2008-04-09" limit 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
POSTHOOK: Output: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Lineage: srcpart_small_n4 PARTITION(ds=2008-04-09).key1 SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: srcpart_small_n4 PARTITION(ds=2008-04-09).value1 SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: analyze table alltypesorc_int_n2 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@alltypesorc_int_n2
PREHOOK: Output: default@alltypesorc_int_n2
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: analyze table alltypesorc_int_n2 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@alltypesorc_int_n2
POSTHOOK: Output: default@alltypesorc_int_n2
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: analyze table srcpart_date_n9 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Output: default@srcpart_date_n9
PREHOOK: Output: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Output: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: analyze table srcpart_date_n9 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Output: default@srcpart_date_n9
POSTHOOK: Output: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Output: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: analyze table srcpart_small_n4 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: default@srcpart_small_n4
PREHOOK: Output: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Output: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: analyze table srcpart_small_n4 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: default@srcpart_small_n4
POSTHOOK: Output: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Output: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 5 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Map 4 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_14]
        Group By Operator [GBY_12] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_11]
            Group By Operator [GBY_10] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_29] (rows=2200 width=87)
                Conds:RS_6._col0=RS_7._col0(Inner)
              <-Map 4 [SIMPLE_EDGE] llap
                PARTITION_ONLY_SHUFFLE [RS_7]
                  PartitionCols:_col0
                  Select Operator [SEL_5] (rows=20 width=87)
                    Output:["_col0"]
                    Filter Operator [FIL_18] (rows=20 width=87)
                      predicate:key1 is not null
                      TableScan [TS_3] (rows=20 width=87)
                        default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1"]
              <-Map 1 [SIMPLE_EDGE] llap
                SHUFFLE [RS_6]
                  PartitionCols:_col0
                  Select Operator [SEL_2] (rows=2000 width=87)
                    Output:["_col0"]
                    Filter Operator [FIL_17] (rows=2000 width=87)
                      predicate:((key BETWEEN DynamicValue(RS_7_srcpart_small_n4_key1_min) AND DynamicValue(RS_7_srcpart_small_n4_key1_max) and in_bloom_filter(key, DynamicValue(RS_7_srcpart_small_n4_key1_bloom_filter))) and key is not null)
                      TableScan [TS_0] (rows=2000 width=87)
                        default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key"]
                      <-Reducer 5 [BROADCAST_EDGE] llap
                        BROADCAST [RS_23]
                          Group By Operator [GBY_22] (rows=1 width=639)
                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=20)"]
                          <-Map 4 [CUSTOM_SIMPLE_EDGE] llap
                            PARTITION_ONLY_SHUFFLE [RS_21]
                              Group By Operator [GBY_20] (rows=1 width=639)
                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=20)"]
                                Select Operator [SEL_19] (rows=20 width=87)
                                  Output:["_col0"]
                                   Please refer to the previous Select Operator [SEL_5]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
176
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.ds)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.ds)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_14]
        Group By Operator [GBY_12] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_11]
            Group By Operator [GBY_10] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_22] (rows=2200 width=87)
                Conds:RS_6._col0=RS_7._col0(Inner)
              <-Map 1 [SIMPLE_EDGE] llap
                SHUFFLE [RS_6]
                  PartitionCols:_col0
                  Select Operator [SEL_2] (rows=2000 width=87)
                    Output:["_col0"]
                    Filter Operator [FIL_17] (rows=2000 width=87)
                      predicate:key is not null
                      TableScan [TS_0] (rows=2000 width=87)
                        default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key"]
                Dynamic Partitioning Event Operator [EVENT_21] (rows=316 width=87)
                  Group By Operator [GBY_20] (rows=316 width=87)
                    Output:["_col0"],keys:_col0
                    Select Operator [SEL_19] (rows=2000 width=87)
                      Output:["_col0"]
                       Please refer to the previous Select Operator [SEL_2]
              <-Map 4 [SIMPLE_EDGE] llap
                SHUFFLE [RS_7]
                  PartitionCols:_col0
                  Select Operator [SEL_5] (rows=20 width=360)
                    Output:["_col0"]
                    TableScan [TS_3] (rows=20 width=360)
                      default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:COMPLETE

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.ds)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.ds)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
0
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_small_n4.key1 = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_small_n4.key1 = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_18]
        Group By Operator [GBY_16] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_15]
            Group By Operator [GBY_14] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_28] (rows=20182 width=70)
                Conds:RS_9._col0=RS_10._col0(Inner),RS_10._col0=RS_11._col0(Inner)
              <-Map 1 [SIMPLE_EDGE] llap
                SHUFFLE [RS_9]
                  PartitionCols:_col0
                  Select Operator [SEL_2] (rows=2000 width=87)
                    Output:["_col0"]
                    Filter Operator [FIL_25] (rows=2000 width=87)
                      predicate:key is not null
                      TableScan [TS_0] (rows=2000 width=87)
                        default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key"]
              <-Map 4 [SIMPLE_EDGE] llap
                SHUFFLE [RS_10]
                  PartitionCols:_col0
                  Select Operator [SEL_5] (rows=20 width=87)
                    Output:["_col0"]
                    Filter Operator [FIL_26] (rows=20 width=87)
                      predicate:key1 is not null
                      TableScan [TS_3] (rows=20 width=87)
                        default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1"]
              <-Map 5 [SIMPLE_EDGE] llap
                SHUFFLE [RS_11]
                  PartitionCols:_col0
                  Select Operator [SEL_8] (rows=9174 width=70)
                    Output:["_col0"]
                    Filter Operator [FIL_27] (rows=9174 width=70)
                      predicate:cstring is not null
                      TableScan [TS_6] (rows=12288 width=70)
                        default@alltypesorc_int_n2,alltypesorc_int_n2,Tbl:COMPLETE,Col:COMPLETE,Output:["cstring"]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_small_n4.key1 = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc_int_n2
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_small_n4.key1 = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc_int_n2
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
0
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_small_n4.key1 = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_small_n4.key1 = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 6 (BROADCAST_EDGE)
Map 7 <- Reducer 4 (BROADCAST_EDGE), Reducer 6 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 4 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Map 5 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_18]
        Group By Operator [GBY_16] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_15]
            Group By Operator [GBY_14] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_46] (rows=20182 width=70)
                Conds:RS_9._col0=RS_10._col0(Inner),RS_10._col0=RS_11._col0(Inner)
              <-Map 1 [SIMPLE_EDGE] llap
                PARTITION_ONLY_SHUFFLE [RS_9]
                  PartitionCols:_col0
                  Select Operator [SEL_2] (rows=2000 width=87)
                    Output:["_col0"]
                    Filter Operator [FIL_25] (rows=2000 width=87)
                      predicate:((key BETWEEN DynamicValue(RS_10_srcpart_small_n4_key1_min) AND DynamicValue(RS_10_srcpart_small_n4_key1_max) and in_bloom_filter(key, DynamicValue(RS_10_srcpart_small_n4_key1_bloom_filter))) and key is not null)
                      TableScan [TS_0] (rows=2000 width=87)
                        default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key"]
                      <-Reducer 6 [BROADCAST_EDGE] llap
                        BROADCAST [RS_32]
                          Group By Operator [GBY_31] (rows=1 width=639)
                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=20)"]
                          <-Map 5 [CUSTOM_SIMPLE_EDGE] llap
                            PARTITION_ONLY_SHUFFLE [RS_30]
                              Group By Operator [GBY_29] (rows=1 width=639)
                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=20)"]
                                Select Operator [SEL_28] (rows=20 width=87)
                                  Output:["_col0"]
                                  Select Operator [SEL_5] (rows=20 width=87)
                                    Output:["_col0"]
                                    Filter Operator [FIL_26] (rows=20 width=87)
                                      predicate:key1 is not null
                                      TableScan [TS_3] (rows=20 width=87)
                                        default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1"]
              <-Map 5 [SIMPLE_EDGE] llap
                PARTITION_ONLY_SHUFFLE [RS_10]
                  PartitionCols:_col0
                   Please refer to the previous Select Operator [SEL_5]
              <-Map 7 [SIMPLE_EDGE] llap
                SHUFFLE [RS_11]
                  PartitionCols:_col0
                  Select Operator [SEL_8] (rows=9174 width=70)
                    Output:["_col0"]
                    Filter Operator [FIL_27] (rows=9174 width=70)
                      predicate:((cstring BETWEEN DynamicValue(RS_10_srcpart_small_n4_key1_min) AND DynamicValue(RS_10_srcpart_small_n4_key1_max) and in_bloom_filter(cstring, DynamicValue(RS_10_srcpart_small_n4_key1_bloom_filter))) and (cstring BETWEEN DynamicValue(RS_9_srcpart_date_n9_key_min) AND DynamicValue(RS_9_srcpart_date_n9_key_max) and in_bloom_filter(cstring, DynamicValue(RS_9_srcpart_date_n9_key_bloom_filter))) and cstring is not null)
                      TableScan [TS_6] (rows=12288 width=70)
                        default@alltypesorc_int_n2,alltypesorc_int_n2,Tbl:COMPLETE,Col:COMPLETE,Output:["cstring"]
                      <-Reducer 6 [BROADCAST_EDGE] llap
                        BROADCAST [RS_45]
                           Please refer to the previous Group By Operator [GBY_31]
                      <-Reducer 4 [BROADCAST_EDGE] llap
                        BROADCAST [RS_44]
                          Group By Operator [GBY_41] (rows=1 width=552)
                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=316)"]
                          <-Map 1 [CUSTOM_SIMPLE_EDGE] llap
                            PARTITION_ONLY_SHUFFLE [RS_40]
                              Group By Operator [GBY_39] (rows=1 width=552)
                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=316)"]
                                Select Operator [SEL_38] (rows=2000 width=87)
                                  Output:["_col0"]
                                   Please refer to the previous Select Operator [SEL_2]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_small_n4.key1 = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc_int_n2
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_small_n4.key1 = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc_int_n2
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
0
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1 and srcpart_date_n9.value = srcpart_small_n4.value1)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1 and srcpart_date_n9.value = srcpart_small_n4.value1)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_14]
        Group By Operator [GBY_12] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_11]
            Group By Operator [GBY_10] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_19] (rows=2200 width=178)
                Conds:RS_6._col0, _col1=RS_7._col0, _col1(Inner)
              <-Map 1 [SIMPLE_EDGE] llap
                SHUFFLE [RS_6]
                  PartitionCols:_col0, _col1
                  Select Operator [SEL_2] (rows=2000 width=178)
                    Output:["_col0","_col1"]
                    Filter Operator [FIL_17] (rows=2000 width=178)
                      predicate:(key is not null and value is not null)
                      TableScan [TS_0] (rows=2000 width=178)
                        default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
              <-Map 4 [SIMPLE_EDGE] llap
                SHUFFLE [RS_7]
                  PartitionCols:_col0, _col1
                  Select Operator [SEL_5] (rows=20 width=178)
                    Output:["_col0","_col1"]
                    Filter Operator [FIL_18] (rows=20 width=178)
                      predicate:(key1 is not null and value1 is not null)
                      TableScan [TS_3] (rows=20 width=178)
                        default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1","value1"]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1 and srcpart_date_n9.value = srcpart_small_n4.value1)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1 and srcpart_date_n9.value = srcpart_small_n4.value1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
176
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1 and srcpart_date_n9.value = srcpart_small_n4.value1)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1 and srcpart_date_n9.value = srcpart_small_n4.value1)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 5 (BROADCAST_EDGE), Reducer 6 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Map 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Map 4 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_14]
        Group By Operator [GBY_12] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_11]
            Group By Operator [GBY_10] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_39] (rows=2200 width=178)
                Conds:RS_6._col0, _col1=RS_7._col0, _col1(Inner)
              <-Map 4 [SIMPLE_EDGE] llap
                PARTITION_ONLY_SHUFFLE [RS_7]
                  PartitionCols:_col0, _col1
                  Select Operator [SEL_5] (rows=20 width=178)
                    Output:["_col0","_col1"]
                    Filter Operator [FIL_18] (rows=20 width=178)
                      predicate:(key1 is not null and value1 is not null)
                      TableScan [TS_3] (rows=20 width=178)
                        default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1","value1"]
              <-Map 1 [SIMPLE_EDGE] llap
                SHUFFLE [RS_6]
                  PartitionCols:_col0, _col1
                  Select Operator [SEL_2] (rows=2000 width=178)
                    Output:["_col0","_col1"]
                    Filter Operator [FIL_17] (rows=2000 width=178)
                      predicate:((key BETWEEN DynamicValue(RS_7_srcpart_small_n4_key1_min) AND DynamicValue(RS_7_srcpart_small_n4_key1_max) and in_bloom_filter(key, DynamicValue(RS_7_srcpart_small_n4_key1_bloom_filter))) and (value BETWEEN DynamicValue(RS_7_srcpart_small_n4_value1_min) AND DynamicValue(RS_7_srcpart_small_n4_value1_max) and in_bloom_filter(value, DynamicValue(RS_7_srcpart_small_n4_value1_bloom_filter))) and key is not null and value is not null)
                      TableScan [TS_0] (rows=2000 width=178)
                        default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                      <-Reducer 5 [BROADCAST_EDGE] llap
                        BROADCAST [RS_23]
                          Group By Operator [GBY_22] (rows=1 width=730)
                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=20)"]
                          <-Map 4 [CUSTOM_SIMPLE_EDGE] llap
                            PARTITION_ONLY_SHUFFLE [RS_21]
                              Group By Operator [GBY_20] (rows=1 width=730)
                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=20)"]
                                Select Operator [SEL_19] (rows=20 width=178)
                                  Output:["_col0"]
                                   Please refer to the previous Select Operator [SEL_5]
                      <-Reducer 6 [BROADCAST_EDGE] llap
                        BROADCAST [RS_28]
                          Group By Operator [GBY_27] (rows=1 width=730)
                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=20)"]
                          <-Map 4 [CUSTOM_SIMPLE_EDGE] llap
                            PARTITION_ONLY_SHUFFLE [RS_26]
                              Group By Operator [GBY_25] (rows=1 width=730)
                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=20)"]
                                Select Operator [SEL_24] (rows=20 width=178)
                                  Output:["_col0"]
                                   Please refer to the previous Select Operator [SEL_5]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1 and srcpart_date_n9.value = srcpart_small_n4.value1)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1 and srcpart_date_n9.value = srcpart_small_n4.value1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
176
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE)
Reducer 3 <- Map 6 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 4 llap
      File Output Operator [FS_20]
        Group By Operator [GBY_18] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 3 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_17]
            Group By Operator [GBY_16] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_30] (rows=10091 width=70)
                Conds:RS_12._col1=RS_13._col0(Inner)
              <-Map 6 [SIMPLE_EDGE] llap
                SHUFFLE [RS_13]
                  PartitionCols:_col0
                  Select Operator [SEL_8] (rows=9174 width=70)
                    Output:["_col0"]
                    Filter Operator [FIL_28] (rows=9174 width=70)
                      predicate:cstring is not null
                      TableScan [TS_6] (rows=12288 width=70)
                        default@alltypesorc_int_n2,alltypesorc_int_n2,Tbl:COMPLETE,Col:COMPLETE,Output:["cstring"]
              <-Reducer 2 [SIMPLE_EDGE] llap
                SHUFFLE [RS_12]
                  PartitionCols:_col1
                  Merge Join Operator [MERGEJOIN_29] (rows=2200 width=178)
                    Conds:RS_9._col0=RS_10._col0(Inner),Output:["_col1"]
                  <-Map 1 [SIMPLE_EDGE] llap
                    SHUFFLE [RS_9]
                      PartitionCols:_col0
                      Select Operator [SEL_2] (rows=2000 width=178)
                        Output:["_col0","_col1"]
                        Filter Operator [FIL_26] (rows=2000 width=178)
                          predicate:(key is not null and value is not null)
                          TableScan [TS_0] (rows=2000 width=178)
                            default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                  <-Map 5 [SIMPLE_EDGE] llap
                    SHUFFLE [RS_10]
                      PartitionCols:_col0
                      Select Operator [SEL_5] (rows=20 width=87)
                        Output:["_col0"]
                        Filter Operator [FIL_27] (rows=20 width=87)
                          predicate:key1 is not null
                          TableScan [TS_3] (rows=20 width=87)
                            default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1"]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc_int_n2
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc_int_n2
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
0
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 7 (BROADCAST_EDGE)
Map 8 <- Reducer 5 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 6 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 4 llap
      File Output Operator [FS_20]
        Group By Operator [GBY_18] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 3 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_17]
            Group By Operator [GBY_16] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_50] (rows=10091 width=70)
                Conds:RS_12._col1=RS_13._col0(Inner)
              <-Reducer 2 [SIMPLE_EDGE] llap
                PARTITION_ONLY_SHUFFLE [RS_12]
                  PartitionCols:_col1
                  Merge Join Operator [MERGEJOIN_49] (rows=2200 width=178)
                    Conds:RS_9._col0=RS_10._col0(Inner),Output:["_col1"]
                  <-Map 6 [SIMPLE_EDGE] llap
                    PARTITION_ONLY_SHUFFLE [RS_10]
                      PartitionCols:_col0
                      Select Operator [SEL_5] (rows=20 width=87)
                        Output:["_col0"]
                        Filter Operator [FIL_27] (rows=20 width=87)
                          predicate:key1 is not null
                          TableScan [TS_3] (rows=20 width=87)
                            default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1"]
                  <-Map 1 [SIMPLE_EDGE] llap
                    SHUFFLE [RS_9]
                      PartitionCols:_col0
                      Select Operator [SEL_2] (rows=2000 width=178)
                        Output:["_col0","_col1"]
                        Filter Operator [FIL_26] (rows=2000 width=178)
                          predicate:((key BETWEEN DynamicValue(RS_10_srcpart_small_n4_key1_min) AND DynamicValue(RS_10_srcpart_small_n4_key1_max) and in_bloom_filter(key, DynamicValue(RS_10_srcpart_small_n4_key1_bloom_filter))) and key is not null and value is not null)
                          TableScan [TS_0] (rows=2000 width=178)
                            default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                          <-Reducer 7 [BROADCAST_EDGE] llap
                            BROADCAST [RS_33]
                              Group By Operator [GBY_32] (rows=1 width=639)
                                Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=20)"]
                              <-Map 6 [CUSTOM_SIMPLE_EDGE] llap
                                PARTITION_ONLY_SHUFFLE [RS_31]
                                  Group By Operator [GBY_30] (rows=1 width=639)
                                    Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=20)"]
                                    Select Operator [SEL_29] (rows=20 width=87)
                                      Output:["_col0"]
                                       Please refer to the previous Select Operator [SEL_5]
              <-Map 8 [SIMPLE_EDGE] llap
                SHUFFLE [RS_13]
                  PartitionCols:_col0
                  Select Operator [SEL_8] (rows=9174 width=70)
                    Output:["_col0"]
                    Filter Operator [FIL_28] (rows=9174 width=70)
                      predicate:((cstring BETWEEN DynamicValue(RS_12_srcpart_date_n9_value_min) AND DynamicValue(RS_12_srcpart_date_n9_value_max) and in_bloom_filter(cstring, DynamicValue(RS_12_srcpart_date_n9_value_bloom_filter))) and cstring is not null)
                      TableScan [TS_6] (rows=12288 width=70)
                        default@alltypesorc_int_n2,alltypesorc_int_n2,Tbl:COMPLETE,Col:COMPLETE,Output:["cstring"]
                      <-Reducer 5 [BROADCAST_EDGE] llap
                        BROADCAST [RS_48]
                          Group By Operator [GBY_47] (rows=1 width=552)
                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=2200)"]
                          <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
                            PARTITION_ONLY_SHUFFLE [RS_46]
                              Group By Operator [GBY_45] (rows=1 width=552)
                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=2200)"]
                                Select Operator [SEL_44] (rows=2200 width=178)
                                  Output:["_col0"]
                                   Please refer to the previous Merge Join Operator [MERGEJOIN_49]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc_int_n2
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc_int_n2
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
0
PREHOOK: query: EXPLAIN extended select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN extended select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Reducer 5 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Map 4 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcpart_date_n9
                  filterExpr: (key is not null and (key BETWEEN DynamicValue(RS_7_srcpart_small_n4_key1_min) AND DynamicValue(RS_7_srcpart_small_n4_key1_max) and in_bloom_filter(key, DynamicValue(RS_7_srcpart_small_n4_key1_bloom_filter)))) (type: boolean)
                  Statistics: Num rows: 2000 Data size: 174000 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: ((key BETWEEN DynamicValue(RS_7_srcpart_small_n4_key1_min) AND DynamicValue(RS_7_srcpart_small_n4_key1_max) and in_bloom_filter(key, DynamicValue(RS_7_srcpart_small_n4_key1_bloom_filter))) and key is not null) (type: boolean)
                    Statistics: Num rows: 2000 Data size: 174000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 2000 Data size: 174000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 2000 Data size: 174000 Basic stats: COMPLETE Column stats: COMPLETE
                        tag: 0
                        auto parallelism: true
            Execution mode: llap
            LLAP IO: all inputs
            Path -> Alias:
              hdfs://### HDFS PATH ### [srcpart_date_n9]
              hdfs://### HDFS PATH ### [srcpart_date_n9]
            Path -> Partition:
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: ds=2008-04-08
                  input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                  output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                  partition values:
                    ds 2008-04-08
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                    bucket_count -1
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.srcpart_date_n9
                    numFiles 1
                    numRows 1000
                    partition_columns ds
                    partition_columns.types string
                    rawDataSize 176000
                    serialization.ddl struct srcpart_date_n9 { string key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    totalSize 3052
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                
                    input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                    output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                    properties:
                      bucket_count -1
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.srcpart_date_n9
                      partition_columns ds
                      partition_columns.types string
                      serialization.ddl struct srcpart_date_n9 { string key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.ql.io.orc.OrcSerde
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    name: default.srcpart_date_n9
                  name: default.srcpart_date_n9
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: ds=2008-04-09
                  input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                  output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                  partition values:
                    ds 2008-04-09
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                    bucket_count -1
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.srcpart_date_n9
                    numFiles 1
                    numRows 1000
                    partition_columns ds
                    partition_columns.types string
                    rawDataSize 176000
                    serialization.ddl struct srcpart_date_n9 { string key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    totalSize 3052
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                
                    input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                    output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                    properties:
                      bucket_count -1
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.srcpart_date_n9
                      partition_columns ds
                      partition_columns.types string
                      serialization.ddl struct srcpart_date_n9 { string key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.ql.io.orc.OrcSerde
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    name: default.srcpart_date_n9
                  name: default.srcpart_date_n9
            Truncated Path -> Alias:
              /srcpart_date_n9/ds=2008-04-08 [srcpart_date_n9]
              /srcpart_date_n9/ds=2008-04-09 [srcpart_date_n9]
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: srcpart_small_n4
                  filterExpr: key1 is not null (type: boolean)
                  Statistics: Num rows: 20 Data size: 1740 Basic stats: PARTIAL Column stats: PARTIAL
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key1 is not null (type: boolean)
                    Statistics: Num rows: 20 Data size: 1740 Basic stats: PARTIAL Column stats: PARTIAL
                    Select Operator
                      expressions: key1 (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 20 Data size: 1740 Basic stats: PARTIAL Column stats: PARTIAL
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 20 Data size: 1740 Basic stats: PARTIAL Column stats: PARTIAL
                        tag: 1
                        auto parallelism: true
                      Select Operator
                        expressions: _col0 (type: string)
                        outputColumnNames: _col0
                        Statistics: Num rows: 20 Data size: 1740 Basic stats: PARTIAL Column stats: PARTIAL
                        Group By Operator
                          aggregations: min(_col0), max(_col0), bloom_filter(_col0, expectedEntries=20)
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 1 Data size: 639 Basic stats: PARTIAL Column stats: PARTIAL
                          Reduce Output Operator
                            null sort order: 
                            sort order: 
                            Statistics: Num rows: 1 Data size: 639 Basic stats: PARTIAL Column stats: PARTIAL
                            tag: -1
                            value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)
                            auto parallelism: false
                            quick start: true
            Execution mode: llap
            LLAP IO: all inputs
            Path -> Alias:
              hdfs://### HDFS PATH ### [srcpart_small_n4]
              hdfs://### HDFS PATH ### [srcpart_small_n4]
            Path -> Partition:
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: ds=2008-04-08
                  input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                  output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                  partition values:
                    ds 2008-04-08
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key1":"true","value1":"true"}}
                    bucket_count -1
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.srcpart_small_n4
                    numFiles 0
                    numRows 0
                    partition_columns ds
                    partition_columns.types string
                    rawDataSize 0
                    serialization.ddl struct srcpart_small_n4 { string key1, string value1}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    totalSize 0
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                
                    input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                    output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                    properties:
                      bucket_count -1
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key1,value1
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.srcpart_small_n4
                      partition_columns ds
                      partition_columns.types string
                      serialization.ddl struct srcpart_small_n4 { string key1, string value1}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.ql.io.orc.OrcSerde
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    name: default.srcpart_small_n4
                  name: default.srcpart_small_n4
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: ds=2008-04-09
                  input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                  output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                  partition values:
                    ds 2008-04-09
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key1":"true","value1":"true"}}
                    bucket_count -1
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.srcpart_small_n4
                    numFiles 1
                    numRows 20
                    partition_columns ds
                    partition_columns.types string
                    rawDataSize 3520
                    serialization.ddl struct srcpart_small_n4 { string key1, string value1}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    totalSize 469
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                
                    input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                    output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                    properties:
                      bucket_count -1
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key1,value1
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.srcpart_small_n4
                      partition_columns ds
                      partition_columns.types string
                      serialization.ddl struct srcpart_small_n4 { string key1, string value1}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.ql.io.orc.OrcSerde
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    name: default.srcpart_small_n4
                  name: default.srcpart_small_n4
            Truncated Path -> Alias:
              /srcpart_small_n4/ds=2008-04-08 [srcpart_small_n4]
              /srcpart_small_n4/ds=2008-04-09 [srcpart_small_n4]
        Reducer 2 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                Position of Big Table: 0
                Statistics: Num rows: 2200 Data size: 191400 Basic stats: PARTIAL Column stats: NONE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: PARTIAL Column stats: NONE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: PARTIAL Column stats: NONE
                    tag: -1
                    value expressions: _col0 (type: bigint)
                    auto parallelism: false
        Reducer 3 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: PARTIAL Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  directory: hdfs://### HDFS PATH ###
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 1 Data size: 8 Basic stats: PARTIAL Column stats: NONE
                  Stats Publishing Key Prefix: hdfs://### HDFS PATH ###
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        columns _col0
                        columns.types bigint
                        escape.delim \
                        hive.serialization.extend.additional.nesting.levels true
                        serialization.escape.crlf true
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false
        Reducer 5 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), bloom_filter(VALUE._col2, expectedEntries=20)
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 639 Basic stats: PARTIAL Column stats: PARTIAL
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 639 Basic stats: PARTIAL Column stats: PARTIAL
                  tag: -1
                  value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)
                  auto parallelism: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 3 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_14]
        Group By Operator [GBY_12] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Map 1 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_11]
            Group By Operator [GBY_10] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Map Join Operator [MAPJOIN_19] (rows=2200 width=87)
                Conds:SEL_2._col0=RS_7._col0(Inner)
              <-Map 3 [BROADCAST_EDGE] llap
                BROADCAST [RS_7]
                  PartitionCols:_col0
                  Select Operator [SEL_5] (rows=20 width=87)
                    Output:["_col0"]
                    Filter Operator [FIL_18] (rows=20 width=87)
                      predicate:key1 is not null
                      TableScan [TS_3] (rows=20 width=87)
                        default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1"]
              <-Select Operator [SEL_2] (rows=2000 width=87)
                  Output:["_col0"]
                  Filter Operator [FIL_17] (rows=2000 width=87)
                    predicate:key is not null
                    TableScan [TS_0] (rows=2000 width=87)
                      default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key"]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
176
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 3 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_14]
        Group By Operator [GBY_12] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Map 1 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_11]
            Group By Operator [GBY_10] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Map Join Operator [MAPJOIN_29] (rows=2200 width=87)
                Conds:SEL_2._col0=RS_7._col0(Inner)
              <-Map 3 [BROADCAST_EDGE] llap
                BROADCAST [RS_7]
                  PartitionCols:_col0
                  Select Operator [SEL_5] (rows=20 width=87)
                    Output:["_col0"]
                    Filter Operator [FIL_18] (rows=20 width=87)
                      predicate:key1 is not null
                      TableScan [TS_3] (rows=20 width=87)
                        default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1"]
              <-Select Operator [SEL_2] (rows=2000 width=87)
                  Output:["_col0"]
                  Filter Operator [FIL_17] (rows=2000 width=87)
                    predicate:key is not null
                    TableScan [TS_0] (rows=2000 width=87)
                      default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key"]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
176
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 2 (BROADCAST_EDGE)
Map 3 <- Map 1 (BROADCAST_EDGE)
Reducer 4 <- Map 3 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 4 llap
      File Output Operator [FS_20]
        Group By Operator [GBY_18] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Map 3 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_17]
            Group By Operator [GBY_16] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Map Join Operator [MAPJOIN_30] (rows=10091 width=70)
                Conds:RS_12._col1=SEL_8._col0(Inner)
              <-Map 1 [BROADCAST_EDGE] llap
                BROADCAST [RS_12]
                  PartitionCols:_col1
                  Map Join Operator [MAPJOIN_29] (rows=2200 width=178)
                    Conds:SEL_2._col0=RS_10._col0(Inner),Output:["_col1"]
                  <-Map 2 [BROADCAST_EDGE] llap
                    BROADCAST [RS_10]
                      PartitionCols:_col0
                      Select Operator [SEL_5] (rows=20 width=87)
                        Output:["_col0"]
                        Filter Operator [FIL_27] (rows=20 width=87)
                          predicate:key1 is not null
                          TableScan [TS_3] (rows=20 width=87)
                            default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1"]
                  <-Select Operator [SEL_2] (rows=2000 width=178)
                      Output:["_col0","_col1"]
                      Filter Operator [FIL_26] (rows=2000 width=178)
                        predicate:(key is not null and value is not null)
                        TableScan [TS_0] (rows=2000 width=178)
                          default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
              <-Select Operator [SEL_8] (rows=9174 width=70)
                  Output:["_col0"]
                  Filter Operator [FIL_28] (rows=9174 width=70)
                    predicate:cstring is not null
                    TableScan [TS_6] (rows=12288 width=70)
                      default@alltypesorc_int_n2,alltypesorc_int_n2,Tbl:COMPLETE,Col:COMPLETE,Output:["cstring"]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc_int_n2
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc_int_n2
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
0
PREHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 2 (BROADCAST_EDGE)
Map 3 <- Map 1 (BROADCAST_EDGE)
Reducer 4 <- Map 3 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 4 llap
      File Output Operator [FS_20]
        Group By Operator [GBY_18] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Map 3 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_17]
            Group By Operator [GBY_16] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Map Join Operator [MAPJOIN_50] (rows=10091 width=70)
                Conds:RS_12._col1=SEL_8._col0(Inner)
              <-Map 1 [BROADCAST_EDGE] llap
                BROADCAST [RS_12]
                  PartitionCols:_col1
                  Map Join Operator [MAPJOIN_49] (rows=2200 width=178)
                    Conds:SEL_2._col0=RS_10._col0(Inner),Output:["_col1"]
                  <-Map 2 [BROADCAST_EDGE] llap
                    BROADCAST [RS_10]
                      PartitionCols:_col0
                      Select Operator [SEL_5] (rows=20 width=87)
                        Output:["_col0"]
                        Filter Operator [FIL_27] (rows=20 width=87)
                          predicate:key1 is not null
                          TableScan [TS_3] (rows=20 width=87)
                            default@srcpart_small_n4,srcpart_small_n4,Tbl:PARTIAL,Col:PARTIAL,Output:["key1"]
                  <-Select Operator [SEL_2] (rows=2000 width=178)
                      Output:["_col0","_col1"]
                      Filter Operator [FIL_26] (rows=2000 width=178)
                        predicate:(key is not null and value is not null)
                        TableScan [TS_0] (rows=2000 width=178)
                          default@srcpart_date_n9,srcpart_date_n9,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
              <-Select Operator [SEL_8] (rows=9174 width=70)
                  Output:["_col0"]
                  Filter Operator [FIL_28] (rows=9174 width=70)
                    predicate:cstring is not null
                    TableScan [TS_6] (rows=12288 width=70)
                      default@alltypesorc_int_n2,alltypesorc_int_n2,Tbl:COMPLETE,Col:COMPLETE,Output:["cstring"]

PREHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc_int_n2
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
PREHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
PREHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from srcpart_date_n9 join srcpart_small_n4 on (srcpart_date_n9.key = srcpart_small_n4.key1) join alltypesorc_int_n2 on (srcpart_date_n9.value = alltypesorc_int_n2.cstring)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc_int_n2
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-08
POSTHOOK: Input: default@srcpart_date_n9@ds=2008-04-09
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-08
POSTHOOK: Input: default@srcpart_small_n4@ds=2008-04-09
POSTHOOK: Output: hdfs://### HDFS PATH ###
0
PREHOOK: query: explain select * from alltypesorc_int_n2 join
                                      (select srcpart_date_n9.key as key from srcpart_date_n9
                                       union all
                                       select srcpart_small_n4.key1 as key from srcpart_small_n4) unionsrc on (alltypesorc_int_n2.cstring = unionsrc.key)
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from alltypesorc_int_n2 join
                                      (select srcpart_date_n9.key as key from srcpart_date_n9
                                       union all
                                       select srcpart_small_n4.key1 as key from srcpart_small_n4) unionsrc on (alltypesorc_int_n2.cstring = unionsrc.key)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Union 3 (BROADCAST_EDGE)
Map 2 <- Union 3 (CONTAINS)
Map 4 <- Union 3 (CONTAINS)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Map 1 llap
      File Output Operator [FS_15]
        Map Join Operator [MAPJOIN_33] (rows=10091 width=73)
          Conds:SEL_2._col1=Union 3._col0(Inner),Output:["_col0","_col1","_col2"]
        <-Union 3 [BROADCAST_EDGE]
          <-Map 2 [CONTAINS] llap
            Reduce Output Operator [RS_39]
              PartitionCols:_col0
              Select Operator [SEL_37] (rows=2000 width=87)
                Output:["_col0"]
                Filter Operator [FIL_36] (rows=2000 width=87)
                  predicate:key is not null
                  TableScan [TS_35] (rows=2000 width=87)
                    Output:["key"]
          <-Map 4 [CONTAINS] llap
            Reduce Output Operator [RS_44]
              PartitionCols:_col0
              Select Operator [SEL_42] (rows=20 width=87)
                Output:["_col0"]
                Filter Operator [FIL_41] (rows=20 width=87)
                  predicate:key1 is not null
                  TableScan [TS_40] (rows=20 width=87)
                    Output:["key1"]
        <-Select Operator [SEL_2] (rows=9174 width=73)
            Output:["_col0","_col1"]
            Filter Operator [FIL_19] (rows=9174 width=73)
              predicate:cstring is not null
              TableScan [TS_0] (rows=12288 width=73)
                default@alltypesorc_int_n2,alltypesorc_int_n2,Tbl:COMPLETE,Col:COMPLETE,Output:["cint","cstring"]

PREHOOK: query: drop table srcpart_date_n9
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcpart_date_n9
PREHOOK: Output: default@srcpart_date_n9
POSTHOOK: query: drop table srcpart_date_n9
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcpart_date_n9
POSTHOOK: Output: default@srcpart_date_n9
PREHOOK: query: drop table srcpart_small_n4
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcpart_small_n4
PREHOOK: Output: default@srcpart_small_n4
POSTHOOK: query: drop table srcpart_small_n4
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcpart_small_n4
POSTHOOK: Output: default@srcpart_small_n4
PREHOOK: query: drop table alltypesorc_int_n2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@alltypesorc_int_n2
PREHOOK: Output: default@alltypesorc_int_n2
POSTHOOK: query: drop table alltypesorc_int_n2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@alltypesorc_int_n2
POSTHOOK: Output: default@alltypesorc_int_n2
