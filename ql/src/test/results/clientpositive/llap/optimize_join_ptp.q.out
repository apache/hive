PREHOOK: query: create table t1_n97 (v string, k int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_n97
POSTHOOK: query: create table t1_n97 (v string, k int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_n97
PREHOOK: query: insert into t1_n97 values ('people', 10), ('strangers', 20), ('parents', 30)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t1_n97
POSTHOOK: query: insert into t1_n97 values ('people', 10), ('strangers', 20), ('parents', 30)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t1_n97
POSTHOOK: Lineage: t1_n97.k SCRIPT []
POSTHOOK: Lineage: t1_n97.v SCRIPT []
PREHOOK: query: create table t2_n60 (v string, k double)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t2_n60
POSTHOOK: query: create table t2_n60 (v string, k double)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t2_n60
PREHOOK: query: insert into t2_n60 values ('people', 10), ('strangers', 20), ('parents', 30)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t2_n60
POSTHOOK: query: insert into t2_n60 values ('people', 10), ('strangers', 20), ('parents', 30)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t2_n60
POSTHOOK: Lineage: t2_n60.k SCRIPT []
POSTHOOK: Lineage: t2_n60.v SCRIPT []
PREHOOK: query: explain
select * from t1_n97 where t1_n97.k in (select t2_n60.k from t2_n60 where t2_n60.v='people') and t1_n97.k<15
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from t1_n97 where t1_n97.k in (select t2_n60.k from t2_n60 where t2_n60.v='people') and t1_n97.k<15
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n97
                  Statistics: Num rows: 3 Data size: 285 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (k < 15) (type: boolean)
                    Statistics: Num rows: 1 Data size: 95 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: v (type: string), k (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 95 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: UDFToDouble(_col1) (type: double)
                        sort order: +
                        Map-reduce partition columns: UDFToDouble(_col1) (type: double)
                        Statistics: Num rows: 1 Data size: 95 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: string), _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: t2_n60
                  Statistics: Num rows: 3 Data size: 297 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((v = 'people') and k is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 99 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: k (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: _col0 (type: double)
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: double)
                          sort order: +
                          Map-reduce partition columns: _col0 (type: double)
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Semi Join 0 to 1
                keys:
                  0 UDFToDouble(_col1) (type: double)
                  1 _col0 (type: double)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 95 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 95 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from t1_n97 where t1_n97.k in (select t2_n60.k from t2_n60 where t2_n60.v='people') and t1_n97.k<15
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n97
PREHOOK: Input: default@t2_n60
#### A masked pattern was here ####
POSTHOOK: query: select * from t1_n97 where t1_n97.k in (select t2_n60.k from t2_n60 where t2_n60.v='people') and t1_n97.k<15
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n97
POSTHOOK: Input: default@t2_n60
#### A masked pattern was here ####
people	10
