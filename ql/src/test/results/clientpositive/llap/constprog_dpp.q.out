PREHOOK: query: drop table if exists tb1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists tb1
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table tb1 (id int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tb1
POSTHOOK: query: create table tb1 (id int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tb1
PREHOOK: query: drop table if exists tb2
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists tb2
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table tb2 (id smallint)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tb2
POSTHOOK: query: create table tb2 (id smallint)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tb2
PREHOOK: query: explain
select a.id from tb1 a
left outer join
(select id from tb2
union all
select 2 as id from tb2 limit 1) b
on a.id=b.id
PREHOOK: type: QUERY
PREHOOK: Input: default@tb1
PREHOOK: Input: default@tb2
#### A masked pattern was here ####
POSTHOOK: query: explain
select a.id from tb1 a
left outer join
(select id from tb2
union all
select 2 as id from tb2 limit 1) b
on a.id=b.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tb1
POSTHOOK: Input: default@tb2
#### A masked pattern was here ####
Plan optimized by CBO.

Vertex dependency in root stage
Map 3 <- Union 4 (CONTAINS)
Map 6 <- Union 4 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 5 <- Union 4 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_17]
        Merge Join Operator [MERGEJOIN_21] (rows=1 width=4)
          Conds:RS_33._col0=RS_36._col0(Left Outer),Output:["_col0"]
        <-Map 1 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_33]
            PartitionCols:_col0
            Select Operator [SEL_32] (rows=1 width=4)
              Output:["_col0"]
              TableScan [TS_0] (rows=1 width=4)
                default@tb1,a,Tbl:COMPLETE,Col:NONE,Output:["id"]
        <-Reducer 5 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_36]
            PartitionCols:_col0
            Limit [LIM_35] (rows=1 width=2)
              Number of rows:1
              Select Operator [SEL_34] (rows=1 width=2)
                Output:["_col0"]
              <-Union 4 [CUSTOM_SIMPLE_EDGE]
                <-Map 3 [CONTAINS] vectorized, llap
                  Reduce Output Operator [RS_39]
                    Limit [LIM_38] (rows=1 width=2)
                      Number of rows:1
                      Select Operator [SEL_37] (rows=1 width=4)
                        Output:["_col0"]
                        TableScan [TS_22] (rows=1 width=4)
                          Output:["id"]
                <-Map 6 [CONTAINS] vectorized, llap
                  Reduce Output Operator [RS_42]
                    Limit [LIM_41] (rows=1 width=2)
                      Number of rows:1
                      Select Operator [SEL_40] (rows=1 width=0)
                        Output:["_col0"]
                        TableScan [TS_27] (rows=1 width=0)

