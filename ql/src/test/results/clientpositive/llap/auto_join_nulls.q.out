PREHOOK: query: CREATE TABLE myinput1_n2(key int, value int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@myinput1_n2
POSTHOOK: query: CREATE TABLE myinput1_n2(key int, value int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@myinput1_n2
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/in1.txt' INTO TABLE myinput1_n2
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@myinput1_n2
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/in1.txt' INTO TABLE myinput1_n2
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@myinput1_n2
Warning: Map Join MAPJOIN[14][bigTable=?] in task 'Map 1' is a cross product
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
13630578
Warning: Map Join MAPJOIN[14][bigTable=?] in task 'Map 1' is a cross product
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
13630578
Warning: Map Join MAPJOIN[14][bigTable=?] in task 'Map 2' is a cross product
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
13630578
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b ON a.key = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b ON a.key = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
3078400
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4509856
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b ON a.value = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b ON a.value = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
3112070
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b ON a.value = b.value and a.key=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a JOIN myinput1_n2 b ON a.value = b.value and a.key=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
3078400
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON a.key = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON a.key = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4542003
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON a.value = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON a.value = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4542038
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4543491
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON a.key = b.key and a.value=b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON a.key = b.key and a.value=b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4542003
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON a.key = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON a.key = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
3079923
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4509891
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON a.value = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON a.value = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
3113558
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON a.key=b.key and a.value = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON a.key=b.key and a.value = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
3079923
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4543526
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4543526
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.value = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.value = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4543526
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.value = b.value and a.key=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.value = b.value and a.key=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4543526
PREHOOK: query: EXPLAIN SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col1 (type: int)
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Full Outer Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col1 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: hash(_col0,_col1,_col2,_col3) (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: sum(_col0)
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4543526
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4543526
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.value = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.value = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4543526
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.value = b.value and a.key=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a FULL OUTER JOIN myinput1_n2 b ON a.value = b.value and a.key=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
4543526
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) from myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON (a.value=b.value) RIGHT OUTER JOIN myinput1_n2 c ON (b.value=c.value)
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) from myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b ON (a.value=b.value) RIGHT OUTER JOIN myinput1_n2 c ON (b.value=c.value)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
3112070
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) from myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON (a.value=b.value) LEFT OUTER JOIN myinput1_n2 c ON (b.value=c.value)
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) from myinput1_n2 a RIGHT OUTER JOIN myinput1_n2 b ON (a.value=b.value) LEFT OUTER JOIN myinput1_n2 c ON (b.value=c.value)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
3113558
PREHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b RIGHT OUTER JOIN myinput1_n2 c ON a.value = b.value and b.value = c.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(a.key,a.value,b.key,b.value)) FROM myinput1_n2 a LEFT OUTER JOIN myinput1_n2 b RIGHT OUTER JOIN myinput1_n2 c ON a.value = b.value and b.value = c.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1_n2
#### A masked pattern was here ####
3112070
