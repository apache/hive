Query Compilation Summary
----------------------------------------------------------------------------------------------
Compile Step - 1 parse#Masked#
Compile Step - 2 Generate Resolved ParseTree#Masked#
Compile Step - 3 Logical Plan and hive Operator Tree#Masked#
Compile Step - 3.1 Generate Logical Plan#Masked#
Compile Step - 3.1.1 Calcite: Plan generation#Masked#
Compile Step - 3.1.2 MV Rewrite and Field Trimmer#Masked#
Compile Step - 3.1.3 Removing SubQuery#Masked#
Compile Step - 3.1.4 Decorrelation#Masked#
Compile Step - 3.1.5 Validate Query Materialization#Masked#
Compile Step - 3.1.6 Calcite: Prejoin ordering transformation#Masked#
Compile Step - 3.1.7 MV Rewriting#Masked#
Compile Step - 3.1.8 Calcite: Join Reordering#Masked#
Compile Step - 3.1.9 Calcite: Postjoin ordering transformation#Masked#
Compile Step - 3.1.10 Hive Sort Predicates#Masked#
Compile Step - 3.2 Generate Operator Tree#Masked#
Compile Step - 4 Deduce ResultsetSchema#Masked#
Compile Step - 5 Parse Context generation#Masked#
Compile Step - 6 Save and Validate View Creation#Masked#
Compile Step - 7 Logical Optimization#Masked#
Compile Step - 8 Physical Optimization#Masked#
Compile Step - 9 Post Processing#Masked#
Total Compilation Time#Masked#
----------------------------------------------------------------------------------------------
PREHOOK: query: create table tbl_n1 (n bigint, t string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_n1
POSTHOOK: query: create table tbl_n1 (n bigint, t string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_n1
Query Compilation Summary
----------------------------------------------------------------------------------------------
Compile Step - 1 parse#Masked#
Compile Step - 2 Generate Resolved ParseTree#Masked#
Compile Step - 3 Logical Plan and hive Operator Tree#Masked#
Compile Step - 3.1 Generate Logical Plan#Masked#
Compile Step - 3.1.1 Calcite: Plan generation#Masked#
Compile Step - 3.1.2 MV Rewrite and Field Trimmer#Masked#
Compile Step - 3.1.3 Removing SubQuery#Masked#
Compile Step - 3.1.4 Decorrelation#Masked#
Compile Step - 3.1.5 Validate Query Materialization#Masked#
Compile Step - 3.1.6 Calcite: Prejoin ordering transformation#Masked#
Compile Step - 3.1.7 MV Rewriting#Masked#
Compile Step - 3.1.8 Calcite: Join Reordering#Masked#
Compile Step - 3.1.9 Calcite: Postjoin ordering transformation#Masked#
Compile Step - 3.1.10 Hive Sort Predicates#Masked#
Compile Step - 3.2 Generate Operator Tree#Masked#
Compile Step - 4 Deduce ResultsetSchema#Masked#
Compile Step - 5 Parse Context generation#Masked#
Compile Step - 6 Save and Validate View Creation#Masked#
Compile Step - 7 Logical Optimization#Masked#
Compile Step - 8 Physical Optimization#Masked#
Compile Step - 9 Post Processing#Masked#
Total Compilation Time#Masked#
----------------------------------------------------------------------------------------------
PREHOOK: query: explain
select n, t from tbl_n1 where n = 1
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_n1
#### A masked pattern was here ####
POSTHOOK: query: explain
select n, t from tbl_n1 where n = 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_n1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: tbl_n1
          filterExpr: (n = 1L) (type: boolean)
          Filter Operator
            predicate: (n = 1L) (type: boolean)
            Select Operator
              expressions: 1L (type: bigint), t (type: string)
              outputColumnNames: _col0, _col1
              ListSink

