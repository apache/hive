PREHOOK: query: create table if not exists nzhang_part14_n0 (key string)
  partitioned by (value string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nzhang_part14_n0
POSTHOOK: query: create table if not exists nzhang_part14_n0 (key string)
  partitioned by (value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nzhang_part14_n0
PREHOOK: query: describe extended nzhang_part14_n0
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@nzhang_part14_n0
POSTHOOK: query: describe extended nzhang_part14_n0
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@nzhang_part14_n0
key                 	string              	                    
value               	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
value               	string              	                    
	 	 
#### A masked pattern was here ####
PREHOOK: query: explain
insert overwrite table nzhang_part14_n0 partition(value) 
select key, value from (
  select * from (select 'k1' as key, cast(null as string) as value from src limit 2)a 
  union all
  select * from (select 'k2' as key, '' as value from src limit 2)b
  union all 
  select * from (select 'k3' as key, ' ' as value from src limit 2)c
) T
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@nzhang_part14_n0
POSTHOOK: query: explain
insert overwrite table nzhang_part14_n0 partition(value) 
select key, value from (
  select * from (select 'k1' as key, cast(null as string) as value from src limit 2)a 
  union all
  select * from (select 'k2' as key, '' as value from src limit 2)b
  union all 
  select * from (select 'k3' as key, ' ' as value from src limit 2)c
) T
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@nzhang_part14_n0
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Union 3 (CONTAINS)
        Reducer 4 <- Union 3 (SIMPLE_EDGE)
        Reducer 6 <- Map 5 (CUSTOM_SIMPLE_EDGE), Union 3 (CONTAINS)
        Reducer 8 <- Map 7 (CUSTOM_SIMPLE_EDGE), Union 3 (CONTAINS)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
                  Limit
                    Number of rows: 2
                    Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        TopN Hash Memory Usage: 0.1
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
                  Limit
                    Number of rows: 2
                    Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        TopN Hash Memory Usage: 0.1
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
                  Limit
                    Number of rows: 2
                    Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        TopN Hash Memory Usage: 0.1
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Limit
                Number of rows: 2
                Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'k1' (type: string), null (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 256 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 6 Data size: 938 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.nzhang_part14_n0
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string)
                    outputColumnNames: key, value
                    Statistics: Num rows: 6 Data size: 771 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: max(length(key)), avg(COALESCE(length(key),0)), count(1), count(key), compute_bit_vector_hll(key)
                      keys: value (type: string)
                      minReductionHashAggr: 0.6666666
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                      Statistics: Num rows: 2 Data size: 650 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 2 Data size: 650 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 514 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col1,0)) (type: bigint), COALESCE(_col2,0) (type: double), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                  Statistics: Num rows: 2 Data size: 702 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 702 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Limit
                Number of rows: 2
                Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'k2' (type: string), '' (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 340 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 6 Data size: 938 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.nzhang_part14_n0
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string)
                    outputColumnNames: key, value
                    Statistics: Num rows: 6 Data size: 771 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: max(length(key)), avg(COALESCE(length(key),0)), count(1), count(key), compute_bit_vector_hll(key)
                      keys: value (type: string)
                      minReductionHashAggr: 0.6666666
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                      Statistics: Num rows: 2 Data size: 650 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 2 Data size: 650 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Limit
                Number of rows: 2
                Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'k3' (type: string), ' ' (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 342 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 6 Data size: 938 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.nzhang_part14_n0
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string)
                    outputColumnNames: key, value
                    Statistics: Num rows: 6 Data size: 771 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: max(length(key)), avg(COALESCE(length(key),0)), count(1), count(key), compute_bit_vector_hll(key)
                      keys: value (type: string)
                      minReductionHashAggr: 0.6666666
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                      Statistics: Num rows: 2 Data size: 650 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 2 Data size: 650 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
        Union 3 
            Vertex: Union 3

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            value 
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.nzhang_part14_n0

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key
          Column Types: string
          Table: default.nzhang_part14_n0

PREHOOK: query: insert overwrite table nzhang_part14_n0 partition(value) 
select key, value from (
  select * from (select 'k1' as key, cast(null as string) as value from src limit 2)a 
  union all
  select * from (select 'k2' as key, '' as value from src limit 2)b
  union all 
  select * from (select 'k3' as key, ' ' as value from src limit 2)c
) T
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@nzhang_part14_n0
POSTHOOK: query: insert overwrite table nzhang_part14_n0 partition(value) 
select key, value from (
  select * from (select 'k1' as key, cast(null as string) as value from src limit 2)a 
  union all
  select * from (select 'k2' as key, '' as value from src limit 2)b
  union all 
  select * from (select 'k3' as key, ' ' as value from src limit 2)c
) T
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@nzhang_part14_n0
POSTHOOK: Output: default@nzhang_part14_n0@value= 
POSTHOOK: Output: default@nzhang_part14_n0@value=__HIVE_DEFAULT_PARTITION__
POSTHOOK: Lineage: nzhang_part14_n0 PARTITION(value= ).key EXPRESSION []
POSTHOOK: Lineage: nzhang_part14_n0 PARTITION(value=__HIVE_DEFAULT_PARTITION__).key EXPRESSION []
PREHOOK: query: show partitions nzhang_part14_n0
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@nzhang_part14_n0
POSTHOOK: query: show partitions nzhang_part14_n0
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@nzhang_part14_n0
value= 
value=__HIVE_DEFAULT_PARTITION__
PREHOOK: query: select * from nzhang_part14_n0 where value <> 'a'
PREHOOK: type: QUERY
PREHOOK: Input: default@nzhang_part14_n0
PREHOOK: Input: default@nzhang_part14_n0@value= 
PREHOOK: Input: default@nzhang_part14_n0@value=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
POSTHOOK: query: select * from nzhang_part14_n0 where value <> 'a'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nzhang_part14_n0
POSTHOOK: Input: default@nzhang_part14_n0@value= 
POSTHOOK: Input: default@nzhang_part14_n0@value=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
k1	__HIVE_DEFAULT_PARTITION__
k1	__HIVE_DEFAULT_PARTITION__
k2	__HIVE_DEFAULT_PARTITION__
k2	__HIVE_DEFAULT_PARTITION__
k3	 
k3	 
