PREHOOK: query: create table t (s1 string,s2 string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t
POSTHOOK: query: create table t (s1 string,s2 string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t
PREHOOK: query: insert into t values (null,null)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t
POSTHOOK: query: insert into t values (null,null)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t
POSTHOOK: Lineage: t.s1 EXPRESSION []
POSTHOOK: Lineage: t.s2 EXPRESSION []
PREHOOK: query: explain
select
	coalesce(s1, 'null_value' ), coalesce(s2, 'null_value' ), 
	coalesce(s1, 'null_value' )=coalesce(s2, 'null_value' ),
	case when coalesce(s1, 'null_value' )=coalesce(s2, 'null_value' ) then 'eq' else 'noteq' end
from t
PREHOOK: type: QUERY
PREHOOK: Input: default@t
#### A masked pattern was here ####
POSTHOOK: query: explain
select
	coalesce(s1, 'null_value' ), coalesce(s2, 'null_value' ), 
	coalesce(s1, 'null_value' )=coalesce(s2, 'null_value' ),
	case when coalesce(s1, 'null_value' )=coalesce(s2, 'null_value' ) then 'eq' else 'noteq' end
from t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t
                  Statistics: Num rows: 1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: if(s1 is not null, s1, 'null_value') (type: string), if(s2 is not null, s2, 'null_value') (type: string), (if(s1 is not null, s1, 'null_value') = if(s2 is not null, s2, 'null_value')) (type: boolean), if((if(s1 is not null, s1, 'null_value') = if(s2 is not null, s2, 'null_value')), 'eq', 'noteq') (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 1 Data size: 281 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 281 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select
	coalesce(s1, 'null_value' ), coalesce(s2, 'null_value' ), 
	coalesce(s1, 'null_value' )=coalesce(s2, 'null_value' ),
	case when coalesce(s1, 'null_value' )=coalesce(s2, 'null_value' ) then 'eq' else 'noteq' end
from t
PREHOOK: type: QUERY
PREHOOK: Input: default@t
#### A masked pattern was here ####
POSTHOOK: query: select
	coalesce(s1, 'null_value' ), coalesce(s2, 'null_value' ), 
	coalesce(s1, 'null_value' )=coalesce(s2, 'null_value' ),
	case when coalesce(s1, 'null_value' )=coalesce(s2, 'null_value' ) then 'eq' else 'noteq' end
from t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t
#### A masked pattern was here ####
null_value	null_value	true	eq
