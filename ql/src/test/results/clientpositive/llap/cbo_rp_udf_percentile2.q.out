PREHOOK: query: DESCRIBE FUNCTION percentile
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION percentile
POSTHOOK: type: DESCFUNCTION
percentile(expr, pc) - Returns the percentile(s) of expr at pc (range: [0,1]).pc can be a double or double array
PREHOOK: query: DESCRIBE FUNCTION EXTENDED percentile
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED percentile
POSTHOOK: type: DESCFUNCTION
percentile(expr, pc) - Returns the percentile(s) of expr at pc (range: [0,1]).pc can be a double or double array
Function class:org.apache.hadoop.hive.ql.udf.UDAFPercentile
Function type:BUILTIN
PREHOOK: query: SELECT CAST(key AS INT) DIV 10,
       count(distinct(value)),
       percentile(CAST(substr(value, 5) AS INT), 0.0),
       percentile(CAST(substr(value, 5) AS INT), 0.5),
       percentile(CAST(substr(value, 5) AS INT), 1.0),
       percentile(CAST(substr(value, 5) AS INT), array(0.0, 0.5, 0.99, 1.0))
FROM src
GROUP BY CAST(key AS INT) DIV 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT CAST(key AS INT) DIV 10,
       count(distinct(value)),
       percentile(CAST(substr(value, 5) AS INT), 0.0),
       percentile(CAST(substr(value, 5) AS INT), 0.5),
       percentile(CAST(substr(value, 5) AS INT), 1.0),
       percentile(CAST(substr(value, 5) AS INT), array(0.0, 0.5, 0.99, 1.0))
FROM src
GROUP BY CAST(key AS INT) DIV 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	6	0.0	4.5	9.0	[0.0,4.5,8.91,9.0]
1	7	10.0	15.0	19.0	[10.0,15.0,18.91,19.0]
10	4	100.0	103.0	105.0	[100.0,103.0,104.94,105.0]
11	6	111.0	117.0	119.0	[111.0,117.0,119.0,119.0]
12	5	120.0	127.0	129.0	[120.0,127.0,129.0,129.0]
13	6	131.0	137.0	138.0	[131.0,137.0,138.0,138.0]
14	4	143.0	146.0	149.0	[143.0,146.0,149.0,149.0]
15	7	150.0	154.0	158.0	[150.0,154.0,157.92999999999998,158.0]
16	9	160.0	166.5	169.0	[160.0,166.5,169.0,169.0]
17	8	170.0	175.0	179.0	[170.0,175.0,179.0,179.0]
18	6	180.0	186.5	189.0	[180.0,186.5,188.86,189.0]
19	9	190.0	194.5	199.0	[190.0,194.5,199.0,199.0]
2	5	20.0	26.0	28.0	[20.0,26.0,27.939999999999998,28.0]
20	8	200.0	205.0	209.0	[200.0,205.0,209.0,209.0]
21	6	213.0	216.5	219.0	[213.0,216.5,219.0,219.0]
22	7	221.0	224.0	229.0	[221.0,224.0,229.0,229.0]
23	6	230.0	234.0	239.0	[230.0,234.0,239.0,239.0]
24	6	241.0	244.0	249.0	[241.0,244.0,248.94,249.0]
25	5	252.0	256.0	258.0	[252.0,256.0,257.94,258.0]
26	5	260.0	264.0	266.0	[260.0,264.0,265.95,266.0]
27	6	272.0	275.0	278.0	[272.0,275.0,278.0,278.0]
28	10	280.0	283.5	289.0	[280.0,283.5,288.87,289.0]
29	4	291.0	297.0	298.0	[291.0,297.0,298.0,298.0]
3	5	30.0	35.0	37.0	[30.0,35.0,37.0,37.0]
30	6	302.0	307.0	309.0	[302.0,307.0,309.0,309.0]
31	6	310.0	316.0	318.0	[310.0,316.0,318.0,318.0]
32	5	321.0	324.0	327.0	[321.0,324.0,327.0,327.0]
33	7	331.0	333.0	339.0	[331.0,333.0,338.92,339.0]
34	5	341.0	345.0	348.0	[341.0,345.0,348.0,348.0]
35	3	351.0	353.0	356.0	[351.0,353.0,355.91,356.0]
36	8	360.0	367.0	369.0	[360.0,367.0,369.0,369.0]
37	6	373.0	376.0	379.0	[373.0,376.0,378.95,379.0]
38	4	382.0	384.0	389.0	[382.0,384.0,388.82,389.0]
39	7	392.0	396.0	399.0	[392.0,396.0,399.0,399.0]
4	5	41.0	42.5	47.0	[41.0,42.5,46.849999999999994,47.0]
40	8	400.0	403.5	409.0	[400.0,403.5,409.0,409.0]
41	6	411.0	415.5	419.0	[411.0,415.5,418.91,419.0]
42	4	421.0	425.5	429.0	[421.0,425.5,429.0,429.0]
43	8	430.0	435.0	439.0	[430.0,435.0,439.0,439.0]
44	5	443.0	446.0	449.0	[443.0,446.0,448.96,449.0]
45	7	452.0	455.0	459.0	[452.0,455.0,459.0,459.0]
46	7	460.0	467.5	469.0	[460.0,467.5,469.0,469.0]
47	6	470.0	477.0	479.0	[470.0,477.0,478.94,479.0]
48	8	480.0	484.0	489.0	[480.0,484.0,489.0,489.0]
49	9	490.0	494.5	498.0	[490.0,494.5,498.0,498.0]
5	5	51.0	54.0	58.0	[51.0,54.0,58.0,58.0]
6	5	64.0	66.5	69.0	[64.0,66.5,68.9,69.0]
7	6	70.0	73.0	78.0	[70.0,73.0,77.91000000000001,78.0]
8	7	80.0	84.0	87.0	[80.0,84.0,86.92,87.0]
9	6	90.0	95.0	98.0	[90.0,95.0,98.0,98.0]
PREHOOK: query: SELECT CAST(key AS INT) DIV 10,
       count(distinct(value)),
       percentile(CAST(substr(value, 5) AS INT), 0.0),
       count(distinct(substr(value, 5))),
       percentile(CAST(substr(value, 5) AS INT), 0.5),
       percentile(CAST(substr(value, 5) AS INT), 1.0),
       percentile(CAST(substr(value, 5) AS INT), array(0.0, 0.5, 0.99, 1.0))
FROM src
GROUP BY CAST(key AS INT) DIV 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT CAST(key AS INT) DIV 10,
       count(distinct(value)),
       percentile(CAST(substr(value, 5) AS INT), 0.0),
       count(distinct(substr(value, 5))),
       percentile(CAST(substr(value, 5) AS INT), 0.5),
       percentile(CAST(substr(value, 5) AS INT), 1.0),
       percentile(CAST(substr(value, 5) AS INT), array(0.0, 0.5, 0.99, 1.0))
FROM src
GROUP BY CAST(key AS INT) DIV 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	6	0.0	6	4.5	9.0	[0.0,4.5,8.91,9.0]
1	7	10.0	7	15.0	19.0	[10.0,15.0,18.91,19.0]
10	4	100.0	4	103.0	105.0	[100.0,103.0,104.94,105.0]
11	6	111.0	6	117.0	119.0	[111.0,117.0,119.0,119.0]
12	5	120.0	5	127.0	129.0	[120.0,127.0,129.0,129.0]
13	6	131.0	6	137.0	138.0	[131.0,137.0,138.0,138.0]
14	4	143.0	4	146.0	149.0	[143.0,146.0,149.0,149.0]
15	7	150.0	7	154.0	158.0	[150.0,154.0,157.92999999999998,158.0]
16	9	160.0	9	166.5	169.0	[160.0,166.5,169.0,169.0]
17	8	170.0	8	175.0	179.0	[170.0,175.0,179.0,179.0]
18	6	180.0	6	186.5	189.0	[180.0,186.5,188.86,189.0]
19	9	190.0	9	194.5	199.0	[190.0,194.5,199.0,199.0]
2	5	20.0	5	26.0	28.0	[20.0,26.0,27.939999999999998,28.0]
20	8	200.0	8	205.0	209.0	[200.0,205.0,209.0,209.0]
21	6	213.0	6	216.5	219.0	[213.0,216.5,219.0,219.0]
22	7	221.0	7	224.0	229.0	[221.0,224.0,229.0,229.0]
23	6	230.0	6	234.0	239.0	[230.0,234.0,239.0,239.0]
24	6	241.0	6	244.0	249.0	[241.0,244.0,248.94,249.0]
25	5	252.0	5	256.0	258.0	[252.0,256.0,257.94,258.0]
26	5	260.0	5	264.0	266.0	[260.0,264.0,265.95,266.0]
27	6	272.0	6	275.0	278.0	[272.0,275.0,278.0,278.0]
28	10	280.0	10	283.5	289.0	[280.0,283.5,288.87,289.0]
29	4	291.0	4	297.0	298.0	[291.0,297.0,298.0,298.0]
3	5	30.0	5	35.0	37.0	[30.0,35.0,37.0,37.0]
30	6	302.0	6	307.0	309.0	[302.0,307.0,309.0,309.0]
31	6	310.0	6	316.0	318.0	[310.0,316.0,318.0,318.0]
32	5	321.0	5	324.0	327.0	[321.0,324.0,327.0,327.0]
33	7	331.0	7	333.0	339.0	[331.0,333.0,338.92,339.0]
34	5	341.0	5	345.0	348.0	[341.0,345.0,348.0,348.0]
35	3	351.0	3	353.0	356.0	[351.0,353.0,355.91,356.0]
36	8	360.0	8	367.0	369.0	[360.0,367.0,369.0,369.0]
37	6	373.0	6	376.0	379.0	[373.0,376.0,378.95,379.0]
38	4	382.0	4	384.0	389.0	[382.0,384.0,388.82,389.0]
39	7	392.0	7	396.0	399.0	[392.0,396.0,399.0,399.0]
4	5	41.0	5	42.5	47.0	[41.0,42.5,46.849999999999994,47.0]
40	8	400.0	8	403.5	409.0	[400.0,403.5,409.0,409.0]
41	6	411.0	6	415.5	419.0	[411.0,415.5,418.91,419.0]
42	4	421.0	4	425.5	429.0	[421.0,425.5,429.0,429.0]
43	8	430.0	8	435.0	439.0	[430.0,435.0,439.0,439.0]
44	5	443.0	5	446.0	449.0	[443.0,446.0,448.96,449.0]
45	7	452.0	7	455.0	459.0	[452.0,455.0,459.0,459.0]
46	7	460.0	7	467.5	469.0	[460.0,467.5,469.0,469.0]
47	6	470.0	6	477.0	479.0	[470.0,477.0,478.94,479.0]
48	8	480.0	8	484.0	489.0	[480.0,484.0,489.0,489.0]
49	9	490.0	9	494.5	498.0	[490.0,494.5,498.0,498.0]
5	5	51.0	5	54.0	58.0	[51.0,54.0,58.0,58.0]
6	5	64.0	5	66.5	69.0	[64.0,66.5,68.9,69.0]
7	6	70.0	6	73.0	78.0	[70.0,73.0,77.91000000000001,78.0]
8	7	80.0	7	84.0	87.0	[80.0,84.0,86.92,87.0]
9	6	90.0	6	95.0	98.0	[90.0,95.0,98.0,98.0]
PREHOOK: query: SELECT CAST(key AS INT) DIV 10,
       count(distinct(value)),
       percentile(CAST(substr(value, 5) AS INT), 0.0),
       count(distinct(substr(value, 5))),
       percentile(CAST(substr(value, 5) AS INT), 0.5),
       count(distinct(substr(value, 2))),
       percentile(CAST(substr(value, 5) AS INT), 1.0),
       count(distinct(CAST(key AS INT) DIV 10)),
       percentile(CAST(substr(value, 5) AS INT), array(0.0, 0.5, 0.99, 1.0))
FROM src
GROUP BY CAST(key AS INT) DIV 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT CAST(key AS INT) DIV 10,
       count(distinct(value)),
       percentile(CAST(substr(value, 5) AS INT), 0.0),
       count(distinct(substr(value, 5))),
       percentile(CAST(substr(value, 5) AS INT), 0.5),
       count(distinct(substr(value, 2))),
       percentile(CAST(substr(value, 5) AS INT), 1.0),
       count(distinct(CAST(key AS INT) DIV 10)),
       percentile(CAST(substr(value, 5) AS INT), array(0.0, 0.5, 0.99, 1.0))
FROM src
GROUP BY CAST(key AS INT) DIV 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	6	0.0	6	4.5	6	9.0	1	[0.0,4.5,8.91,9.0]
1	7	10.0	7	15.0	7	19.0	1	[10.0,15.0,18.91,19.0]
10	4	100.0	4	103.0	4	105.0	1	[100.0,103.0,104.94,105.0]
11	6	111.0	6	117.0	6	119.0	1	[111.0,117.0,119.0,119.0]
12	5	120.0	5	127.0	5	129.0	1	[120.0,127.0,129.0,129.0]
13	6	131.0	6	137.0	6	138.0	1	[131.0,137.0,138.0,138.0]
14	4	143.0	4	146.0	4	149.0	1	[143.0,146.0,149.0,149.0]
15	7	150.0	7	154.0	7	158.0	1	[150.0,154.0,157.92999999999998,158.0]
16	9	160.0	9	166.5	9	169.0	1	[160.0,166.5,169.0,169.0]
17	8	170.0	8	175.0	8	179.0	1	[170.0,175.0,179.0,179.0]
18	6	180.0	6	186.5	6	189.0	1	[180.0,186.5,188.86,189.0]
19	9	190.0	9	194.5	9	199.0	1	[190.0,194.5,199.0,199.0]
2	5	20.0	5	26.0	5	28.0	1	[20.0,26.0,27.939999999999998,28.0]
20	8	200.0	8	205.0	8	209.0	1	[200.0,205.0,209.0,209.0]
21	6	213.0	6	216.5	6	219.0	1	[213.0,216.5,219.0,219.0]
22	7	221.0	7	224.0	7	229.0	1	[221.0,224.0,229.0,229.0]
23	6	230.0	6	234.0	6	239.0	1	[230.0,234.0,239.0,239.0]
24	6	241.0	6	244.0	6	249.0	1	[241.0,244.0,248.94,249.0]
25	5	252.0	5	256.0	5	258.0	1	[252.0,256.0,257.94,258.0]
26	5	260.0	5	264.0	5	266.0	1	[260.0,264.0,265.95,266.0]
27	6	272.0	6	275.0	6	278.0	1	[272.0,275.0,278.0,278.0]
28	10	280.0	10	283.5	10	289.0	1	[280.0,283.5,288.87,289.0]
29	4	291.0	4	297.0	4	298.0	1	[291.0,297.0,298.0,298.0]
3	5	30.0	5	35.0	5	37.0	1	[30.0,35.0,37.0,37.0]
30	6	302.0	6	307.0	6	309.0	1	[302.0,307.0,309.0,309.0]
31	6	310.0	6	316.0	6	318.0	1	[310.0,316.0,318.0,318.0]
32	5	321.0	5	324.0	5	327.0	1	[321.0,324.0,327.0,327.0]
33	7	331.0	7	333.0	7	339.0	1	[331.0,333.0,338.92,339.0]
34	5	341.0	5	345.0	5	348.0	1	[341.0,345.0,348.0,348.0]
35	3	351.0	3	353.0	3	356.0	1	[351.0,353.0,355.91,356.0]
36	8	360.0	8	367.0	8	369.0	1	[360.0,367.0,369.0,369.0]
37	6	373.0	6	376.0	6	379.0	1	[373.0,376.0,378.95,379.0]
38	4	382.0	4	384.0	4	389.0	1	[382.0,384.0,388.82,389.0]
39	7	392.0	7	396.0	7	399.0	1	[392.0,396.0,399.0,399.0]
4	5	41.0	5	42.5	5	47.0	1	[41.0,42.5,46.849999999999994,47.0]
40	8	400.0	8	403.5	8	409.0	1	[400.0,403.5,409.0,409.0]
41	6	411.0	6	415.5	6	419.0	1	[411.0,415.5,418.91,419.0]
42	4	421.0	4	425.5	4	429.0	1	[421.0,425.5,429.0,429.0]
43	8	430.0	8	435.0	8	439.0	1	[430.0,435.0,439.0,439.0]
44	5	443.0	5	446.0	5	449.0	1	[443.0,446.0,448.96,449.0]
45	7	452.0	7	455.0	7	459.0	1	[452.0,455.0,459.0,459.0]
46	7	460.0	7	467.5	7	469.0	1	[460.0,467.5,469.0,469.0]
47	6	470.0	6	477.0	6	479.0	1	[470.0,477.0,478.94,479.0]
48	8	480.0	8	484.0	8	489.0	1	[480.0,484.0,489.0,489.0]
49	9	490.0	9	494.5	9	498.0	1	[490.0,494.5,498.0,498.0]
5	5	51.0	5	54.0	5	58.0	1	[51.0,54.0,58.0,58.0]
6	5	64.0	5	66.5	5	69.0	1	[64.0,66.5,68.9,69.0]
7	6	70.0	6	73.0	6	78.0	1	[70.0,73.0,77.91000000000001,78.0]
8	7	80.0	7	84.0	7	87.0	1	[80.0,84.0,86.92,87.0]
9	6	90.0	6	95.0	6	98.0	1	[90.0,95.0,98.0,98.0]
