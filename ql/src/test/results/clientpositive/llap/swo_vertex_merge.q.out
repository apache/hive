PREHOOK: query: create table tu  ( a integer )
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tu
POSTHOOK: query: create table tu  ( a integer )
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tu
PREHOOK: query: create table tv  ( b integer )
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tv
POSTHOOK: query: create table tv  ( b integer )
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tv
PREHOOK: query: insert into tu values (1),(2),(3),(4),(5)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tu
POSTHOOK: query: insert into tu values (1),(2),(3),(4),(5)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tu
POSTHOOK: Lineage: tu.a SCRIPT []
PREHOOK: query: insert into tv values (1),(2),(3),(4),(5)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tv
POSTHOOK: query: insert into tv values (1),(2),(3),(4),(5)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tv
POSTHOOK: Lineage: tv.b SCRIPT []
Warning: Map Join MAPJOIN[86][bigTable=?] in task 'Map 5' is a cross product
Warning: Map Join MAPJOIN[96][bigTable=?] in task 'Map 7' is a cross product
PREHOOK: query: explain
with t as (
	select a+b as s from tu,tv where a>1 and b>2 and a*a=b
)
select t1.s from t as t1, t as t2 where t1.s=t2.s+1
union all
select t1.s from t as t1, t as t2 where t1.s+1=t2.s
PREHOOK: type: QUERY
PREHOOK: Input: default@tu
PREHOOK: Input: default@tv
#### A masked pattern was here ####
POSTHOOK: query: explain
with t as (
	select a+b as s from tu,tv where a>1 and b>2 and a*a=b
)
select t1.s from t as t1, t as t2 where t1.s=t2.s+1
union all
select t1.s from t as t1, t as t2 where t1.s+1=t2.s
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tu
POSTHOOK: Input: default@tv
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 3 (BROADCAST_EDGE)
        Map 5 <- Reducer 2 (BROADCAST_EDGE), Reducer 4 (BROADCAST_EDGE), Union 6 (CONTAINS)
        Map 7 <- Map 1 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE), Union 6 (CONTAINS)
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tv
                  filterExpr: (b > 2) (type: boolean)
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (b > 2) (type: boolean)
                    Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: b (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: int)
                          1 _col1 (type: int)
                        outputColumnNames: _col0, _col1
                        input vertices:
                          1 Map 3
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: int)
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: tu
                  filterExpr: ((a > 1) and ((a * a) > 2)) (type: boolean)
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((a > 1) and ((a * a) > 2)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int), (a * a) (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: int)
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
                      Reduce Output Operator
                        key expressions: _col1 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: int)
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
                      Reduce Output Operator
                        key expressions: _col1 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: int)
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: tv
                  filterExpr: (b > 2) (type: boolean)
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (b > 2) (type: boolean)
                    Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: b (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 
                          1 
                        outputColumnNames: _col0, _col1, _col3
                        input vertices:
                          0 Reducer 2
                        Statistics: Num rows: 4 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                        Map Join Operator
                          condition map:
                               Inner Join 0 to 1
                          keys:
                            0 _col3 (type: int)
                            1 _col1 (type: int)
                          outputColumnNames: _col0, _col1, _col3, _col4
                          input vertices:
                            1 Reducer 4
                          residual filter predicates: {((_col1 + _col0) = ((_col4 + _col3) + 1))}
                          Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                          Select Operator
                            expressions: (_col1 + _col0) (type: int)
                            outputColumnNames: _col0
                            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                            File Output Operator
                              compressed: false
                              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                              table:
                                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: tv
                  filterExpr: (b > 2) (type: boolean)
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (b > 2) (type: boolean)
                    Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: b (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 
                          1 
                        outputColumnNames: _col0, _col1, _col3
                        input vertices:
                          0 Map 1
                        Statistics: Num rows: 4 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                        Map Join Operator
                          condition map:
                               Inner Join 0 to 1
                          keys:
                            0 _col3 (type: int)
                            1 _col1 (type: int)
                          outputColumnNames: _col0, _col1, _col3, _col4
                          input vertices:
                            1 Map 3
                          residual filter predicates: {(((_col1 + _col0) + 1) = (_col4 + _col3))}
                          Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                          Select Operator
                            expressions: (_col1 + _col0) (type: int)
                            outputColumnNames: _col0
                            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                            File Output Operator
                              compressed: false
                              Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                              table:
                                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: int)
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col1 (type: int)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), KEY.reducesinkkey0 (type: int)
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions: _col1 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col1 (type: int)
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int)
        Union 6 
            Vertex: Union 6

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Map Join MAPJOIN[86][bigTable=?] in task 'Map 5' is a cross product
Warning: Map Join MAPJOIN[96][bigTable=?] in task 'Map 7' is a cross product
PREHOOK: query: with t as (
	select a+b as s from tu,tv where a>1 and b>2 and a*a=b
)
select t1.s from t as t1, t as t2 where t1.s=t2.s+1
union all
select t1.s from t as t1, t as t2 where t1.s+1=t2.s
PREHOOK: type: QUERY
PREHOOK: Input: default@tu
PREHOOK: Input: default@tv
#### A masked pattern was here ####
POSTHOOK: query: with t as (
	select a+b as s from tu,tv where a>1 and b>2 and a*a=b
)
select t1.s from t as t1, t as t2 where t1.s=t2.s+1
union all
select t1.s from t as t1, t as t2 where t1.s+1=t2.s
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tu
POSTHOOK: Input: default@tv
#### A masked pattern was here ####
