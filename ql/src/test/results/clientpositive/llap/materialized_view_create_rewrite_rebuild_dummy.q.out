PREHOOK: query: create table cmv_basetable_n1 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_basetable_n1
POSTHOOK: query: create table cmv_basetable_n1 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_basetable_n1
PREHOOK: query: insert into cmv_basetable_n1 values
 (1, 'alfred', 10.30, 2),
 (2, 'bob', 3.14, 3),
 (2, 'bonnie', 172342.2, 3),
 (3, 'calvin', 978.76, 3),
 (3, 'charlie', 9.8, 1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable_n1
POSTHOOK: query: insert into cmv_basetable_n1 values
 (1, 'alfred', 10.30, 2),
 (2, 'bob', 3.14, 3),
 (2, 'bonnie', 172342.2, 3),
 (3, 'calvin', 978.76, 3),
 (3, 'charlie', 9.8, 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable_n1
POSTHOOK: Lineage: cmv_basetable_n1.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n1.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n1.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n1.d SCRIPT []
PREHOOK: query: create table cmv_basetable_2_n0 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_basetable_2_n0
POSTHOOK: query: create table cmv_basetable_2_n0 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_basetable_2_n0
PREHOOK: query: insert into cmv_basetable_2_n0 values
 (1, 'alfred', 10.30, 2),
 (3, 'calvin', 978.76, 3)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable_2_n0
POSTHOOK: query: insert into cmv_basetable_2_n0 values
 (1, 'alfred', 10.30, 2),
 (3, 'calvin', 978.76, 3)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable_2_n0
POSTHOOK: Lineage: cmv_basetable_2_n0.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n0.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n0.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n0.d SCRIPT []
PREHOOK: query: EXPLAIN
CREATE MATERIALIZED VIEW cmv_mat_view_n1 AS
  SELECT cmv_basetable_n1.a, cmv_basetable_2_n0.c
  FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
  WHERE cmv_basetable_2_n0.c > 10.0
  GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_mat_view_n1
POSTHOOK: query: EXPLAIN
CREATE MATERIALIZED VIEW cmv_mat_view_n1 AS
  SELECT cmv_basetable_n1.a, cmv_basetable_2_n0.c
  FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
  WHERE cmv_basetable_2_n0.c > 10.0
  GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_mat_view_n1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-0, Stage-2
  Stage-3 depends on stages: Stage-4
  Stage-5 depends on stages: Stage-3
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_n1
                  filterExpr: a is not null (type: boolean)
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: a is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_2_n0
                  filterExpr: ((c > 10) and a is not null) (type: boolean)
                  Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c > 10) and a is not null) (type: boolean)
                    Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int), c (type: decimal(10,2))
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: decimal(10,2))
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col2
                Statistics: Num rows: 5 Data size: 580 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  keys: _col0 (type: int), _col2 (type: decimal(10,2))
                  minReductionHashAggr: 0.6
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: decimal(10,2))
                    null sort order: zz
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2))
                    Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: decimal(10,2))
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.cmv_mat_view_n1
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: decimal(10,2))
                  outputColumnNames: col1, col2
                  Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: min(col1), max(col1), count(1), count(col1), compute_bit_vector_hll(col1), min(col2), max(col2), count(col2), compute_bit_vector_hll(col2)
                    minReductionHashAggr: 0.5
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                    Statistics: Num rows: 1 Data size: 544 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      null sort order: 
                      sort order: 
                      Statistics: Num rows: 1 Data size: 544 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: decimal(10,2)), _col6 (type: decimal(10,2)), _col7 (type: bigint), _col8 (type: binary)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 544 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'DECIMAL' (type: string), _col5 (type: decimal(10,2)), _col6 (type: decimal(10,2)), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
    Create Materialized View
      columns: a int, c decimal(10,2)
      expanded text: SELECT `cmv_basetable_n1`.`a`, `cmv_basetable_2_n0`.`c`
  FROM `default`.`cmv_basetable_n1` JOIN `default`.`cmv_basetable_2_n0` ON (`cmv_basetable_n1`.`a` = `cmv_basetable_2_n0`.`a`)
  WHERE `cmv_basetable_2_n0`.`c` > 10.0
  GROUP BY `cmv_basetable_n1`.`a`, `cmv_basetable_2_n0`.`c`
      name: default.cmv_mat_view_n1
      original text: SELECT cmv_basetable_n1.a, cmv_basetable_2_n0.c
  FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
  WHERE cmv_basetable_2_n0.c > 10.0
  GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
      rewrite enabled: true

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: a, c
          Column Types: int, decimal(10,2)
          Table: default.cmv_mat_view_n1

  Stage: Stage-5
    Materialized View Update
      name: default.cmv_mat_view_n1
      retrieve and include: true

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: CREATE MATERIALIZED VIEW cmv_mat_view_n1 AS
  SELECT cmv_basetable_n1.a, cmv_basetable_2_n0.c
  FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
  WHERE cmv_basetable_2_n0.c > 10.0
  GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_mat_view_n1
POSTHOOK: query: CREATE MATERIALIZED VIEW cmv_mat_view_n1 AS
  SELECT cmv_basetable_n1.a, cmv_basetable_2_n0.c
  FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
  WHERE cmv_basetable_2_n0.c > 10.0
  GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_mat_view_n1
PREHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.cmv_mat_view_n1
          filterExpr: (c > 10.1) (type: boolean)
          Filter Operator
            predicate: (c > 10.1) (type: boolean)
            Select Operator
              expressions: a (type: int)
              outputColumnNames: _col0
              ListSink

PREHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
3
1
PREHOOK: query: insert into cmv_basetable_2_n0 values
 (3, 'charlie', 15.8, 1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable_2_n0
POSTHOOK: query: insert into cmv_basetable_2_n0 values
 (3, 'charlie', 15.8, 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable_2_n0
POSTHOOK: Lineage: cmv_basetable_2_n0.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n0.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n0.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n0.d SCRIPT []
PREHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_n1
                  filterExpr: a is not null (type: boolean)
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: a is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_2_n0
                  filterExpr: ((c > 10.1) and a is not null) (type: boolean)
                  Statistics: Num rows: 3 Data size: 348 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c > 10.1) and a is not null) (type: boolean)
                    Statistics: Num rows: 3 Data size: 348 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int), c (type: decimal(10,2))
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 348 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 3 Data size: 348 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: decimal(10,2))
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col2
                Statistics: Num rows: 5 Data size: 580 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  keys: _col0 (type: int), _col2 (type: decimal(10,2))
                  minReductionHashAggr: 0.6
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: decimal(10,2))
                    null sort order: zz
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2))
                    Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: decimal(10,2))
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
3
3
1
PREHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW cmv_mat_view_n1 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
PREHOOK: Output: default@cmv_mat_view_n1
POSTHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW cmv_mat_view_n1 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
POSTHOOK: Output: default@cmv_mat_view_n1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-4 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 8 <- Union 4 (CONTAINS)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Union 4 (CONTAINS)
        Reducer 5 <- Union 4 (SIMPLE_EDGE)
        Reducer 6 <- Reducer 5 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_n1
                  filterExpr: a is not null (type: boolean)
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: a is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_2_n0
                  filterExpr: ((ROW__ID.writeid > 1L) and (c > 10) and a is not null) (type: boolean)
                  Statistics: Num rows: 3 Data size: 348 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((ROW__ID.writeid > 1L) and (c > 10) and a is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int), c (type: decimal(10,2))
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: decimal(10,2))
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: default.cmv_mat_view_n1
                  Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: a (type: int), c (type: decimal(10,2))
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: _col0 (type: int), _col1 (type: decimal(10,2))
                      minReductionHashAggr: 0.6666666
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int), _col1 (type: decimal(10,2))
                        null sort order: zz
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2))
                        Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col2
                Statistics: Num rows: 2 Data size: 232 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  keys: _col0 (type: int), _col2 (type: decimal(10,2))
                  minReductionHashAggr: 0.5
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: decimal(10,2))
                    null sort order: zz
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2))
                    Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: decimal(10,2))
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  keys: _col0 (type: int), _col1 (type: decimal(10,2))
                  minReductionHashAggr: 0.6666666
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: decimal(10,2))
                    null sort order: zz
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2))
                    Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: decimal(10,2))
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.cmv_mat_view_n1
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: decimal(10,2))
                  outputColumnNames: a, c
                  Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: min(a), max(a), count(1), count(a), compute_bit_vector_hll(a), min(c), max(c), count(c), compute_bit_vector_hll(c)
                    minReductionHashAggr: 0.4
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                    Statistics: Num rows: 1 Data size: 544 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      null sort order: 
                      sort order: 
                      Statistics: Num rows: 1 Data size: 544 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: decimal(10,2)), _col6 (type: decimal(10,2)), _col7 (type: bigint), _col8 (type: binary)
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 544 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'DECIMAL' (type: string), _col5 (type: decimal(10,2)), _col6 (type: decimal(10,2)), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Union 4 
            Vertex: Union 4

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.cmv_mat_view_n1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: a, c
          Column Types: int, decimal(10,2)
          Table: default.cmv_mat_view_n1

  Stage: Stage-4
    Materialized View Update
      name: default.cmv_mat_view_n1
      update creation metadata: true

PREHOOK: query: ALTER MATERIALIZED VIEW cmv_mat_view_n1 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
PREHOOK: Output: default@cmv_mat_view_n1
POSTHOOK: query: ALTER MATERIALIZED VIEW cmv_mat_view_n1 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
POSTHOOK: Output: default@cmv_mat_view_n1
POSTHOOK: Lineage: cmv_mat_view_n1.a EXPRESSION [(cmv_basetable_n1)cmv_basetable_n1.FieldSchema(name:a, type:int, comment:null), (cmv_mat_view_n1)default.cmv_mat_view_n1.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n1.c EXPRESSION [(cmv_basetable_2_n0)cmv_basetable_2_n0.FieldSchema(name:c, type:decimal(10,2), comment:null), (cmv_mat_view_n1)default.cmv_mat_view_n1.FieldSchema(name:c, type:decimal(10,2), comment:null), ]
PREHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.cmv_mat_view_n1
          filterExpr: (c > 10.1) (type: boolean)
          Filter Operator
            predicate: (c > 10.1) (type: boolean)
            Select Operator
              expressions: a (type: int)
              outputColumnNames: _col0
              ListSink

PREHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
3
3
1
PREHOOK: query: DELETE FROM cmv_basetable_2_n0 WHERE a = 3
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Output: default@cmv_basetable_2_n0
POSTHOOK: query: DELETE FROM cmv_basetable_2_n0 WHERE a = 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Output: default@cmv_basetable_2_n0
PREHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_n1
                  filterExpr: a is not null (type: boolean)
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: a is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_2_n0
                  filterExpr: ((c > 10.1) and a is not null) (type: boolean)
                  Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c > 10.1) and a is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int), c (type: decimal(10,2))
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: decimal(10,2))
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col2
                Statistics: Num rows: 5 Data size: 580 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  keys: _col0 (type: int), _col2 (type: decimal(10,2))
                  minReductionHashAggr: 0.8
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: decimal(10,2))
                    null sort order: zz
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2))
                    Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: decimal(10,2))
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
1
PREHOOK: query: ALTER MATERIALIZED VIEW cmv_mat_view_n1 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Output: default@cmv_mat_view_n1
POSTHOOK: query: ALTER MATERIALIZED VIEW cmv_mat_view_n1 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Output: default@cmv_mat_view_n1
POSTHOOK: Lineage: cmv_mat_view_n1.a SIMPLE [(cmv_basetable_n1)cmv_basetable_n1.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n1.c SIMPLE [(cmv_basetable_2_n0)cmv_basetable_2_n0.FieldSchema(name:c, type:decimal(10,2), comment:null), ]
PREHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.cmv_mat_view_n1
          filterExpr: (c > 10.1) (type: boolean)
          Filter Operator
            predicate: (c > 10.1) (type: boolean)
            Select Operator
              expressions: a (type: int)
              outputColumnNames: _col0
              ListSink

PREHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
1
PREHOOK: query: create table cmv_irrelevant_table_n0 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_irrelevant_table_n0
POSTHOOK: query: create table cmv_irrelevant_table_n0 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_irrelevant_table_n0
PREHOOK: query: insert into cmv_irrelevant_table_n0 values
 (1, 'alfred', 10.30, 2),
 (3, 'charlie', 9.8, 1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_irrelevant_table_n0
POSTHOOK: query: insert into cmv_irrelevant_table_n0 values
 (1, 'alfred', 10.30, 2),
 (3, 'charlie', 9.8, 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_irrelevant_table_n0
POSTHOOK: Lineage: cmv_irrelevant_table_n0.a SCRIPT []
POSTHOOK: Lineage: cmv_irrelevant_table_n0.b SCRIPT []
POSTHOOK: Lineage: cmv_irrelevant_table_n0.c SCRIPT []
POSTHOOK: Lineage: cmv_irrelevant_table_n0.d SCRIPT []
PREHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.cmv_mat_view_n1
          filterExpr: (c > 10.1) (type: boolean)
          Filter Operator
            predicate: (c > 10.1) (type: boolean)
            Select Operator
              expressions: a (type: int)
              outputColumnNames: _col0
              ListSink

PREHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
PREHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
POSTHOOK: Input: default@cmv_mat_view_n1
#### A masked pattern was here ####
1
PREHOOK: query: drop materialized view cmv_mat_view_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_mat_view_n1
PREHOOK: Output: default@cmv_mat_view_n1
POSTHOOK: query: drop materialized view cmv_mat_view_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_mat_view_n1
POSTHOOK: Output: default@cmv_mat_view_n1
PREHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 join cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_n1
                  filterExpr: a is not null (type: boolean)
                  Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: a is not null (type: boolean)
                    Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_2_n0
                  filterExpr: ((c > 10.1) and a is not null) (type: boolean)
                  Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c > 10.1) and a is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int), c (type: decimal(10,2))
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: decimal(10,2))
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col2
                Statistics: Num rows: 5 Data size: 580 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  keys: _col0 (type: int), _col2 (type: decimal(10,2))
                  minReductionHashAggr: 0.8
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int), _col1 (type: decimal(10,2))
                    null sort order: zz
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2))
                    Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: decimal(10,2))
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 116 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n0
PREHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n1.a
FROM cmv_basetable_n1 JOIN cmv_basetable_2_n0 ON (cmv_basetable_n1.a = cmv_basetable_2_n0.a)
WHERE cmv_basetable_2_n0.c > 10.10
GROUP BY cmv_basetable_n1.a, cmv_basetable_2_n0.c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n0
POSTHOOK: Input: default@cmv_basetable_n1
#### A masked pattern was here ####
1
