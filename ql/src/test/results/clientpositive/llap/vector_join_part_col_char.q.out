PREHOOK: query: drop table if exists char_part_tbl1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists char_part_tbl1
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists char_part_tbl2
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists char_part_tbl2
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table studenttab(name string, age int, gpa double) clustered by (age) into 2 buckets stored as orc tblproperties('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@studenttab
POSTHOOK: query: create table studenttab(name string, age int, gpa double) clustered by (age) into 2 buckets stored as orc tblproperties('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@studenttab
PREHOOK: query: insert into table studenttab values ('calvin garcia',56,2.50), ('oscar miller',66,3.00), ('(yuri xylophone',30,2.74),('alice underhill',46,3.50)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@studenttab
POSTHOOK: query: insert into table studenttab values ('calvin garcia',56,2.50), ('oscar miller',66,3.00), ('(yuri xylophone',30,2.74),('alice underhill',46,3.50)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@studenttab
POSTHOOK: Lineage: studenttab.age SCRIPT []
POSTHOOK: Lineage: studenttab.gpa SCRIPT []
POSTHOOK: Lineage: studenttab.name SCRIPT []
PREHOOK: query: create table char_tbl1(name string, age int) partitioned  by(gpa char(50)) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@char_tbl1
POSTHOOK: query: create table char_tbl1(name string, age int) partitioned  by(gpa char(50)) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@char_tbl1
PREHOOK: query: create table char_tbl2(name string, age int) partitioned by(gpa char(5)) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@char_tbl2
POSTHOOK: query: create table char_tbl2(name string, age int) partitioned by(gpa char(5)) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@char_tbl2
PREHOOK: query: insert into table char_tbl1 partition(gpa='3.5') select name, age from studenttab where gpa = 3.5
PREHOOK: type: QUERY
PREHOOK: Input: default@studenttab
PREHOOK: Output: default@char_tbl1@gpa=3.5                                               
POSTHOOK: query: insert into table char_tbl1 partition(gpa='3.5') select name, age from studenttab where gpa = 3.5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@studenttab
POSTHOOK: Output: default@char_tbl1@gpa=3.5                                               
POSTHOOK: Lineage: char_tbl1 PARTITION(gpa=3.5                                               ).age SIMPLE [(studenttab)studenttab.FieldSchema(name:age, type:int, comment:null), ]
POSTHOOK: Lineage: char_tbl1 PARTITION(gpa=3.5                                               ).name SIMPLE [(studenttab)studenttab.FieldSchema(name:name, type:string, comment:null), ]
PREHOOK: query: insert into table char_tbl1 partition(gpa='2.5') select name, age from studenttab where gpa = 2.5
PREHOOK: type: QUERY
PREHOOK: Input: default@studenttab
PREHOOK: Output: default@char_tbl1@gpa=2.5                                               
POSTHOOK: query: insert into table char_tbl1 partition(gpa='2.5') select name, age from studenttab where gpa = 2.5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@studenttab
POSTHOOK: Output: default@char_tbl1@gpa=2.5                                               
POSTHOOK: Lineage: char_tbl1 PARTITION(gpa=2.5                                               ).age SIMPLE [(studenttab)studenttab.FieldSchema(name:age, type:int, comment:null), ]
POSTHOOK: Lineage: char_tbl1 PARTITION(gpa=2.5                                               ).name SIMPLE [(studenttab)studenttab.FieldSchema(name:name, type:string, comment:null), ]
PREHOOK: query: insert into table char_tbl2 partition(gpa='3.5') select name, age from studenttab where gpa = 3.5
PREHOOK: type: QUERY
PREHOOK: Input: default@studenttab
PREHOOK: Output: default@char_tbl2@gpa=3.5  
POSTHOOK: query: insert into table char_tbl2 partition(gpa='3.5') select name, age from studenttab where gpa = 3.5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@studenttab
POSTHOOK: Output: default@char_tbl2@gpa=3.5  
POSTHOOK: Lineage: char_tbl2 PARTITION(gpa=3.5  ).age SIMPLE [(studenttab)studenttab.FieldSchema(name:age, type:int, comment:null), ]
POSTHOOK: Lineage: char_tbl2 PARTITION(gpa=3.5  ).name SIMPLE [(studenttab)studenttab.FieldSchema(name:name, type:string, comment:null), ]
PREHOOK: query: insert into table char_tbl2 partition(gpa='3') select name, age from studenttab where gpa = 3
PREHOOK: type: QUERY
PREHOOK: Input: default@studenttab
PREHOOK: Output: default@char_tbl2@gpa=3    
POSTHOOK: query: insert into table char_tbl2 partition(gpa='3') select name, age from studenttab where gpa = 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@studenttab
POSTHOOK: Output: default@char_tbl2@gpa=3    
POSTHOOK: Lineage: char_tbl2 PARTITION(gpa=3    ).age SIMPLE [(studenttab)studenttab.FieldSchema(name:age, type:int, comment:null), ]
POSTHOOK: Lineage: char_tbl2 PARTITION(gpa=3    ).name SIMPLE [(studenttab)studenttab.FieldSchema(name:name, type:string, comment:null), ]
PREHOOK: query: show partitions char_tbl1
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@char_tbl1
POSTHOOK: query: show partitions char_tbl1
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@char_tbl1
gpa=2.5                                               
gpa=3.5                                               
PREHOOK: query: show partitions char_tbl2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@char_tbl2
POSTHOOK: query: show partitions char_tbl2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@char_tbl2
gpa=3    
gpa=3.5  
PREHOOK: query: explain vectorization select c1.name, c1.age, c1.gpa, c2.name, c2.age, c2.gpa from char_tbl1 c1 join char_tbl2 c2 on (c1.gpa = c2.gpa)
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization select c1.name, c1.age, c1.gpa, c2.name, c2.age, c2.gpa from char_tbl1 c1 join char_tbl2 c2 on (c1.gpa = c2.gpa)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_10]
        Merge Join Operator [MERGEJOIN_21] (rows=2 width=429)
          Conds:RS_23._col2=RS_28._col2(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
        <-Map 1 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_23]
            PartitionCols:_col2
            Select Operator [SEL_22] (rows=2 width=237)
              Output:["_col0","_col1","_col2"]
              TableScan [TS_0] (rows=2 width=237)
                default@char_tbl1,c1,Tbl:COMPLETE,Col:COMPLETE,Output:["name","age"]
          Dynamic Partitioning Event Operator [EVENT_26] (rows=1 width=237)
            Group By Operator [GBY_25] (rows=1 width=237)
              Output:["_col0"],keys:_col0
              Select Operator [SEL_24] (rows=2 width=237)
                Output:["_col0"]
                 Please refer to the previous Select Operator [SEL_22]
        <-Map 3 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_28]
            PartitionCols:_col2
            Select Operator [SEL_27] (rows=2 width=192)
              Output:["_col0","_col1","_col2"]
              TableScan [TS_3] (rows=2 width=192)
                default@char_tbl2,c2,Tbl:COMPLETE,Col:COMPLETE,Output:["name","age"]

PREHOOK: query: select c1.name, c1.age, c1.gpa, c2.name, c2.age, c2.gpa from char_tbl1 c1 join char_tbl2 c2 on (c1.gpa = c2.gpa)
PREHOOK: type: QUERY
PREHOOK: Input: default@char_tbl1
PREHOOK: Input: default@char_tbl1@gpa=2.5                                               
PREHOOK: Input: default@char_tbl1@gpa=3.5                                               
PREHOOK: Input: default@char_tbl2
PREHOOK: Input: default@char_tbl2@gpa=3    
PREHOOK: Input: default@char_tbl2@gpa=3.5  
#### A masked pattern was here ####
POSTHOOK: query: select c1.name, c1.age, c1.gpa, c2.name, c2.age, c2.gpa from char_tbl1 c1 join char_tbl2 c2 on (c1.gpa = c2.gpa)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@char_tbl1
POSTHOOK: Input: default@char_tbl1@gpa=2.5                                               
POSTHOOK: Input: default@char_tbl1@gpa=3.5                                               
POSTHOOK: Input: default@char_tbl2
POSTHOOK: Input: default@char_tbl2@gpa=3    
POSTHOOK: Input: default@char_tbl2@gpa=3.5  
#### A masked pattern was here ####
alice underhill	46	3.5                                               	alice underhill	46	3.5  
PREHOOK: query: select c1.name, c1.age, c1.gpa, c2.name, c2.age, c2.gpa from char_tbl1 c1 join char_tbl2 c2 on (c1.gpa = c2.gpa)
PREHOOK: type: QUERY
PREHOOK: Input: default@char_tbl1
PREHOOK: Input: default@char_tbl1@gpa=2.5                                               
PREHOOK: Input: default@char_tbl1@gpa=3.5                                               
PREHOOK: Input: default@char_tbl2
PREHOOK: Input: default@char_tbl2@gpa=3    
PREHOOK: Input: default@char_tbl2@gpa=3.5  
#### A masked pattern was here ####
POSTHOOK: query: select c1.name, c1.age, c1.gpa, c2.name, c2.age, c2.gpa from char_tbl1 c1 join char_tbl2 c2 on (c1.gpa = c2.gpa)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@char_tbl1
POSTHOOK: Input: default@char_tbl1@gpa=2.5                                               
POSTHOOK: Input: default@char_tbl1@gpa=3.5                                               
POSTHOOK: Input: default@char_tbl2
POSTHOOK: Input: default@char_tbl2@gpa=3    
POSTHOOK: Input: default@char_tbl2@gpa=3.5  
#### A masked pattern was here ####
alice underhill	46	3.5                                               	alice underhill	46	3.5  
