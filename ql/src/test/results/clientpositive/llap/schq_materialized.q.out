PREHOOK: query: drop materialized view if exists mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: query: drop materialized view if exists mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: query: drop table if exists emps
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists emps
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists depts
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists depts
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE emps (
  empid INT,
  deptno INT,
  name VARCHAR(256),
  salary FLOAT,
  hire_date TIMESTAMP)
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@emps
POSTHOOK: query: CREATE TABLE emps (
  empid INT,
  deptno INT,
  name VARCHAR(256),
  salary FLOAT,
  hire_date TIMESTAMP)
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emps
PREHOOK: query: CREATE TABLE depts (
  deptno INT,
  deptname VARCHAR(256),
  locationid INT)
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@depts
POSTHOOK: query: CREATE TABLE depts (
  deptno INT,
  deptname VARCHAR(256),
  locationid INT)
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@depts
PREHOOK: query: insert into emps values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (120, 10, 'Bill', 10000, 250),
  (1330, 10, 'Bill', 10000, '2020-01-02')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps
POSTHOOK: query: insert into emps values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (120, 10, 'Bill', 10000, 250),
  (1330, 10, 'Bill', 10000, '2020-01-02')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps
POSTHOOK: Lineage: emps.deptno SCRIPT []
POSTHOOK: Lineage: emps.empid SCRIPT []
POSTHOOK: Lineage: emps.hire_date SCRIPT []
POSTHOOK: Lineage: emps.name SCRIPT []
POSTHOOK: Lineage: emps.salary SCRIPT []
PREHOOK: query: insert into depts values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@depts
POSTHOOK: query: insert into depts values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@depts
POSTHOOK: Lineage: depts.deptname SCRIPT []
POSTHOOK: Lineage: depts.deptno SCRIPT []
POSTHOOK: Lineage: depts.locationid SCRIPT []
PREHOOK: query: insert into emps values (1330, 10, 'Bill', 10000, '2020-01-02')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps
POSTHOOK: query: insert into emps values (1330, 10, 'Bill', 10000, '2020-01-02')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps
POSTHOOK: Lineage: emps.deptno SCRIPT []
POSTHOOK: Lineage: emps.empid SCRIPT []
POSTHOOK: Lineage: emps.hire_date SCRIPT []
POSTHOOK: Lineage: emps.name SCRIPT []
POSTHOOK: Lineage: emps.salary SCRIPT []
PREHOOK: query: CREATE MATERIALIZED VIEW mv1 AS
  SELECT empid, deptname, hire_date FROM emps
    JOIN depts ON (emps.deptno = depts.deptno)
    WHERE hire_date >= '2016-01-01 00:00:00'
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: CREATE MATERIALIZED VIEW mv1 AS
  SELECT empid, deptname, hire_date FROM emps
    JOIN depts ON (emps.deptno = depts.deptno)
    WHERE hire_date >= '2016-01-01 00:00:00'
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: EXPLAIN
SELECT empid, deptname FROM emps
JOIN depts ON (emps.deptno = depts.deptno)
WHERE hire_date >= '2018-01-01'
PREHOOK: type: QUERY
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT empid, deptname FROM emps
JOIN depts ON (emps.deptno = depts.deptno)
WHERE hire_date >= '2018-01-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1
          filterExpr: (hire_date >= TIMESTAMP'2018-01-01 00:00:00') (type: boolean)
          Filter Operator
            predicate: (hire_date >= TIMESTAMP'2018-01-01 00:00:00') (type: boolean)
            Select Operator
              expressions: empid (type: int), deptname (type: varchar(256))
              outputColumnNames: _col0, _col1
              ListSink

PREHOOK: query: create scheduled query d cron '0 */10 * * * ? *' defined as 
  alter materialized view mv1 rebuild
PREHOOK: type: CREATE SCHEDULED QUERY
POSTHOOK: query: create scheduled query d cron '0 */10 * * * ? *' defined as 
  alter materialized view mv1 rebuild
POSTHOOK: type: CREATE SCHEDULED QUERY
PREHOOK: query: select `(NEXT_EXECUTION)?+.+` from sys.scheduled_queries
PREHOOK: type: QUERY
PREHOOK: Input: sys@scheduled_queries
#### A masked pattern was here ####
POSTHOOK: query: select `(NEXT_EXECUTION)?+.+` from sys.scheduled_queries
POSTHOOK: type: QUERY
POSTHOOK: Input: sys@scheduled_queries
#### A masked pattern was here ####
1	d	true	hive	0 */10 * * * ? *	hive_test_user	alter materialized view `default`.`mv1` rebuild
