PREHOOK: query: CREATE TEMPORARY FUNCTION dboutput AS 'org.apache.hadoop.hive.contrib.genericudf.example.GenericUDFDBOutput'
PREHOOK: type: CREATEFUNCTION
PREHOOK: Output: dboutput
POSTHOOK: query: CREATE TEMPORARY FUNCTION dboutput AS 'org.apache.hadoop.hive.contrib.genericudf.example.GenericUDFDBOutput'
POSTHOOK: type: CREATEFUNCTION
POSTHOOK: Output: dboutput
PREHOOK: query: SELECT
#### A masked pattern was here ####
'create table DERBY_TBLS ( "TBL_ID" BIGINT  , "CREATE_TIME" BIGINT  , "DB_ID" BIGINT , "LAST_ACCESS_TIME" BIGINT  , "OWNER" VARCHAR(767) , "RETENTION" BIGINT  , "SD_ID" BIGINT , "TBL_NAME" VARCHAR(128) , "TBL_TYPE" VARCHAR(128) , "VIEW_EXPANDED_TEXT" VARCHAR(2000), "VIEW_ORIGINAL_TEXT" VARCHAR(2000))')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: SELECT
#### A masked pattern was here ####
'create table DERBY_TBLS ( "TBL_ID" BIGINT  , "CREATE_TIME" BIGINT  , "DB_ID" BIGINT , "LAST_ACCESS_TIME" BIGINT  , "OWNER" VARCHAR(767) , "RETENTION" BIGINT  , "SD_ID" BIGINT , "TBL_NAME" VARCHAR(128) , "TBL_TYPE" VARCHAR(128) , "VIEW_EXPANDED_TEXT" VARCHAR(2000), "VIEW_ORIGINAL_TEXT" VARCHAR(2000))')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
0
PREHOOK: query: SELECT
#### A masked pattern was here ####
'create table DERBY_DBS ( "DB_ID" BIGINT  , "DESC" VARCHAR(4000) , "DB_LOCATION_URI" VARCHAR(4000)  , "NAME" VARCHAR(128) , "OWNER_NAME" VARCHAR(128) , "OWNER_TYPE" VARCHAR(10) )')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: SELECT
#### A masked pattern was here ####
'create table DERBY_DBS ( "DB_ID" BIGINT  , "DESC" VARCHAR(4000) , "DB_LOCATION_URI" VARCHAR(4000)  , "NAME" VARCHAR(128) , "OWNER_NAME" VARCHAR(128) , "OWNER_TYPE" VARCHAR(10) )')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
0
PREHOOK: query: SELECT
#### A masked pattern was here ####
'create table DERBY_SDS ( "SD_ID" bigint  , "CD_ID" bigint , "INPUT_FORMAT" varchar(4000) , "IS_COMPRESSED" boolean  , "IS_STOREDASSUBDIRECTORIES" boolean  , "LOCATION" varchar(4000) , "NUM_BUCKETS" int  , "OUTPUT_FORMAT" varchar(4000) , "SERDE_ID" bigint )')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: SELECT
#### A masked pattern was here ####
'create table DERBY_SDS ( "SD_ID" bigint  , "CD_ID" bigint , "INPUT_FORMAT" varchar(4000) , "IS_COMPRESSED" boolean  , "IS_STOREDASSUBDIRECTORIES" boolean  , "LOCATION" varchar(4000) , "NUM_BUCKETS" int  , "OUTPUT_FORMAT" varchar(4000) , "SERDE_ID" bigint )')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
0
PREHOOK: query: SELECT
#### A masked pattern was here ####
'create table DERBY_COLUMNS_V2 ( "CD_ID" bigint  , "COMMENT" varchar(4000), "COLUMN_NAME" varchar(128)  , "TYPE_NAME" varchar(4000), "INTEGER_IDX" integer  )')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: SELECT
#### A masked pattern was here ####
'create table DERBY_COLUMNS_V2 ( "CD_ID" bigint  , "COMMENT" varchar(4000), "COLUMN_NAME" varchar(128)  , "TYPE_NAME" varchar(4000), "INTEGER_IDX" integer  )')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
0
PREHOOK: query: CREATE EXTERNAL TABLE TBLS
(
    TBL_ID BIGINT  ,
    CREATE_TIME BIGINT  ,
    DB_ID BIGINT ,
    LAST_ACCESS_TIME BIGINT  ,
    OWNER VARCHAR(767) ,
    RETENTION BIGINT  ,
    SD_ID BIGINT ,
    TBL_NAME VARCHAR(128) ,
    TBL_TYPE VARCHAR(128) ,
    VIEW_EXPANDED_TEXT VARCHAR(2000),
    VIEW_ORIGINAL_TEXT VARCHAR(2000)
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "DERBY_TBLS",
                "hive.sql.dbcp.maxActive" = "1"
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TBLS
POSTHOOK: query: CREATE EXTERNAL TABLE TBLS
(
    TBL_ID BIGINT  ,
    CREATE_TIME BIGINT  ,
    DB_ID BIGINT ,
    LAST_ACCESS_TIME BIGINT  ,
    OWNER VARCHAR(767) ,
    RETENTION BIGINT  ,
    SD_ID BIGINT ,
    TBL_NAME VARCHAR(128) ,
    TBL_TYPE VARCHAR(128) ,
    VIEW_EXPANDED_TEXT VARCHAR(2000),
    VIEW_ORIGINAL_TEXT VARCHAR(2000)
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "DERBY_TBLS",
                "hive.sql.dbcp.maxActive" = "1"
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TBLS
PREHOOK: query: CREATE EXTERNAL TABLE DBS
(
     DB_ID BIGINT  ,
     DESC VARCHAR(4000) ,
     DB_LOCATION_URI VARCHAR(4000)  ,
     NAME VARCHAR(128) ,
     OWNER_NAME VARCHAR(128) ,
     OWNER_TYPE VARCHAR(10) 
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "DERBY_DBS",
                "hive.sql.dbcp.maxActive" = "1"
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DBS
POSTHOOK: query: CREATE EXTERNAL TABLE DBS
(
     DB_ID BIGINT  ,
     DESC VARCHAR(4000) ,
     DB_LOCATION_URI VARCHAR(4000)  ,
     NAME VARCHAR(128) ,
     OWNER_NAME VARCHAR(128) ,
     OWNER_TYPE VARCHAR(10) 
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "DERBY_DBS",
                "hive.sql.dbcp.maxActive" = "1"
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DBS
PREHOOK: query: CREATE EXTERNAL TABLE SDS
(
     SD_ID bigint  ,
     CD_ID bigint ,
     INPUT_FORMAT varchar(4000) ,
     IS_COMPRESSED boolean  ,
     IS_STOREDASSUBDIRECTORIES boolean  ,
     LOCATION varchar(4000) ,
     NUM_BUCKETS int  ,
     OUTPUT_FORMAT varchar(4000) ,
     SERDE_ID bigint 
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "DERBY_SDS",
                "hive.sql.dbcp.maxActive" = "1"
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@SDS
POSTHOOK: query: CREATE EXTERNAL TABLE SDS
(
     SD_ID bigint  ,
     CD_ID bigint ,
     INPUT_FORMAT varchar(4000) ,
     IS_COMPRESSED boolean  ,
     IS_STOREDASSUBDIRECTORIES boolean  ,
     LOCATION varchar(4000) ,
     NUM_BUCKETS int  ,
     OUTPUT_FORMAT varchar(4000) ,
     SERDE_ID bigint 
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "DERBY_SDS",
                "hive.sql.dbcp.maxActive" = "1"
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@SDS
PREHOOK: query: CREATE EXTERNAL TABLE COLUMNS_V2
(
     CD_ID bigint  ,
     COMMENT varchar(4000),
     COLUMN_NAME varchar(128)  ,
     TYPE_NAME varchar(4000),
     INTEGER_IDX integer
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "DERBY_COLUMNS_V2",
                "hive.sql.dbcp.maxActive" = "1"
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@COLUMNS_V2
POSTHOOK: query: CREATE EXTERNAL TABLE COLUMNS_V2
(
     CD_ID bigint  ,
     COMMENT varchar(4000),
     COLUMN_NAME varchar(128)  ,
     TYPE_NAME varchar(4000),
     INTEGER_IDX integer
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
                "hive.sql.database.type" = "DERBY",
                "hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
#### A masked pattern was here ####
                "hive.sql.dbcp.username" = "APP",
                "hive.sql.dbcp.password" = "mine",
                "hive.sql.table" = "DERBY_COLUMNS_V2",
                "hive.sql.dbcp.maxActive" = "1"
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@COLUMNS_V2
PREHOOK: query: create view mv1 as select s.SD_ID, s.CD_ID, c.INTEGER_IDX, c.COLUMN_NAME from SDS s join COLUMNS_V2 c on c.CD_ID = s.CD_ID
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@columns_v2
PREHOOK: Input: default@sds
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create view mv1 as select s.SD_ID, s.CD_ID, c.INTEGER_IDX, c.COLUMN_NAME from SDS s join COLUMNS_V2 c on c.CD_ID = s.CD_ID
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@columns_v2
POSTHOOK: Input: default@sds
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
POSTHOOK: Lineage: mv1.cd_id SIMPLE [(sds)s.FieldSchema(name:cd_id, type:bigint, comment:from deserializer), ]
POSTHOOK: Lineage: mv1.column_name SIMPLE [(sds)s.FieldSchema(name:column_name, type:varchar(128), comment:from deserializer), ]
POSTHOOK: Lineage: mv1.integer_idx SIMPLE [(sds)s.FieldSchema(name:integer_idx, type:int, comment:from deserializer), ]
POSTHOOK: Lineage: mv1.sd_id SIMPLE [(sds)s.FieldSchema(name:sd_id, type:bigint, comment:from deserializer), ]
PREHOOK: query: explain cbo select d.NAME as DB_NAME, t.TBL_NAME, m.COLUMN_NAME as COL_NAME, INTEGER_IDX as COL_IDX
from TBLS t join DBS d on d.DB_ID = t.DB_ID join mv1 m on t.SD_ID = m.SD_ID
PREHOOK: type: QUERY
PREHOOK: Input: default@columns_v2
PREHOOK: Input: default@dbs
PREHOOK: Input: default@mv1
PREHOOK: Input: default@sds
PREHOOK: Input: default@tbls
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select d.NAME as DB_NAME, t.TBL_NAME, m.COLUMN_NAME as COL_NAME, INTEGER_IDX as COL_IDX
from TBLS t join DBS d on d.DB_ID = t.DB_ID join mv1 m on t.SD_ID = m.SD_ID
POSTHOOK: type: QUERY
POSTHOOK: Input: default@columns_v2
POSTHOOK: Input: default@dbs
POSTHOOK: Input: default@mv1
POSTHOOK: Input: default@sds
POSTHOOK: Input: default@tbls
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.DERBY])
  JdbcProject(db_name=[$4], tbl_name=[$2], col_name=[$6], col_idx=[$7])
    JdbcJoin(condition=[=($1, $8)], joinType=[inner])
      JdbcJoin(condition=[=($3, $0)], joinType=[inner])
        JdbcProject(DB_ID=[$2], SD_ID=[$6], TBL_NAME=[$7])
          JdbcFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($6))])
            JdbcHiveTableScan(table=[[default, tbls]], table:alias=[t])
        JdbcProject(DB_ID=[$0], NAME=[$3])
          JdbcFilter(condition=[IS NOT NULL($0)])
            JdbcHiveTableScan(table=[[default, dbs]], table:alias=[d])
      HiveProject(CD_ID=[$0], COLUMN_NAME=[$1], INTEGER_IDX=[$2], SD_ID=[$3], CD_ID0=[$4])
        JdbcJoin(condition=[=($0, $4)], joinType=[inner])
          JdbcProject(CD_ID=[$0], COLUMN_NAME=[$2], INTEGER_IDX=[$4])
            JdbcFilter(condition=[IS NOT NULL($0)])
              JdbcHiveTableScan(table=[[default, columns_v2]], table:alias=[c])
          JdbcProject(SD_ID=[$0], CD_ID=[$1])
            JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
              JdbcHiveTableScan(table=[[default, sds]], table:alias=[s])

