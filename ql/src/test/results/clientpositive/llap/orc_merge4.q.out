PREHOOK: query: DROP TABLE orcfile_merge3a
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE orcfile_merge3a
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE orcfile_merge3b
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE orcfile_merge3b
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE orcfile_merge3a (key int, value string) 
    PARTITIONED BY (ds string) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@orcfile_merge3a
POSTHOOK: query: CREATE TABLE orcfile_merge3a (key int, value string) 
    PARTITIONED BY (ds string) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orcfile_merge3a
PREHOOK: query: CREATE TABLE orcfile_merge3b (key int, value string) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@orcfile_merge3b
POSTHOOK: query: CREATE TABLE orcfile_merge3b (key int, value string) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orcfile_merge3b
PREHOOK: query: INSERT OVERWRITE TABLE orcfile_merge3a PARTITION (ds='1')
    SELECT * FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@orcfile_merge3a@ds=1
POSTHOOK: query: INSERT OVERWRITE TABLE orcfile_merge3a PARTITION (ds='1')
    SELECT * FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@orcfile_merge3a@ds=1
POSTHOOK: Lineage: orcfile_merge3a PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge3a PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
Found 1 items
-rw-rw-rw-   3 ### USER ### ### GROUP ###       2532 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: INSERT OVERWRITE TABLE orcfile_merge3a PARTITION (ds='1')
    SELECT * FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@orcfile_merge3a@ds=1
POSTHOOK: query: INSERT OVERWRITE TABLE orcfile_merge3a PARTITION (ds='1')
    SELECT * FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@orcfile_merge3a@ds=1
POSTHOOK: Lineage: orcfile_merge3a PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge3a PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: INSERT OVERWRITE TABLE orcfile_merge3a PARTITION (ds='2')
    SELECT * FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@orcfile_merge3a@ds=2
POSTHOOK: query: INSERT OVERWRITE TABLE orcfile_merge3a PARTITION (ds='2')
    SELECT * FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@orcfile_merge3a@ds=2
POSTHOOK: Lineage: orcfile_merge3a PARTITION(ds=2).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: orcfile_merge3a PARTITION(ds=2).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
Found 1 items
-rw-rw-rw-   3 ### USER ### ### GROUP ###       2532 ### HDFS DATE ### hdfs://### HDFS PATH ###
Found 1 items
-rw-rw-rw-   3 ### USER ### ### GROUP ###       2532 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: EXPLAIN INSERT OVERWRITE TABLE orcfile_merge3b
    SELECT key, value FROM orcfile_merge3a
PREHOOK: type: QUERY
PREHOOK: Input: default@orcfile_merge3a
PREHOOK: Input: default@orcfile_merge3a@ds=1
PREHOOK: Input: default@orcfile_merge3a@ds=2
PREHOOK: Output: default@orcfile_merge3b
POSTHOOK: query: EXPLAIN INSERT OVERWRITE TABLE orcfile_merge3b
    SELECT key, value FROM orcfile_merge3a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcfile_merge3a
POSTHOOK: Input: default@orcfile_merge3a@ds=1
POSTHOOK: Input: default@orcfile_merge3a@ds=2
POSTHOOK: Output: default@orcfile_merge3b
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orcfile_merge3a
                  Statistics: Num rows: 1000 Data size: 95000 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1000 Data size: 95000 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1000 Data size: 95000 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.orcfile_merge3b
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: string)
                      outputColumnNames: key, value
                      Statistics: Num rows: 1000 Data size: 95000 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), max(length(value)), avg(COALESCE(length(value),0)), count(value), compute_bit_vector_hll(value)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                        Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.orcfile_merge3b

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.orcfile_merge3b

PREHOOK: query: INSERT OVERWRITE TABLE orcfile_merge3b
    SELECT key, value FROM orcfile_merge3a
PREHOOK: type: QUERY
PREHOOK: Input: default@orcfile_merge3a
PREHOOK: Input: default@orcfile_merge3a@ds=1
PREHOOK: Input: default@orcfile_merge3a@ds=2
PREHOOK: Output: default@orcfile_merge3b
POSTHOOK: query: INSERT OVERWRITE TABLE orcfile_merge3b
    SELECT key, value FROM orcfile_merge3a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcfile_merge3a
POSTHOOK: Input: default@orcfile_merge3a@ds=1
POSTHOOK: Input: default@orcfile_merge3a@ds=2
POSTHOOK: Output: default@orcfile_merge3b
POSTHOOK: Lineage: orcfile_merge3b.key SIMPLE [(orcfile_merge3a)orcfile_merge3a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: orcfile_merge3b.value SIMPLE [(orcfile_merge3a)orcfile_merge3a.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value) USING 'tr \t _' AS (c)
    FROM orcfile_merge3a
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@orcfile_merge3a
PREHOOK: Input: default@orcfile_merge3a@ds=1
PREHOOK: Input: default@orcfile_merge3a@ds=2
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value) USING 'tr \t _' AS (c)
    FROM orcfile_merge3a
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcfile_merge3a
POSTHOOK: Input: default@orcfile_merge3a@ds=1
POSTHOOK: Input: default@orcfile_merge3a@ds=2
POSTHOOK: Output: hdfs://### HDFS PATH ###
14412220296
PREHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value) USING 'tr \t _' AS (c)
    FROM orcfile_merge3b
) t
PREHOOK: type: QUERY
PREHOOK: Input: default@orcfile_merge3b
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
    SELECT TRANSFORM(key, value) USING 'tr \t _' AS (c)
    FROM orcfile_merge3b
) t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orcfile_merge3b
POSTHOOK: Output: hdfs://### HDFS PATH ###
14412220296
PREHOOK: query: DROP TABLE orcfile_merge3a
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@orcfile_merge3a
PREHOOK: Output: default@orcfile_merge3a
POSTHOOK: query: DROP TABLE orcfile_merge3a
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@orcfile_merge3a
POSTHOOK: Output: default@orcfile_merge3a
PREHOOK: query: DROP TABLE orcfile_merge3b
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@orcfile_merge3b
PREHOOK: Output: default@orcfile_merge3b
POSTHOOK: query: DROP TABLE orcfile_merge3b
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@orcfile_merge3b
POSTHOOK: Output: default@orcfile_merge3b
