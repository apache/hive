PREHOOK: query: create table sketch_input (id int, category char(1))
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sketch_input
POSTHOOK: query: create table sketch_input (id int, category char(1))
STORED AS ORC
TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sketch_input
PREHOOK: query: insert into table sketch_input values
  (1,'a'),(1, 'a'), (2, 'a'), (3, 'a'), (4, 'a'), (5, 'a'), (6, 'a'), (7, 'a'), (8, 'a'), (9, 'a'), (10, 'a'),
  (6,'b'),(6, 'b'), (7, 'b'), (8, 'b'), (9, 'b'), (10, 'b'), (11, 'b'), (12, 'b'), (13, 'b'), (14, 'b'), (15, 'b')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@sketch_input
POSTHOOK: query: insert into table sketch_input values
  (1,'a'),(1, 'a'), (2, 'a'), (3, 'a'), (4, 'a'), (5, 'a'), (6, 'a'), (7, 'a'), (8, 'a'), (9, 'a'), (10, 'a'),
  (6,'b'),(6, 'b'), (7, 'b'), (8, 'b'), (9, 'b'), (10, 'b'), (11, 'b'), (12, 'b'), (13, 'b'), (14, 'b'), (15, 'b')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@sketch_input
POSTHOOK: Lineage: sketch_input.category SCRIPT []
POSTHOOK: Lineage: sketch_input.id SCRIPT []
PREHOOK: query: create  materialized view mv_1 as
  select category, ds_hll_sketch(id),count(id) from sketch_input group by category
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@sketch_input
PREHOOK: Output: database:default
PREHOOK: Output: default@mv_1
POSTHOOK: query: create  materialized view mv_1 as
  select category, ds_hll_sketch(id),count(id) from sketch_input group by category
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@sketch_input
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv_1
PREHOOK: query: explain
select 'rewrite; mv matching', category, count(distinct id) from sketch_input group by category
PREHOOK: type: QUERY
PREHOOK: Input: default@mv_1
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: explain
select 'rewrite; mv matching', category, count(distinct id) from sketch_input group by category
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv_1
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv_1
                  Statistics: Num rows: 2 Data size: 362 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: 'rewrite; mv matching' (type: string), category (type: char(1)), UDFToLong(round(ds_hll_estimate(_c1))) (type: bigint)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 2 Data size: 394 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 2 Data size: 394 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select 'rewrite; mv matching', category, count(distinct id) from sketch_input group by category
PREHOOK: type: QUERY
PREHOOK: Input: default@mv_1
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: select 'rewrite; mv matching', category, count(distinct id) from sketch_input group by category
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv_1
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
rewrite; mv matching	a	10
rewrite; mv matching	b	10
PREHOOK: query: explain
select 'no rewrite; no mv usage', category, count(distinct id) from sketch_input group by category
PREHOOK: type: QUERY
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: explain
select 'no rewrite; no mv usage', category, count(distinct id) from sketch_input group by category
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: sketch_input
                  Statistics: Num rows: 22 Data size: 1958 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), category (type: char(1))
                    outputColumnNames: id, category
                    Statistics: Num rows: 22 Data size: 1958 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: category (type: char(1)), id (type: int)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 15 Data size: 1335 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: char(1)), _col1 (type: int)
                        null sort order: zz
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: char(1))
                        Statistics: Num rows: 15 Data size: 1335 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: char(1)), KEY._col1 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 15 Data size: 1335 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: int), _col0 (type: char(1))
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 15 Data size: 1335 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: count(_col0)
                    keys: _col1 (type: char(1))
                    mode: complete
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 2 Data size: 186 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: 'no rewrite; no mv usage' (type: string), _col0 (type: char(1)), _col1 (type: bigint)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 2 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 2 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select 'no rewrite; no mv usage', category, count(distinct id) from sketch_input group by category
PREHOOK: type: QUERY
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: select 'no rewrite; no mv usage', category, count(distinct id) from sketch_input group by category
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
no rewrite; no mv usage	a	10
no rewrite; no mv usage	b	10
PREHOOK: query: insert into table sketch_input values
  (1,'a'),(1, 'a'), (2, 'a'), (3, 'a'), (4, 'a'), (5, 'a'), (6, 'a'), (7, 'a'), (8, 'a'), (9, 'a'), (10, 'a'),
  (6,'b'),(6, 'b'), (7, 'b'), (8, 'b'), (9, 'b'), (10, 'b'), (11, 'b'), (12, 'b'), (13, 'b'), (14, 'b'), (15, 'b')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@sketch_input
POSTHOOK: query: insert into table sketch_input values
  (1,'a'),(1, 'a'), (2, 'a'), (3, 'a'), (4, 'a'), (5, 'a'), (6, 'a'), (7, 'a'), (8, 'a'), (9, 'a'), (10, 'a'),
  (6,'b'),(6, 'b'), (7, 'b'), (8, 'b'), (9, 'b'), (10, 'b'), (11, 'b'), (12, 'b'), (13, 'b'), (14, 'b'), (15, 'b')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@sketch_input
POSTHOOK: Lineage: sketch_input.category SCRIPT []
POSTHOOK: Lineage: sketch_input.id SCRIPT []
PREHOOK: query: explain
select 'rewrite; but no mv usage', category, count(distinct id) from sketch_input group by category
PREHOOK: type: QUERY
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: explain
select 'rewrite; but no mv usage', category, count(distinct id) from sketch_input group by category
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: sketch_input
                  Statistics: Num rows: 44 Data size: 3916 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: id (type: int), category (type: char(1))
                    outputColumnNames: id, category
                    Statistics: Num rows: 44 Data size: 3916 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: ds_hll_sketch(id)
                      keys: category (type: char(1))
                      minReductionHashAggr: 0.95454544
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 2 Data size: 946 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: char(1))
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: char(1))
                        Statistics: Num rows: 2 Data size: 946 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: struct<lgk:int,type:string,sketch:binary>)
            Execution mode: llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: ds_hll_sketch(VALUE._col0)
                keys: KEY._col0 (type: char(1))
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 2 Data size: 458 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'rewrite; but no mv usage' (type: string), _col0 (type: char(1)), UDFToLong(round(ds_hll_estimate(_col1))) (type: bigint)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 2 Data size: 402 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 402 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select 'rewrite; but no mv usage', category, count(distinct id) from sketch_input group by category
PREHOOK: type: QUERY
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: select 'rewrite; but no mv usage', category, count(distinct id) from sketch_input group by category
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
rewrite; but no mv usage	a	10
rewrite; but no mv usage	b	10
PREHOOK: query: explain
alter materialized view mv_1 rebuild
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@mv_1
PREHOOK: Input: default@sketch_input
PREHOOK: Output: default@mv_1
POSTHOOK: query: explain
alter materialized view mv_1 rebuild
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@mv_1
POSTHOOK: Input: default@sketch_input
POSTHOOK: Output: default@mv_1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-4 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 6 <- Union 3 (CONTAINS)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Union 3 (CONTAINS)
        Reducer 4 <- Union 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: sketch_input
                  filterExpr: (ROW__ID.writeid > 1L) (type: boolean)
                  Statistics: Num rows: 44 Data size: 3916 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (ROW__ID.writeid > 1L) (type: boolean)
                    Statistics: Num rows: 14 Data size: 1246 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: id (type: int), category (type: char(1))
                      outputColumnNames: id, category
                      Statistics: Num rows: 14 Data size: 1246 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: ds_hll_sketch(id), count(id)
                        keys: category (type: char(1))
                        minReductionHashAggr: 0.85714287
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 2 Data size: 962 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: char(1))
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: char(1))
                          Statistics: Num rows: 2 Data size: 962 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: struct<lgk:int,type:string,sketch:binary>), _col2 (type: bigint)
            Execution mode: llap
            LLAP IO: may be used (ACID table)
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: default.mv_1
                  Statistics: Num rows: 2 Data size: 378 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: category (type: char(1)), _c1 (type: binary), _c2 (type: bigint)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 2 Data size: 378 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: ds_hll_union(_col1), sum(_col2)
                      keys: _col0 (type: char(1))
                      minReductionHashAggr: 0.5
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 2 Data size: 962 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: char(1))
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: char(1))
                        Statistics: Num rows: 2 Data size: 962 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: struct<lgk:int,type:string,sketch:binary>), _col2 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: ds_hll_sketch(VALUE._col0), count(VALUE._col1)
                keys: KEY._col0 (type: char(1))
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2 Data size: 474 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: ds_hll_union(_col1), sum(_col2)
                  keys: _col0 (type: char(1))
                  minReductionHashAggr: 0.5
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 2 Data size: 962 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: char(1))
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: char(1))
                    Statistics: Num rows: 2 Data size: 962 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: struct<lgk:int,type:string,sketch:binary>), _col2 (type: bigint)
        Reducer 4 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: ds_hll_union(VALUE._col0), sum(VALUE._col1)
                keys: KEY._col0 (type: char(1))
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2 Data size: 474 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: char(1)), _col1 (type: binary), COALESCE(_col2,0L) (type: bigint)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 2 Data size: 474 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 474 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                        output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                        serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                        name: default.mv_1
                  Select Operator
                    expressions: _col0 (type: char(1)), _col1 (type: binary), _col2 (type: bigint)
                    outputColumnNames: category, _c1, _c2
                    Statistics: Num rows: 2 Data size: 474 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: max(length(category)), avg(COALESCE(length(category),0)), count(1), count(category), compute_bit_vector_hll(category), max(length(_c1)), avg(COALESCE(length(_c1),0)), count(_c1), min(_c2), max(_c2), count(_c2), compute_bit_vector_hll(_c2)
                      minReductionHashAggr: 0.5
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                      Statistics: Num rows: 1 Data size: 496 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 496 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: bigint), _col9 (type: bigint), _col10 (type: bigint), _col11 (type: binary)
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), min(VALUE._col8), max(VALUE._col9), count(VALUE._col10), compute_bit_vector_hll(VALUE._col11)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                Statistics: Num rows: 1 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'BINARY' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), 'LONG' (type: string), _col8 (type: bigint), _col9 (type: bigint), (_col2 - _col10) (type: bigint), COALESCE(ndv_compute_bit_vector(_col11),0) (type: bigint), _col11 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15
                  Statistics: Num rows: 1 Data size: 644 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 644 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Union 3 
            Vertex: Union 3

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.mv_1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: category, _c1, _c2
          Column Types: char(1), binary, bigint
          Table: default.mv_1

  Stage: Stage-4
    Materialized View Update
      name: default.mv_1
      update creation metadata: true

PREHOOK: query: alter materialized view mv_1 rebuild
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@mv_1
PREHOOK: Input: default@sketch_input
PREHOOK: Output: default@mv_1
POSTHOOK: query: alter materialized view mv_1 rebuild
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@mv_1
POSTHOOK: Input: default@sketch_input
POSTHOOK: Output: default@mv_1
POSTHOOK: Lineage: mv_1._c1 EXPRESSION [(sketch_input)sketch_input.FieldSchema(name:id, type:int, comment:null), (mv_1)default.mv_1.FieldSchema(name:_c1, type:binary, comment:null), ]
POSTHOOK: Lineage: mv_1._c2 EXPRESSION [(sketch_input)sketch_input.FieldSchema(name:id, type:int, comment:null), (mv_1)default.mv_1.FieldSchema(name:_c2, type:bigint, comment:null), ]
POSTHOOK: Lineage: mv_1.category EXPRESSION [(sketch_input)sketch_input.FieldSchema(name:category, type:char(1), comment:null), (mv_1)default.mv_1.FieldSchema(name:category, type:char(1), comment:null), ]
PREHOOK: query: explain
select 'rewrite; mv matching', category, count(distinct id) from sketch_input group by category
PREHOOK: type: QUERY
PREHOOK: Input: default@mv_1
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: explain
select 'rewrite; mv matching', category, count(distinct id) from sketch_input group by category
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv_1
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv_1
                  Statistics: Num rows: 2 Data size: 362 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: 'rewrite; mv matching' (type: string), category (type: char(1)), UDFToLong(round(ds_hll_estimate(_c1))) (type: bigint)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 2 Data size: 394 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 2 Data size: 394 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: all inputs

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select 'rewrite; mv matching', category, count(distinct id) from sketch_input group by category
PREHOOK: type: QUERY
PREHOOK: Input: default@mv_1
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: select 'rewrite; mv matching', category, count(distinct id) from sketch_input group by category
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv_1
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
rewrite; mv matching	a	10
rewrite; mv matching	b	10
PREHOOK: query: explain
select 'rewrite;mv matching with rollup',count(distinct id) from sketch_input
PREHOOK: type: QUERY
PREHOOK: Input: default@mv_1
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: explain
select 'rewrite;mv matching with rollup',count(distinct id) from sketch_input
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv_1
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv_1
                  Statistics: Num rows: 2 Data size: 192 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _c1 (type: binary)
                    outputColumnNames: _c1
                    Statistics: Num rows: 2 Data size: 192 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: ds_hll_union(_c1)
                      minReductionHashAggr: 0.5
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 388 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 388 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: struct<lgk:int,type:string,sketch:binary>)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: ds_hll_union(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 144 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'rewrite;mv matching with rollup' (type: string), UDFToLong(round(ds_hll_estimate(_col0))) (type: bigint)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 123 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 123 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select 'rewrite;mv matching with rollup',count(distinct id) from sketch_input
PREHOOK: type: QUERY
PREHOOK: Input: default@mv_1
PREHOOK: Input: default@sketch_input
#### A masked pattern was here ####
POSTHOOK: query: select 'rewrite;mv matching with rollup',count(distinct id) from sketch_input
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv_1
POSTHOOK: Input: default@sketch_input
#### A masked pattern was here ####
rewrite;mv matching with rollup	15
PREHOOK: query: drop materialized view mv_1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv_1
PREHOOK: Output: default@mv_1
POSTHOOK: query: drop materialized view mv_1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv_1
POSTHOOK: Output: default@mv_1
