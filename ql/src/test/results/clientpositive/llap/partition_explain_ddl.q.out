PREHOOK: query: CREATE TABLE add_part_test (key STRING, value STRING) PARTITIONED BY (ds STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@add_part_test
POSTHOOK: query: CREATE TABLE add_part_test (key STRING, value STRING) PARTITIONED BY (ds STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@add_part_test
PREHOOK: query: explain ddl select * from add_part_test
PREHOOK: type: QUERY
PREHOOK: Input: default@add_part_test
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@add_part_test
#### A masked pattern was here ####

CREATE TABLE `default`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from add_part_test;

EXPLAIN CBO select * from add_part_test;

EXPLAIN VECTORIZED select * from add_part_test;
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[$2])
  HiveTableScan(table=[[default, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          Select Operator
            expressions: key (type: string), value (type: string), ds (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: ALTER TABLE add_part_test ADD PARTITION (ds='2010-01-01')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@add_part_test
POSTHOOK: query: ALTER TABLE add_part_test ADD PARTITION (ds='2010-01-01')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@add_part_test
POSTHOOK: Output: default@add_part_test@ds=2010-01-01
PREHOOK: query: insert into add_part_test partition(ds='2010-01-01') values ('key_1','value_1'),
('key_2','value_2'),
('key_3','value_3'),
('key_4','value_4'),
('key_5','value_5'),
('key_6','value_6'),
('key_7','value_7'),
('key_8','value_8'),
('key_9','value_9'),
('key_10','value_10'),
('key_11','value_11'),
('key_12','value_12'),
('key_13','value_13'),
('key_14','value_14'),
('key_15','value_15'),
('key_16','value_16'),
('key_17','value_17'),
('key_18','value_18'),
('key_19','value_19')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@add_part_test@ds=2010-01-01
POSTHOOK: query: insert into add_part_test partition(ds='2010-01-01') values ('key_1','value_1'),
('key_2','value_2'),
('key_3','value_3'),
('key_4','value_4'),
('key_5','value_5'),
('key_6','value_6'),
('key_7','value_7'),
('key_8','value_8'),
('key_9','value_9'),
('key_10','value_10'),
('key_11','value_11'),
('key_12','value_12'),
('key_13','value_13'),
('key_14','value_14'),
('key_15','value_15'),
('key_16','value_16'),
('key_17','value_17'),
('key_18','value_18'),
('key_19','value_19')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@add_part_test@ds=2010-01-01
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-01).key SCRIPT []
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-01).value SCRIPT []
PREHOOK: query: explain ddl select * from add_part_test where ds='2010-01-01'
PREHOOK: type: QUERY
PREHOOK: Input: default@add_part_test
PREHOOK: Input: default@add_part_test@ds=2010-01-01
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test where ds='2010-01-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@add_part_test
POSTHOOK: Input: default@add_part_test@ds=2010-01-01
#### A masked pattern was here ####

CREATE TABLE `default`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTga///AODuuFlwpGjgAL7r+CB+/////8BgPGY2AGB8bqnA8TDyvT6/////wG75PK0BMDg56b6/////wGAn/E7wM3HswOA1rnX/P////8BguujpwOB4qzYAv6j2hD/wYu4+v////8BgIKhwAGAge7KA8Cop9b//////wE= 
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTwq6o+gLE0trKAvuXwdz6/////wGAp4ikAcCYgKYEgKv42f3/////AcLt7oMD/orRm///////AcDeotcBwOvPh/r/////AYDyz7kGwM+kvvz/////AYD90bn+/////wGBytzd/v////8Bv9fU1v//////AYDRh8UEwf6S/v3/////Ab+aqtIChMGNvP7/////AQ== 




EXPLAIN select * from add_part_test where ds='2010-01-01';



EXPLAIN CBO select * from add_part_test where ds='2010-01-01';



EXPLAIN VECTORIZED select * from add_part_test where ds='2010-01-01';
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[CAST(_UTF-16LE'2010-01-01':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):VARCHAR(2147483647) CHARACTER SET "UTF-16LE"])
  HiveFilter(condition=[=($2, _UTF-16LE'2010-01-01')])
    HiveTableScan(table=[[default, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          filterExpr: (ds = '2010-01-01') (type: boolean)
          Select Operator
            expressions: key (type: string), value (type: string), '2010-01-01' (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: ALTER TABLE add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01') PARTITION (ds='2010-01-02') PARTITION (ds='2010-01-03')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@add_part_test
POSTHOOK: query: ALTER TABLE add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01') PARTITION (ds='2010-01-02') PARTITION (ds='2010-01-03')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@add_part_test
POSTHOOK: Output: default@add_part_test@ds=2010-01-02
POSTHOOK: Output: default@add_part_test@ds=2010-01-03
PREHOOK: query: insert into add_part_test partition(ds='2010-01-03')  values ('key_20','value_20'),
('key_21','value_21'),
('key_22','value_22'),
('key_23','value_23'),
('key_24','value_24'),
('key_25','value_25'),
('key_26','value_26'),
('key_32','value_32'),
('key_33','value_33'),
('key_34','value_34'),
('key_35','value_35'),
('key_36','value_36'),
('key_37','value_37'),
('key_38','value_38'),
('key_39','value_39')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@add_part_test@ds=2010-01-03
POSTHOOK: query: insert into add_part_test partition(ds='2010-01-03')  values ('key_20','value_20'),
('key_21','value_21'),
('key_22','value_22'),
('key_23','value_23'),
('key_24','value_24'),
('key_25','value_25'),
('key_26','value_26'),
('key_32','value_32'),
('key_33','value_33'),
('key_34','value_34'),
('key_35','value_35'),
('key_36','value_36'),
('key_37','value_37'),
('key_38','value_38'),
('key_39','value_39')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@add_part_test@ds=2010-01-03
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-03).key SCRIPT []
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-03).value SCRIPT []
PREHOOK: query: explain ddl select * from add_part_test where ds>='2010-01-01'
PREHOOK: type: QUERY
PREHOOK: Input: default@add_part_test
PREHOOK: Input: default@add_part_test@ds=2010-01-01
PREHOOK: Input: default@add_part_test@ds=2010-01-02
PREHOOK: Input: default@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test where ds>='2010-01-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@add_part_test
POSTHOOK: Input: default@add_part_test@ds=2010-01-01
POSTHOOK: Input: default@add_part_test@ds=2010-01-02
POSTHOOK: Input: default@add_part_test@ds=2010-01-03
#### A masked pattern was here ####

CREATE TABLE `default`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE default.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-02');
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-03');
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS SET('numRows'='15','rawDataSize'='225' );
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTwq6o+gLE0trKAvuXwdz6/////wGAp4ikAcCYgKYEgKv42f3/////AcLt7oMD/orRm///////AcDeotcBwOvPh/r/////AYDyz7kGwM+kvvz/////AYD90bn+/////wGBytzd/v////8Bv9fU1v//////AYDRh8UEwf6S/v3/////Ab+aqtIChMGNvP7/////AQ== 
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTga///AODuuFlwpGjgAL7r+CB+/////8BgPGY2AGB8bqnA8TDyvT6/////wG75PK0BMDg56b6/////wGAn/E7wM3HswOA1rnX/P////8BguujpwOB4qzYAv6j2hD/wYu4+v////8BgIKhwAGAge7KA8Cop9b//////wE= 
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='8.0','maxColLen'='8','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-03' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PgaOnjASAnPDu//////8BwfPgSP+i5ViAxKHO/P////8BgIjfnQTA44A8gJ2G1///////AcSq3Y7//////wH84vzz/f////8BhYzE6vz/////AfyQ+MsH/4aiEoChh/v//////wHBvOTP//////8B 
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='6.0','maxColLen'='6','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-03' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PxLrgqgHA37++Bv2T79H6/////wGAkZX+/v////8BwYzG8AWApP7O+f////8BgdfK4wT/m6bn+/////8B/9jt3wKC8sjC/f////8BvuyTzgPB1Mbz/P////8Bv5KKwgTBi8Ph+f////8BgIaQ5QM= 



EXPLAIN select * from add_part_test where ds>='2010-01-01';


EXPLAIN CBO select * from add_part_test where ds>='2010-01-01';


EXPLAIN VECTORIZED select * from add_part_test where ds>='2010-01-01';
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[$2])
  HiveFilter(condition=[>=($2, _UTF-16LE'2010-01-01')])
    HiveTableScan(table=[[default, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          filterExpr: (ds >= '2010-01-01') (type: boolean)
          Select Operator
            expressions: key (type: string), value (type: string), ds (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: DROP TABLE add_part_test
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@add_part_test
PREHOOK: Output: database:default
PREHOOK: Output: default@add_part_test
POSTHOOK: query: DROP TABLE add_part_test
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@add_part_test
POSTHOOK: Output: database:default
POSTHOOK: Output: default@add_part_test
PREHOOK: query: CREATE DATABASE add_part_test_db
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:add_part_test_db
POSTHOOK: query: CREATE DATABASE add_part_test_db
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:add_part_test_db
PREHOOK: query: CREATE TABLE add_part_test_db.add_part_test (key STRING, value STRING) PARTITIONED BY (ds STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: add_part_test_db@add_part_test
PREHOOK: Output: database:add_part_test_db
POSTHOOK: query: CREATE TABLE add_part_test_db.add_part_test (key STRING, value STRING) PARTITIONED BY (ds STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: database:add_part_test_db
PREHOOK: query: ALTER TABLE add_part_test_db.add_part_test ADD PARTITION (ds='2010-01-01')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: query: ALTER TABLE add_part_test_db.add_part_test ADD PARTITION (ds='2010-01-01')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: query: insert into add_part_test_db.add_part_test partition(ds='2010-01-01') values ('key_1','value_1'),
('key_2','value_2'),
('key_3','value_3'),
('key_4','value_4'),
('key_5','value_5'),
('key_6','value_6'),
('key_7','value_7'),
('key_8','value_8'),
('key_9','value_9'),
('key_10','value_10'),
('key_11','value_11'),
('key_12','value_12'),
('key_13','value_13'),
('key_14','value_14'),
('key_15','value_15'),
('key_16','value_16'),
('key_17','value_17'),
('key_18','value_18'),
('key_19','value_19')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: query: insert into add_part_test_db.add_part_test partition(ds='2010-01-01') values ('key_1','value_1'),
('key_2','value_2'),
('key_3','value_3'),
('key_4','value_4'),
('key_5','value_5'),
('key_6','value_6'),
('key_7','value_7'),
('key_8','value_8'),
('key_9','value_9'),
('key_10','value_10'),
('key_11','value_11'),
('key_12','value_12'),
('key_13','value_13'),
('key_14','value_14'),
('key_15','value_15'),
('key_16','value_16'),
('key_17','value_17'),
('key_18','value_18'),
('key_19','value_19')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-01).key SCRIPT []
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-01).value SCRIPT []
PREHOOK: query: explain ddl select * from add_part_test_db.add_part_test where ds='2010-01-01'
PREHOOK: type: QUERY
PREHOOK: Input: add_part_test_db@add_part_test
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test_db.add_part_test where ds='2010-01-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: add_part_test_db@add_part_test
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS add_part_test_db;
CREATE TABLE `add_part_test_db`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE add_part_test_db.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTga///AODuuFlwpGjgAL7r+CB+/////8BgPGY2AGB8bqnA8TDyvT6/////wG75PK0BMDg56b6/////wGAn/E7wM3HswOA1rnX/P////8BguujpwOB4qzYAv6j2hD/wYu4+v////8BgIKhwAGAge7KA8Cop9b//////wE= 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTwq6o+gLE0trKAvuXwdz6/////wGAp4ikAcCYgKYEgKv42f3/////AcLt7oMD/orRm///////AcDeotcBwOvPh/r/////AYDyz7kGwM+kvvz/////AYD90bn+/////wGBytzd/v////8Bv9fU1v//////AYDRh8UEwf6S/v3/////Ab+aqtIChMGNvP7/////AQ== 




EXPLAIN select * from add_part_test_db.add_part_test where ds='2010-01-01';



EXPLAIN CBO select * from add_part_test_db.add_part_test where ds='2010-01-01';



EXPLAIN VECTORIZED select * from add_part_test_db.add_part_test where ds='2010-01-01';
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[CAST(_UTF-16LE'2010-01-01':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):VARCHAR(2147483647) CHARACTER SET "UTF-16LE"])
  HiveFilter(condition=[=($2, _UTF-16LE'2010-01-01')])
    HiveTableScan(table=[[add_part_test_db, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          filterExpr: (ds = '2010-01-01') (type: boolean)
          Select Operator
            expressions: key (type: string), value (type: string), '2010-01-01' (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01') PARTITION (ds='2010-01-02') PARTITION (ds='2010-01-03')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: query: ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01') PARTITION (ds='2010-01-02') PARTITION (ds='2010-01-03')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
PREHOOK: query: insert into add_part_test_db.add_part_test partition(ds='2010-01-03')  values ('key_20','value_20'),
('key_21','value_21'),
('key_22','value_22'),
('key_23','value_23'),
('key_24','value_24'),
('key_25','value_25'),
('key_26','value_26'),
('key_32','value_32'),
('key_33','value_33'),
('key_34','value_34'),
('key_35','value_35'),
('key_36','value_36'),
('key_37','value_37'),
('key_38','value_38'),
('key_39','value_39')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
POSTHOOK: query: insert into add_part_test_db.add_part_test partition(ds='2010-01-03')  values ('key_20','value_20'),
('key_21','value_21'),
('key_22','value_22'),
('key_23','value_23'),
('key_24','value_24'),
('key_25','value_25'),
('key_26','value_26'),
('key_32','value_32'),
('key_33','value_33'),
('key_34','value_34'),
('key_35','value_35'),
('key_36','value_36'),
('key_37','value_37'),
('key_38','value_38'),
('key_39','value_39')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-03).key SCRIPT []
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-03).value SCRIPT []
PREHOOK: query: explain ddl select * from add_part_test_db.add_part_test where ds>='2010-01-01'
PREHOOK: type: QUERY
PREHOOK: Input: add_part_test_db@add_part_test
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test_db.add_part_test where ds>='2010-01-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: add_part_test_db@add_part_test
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS add_part_test_db;
CREATE TABLE `add_part_test_db`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE add_part_test_db.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-02');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-03');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS SET('numRows'='15','rawDataSize'='225' );
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTwq6o+gLE0trKAvuXwdz6/////wGAp4ikAcCYgKYEgKv42f3/////AcLt7oMD/orRm///////AcDeotcBwOvPh/r/////AYDyz7kGwM+kvvz/////AYD90bn+/////wGBytzd/v////8Bv9fU1v//////AYDRh8UEwf6S/v3/////Ab+aqtIChMGNvP7/////AQ== 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTga///AODuuFlwpGjgAL7r+CB+/////8BgPGY2AGB8bqnA8TDyvT6/////wG75PK0BMDg56b6/////wGAn/E7wM3HswOA1rnX/P////8BguujpwOB4qzYAv6j2hD/wYu4+v////8BgIKhwAGAge7KA8Cop9b//////wE= 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='8.0','maxColLen'='8','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-03' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PgaOnjASAnPDu//////8BwfPgSP+i5ViAxKHO/P////8BgIjfnQTA44A8gJ2G1///////AcSq3Y7//////wH84vzz/f////8BhYzE6vz/////AfyQ+MsH/4aiEoChh/v//////wHBvOTP//////8B 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='6.0','maxColLen'='6','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-03' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PxLrgqgHA37++Bv2T79H6/////wGAkZX+/v////8BwYzG8AWApP7O+f////8BgdfK4wT/m6bn+/////8B/9jt3wKC8sjC/f////8BvuyTzgPB1Mbz/P////8Bv5KKwgTBi8Ph+f////8BgIaQ5QM= 



EXPLAIN select * from add_part_test_db.add_part_test where ds>='2010-01-01';


EXPLAIN CBO select * from add_part_test_db.add_part_test where ds>='2010-01-01';


EXPLAIN VECTORIZED select * from add_part_test_db.add_part_test where ds>='2010-01-01';
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[$2])
  HiveFilter(condition=[>=($2, _UTF-16LE'2010-01-01')])
    HiveTableScan(table=[[add_part_test_db, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          filterExpr: (ds >= '2010-01-01') (type: boolean)
          Select Operator
            expressions: key (type: string), value (type: string), ds (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: analyze table  add_part_test_db.add_part_test compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: add_part_test_db@add_part_test
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
PREHOOK: Output: add_part_test_db@add_part_test
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-02
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
POSTHOOK: query: analyze table  add_part_test_db.add_part_test compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: add_part_test_db@add_part_test
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
PREHOOK: query: explain ddl select * from add_part_test_db.add_part_test
PREHOOK: type: QUERY
PREHOOK: Input: add_part_test_db@add_part_test
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test_db.add_part_test
POSTHOOK: type: QUERY
POSTHOOK: Input: add_part_test_db@add_part_test
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS add_part_test_db;
CREATE TABLE `add_part_test_db`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE add_part_test_db.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-02');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-03');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS SET('numRows'='15','rawDataSize'='225' );
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTwq6o+gLE0trKAvuXwdz6/////wGAp4ikAcCYgKYEgKv42f3/////AcLt7oMD/orRm///////AcDeotcBwOvPh/r/////AYDyz7kGwM+kvvz/////AYD90bn+/////wGBytzd/v////8Bv9fU1v//////AYDRh8UEwf6S/v3/////Ab+aqtIChMGNvP7/////AQ== 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTga///AODuuFlwpGjgAL7r+CB+/////8BgPGY2AGB8bqnA8TDyvT6/////wG75PK0BMDg56b6/////wGAn/E7wM3HswOA1rnX/P////8BguujpwOB4qzYAv6j2hD/wYu4+v////8BgIKhwAGAge7KA8Cop9b//////wE= 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='8.0','maxColLen'='8','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-03' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PgaOnjASAnPDu//////8BwfPgSP+i5ViAxKHO/P////8BgIjfnQTA44A8gJ2G1///////AcSq3Y7//////wH84vzz/f////8BhYzE6vz/////AfyQ+MsH/4aiEoChh/v//////wHBvOTP//////8B 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='6.0','maxColLen'='6','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-03' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PxLrgqgHA37++Bv2T79H6/////wGAkZX+/v////8BwYzG8AWApP7O+f////8BgdfK4wT/m6bn+/////8B/9jt3wKC8sjC/f////8BvuyTzgPB1Mbz/P////8Bv5KKwgTBi8Ph+f////8BgIaQ5QM= 



EXPLAIN select * from add_part_test_db.add_part_test;


EXPLAIN CBO select * from add_part_test_db.add_part_test;


EXPLAIN VECTORIZED select * from add_part_test_db.add_part_test;
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[$2])
  HiveTableScan(table=[[add_part_test_db, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          Select Operator
            expressions: key (type: string), value (type: string), ds (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: DROP DATABASE add_part_test_db cascade
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:add_part_test_db
PREHOOK: Output: add_part_test_db@add_part_test
PREHOOK: Output: database:add_part_test_db
POSTHOOK: query: DROP DATABASE add_part_test_db cascade
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:add_part_test_db
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: database:add_part_test_db
PREHOOK: query: create database db_bdpbase
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:db_bdpbase
POSTHOOK: query: create database db_bdpbase
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:db_bdpbase
PREHOOK: query: CREATE TABLE db_bdpbase.emp_sports(
  id INT,
  firstname STRING,
  lastname STRING,
  sports STRING,
  city STRING,
  country STRING
) ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
TBLPROPERTIES("skip.header.line.count"="1")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:db_bdpbase
PREHOOK: Output: db_bdpbase@emp_sports
POSTHOOK: query: CREATE TABLE db_bdpbase.emp_sports(
  id INT,
  firstname STRING,
  lastname STRING,
  sports STRING,
  city STRING,
  country STRING
) ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
TBLPROPERTIES("skip.header.line.count"="1")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:db_bdpbase
POSTHOOK: Output: db_bdpbase@emp_sports
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/part_data_explain_ddl.csv' INTO table db_bdpbase.emp_sports
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: db_bdpbase@emp_sports
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/part_data_explain_ddl.csv' INTO table db_bdpbase.emp_sports
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: db_bdpbase@emp_sports
PREHOOK: query: CREATE TABLE DB_BDPBASE.DEFAULT_PARTITION_TEST(
  ID    INT,
  FIRSTNAME   STRING,
  LASTNAME STRING,
  CITY STRING,
  COUNTRY  STRING
) PARTITIONED BY (
  SPORTS STRING
) ROW FORMAT DELIMITED
FIELDS TERMINATED  BY  ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: DB_BDPBASE@DEFAULT_PARTITION_TEST
PREHOOK: Output: database:db_bdpbase
POSTHOOK: query: CREATE TABLE DB_BDPBASE.DEFAULT_PARTITION_TEST(
  ID    INT,
  FIRSTNAME   STRING,
  LASTNAME STRING,
  CITY STRING,
  COUNTRY  STRING
) PARTITIONED BY (
  SPORTS STRING
) ROW FORMAT DELIMITED
FIELDS TERMINATED  BY  ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: DB_BDPBASE@DEFAULT_PARTITION_TEST
POSTHOOK: Output: database:db_bdpbase
PREHOOK: query: INSERT OVERWRITE TABLE DB_BDPBASE.DEFAULT_PARTITION_TEST PARTITION (SPORTS)
  SELECT ID, FIRSTNAME, LASTNAME, CITY, COUNTRY, SPORTS FROM DB_BDPBASE.EMP_SPORTS
PREHOOK: type: QUERY
PREHOOK: Input: db_bdpbase@emp_sports
PREHOOK: Output: db_bdpbase@default_partition_test
POSTHOOK: query: INSERT OVERWRITE TABLE DB_BDPBASE.DEFAULT_PARTITION_TEST PARTITION (SPORTS)
  SELECT ID, FIRSTNAME, LASTNAME, CITY, COUNTRY, SPORTS FROM DB_BDPBASE.EMP_SPORTS
POSTHOOK: type: QUERY
POSTHOOK: Input: db_bdpbase@emp_sports
POSTHOOK: Output: db_bdpbase@default_partition_test
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Badminton
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Basketball
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Cricket
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Football
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Tennis
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
PREHOOK: query: analyze table db_bdpbase.default_partition_test compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: db_bdpbase@default_partition_test
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Badminton
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Basketball
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Cricket
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Football
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Tennis
PREHOOK: Input: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
PREHOOK: Output: db_bdpbase@default_partition_test
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Badminton
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Basketball
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Cricket
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Football
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Tennis
PREHOOK: Output: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
POSTHOOK: query: analyze table db_bdpbase.default_partition_test compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: db_bdpbase@default_partition_test
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Badminton
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Basketball
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Cricket
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Football
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Tennis
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
POSTHOOK: Output: db_bdpbase@default_partition_test
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Badminton
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Basketball
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Cricket
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Football
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Tennis
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
PREHOOK: query: explain ddl select * from db_bdpbase.default_partition_test
PREHOOK: type: QUERY
PREHOOK: Input: db_bdpbase@default_partition_test
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Badminton
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Basketball
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Cricket
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Football
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Tennis
PREHOOK: Input: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from db_bdpbase.default_partition_test
POSTHOOK: type: QUERY
POSTHOOK: Input: db_bdpbase@default_partition_test
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Badminton
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Basketball
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Cricket
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Football
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Tennis
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS db_bdpbase;
CREATE TABLE `db_bdpbase`.`default_partition_test`(
  `id` int, 
  `firstname` string, 
  `lastname` string, 
  `city` string, 
  `country` string)
PARTITIONED BY ( 
  `sports` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
WITH SERDEPROPERTIES ( 
  'field.delim'=',', 
  'serialization.format'=',') 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE db_bdpbase.default_partition_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Badminton');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS SET('numRows'='26','rawDataSize'='985' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Basketball');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS SET('numRows'='15','rawDataSize'='588' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Cricket');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS SET('numRows'='14','rawDataSize'='550' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Football');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS SET('numRows'='23','rawDataSize'='898' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Tennis');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS SET('numRows'='16','rawDataSize'='635' );
-- ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='__HIVE_DEFAULT_PARTITION__');
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS SET('numRows'='6','rawDataSize'='247' );
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.625','maxColLen'='10','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQw9jy4wbApZ6a/v////8B/sPU3fv/////AcCHp9kGgN/fv/r/////AYLFxPn+/////wGBkrK3Av2Ry8cCgc676Pv/////Ab/A89YBxOTiEvzixO/+/////wHD55ygA77R9+T6/////wHFq+mVB7vOpY39/////wE= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1007','highValue'='1086','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQgsirL7+NuZgFgJSyrf7/////AcDw1/3//////wGAw9/iAoGurff//////wH//tG+/v////8BhMDytf//////Abya/vb+/////wHCpbPM//////8B/v+D1v7/////AcD2p9r//////wGApJdwwLKYgQTByo7U//////8BwdS26vv/////AQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='5.875','maxColLen'='10','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQgp+Lswf/6/Gw+/////8BgM2YkAPB0+LF/f////8B/8ulC8DngZ0CgJ+o9v//////AcDR9AWBwp7N+v////8BwZT4/QH/qIfj//////8BgP+t//3/////Ab+a5YgDxoiV3QK8+K/t/v////8Bgdruk/7/////AQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='9.5625','maxColLen'='27','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQweClxwTAto6P/P////8Bg5qv8gO9nZOuAYWnjJT8/////wH7y9SkAoD13gGBtJOV/v////8BgqrYtf7/////Af3z25EEgbjb3wK/2Jud//////8BgZbmgvr/////Af+XtN4Dga/pvP//////AcH6mY8B 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='9.5625','maxColLen'='18','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQgfSH0gPAg7CJAoCl9ljC0YLK//////8B/picz/7/////AcDlwtP7/////wHAl84twIbP+v//////AYCoomaApeWJBoG1lab6/////wH/sNr5AoDjqJr8/////wHBz+68BcCH7fb9/////wH/+7xK 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.2','maxColLen'='8','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PgZ/tvgSA18jgAoGZwtb+/////wH/zaeIAcDWpIP//////wGC/43R+/////8B/5/ogwGDhYerAfz89K4DgL6l8v7/////AYDwwZj//////wHAlpaV/f////8BgLqSK8GJg9D9/////wHCiZiWAw== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1001','highValue'='1097','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PgYCNxQOA2pic/f////8BxuPc2AP8m7G4A7+Ix+z7/////wG/xNKo/f////8BgLCJswSAxK+U/f////8BgPmo2gHE6pNr/pSPjQK+4MTY+v////8BgIiW4ASEgZT0+/////8B/OCGvQE= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='6.466666666666667','maxColLen'='9','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PgbilpAeC7+ssvtnsxfj/////AcCW6PAFwLLw9f7/////AcHwo4v9/////wH/nYz3AoGH1J/9/////wH/7Jv7/f////8BxNrM2wK85uvN/v////8BgJnvHMCdv9b//////wGAw7/oBcLAloD5/////wE= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='8.666666666666666','maxColLen'='16','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4OhdzCtAL8jYW5A8Ce5MX6/////wHAicoqgNKYqAGA+cYigKy/jwGB3qTH/f////8BgNG/hwLDkchH/YOnjf//////Af/knsj9/////wHA+9/oBICtjo7//////wE= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='9.733333333333333','maxColLen'='26','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PgZjVoAbAiv9ng+yLbv3bzYP8/////wGFitRK/MrIowP/zYSG+/////8BwvzCl/7/////Af+jp8UBv+6Ctf//////AYGf/9wDv6/ZgQLCvb65+f////8BvsGr/QKAtqUo 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='5.6521739130434785','maxColLen'='8','numNulls'='0','numDVs'='23' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBcXgqW6lwS/7cK2AsGpjOz7/////wGCm5fW//////8BvbT96wTA5rbf/P////8Bgoq+hwO/6qXp/P////8B/8GzqP7/////AcCqq+L//////wGA5PWu/v////8Bwa37xwa/u+SQ/P////8Bwcrsrf3/////Ab+2k+ADgNahiAHAyNff/v////8BwNftnP7/////AYDDkyfB/tKCA4DswM8Bgoeop/3/////Af3g8/oB 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1006','highValue'='1100','numNulls'='0','numDVs'='23' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBcXgaCXhwXA1P+S/f////8Bg93J8wG91quf/P////8Bg8OW9gG9v/KA//////8Bhbns+AW7mZtJwM2xGcCm2JD7/////wHAzv2WAsDMyob9/////wHCpeL4/v////8Bv4iY4wW/56Sb+f////8BgLbX1QHB2tTlBP+Sqp36/////wGA9fLJAcGhkpcBgIXC0QPBxYbz//////8B/uGZ+vv/////AQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='5.782608695652174','maxColLen'='9','numNulls'='0','numDVs'='23' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBcXwbS80wPA08+OBMDEmZT6/////wHA7fi1BMLU84kBvs2zyfr/////AcDRiGfCgsLrA4DDgsb9/////wG+ipqK/v////8BwMjJowWC5Jyw//////8Bv5j19Pn/////AYDBosL//////wHA9t7fAb/QhPkDgJCxk/v/////AYKK0Qb+ra2ZAoOA5Pj//////wH9vuKJAcH15av8/////wGA1v/hAg== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='10.826086956521738','maxColLen'='33','numNulls'='0','numDVs'='22' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBYWw66T/gX/gadGwYr4n/3/////AYG57zXAkP/9+/////8BvbWmigfB/KHo+v////8BwYzq0gS/zsX3/f////8B//i05Pz/////AcG9m/4D//vz0fz/////AcCqpx3AxKqpAcCF+PACgIGGwPv/////AYSQlM0B/fqH6v//////Af+1/M38/////wGCp8si/pO8vQKC4MSEAQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='8.782608695652174','maxColLen'='20','numNulls'='0','numDVs'='23' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBcXw7/xvgW/vaexAoD6oqj6/////wHBqdfw//////8BvuPJ1P7/////AYCN2LgDwaXjsv3/////Af+IxJcGwbyujvv/////Af+ttFnBqYmkA7+Yrqb7/////wHAgr+LBIGHpJP9/////wH/iY3oAYDAj7/8/////wGAie6wAYD20A3Cw5oi/ozl0QKAl+LVAcHRpASBoNS9//////8B 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.333333333333333','maxColLen'='8','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGgbePuQfB9sjg+P////8Bw93qogW83dm9/P////8BwYbtqQK/yYTa/v////8B 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1005','highValue'='1098','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGgeXMkgKAqeDgAYDOgWfAjve+/P////8Bga6jv///////Af/B69cD 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='7.0','maxColLen'='9','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGwe3GFsGq05QBv6XU8P7/////AYHCq/AGwJ7v2Pr/////AcG15yw= 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='9.333333333333334','maxColLen'='15','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGwaXO9gaA4928+f////8BgoXl0AP/u9nv/v////8BwP3t9gP/wbzN/P////8B 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='10.5','maxColLen'='17','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGwaGlyQKAyt+3AYCs6oQBwt6jv/7/////Af/P9r4C//fig/v/////AQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.642857142857143','maxColLen'='10','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4Oh/eB3gH6kIqEBoDm49H7/////wGBzfvyAcDCzlTC2eaU/P////8B/q3H8v3/////Af+bxdoFgJL6jPv/////AYG84W//1I1igqC6pwH+kKX+/v////8Bwr362gQ= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1002','highValue'='1099','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4Owp+5vgXAgIGC+/////8B/6frowTArIixAcCvrknA3Jmv//////8BgIHmBoGA38n6/////wHAhO5lgs76yAG+9dT6Ar+cjO36/////wGAx7GYBML+3Mj8/////wE= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='5.285714285714286','maxColLen'='9','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4OwbS80wOB6fyi/f////8B/4eU6QKB+P2a/f////8Bw7z4qQT8+8KdAsKaipb9/////wH/pLfZ//////8Bg/367/3/////Af72zOj//////wG+8a95gvbxuf3/////Ab7LzcwFwNTv8Pz/////AQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='9.714285714285714','maxColLen'='18','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4OwanPogfEsvOR+/////8B/M6b8AKCibP3/f////8Bvprl2gLB+fLA//////8B/7zUlv7/////AcXwxLz+/////wG7+JuG/v////8BgPWXlAHB1KGNAv/45vkDwvKSh/n/////AYSysbYC 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='9.5','maxColLen'='18','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4Owv2KsweAxJ3Y+f////8Bv7aO5QaAo7XI+v////8BwM6p9/3/////AcCGkuoBwYfi6f//////Ab/3+6ICxPu9zwP90YX2//////8BgpXXv/j/////Af3c9qcEgZnkk/z/////Af/BmTE= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.269230769230769','maxColLen'='9','numNulls'='0','numDVs'='26' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBoaw5bxWsDKgKgE/pbs5vz/////AYDw18AEguubl/3/////AcHBj579/////wH9pu6ABYKuotL+/////wH+x+S0//////8BgMj+2QLAjorG+f////8BwJm1pwLBgbeMBL/BgaD8/////wHAuJDKA4CXh93//////wHBuPXl+v////8B//SC/wWAweCB//////8BwMTBhv7/////AYC+l/cBwI3g1fr/////AYTay4cBvtbOsAL//sj+A8Hd+ZH4/////wE= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1004','highValue'='1094','numNulls'='0','numDVs'='26' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBoahd3Cdf32590G/6SLj/3/////AYCykT7Av92e/f////8BwYfGqwP/9oKWAYD4z638/////wGBwrxzv+i89wHA0Niv/f////8BgLL2rgGAstnL+/////8BguuQrAH+1vPaBMG99/D5/////wH//4P6BcDSr2WAnKXH/P////8BgKfB3P3/////AYCTgJEEgqb8+Pv/////AcCCvmq+0O7IAoDBhvb+/////wHA0dlC 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='5.615384615384615','maxColLen'='8','numNulls'='0','numDVs'='25' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBkZyJCAxAK5lvTQBMDlqKP5/////wHAl7CAA8CbmRzA8faZ/f////8Bgf/q/f//////Ab/LlfIGgNTwqvz/////AcDcuH6Ay4aWAoDC4QXA6L+q/f////8BwPv+XoDLzxPAzvF9waDs/Pz/////AcCQvbL+/////wHAuJKC//////8Bv8CUgAXAzNZPw+WL8vz/////AYD4gCH9tourAcPksWU= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='10.038461538461538','maxColLen'='44','numNulls'='0','numDVs'='26' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBoahbLBzAP85PKJ/f////8BwLe62gLD4vSXAYGN3q0B/6Xhi/r/////Ab2osqUFwqq+oQH+tdPa+v////8BgPenYoCwhkKAndeXA4Sn15/+/////wH+le6UAr/epnP/7bOp+v////8BgKHJV4DwkcACg4u68wGB85+S/f////8B/JyLowOAs7kWgYmk8fr/////Af/OrLoDgO721P//////AYGQ3sD7/////wE= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='7.961538461538462','maxColLen'='15','numNulls'='0','numDVs'='26' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET. THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBoagcnkoQHDmv3pA/6E55gChOm3qP//////AbzE6Yj7/////wH/jeLHAYC7qMgEgO/pvP//////AYDl7q35/////wHAnoCTBsDeqIT+/////wGArM7x//////8BwdCEL//10sL+/////wGB/Yxrv/G7V8HV1cT7/////wGA/62HA4C7sfsBwJT/rPr/////AYCFgrIBgbbW6P//////Ab707dv//////wGEkeKsBYLSvzy6mZuX+v////8B 



EXPLAIN select * from db_bdpbase.default_partition_test;


EXPLAIN CBO select * from db_bdpbase.default_partition_test;


EXPLAIN VECTORIZED select * from db_bdpbase.default_partition_test;
CBO PLAN:HiveProject(id=[$0], firstname=[$1], lastname=[$2], city=[$3], country=[$4], sports=[$5])
  HiveTableScan(table=[[db_bdpbase, default_partition_test]], table:alias=[default_partition_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default_partition_test
          Select Operator
            expressions: id (type: int), firstname (type: string), lastname (type: string), city (type: string), country (type: string), sports (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            ListSink

PREHOOK: query: drop database db_bdpbase cascade
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:db_bdpbase
PREHOOK: Output: database:db_bdpbase
PREHOOK: Output: db_bdpbase@default_partition_test
PREHOOK: Output: db_bdpbase@emp_sports
POSTHOOK: query: drop database db_bdpbase cascade
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:db_bdpbase
POSTHOOK: Output: database:db_bdpbase
POSTHOOK: Output: db_bdpbase@default_partition_test
POSTHOOK: Output: db_bdpbase@emp_sports
