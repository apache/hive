PREHOOK: query: CREATE TABLE add_part_test (key STRING, value STRING) PARTITIONED BY (ds STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@add_part_test
POSTHOOK: query: CREATE TABLE add_part_test (key STRING, value STRING) PARTITIONED BY (ds STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@add_part_test
PREHOOK: query: explain ddl select * from add_part_test
PREHOOK: type: QUERY
PREHOOK: Input: default@add_part_test
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@add_part_test
#### A masked pattern was here ####

CREATE TABLE `default`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from add_part_test;

EXPLAIN CBO select * from add_part_test;

EXPLAIN VECTORIZED select * from add_part_test;
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[$2])
  HiveTableScan(table=[[default, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          Select Operator
            expressions: key (type: string), value (type: string), ds (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: ALTER TABLE add_part_test ADD PARTITION (ds='2010-01-01')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@add_part_test
POSTHOOK: query: ALTER TABLE add_part_test ADD PARTITION (ds='2010-01-01')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@add_part_test
POSTHOOK: Output: default@add_part_test@ds=2010-01-01
PREHOOK: query: insert into add_part_test partition(ds='2010-01-01') values ('key_1','value_1'),
('key_2','value_2'),
('key_3','value_3'),
('key_4','value_4'),
('key_5','value_5'),
('key_6','value_6'),
('key_7','value_7'),
('key_8','value_8'),
('key_9','value_9'),
('key_10','value_10'),
('key_11','value_11'),
('key_12','value_12'),
('key_13','value_13'),
('key_14','value_14'),
('key_15','value_15'),
('key_16','value_16'),
('key_17','value_17'),
('key_18','value_18'),
('key_19','value_19')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@add_part_test@ds=2010-01-01
POSTHOOK: query: insert into add_part_test partition(ds='2010-01-01') values ('key_1','value_1'),
('key_2','value_2'),
('key_3','value_3'),
('key_4','value_4'),
('key_5','value_5'),
('key_6','value_6'),
('key_7','value_7'),
('key_8','value_8'),
('key_9','value_9'),
('key_10','value_10'),
('key_11','value_11'),
('key_12','value_12'),
('key_13','value_13'),
('key_14','value_14'),
('key_15','value_15'),
('key_16','value_16'),
('key_17','value_17'),
('key_18','value_18'),
('key_19','value_19')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@add_part_test@ds=2010-01-01
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-01).key SCRIPT []
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-01).value SCRIPT []
PREHOOK: query: explain ddl select * from add_part_test where ds='2010-01-01'
PREHOOK: type: QUERY
PREHOOK: Input: default@add_part_test
PREHOOK: Input: default@add_part_test@ds=2010-01-01
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test where ds='2010-01-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@add_part_test
POSTHOOK: Input: default@add_part_test@ds=2010-01-01
#### A masked pattern was here ####

CREATE TABLE `default`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZXdNICf8TvAo4ELgLO2SMXF/BS72uELgOLCnwGAj9Y4wJOCQMKT9CX+vqIBw+fKPr3LlKsBwIHHF8DX2CmF7e4T/JG0AYKY6Bb+o9oQ 
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZnEIYCNq4gBgKCIGoD61AHBjs4N/7WjogGBquoE/9ScS4HyxCf/keJOxMnVP4GwwUn7+oEgwNzHBsCeqgOAmb1QguH/Cb7p83LA3Z9B 




EXPLAIN select * from add_part_test where ds='2010-01-01';



EXPLAIN CBO select * from add_part_test where ds='2010-01-01';



EXPLAIN VECTORIZED select * from add_part_test where ds='2010-01-01';
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[CAST(_UTF-16LE'2010-01-01':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):VARCHAR(2147483647) CHARACTER SET "UTF-16LE"])
  HiveFilter(condition=[=($2, _UTF-16LE'2010-01-01')])
    HiveTableScan(table=[[default, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          filterExpr: (ds = '2010-01-01') (type: boolean)
          Select Operator
            expressions: key (type: string), value (type: string), '2010-01-01' (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: ALTER TABLE add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01') PARTITION (ds='2010-01-02') PARTITION (ds='2010-01-03')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: default@add_part_test
POSTHOOK: query: ALTER TABLE add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01') PARTITION (ds='2010-01-02') PARTITION (ds='2010-01-03')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: default@add_part_test
POSTHOOK: Output: default@add_part_test@ds=2010-01-02
POSTHOOK: Output: default@add_part_test@ds=2010-01-03
PREHOOK: query: insert into add_part_test partition(ds='2010-01-03')  values ('key_20','value_20'),
('key_21','value_21'),
('key_22','value_22'),
('key_23','value_23'),
('key_24','value_24'),
('key_25','value_25'),
('key_26','value_26'),
('key_32','value_32'),
('key_33','value_33'),
('key_34','value_34'),
('key_35','value_35'),
('key_36','value_36'),
('key_37','value_37'),
('key_38','value_38'),
('key_39','value_39')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@add_part_test@ds=2010-01-03
POSTHOOK: query: insert into add_part_test partition(ds='2010-01-03')  values ('key_20','value_20'),
('key_21','value_21'),
('key_22','value_22'),
('key_23','value_23'),
('key_24','value_24'),
('key_25','value_25'),
('key_26','value_26'),
('key_32','value_32'),
('key_33','value_33'),
('key_34','value_34'),
('key_35','value_35'),
('key_36','value_36'),
('key_37','value_37'),
('key_38','value_38'),
('key_39','value_39')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@add_part_test@ds=2010-01-03
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-03).key SCRIPT []
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-03).value SCRIPT []
PREHOOK: query: explain ddl select * from add_part_test where ds>='2010-01-01'
PREHOOK: type: QUERY
PREHOOK: Input: default@add_part_test
PREHOOK: Input: default@add_part_test@ds=2010-01-01
PREHOOK: Input: default@add_part_test@ds=2010-01-02
PREHOOK: Input: default@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test where ds>='2010-01-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@add_part_test
POSTHOOK: Input: default@add_part_test@ds=2010-01-01
POSTHOOK: Input: default@add_part_test@ds=2010-01-02
POSTHOOK: Input: default@add_part_test@ds=2010-01-03
#### A masked pattern was here ####

CREATE TABLE `default`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE default.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-02');
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-03');
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS SET('numRows'='15','rawDataSize'='225' );
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZnEIYCNq4gBgKCIGoD61AHBjs4N/7WjogGBquoE/9ScS4HyxCf/keJOxMnVP4GwwUn7+oEgwNzHBsCeqgOAmb1QguH/Cb7p83LA3Z9B 
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZXdNICf8TvAo4ELgLO2SMXF/BS72uELgOLCnwGAj9Y4wJOCQMKT9CX+vqIBw+fKPr3LlKsBwIHHF8DX2CmF7e4T/JG0AYKY6Bb+o9oQ 
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='8.0','maxColLen'='8','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-03' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PxruDCfvd++EBgJbAswHAj9hcgOSPEcGP0Tf/ouVYhPfkDfzUm17AgIcTgOP5KIGsqm3Am/Ii/6epDYDf+AQ= 
ALTER TABLE default.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='6.0','maxColLen'='6','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR default.add_part_test PARTITION ds='2010-01-03' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8Pwoy4S4DjsC2Cy/cxvYTEDsGjtQqBy7Yi/8DaQb+/pBPAjbjoAYHXgA2/h9yDAcKsjyi+usGNAcHK9T/CzrU/ 



EXPLAIN select * from add_part_test where ds>='2010-01-01';


EXPLAIN CBO select * from add_part_test where ds>='2010-01-01';


EXPLAIN VECTORIZED select * from add_part_test where ds>='2010-01-01';
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[$2])
  HiveFilter(condition=[>=($2, _UTF-16LE'2010-01-01')])
    HiveTableScan(table=[[default, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          filterExpr: (ds >= '2010-01-01') (type: boolean)
          Select Operator
            expressions: key (type: string), value (type: string), ds (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: DROP TABLE add_part_test
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@add_part_test
PREHOOK: Output: default@add_part_test
POSTHOOK: query: DROP TABLE add_part_test
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@add_part_test
POSTHOOK: Output: default@add_part_test
PREHOOK: query: CREATE DATABASE add_part_test_db
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:add_part_test_db
POSTHOOK: query: CREATE DATABASE add_part_test_db
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:add_part_test_db
PREHOOK: query: CREATE TABLE add_part_test_db.add_part_test (key STRING, value STRING) PARTITIONED BY (ds STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: add_part_test_db@add_part_test
PREHOOK: Output: database:add_part_test_db
POSTHOOK: query: CREATE TABLE add_part_test_db.add_part_test (key STRING, value STRING) PARTITIONED BY (ds STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: database:add_part_test_db
PREHOOK: query: ALTER TABLE add_part_test_db.add_part_test ADD PARTITION (ds='2010-01-01')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: query: ALTER TABLE add_part_test_db.add_part_test ADD PARTITION (ds='2010-01-01')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: query: insert into add_part_test_db.add_part_test partition(ds='2010-01-01') values ('key_1','value_1'),
('key_2','value_2'),
('key_3','value_3'),
('key_4','value_4'),
('key_5','value_5'),
('key_6','value_6'),
('key_7','value_7'),
('key_8','value_8'),
('key_9','value_9'),
('key_10','value_10'),
('key_11','value_11'),
('key_12','value_12'),
('key_13','value_13'),
('key_14','value_14'),
('key_15','value_15'),
('key_16','value_16'),
('key_17','value_17'),
('key_18','value_18'),
('key_19','value_19')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: query: insert into add_part_test_db.add_part_test partition(ds='2010-01-01') values ('key_1','value_1'),
('key_2','value_2'),
('key_3','value_3'),
('key_4','value_4'),
('key_5','value_5'),
('key_6','value_6'),
('key_7','value_7'),
('key_8','value_8'),
('key_9','value_9'),
('key_10','value_10'),
('key_11','value_11'),
('key_12','value_12'),
('key_13','value_13'),
('key_14','value_14'),
('key_15','value_15'),
('key_16','value_16'),
('key_17','value_17'),
('key_18','value_18'),
('key_19','value_19')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-01).key SCRIPT []
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-01).value SCRIPT []
PREHOOK: query: explain ddl select * from add_part_test_db.add_part_test where ds='2010-01-01'
PREHOOK: type: QUERY
PREHOOK: Input: add_part_test_db@add_part_test
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test_db.add_part_test where ds='2010-01-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: add_part_test_db@add_part_test
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS add_part_test_db;
CREATE TABLE `add_part_test_db`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE add_part_test_db.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZXdNICf8TvAo4ELgLO2SMXF/BS72uELgOLCnwGAj9Y4wJOCQMKT9CX+vqIBw+fKPr3LlKsBwIHHF8DX2CmF7e4T/JG0AYKY6Bb+o9oQ 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZnEIYCNq4gBgKCIGoD61AHBjs4N/7WjogGBquoE/9ScS4HyxCf/keJOxMnVP4GwwUn7+oEgwNzHBsCeqgOAmb1QguH/Cb7p83LA3Z9B 




EXPLAIN select * from add_part_test_db.add_part_test where ds='2010-01-01';



EXPLAIN CBO select * from add_part_test_db.add_part_test where ds='2010-01-01';



EXPLAIN VECTORIZED select * from add_part_test_db.add_part_test where ds='2010-01-01';
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[CAST(_UTF-16LE'2010-01-01':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"):VARCHAR(2147483647) CHARACTER SET "UTF-16LE"])
  HiveFilter(condition=[=($2, _UTF-16LE'2010-01-01')])
    HiveTableScan(table=[[add_part_test_db, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          filterExpr: (ds = '2010-01-01') (type: boolean)
          Select Operator
            expressions: key (type: string), value (type: string), '2010-01-01' (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01') PARTITION (ds='2010-01-02') PARTITION (ds='2010-01-03')
PREHOOK: type: ALTERTABLE_ADDPARTS
PREHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: query: ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01') PARTITION (ds='2010-01-02') PARTITION (ds='2010-01-03')
POSTHOOK: type: ALTERTABLE_ADDPARTS
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
PREHOOK: query: insert into add_part_test_db.add_part_test partition(ds='2010-01-03')  values ('key_20','value_20'),
('key_21','value_21'),
('key_22','value_22'),
('key_23','value_23'),
('key_24','value_24'),
('key_25','value_25'),
('key_26','value_26'),
('key_32','value_32'),
('key_33','value_33'),
('key_34','value_34'),
('key_35','value_35'),
('key_36','value_36'),
('key_37','value_37'),
('key_38','value_38'),
('key_39','value_39')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
POSTHOOK: query: insert into add_part_test_db.add_part_test partition(ds='2010-01-03')  values ('key_20','value_20'),
('key_21','value_21'),
('key_22','value_22'),
('key_23','value_23'),
('key_24','value_24'),
('key_25','value_25'),
('key_26','value_26'),
('key_32','value_32'),
('key_33','value_33'),
('key_34','value_34'),
('key_35','value_35'),
('key_36','value_36'),
('key_37','value_37'),
('key_38','value_38'),
('key_39','value_39')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-03).key SCRIPT []
POSTHOOK: Lineage: add_part_test PARTITION(ds=2010-01-03).value SCRIPT []
PREHOOK: query: explain ddl select * from add_part_test_db.add_part_test where ds>='2010-01-01'
PREHOOK: type: QUERY
PREHOOK: Input: add_part_test_db@add_part_test
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test_db.add_part_test where ds>='2010-01-01'
POSTHOOK: type: QUERY
POSTHOOK: Input: add_part_test_db@add_part_test
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS add_part_test_db;
CREATE TABLE `add_part_test_db`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE add_part_test_db.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-02');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-03');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS SET('numRows'='15','rawDataSize'='225' );
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZnEIYCNq4gBgKCIGoD61AHBjs4N/7WjogGBquoE/9ScS4HyxCf/keJOxMnVP4GwwUn7+oEgwNzHBsCeqgOAmb1QguH/Cb7p83LA3Z9B 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZXdNICf8TvAo4ELgLO2SMXF/BS72uELgOLCnwGAj9Y4wJOCQMKT9CX+vqIBw+fKPr3LlKsBwIHHF8DX2CmF7e4T/JG0AYKY6Bb+o9oQ 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='8.0','maxColLen'='8','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-03' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PxruDCfvd++EBgJbAswHAj9hcgOSPEcGP0Tf/ouVYhPfkDfzUm17AgIcTgOP5KIGsqm3Am/Ii/6epDYDf+AQ= 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='6.0','maxColLen'='6','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-03' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8Pwoy4S4DjsC2Cy/cxvYTEDsGjtQqBy7Yi/8DaQb+/pBPAjbjoAYHXgA2/h9yDAcKsjyi+usGNAcHK9T/CzrU/ 



EXPLAIN select * from add_part_test_db.add_part_test where ds>='2010-01-01';


EXPLAIN CBO select * from add_part_test_db.add_part_test where ds>='2010-01-01';


EXPLAIN VECTORIZED select * from add_part_test_db.add_part_test where ds>='2010-01-01';
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[$2])
  HiveFilter(condition=[>=($2, _UTF-16LE'2010-01-01')])
    HiveTableScan(table=[[add_part_test_db, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          filterExpr: (ds >= '2010-01-01') (type: boolean)
          Select Operator
            expressions: key (type: string), value (type: string), ds (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: analyze table  add_part_test_db.add_part_test compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: add_part_test_db@add_part_test
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
PREHOOK: Output: add_part_test_db@add_part_test
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-02
PREHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
POSTHOOK: query: analyze table  add_part_test_db.add_part_test compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: add_part_test_db@add_part_test
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Output: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
PREHOOK: query: explain ddl select * from add_part_test_db.add_part_test
PREHOOK: type: QUERY
PREHOOK: Input: add_part_test_db@add_part_test
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
PREHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from add_part_test_db.add_part_test
POSTHOOK: type: QUERY
POSTHOOK: Input: add_part_test_db@add_part_test
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-01
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-02
POSTHOOK: Input: add_part_test_db@add_part_test@ds=2010-01-03
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS add_part_test_db;
CREATE TABLE `add_part_test_db`.`add_part_test`(
  `key` string, 
  `value` string)
PARTITIONED BY ( 
  `ds` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE add_part_test_db.add_part_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-01');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS SET('numRows'='19','rawDataSize'='267' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-02');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE add_part_test_db.add_part_test ADD IF NOT EXISTS PARTITION (ds='2010-01-03');
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS SET('numRows'='15','rawDataSize'='225' );
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='7.526315789473684','maxColLen'='8','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZnEIYCNq4gBgKCIGoD61AHBjs4N/7WjogGBquoE/9ScS4HyxCf/keJOxMnVP4GwwUn7+oEgwNzHBsCeqgOAmb1QguH/Cb7p83LA3Z9B 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-01') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='5.526315789473684','maxColLen'='6','numNulls'='0','numDVs'='19' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-01' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBMTgZXdNICf8TvAo4ELgLO2SMXF/BS72uELgOLCnwGAj9Y4wJOCQMKT9CX+vqIBw+fKPr3LlKsBwIHHF8DX2CmF7e4T/JG0AYKY6Bb+o9oQ 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN value SET('avgColLen'='8.0','maxColLen'='8','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-03' FOR COLUMN value BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PxruDCfvd++EBgJbAswHAj9hcgOSPEcGP0Tf/ouVYhPfkDfzUm17AgIcTgOP5KIGsqm3Am/Ii/6epDYDf+AQ= 
ALTER TABLE add_part_test_db.add_part_test PARTITION (ds='2010-01-03') UPDATE STATISTICS FOR COLUMN key SET('avgColLen'='6.0','maxColLen'='6','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR add_part_test_db.add_part_test PARTITION ds='2010-01-03' FOR COLUMN key BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8Pwoy4S4DjsC2Cy/cxvYTEDsGjtQqBy7Yi/8DaQb+/pBPAjbjoAYHXgA2/h9yDAcKsjyi+usGNAcHK9T/CzrU/ 



EXPLAIN select * from add_part_test_db.add_part_test;


EXPLAIN CBO select * from add_part_test_db.add_part_test;


EXPLAIN VECTORIZED select * from add_part_test_db.add_part_test;
CBO PLAN:HiveProject(key=[$0], value=[$1], ds=[$2])
  HiveTableScan(table=[[add_part_test_db, add_part_test]], table:alias=[add_part_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: add_part_test
          Select Operator
            expressions: key (type: string), value (type: string), ds (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: DROP DATABASE add_part_test_db cascade
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:add_part_test_db
PREHOOK: Output: add_part_test_db@add_part_test
PREHOOK: Output: database:add_part_test_db
POSTHOOK: query: DROP DATABASE add_part_test_db cascade
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:add_part_test_db
POSTHOOK: Output: add_part_test_db@add_part_test
POSTHOOK: Output: database:add_part_test_db
PREHOOK: query: create database db_bdpbase
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:db_bdpbase
POSTHOOK: query: create database db_bdpbase
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:db_bdpbase
PREHOOK: query: CREATE TABLE db_bdpbase.emp_sports(
  id INT,
  firstname STRING,
  lastname STRING,
  sports STRING,
  city STRING,
  country STRING
) ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
TBLPROPERTIES("skip.header.line.count"="1")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:db_bdpbase
PREHOOK: Output: db_bdpbase@emp_sports
POSTHOOK: query: CREATE TABLE db_bdpbase.emp_sports(
  id INT,
  firstname STRING,
  lastname STRING,
  sports STRING,
  city STRING,
  country STRING
) ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
TBLPROPERTIES("skip.header.line.count"="1")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:db_bdpbase
POSTHOOK: Output: db_bdpbase@emp_sports
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/part_data_explain_ddl.csv' INTO table db_bdpbase.emp_sports
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: db_bdpbase@emp_sports
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/part_data_explain_ddl.csv' INTO table db_bdpbase.emp_sports
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: db_bdpbase@emp_sports
PREHOOK: query: CREATE TABLE DB_BDPBASE.DEFAULT_PARTITION_TEST(
  ID    INT,
  FIRSTNAME   STRING,
  LASTNAME STRING,
  CITY STRING,
  COUNTRY  STRING
) PARTITIONED BY (
  SPORTS STRING
) ROW FORMAT DELIMITED
FIELDS TERMINATED  BY  ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: DB_BDPBASE@DEFAULT_PARTITION_TEST
PREHOOK: Output: database:db_bdpbase
POSTHOOK: query: CREATE TABLE DB_BDPBASE.DEFAULT_PARTITION_TEST(
  ID    INT,
  FIRSTNAME   STRING,
  LASTNAME STRING,
  CITY STRING,
  COUNTRY  STRING
) PARTITIONED BY (
  SPORTS STRING
) ROW FORMAT DELIMITED
FIELDS TERMINATED  BY  ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: DB_BDPBASE@DEFAULT_PARTITION_TEST
POSTHOOK: Output: database:db_bdpbase
PREHOOK: query: INSERT OVERWRITE TABLE DB_BDPBASE.DEFAULT_PARTITION_TEST PARTITION (SPORTS)
  SELECT ID, FIRSTNAME, LASTNAME, CITY, COUNTRY, SPORTS FROM DB_BDPBASE.EMP_SPORTS
PREHOOK: type: QUERY
PREHOOK: Input: db_bdpbase@emp_sports
PREHOOK: Output: db_bdpbase@default_partition_test
POSTHOOK: query: INSERT OVERWRITE TABLE DB_BDPBASE.DEFAULT_PARTITION_TEST PARTITION (SPORTS)
  SELECT ID, FIRSTNAME, LASTNAME, CITY, COUNTRY, SPORTS FROM DB_BDPBASE.EMP_SPORTS
POSTHOOK: type: QUERY
POSTHOOK: Input: db_bdpbase@emp_sports
POSTHOOK: Output: db_bdpbase@default_partition_test
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Badminton
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Basketball
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Cricket
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Football
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Tennis
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Badminton).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Basketball).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Cricket).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Football).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=Tennis).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).city SIMPLE [(emp_sports)emp_sports.FieldSchema(name:city, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).country SIMPLE [(emp_sports)emp_sports.FieldSchema(name:country, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).firstname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:firstname, type:string, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).id SIMPLE [(emp_sports)emp_sports.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: default_partition_test PARTITION(sports=__HIVE_DEFAULT_PARTITION__).lastname SIMPLE [(emp_sports)emp_sports.FieldSchema(name:lastname, type:string, comment:null), ]
PREHOOK: query: analyze table db_bdpbase.default_partition_test compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: db_bdpbase@default_partition_test
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Badminton
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Basketball
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Cricket
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Football
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Tennis
PREHOOK: Input: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
PREHOOK: Output: db_bdpbase@default_partition_test
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Badminton
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Basketball
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Cricket
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Football
PREHOOK: Output: db_bdpbase@default_partition_test@sports=Tennis
PREHOOK: Output: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
POSTHOOK: query: analyze table db_bdpbase.default_partition_test compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: db_bdpbase@default_partition_test
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Badminton
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Basketball
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Cricket
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Football
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Tennis
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
POSTHOOK: Output: db_bdpbase@default_partition_test
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Badminton
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Basketball
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Cricket
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Football
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=Tennis
POSTHOOK: Output: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
PREHOOK: query: explain ddl select * from db_bdpbase.default_partition_test
PREHOOK: type: QUERY
PREHOOK: Input: db_bdpbase@default_partition_test
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Badminton
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Basketball
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Cricket
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Football
PREHOOK: Input: db_bdpbase@default_partition_test@sports=Tennis
PREHOOK: Input: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from db_bdpbase.default_partition_test
POSTHOOK: type: QUERY
POSTHOOK: Input: db_bdpbase@default_partition_test
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Badminton
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Basketball
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Cricket
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Football
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=Tennis
POSTHOOK: Input: db_bdpbase@default_partition_test@sports=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS db_bdpbase;
CREATE TABLE `db_bdpbase`.`default_partition_test`(
  `id` int, 
  `firstname` string, 
  `lastname` string, 
  `city` string, 
  `country` string)
PARTITIONED BY ( 
  `sports` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
WITH SERDEPROPERTIES ( 
  'field.delim'=',', 
  'serialization.format'=',') 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE db_bdpbase.default_partition_test UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Badminton');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS SET('numRows'='26','rawDataSize'='985' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Basketball');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS SET('numRows'='15','rawDataSize'='588' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Cricket');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS SET('numRows'='14','rawDataSize'='550' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Football');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS SET('numRows'='23','rawDataSize'='898' );
ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='Tennis');
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS SET('numRows'='16','rawDataSize'='635' );
-- ALTER TABLE db_bdpbase.default_partition_test ADD IF NOT EXISTS PARTITION (sports='__HIVE_DEFAULT_PARTITION__');
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS SET('numRows'='6','rawDataSize'='247' );
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.625','maxColLen'='10','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQwqCZNL+hzCfCq8sS//G4Z//Igh+Av5g6g5jedr2g+gbE5OIS/ZXolwHB4+gmgdGQUb3CjB6Cx8R2/vCZUcaC9hQ= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1007','highValue'='1086','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQgsirL7/48YUBwInYJYLsnAq+rqJAwuW8X77azDPAtbA6wI+oAsSgqUz8v41KwIuXPIGM9zK/tfErgbSuJv/R0gg= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='5.875','maxColLen'='10','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQgs6IDMDD0h/Avf/gAYHX+Bz+5Kk6w7ikD/2kzCGBw4ol/8ulC4LylJoBvpSVecDR9AXAj+MDhpLjD/rmkgKBx/W+AQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='9.5625','maxColLen'='27','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQgZe0VsP97SW+mrkRxManffz0xjvAi6/iAb/L3gaA9d4BgKrvFcPQvQH9lawjwMHuIYLolCr+3eM+wMr+kwHBp+Ri 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Tennis') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='9.5625','maxColLen'='18','numNulls'='0','numDVs'='16' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Tennis' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBAQweyPIYCenSjA+bAFwJzvJICSgjyB2vovv+e98gHBg6FVv4+kJsC21wuAtsEYgITSacL2+CL/gYsyv6zyA4C7hoUB 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.2','maxColLen'='8','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PwtzJS4HWiIcBvubhfcG5hga/gIwlg5ObZsHx3x+8x6s9wOOwfMGM2jq/pMwLgN+XIcDKw1uAmZYhwN6AEQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1001','highValue'='1097','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PgdqlYcDMpyaAzclyhImqVPydRcDlhnaB4u0Zv/vMLIC25x2GqtMQvsDAWrzYkyaApdafAcKXpUfAxuFQ 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='6.466666666666667','maxColLen'='9','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8PwYD+FsDL+AOC+7wFvvyplwHAydEMgJnvHIGU3CeApeAWw8foVvyik4cCwI6wAoC/34cBwO+2mAHAsYgEgu/rLA== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='8.666666666666666','maxColLen'='16','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4OwbKHJIDWpA/AicoqgdXDIf/81IYBgPnGIoT/7Au98aUnwOqQK//QmzHEwKwWvJG0TIDT8XGAvOBg 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Basketball') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='9.733333333333333','maxColLen'='26','numNulls'='0','numDVs'='15' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Basketball' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA8Pg4qShgHAnsES/vPoZ8GR/Uq/35UjgN3eiwHA/9AbgLalKMXU3Qb8xrmYAb/cmUPAiv9nwMjAVsHUtQmCz5UO 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='5.6521739130434785','maxColLen'='8','numNulls'='0','numDVs'='23' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBcXgbeNBsGzzAa/6L3KAYDEvBrAkZgDw660G/2CxwiB4qEh/+PjJMHGy23/2K0IwLLuBoCvmBHDqrYlvtmWBf/R1F3B4asm/9PccYDm5UCB0gvBl4oVv8joB//GohE= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1006','highValue'='1100','numNulls'='0','numDVs'='23' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBcXwaGOJcCG/geAndhQwOWwJoKHvAL+pZRUgJ2xH8P2iwn9oMwKgK7oGYC3z0iAl6UNwdOdQYL29i69zrZ5wJ+NIMHylbkBgIivKcSpmBO9wrAGv7r5DL+c8TXAzbEZ 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='5.782608695652174','maxColLen'='9','numNulls'='0','numDVs'='23' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBcXwoOrLcDDvzrA+50D/5e3LoKK0Qb+55RWwI+gCYGexA2/g6MVgLChRIPl00v9/5sHwYqsEL+X0gnCvtZEvt7xI4D5icoBwO+PJoL28SWA+oIkwOT+P7635A+AwpUc 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='10.826086956521738','maxColLen'='33','numNulls'='0','numDVs'='22' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBYWwfrFBoOK2xH/nPAQ/ui8kAGAr99HwIqwCMHyiwH/t5scgMfIP4GP/FGDhfgVvOntAYKIgxTA2t8Gwd6PL76d9zrAttBiweapRv6JlEOB+JIDwZKZGf7280Q= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Football') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='8.782608695652174','maxColLen'='20','numNulls'='0','numDVs'='23' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Football' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBcXgYTdXcGyu2v/iN4PguGcML7L4wmBi8UFgIXPVr/M2RqA9tANgbekGsGM9gf+p+8OgOf1TcDusYMBgsCKJb7Pw0zA34ATgeWSToHExzb+p8w9wOY6wdGkBMCF3Qo= 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.333333333333333','maxColLen'='8','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGwq3YGf+6xOABgNDxgwHBtvulAYOcuZgB/KvM/AE= 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1005','highValue'='1098','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGwpjJWP/R3EDA+qZ5gKng4AHAzIc9wIH6KQ== 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='7.0','maxColLen'='9','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGwe3GFoDQpwXB2quPAYCG7znBtecs/6up+gQ= 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='9.333333333333334','maxColLen'='15','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGwYisM4HBvsACv7+qRMKE/Eu/ucfmAr/e9Qs= 
-- ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='__HIVE_DEFAULT_PARTITION__') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='10.5','maxColLen'='17','numNulls'='0','numDVs'='6' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='__HIVE_DEFAULT_PARTITION__' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoAYGgb7shwHA47jBAcLU7Xu+9fE7gKzqhAHBrpp+ 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.642857142857143','maxColLen'='10','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4OgoXoAv+tv2eBvOFvhYj5A/3fnjL97PUrgLHfJYD5+VGC9uAv/9aawwH/5cE2wdyMHoG1tsEBvtWbJQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1002','highValue'='1099','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4OgqC6QMDhgB6/5MkWgaCkT8Gl6hHBqJC3Af3zgdcBgOWQKcHygjGAqr9J/7b9BYCB5gaA81HAr65J 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='5.285714285714286','maxColLen'='9','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4Og/GxPb+shzmAgJIEgezEjwGCibMXvP6rWYDq0AjAufxPgPGQDIHw+lGB28gmwumyTLziu2XAmYe4AQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='9.714285714285714','maxColLen'='18','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4Oge6eEYK1syL+v+RxxZLMZb/mvymC+cA1/N6NMr+Dxxa/zeUbgKag1gGBnYsTv4aNP4Db2KsBgIfwCQ== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Cricket') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='9.5','maxColLen'='18','numNulls'='0','numDVs'='14' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Cricket' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoA4OxNGgLP2X9QOB3uU3gPqsI//H7A2B7vRqv/idFoCrxB6A1JnuAcC/kS2Bz/PeAoC/vjm/u+0DxPKMBg== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN lastname SET('avgColLen'='6.269230769230769','maxColLen'='9','numNulls'='0','numDVs'='26' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN lastname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBoaw7/TBb7IiwLAqpc1guT6HYH+7wT+1/gIg6DoW7zrmyXAqbZFgMO4LMLuhGa+3oQmwLWoCIL8kQXAhuE9wPf/T77a3V3A6cYGwP2mAsCRpxmA6fgigMvYBIG7lRG/1okGgOiHJsGA/YsB 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN id SET('lowValue'='1004','highValue'='1094','numNulls'='0','numDVs'='26' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN id BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBoawr/bO7+AhAiEneMx/PeySYK5/AmAnf4mwOW/Q/7Z9AvA9phvgPvRGoDSpBmA9PAPgYHVL7/QhBPAhbctgJXQFYDTmASAyqgkgL2uL4GK9Rq/mcwugLSoHMDChBWA54k2gKmhGoHCmzg= 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN firstname SET('avgColLen'='5.615384615384615','maxColLen'='8','numNulls'='0','numDVs'='25' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN firstname BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBkZwYydOMGjqzT/gJUCge/NAcDH7X2GqedV/IGibr2RqwaBs44DwrPHF/20wwGAkOg0gNLgRICg/y/A6tgJgPGmJYDLzxODvuIivbrfDIDWr07A9qYBgPrdVIDQmQmAwuEFwMLuOg== 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN country SET('avgColLen'='10.038461538461538','maxColLen'='44','numNulls'='0','numDVs'='26' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN country BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBoahOSiAr6LiUe/p4gNgNayTcDNpQ2B6J1Iv8HkDMD3xgLAuL8/wLrZaMTj0hvAl4ACwI6CMf/Yn0m9mgSAlOY/gK2HH4DlgQzAv5UshI3VFv6v8B3B6O8nv+DxDL6vuSiB5osW/8wt 
ALTER TABLE db_bdpbase.default_partition_test PARTITION (sports='Badminton') UPDATE STATISTICS FOR COLUMN city SET('avgColLen'='7.961538461538462','maxColLen'='15','numNulls'='0','numDVs'='26' );
-- BIT VECTORS PRESENT FOR db_bdpbase.default_partition_test PARTITION sports='Badminton' FOR COLUMN city BUT THEY ARE NOT SUPPORTED YET.THE BASE64 VALUE FOR THE BITVECTOR IS SExMoBoagrWZAv/9s07Bs+0B//2kJsD8PIKP1SP+2PIEgfG2EoDcziH/jeLHAcD+zy2Bw8wOgLrAXL+8myOA1LEOwfzSIIK3mAO9rYMCwY+1R4PVp1CB3L4ngfaAFfqJzAHA/JA/wZrqAb/2q0E= 



EXPLAIN select * from db_bdpbase.default_partition_test;


EXPLAIN CBO select * from db_bdpbase.default_partition_test;


EXPLAIN VECTORIZED select * from db_bdpbase.default_partition_test;
CBO PLAN:HiveProject(id=[$0], firstname=[$1], lastname=[$2], city=[$3], country=[$4], sports=[$5])
  HiveTableScan(table=[[db_bdpbase, default_partition_test]], table:alias=[default_partition_test])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default_partition_test
          Select Operator
            expressions: id (type: int), firstname (type: string), lastname (type: string), city (type: string), country (type: string), sports (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            ListSink

PREHOOK: query: drop database db_bdpbase cascade
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:db_bdpbase
PREHOOK: Output: database:db_bdpbase
PREHOOK: Output: db_bdpbase@default_partition_test
PREHOOK: Output: db_bdpbase@emp_sports
POSTHOOK: query: drop database db_bdpbase cascade
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:db_bdpbase
POSTHOOK: Output: database:db_bdpbase
POSTHOOK: Output: db_bdpbase@default_partition_test
POSTHOOK: Output: db_bdpbase@emp_sports
