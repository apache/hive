PREHOOK: query: create table list_bucketing_static_part_n0 (key String, value String) 
    partitioned by (ds String, hr String) 
    skewed by (key) on ('484','103')
    stored as DIRECTORIES
    STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@list_bucketing_static_part_n0
POSTHOOK: query: create table list_bucketing_static_part_n0 (key String, value String) 
    partitioned by (ds String, hr String) 
    skewed by (key) on ('484','103')
    stored as DIRECTORIES
    STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@list_bucketing_static_part_n0
SQL Query : "select "DB_ID" from "DBS""
SQL Query : "select "DB_ID" from "DBS""
SQL Query : "select "DB_ID" from "DBS""
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID" from "DBS""
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
PREHOOK: query: explain extended
insert overwrite table list_bucketing_static_part_n0 partition (ds = '2008-04-08',  hr = '11')
select key, value from srcpart where ds = '2008-04-08'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
POSTHOOK: query: explain extended
insert overwrite table list_bucketing_static_part_n0 partition (ds = '2008-04-08',  hr = '11')
select key, value from srcpart where ds = '2008-04-08'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
SQL Query : "select "DB_ID" from "DBS""
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ? inner join "PARTITION_KEY_VALS" "FILTER0" on "FILTER0"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER0"."INTEGER_IDX" = 0 where "DBS"."CTLG_NAME" = ?  and (("FILTER0"."PART_KEY_VAL" = ?))"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (1,2) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (1,2) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (1,2) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (2,3) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (1) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (2,3) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select count("COLUMN_NAME") from "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ?  and "COLUMN_NAME" in (?,?) and "PARTITION_NAME" in (?,?) and "ENGINE" = ?  group by "PARTITION_NAME""
SQL Query : "select "PARTITION_NAME", "COLUMN_NAME", "COLUMN_TYPE", "LONG_LOW_VALUE", "LONG_HIGH_VALUE", "DOUBLE_LOW_VALUE", "DOUBLE_HIGH_VALUE", "BIG_DECIMAL_LOW_VALUE", "BIG_DECIMAL_HIGH_VALUE", "NUM_NULLS", "NUM_DISTINCTS", "BIT_VECTOR", "AVG_COL_LEN", "MAX_COL_LEN", "NUM_TRUES", "NUM_FALSES", "LAST_ANALYZED"  from  "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ? and "COLUMN_NAME"  in (?,?) AND "PARTITION_NAME" in (?,?)  and "ENGINE" = ?  order by "PARTITION_NAME""
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
OPTIMIZED SQL: SELECT `key`, `value`
FROM `default`.`srcpart`
WHERE `ds` = '2008-04-08'
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcpart
                  filterExpr: (ds = '2008-04-08') (type: boolean)
                  Statistics: Num rows: 1000 Data size: 178000 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1000 Data size: 178000 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      bucketingVersion: 2
                      compressed: false
                      GlobalTableId: 1
#### A masked pattern was here ####
                      NumFilesPerFileSink: 1
                      Static Partition Specification: ds=2008-04-08/hr=11/
                      Statistics: Num rows: 1000 Data size: 178000 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                      table:
                          input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.RCFileOutputFormat
                          properties:
                            bucketing_version 2
                            column.name.delimiter ,
                            columns key,value
                            columns.comments 
                            columns.types string:string
#### A masked pattern was here ####
                            name default.list_bucketing_static_part_n0
                            partition_columns ds/hr
                            partition_columns.types string:string
                            serialization.format 1
                            serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
                          serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
                          name: default.list_bucketing_static_part_n0
                      TotalFiles: 1
                      GatherStats: true
                      MultiFileSpray: false
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: string), '2008-04-08' (type: string), '11' (type: string)
                      outputColumnNames: key, value, ds, hr
                      Statistics: Num rows: 1000 Data size: 358000 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: max(length(key)), avg(COALESCE(length(key),0)), count(1), count(key), compute_bit_vector_hll(key), max(length(value)), avg(COALESCE(length(value),0)), count(value), compute_bit_vector_hll(value)
                        keys: ds (type: string), hr (type: string)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                        Statistics: Num rows: 1 Data size: 652 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          bucketingVersion: 2
                          key expressions: _col0 (type: string), _col1 (type: string)
                          null sort order: zz
                          numBuckets: -1
                          sort order: ++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                          Statistics: Num rows: 1 Data size: 652 Basic stats: COMPLETE Column stats: COMPLETE
                          tag: -1
                          value expressions: _col2 (type: int), _col3 (type: struct<count:bigint,sum:double,input:int>), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: binary), _col7 (type: int), _col8 (type: struct<count:bigint,sum:double,input:int>), _col9 (type: bigint), _col10 (type: binary)
                          auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: hr=11
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                    hr 11
                  properties:
                    column.name.delimiter ,
                    columns key,value
                    columns.types string:string
#### A masked pattern was here ####
                    name default.srcpart
                    partition_columns ds/hr
                    partition_columns.types string:string
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 'default','default'
                      columns.types string:string
#### A masked pattern was here ####
                      name default.srcpart
                      partition_columns ds/hr
                      partition_columns.types string:string
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcpart
                  name: default.srcpart
#### A masked pattern was here ####
                Partition
                  base file name: hr=12
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                    hr 12
                  properties:
                    column.name.delimiter ,
                    columns key,value
                    columns.types string:string
#### A masked pattern was here ####
                    name default.srcpart
                    partition_columns ds/hr
                    partition_columns.types string:string
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 'default','default'
                      columns.types string:string
#### A masked pattern was here ####
                      name default.srcpart
                      partition_columns ds/hr
                      partition_columns.types string:string
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcpart
                  name: default.srcpart
            Truncated Path -> Alias:
              /srcpart/ds=2008-04-08/hr=11 [srcpart]
              /srcpart/ds=2008-04-08/hr=12 [srcpart]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col2,0)) (type: bigint), COALESCE(_col3,0) (type: double), (_col4 - _col5) (type: bigint), COALESCE(ndv_compute_bit_vector(_col6),0) (type: bigint), _col6 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col7,0)) (type: bigint), COALESCE(_col8,0) (type: double), (_col4 - _col9) (type: bigint), COALESCE(ndv_compute_bit_vector(_col10),0) (type: bigint), _col10 (type: binary), _col0 (type: string), _col1 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13
                  Statistics: Num rows: 1 Data size: 712 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 712 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13
                          columns.types string:bigint:double:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:string
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 2008-04-08
            hr 11
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.RCFileOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types string:string
#### A masked pattern was here ####
                name default.list_bucketing_static_part_n0
                partition_columns ds/hr
                partition_columns.types string:string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
              serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
              name: default.list_bucketing_static_part_n0

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value
          Column Types: string, string
          Table: default.list_bucketing_static_part_n0
          Is Table Level Stats: false

PREHOOK: query: insert overwrite table list_bucketing_static_part_n0 partition (ds = '2008-04-08', hr = '11')
select key, value from srcpart where ds = '2008-04-08'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
POSTHOOK: query: insert overwrite table list_bucketing_static_part_n0 partition (ds = '2008-04-08', hr = '11')
select key, value from srcpart where ds = '2008-04-08'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
POSTHOOK: Lineage: list_bucketing_static_part_n0 PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: list_bucketing_static_part_n0 PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ? inner join "PARTITION_KEY_VALS" "FILTER0" on "FILTER0"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER0"."INTEGER_IDX" = 0 where "DBS"."CTLG_NAME" = ?  and (("FILTER0"."PART_KEY_VAL" = ?))"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (1,2) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (1,2) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (1,2) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (2,3) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (1) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (2,3) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select count("COLUMN_NAME") from "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ?  and "COLUMN_NAME" in (?,?) and "PARTITION_NAME" in (?,?) and "ENGINE" = ?  group by "PARTITION_NAME""
SQL Query : "select "PARTITION_NAME", "COLUMN_NAME", "COLUMN_TYPE", "LONG_LOW_VALUE", "LONG_HIGH_VALUE", "DOUBLE_LOW_VALUE", "DOUBLE_HIGH_VALUE", "BIG_DECIMAL_LOW_VALUE", "BIG_DECIMAL_HIGH_VALUE", "NUM_NULLS", "NUM_DISTINCTS", "BIT_VECTOR", "AVG_COL_LEN", "MAX_COL_LEN", "NUM_TRUES", "NUM_FALSES", "LAST_ANALYZED"  from  "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ? and "COLUMN_NAME"  in (?,?) AND "PARTITION_NAME" in (?,?)  and "ENGINE" = ?  order by "PARTITION_NAME""
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ?  where "DBS"."CTLG_NAME" = ?  and "PARTITIONS"."PART_NAME" in (?)"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (5) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (5) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (5) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (7) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SKEWED_VALUES"."SD_ID_OID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_VALUES"   left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_VALUES"."STRING_LIST_ID_EID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_VALUES"."SD_ID_OID" in (7)   and "SKEWED_VALUES"."STRING_LIST_ID_EID" is not null   and "SKEWED_VALUES"."INTEGER_IDX" >= 0 order by "SKEWED_VALUES"."SD_ID_OID" asc, "SKEWED_VALUES"."INTEGER_IDX" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "SKEWED_COL_VALUE_LOC_MAP"."SD_ID", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID", "SKEWED_COL_VALUE_LOC_MAP"."LOCATION", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_COL_VALUE_LOC_MAP"  left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" in (7)  and "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" is not null order by "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" asc,  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (2) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (7) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
PREHOOK: query: show partitions list_bucketing_static_part_n0
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@list_bucketing_static_part_n0
POSTHOOK: query: show partitions list_bucketing_static_part_n0
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@list_bucketing_static_part_n0
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
ds=2008-04-08/hr=11
PREHOOK: query: desc formatted list_bucketing_static_part_n0 partition (ds='2008-04-08', hr='11')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@list_bucketing_static_part_n0
POSTHOOK: query: desc formatted list_bucketing_static_part_n0 partition (ds='2008-04-08', hr='11')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@list_bucketing_static_part_n0
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
# col_name            	data_type           	comment             
key                 	string              	                    
value               	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
hr                  	string              	                    
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[2008-04-08, 11]    	 
Database:           	default             	 
Table:              	list_bucketing_static_part_n0	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"key\":\"true\",\"value\":\"true\"}}
	numFiles            	3                   
	numRows             	1000                
	rawDataSize         	9624                
	totalSize           	10659               
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe	 
InputFormat:        	org.apache.hadoop.hive.ql.io.RCFileInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.RCFileOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Stored As SubDirectories:	Yes                 	 
Skewed Columns:     	[key]               	 
Skewed Values:      	[[103], [484]]      	 
#### A masked pattern was here ####
Skewed Value to Truncated Path:	{[103]=/list_bucketing_static_part_n0/ds=2008-04-08/hr=11/key=103, [484]=/list_bucketing_static_part_n0/ds=2008-04-08/hr=11/key=484}	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: explain extended
insert overwrite table list_bucketing_static_part_n0 partition (ds = '2008-04-08',  hr = '11')
select key, value from srcpart where ds = '2008-04-08'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
POSTHOOK: query: explain extended
insert overwrite table list_bucketing_static_part_n0 partition (ds = '2008-04-08',  hr = '11')
select key, value from srcpart where ds = '2008-04-08'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ? inner join "PARTITION_KEY_VALS" "FILTER0" on "FILTER0"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER0"."INTEGER_IDX" = 0 where "DBS"."CTLG_NAME" = ?  and (("FILTER0"."PART_KEY_VAL" = ?))"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (1,2) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (1,2) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (1,2) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (2,3) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (1) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (2,3) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select count("COLUMN_NAME") from "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ?  and "COLUMN_NAME" in (?,?) and "PARTITION_NAME" in (?,?) and "ENGINE" = ?  group by "PARTITION_NAME""
SQL Query : "select "PARTITION_NAME", "COLUMN_NAME", "COLUMN_TYPE", "LONG_LOW_VALUE", "LONG_HIGH_VALUE", "DOUBLE_LOW_VALUE", "DOUBLE_HIGH_VALUE", "BIG_DECIMAL_LOW_VALUE", "BIG_DECIMAL_HIGH_VALUE", "NUM_NULLS", "NUM_DISTINCTS", "BIT_VECTOR", "AVG_COL_LEN", "MAX_COL_LEN", "NUM_TRUES", "NUM_FALSES", "LAST_ANALYZED"  from  "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ? and "COLUMN_NAME"  in (?,?) AND "PARTITION_NAME" in (?,?)  and "ENGINE" = ?  order by "PARTITION_NAME""
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
OPTIMIZED SQL: SELECT `key`, `value`
FROM `default`.`srcpart`
WHERE `ds` = '2008-04-08'
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcpart
                  filterExpr: (ds = '2008-04-08') (type: boolean)
                  Statistics: Num rows: 1000 Data size: 178000 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1000 Data size: 178000 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      bucketingVersion: 2
                      compressed: false
                      GlobalTableId: 1
#### A masked pattern was here ####
                      NumFilesPerFileSink: 1
                      Static Partition Specification: ds=2008-04-08/hr=11/
                      Statistics: Num rows: 1000 Data size: 178000 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                      table:
                          input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.RCFileOutputFormat
                          properties:
                            bucketing_version 2
                            column.name.delimiter ,
                            columns key,value
                            columns.comments 
                            columns.types string:string
#### A masked pattern was here ####
                            name default.list_bucketing_static_part_n0
                            partition_columns ds/hr
                            partition_columns.types string:string
                            serialization.format 1
                            serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
                          serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
                          name: default.list_bucketing_static_part_n0
                      TotalFiles: 1
                      GatherStats: true
                      MultiFileSpray: false
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: string), '2008-04-08' (type: string), '11' (type: string)
                      outputColumnNames: key, value, ds, hr
                      Statistics: Num rows: 1000 Data size: 358000 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: max(length(key)), avg(COALESCE(length(key),0)), count(1), count(key), compute_bit_vector_hll(key), max(length(value)), avg(COALESCE(length(value),0)), count(value), compute_bit_vector_hll(value)
                        keys: ds (type: string), hr (type: string)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                        Statistics: Num rows: 1 Data size: 652 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          bucketingVersion: 2
                          key expressions: _col0 (type: string), _col1 (type: string)
                          null sort order: zz
                          numBuckets: -1
                          sort order: ++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                          Statistics: Num rows: 1 Data size: 652 Basic stats: COMPLETE Column stats: COMPLETE
                          tag: -1
                          value expressions: _col2 (type: int), _col3 (type: struct<count:bigint,sum:double,input:int>), _col4 (type: bigint), _col5 (type: bigint), _col6 (type: binary), _col7 (type: int), _col8 (type: struct<count:bigint,sum:double,input:int>), _col9 (type: bigint), _col10 (type: binary)
                          auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: hr=11
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                    hr 11
                  properties:
                    column.name.delimiter ,
                    columns key,value
                    columns.types string:string
#### A masked pattern was here ####
                    name default.srcpart
                    partition_columns ds/hr
                    partition_columns.types string:string
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 'default','default'
                      columns.types string:string
#### A masked pattern was here ####
                      name default.srcpart
                      partition_columns ds/hr
                      partition_columns.types string:string
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcpart
                  name: default.srcpart
#### A masked pattern was here ####
                Partition
                  base file name: hr=12
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                    hr 12
                  properties:
                    column.name.delimiter ,
                    columns key,value
                    columns.types string:string
#### A masked pattern was here ####
                    name default.srcpart
                    partition_columns ds/hr
                    partition_columns.types string:string
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 'default','default'
                      columns.types string:string
#### A masked pattern was here ####
                      name default.srcpart
                      partition_columns ds/hr
                      partition_columns.types string:string
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcpart
                  name: default.srcpart
            Truncated Path -> Alias:
              /srcpart/ds=2008-04-08/hr=11 [srcpart]
              /srcpart/ds=2008-04-08/hr=12 [srcpart]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col2,0)) (type: bigint), COALESCE(_col3,0) (type: double), (_col4 - _col5) (type: bigint), COALESCE(ndv_compute_bit_vector(_col6),0) (type: bigint), _col6 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col7,0)) (type: bigint), COALESCE(_col8,0) (type: double), (_col4 - _col9) (type: bigint), COALESCE(ndv_compute_bit_vector(_col10),0) (type: bigint), _col10 (type: binary), _col0 (type: string), _col1 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13
                  Statistics: Num rows: 1 Data size: 712 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 712 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13
                          columns.types string:bigint:double:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:string
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 2008-04-08
            hr 11
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.RCFileOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types string:string
#### A masked pattern was here ####
                name default.list_bucketing_static_part_n0
                partition_columns ds/hr
                partition_columns.types string:string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
              serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
              name: default.list_bucketing_static_part_n0

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value
          Column Types: string, string
          Table: default.list_bucketing_static_part_n0
          Is Table Level Stats: false

PREHOOK: query: insert overwrite table list_bucketing_static_part_n0 partition (ds = '2008-04-08',  hr = '11')
select key, value from srcpart where ds = '2008-04-08'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
POSTHOOK: query: insert overwrite table list_bucketing_static_part_n0 partition (ds = '2008-04-08',  hr = '11')
select key, value from srcpart where ds = '2008-04-08'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
POSTHOOK: Lineage: list_bucketing_static_part_n0 PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: list_bucketing_static_part_n0 PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ? inner join "PARTITION_KEY_VALS" "FILTER0" on "FILTER0"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER0"."INTEGER_IDX" = 0 where "DBS"."CTLG_NAME" = ?  and (("FILTER0"."PART_KEY_VAL" = ?))"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (1,2) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (1,2) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (1,2) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (2,3) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (1) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (2,3) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select count("COLUMN_NAME") from "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ?  and "COLUMN_NAME" in (?,?) and "PARTITION_NAME" in (?,?) and "ENGINE" = ?  group by "PARTITION_NAME""
SQL Query : "select "PARTITION_NAME", "COLUMN_NAME", "COLUMN_TYPE", "LONG_LOW_VALUE", "LONG_HIGH_VALUE", "DOUBLE_LOW_VALUE", "DOUBLE_HIGH_VALUE", "BIG_DECIMAL_LOW_VALUE", "BIG_DECIMAL_HIGH_VALUE", "NUM_NULLS", "NUM_DISTINCTS", "BIT_VECTOR", "AVG_COL_LEN", "MAX_COL_LEN", "NUM_TRUES", "NUM_FALSES", "LAST_ANALYZED"  from  "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ? and "COLUMN_NAME"  in (?,?) AND "PARTITION_NAME" in (?,?)  and "ENGINE" = ?  order by "PARTITION_NAME""
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ?  where "DBS"."CTLG_NAME" = ?  and "PARTITIONS"."PART_NAME" in (?)"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (5) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (5) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (5) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (7) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SKEWED_VALUES"."SD_ID_OID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_VALUES"   left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_VALUES"."STRING_LIST_ID_EID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_VALUES"."SD_ID_OID" in (7)   and "SKEWED_VALUES"."STRING_LIST_ID_EID" is not null   and "SKEWED_VALUES"."INTEGER_IDX" >= 0 order by "SKEWED_VALUES"."SD_ID_OID" asc, "SKEWED_VALUES"."INTEGER_IDX" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "SKEWED_COL_VALUE_LOC_MAP"."SD_ID", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID", "SKEWED_COL_VALUE_LOC_MAP"."LOCATION", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_COL_VALUE_LOC_MAP"  left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" in (7)  and "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" is not null order by "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" asc,  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (2) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (7) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ?  where "DBS"."CTLG_NAME" = ?  and "PARTITIONS"."PART_NAME" in (?)"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (5) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (5) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (5) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (7) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SKEWED_VALUES"."SD_ID_OID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_VALUES"   left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_VALUES"."STRING_LIST_ID_EID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_VALUES"."SD_ID_OID" in (7)   and "SKEWED_VALUES"."STRING_LIST_ID_EID" is not null   and "SKEWED_VALUES"."INTEGER_IDX" >= 0 order by "SKEWED_VALUES"."SD_ID_OID" asc, "SKEWED_VALUES"."INTEGER_IDX" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "SKEWED_COL_VALUE_LOC_MAP"."SD_ID", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID", "SKEWED_COL_VALUE_LOC_MAP"."LOCATION", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_COL_VALUE_LOC_MAP"  left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" in (7)  and "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" is not null order by "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" asc,  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (2) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (7) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
PREHOOK: query: show partitions list_bucketing_static_part_n0
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@list_bucketing_static_part_n0
POSTHOOK: query: show partitions list_bucketing_static_part_n0
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@list_bucketing_static_part_n0
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
ds=2008-04-08/hr=11
PREHOOK: query: desc formatted list_bucketing_static_part_n0 partition (ds='2008-04-08', hr='11')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@list_bucketing_static_part_n0
POSTHOOK: query: desc formatted list_bucketing_static_part_n0 partition (ds='2008-04-08', hr='11')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@list_bucketing_static_part_n0
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
# col_name            	data_type           	comment             
key                 	string              	                    
value               	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
hr                  	string              	                    
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[2008-04-08, 11]    	 
Database:           	default             	 
Table:              	list_bucketing_static_part_n0	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"key\":\"true\",\"value\":\"true\"}}
	numFiles            	3                   
	numRows             	1000                
	rawDataSize         	9624                
	totalSize           	10659               
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe	 
InputFormat:        	org.apache.hadoop.hive.ql.io.RCFileInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.RCFileOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Stored As SubDirectories:	Yes                 	 
Skewed Columns:     	[key]               	 
Skewed Values:      	[[103], [484]]      	 
#### A masked pattern was here ####
Skewed Value to Truncated Path:	{[103]=/list_bucketing_static_part_n0/ds=2008-04-08/hr=11/key=103, [484]=/list_bucketing_static_part_n0/ds=2008-04-08/hr=11/key=484}	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: select count(1) from srcpart where ds = '2008-04-08'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from srcpart where ds = '2008-04-08'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
#### A masked pattern was here ####
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ? inner join "PARTITION_KEY_VALS" "FILTER0" on "FILTER0"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER0"."INTEGER_IDX" = 0 where "DBS"."CTLG_NAME" = ?  and (("FILTER0"."PART_KEY_VAL" = ?))"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (1,2) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (1,2) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (1,2) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (2,3) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (1) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (2,3) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
1000
PREHOOK: query: select count(*) from list_bucketing_static_part_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@list_bucketing_static_part_n0
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from list_bucketing_static_part_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@list_bucketing_static_part_n0
#### A masked pattern was here ####
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ?  where "DBS"."CTLG_NAME" = ?  order by "PART_NAME" asc"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (5) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (5) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (5) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (7) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SKEWED_VALUES"."SD_ID_OID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_VALUES"   left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_VALUES"."STRING_LIST_ID_EID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_VALUES"."SD_ID_OID" in (7)   and "SKEWED_VALUES"."STRING_LIST_ID_EID" is not null   and "SKEWED_VALUES"."INTEGER_IDX" >= 0 order by "SKEWED_VALUES"."SD_ID_OID" asc, "SKEWED_VALUES"."INTEGER_IDX" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "SKEWED_COL_VALUE_LOC_MAP"."SD_ID", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID", "SKEWED_COL_VALUE_LOC_MAP"."LOCATION", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_COL_VALUE_LOC_MAP"  left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" in (7)  and "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" is not null order by "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" asc,  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (2) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (7) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
1000
PREHOOK: query: explain extended
select * from list_bucketing_static_part_n0 where ds = '2008-04-08' and  hr = '11' and key = '484' and value = 'val_484'
PREHOOK: type: QUERY
PREHOOK: Input: default@list_bucketing_static_part_n0
PREHOOK: Input: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select * from list_bucketing_static_part_n0 where ds = '2008-04-08' and  hr = '11' and key = '484' and value = 'val_484'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@list_bucketing_static_part_n0
POSTHOOK: Input: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
#### A masked pattern was here ####
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ? inner join "PARTITION_KEY_VALS" "FILTER0" on "FILTER0"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER0"."INTEGER_IDX" = 0 inner join "PARTITION_KEY_VALS" "FILTER1" on "FILTER1"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER1"."INTEGER_IDX" = 1 where "DBS"."CTLG_NAME" = ?  and ( (("FILTER0"."PART_KEY_VAL" = ?) and ("FILTER1"."PART_KEY_VAL" = ?)) )"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (5) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (5) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (5) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (7) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SKEWED_VALUES"."SD_ID_OID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_VALUES"   left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_VALUES"."STRING_LIST_ID_EID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_VALUES"."SD_ID_OID" in (7)   and "SKEWED_VALUES"."STRING_LIST_ID_EID" is not null   and "SKEWED_VALUES"."INTEGER_IDX" >= 0 order by "SKEWED_VALUES"."SD_ID_OID" asc, "SKEWED_VALUES"."INTEGER_IDX" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "SKEWED_COL_VALUE_LOC_MAP"."SD_ID", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID", "SKEWED_COL_VALUE_LOC_MAP"."LOCATION", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_COL_VALUE_LOC_MAP"  left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" in (7)  and "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" is not null order by "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" asc,  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (2) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (7) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select count("COLUMN_NAME") from "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ?  and "COLUMN_NAME" in (?,?) and "PARTITION_NAME" in (?) and "ENGINE" = ?  group by "PARTITION_NAME""
SQL Query : "select "PARTITION_NAME", "COLUMN_NAME", "COLUMN_TYPE", "LONG_LOW_VALUE", "LONG_HIGH_VALUE", "DOUBLE_LOW_VALUE", "DOUBLE_HIGH_VALUE", "BIG_DECIMAL_LOW_VALUE", "BIG_DECIMAL_HIGH_VALUE", "NUM_NULLS", "NUM_DISTINCTS", "BIT_VECTOR", "AVG_COL_LEN", "MAX_COL_LEN", "NUM_TRUES", "NUM_FALSES", "LAST_ANALYZED"  from  "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ? and "COLUMN_NAME"  in (?,?) AND "PARTITION_NAME" in (?)  and "ENGINE" = ?  order by "PARTITION_NAME""
OPTIMIZED SQL: SELECT CAST('484' AS STRING) AS `$f0`, CAST('val_484' AS STRING) AS `$f1`, CAST('2008-04-08' AS STRING) AS `$f2`, CAST('11' AS STRING) AS `$f3`
FROM `default`.`list_bucketing_static_part_n0`
WHERE `key` = '484' AND `value` = 'val_484' AND (`ds` = '2008-04-08' AND `hr` = '11')
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Partition Description:
          Partition
            input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.RCFileOutputFormat
            partition values:
              ds 2008-04-08
              hr 11
            properties:
              column.name.delimiter ,
              columns key,value
              columns.types string:string
#### A masked pattern was here ####
              name default.list_bucketing_static_part_n0
              partition_columns ds/hr
              partition_columns.types string:string
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
            serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
          
              input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.RCFileOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types string:string
#### A masked pattern was here ####
                name default.list_bucketing_static_part_n0
                partition_columns ds/hr
                partition_columns.types string:string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
              serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
              name: default.list_bucketing_static_part_n0
            name: default.list_bucketing_static_part_n0
      Processor Tree:
        TableScan
          alias: list_bucketing_static_part_n0
          filterExpr: ((key = '484') and (value = 'val_484')) (type: boolean)
          GatherStats: false
          Filter Operator
            isSamplingPred: false
            predicate: ((key = '484') and (value = 'val_484')) (type: boolean)
            Select Operator
              expressions: '484' (type: string), 'val_484' (type: string), '2008-04-08' (type: string), '11' (type: string)
              outputColumnNames: _col0, _col1, _col2, _col3
              ListSink

PREHOOK: query: select * from list_bucketing_static_part_n0 where ds = '2008-04-08' and  hr = '11' and key = '484' and value = 'val_484'
PREHOOK: type: QUERY
PREHOOK: Input: default@list_bucketing_static_part_n0
PREHOOK: Input: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
#### A masked pattern was here ####
POSTHOOK: query: select * from list_bucketing_static_part_n0 where ds = '2008-04-08' and  hr = '11' and key = '484' and value = 'val_484'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@list_bucketing_static_part_n0
POSTHOOK: Input: default@list_bucketing_static_part_n0@ds=2008-04-08/hr=11
#### A masked pattern was here ####
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ? inner join "PARTITION_KEY_VALS" "FILTER0" on "FILTER0"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER0"."INTEGER_IDX" = 0 inner join "PARTITION_KEY_VALS" "FILTER1" on "FILTER1"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER1"."INTEGER_IDX" = 1 where "DBS"."CTLG_NAME" = ?  and ( (("FILTER0"."PART_KEY_VAL" = ?) and ("FILTER1"."PART_KEY_VAL" = ?)) )"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (5) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (5) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (5) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (7) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (7) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SKEWED_VALUES"."SD_ID_OID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID",  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_VALUES"   left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_VALUES"."STRING_LIST_ID_EID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_VALUES"."SD_ID_OID" in (7)   and "SKEWED_VALUES"."STRING_LIST_ID_EID" is not null   and "SKEWED_VALUES"."INTEGER_IDX" >= 0 order by "SKEWED_VALUES"."SD_ID_OID" asc, "SKEWED_VALUES"."INTEGER_IDX" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "SKEWED_COL_VALUE_LOC_MAP"."SD_ID", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID", "SKEWED_COL_VALUE_LOC_MAP"."LOCATION", "SKEWED_STRING_LIST_VALUES"."STRING_LIST_VALUE" from "SKEWED_COL_VALUE_LOC_MAP"  left outer join "SKEWED_STRING_LIST_VALUES" on "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" = "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" where "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" in (7)  and "SKEWED_COL_VALUE_LOC_MAP"."STRING_LIST_ID_KID" is not null order by "SKEWED_COL_VALUE_LOC_MAP"."SD_ID" asc,  "SKEWED_STRING_LIST_VALUES"."STRING_LIST_ID" asc,  "SKEWED_STRING_LIST_VALUES"."INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (2) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (7) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select count("COLUMN_NAME") from "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ?  and "COLUMN_NAME" in (?,?) and "PARTITION_NAME" in (?) and "ENGINE" = ?  group by "PARTITION_NAME""
SQL Query : "select "PARTITION_NAME", "COLUMN_NAME", "COLUMN_TYPE", "LONG_LOW_VALUE", "LONG_HIGH_VALUE", "DOUBLE_LOW_VALUE", "DOUBLE_HIGH_VALUE", "BIG_DECIMAL_LOW_VALUE", "BIG_DECIMAL_HIGH_VALUE", "NUM_NULLS", "NUM_DISTINCTS", "BIT_VECTOR", "AVG_COL_LEN", "MAX_COL_LEN", "NUM_TRUES", "NUM_FALSES", "LAST_ANALYZED"  from  "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ? and "COLUMN_NAME"  in (?,?) AND "PARTITION_NAME" in (?)  and "ENGINE" = ?  order by "PARTITION_NAME""
484	val_484	2008-04-08	11
484	val_484	2008-04-08	11
PREHOOK: query: select * from srcpart where ds = '2008-04-08' and key = '484' and value = 'val_484'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
#### A masked pattern was here ####
POSTHOOK: query: select * from srcpart where ds = '2008-04-08' and key = '484' and value = 'val_484'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
#### A masked pattern was here ####
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "DBS"."CTLG_NAME" from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT  "D2"."NAME", "T2"."TBL_NAME", CASE WHEN "C2"."COLUMN_NAME" IS NOT NULL THEN "C2"."COLUMN_NAME" ELSE "P2"."PKEY_NAME" END, "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."UPDATE_RULE", "KEY_CONSTRAINTS"."DELETE_RULE", "KEY_CONSTRAINTS"."CONSTRAINT_NAME" , "KEY_CONSTRAINTS2"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."CHILD_TBL_ID"  INNER JOIN "KEY_CONSTRAINTS" "KEY_CONSTRAINTS2" ON "KEY_CONSTRAINTS2"."PARENT_TBL_ID"  = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  AND "KEY_CONSTRAINTS2"."PARENT_CD_ID"  = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "KEY_CONSTRAINTS2"."PARENT_INTEGER_IDX"  = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  INNER JOIN "TBLS" "T2" ON  "KEY_CONSTRAINTS"."PARENT_TBL_ID" = "T2"."TBL_ID"  INNER JOIN "DBS" "D2" ON "T2"."DB_ID" = "D2"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2"  ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."CHILD_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."CHILD_INTEGER_IDX"  LEFT OUTER JOIN "COLUMNS_V2" "C2" ON "C2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "C2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" "P2" ON "P2"."TBL_ID" = "TBLS"."TBL_ID" AND  "P2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 1 AND "KEY_CONSTRAINTS2"."CONSTRAINT_TYPE" = 0 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME", CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."POSITION", "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 2 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 4 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY", "KEY_CONSTRAINTS"."DEFAULT_VALUE"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 5 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "SELECT "DBS"."NAME", "TBLS"."TBL_NAME",CASE WHEN "COLUMNS_V2"."COLUMN_NAME" IS NOT NULL THEN "COLUMNS_V2"."COLUMN_NAME" ELSE "PARTITION_KEYS"."PKEY_NAME" END, "KEY_CONSTRAINTS"."CONSTRAINT_NAME", "KEY_CONSTRAINTS"."ENABLE_VALIDATE_RELY"  from "TBLS"  INNER JOIN "KEY_CONSTRAINTS" ON "TBLS"."TBL_ID" = "KEY_CONSTRAINTS"."PARENT_TBL_ID"  INNER JOIN "DBS" ON "TBLS"."DB_ID" = "DBS"."DB_ID"  LEFT OUTER JOIN "COLUMNS_V2" ON "COLUMNS_V2"."CD_ID" = "KEY_CONSTRAINTS"."PARENT_CD_ID" AND  "COLUMNS_V2"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  LEFT OUTER JOIN "PARTITION_KEYS" ON "TBLS"."TBL_ID" = "PARTITION_KEYS"."TBL_ID" AND  "PARTITION_KEYS"."INTEGER_IDX" = "KEY_CONSTRAINTS"."PARENT_INTEGER_IDX"  WHERE "KEY_CONSTRAINTS"."CONSTRAINT_TYPE" = 3 AND "DBS"."CTLG_NAME" = ? AND "DBS"."NAME" = ? AND "TBLS"."TBL_NAME" = ?"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ? inner join "PARTITION_KEY_VALS" "FILTER0" on "FILTER0"."PART_ID" = "PARTITIONS"."PART_ID" and "FILTER0"."INTEGER_IDX" = 0 where "DBS"."CTLG_NAME" = ?  and (("FILTER0"."PART_KEY_VAL" = ?))"
SQL Query : "select "PARTITIONS"."PART_ID", "SDS"."SD_ID", "SDS"."CD_ID", "SERDES"."SERDE_ID", "PARTITIONS"."CREATE_TIME", "PARTITIONS"."LAST_ACCESS_TIME", "SDS"."INPUT_FORMAT", "SDS"."IS_COMPRESSED", "SDS"."IS_STOREDASSUBDIRECTORIES", "SDS"."LOCATION", "SDS"."NUM_BUCKETS", "SDS"."OUTPUT_FORMAT", "SERDES"."NAME", "SERDES"."SLIB", "PARTITIONS"."WRITE_ID" from "PARTITIONS"  left outer join "SDS" on "PARTITIONS"."SD_ID" = "SDS"."SD_ID"   left outer join "SERDES" on "SDS"."SERDE_ID" = "SERDES"."SERDE_ID" where "PART_ID" in (1,2) order by "PART_NAME" asc"
SQL Query : "select "PART_ID", "PARAM_KEY", "PARAM_VALUE" from "PARTITION_PARAMS" where "PART_ID" in (1,2) and "PARAM_KEY" is not null order by "PART_ID" asc"
SQL Query : "select "PART_ID", "PART_KEY_VAL" from "PARTITION_KEY_VALS" where "PART_ID" in (1,2) order by "PART_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "PARAM_KEY", "PARAM_VALUE" from "SD_PARAMS" where "SD_ID" in (2,3) and "PARAM_KEY" is not null order by "SD_ID" asc"
SQL Query : "select "SD_ID", "COLUMN_NAME", "SORT_COLS"."ORDER" from "SORT_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "BUCKET_COL_NAME" from "BUCKETING_COLS" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SD_ID", "SKEWED_COL_NAME" from "SKEWED_COL_NAMES" where "SD_ID" in (2,3) order by "SD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "CD_ID", "COMMENT", "COLUMN_NAME", "TYPE_NAME" from "COLUMNS_V2" where "CD_ID" in (1) order by "CD_ID" asc, "INTEGER_IDX" asc"
SQL Query : "select "SERDE_ID", "PARAM_KEY", "PARAM_VALUE" from "SERDE_PARAMS" where "SERDE_ID" in (2,3) and "PARAM_KEY" is not null order by "SERDE_ID" asc"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select count("COLUMN_NAME") from "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ?  and "COLUMN_NAME" in (?,?) and "PARTITION_NAME" in (?,?) and "ENGINE" = ?  group by "PARTITION_NAME""
SQL Query : "select "PARTITION_NAME", "COLUMN_NAME", "COLUMN_TYPE", "LONG_LOW_VALUE", "LONG_HIGH_VALUE", "DOUBLE_LOW_VALUE", "DOUBLE_HIGH_VALUE", "BIG_DECIMAL_LOW_VALUE", "BIG_DECIMAL_HIGH_VALUE", "NUM_NULLS", "NUM_DISTINCTS", "BIT_VECTOR", "AVG_COL_LEN", "MAX_COL_LEN", "NUM_TRUES", "NUM_FALSES", "LAST_ANALYZED"  from  "PART_COL_STATS" where "CAT_NAME" = ? and "DB_NAME" = ? and "TABLE_NAME" = ? and "COLUMN_NAME"  in (?,?) AND "PARTITION_NAME" in (?,?)  and "ENGINE" = ?  order by "PARTITION_NAME""
484	val_484	2008-04-08	11
484	val_484	2008-04-08	12
PREHOOK: query: drop table list_bucketing_static_part_n0
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@list_bucketing_static_part_n0
PREHOOK: Output: default@list_bucketing_static_part_n0
POSTHOOK: query: drop table list_bucketing_static_part_n0
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@list_bucketing_static_part_n0
POSTHOOK: Output: default@list_bucketing_static_part_n0
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "DB_ID", "NAME", "DB_LOCATION_URI", "DESC", "OWNER_NAME", "OWNER_TYPE", "CTLG_NAME" , "CREATE_TIME", "DB_MANAGED_LOCATION_URI", "TYPE", "DATACONNECTOR_NAME", "REMOTE_DBNAME"FROM "DBS" where "NAME" = ? and "CTLG_NAME" = ?"
SQL Query : "select "PARAM_KEY", "PARAM_VALUE"  from "DATABASE_PARAMS"  WHERE "DB_ID" = ?  AND "PARAM_KEY" IS NOT NULL"
SQL Query : "select "PARTITIONS"."PART_ID" from "PARTITIONS"  inner join "TBLS" on "PARTITIONS"."TBL_ID" = "TBLS"."TBL_ID"     and "TBLS"."TBL_NAME" = ?   inner join "DBS" on "TBLS"."DB_ID" = "DBS"."DB_ID"      and "DBS"."NAME" = ?  where "DBS"."CTLG_NAME" = ?  and "PARTITIONS"."PART_NAME" in (?)"
SQL Query : "SELECT "SDS"."SD_ID", "SDS"."CD_ID", "SDS"."SERDE_ID" from "SDS" INNER JOIN "PARTITIONS" ON "PARTITIONS"."SD_ID" = "SDS"."SD_ID" WHERE "PARTITIONS"."PART_ID" in (5)"
SQL Query : "select "SKEWED_VALUES"."STRING_LIST_ID_EID" from "SKEWED_VALUES" WHERE "SKEWED_VALUES"."SD_ID_OID" in  (7)"
