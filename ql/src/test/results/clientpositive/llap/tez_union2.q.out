PREHOOK: query: explain 
SELECT key, value FROM
(
  SELECT key, value FROM src
  UNION ALL
  SELECT key, key as value FROM ( 
    SELECT distinct key FROM (
      SELECT key, value FROM (
        SELECT key, value FROM src
        UNION ALL
        SELECT key, value FROM src
      )t1 
    group by key, value)t2
  )t3
)t4
group by key, value
PREHOOK: type: QUERY
POSTHOOK: query: explain 
SELECT key, value FROM
(
  SELECT key, value FROM src
  UNION ALL
  SELECT key, key as value FROM ( 
    SELECT distinct key FROM (
      SELECT key, value FROM (
        SELECT key, value FROM src
        UNION ALL
        SELECT key, value FROM src
      )t1 
    group by key, value)t2
  )t3
)t4
group by key, value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Union 2 (CONTAINS)
        Map 4 <- Union 5 (CONTAINS)
        Map 7 <- Union 5 (CONTAINS)
        Reducer 3 <- Union 2 (SIMPLE_EDGE)
        Reducer 6 <- Union 2 (CONTAINS), Union 5 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: _col0 (type: string), _col1 (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 404 Data size: 71912 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                        Statistics: Num rows: 404 Data size: 71912 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: _col0 (type: string), _col1 (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: _col0 (type: string), _col1 (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 404 Data size: 71912 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 404 Data size: 71912 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string)
                  outputColumnNames: _col0
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    keys: _col0 (type: string)
                    mode: complete
                    outputColumnNames: _col0
                    Statistics: Num rows: 309 Data size: 26883 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col0 (type: string), _col0 (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 309 Data size: 53766 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: _col0 (type: string), _col1 (type: string)
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 404 Data size: 71912 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string)
                          sort order: ++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                          Statistics: Num rows: 404 Data size: 71912 Basic stats: COMPLETE Column stats: COMPLETE
        Union 2 
            Vertex: Union 2
        Union 5 
            Vertex: Union 5

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT key, value FROM
(
  SELECT key, value FROM src
  UNION ALL
  SELECT key, key as value FROM ( 
    SELECT distinct key FROM (
      SELECT key, value FROM (
        SELECT key, value FROM src
        UNION ALL
        SELECT key, value FROM src
      )t1 
    group by key, value)t2
  )t3
)t4
group by key, value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT key, value FROM
(
  SELECT key, value FROM src
  UNION ALL
  SELECT key, key as value FROM ( 
    SELECT distinct key FROM (
      SELECT key, value FROM (
        SELECT key, value FROM src
        UNION ALL
        SELECT key, value FROM src
      )t1 
    group by key, value)t2
  )t3
)t4
group by key, value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	val_0
103	val_103
104	104
105	105
105	val_105
113	113
116	val_116
118	118
12	12
120	val_120
128	128
129	val_129
131	val_131
136	136
136	val_136
152	152
153	153
155	val_155
157	157
157	val_157
160	val_160
174	174
180	val_180
183	val_183
190	val_190
191	val_191
192	192
193	val_193
20	20
201	201
202	202
205	val_205
207	val_207
209	209
213	213
213	val_213
216	216
218	218
219	219
221	221
223	val_223
228	228
235	val_235
238	val_238
239	val_239
24	24
24	val_24
248	248
248	val_248
260	val_260
262	262
265	265
266	266
27	27
28	val_28
282	282
286	val_286
289	289
296	296
298	val_298
305	val_305
306	val_306
307	val_307
308	val_308
311	311
315	val_315
316	316
317	317
317	val_317
321	321
321	val_321
322	322
33	33
33	val_33
331	val_331
338	338
339	339
34	34
341	341
348	348
356	val_356
360	val_360
364	364
366	val_366
367	val_367
368	val_368
37	val_37
374	374
377	377
378	378
378	val_378
379	val_379
382	val_382
389	389
389	val_389
392	392
393	393
395	val_395
396	396
397	397
400	val_400
402	val_402
406	val_406
407	val_407
41	41
414	414
419	419
42	val_42
421	421
430	val_430
436	val_436
44	val_44
448	448
452	452
452	val_452
453	453
460	460
462	462
463	463
466	val_466
467	467
467	val_467
472	val_472
478	478
480	val_480
481	481
484	val_484
485	485
485	val_485
487	val_487
492	492
493	493
494	494
495	495
495	val_495
496	val_496
498	val_498
51	val_51
57	val_57
58	58
58	val_58
65	val_65
66	66
66	val_66
69	val_69
70	val_70
78	val_78
8	val_8
83	83
92	92
92	val_92
96	96
96	val_96
97	97
104	val_104
11	11
111	111
111	val_111
114	114
114	val_114
118	val_118
119	119
12	val_12
131	131
133	val_133
137	137
138	val_138
145	145
146	146
149	149
150	150
153	val_153
156	val_156
158	158
162	162
162	val_162
164	164
168	168
168	val_168
172	172
174	val_174
175	175
176	val_176
177	177
178	val_178
18	18
181	val_181
186	val_186
187	187
187	val_187
191	191
192	val_192
194	194
197	197
197	val_197
199	val_199
2	val_2
200	200
201	val_201
203	203
203	val_203
208	val_208
214	val_214
218	val_218
219	val_219
223	223
229	229
230	val_230
237	val_237
239	239
249	val_249
252	252
255	255
256	256
256	val_256
257	val_257
258	258
26	26
260	260
273	273
274	274
277	277
277	val_277
278	val_278
28	28
284	val_284
285	285
285	val_285
286	286
298	298
305	305
308	308
309	309
310	val_310
322	val_322
325	325
327	val_327
331	331
333	val_333
336	336
336	val_336
338	val_338
341	val_341
342	342
344	344
344	val_344
348	val_348
351	val_351
362	362
362	val_362
364	val_364
366	366
374	val_374
379	379
382	382
384	384
392	val_392
397	val_397
399	399
4	val_4
403	val_403
404	val_404
406	406
413	413
419	val_419
421	val_421
424	424
427	val_427
429	429
429	val_429
43	43
436	436
437	437
437	val_437
438	438
438	val_438
439	val_439
444	444
446	446
454	val_454
455	455
455	val_455
459	459
460	val_460
463	val_463
468	468
470	val_470
477	477
478	val_478
479	479
479	val_479
480	480
482	482
483	483
489	val_489
491	val_491
492	val_492
496	496
498	498
53	val_53
67	67
67	val_67
72	72
74	74
82	val_82
85	85
9	9
90	val_90
95	95
97	val_97
10	10
10	val_10
116	116
120	120
125	val_125
126	126
134	val_134
143	val_143
145	val_145
149	val_149
15	15
150	val_150
155	155
158	val_158
163	val_163
164	val_164
166	val_166
169	169
17	val_17
170	val_170
172	val_172
176	176
178	178
189	189
189	val_189
19	19
19	val_19
193	193
195	val_195
196	val_196
199	199
2	2
20	val_20
205	205
208	208
209	val_209
216	val_216
217	217
217	val_217
222	222
224	val_224
226	226
228	val_228
229	val_229
230	230
233	val_233
237	237
241	241
241	val_241
242	242
244	244
244	val_244
247	247
247	val_247
255	val_255
258	val_258
26	val_26
263	263
263	val_263
265	val_265
266	val_266
272	val_272
273	val_273
274	val_274
275	275
278	278
280	280
281	281
281	val_281
284	284
291	val_291
296	val_296
30	30
30	val_30
302	val_302
306	306
309	val_309
310	310
316	val_316
318	318
318	val_318
325	val_325
332	332
332	val_332
333	333
335	val_335
339	val_339
342	val_342
345	val_345
351	351
353	353
353	val_353
360	360
368	368
369	369
369	val_369
373	val_373
375	375
375	val_375
377	val_377
384	val_384
386	386
386	val_386
394	val_394
395	395
396	val_396
399	val_399
4	4
401	401
401	val_401
404	404
407	407
409	409
41	val_41
411	411
413	val_413
414	val_414
417	417
418	418
431	val_431
432	432
439	439
443	443
446	val_446
448	val_448
449	val_449
458	458
459	val_459
462	val_462
468	val_468
47	47
47	val_47
470	470
472	472
475	475
482	val_482
487	487
490	val_490
493	val_493
494	val_494
497	val_497
5	val_5
51	51
53	53
54	54
54	val_54
57	57
65	65
70	70
74	val_74
77	val_77
8	8
80	val_80
82	82
84	84
84	val_84
85	val_85
86	86
87	87
87	val_87
9	val_9
90	90
95	val_95
0	0
100	100
100	val_100
103	103
11	val_11
113	val_113
119	val_119
125	125
126	val_126
128	val_128
129	129
133	133
134	134
137	val_137
138	138
143	143
146	val_146
15	val_15
152	val_152
156	156
160	160
163	163
165	165
165	val_165
166	166
167	167
167	val_167
169	val_169
17	17
170	170
175	val_175
177	val_177
179	179
179	val_179
18	val_18
180	180
181	181
183	183
186	186
190	190
194	val_194
195	195
196	196
200	val_200
202	val_202
207	207
214	214
221	val_221
222	val_222
224	224
226	val_226
233	233
235	235
238	238
242	val_242
249	249
252	val_252
257	257
262	val_262
27	val_27
272	272
275	val_275
280	val_280
282	val_282
283	283
283	val_283
287	287
287	val_287
288	288
288	val_288
289	val_289
291	291
292	292
292	val_292
302	302
307	307
311	val_311
315	315
323	323
323	val_323
327	327
335	335
34	val_34
345	345
35	35
35	val_35
356	356
365	365
365	val_365
367	367
37	37
373	373
393	val_393
394	394
400	400
402	402
403	403
409	val_409
411	val_411
417	val_417
418	val_418
42	42
424	val_424
427	427
43	val_43
430	430
431	431
432	val_432
435	435
435	val_435
44	44
443	val_443
444	val_444
449	449
453	val_453
454	454
457	457
457	val_457
458	val_458
466	466
469	469
469	val_469
475	val_475
477	val_477
481	val_481
483	val_483
484	484
489	489
490	490
491	491
497	497
5	5
64	64
64	val_64
69	69
72	val_72
76	76
76	val_76
77	77
78	78
80	80
83	val_83
86	val_86
98	98
98	val_98
