PREHOOK: query: CREATE TABLE T1_n61(key STRING, val STRING) PARTITIONED BY (ds string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n61
POSTHOOK: query: CREATE TABLE T1_n61(key STRING, val STRING) PARTITIONED BY (ds string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n61
PREHOOK: query: CREATE TABLE outputTbl1_n15(key int, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl1_n15
POSTHOOK: query: CREATE TABLE outputTbl1_n15(key int, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl1_n15
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '1' GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n61
PREHOOK: Output: default@outputtbl1_n15
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '1' GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n61
POSTHOOK: Output: default@outputtbl1_n15
OPTIMIZED SQL: SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n61`
WHERE `ds` = '1'
GROUP BY `key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n61
                  filterExpr: (ds = '1') (type: boolean)
                  Statistics: Num rows: 1 Data size: 268 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: (ds = '1') (type: boolean)
                    Statistics: Num rows: 1 Data size: 268 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string)
                      outputColumnNames: key
                      Statistics: Num rows: 1 Data size: 268 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        keys: key (type: string)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 92 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          bucketingVersion: 2
                          key expressions: _col0 (type: string)
                          null sort order: z
                          numBuckets: -1
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 1 Data size: 92 Basic stats: COMPLETE Column stats: COMPLETE
                          tag: -1
                          value expressions: _col1 (type: bigint)
                          auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: unknown
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 92 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,cnt
                          columns.comments 
                          columns.types int:int
#### A masked pattern was here ####
                          name default.outputtbl1_n15
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1_n15
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: int)
                    outputColumnNames: key, cnt
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        bucketingVersion: 2
                        null sort order: 
                        numBuckets: -1
                        sort order: 
                        Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                        tag: -1
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                        auto parallelism: false
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n15
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n15

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n15
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '1' GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n61
PREHOOK: Output: default@outputtbl1_n15
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '1' GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n61
POSTHOOK: Output: default@outputtbl1_n15
POSTHOOK: Lineage: outputtbl1_n15.cnt EXPRESSION [(t1_n61)t1_n61.null, ]
POSTHOOK: Lineage: outputtbl1_n15.key EXPRESSION [(t1_n61)t1_n61.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n15
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n15
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n15
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n15
#### A masked pattern was here ####
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_n61  PARTITION (ds='2')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_n61
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_n61  PARTITION (ds='2')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_n61
POSTHOOK: Output: default@t1_n61@ds=2
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '1' GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n61
PREHOOK: Output: default@outputtbl1_n15
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '1' GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n61
POSTHOOK: Output: default@outputtbl1_n15
OPTIMIZED SQL: SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n61`
WHERE `ds` = '1'
GROUP BY `key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n61
                  filterExpr: (ds = '1') (type: boolean)
                  Statistics: Num rows: 1 Data size: 268 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: (ds = '1') (type: boolean)
                    Statistics: Num rows: 1 Data size: 268 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string)
                      outputColumnNames: key
                      Statistics: Num rows: 1 Data size: 268 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        keys: key (type: string)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 92 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          bucketingVersion: 2
                          key expressions: _col0 (type: string)
                          null sort order: z
                          numBuckets: -1
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 1 Data size: 92 Basic stats: COMPLETE Column stats: COMPLETE
                          tag: -1
                          value expressions: _col1 (type: bigint)
                          auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: unknown
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 92 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,cnt
                          columns.comments 
                          columns.types int:int
#### A masked pattern was here ####
                          name default.outputtbl1_n15
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1_n15
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: int)
                    outputColumnNames: key, cnt
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        bucketingVersion: 2
                        null sort order: 
                        numBuckets: -1
                        sort order: 
                        Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                        tag: -1
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                        auto parallelism: false
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 328 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n15
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n15

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n15
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '1' GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n61
PREHOOK: Output: default@outputtbl1_n15
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '1' GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n61
POSTHOOK: Output: default@outputtbl1_n15
POSTHOOK: Lineage: outputtbl1_n15.cnt EXPRESSION [(t1_n61)t1_n61.null, ]
POSTHOOK: Lineage: outputtbl1_n15.key EXPRESSION [(t1_n61)t1_n61.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n15
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n15
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n15
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n15
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '2' GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n61
PREHOOK: Input: default@t1_n61@ds=2
PREHOOK: Output: default@outputtbl1_n15
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '2' GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n61
POSTHOOK: Input: default@t1_n61@ds=2
POSTHOOK: Output: default@outputtbl1_n15
OPTIMIZED SQL: SELECT `key`, COUNT(*) AS `$f1`
FROM `default`.`t1_n61`
WHERE `ds` = '2'
GROUP BY `key`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n61
                  filterExpr: (ds = '2') (type: boolean)
                  Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        key expressions: _col0 (type: string)
                        null sort order: z
                        numBuckets: -1
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: NONE
                        tag: -1
                        value expressions: _col1 (type: bigint)
                        auto parallelism: true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: ds=2
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2
                  properties:
                    column.name.delimiter ,
                    columns key,val
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n61
                    partition_columns ds
                    partition_columns.types string
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n61
                      partition_columns ds
                      partition_columns.types string
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n61
                  name: default.t1_n61
            Truncated Path -> Alias:
              /t1_n61/ds=2 [t1_n61]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,cnt
                          columns.comments 
                          columns.types int:int
#### A masked pattern was here ####
                          name default.outputtbl1_n15
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1_n15
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: int), _col1 (type: int)
                    outputColumnNames: key, cnt
                    Statistics: Num rows: 1 Data size: 184 Basic stats: PARTIAL Column stats: NONE
                    Group By Operator
                      aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 516 Basic stats: PARTIAL Column stats: NONE
                      Reduce Output Operator
                        bucketingVersion: 2
                        null sort order: 
                        numBuckets: -1
                        sort order: 
                        Statistics: Num rows: 1 Data size: 516 Basic stats: PARTIAL Column stats: NONE
                        tag: -1
                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
                        auto parallelism: false
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 516 Basic stats: PARTIAL Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 516 Basic stats: PARTIAL Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 516 Basic stats: PARTIAL Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:bigint:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n15
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n15

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n15
          Is Table Level Stats: true

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '2' GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n61
PREHOOK: Input: default@t1_n61@ds=2
PREHOOK: Output: default@outputtbl1_n15
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n15
SELECT key, count(1) FROM T1_n61 where ds = '2' GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n61
POSTHOOK: Input: default@t1_n61@ds=2
POSTHOOK: Output: default@outputtbl1_n15
POSTHOOK: Lineage: outputtbl1_n15.cnt EXPRESSION [(t1_n61)t1_n61.null, ]
POSTHOOK: Lineage: outputtbl1_n15.key EXPRESSION [(t1_n61)t1_n61.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n15
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n15
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n15
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n15
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
