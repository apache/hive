PREHOOK: query: CREATE TABLE source(id string, id2 string) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@source
POSTHOOK: query: CREATE TABLE source(id string, id2 string) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@source
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/2048.orc' overwrite into table source
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@source
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/2048.orc' overwrite into table source
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@source
PREHOOK: query: explain
select sum(murmur_hash(id, id2)) from source
PREHOOK: type: QUERY
PREHOOK: Input: default@source
#### A masked pattern was here ####
POSTHOOK: query: explain
select sum(murmur_hash(id, id2)) from source
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: source
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: hash(id,id2) (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: sum(_col0)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(murmur_hash(id, id2)) from source
PREHOOK: type: QUERY
PREHOOK: Input: default@source
#### A masked pattern was here ####
POSTHOOK: query: select sum(murmur_hash(id, id2)) from source
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
#### A masked pattern was here ####
59067566789
PREHOOK: query: explain
select sum(murmur_hash(cast(id as BIGINT), cast(id2 as BIGINT))) from source
PREHOOK: type: QUERY
PREHOOK: Input: default@source
#### A masked pattern was here ####
POSTHOOK: query: explain
select sum(murmur_hash(cast(id as BIGINT), cast(id2 as BIGINT))) from source
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: source
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: hash(UDFToLong(id),UDFToLong(id2)) (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: sum(_col0)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(murmur_hash(cast(id as BIGINT), cast(id2 as BIGINT))) from source
PREHOOK: type: QUERY
PREHOOK: Input: default@source
#### A masked pattern was here ####
POSTHOOK: query: select sum(murmur_hash(cast(id as BIGINT), cast(id2 as BIGINT))) from source
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
#### A masked pattern was here ####
-14637515591
PREHOOK: query: explain
select sum(murmur_hash(id, cast(id2 as BIGINT))) from source
PREHOOK: type: QUERY
PREHOOK: Input: default@source
#### A masked pattern was here ####
POSTHOOK: query: explain
select sum(murmur_hash(id, cast(id2 as BIGINT))) from source
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: source
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: hash(id,UDFToLong(id2)) (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: sum(_col0)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(murmur_hash(id, cast(id2 as BIGINT))) from source
PREHOOK: type: QUERY
PREHOOK: Input: default@source
#### A masked pattern was here ####
POSTHOOK: query: select sum(murmur_hash(id, cast(id2 as BIGINT))) from source
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
#### A masked pattern was here ####
63601589819
PREHOOK: query: explain
select sum(murmur_hash(id2, cast(id as BIGINT))) from source
PREHOOK: type: QUERY
PREHOOK: Input: default@source
#### A masked pattern was here ####
POSTHOOK: query: explain
select sum(murmur_hash(id2, cast(id as BIGINT))) from source
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: source
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: hash(id2,UDFToLong(id)) (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: sum(_col0)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 376 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(murmur_hash(id2, cast(id as BIGINT))) from source
PREHOOK: type: QUERY
PREHOOK: Input: default@source
#### A masked pattern was here ####
POSTHOOK: query: select sum(murmur_hash(id2, cast(id as BIGINT))) from source
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
#### A masked pattern was here ####
-18550462563
