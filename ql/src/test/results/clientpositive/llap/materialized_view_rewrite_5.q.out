PREHOOK: query: create table emps_n2 (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@emps_n2
POSTHOOK: query: create table emps_n2 (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emps_n2
PREHOOK: query: insert into emps_n2 values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (110, 10, 'Bill', 10000, 250)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps_n2
POSTHOOK: query: insert into emps_n2 values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (110, 10, 'Bill', 10000, 250)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps_n2
POSTHOOK: Lineage: emps_n2.commission SCRIPT []
POSTHOOK: Lineage: emps_n2.deptno SCRIPT []
POSTHOOK: Lineage: emps_n2.empid SCRIPT []
POSTHOOK: Lineage: emps_n2.name SCRIPT []
POSTHOOK: Lineage: emps_n2.salary SCRIPT []
PREHOOK: query: analyze table emps_n2 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@emps_n2
PREHOOK: Output: default@emps_n2
#### A masked pattern was here ####
POSTHOOK: query: analyze table emps_n2 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: default@emps_n2
#### A masked pattern was here ####
PREHOOK: query: create table depts_n1 (
  deptno int,
  name varchar(256),
  locationid int)
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@depts_n1
POSTHOOK: query: create table depts_n1 (
  deptno int,
  name varchar(256),
  locationid int)
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@depts_n1
PREHOOK: query: insert into depts_n1 values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@depts_n1
POSTHOOK: query: insert into depts_n1 values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@depts_n1
POSTHOOK: Lineage: depts_n1.deptno SCRIPT []
POSTHOOK: Lineage: depts_n1.locationid SCRIPT []
POSTHOOK: Lineage: depts_n1.name SCRIPT []
PREHOOK: query: analyze table depts_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@depts_n1
PREHOOK: Output: default@depts_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table depts_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@depts_n1
POSTHOOK: Output: default@depts_n1
#### A masked pattern was here ####
PREHOOK: query: create table dependents_n1 (
  empid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dependents_n1
POSTHOOK: query: create table dependents_n1 (
  empid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dependents_n1
PREHOOK: query: insert into dependents_n1 values (10, 'Michael'), (10, 'Jane')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@dependents_n1
POSTHOOK: query: insert into dependents_n1 values (10, 'Michael'), (10, 'Jane')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@dependents_n1
POSTHOOK: Lineage: dependents_n1.empid SCRIPT []
POSTHOOK: Lineage: dependents_n1.name SCRIPT []
PREHOOK: query: analyze table dependents_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@dependents_n1
PREHOOK: Output: default@dependents_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table dependents_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Output: default@dependents_n1
#### A masked pattern was here ####
PREHOOK: query: create table locations_n1 (
  locationid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@locations_n1
POSTHOOK: query: create table locations_n1 (
  locationid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@locations_n1
PREHOOK: query: insert into locations_n1 values (10, 'San Francisco'), (10, 'San Diego')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@locations_n1
POSTHOOK: query: insert into locations_n1 values (10, 'San Francisco'), (10, 'San Diego')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@locations_n1
POSTHOOK: Lineage: locations_n1.locationid SCRIPT []
POSTHOOK: Lineage: locations_n1.name SCRIPT []
PREHOOK: query: analyze table locations_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@locations_n1
PREHOOK: Output: default@locations_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table locations_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@locations_n1
POSTHOOK: Output: default@locations_n1
#### A masked pattern was here ####
PREHOOK: query: alter table emps_n2 add constraint pk1 primary key (empid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table emps_n2 add constraint pk1 primary key (empid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table depts_n1 add constraint pk2 primary key (deptno) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table depts_n1 add constraint pk2 primary key (deptno) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table dependents_n1 add constraint pk3 primary key (empid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table dependents_n1 add constraint pk3 primary key (empid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table locations_n1 add constraint pk4 primary key (locationid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table locations_n1 add constraint pk4 primary key (locationid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table emps_n2 add constraint fk1 foreign key (deptno) references depts_n1(deptno) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table emps_n2 add constraint fk1 foreign key (deptno) references depts_n1(deptno) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table depts_n1 add constraint fk2 foreign key (locationid) references locations_n1(locationid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table depts_n1 add constraint fk2 foreign key (locationid) references locations_n1(locationid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table emps_n2 change column deptno deptno int constraint nn1 not null disable novalidate rely
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@emps_n2
PREHOOK: Output: default@emps_n2
POSTHOOK: query: alter table emps_n2 change column deptno deptno int constraint nn1 not null disable novalidate rely
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: default@emps_n2
PREHOOK: query: alter table depts_n1 change column locationid locationid int constraint nn2 not null disable novalidate rely
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@depts_n1
PREHOOK: Output: default@depts_n1
POSTHOOK: query: alter table depts_n1 change column locationid locationid int constraint nn2 not null disable novalidate rely
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@depts_n1
POSTHOOK: Output: default@depts_n1
PREHOOK: query: create materialized view mv1_n1 as
select name, deptno, salary from emps_n2 where deptno > 15 group by name, deptno, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select name, deptno, salary from emps_n2 where deptno > 15 group by name, deptno, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select name from emps_n2 where deptno >= 20 group by name
PREHOOK: type: QUERY
POSTHOOK: query: explain
select name from emps_n2 where deptno >= 20 group by name
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv1_n1
                  Statistics: Num rows: 1 Data size: 92 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (deptno >= 20) (type: boolean)
                    Statistics: Num rows: 1 Data size: 92 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: name (type: varchar(256))
                      outputColumnNames: name
                      Statistics: Num rows: 1 Data size: 92 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: name (type: varchar(256))
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: varchar(256))
                          sort order: +
                          Map-reduce partition columns: _col0 (type: varchar(256))
                          Statistics: Num rows: 1 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: varchar(256))
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select name from emps_n2 where deptno >= 20 group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select name from emps_n2 where deptno >= 20 group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
Eric
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: create materialized view mv1_n1 as
select name, deptno, salary, count(*) as c, sum(empid) as s
from emps_n2 where deptno >= 15 group by name, deptno, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select name, deptno, salary, count(*) as c, sum(empid) as s
from emps_n2 where deptno >= 15 group by name, deptno, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select name, sum(empid) as s
from emps_n2 where deptno > 15 group by name
PREHOOK: type: QUERY
POSTHOOK: query: explain
select name, sum(empid) as s
from emps_n2 where deptno > 15 group by name
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv1_n1
                  Statistics: Num rows: 1 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (deptno > 15) (type: boolean)
                    Statistics: Num rows: 1 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: name (type: varchar(256)), s (type: bigint)
                      outputColumnNames: name, s
                      Statistics: Num rows: 1 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: sum(s)
                        keys: name (type: varchar(256))
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 96 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: varchar(256))
                          sort order: +
                          Map-reduce partition columns: _col0 (type: varchar(256))
                          Statistics: Num rows: 1 Data size: 96 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: varchar(256))
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 96 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 96 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select name, sum(empid) as s
from emps_n2 where deptno > 15 group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select name, sum(empid) as s
from emps_n2 where deptno > 15 group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
Eric	200
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: create materialized view mv1_n1 as
select depts_n1.deptno, dependents_n1.empid
from depts_n1
join dependents_n1 on (depts_n1.name = dependents_n1.name)
join locations_n1 on (locations_n1.name = dependents_n1.name)
join emps_n2 on (emps_n2.deptno = depts_n1.deptno)
where depts_n1.deptno > 10 and depts_n1.deptno < 20
group by depts_n1.deptno, dependents_n1.empid
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@locations_n1
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select depts_n1.deptno, dependents_n1.empid
from depts_n1
join dependents_n1 on (depts_n1.name = dependents_n1.name)
join locations_n1 on (locations_n1.name = dependents_n1.name)
join emps_n2 on (emps_n2.deptno = depts_n1.deptno)
where depts_n1.deptno > 10 and depts_n1.deptno < 20
group by depts_n1.deptno, dependents_n1.empid
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@locations_n1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select dependents_n1.empid
from depts_n1
join dependents_n1 on (depts_n1.name = dependents_n1.name)
join locations_n1 on (locations_n1.name = dependents_n1.name)
join emps_n2 on (emps_n2.deptno = depts_n1.deptno)
where depts_n1.deptno > 11 and depts_n1.deptno < 19
group by dependents_n1.empid
PREHOOK: type: QUERY
POSTHOOK: query: explain
select dependents_n1.empid
from depts_n1
join dependents_n1 on (depts_n1.name = dependents_n1.name)
join locations_n1 on (locations_n1.name = dependents_n1.name)
join emps_n2 on (emps_n2.deptno = depts_n1.deptno)
where depts_n1.deptno > 11 and depts_n1.deptno < 19
group by dependents_n1.empid
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv1_n1
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((deptno < 19) and (deptno > 11)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: empid (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: _col0 (type: int)
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select dependents_n1.empid
from depts_n1
join dependents_n1 on (depts_n1.name = dependents_n1.name)
join locations_n1 on (locations_n1.name = dependents_n1.name)
join emps_n2 on (emps_n2.deptno = depts_n1.deptno)
where depts_n1.deptno > 11 and depts_n1.deptno < 19
group by dependents_n1.empid
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@locations_n1
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select dependents_n1.empid
from depts_n1
join dependents_n1 on (depts_n1.name = dependents_n1.name)
join locations_n1 on (locations_n1.name = dependents_n1.name)
join emps_n2 on (emps_n2.deptno = depts_n1.deptno)
where depts_n1.deptno > 11 and depts_n1.deptno < 19
group by dependents_n1.empid
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@locations_n1
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: create materialized view mv1_n1 as
select empid, depts_n1.deptno, count(*) as c, sum(empid) as s
from emps_n2 join depts_n1 using (deptno)
group by empid, depts_n1.deptno
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select empid, depts_n1.deptno, count(*) as c, sum(empid) as s
from emps_n2 join depts_n1 using (deptno)
group by empid, depts_n1.deptno
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select deptno from emps_n2 group by deptno
PREHOOK: type: QUERY
POSTHOOK: query: explain
select deptno from emps_n2 group by deptno
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.mv1_n1
                  Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: deptno (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: _col0 (type: int)
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select deptno from emps_n2 group by deptno
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select deptno from emps_n2 group by deptno
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
10
20
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: create materialized view mv1_n1 as
select empid, depts_n1.deptno, count(*) as c, sum(empid) as s
from emps_n2 join depts_n1 using (deptno)
group by empid, depts_n1.deptno
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select empid, depts_n1.deptno, count(*) as c, sum(empid) as s
from emps_n2 join depts_n1 using (deptno)
group by empid, depts_n1.deptno
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select deptno, empid, sum(empid) as s, count(*) as c
from emps_n2 group by empid, deptno
PREHOOK: type: QUERY
POSTHOOK: query: explain
select deptno, empid, sum(empid) as s, count(*) as c
from emps_n2 group by empid, deptno
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n1
          Select Operator
            expressions: deptno (type: int), empid (type: int), s (type: bigint), c (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            ListSink

PREHOOK: query: select deptno, empid, sum(empid) as s, count(*) as c
from emps_n2 group by empid, deptno
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select deptno, empid, sum(empid) as s, count(*) as c
from emps_n2 group by empid, deptno
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
10	100	100	1
10	110	220	2
10	150	150	1
20	200	200	1
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: create materialized view mv1_n1 as
select dependents_n1.empid, emps_n2.deptno, sum(salary) as s
from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by dependents_n1.empid, emps_n2.deptno
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select dependents_n1.empid, emps_n2.deptno, sum(salary) as s
from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by dependents_n1.empid, emps_n2.deptno
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select dependents_n1.empid, sum(salary) as s
from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by dependents_n1.empid
PREHOOK: type: QUERY
POSTHOOK: query: explain
select dependents_n1.empid, sum(salary) as s
from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by dependents_n1.empid
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: depts_n1
                  Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: deptno (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: may be used (ACID table)
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: default.mv1_n1
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: empid (type: int), deptno (type: int), s (type: double)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col1 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col1 (type: int)
                      Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: int), _col2 (type: double)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col1 (type: int)
                outputColumnNames: _col1, _col3
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col3)
                  keys: _col1 (type: int)
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: int)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: double)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select dependents_n1.empid, sum(salary) as s
from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by dependents_n1.empid
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select dependents_n1.empid, sum(salary) as s
from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by dependents_n1.empid
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: create materialized view mv1_n1 as
select dependents_n1.empid, emps_n2.deptno, sum(salary) as s
from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by dependents_n1.empid, emps_n2.deptno
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select dependents_n1.empid, emps_n2.deptno, sum(salary) as s
from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by dependents_n1.empid, emps_n2.deptno
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select depts_n1.name, sum(salary) as s
from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by depts_n1.name
PREHOOK: type: QUERY
POSTHOOK: query: explain
select depts_n1.name, sum(salary) as s
from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by depts_n1.name
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: depts_n1
                  Statistics: Num rows: 3 Data size: 279 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: deptno (type: int), name (type: varchar(256))
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 3 Data size: 279 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 3 Data size: 279 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: varchar(256))
            Execution mode: llap
            LLAP IO: may be used (ACID table)
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: default.mv1_n1
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: deptno (type: int), s (type: double)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: double)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col1, _col3
                Statistics: Num rows: 1 Data size: 97 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col3)
                  keys: _col1 (type: varchar(256))
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 97 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: varchar(256))
                    sort order: +
                    Map-reduce partition columns: _col0 (type: varchar(256))
                    Statistics: Num rows: 1 Data size: 97 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: double)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: varchar(256))
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 97 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 97 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select depts_n1.name, sum(salary) as s
from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by depts_n1.name
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select depts_n1.name, sum(salary) as s
from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
group by depts_n1.name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: create materialized view mv1_n1 as
select a.empid deptno from
(select * from emps_n2 where empid = 1) a
join depts_n1 on (a.deptno = depts_n1.deptno)
join dependents_n1 on (a.empid = dependents_n1.empid)
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select a.empid deptno from
(select * from emps_n2 where empid = 1) a
join depts_n1 on (a.deptno = depts_n1.deptno)
join dependents_n1 on (a.empid = dependents_n1.empid)
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select a.empid from 
(select * from emps_n2 where empid = 1) a
join dependents_n1 on (a.empid = dependents_n1.empid)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select a.empid from 
(select * from emps_n2 where empid = 1) a
join dependents_n1 on (a.empid = dependents_n1.empid)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n1
          Select Operator
            expressions: 1 (type: int)
            outputColumnNames: _col0
            ListSink

PREHOOK: query: select a.empid from 
(select * from emps_n2 where empid = 1) a
join dependents_n1 on (a.empid = dependents_n1.empid)
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select a.empid from 
(select * from emps_n2 where empid = 1) a
join dependents_n1 on (a.empid = dependents_n1.empid)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: create materialized view mv1_n1 as
select a.empid, a.deptno from
(select * from emps_n2 where empid = 1) a
join depts_n1 on (a.deptno = depts_n1.deptno)
join dependents_n1 on (a.empid = dependents_n1.empid)
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select a.empid, a.deptno from
(select * from emps_n2 where empid = 1) a
join depts_n1 on (a.deptno = depts_n1.deptno)
join dependents_n1 on (a.empid = dependents_n1.empid)
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select a.empid from 
(select * from emps_n2 where empid = 1) a
join dependents_n1 on (a.empid = dependents_n1.empid)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select a.empid from 
(select * from emps_n2 where empid = 1) a
join dependents_n1 on (a.empid = dependents_n1.empid)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n1
          Select Operator
            expressions: 1 (type: int)
            outputColumnNames: _col0
            ListSink

PREHOOK: query: select a.empid from 
(select * from emps_n2 where empid = 1) a
join dependents_n1 on (a.empid = dependents_n1.empid)
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select a.empid from 
(select * from emps_n2 where empid = 1) a
join dependents_n1 on (a.empid = dependents_n1.empid)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: create materialized view mv1_n1 as
select empid deptno from
(select * from emps_n2 where empid = 1) a
join depts_n1 on (a.deptno = depts_n1.deptno)
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select empid deptno from
(select * from emps_n2 where empid = 1) a
join depts_n1 on (a.deptno = depts_n1.deptno)
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select empid from emps_n2 where empid = 1
PREHOOK: type: QUERY
POSTHOOK: query: explain
select empid from emps_n2 where empid = 1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n1
          Select Operator
            expressions: 1 (type: int)
            outputColumnNames: _col0
            ListSink

PREHOOK: query: select empid from emps_n2 where empid = 1
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select empid from emps_n2 where empid = 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: create materialized view mv1_n1 as
select emps_n2.empid, emps_n2.deptno from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select emps_n2.empid, emps_n2.deptno from emps_n2
join depts_n1 on (emps_n2.deptno = depts_n1.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
PREHOOK: type: QUERY
POSTHOOK: query: explain
select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n1
          Select Operator
            expressions: 1 (type: int)
            outputColumnNames: _col0
            ListSink

PREHOOK: query: select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
Warning: Shuffle Join MERGEJOIN[30][tables = [$hdt$_2, $hdt$_3, $hdt$_1, $hdt$_0]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: create materialized view mv1_n1 as
select emps_n2.empid, emps_n2.deptno from emps_n2
join depts_n1 a on (emps_n2.deptno=a.deptno)
join depts_n1 b on (emps_n2.deptno=b.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select emps_n2.empid, emps_n2.deptno from emps_n2
join depts_n1 a on (emps_n2.deptno=a.deptno)
join depts_n1 b on (emps_n2.deptno=b.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
PREHOOK: type: QUERY
POSTHOOK: query: explain
select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n1
          Select Operator
            expressions: 1 (type: int)
            outputColumnNames: _col0
            ListSink

PREHOOK: query: select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.empid = 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: create materialized view mv1_n1 as
select emps_n2.empid, emps_n2.deptno from emps_n2
join depts_n1 a on (emps_n2.deptno=a.deptno)
join depts_n1 b on (emps_n2.deptno=b.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.name = 'Sebastian'
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@depts_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: create materialized view mv1_n1 as
select emps_n2.empid, emps_n2.deptno from emps_n2
join depts_n1 a on (emps_n2.deptno=a.deptno)
join depts_n1 b on (emps_n2.deptno=b.deptno)
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.name = 'Sebastian'
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@depts_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n1
PREHOOK: query: analyze table mv1_n1 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1_n1 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: explain
select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.name = 'Sebastian'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.name = 'Sebastian'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n1
          Select Operator
            expressions: empid (type: int)
            outputColumnNames: _col0
            ListSink

PREHOOK: query: select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.name = 'Sebastian'
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents_n1
PREHOOK: Input: default@emps_n2
PREHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
POSTHOOK: query: select emps_n2.empid from emps_n2
join dependents_n1 on (emps_n2.empid = dependents_n1.empid)
where emps_n2.name = 'Sebastian'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents_n1
POSTHOOK: Input: default@emps_n2
POSTHOOK: Input: default@mv1_n1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1_n1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n1
PREHOOK: Output: default@mv1_n1
POSTHOOK: query: drop materialized view mv1_n1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n1
POSTHOOK: Output: default@mv1_n1
