PREHOOK: query: with tempDataset as (
select 10 as account_id, cast(23.79 as double) interest_paid
union all select 10, 23.79
union all select 10, 23.79
union all select 11, 64.34
union all select 11, 64.34
union all select 11, 64.34
)
select account_id, STDDEV(interest_paid) as sdev, variance(interest_paid) as vari from tempDataset group by account_id
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: with tempDataset as (
select 10 as account_id, cast(23.79 as double) interest_paid
union all select 10, 23.79
union all select 10, 23.79
union all select 11, 64.34
union all select 11, 64.34
union all select 11, 64.34
)
select account_id, STDDEV(interest_paid) as sdev, variance(interest_paid) as vari from tempDataset group by account_id
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
10	0.0	0.0
11	0.0	0.0
PREHOOK: query: create table cbo_test (key string, v1 double, v2 float, v3 decimal(30,2))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@cbo_test
POSTHOOK: query: create table cbo_test (key string, v1 double, v2 float, v3 decimal(30,2))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cbo_test
PREHOOK: query: insert into cbo_test values ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cbo_test
POSTHOOK: query: insert into cbo_test values ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69), ("001400000000000000000006375905", 10230.72, 10230.72, 10230.69)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cbo_test
POSTHOOK: Lineage: cbo_test.key SCRIPT []
POSTHOOK: Lineage: cbo_test.v1 SCRIPT []
POSTHOOK: Lineage: cbo_test.v2 SCRIPT []
POSTHOOK: Lineage: cbo_test.v3 SCRIPT []
PREHOOK: query: explain select stddev(v1), stddev(v2), stddev(v3) from cbo_test
PREHOOK: type: QUERY
PREHOOK: Input: default@cbo_test
#### A masked pattern was here ####
POSTHOOK: query: explain select stddev(v1), stddev(v2), stddev(v3) from cbo_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cbo_test
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1
            Map Operator Tree:
                TableScan
                  alias: cbo_test
                  Statistics: Num rows: 6 Data size: 744 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: v1 (type: double), v2 (type: float), v3 (type: decimal(30,2)), UDFToDouble(v2) (type: double), (UDFToDouble(v2) * UDFToDouble(v2)) (type: double)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4
                    Statistics: Num rows: 6 Data size: 744 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: stddev_pop(_col0), sum(_col4), sum(_col3), count(_col1), stddev_pop(_col2)
                      minReductionHashAggr: 0.8333333
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order:
                        sort order:
                        Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: struct<count:bigint,sum:double,variance:double>), _col1 (type: double), _col2 (type: double), _col3 (type: bigint), _col4 (type: struct<count:bigint,sum:double,variance:double>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: stddev_pop(VALUE._col0), sum(VALUE._col1), sum(VALUE._col2), count(VALUE._col3), stddev_pop(VALUE._col4)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: double), power(((_col1 - ((_col2 * _col2) / _col3)) / _col3), 0.5) (type: double), _col4 (type: double)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select stddev(v1), stddev(v2), stddev(v3) from cbo_test
PREHOOK: type: QUERY
PREHOOK: Input: default@cbo_test
#### A masked pattern was here ####
POSTHOOK: query: select stddev(v1), stddev(v2), stddev(v3) from cbo_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cbo_test
#### A masked pattern was here ####
5.42317860890711E-13	0.0	5.42317860890711E-13
PREHOOK: query: explain select stddev(v1), stddev(v2), stddev(v3) from cbo_test
PREHOOK: type: QUERY
PREHOOK: Input: default@cbo_test
#### A masked pattern was here ####
POSTHOOK: query: explain select stddev(v1), stddev(v2), stddev(v3) from cbo_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cbo_test
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1
            Map Operator Tree:
                TableScan
                  alias: cbo_test
                  Statistics: Num rows: 6 Data size: 744 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: v1 (type: double), v2 (type: float), v3 (type: decimal(30,2))
                    outputColumnNames: v1, v2, v3
                    Statistics: Num rows: 6 Data size: 744 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: stddev(v1), stddev(v2), stddev(v3)
                      minReductionHashAggr: 0.8333333
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order:
                        sort order:
                        Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: struct<count:bigint,sum:double,variance:double>), _col1 (type: struct<count:bigint,sum:double,variance:double>), _col2 (type: struct<count:bigint,sum:double,variance:double>)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: stddev(VALUE._col0), stddev(VALUE._col1), stddev(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select stddev(v1), stddev(v2), stddev(v3) from cbo_test
PREHOOK: type: QUERY
PREHOOK: Input: default@cbo_test
#### A masked pattern was here ####
POSTHOOK: query: select stddev(v1), stddev(v2), stddev(v3) from cbo_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cbo_test
#### A masked pattern was here ####
5.42317860890711E-13	0.0	5.42317860890711E-13