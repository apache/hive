PREHOOK: query: CREATE TABLE dest_j1_n25(key STRING, value STRING, val2 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest_j1_n25
POSTHOOK: query: CREATE TABLE dest_j1_n25(key STRING, value STRING, val2 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest_j1_n25
PREHOOK: query: CREATE TABLE ss_n1(k1 STRING,v1 STRING,k2 STRING,v2 STRING,k3 STRING,v3 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@ss_n1
POSTHOOK: query: CREATE TABLE ss_n1(k1 STRING,v1 STRING,k2 STRING,v2 STRING,k3 STRING,v3 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@ss_n1
PREHOOK: query: CREATE TABLE sr(k1 STRING,v1 STRING,k2 STRING,v2 STRING,k3 STRING,v3 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sr
POSTHOOK: query: CREATE TABLE sr(k1 STRING,v1 STRING,k2 STRING,v2 STRING,k3 STRING,v3 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sr
PREHOOK: query: CREATE TABLE cs(k1 STRING,v1 STRING,k2 STRING,v2 STRING,k3 STRING,v3 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@cs
POSTHOOK: query: CREATE TABLE cs(k1 STRING,v1 STRING,k2 STRING,v2 STRING,k3 STRING,v3 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cs
PREHOOK: query: INSERT OVERWRITE TABLE ss_n1
SELECT x.key,x.value,y.key,y.value,z.key,z.value
FROM src1 x 
JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Output: default@ss_n1
POSTHOOK: query: INSERT OVERWRITE TABLE ss_n1
SELECT x.key,x.value,y.key,y.value,z.key,z.value
FROM src1 x 
JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Output: default@ss_n1
POSTHOOK: Lineage: ss_n1.k1 SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: ss_n1.k2 SIMPLE [(src)y.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: ss_n1.k3 SIMPLE [(srcpart)z.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: ss_n1.v1 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: ss_n1.v2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: ss_n1.v3 SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: INSERT OVERWRITE TABLE sr
SELECT x.key,x.value,y.key,y.value,z.key,z.value
FROM src1 x 
JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=12)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@sr
POSTHOOK: query: INSERT OVERWRITE TABLE sr
SELECT x.key,x.value,y.key,y.value,z.key,z.value
FROM src1 x 
JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=12)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@sr
POSTHOOK: Lineage: sr.k1 SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: sr.k2 SIMPLE [(src)y.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: sr.k3 SIMPLE [(srcpart)z.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: sr.v1 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: sr.v2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: sr.v3 SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: INSERT OVERWRITE TABLE cs
SELECT x.key,x.value,y.key,y.value,z.key,z.value
FROM src1 x 
JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08')
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Output: default@cs
POSTHOOK: query: INSERT OVERWRITE TABLE cs
SELECT x.key,x.value,y.key,y.value,z.key,z.value
FROM src1 x 
JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Output: default@cs
POSTHOOK: Lineage: cs.k1 SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: cs.k2 SIMPLE [(src)y.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: cs.k3 SIMPLE [(srcpart)z.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: cs.v1 SIMPLE [(src1)x.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: cs.v2 SIMPLE [(src)y.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: cs.v3 SIMPLE [(srcpart)z.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: ANALYZE TABLE ss_n1 COMPUTE STATISTICS
PREHOOK: type: QUERY
PREHOOK: Input: default@ss_n1
PREHOOK: Output: default@ss_n1
POSTHOOK: query: ANALYZE TABLE ss_n1 COMPUTE STATISTICS
POSTHOOK: type: QUERY
POSTHOOK: Input: default@ss_n1
POSTHOOK: Output: default@ss_n1
PREHOOK: query: ANALYZE TABLE ss_n1 COMPUTE STATISTICS FOR COLUMNS k1,v1,k2,v2,k3,v3
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@ss_n1
PREHOOK: Output: default@ss_n1
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: ANALYZE TABLE ss_n1 COMPUTE STATISTICS FOR COLUMNS k1,v1,k2,v2,k3,v3
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@ss_n1
POSTHOOK: Output: default@ss_n1
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: ANALYZE TABLE sr COMPUTE STATISTICS
PREHOOK: type: QUERY
PREHOOK: Input: default@sr
PREHOOK: Output: default@sr
POSTHOOK: query: ANALYZE TABLE sr COMPUTE STATISTICS
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sr
POSTHOOK: Output: default@sr
PREHOOK: query: ANALYZE TABLE sr COMPUTE STATISTICS FOR COLUMNS k1,v1,k2,v2,k3,v3
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@sr
PREHOOK: Output: default@sr
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: ANALYZE TABLE sr COMPUTE STATISTICS FOR COLUMNS k1,v1,k2,v2,k3,v3
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@sr
POSTHOOK: Output: default@sr
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: ANALYZE TABLE cs COMPUTE STATISTICS
PREHOOK: type: QUERY
PREHOOK: Input: default@cs
PREHOOK: Output: default@cs
POSTHOOK: query: ANALYZE TABLE cs COMPUTE STATISTICS
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cs
POSTHOOK: Output: default@cs
PREHOOK: query: ANALYZE TABLE cs COMPUTE STATISTICS FOR COLUMNS k1,v1,k2,v2,k3,v3
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@cs
PREHOOK: Output: default@cs
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: ANALYZE TABLE cs COMPUTE STATISTICS FOR COLUMNS k1,v1,k2,v2,k3,v3
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@cs
POSTHOOK: Output: default@cs
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: EXPLAIN
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 3 <- Map 5 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 3 llap
      File Output Operator [FS_16]
        Select Operator [SEL_15] (rows=63 width=268)
          Output:["_col0","_col1","_col2"]
          Merge Join Operator [MERGEJOIN_26] (rows=63 width=268)
            Conds:RS_12._col3=RS_35._col0(Inner),Output:["_col1","_col2","_col4"]
          <-Map 5 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_35]
              PartitionCols:_col0
              Select Operator [SEL_34] (rows=500 width=369)
                Output:["_col0"]
                Filter Operator [FIL_33] (rows=500 width=91)
                  predicate:value is not null
                  TableScan [TS_6] (rows=500 width=91)
                    default@srcpart,z,Tbl:COMPLETE,Col:COMPLETE,Output:["value"]
          <-Reducer 2 [SIMPLE_EDGE] llap
            SHUFFLE [RS_12]
              PartitionCols:_col3
              Merge Join Operator [MERGEJOIN_25] (rows=39 width=266)
                Conds:RS_29._col0=RS_32._col0(Inner),Output:["_col1","_col2","_col3"]
              <-Map 1 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_29]
                  PartitionCols:_col0
                  Select Operator [SEL_28] (rows=500 width=178)
                    Output:["_col0","_col1"]
                    Filter Operator [FIL_27] (rows=500 width=178)
                      predicate:key is not null
                      TableScan [TS_0] (rows=500 width=178)
                        default@src,y,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
              <-Map 4 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_32]
                  PartitionCols:_col0
                  Select Operator [SEL_31] (rows=25 width=175)
                    Output:["_col0","_col1"]
                    Filter Operator [FIL_30] (rows=25 width=175)
                      predicate:(key is not null and value is not null)
                      TableScan [TS_3] (rows=25 width=175)
                        default@src1,x,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]

PREHOOK: query: EXPLAIN
select 
ss_n1.k1,sr.k2,cs.k3,count(ss_n1.v1),count(sr.v2),count(cs.v3)
FROM 
ss_n1,sr,cs,src d1,src d2,src d3,src1,srcpart
where
    ss_n1.k1 = d1.key 
and sr.k1 = d2.key 
and cs.k1 = d3.key 
and ss_n1.k2 = sr.k2
and ss_n1.k3 = sr.k3
and ss_n1.v1 = src1.value
and ss_n1.v2 = srcpart.value
and sr.v2 = cs.v2
and sr.v3 = cs.v3
and ss_n1.v3='ssv3'
and sr.v1='srv1'
and src1.key = 'src1key'
and srcpart.key = 'srcpartkey'
and d1.value = 'd1value'
and d2.value in ('2000Q1','2000Q2','2000Q3')
and d3.value in ('2000Q1','2000Q2','2000Q3')
group by 
ss_n1.k1,sr.k2,cs.k3
order by 
ss_n1.k1,sr.k2,cs.k3
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
select 
ss_n1.k1,sr.k2,cs.k3,count(ss_n1.v1),count(sr.v2),count(cs.v3)
FROM 
ss_n1,sr,cs,src d1,src d2,src d3,src1,srcpart
where
    ss_n1.k1 = d1.key 
and sr.k1 = d2.key 
and cs.k1 = d3.key 
and ss_n1.k2 = sr.k2
and ss_n1.k3 = sr.k3
and ss_n1.v1 = src1.value
and ss_n1.v2 = srcpart.value
and sr.v2 = cs.v2
and sr.v3 = cs.v3
and ss_n1.v3='ssv3'
and sr.v1='srv1'
and src1.key = 'src1key'
and srcpart.key = 'srcpartkey'
and d1.value = 'd1value'
and d2.value in ('2000Q1','2000Q2','2000Q3')
and d3.value in ('2000Q1','2000Q2','2000Q3')
group by 
ss_n1.k1,sr.k2,cs.k3
order by 
ss_n1.k1,sr.k2,cs.k3
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 11 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Map 15 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 3 <- Reducer 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 7 <- Map 12 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 8 <- Map 13 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Map 14 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized, llap
      File Output Operator [FS_126]
        Limit [LIM_125] (rows=12 width=285)
          Number of rows:100
          Select Operator [SEL_124] (rows=12 width=285)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_123]
              Group By Operator [GBY_122] (rows=12 width=285)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)","count(VALUE._col1)","count(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2
              <-Reducer 3 [SIMPLE_EDGE] llap
                SHUFFLE [RS_49]
                  PartitionCols:_col0, _col1, _col2
                  Group By Operator [GBY_48] (rows=12 width=285)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(_col11)","count(_col21)","count(_col3)"],keys:_col10, _col20, _col2
                    Merge Join Operator [MERGEJOIN_97] (rows=9275 width=534)
                      Conds:RS_44._col1, _col3=RS_45._col15, _col17(Inner),Output:["_col2","_col3","_col10","_col11","_col20","_col21"]
                    <-Reducer 10 [SIMPLE_EDGE] llap
                      SHUFFLE [RS_45]
                        PartitionCols:_col15, _col17
                        Select Operator [SEL_40] (rows=420 width=447)
                          Output:["_col4","_col5","_col14","_col15","_col17"]
                          Merge Join Operator [MERGEJOIN_96] (rows=420 width=447)
                            Conds:RS_37._col4, _col2=RS_38._col4, _col2(Inner),Output:["_col0","_col1","_col14","_col15","_col17"]
                          <-Reducer 11 [SIMPLE_EDGE] llap
                            SHUFFLE [RS_38]
                              PartitionCols:_col4, _col2
                              Merge Join Operator [MERGEJOIN_95] (rows=10 width=356)
                                Conds:RS_121._col0=RS_109._col0(Inner),Output:["_col2","_col3","_col4","_col5"]
                              <-Map 6 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_109]
                                  PartitionCols:_col0
                                  Select Operator [SEL_106] (rows=25 width=178)
                                    Output:["_col0"]
                                    Filter Operator [FIL_103] (rows=25 width=178)
                                      predicate:((value) IN ('2000Q1', '2000Q2', '2000Q3') and key is not null)
                                      TableScan [TS_3] (rows=500 width=178)
                                        default@src,d3,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                              <-Map 15 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_121]
                                  PartitionCols:_col0
                                  Select Operator [SEL_120] (rows=7 width=531)
                                    Output:["_col0","_col2","_col3","_col4","_col5"]
                                    Filter Operator [FIL_119] (rows=7 width=534)
                                      predicate:((v1 = 'srv1') and k1 is not null and k2 is not null and k3 is not null and v2 is not null and v3 is not null)
                                      TableScan [TS_18] (rows=85 width=534)
                                        default@sr,sr,Tbl:COMPLETE,Col:COMPLETE,Output:["k1","v1","k2","v2","k3","v3"]
                          <-Reducer 9 [SIMPLE_EDGE] llap
                            SHUFFLE [RS_37]
                              PartitionCols:_col4, _col2
                              Merge Join Operator [MERGEJOIN_94] (rows=42 width=352)
                                Conds:RS_34._col1=RS_118._col1(Inner),Output:["_col0","_col1","_col2","_col4"]
                              <-Map 14 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_118]
                                  PartitionCols:_col1
                                  Select Operator [SEL_117] (rows=2 width=180)
                                    Output:["_col1"]
                                    Filter Operator [FIL_116] (rows=2 width=175)
                                      predicate:((key = 'src1key') and value is not null)
                                      TableScan [TS_15] (rows=25 width=175)
                                        default@src1,src1,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                              <-Reducer 8 [SIMPLE_EDGE] llap
                                SHUFFLE [RS_34]
                                  PartitionCols:_col1
                                  Merge Join Operator [MERGEJOIN_93] (rows=42 width=352)
                                    Conds:RS_31._col3=RS_115._col1(Inner),Output:["_col0","_col1","_col2","_col4"]
                                  <-Map 13 [SIMPLE_EDGE] vectorized, llap
                                    SHUFFLE [RS_115]
                                      PartitionCols:_col1
                                      Select Operator [SEL_114] (rows=6 width=185)
                                        Output:["_col1"]
                                        Filter Operator [FIL_113] (rows=6 width=178)
                                          predicate:((key = 'srcpartkey') and value is not null)
                                          TableScan [TS_12] (rows=2000 width=178)
                                            default@srcpart,srcpart,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                                  <-Reducer 7 [SIMPLE_EDGE] llap
                                    SHUFFLE [RS_31]
                                      PartitionCols:_col3
                                      Merge Join Operator [MERGEJOIN_92] (rows=7 width=443)
                                        Conds:RS_112._col0=RS_108._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                                      <-Map 6 [SIMPLE_EDGE] vectorized, llap
                                        SHUFFLE [RS_108]
                                          PartitionCols:_col0
                                          Select Operator [SEL_105] (rows=2 width=178)
                                            Output:["_col0"]
                                            Filter Operator [FIL_102] (rows=2 width=178)
                                              predicate:((value = 'd1value') and key is not null)
                                               Please refer to the previous TableScan [TS_3]
                                      <-Map 12 [SIMPLE_EDGE] vectorized, llap
                                        SHUFFLE [RS_112]
                                          PartitionCols:_col0
                                          Select Operator [SEL_111] (rows=7 width=531)
                                            Output:["_col0","_col1","_col2","_col3","_col4"]
                                            Filter Operator [FIL_110] (rows=7 width=534)
                                              predicate:((v3 = 'ssv3') and k1 is not null and k2 is not null and k3 is not null and v1 is not null and v2 is not null)
                                              TableScan [TS_6] (rows=85 width=534)
                                                default@ss_n1,ss_n1,Tbl:COMPLETE,Col:COMPLETE,Output:["k1","v1","k2","v2","k3","v3"]
                    <-Reducer 2 [SIMPLE_EDGE] llap
                      SHUFFLE [RS_44]
                        PartitionCols:_col1, _col3
                        Merge Join Operator [MERGEJOIN_91] (rows=265 width=269)
                          Conds:RS_100._col0=RS_107._col0(Inner),Output:["_col1","_col2","_col3"]
                        <-Map 6 [SIMPLE_EDGE] vectorized, llap
                          SHUFFLE [RS_107]
                            PartitionCols:_col0
                            Select Operator [SEL_104] (rows=25 width=178)
                              Output:["_col0"]
                              Filter Operator [FIL_101] (rows=25 width=178)
                                predicate:((value) IN ('2000Q1', '2000Q2', '2000Q3') and key is not null)
                                 Please refer to the previous TableScan [TS_3]
                        <-Map 1 [SIMPLE_EDGE] vectorized, llap
                          SHUFFLE [RS_100]
                            PartitionCols:_col0
                            Select Operator [SEL_99] (rows=170 width=356)
                              Output:["_col0","_col1","_col2","_col3"]
                              Filter Operator [FIL_98] (rows=170 width=356)
                                predicate:(k1 is not null and v2 is not null and v3 is not null)
                                TableScan [TS_0] (rows=170 width=356)
                                  default@cs,cs,Tbl:COMPLETE,Col:COMPLETE,Output:["k1","v2","k3","v3"]

PREHOOK: query: explain
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 12 <- Union 10 (CONTAINS)
Map 13 <- Union 14 (CONTAINS)
Map 16 <- Union 14 (CONTAINS)
Map 9 <- Union 10 (CONTAINS)
Reducer 11 <- Union 10 (SIMPLE_EDGE)
Reducer 15 <- Union 14 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Reducer 11 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 5 <- Union 4 (SIMPLE_EDGE)
Reducer 6 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 7 <- Reducer 15 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE), Union 4 (CONTAINS)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5 vectorized, llap
      File Output Operator [FS_130]
        Group By Operator [GBY_129] (rows=33 width=177)
          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
        <-Union 4 [SIMPLE_EDGE]
          <-Reducer 3 [CONTAINS] llap
            Reduce Output Operator [RS_88]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_87] (rows=33 width=177)
                Output:["_col0","_col1"],keys:_col0, _col1
                Select Operator [SEL_85] (rows=33 width=177)
                  Output:["_col0","_col1"]
                  Merge Join Operator [MERGEJOIN_84] (rows=33 width=177)
                    Conds:RS_22._col2=RS_128._col1(Inner),Output:["_col1","_col4"]
                  <-Reducer 11 [SIMPLE_EDGE] vectorized, llap
                    SHUFFLE [RS_128]
                      PartitionCols:_col1
                      Select Operator [SEL_127] (rows=262 width=178)
                        Output:["_col1"]
                        Group By Operator [GBY_126] (rows=262 width=178)
                          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                        <-Union 10 [SIMPLE_EDGE]
                          <-Map 12 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_141]
                              PartitionCols:_col0, _col1
                              Group By Operator [GBY_140] (rows=262 width=178)
                                Output:["_col0","_col1"],keys:_col1, _col0
                                Select Operator [SEL_139] (rows=500 width=178)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_138] (rows=500 width=178)
                                    predicate:value is not null
                                    TableScan [TS_100] (rows=500 width=178)
                                      Output:["key","value"]
                          <-Map 9 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_137]
                              PartitionCols:_col0, _col1
                              Group By Operator [GBY_136] (rows=262 width=178)
                                Output:["_col0","_col1"],keys:_col1, _col0
                                Select Operator [SEL_135] (rows=25 width=175)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_134] (rows=25 width=175)
                                    predicate:value is not null
                                    TableScan [TS_94] (rows=25 width=175)
                                      Output:["key","value"]
                  <-Reducer 2 [SIMPLE_EDGE] llap
                    SHUFFLE [RS_22]
                      PartitionCols:_col2
                      Merge Join Operator [MERGEJOIN_80] (rows=39 width=175)
                        Conds:RS_120._col0=RS_124._col0(Inner),Output:["_col1","_col2"]
                      <-Map 1 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_120]
                          PartitionCols:_col0
                          Select Operator [SEL_119] (rows=500 width=87)
                            Output:["_col0"]
                            Filter Operator [FIL_118] (rows=500 width=87)
                              predicate:key is not null
                              TableScan [TS_0] (rows=500 width=87)
                                default@src,y,Tbl:COMPLETE,Col:COMPLETE,Output:["key"]
                      <-Map 8 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_124]
                          PartitionCols:_col0
                          Select Operator [SEL_123] (rows=25 width=175)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_122] (rows=25 width=175)
                              predicate:(key is not null and value is not null)
                              TableScan [TS_3] (rows=25 width=175)
                                default@src1,x,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
          <-Reducer 7 [CONTAINS] llap
            Reduce Output Operator [RS_93]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_92] (rows=33 width=177)
                Output:["_col0","_col1"],keys:_col0, _col1
                Select Operator [SEL_90] (rows=33 width=177)
                  Output:["_col0","_col1"]
                  Merge Join Operator [MERGEJOIN_89] (rows=33 width=177)
                    Conds:RS_48._col2=RS_133._col1(Inner),Output:["_col1","_col4"]
                  <-Reducer 15 [SIMPLE_EDGE] vectorized, llap
                    SHUFFLE [RS_133]
                      PartitionCols:_col1
                      Select Operator [SEL_132] (rows=262 width=178)
                        Output:["_col1"]
                        Group By Operator [GBY_131] (rows=262 width=178)
                          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                        <-Union 14 [SIMPLE_EDGE]
                          <-Map 13 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_145]
                              PartitionCols:_col0, _col1
                              Group By Operator [GBY_144] (rows=262 width=178)
                                Output:["_col0","_col1"],keys:_col1, _col0
                                Select Operator [SEL_143] (rows=25 width=175)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_142] (rows=25 width=175)
                                    predicate:value is not null
                                    TableScan [TS_106] (rows=25 width=175)
                                      Output:["key","value"]
                          <-Map 16 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_149]
                              PartitionCols:_col0, _col1
                              Group By Operator [GBY_148] (rows=262 width=178)
                                Output:["_col0","_col1"],keys:_col1, _col0
                                Select Operator [SEL_147] (rows=500 width=178)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_146] (rows=500 width=178)
                                    predicate:value is not null
                                    TableScan [TS_112] (rows=500 width=178)
                                      Output:["key","value"]
                  <-Reducer 6 [SIMPLE_EDGE] llap
                    SHUFFLE [RS_48]
                      PartitionCols:_col2
                      Merge Join Operator [MERGEJOIN_81] (rows=39 width=175)
                        Conds:RS_121._col0=RS_125._col0(Inner),Output:["_col1","_col2"]
                      <-Map 1 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_121]
                          PartitionCols:_col0
                           Please refer to the previous Select Operator [SEL_119]
                      <-Map 8 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_125]
                          PartitionCols:_col0
                           Please refer to the previous Select Operator [SEL_123]

PREHOOK: query: explain
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src union select key, value from src)z ON (x.value = z.value)
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src union select key, value from src)z ON (x.value = z.value)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 12 <- Union 13 (CONTAINS)
Map 15 <- Union 13 (CONTAINS)
Map 16 <- Union 17 (CONTAINS)
Map 21 <- Union 17 (CONTAINS)
Map 22 <- Union 19 (CONTAINS)
Map 23 <- Union 24 (CONTAINS)
Map 30 <- Union 24 (CONTAINS)
Map 31 <- Union 26 (CONTAINS)
Map 32 <- Union 28 (CONTAINS)
Reducer 10 <- Reducer 20 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 14 <- Union 13 (SIMPLE_EDGE)
Reducer 18 <- Union 17 (SIMPLE_EDGE), Union 19 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 11 (SIMPLE_EDGE)
Reducer 20 <- Union 19 (SIMPLE_EDGE)
Reducer 25 <- Union 24 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 27 <- Union 26 (SIMPLE_EDGE), Union 28 (CONTAINS)
Reducer 29 <- Union 28 (SIMPLE_EDGE)
Reducer 3 <- Reducer 14 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 5 <- Union 4 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 7 <- Union 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 2 (SIMPLE_EDGE), Reducer 29 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 9 <- Map 1 (SIMPLE_EDGE), Map 11 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 7 vectorized, llap
      File Output Operator [FS_268]
        Group By Operator [GBY_267] (rows=47 width=177)
          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
        <-Union 6 [SIMPLE_EDGE]
          <-Reducer 5 [CONTAINS] vectorized, llap
            Reduce Output Operator [RS_266]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_265] (rows=47 width=177)
                Output:["_col0","_col1"],keys:_col0, _col1
                Group By Operator [GBY_264] (rows=40 width=177)
                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                <-Union 4 [SIMPLE_EDGE]
                  <-Reducer 10 [CONTAINS] llap
                    Reduce Output Operator [RS_183]
                      PartitionCols:_col0, _col1
                      Group By Operator [GBY_182] (rows=40 width=177)
                        Output:["_col0","_col1"],keys:_col0, _col1
                        Select Operator [SEL_180] (rows=48 width=177)
                          Output:["_col0","_col1"]
                          Merge Join Operator [MERGEJOIN_179] (rows=48 width=177)
                            Conds:RS_58._col3=RS_274._col1(Inner),Output:["_col1","_col2"]
                          <-Reducer 20 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_274]
                              PartitionCols:_col1
                              Select Operator [SEL_273] (rows=381 width=178)
                                Output:["_col1"]
                                Group By Operator [GBY_272] (rows=381 width=178)
                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                <-Union 19 [SIMPLE_EDGE]
                                  <-Map 22 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_298]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_297] (rows=381 width=178)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_296] (rows=500 width=178)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_295] (rows=500 width=178)
                                            predicate:value is not null
                                            TableScan [TS_213] (rows=500 width=178)
                                              Output:["key","value"]
                                  <-Reducer 18 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_290]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_289] (rows=381 width=178)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_288] (rows=262 width=178)
                                          Output:["_col0","_col1"]
                                          Group By Operator [GBY_287] (rows=262 width=178)
                                            Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                          <-Union 17 [SIMPLE_EDGE]
                                            <-Map 16 [CONTAINS] vectorized, llap
                                              Reduce Output Operator [RS_286]
                                                PartitionCols:_col0, _col1
                                                Group By Operator [GBY_285] (rows=262 width=178)
                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                  Select Operator [SEL_284] (rows=25 width=175)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_283] (rows=25 width=175)
                                                      predicate:value is not null
                                                      TableScan [TS_196] (rows=25 width=175)
                                                        Output:["key","value"]
                                            <-Map 21 [CONTAINS] vectorized, llap
                                              Reduce Output Operator [RS_294]
                                                PartitionCols:_col0, _col1
                                                Group By Operator [GBY_293] (rows=262 width=178)
                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                  Select Operator [SEL_292] (rows=500 width=178)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_291] (rows=500 width=178)
                                                      predicate:value is not null
                                                      TableScan [TS_207] (rows=500 width=178)
                                                        Output:["key","value"]
                          <-Reducer 9 [SIMPLE_EDGE] llap
                            SHUFFLE [RS_58]
                              PartitionCols:_col3
                              Merge Join Operator [MERGEJOIN_160] (rows=39 width=266)
                                Conds:RS_256._col0=RS_260._col0(Inner),Output:["_col1","_col2","_col3"]
                              <-Map 1 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_256]
                                  PartitionCols:_col0
                                  Select Operator [SEL_254] (rows=500 width=178)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_253] (rows=500 width=178)
                                      predicate:key is not null
                                      TableScan [TS_0] (rows=500 width=178)
                                        default@src,y,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                              <-Map 11 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_260]
                                  PartitionCols:_col0
                                  Select Operator [SEL_258] (rows=25 width=175)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_257] (rows=25 width=175)
                                      predicate:(key is not null and value is not null)
                                      TableScan [TS_3] (rows=25 width=175)
                                        default@src1,x,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
                  <-Reducer 3 [CONTAINS] llap
                    Reduce Output Operator [RS_169]
                      PartitionCols:_col0, _col1
                      Group By Operator [GBY_168] (rows=40 width=177)
                        Output:["_col0","_col1"],keys:_col0, _col1
                        Select Operator [SEL_166] (rows=33 width=177)
                          Output:["_col0","_col1"]
                          Merge Join Operator [MERGEJOIN_165] (rows=33 width=177)
                            Conds:RS_22._col3=RS_263._col1(Inner),Output:["_col1","_col2"]
                          <-Reducer 2 [SIMPLE_EDGE] llap
                            SHUFFLE [RS_22]
                              PartitionCols:_col3
                              Merge Join Operator [MERGEJOIN_159] (rows=39 width=266)
                                Conds:RS_255._col0=RS_259._col0(Inner),Output:["_col1","_col2","_col3"]
                              <-Map 1 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_255]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_254]
                              <-Map 11 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_259]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_258]
                          <-Reducer 14 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_263]
                              PartitionCols:_col1
                              Select Operator [SEL_262] (rows=262 width=178)
                                Output:["_col1"]
                                Group By Operator [GBY_261] (rows=262 width=178)
                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                <-Union 13 [SIMPLE_EDGE]
                                  <-Map 12 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_278]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_277] (rows=262 width=178)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_276] (rows=25 width=175)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_275] (rows=25 width=175)
                                            predicate:value is not null
                                            TableScan [TS_184] (rows=25 width=175)
                                              Output:["key","value"]
                                  <-Map 15 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_282]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_281] (rows=262 width=178)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_280] (rows=500 width=178)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_279] (rows=500 width=178)
                                            predicate:value is not null
                                            TableScan [TS_190] (rows=500 width=178)
                                              Output:["key","value"]
          <-Reducer 8 [CONTAINS] llap
            Reduce Output Operator [RS_178]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_177] (rows=47 width=177)
                Output:["_col0","_col1"],keys:_col0, _col1
                Select Operator [SEL_175] (rows=55 width=177)
                  Output:["_col0","_col1"]
                  Merge Join Operator [MERGEJOIN_174] (rows=55 width=177)
                    Conds:RS_111._col3=RS_271._col1(Inner),Output:["_col1","_col2"]
                  <-Reducer 2 [SIMPLE_EDGE] llap
                    SHUFFLE [RS_111]
                      PartitionCols:_col3
                       Please refer to the previous Merge Join Operator [MERGEJOIN_159]
                  <-Reducer 29 [SIMPLE_EDGE] vectorized, llap
                    SHUFFLE [RS_271]
                      PartitionCols:_col1
                      Select Operator [SEL_270] (rows=440 width=178)
                        Output:["_col1"]
                        Group By Operator [GBY_269] (rows=440 width=178)
                          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                        <-Union 28 [SIMPLE_EDGE]
                          <-Map 32 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_322]
                              PartitionCols:_col0, _col1
                              Group By Operator [GBY_321] (rows=440 width=178)
                                Output:["_col0","_col1"],keys:_col1, _col0
                                Select Operator [SEL_320] (rows=500 width=178)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_319] (rows=500 width=178)
                                    predicate:value is not null
                                    TableScan [TS_247] (rows=500 width=178)
                                      Output:["key","value"]
                          <-Reducer 27 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_310]
                              PartitionCols:_col0, _col1
                              Group By Operator [GBY_309] (rows=440 width=178)
                                Output:["_col0","_col1"],keys:_col1, _col0
                                Select Operator [SEL_308] (rows=381 width=178)
                                  Output:["_col0","_col1"]
                                  Group By Operator [GBY_307] (rows=381 width=178)
                                    Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                  <-Union 26 [SIMPLE_EDGE]
                                    <-Map 31 [CONTAINS] vectorized, llap
                                      Reduce Output Operator [RS_318]
                                        PartitionCols:_col0, _col1
                                        Group By Operator [GBY_317] (rows=381 width=178)
                                          Output:["_col0","_col1"],keys:_col1, _col0
                                          Select Operator [SEL_316] (rows=500 width=178)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_315] (rows=500 width=178)
                                              predicate:value is not null
                                              TableScan [TS_241] (rows=500 width=178)
                                                Output:["key","value"]
                                    <-Reducer 25 [CONTAINS] vectorized, llap
                                      Reduce Output Operator [RS_306]
                                        PartitionCols:_col0, _col1
                                        Group By Operator [GBY_305] (rows=381 width=178)
                                          Output:["_col0","_col1"],keys:_col1, _col0
                                          Select Operator [SEL_304] (rows=262 width=178)
                                            Output:["_col0","_col1"]
                                            Group By Operator [GBY_303] (rows=262 width=178)
                                              Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                            <-Union 24 [SIMPLE_EDGE]
                                              <-Map 23 [CONTAINS] vectorized, llap
                                                Reduce Output Operator [RS_302]
                                                  PartitionCols:_col0, _col1
                                                  Group By Operator [GBY_301] (rows=262 width=178)
                                                    Output:["_col0","_col1"],keys:_col1, _col0
                                                    Select Operator [SEL_300] (rows=25 width=175)
                                                      Output:["_col0","_col1"]
                                                      Filter Operator [FIL_299] (rows=25 width=175)
                                                        predicate:value is not null
                                                        TableScan [TS_219] (rows=25 width=175)
                                                          Output:["key","value"]
                                              <-Map 30 [CONTAINS] vectorized, llap
                                                Reduce Output Operator [RS_314]
                                                  PartitionCols:_col0, _col1
                                                  Group By Operator [GBY_313] (rows=262 width=178)
                                                    Output:["_col0","_col1"],keys:_col1, _col0
                                                    Select Operator [SEL_312] (rows=500 width=178)
                                                      Output:["_col0","_col1"]
                                                      Filter Operator [FIL_311] (rows=500 width=178)
                                                        predicate:value is not null
                                                        TableScan [TS_235] (rows=500 width=178)
                                                          Output:["key","value"]

PREHOOK: query: EXPLAIN
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 2 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Map 1 vectorized, llap
      File Output Operator [FS_40]
        Select Operator [SEL_39] (rows=605 width=10)
          Output:["_col0","_col1","_col2"]
          Map Join Operator [MAPJOIN_38] (rows=605 width=10)
            Conds:MAPJOIN_37._col3=RS_34._col0(Inner),Output:["_col1","_col2","_col4"]
          <-Map 3 [BROADCAST_EDGE] vectorized, llap
            BROADCAST [RS_34]
              PartitionCols:_col0
              Select Operator [SEL_33] (rows=500 width=10)
                Output:["_col0"]
                Filter Operator [FIL_32] (rows=500 width=10)
                  predicate:value is not null
                  TableScan [TS_6] (rows=500 width=10)
                    default@srcpart,z,Tbl:COMPLETE,Col:NONE,Output:["value"]
          <-Map Join Operator [MAPJOIN_37] (rows=550 width=10)
              Conds:SEL_36._col0=RS_31._col0(Inner),Output:["_col1","_col2","_col3"]
            <-Map 2 [BROADCAST_EDGE] vectorized, llap
              BROADCAST [RS_31]
                PartitionCols:_col0
                Select Operator [SEL_30] (rows=25 width=7)
                  Output:["_col0","_col1"]
                  Filter Operator [FIL_29] (rows=25 width=7)
                    predicate:(key is not null and value is not null)
                    TableScan [TS_3] (rows=25 width=7)
                      default@src1,x,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
            <-Select Operator [SEL_36] (rows=500 width=10)
                Output:["_col0","_col1"]
                Filter Operator [FIL_35] (rows=500 width=10)
                  predicate:key is not null
                  TableScan [TS_0] (rows=500 width=10)
                    default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]

PREHOOK: query: EXPLAIN
select 
ss_n1.k1,sr.k2,cs.k3,count(ss_n1.v1),count(sr.v2),count(cs.v3)
FROM 
ss_n1,sr,cs,src d1,src d2,src d3,src1,srcpart
where
    ss_n1.k1 = d1.key 
and sr.k1 = d2.key 
and cs.k1 = d3.key 
and ss_n1.k2 = sr.k2
and ss_n1.k3 = sr.k3
and ss_n1.v1 = src1.value
and ss_n1.v2 = srcpart.value
and sr.v2 = cs.v2
and sr.v3 = cs.v3
and ss_n1.v3='ssv3'
and sr.v1='srv1'
and src1.key = 'src1key'
and srcpart.key = 'srcpartkey'
and d1.value = 'd1value'
and d2.value in ('2000Q1','2000Q2','2000Q3')
and d3.value in ('2000Q1','2000Q2','2000Q3')
group by 
ss_n1.k1,sr.k2,cs.k3
order by 
ss_n1.k1,sr.k2,cs.k3
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
select 
ss_n1.k1,sr.k2,cs.k3,count(ss_n1.v1),count(sr.v2),count(cs.v3)
FROM 
ss_n1,sr,cs,src d1,src d2,src d3,src1,srcpart
where
    ss_n1.k1 = d1.key 
and sr.k1 = d2.key 
and cs.k1 = d3.key 
and ss_n1.k2 = sr.k2
and ss_n1.k3 = sr.k3
and ss_n1.v1 = src1.value
and ss_n1.v2 = srcpart.value
and sr.v2 = cs.v2
and sr.v3 = cs.v3
and ss_n1.v3='ssv3'
and sr.v1='srv1'
and src1.key = 'src1key'
and srcpart.key = 'srcpartkey'
and d1.value = 'd1value'
and d2.value in ('2000Q1','2000Q2','2000Q3')
and d3.value in ('2000Q1','2000Q2','2000Q3')
group by 
ss_n1.k1,sr.k2,cs.k3
order by 
ss_n1.k1,sr.k2,cs.k3
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 10 <- Map 9 (BROADCAST_EDGE)
Map 2 <- Map 1 (BROADCAST_EDGE)
Map 4 <- Map 3 (BROADCAST_EDGE)
Map 5 <- Map 10 (BROADCAST_EDGE), Map 2 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE)
Reducer 6 <- Map 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized, llap
      File Output Operator [FS_142]
        Limit [LIM_141] (rows=100 width=10)
          Number of rows:100
          Select Operator [SEL_140] (rows=732 width=10)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 6 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_139]
              Group By Operator [GBY_138] (rows=732 width=10)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)","count(VALUE._col1)","count(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2
              <-Map 5 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_137]
                  PartitionCols:_col0, _col1, _col2
                  Group By Operator [GBY_136] (rows=1464 width=10)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(_col11)","count(_col21)","count(_col3)"],keys:_col10, _col20, _col2
                    Map Join Operator [MAPJOIN_135] (rows=1464 width=10)
                      Conds:RS_118._col1, _col3=SEL_134._col15, _col17(Inner),Output:["_col2","_col3","_col10","_col11","_col20","_col21"]
                    <-Map 2 [BROADCAST_EDGE] vectorized, llap
                      BROADCAST [RS_118]
                        PartitionCols:_col1, _col3
                        Map Join Operator [MAPJOIN_117] (rows=275 width=10)
                          Conds:RS_114._col0=SEL_116._col0(Inner),Output:["_col1","_col2","_col3"]
                        <-Map 1 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_114]
                            PartitionCols:_col0
                            Select Operator [SEL_113] (rows=170 width=34)
                              Output:["_col0","_col1","_col2","_col3"]
                              Filter Operator [FIL_112] (rows=170 width=34)
                                predicate:(k1 is not null and v2 is not null and v3 is not null)
                                TableScan [TS_0] (rows=170 width=34)
                                  default@cs,cs,Tbl:COMPLETE,Col:NONE,Output:["k1","v2","k3","v3"]
                        <-Select Operator [SEL_116] (rows=250 width=10)
                            Output:["_col0"]
                            Filter Operator [FIL_115] (rows=250 width=10)
                              predicate:((value) IN ('2000Q1', '2000Q2', '2000Q3') and key is not null)
                              TableScan [TS_3] (rows=500 width=10)
                                default@src,d3,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                    <-Select Operator [SEL_134] (rows=1331 width=10)
                        Output:["_col4","_col5","_col14","_col15","_col17"]
                        Map Join Operator [MAPJOIN_133] (rows=1331 width=10)
                          Conds:MAPJOIN_132._col4, _col2=RS_128._col4, _col2(Inner),Output:["_col0","_col1","_col14","_col15","_col17"]
                        <-Map 10 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_128]
                            PartitionCols:_col4, _col2
                            Map Join Operator [MAPJOIN_127] (rows=275 width=10)
                              Conds:RS_124._col0=SEL_126._col0(Inner),Output:["_col2","_col3","_col4","_col5"]
                            <-Map 9 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_124]
                                PartitionCols:_col0
                                Select Operator [SEL_123] (rows=42 width=34)
                                  Output:["_col0","_col2","_col3","_col4","_col5"]
                                  Filter Operator [FIL_122] (rows=42 width=34)
                                    predicate:((v1 = 'srv1') and k1 is not null and k2 is not null and k3 is not null and v2 is not null and v3 is not null)
                                    TableScan [TS_18] (rows=85 width=34)
                                      default@sr,sr,Tbl:COMPLETE,Col:NONE,Output:["k1","v1","k2","v2","k3","v3"]
                            <-Select Operator [SEL_126] (rows=250 width=10)
                                Output:["_col0"]
                                Filter Operator [FIL_125] (rows=250 width=10)
                                  predicate:((value) IN ('2000Q1', '2000Q2', '2000Q3') and key is not null)
                                  TableScan [TS_21] (rows=500 width=10)
                                    default@src,d2,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                        <-Map Join Operator [MAPJOIN_132] (rows=1210 width=10)
                            Conds:MAPJOIN_131._col1=RS_121._col1(Inner),Output:["_col0","_col1","_col2","_col4"]
                          <-Map 8 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_121]
                              PartitionCols:_col1
                              Select Operator [SEL_120] (rows=12 width=7)
                                Output:["_col1"]
                                Filter Operator [FIL_119] (rows=12 width=7)
                                  predicate:((key = 'src1key') and value is not null)
                                  TableScan [TS_15] (rows=25 width=7)
                                    default@src1,src1,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                          <-Map Join Operator [MAPJOIN_131] (rows=1100 width=10)
                              Conds:RS_111._col3=SEL_130._col1(Inner),Output:["_col0","_col1","_col2","_col4"]
                            <-Map 4 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_111]
                                PartitionCols:_col3
                                Map Join Operator [MAPJOIN_110] (rows=275 width=10)
                                  Conds:RS_107._col0=SEL_109._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                                <-Map 3 [BROADCAST_EDGE] vectorized, llap
                                  BROADCAST [RS_107]
                                    PartitionCols:_col0
                                    Select Operator [SEL_106] (rows=42 width=34)
                                      Output:["_col0","_col1","_col2","_col3","_col4"]
                                      Filter Operator [FIL_105] (rows=42 width=34)
                                        predicate:((v3 = 'ssv3') and k1 is not null and k2 is not null and k3 is not null and v1 is not null and v2 is not null)
                                        TableScan [TS_6] (rows=85 width=34)
                                          default@ss_n1,ss_n1,Tbl:COMPLETE,Col:NONE,Output:["k1","v1","k2","v2","k3","v3"]
                                <-Select Operator [SEL_109] (rows=250 width=10)
                                    Output:["_col0"]
                                    Filter Operator [FIL_108] (rows=250 width=10)
                                      predicate:((value = 'd1value') and key is not null)
                                      TableScan [TS_9] (rows=500 width=10)
                                        default@src,d1,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                            <-Select Operator [SEL_130] (rows=1000 width=10)
                                Output:["_col1"]
                                Filter Operator [FIL_129] (rows=1000 width=10)
                                  predicate:((key = 'srcpartkey') and value is not null)
                                  TableScan [TS_12] (rows=2000 width=10)
                                    default@srcpart,srcpart,Tbl:COMPLETE,Col:NONE,Output:["key","value"]

PREHOOK: query: explain
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, z.value, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 2 (BROADCAST_EDGE)
Map 10 <- Union 11 (CONTAINS)
Map 13 <- Union 11 (CONTAINS)
Map 3 <- Union 4 (CONTAINS)
Map 8 <- Union 4 (CONTAINS)
Map 9 <- Map 2 (BROADCAST_EDGE)
Reducer 12 <- Map 9 (BROADCAST_EDGE), Union 11 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 5 <- Map 1 (BROADCAST_EDGE), Union 4 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 7 <- Union 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 7 vectorized, llap
      File Output Operator [FS_147]
        Group By Operator [GBY_146] (rows=605 width=10)
          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
        <-Union 6 [SIMPLE_EDGE]
          <-Reducer 12 [CONTAINS] vectorized, llap
            Reduce Output Operator [RS_165]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_164] (rows=1210 width=10)
                Output:["_col0","_col1"],keys:_col0, _col1
                Select Operator [SEL_163] (rows=605 width=10)
                  Output:["_col0","_col1"]
                  Map Join Operator [MAPJOIN_162] (rows=605 width=10)
                    Conds:RS_159._col2=SEL_161._col1(Inner),Output:["_col1","_col4"]
                  <-Map 9 [BROADCAST_EDGE] vectorized, llap
                    BROADCAST [RS_159]
                      PartitionCols:_col2
                      Map Join Operator [MAPJOIN_158] (rows=550 width=10)
                        Conds:SEL_157._col0=RS_135._col0(Inner),Output:["_col1","_col2"]
                      <-Map 2 [BROADCAST_EDGE] vectorized, llap
                        BROADCAST [RS_135]
                          PartitionCols:_col0
                          Select Operator [SEL_133] (rows=25 width=7)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_132] (rows=25 width=7)
                              predicate:(key is not null and value is not null)
                              TableScan [TS_3] (rows=25 width=7)
                                default@src1,x,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                      <-Select Operator [SEL_157] (rows=500 width=10)
                          Output:["_col0"]
                          Filter Operator [FIL_156] (rows=500 width=10)
                            predicate:key is not null
                            TableScan [TS_26] (rows=500 width=10)
                              default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key"]
                  <-Select Operator [SEL_161] (rows=262 width=10)
                      Output:["_col1"]
                      Group By Operator [GBY_160] (rows=262 width=10)
                        Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                      <-Union 11 [SIMPLE_EDGE]
                        <-Map 10 [CONTAINS] vectorized, llap
                          Reduce Output Operator [RS_155]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_154] (rows=525 width=10)
                              Output:["_col0","_col1"],keys:_col1, _col0
                              Select Operator [SEL_153] (rows=25 width=7)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_152] (rows=25 width=7)
                                  predicate:value is not null
                                  TableScan [TS_108] (rows=25 width=7)
                                    Output:["key","value"]
                        <-Map 13 [CONTAINS] vectorized, llap
                          Reduce Output Operator [RS_169]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_168] (rows=525 width=10)
                              Output:["_col0","_col1"],keys:_col1, _col0
                              Select Operator [SEL_167] (rows=500 width=10)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_166] (rows=500 width=10)
                                  predicate:value is not null
                                  TableScan [TS_122] (rows=500 width=10)
                                    Output:["key","value"]
          <-Reducer 5 [CONTAINS] vectorized, llap
            Reduce Output Operator [RS_145]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_144] (rows=1210 width=10)
                Output:["_col0","_col1"],keys:_col0, _col1
                Select Operator [SEL_143] (rows=605 width=10)
                  Output:["_col0","_col1"]
                  Map Join Operator [MAPJOIN_142] (rows=605 width=10)
                    Conds:RS_139._col2=SEL_141._col1(Inner),Output:["_col1","_col4"]
                  <-Map 1 [BROADCAST_EDGE] vectorized, llap
                    BROADCAST [RS_139]
                      PartitionCols:_col2
                      Map Join Operator [MAPJOIN_138] (rows=550 width=10)
                        Conds:SEL_137._col0=RS_134._col0(Inner),Output:["_col1","_col2"]
                      <-Map 2 [BROADCAST_EDGE] vectorized, llap
                        BROADCAST [RS_134]
                          PartitionCols:_col0
                           Please refer to the previous Select Operator [SEL_133]
                      <-Select Operator [SEL_137] (rows=500 width=10)
                          Output:["_col0"]
                          Filter Operator [FIL_136] (rows=500 width=10)
                            predicate:key is not null
                            TableScan [TS_0] (rows=500 width=10)
                              default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key"]
                  <-Select Operator [SEL_141] (rows=262 width=10)
                      Output:["_col1"]
                      Group By Operator [GBY_140] (rows=262 width=10)
                        Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                      <-Union 4 [SIMPLE_EDGE]
                        <-Map 3 [CONTAINS] vectorized, llap
                          Reduce Output Operator [RS_131]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_130] (rows=525 width=10)
                              Output:["_col0","_col1"],keys:_col1, _col0
                              Select Operator [SEL_129] (rows=25 width=7)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_128] (rows=25 width=7)
                                  predicate:value is not null
                                  TableScan [TS_88] (rows=25 width=7)
                                    Output:["key","value"]
                        <-Map 8 [CONTAINS] vectorized, llap
                          Reduce Output Operator [RS_151]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_150] (rows=525 width=10)
                              Output:["_col0","_col1"],keys:_col1, _col0
                              Select Operator [SEL_149] (rows=500 width=10)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_148] (rows=500 width=10)
                                  predicate:value is not null
                                  TableScan [TS_102] (rows=500 width=10)
                                    Output:["key","value"]

PREHOOK: query: explain
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src union select key, value from src)z ON (x.value = z.value)
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src union select key, value from src)z ON (x.value = z.value)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 2 (BROADCAST_EDGE)
Map 10 <- Union 4 (CONTAINS)
Map 11 <- Map 2 (BROADCAST_EDGE)
Map 12 <- Union 13 (CONTAINS)
Map 17 <- Union 13 (CONTAINS)
Map 18 <- Union 15 (CONTAINS)
Map 19 <- Union 20 (CONTAINS)
Map 26 <- Union 20 (CONTAINS)
Map 27 <- Union 22 (CONTAINS)
Map 28 <- Union 24 (CONTAINS)
Map 3 <- Union 4 (CONTAINS)
Reducer 14 <- Union 13 (SIMPLE_EDGE), Union 15 (CONTAINS)
Reducer 16 <- Map 11 (BROADCAST_EDGE), Union 15 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 21 <- Union 20 (SIMPLE_EDGE), Union 22 (CONTAINS)
Reducer 23 <- Union 22 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 25 <- Map 1 (BROADCAST_EDGE), Union 24 (SIMPLE_EDGE), Union 8 (CONTAINS)
Reducer 5 <- Map 1 (BROADCAST_EDGE), Union 4 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 7 <- Union 6 (SIMPLE_EDGE), Union 8 (CONTAINS)
Reducer 9 <- Union 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 9 vectorized, llap
      File Output Operator [FS_290]
        Group By Operator [GBY_289] (rows=605 width=10)
          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
        <-Union 8 [SIMPLE_EDGE]
          <-Reducer 25 [CONTAINS] vectorized, llap
            Reduce Output Operator [RS_338]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_337] (rows=1210 width=10)
                Output:["_col0","_col1"],keys:_col0, _col1
                Select Operator [SEL_336] (rows=605 width=10)
                  Output:["_col0","_col1"]
                  Map Join Operator [MAPJOIN_335] (rows=605 width=10)
                    Conds:RS_279._col3=SEL_334._col1(Inner),Output:["_col1","_col2"]
                  <-Map 1 [BROADCAST_EDGE] vectorized, llap
                    BROADCAST [RS_279]
                      PartitionCols:_col3
                      Map Join Operator [MAPJOIN_277] (rows=550 width=10)
                        Conds:SEL_276._col0=RS_273._col0(Inner),Output:["_col1","_col2","_col3"]
                      <-Map 2 [BROADCAST_EDGE] vectorized, llap
                        BROADCAST [RS_273]
                          PartitionCols:_col0
                          Select Operator [SEL_272] (rows=25 width=7)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_271] (rows=25 width=7)
                              predicate:(key is not null and value is not null)
                              TableScan [TS_3] (rows=25 width=7)
                                default@src1,x,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                      <-Select Operator [SEL_276] (rows=500 width=10)
                          Output:["_col0","_col1"]
                          Filter Operator [FIL_275] (rows=500 width=10)
                            predicate:key is not null
                            TableScan [TS_0] (rows=500 width=10)
                              default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                  <-Select Operator [SEL_334] (rows=440 width=10)
                      Output:["_col1"]
                      Group By Operator [GBY_333] (rows=440 width=10)
                        Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                      <-Union 24 [SIMPLE_EDGE]
                        <-Map 28 [CONTAINS] vectorized, llap
                          Reduce Output Operator [RS_350]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_349] (rows=881 width=10)
                              Output:["_col0","_col1"],keys:_col1, _col0
                              Select Operator [SEL_348] (rows=500 width=10)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_347] (rows=500 width=10)
                                  predicate:value is not null
                                  TableScan [TS_261] (rows=500 width=10)
                                    Output:["key","value"]
                        <-Reducer 23 [CONTAINS] vectorized, llap
                          Reduce Output Operator [RS_332]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_331] (rows=881 width=10)
                              Output:["_col0","_col1"],keys:_col1, _col0
                              Select Operator [SEL_330] (rows=381 width=10)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_329] (rows=381 width=10)
                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                <-Union 22 [SIMPLE_EDGE]
                                  <-Map 27 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_346]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_345] (rows=762 width=10)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_344] (rows=500 width=10)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_343] (rows=500 width=10)
                                            predicate:value is not null
                                            TableScan [TS_255] (rows=500 width=10)
                                              Output:["key","value"]
                                  <-Reducer 21 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_328]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_327] (rows=762 width=10)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_326] (rows=262 width=10)
                                          Output:["_col0","_col1"]
                                          Group By Operator [GBY_325] (rows=262 width=10)
                                            Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                          <-Union 20 [SIMPLE_EDGE]
                                            <-Map 19 [CONTAINS] vectorized, llap
                                              Reduce Output Operator [RS_324]
                                                PartitionCols:_col0, _col1
                                                Group By Operator [GBY_323] (rows=525 width=10)
                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                  Select Operator [SEL_322] (rows=25 width=7)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_321] (rows=25 width=7)
                                                      predicate:value is not null
                                                      TableScan [TS_225] (rows=25 width=7)
                                                        Output:["key","value"]
                                            <-Map 26 [CONTAINS] vectorized, llap
                                              Reduce Output Operator [RS_342]
                                                PartitionCols:_col0, _col1
                                                Group By Operator [GBY_341] (rows=525 width=10)
                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                  Select Operator [SEL_340] (rows=500 width=10)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_339] (rows=500 width=10)
                                                      predicate:value is not null
                                                      TableScan [TS_249] (rows=500 width=10)
                                                        Output:["key","value"]
          <-Reducer 7 [CONTAINS] vectorized, llap
            Reduce Output Operator [RS_288]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_287] (rows=1210 width=10)
                Output:["_col0","_col1"],keys:_col0, _col1
                Group By Operator [GBY_286] (rows=605 width=10)
                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                <-Union 6 [SIMPLE_EDGE]
                  <-Reducer 16 [CONTAINS] vectorized, llap
                    Reduce Output Operator [RS_312]
                      PartitionCols:_col0, _col1
                      Group By Operator [GBY_311] (rows=1210 width=10)
                        Output:["_col0","_col1"],keys:_col0, _col1
                        Select Operator [SEL_310] (rows=605 width=10)
                          Output:["_col0","_col1"]
                          Map Join Operator [MAPJOIN_309] (rows=605 width=10)
                            Conds:RS_306._col3=SEL_308._col1(Inner),Output:["_col1","_col2"]
                          <-Map 11 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_306]
                              PartitionCols:_col3
                              Map Join Operator [MAPJOIN_305] (rows=550 width=10)
                                Conds:SEL_304._col0=RS_274._col0(Inner),Output:["_col1","_col2","_col3"]
                              <-Map 2 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_274]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_272]
                              <-Select Operator [SEL_304] (rows=500 width=10)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_303] (rows=500 width=10)
                                    predicate:key is not null
                                    TableScan [TS_26] (rows=500 width=10)
                                      default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                          <-Select Operator [SEL_308] (rows=381 width=10)
                              Output:["_col1"]
                              Group By Operator [GBY_307] (rows=381 width=10)
                                Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                              <-Union 15 [SIMPLE_EDGE]
                                <-Map 18 [CONTAINS] vectorized, llap
                                  Reduce Output Operator [RS_320]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_319] (rows=762 width=10)
                                      Output:["_col0","_col1"],keys:_col1, _col0
                                      Select Operator [SEL_318] (rows=500 width=10)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_317] (rows=500 width=10)
                                          predicate:value is not null
                                          TableScan [TS_219] (rows=500 width=10)
                                            Output:["key","value"]
                                <-Reducer 14 [CONTAINS] vectorized, llap
                                  Reduce Output Operator [RS_302]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_301] (rows=762 width=10)
                                      Output:["_col0","_col1"],keys:_col1, _col0
                                      Select Operator [SEL_300] (rows=262 width=10)
                                        Output:["_col0","_col1"]
                                        Group By Operator [GBY_299] (rows=262 width=10)
                                          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                        <-Union 13 [SIMPLE_EDGE]
                                          <-Map 12 [CONTAINS] vectorized, llap
                                            Reduce Output Operator [RS_298]
                                              PartitionCols:_col0, _col1
                                              Group By Operator [GBY_297] (rows=525 width=10)
                                                Output:["_col0","_col1"],keys:_col1, _col0
                                                Select Operator [SEL_296] (rows=25 width=7)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_295] (rows=25 width=7)
                                                    predicate:value is not null
                                                    TableScan [TS_194] (rows=25 width=7)
                                                      Output:["key","value"]
                                          <-Map 17 [CONTAINS] vectorized, llap
                                            Reduce Output Operator [RS_316]
                                              PartitionCols:_col0, _col1
                                              Group By Operator [GBY_315] (rows=525 width=10)
                                                Output:["_col0","_col1"],keys:_col1, _col0
                                                Select Operator [SEL_314] (rows=500 width=10)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_313] (rows=500 width=10)
                                                    predicate:value is not null
                                                    TableScan [TS_213] (rows=500 width=10)
                                                      Output:["key","value"]
                  <-Reducer 5 [CONTAINS] vectorized, llap
                    Reduce Output Operator [RS_285]
                      PartitionCols:_col0, _col1
                      Group By Operator [GBY_284] (rows=1210 width=10)
                        Output:["_col0","_col1"],keys:_col0, _col1
                        Select Operator [SEL_283] (rows=605 width=10)
                          Output:["_col0","_col1"]
                          Map Join Operator [MAPJOIN_282] (rows=605 width=10)
                            Conds:RS_278._col3=SEL_281._col1(Inner),Output:["_col1","_col2"]
                          <-Map 1 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_278]
                              PartitionCols:_col3
                               Please refer to the previous Map Join Operator [MAPJOIN_277]
                          <-Select Operator [SEL_281] (rows=262 width=10)
                              Output:["_col1"]
                              Group By Operator [GBY_280] (rows=262 width=10)
                                Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                              <-Union 4 [SIMPLE_EDGE]
                                <-Map 10 [CONTAINS] vectorized, llap
                                  Reduce Output Operator [RS_294]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_293] (rows=525 width=10)
                                      Output:["_col0","_col1"],keys:_col1, _col0
                                      Select Operator [SEL_292] (rows=500 width=10)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_291] (rows=500 width=10)
                                          predicate:value is not null
                                          TableScan [TS_188] (rows=500 width=10)
                                            Output:["key","value"]
                                <-Map 3 [CONTAINS] vectorized, llap
                                  Reduce Output Operator [RS_270]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_269] (rows=525 width=10)
                                      Output:["_col0","_col1"],keys:_col1, _col0
                                      Select Operator [SEL_268] (rows=25 width=7)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_267] (rows=25 width=7)
                                          predicate:value is not null
                                          TableScan [TS_170] (rows=25 width=7)
                                            Output:["key","value"]

PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n22(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n22
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n22(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n22
PREHOOK: query: CREATE TABLE tab_part_n14 (key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab_part_n14
POSTHOOK: query: CREATE TABLE tab_part_n14 (key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab_part_n14
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part_n23 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_part_n23
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part_n23 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part_n23
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n22 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n22
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n22 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n22
POSTHOOK: Output: default@srcbucket_mapjoin_n22@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj1/000001_0' INTO TABLE srcbucket_mapjoin_n22 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n22@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj1/000001_0' INTO TABLE srcbucket_mapjoin_n22 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n22@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_n23 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n23
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_n23 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n23
POSTHOOK: Output: default@srcbucket_mapjoin_part_n23@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_n23 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n23@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_n23 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n23@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part_n23 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n23@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part_n23 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n23@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part_n23 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n23@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part_n23 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n23@ds=2008-04-08
PREHOOK: query: insert overwrite table tab_part_n14 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_part_n23
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_part_n23
PREHOOK: Input: default@srcbucket_mapjoin_part_n23@ds=2008-04-08
PREHOOK: Output: default@tab_part_n14@ds=2008-04-08
POSTHOOK: query: insert overwrite table tab_part_n14 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_part_n23
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_part_n23
POSTHOOK: Input: default@srcbucket_mapjoin_part_n23@ds=2008-04-08
POSTHOOK: Output: default@tab_part_n14@ds=2008-04-08
POSTHOOK: Lineage: tab_part_n14 PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_part_n23)srcbucket_mapjoin_part_n23.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: tab_part_n14 PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_part_n23)srcbucket_mapjoin_part_n23.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE tab_n15(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab_n15
POSTHOOK: query: CREATE TABLE tab_n15(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab_n15
PREHOOK: query: insert overwrite table tab_n15 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_n22
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n22
PREHOOK: Input: default@srcbucket_mapjoin_n22@ds=2008-04-08
PREHOOK: Output: default@tab_n15@ds=2008-04-08
POSTHOOK: query: insert overwrite table tab_n15 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_n22
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n22
POSTHOOK: Input: default@srcbucket_mapjoin_n22@ds=2008-04-08
POSTHOOK: Output: default@tab_n15@ds=2008-04-08
POSTHOOK: Lineage: tab_n15 PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_n22)srcbucket_mapjoin_n22.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: tab_n15 PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_n22)srcbucket_mapjoin_n22.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE tab2_n7(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab2_n7
POSTHOOK: query: CREATE TABLE tab2_n7(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab2_n7
PREHOOK: query: insert overwrite table tab2_n7 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_n22
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n22
PREHOOK: Input: default@srcbucket_mapjoin_n22@ds=2008-04-08
PREHOOK: Output: default@tab2_n7@ds=2008-04-08
POSTHOOK: query: insert overwrite table tab2_n7 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_n22
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n22
POSTHOOK: Input: default@srcbucket_mapjoin_n22@ds=2008-04-08
POSTHOOK: Output: default@tab2_n7@ds=2008-04-08
POSTHOOK: Lineage: tab2_n7 PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_n22)srcbucket_mapjoin_n22.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: tab2_n7 PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_n22)srcbucket_mapjoin_n22.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: explain 
select s1.key as key, s1.value as value from tab_n15 s1 join tab_n15 s3 on s1.key=s3.key
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select s1.key as key, s1.value as value from tab_n15 s1 join tab_n15 s3 on s1.key=s3.key
POSTHOOK: type: QUERY
Plan optimized by CBO.

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Map 1 llap
      File Output Operator [FS_10]
        Merge Join Operator [MERGEJOIN_15] (rows=266 width=10)
          Conds:SEL_2._col0=SEL_5._col0(Inner),Output:["_col0","_col1"]
        <-Select Operator [SEL_5] (rows=242 width=10)
            Output:["_col0"]
            Filter Operator [FIL_14] (rows=242 width=10)
              predicate:key is not null
              TableScan [TS_3] (rows=242 width=10)
                default@tab_n15,s3,Tbl:COMPLETE,Col:NONE,Output:["key"]
        <-Select Operator [SEL_2] (rows=242 width=10)
            Output:["_col0","_col1"]
            Filter Operator [FIL_13] (rows=242 width=10)
              predicate:key is not null
              TableScan [TS_0] (rows=242 width=10)
                default@tab_n15,s1,Tbl:COMPLETE,Col:NONE,Output:["key","value"]

PREHOOK: query: explain 
select s1.key as key, s1.value as value from tab_n15 s1 join tab_n15 s3 on s1.key=s3.key join tab_n15 s2 on s1.value=s2.value
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select s1.key as key, s1.value as value from tab_n15 s1 join tab_n15 s3 on s1.key=s3.key join tab_n15 s2 on s1.value=s2.value
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_16]
        Merge Join Operator [MERGEJOIN_27] (rows=292 width=10)
          Conds:RS_12._col1=RS_30._col0(Inner),Output:["_col0","_col1"]
        <-Map 1 [SIMPLE_EDGE] llap
          SHUFFLE [RS_12]
            PartitionCols:_col1
            Merge Join Operator [MERGEJOIN_25] (rows=266 width=10)
              Conds:SEL_2._col0=SEL_5._col0(Inner),Output:["_col0","_col1"]
            <-Select Operator [SEL_5] (rows=242 width=10)
                Output:["_col0"]
                Filter Operator [FIL_23] (rows=242 width=10)
                  predicate:key is not null
                  TableScan [TS_3] (rows=242 width=10)
                    default@tab_n15,s3,Tbl:COMPLETE,Col:NONE,Output:["key"]
            <-Select Operator [SEL_2] (rows=242 width=10)
                Output:["_col0","_col1"]
                Filter Operator [FIL_22] (rows=242 width=10)
                  predicate:(key is not null and value is not null)
                  TableScan [TS_0] (rows=242 width=10)
                    default@tab_n15,s1,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
        <-Map 4 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_30]
            PartitionCols:_col0
            Select Operator [SEL_29] (rows=242 width=10)
              Output:["_col0"]
              Filter Operator [FIL_28] (rows=242 width=10)
                predicate:value is not null
                TableScan [TS_6] (rows=242 width=10)
                  default@tab_n15,s2,Tbl:COMPLETE,Col:NONE,Output:["value"]

PREHOOK: query: explain 
select s1.key as key, s1.value as value from tab_n15 s1 join tab2_n7 s3 on s1.key=s3.key
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select s1.key as key, s1.value as value from tab_n15 s1 join tab2_n7 s3 on s1.key=s3.key
POSTHOOK: type: QUERY
Plan optimized by CBO.

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Map 1 llap
      File Output Operator [FS_10]
        Merge Join Operator [MERGEJOIN_15] (rows=266 width=10)
          Conds:SEL_2._col0=SEL_5._col0(Inner),Output:["_col0","_col1"]
        <-Select Operator [SEL_5] (rows=242 width=10)
            Output:["_col0"]
            Filter Operator [FIL_14] (rows=242 width=10)
              predicate:key is not null
              TableScan [TS_3] (rows=242 width=10)
                default@tab2_n7,s3,Tbl:COMPLETE,Col:NONE,Output:["key"]
        <-Select Operator [SEL_2] (rows=242 width=10)
            Output:["_col0","_col1"]
            Filter Operator [FIL_13] (rows=242 width=10)
              predicate:key is not null
              TableScan [TS_0] (rows=242 width=10)
                default@tab_n15,s1,Tbl:COMPLETE,Col:NONE,Output:["key","value"]

PREHOOK: query: explain 
select s1.key as key, s1.value as value from tab_n15 s1 join tab2_n7 s3 on s1.key=s3.key join tab2_n7 s2 on s1.value=s2.value
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select s1.key as key, s1.value as value from tab_n15 s1 join tab2_n7 s3 on s1.key=s3.key join tab2_n7 s2 on s1.value=s2.value
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_16]
        Merge Join Operator [MERGEJOIN_27] (rows=292 width=10)
          Conds:RS_12._col1=RS_30._col0(Inner),Output:["_col0","_col1"]
        <-Map 1 [SIMPLE_EDGE] llap
          SHUFFLE [RS_12]
            PartitionCols:_col1
            Merge Join Operator [MERGEJOIN_25] (rows=266 width=10)
              Conds:SEL_2._col0=SEL_5._col0(Inner),Output:["_col0","_col1"]
            <-Select Operator [SEL_5] (rows=242 width=10)
                Output:["_col0"]
                Filter Operator [FIL_23] (rows=242 width=10)
                  predicate:key is not null
                  TableScan [TS_3] (rows=242 width=10)
                    default@tab2_n7,s3,Tbl:COMPLETE,Col:NONE,Output:["key"]
            <-Select Operator [SEL_2] (rows=242 width=10)
                Output:["_col0","_col1"]
                Filter Operator [FIL_22] (rows=242 width=10)
                  predicate:(key is not null and value is not null)
                  TableScan [TS_0] (rows=242 width=10)
                    default@tab_n15,s1,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
        <-Map 4 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_30]
            PartitionCols:_col0
            Select Operator [SEL_29] (rows=242 width=10)
              Output:["_col0"]
              Filter Operator [FIL_28] (rows=242 width=10)
                predicate:value is not null
                TableScan [TS_6] (rows=242 width=10)
                  default@tab2_n7,s2,Tbl:COMPLETE,Col:NONE,Output:["value"]

PREHOOK: query: explain
select count(*) from (select s1.key as key, s1.value as value from tab_n15 s1 join tab_n15 s3 on s1.key=s3.key
UNION  ALL
select s2.key as key, s2.value as value from tab_n15 s2
) a_n19 join tab_part_n14 b_n15 on (a_n19.key = b_n15.key)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select count(*) from (select s1.key as key, s1.value as value from tab_n15 s1 join tab_n15 s3 on s1.key=s3.key
UNION  ALL
select s2.key as key, s2.value as value from tab_n15 s2
) a_n19 join tab_part_n14 b_n15 on (a_n19.key = b_n15.key)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Union 2 (CONTAINS)
Map 6 <- Union 2 (CONTAINS)
Reducer 3 <- Map 7 (SIMPLE_EDGE), Union 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 4 vectorized, llap
      File Output Operator [FS_59]
        Group By Operator [GBY_58] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 3 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_23]
            Group By Operator [GBY_22] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_39] (rows=558 width=10)
                Conds:Union 2._col0=RS_57._col0(Inner)
              <-Map 7 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_57]
                  PartitionCols:_col0
                  Select Operator [SEL_56] (rows=500 width=10)
                    Output:["_col0"]
                    Filter Operator [FIL_55] (rows=500 width=10)
                      predicate:key is not null
                      TableScan [TS_15] (rows=500 width=10)
                        default@tab_part_n14,b_n15,Tbl:COMPLETE,Col:NONE,Output:["key"]
              <-Union 2 [SIMPLE_EDGE]
                <-Map 1 [CONTAINS] llap
                  Reduce Output Operator [RS_49]
                    PartitionCols:_col0
                    Merge Join Operator [MERGEJOIN_46] (rows=266 width=10)
                      Conds:SEL_44._col0=SEL_5._col0(Inner),Output:["_col0"]
                    <-Select Operator [SEL_5] (rows=242 width=10)
                        Output:["_col0"]
                        Filter Operator [FIL_34] (rows=242 width=10)
                          predicate:key is not null
                          TableScan [TS_3] (rows=242 width=10)
                            default@tab_n15,s3,Tbl:COMPLETE,Col:NONE,Output:["key"]
                    <-Select Operator [SEL_44] (rows=242 width=10)
                        Output:["_col0"]
                        Filter Operator [FIL_42] (rows=242 width=10)
                          predicate:key is not null
                          TableScan [TS_40] (rows=242 width=10)
                            Output:["key"]
                <-Map 6 [CONTAINS] vectorized, llap
                  Reduce Output Operator [RS_62]
                    PartitionCols:_col0
                    Select Operator [SEL_61] (rows=242 width=10)
                      Output:["_col0"]
                      Filter Operator [FIL_60] (rows=242 width=10)
                        predicate:key is not null
                        TableScan [TS_50] (rows=242 width=10)
                          Output:["key"]

PREHOOK: query: explain
select count(*) from (select s1.key as key, s1.value as value from tab_n15 s1 join tab_n15 s3 on s1.key=s3.key join tab_n15 s2 on s1.value=s2.value
UNION  ALL
select s2.key as key, s2.value as value from tab_n15 s2
) a_n19 join tab_part_n14 b_n15 on (a_n19.key = b_n15.key)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select count(*) from (select s1.key as key, s1.value as value from tab_n15 s1 join tab_n15 s3 on s1.key=s3.key join tab_n15 s2 on s1.value=s2.value
UNION  ALL
select s2.key as key, s2.value as value from tab_n15 s2
) a_n19 join tab_part_n14 b_n15 on (a_n19.key = b_n15.key)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 8 <- Union 3 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 4 <- Map 9 (SIMPLE_EDGE), Union 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5 vectorized, llap
      File Output Operator [FS_67]
        Group By Operator [GBY_66] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 4 [CUSTOM_SIMPLE_EDGE] llap
          PARTITION_ONLY_SHUFFLE [RS_29]
            Group By Operator [GBY_28] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_51] (rows=587 width=10)
                Conds:Union 3._col0=RS_65._col0(Inner)
              <-Map 9 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_65]
                  PartitionCols:_col0
                  Select Operator [SEL_64] (rows=500 width=10)
                    Output:["_col0"]
                    Filter Operator [FIL_63] (rows=500 width=10)
                      predicate:key is not null
                      TableScan [TS_21] (rows=500 width=10)
                        default@tab_part_n14,b_n15,Tbl:COMPLETE,Col:NONE,Output:["key"]
              <-Union 3 [SIMPLE_EDGE]
                <-Map 8 [CONTAINS] vectorized, llap
                  Reduce Output Operator [RS_70]
                    PartitionCols:_col0
                    Select Operator [SEL_69] (rows=242 width=10)
                      Output:["_col0"]
                      Filter Operator [FIL_68] (rows=242 width=10)
                        predicate:key is not null
                        TableScan [TS_55] (rows=242 width=10)
                          Output:["key"]
                <-Reducer 2 [CONTAINS] llap
                  Reduce Output Operator [RS_54]
                    PartitionCols:_col0
                    Merge Join Operator [MERGEJOIN_52] (rows=292 width=10)
                      Conds:RS_12._col1=RS_62._col0(Inner),Output:["_col0"]
                    <-Map 1 [SIMPLE_EDGE] llap
                      SHUFFLE [RS_12]
                        PartitionCols:_col1
                        Merge Join Operator [MERGEJOIN_48] (rows=266 width=10)
                          Conds:SEL_2._col0=SEL_5._col0(Inner),Output:["_col0","_col1"]
                        <-Select Operator [SEL_5] (rows=242 width=10)
                            Output:["_col0"]
                            Filter Operator [FIL_44] (rows=242 width=10)
                              predicate:key is not null
                              TableScan [TS_3] (rows=242 width=10)
                                default@tab_n15,s3,Tbl:COMPLETE,Col:NONE,Output:["key"]
                        <-Select Operator [SEL_2] (rows=242 width=10)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_43] (rows=242 width=10)
                              predicate:(key is not null and value is not null)
                              TableScan [TS_0] (rows=242 width=10)
                                default@tab_n15,s1,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                    <-Map 7 [SIMPLE_EDGE] vectorized, llap
                      SHUFFLE [RS_62]
                        PartitionCols:_col0
                        Select Operator [SEL_61] (rows=242 width=10)
                          Output:["_col0"]
                          Filter Operator [FIL_60] (rows=242 width=10)
                            predicate:value is not null
                            TableScan [TS_6] (rows=242 width=10)
                              default@tab_n15,s2,Tbl:COMPLETE,Col:NONE,Output:["value"]

PREHOOK: query: explain
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union all select * from src)z ON (x.value = z.value)
union all
SELECT x.key, y.value
FROM src x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union all select key, value from src union all select key, value from src)z ON (x.value = z.value)
union all
SELECT x.key, y.value
FROM src1 x JOIN src1 y ON (x.key = y.key) 
JOIN (select key, value from src1 union all select key, value from src union all select key, value from src union all select key, value from src)z ON (x.value = z.value)
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union all select * from src)z ON (x.value = z.value)
union all
SELECT x.key, y.value
FROM src x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union all select key, value from src union all select key, value from src)z ON (x.value = z.value)
union all
SELECT x.key, y.value
FROM src1 x JOIN src1 y ON (x.key = y.key) 
JOIN (select key, value from src1 union all select key, value from src union all select key, value from src union all select key, value from src)z ON (x.value = z.value)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 6 (BROADCAST_EDGE)
Map 11 <- Union 12 (CONTAINS)
Map 13 <- Union 12 (CONTAINS)
Map 14 <- Union 12 (CONTAINS)
Map 16 <- Map 6 (BROADCAST_EDGE), Union 3 (CONTAINS)
Map 17 <- Map 6 (BROADCAST_EDGE), Union 3 (CONTAINS)
Map 18 <- Map 6 (BROADCAST_EDGE), Union 3 (CONTAINS)
Map 19 <- Map 6 (BROADCAST_EDGE), Union 3 (CONTAINS)
Map 6 <- Map 15 (BROADCAST_EDGE)
Map 7 <- Union 8 (CONTAINS)
Map 9 <- Union 8 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Union 3 (CONTAINS), Union 8 (SIMPLE_EDGE)
Reducer 4 <- Map 1 (SIMPLE_EDGE), Map 10 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE), Union 12 (SIMPLE_EDGE), Union 3 (CONTAINS)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Union 3
      <-Map 16 [CONTAINS] vectorized, llap
        File Output Operator [FS_232]
          Select Operator [SEL_231] (rows=1677 width=10)
            Output:["_col0","_col1"]
            Map Join Operator [MAPJOIN_230] (rows=1677 width=10)
              Conds:RS_199._col1=SEL_229._col0(Inner),Output:["_col0","_col3"]
            <-Map 6 [BROADCAST_EDGE] vectorized, llap
              BROADCAST [RS_199]
                PartitionCols:_col1
                Map Join Operator [MAPJOIN_198] (rows=27 width=7)
                  Conds:SEL_196._col0=RS_194._col0(Inner),Output:["_col0","_col1","_col3"]
                <-Map 15 [BROADCAST_EDGE] vectorized, llap
                  BROADCAST [RS_194]
                    PartitionCols:_col0
                    Select Operator [SEL_193] (rows=25 width=7)
                      Output:["_col0","_col1"]
                      Filter Operator [FIL_192] (rows=25 width=7)
                        predicate:key is not null
                        TableScan [TS_49] (rows=25 width=7)
                          default@src1,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                <-Select Operator [SEL_196] (rows=25 width=7)
                    Output:["_col0","_col1"]
                    Filter Operator [FIL_195] (rows=25 width=7)
                      predicate:(key is not null and value is not null)
                      TableScan [TS_3] (rows=25 width=7)
                        default@src1,x,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
            <-Select Operator [SEL_229] (rows=25 width=7)
                Output:["_col0"]
                Filter Operator [FIL_228] (rows=25 width=7)
                  predicate:value is not null
                  TableScan [TS_156] (rows=25 width=7)
                    Output:["value"]
      <-Map 17 [CONTAINS] vectorized, llap
        File Output Operator [FS_237]
          Select Operator [SEL_236] (rows=1677 width=10)
            Output:["_col0","_col1"]
            Map Join Operator [MAPJOIN_235] (rows=1677 width=10)
              Conds:RS_200._col1=SEL_234._col0(Inner),Output:["_col0","_col3"]
            <-Map 6 [BROADCAST_EDGE] vectorized, llap
              BROADCAST [RS_200]
                PartitionCols:_col1
                 Please refer to the previous Map Join Operator [MAPJOIN_198]
            <-Select Operator [SEL_234] (rows=500 width=10)
                Output:["_col0"]
                Filter Operator [FIL_233] (rows=500 width=10)
                  predicate:value is not null
                  TableScan [TS_165] (rows=500 width=10)
                    Output:["value"]
      <-Map 18 [CONTAINS] vectorized, llap
        File Output Operator [FS_242]
          Select Operator [SEL_241] (rows=1677 width=10)
            Output:["_col0","_col1"]
            Map Join Operator [MAPJOIN_240] (rows=1677 width=10)
              Conds:RS_201._col1=SEL_239._col0(Inner),Output:["_col0","_col3"]
            <-Map 6 [BROADCAST_EDGE] vectorized, llap
              BROADCAST [RS_201]
                PartitionCols:_col1
                 Please refer to the previous Map Join Operator [MAPJOIN_198]
            <-Select Operator [SEL_239] (rows=500 width=10)
                Output:["_col0"]
                Filter Operator [FIL_238] (rows=500 width=10)
                  predicate:value is not null
                  TableScan [TS_174] (rows=500 width=10)
                    Output:["value"]
      <-Map 19 [CONTAINS] vectorized, llap
        File Output Operator [FS_247]
          Select Operator [SEL_246] (rows=1677 width=10)
            Output:["_col0","_col1"]
            Map Join Operator [MAPJOIN_245] (rows=1677 width=10)
              Conds:RS_202._col1=SEL_244._col0(Inner),Output:["_col0","_col3"]
            <-Map 6 [BROADCAST_EDGE] vectorized, llap
              BROADCAST [RS_202]
                PartitionCols:_col1
                 Please refer to the previous Map Join Operator [MAPJOIN_198]
            <-Select Operator [SEL_244] (rows=500 width=10)
                Output:["_col0"]
                Filter Operator [FIL_243] (rows=500 width=10)
                  predicate:value is not null
                  TableScan [TS_183] (rows=500 width=10)
                    Output:["value"]
      <-Reducer 2 [CONTAINS] llap
        File Output Operator [FS_126]
          Select Operator [SEL_124] (rows=605 width=10)
            Output:["_col0","_col1"]
            Merge Join Operator [MERGEJOIN_123] (rows=605 width=10)
              Conds:RS_209._col3=Union 8._col0(Inner),Output:["_col1","_col2"]
            <-Map 1 [SIMPLE_EDGE] vectorized, llap
              SHUFFLE [RS_209]
                PartitionCols:_col3
                Map Join Operator [MAPJOIN_207] (rows=550 width=10)
                  Conds:SEL_205._col0=RS_197._col0(Inner),Output:["_col1","_col2","_col3"]
                <-Map 6 [BROADCAST_EDGE] vectorized, llap
                  BROADCAST [RS_197]
                    PartitionCols:_col0
                     Please refer to the previous Select Operator [SEL_196]
                <-Select Operator [SEL_205] (rows=500 width=10)
                    Output:["_col0","_col1"]
                    Filter Operator [FIL_203] (rows=500 width=10)
                      predicate:key is not null
                      TableScan [TS_0] (rows=500 width=10)
                        default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
            <-Union 8 [SIMPLE_EDGE]
              <-Map 7 [CONTAINS] vectorized, llap
                Reduce Output Operator [RS_215]
                  PartitionCols:_col0
                  Select Operator [SEL_214] (rows=25 width=7)
                    Output:["_col0"]
                    Filter Operator [FIL_213] (rows=25 width=7)
                      predicate:value is not null
                      TableScan [TS_131] (rows=25 width=7)
                        Output:["value"]
              <-Map 9 [CONTAINS] vectorized, llap
                Reduce Output Operator [RS_218]
                  PartitionCols:_col0
                  Select Operator [SEL_217] (rows=500 width=10)
                    Output:["_col0"]
                    Filter Operator [FIL_216] (rows=500 width=10)
                      predicate:value is not null
                      TableScan [TS_136] (rows=500 width=10)
                        Output:["value"]
      <-Reducer 5 [CONTAINS] llap
        File Output Operator [FS_130]
          Select Operator [SEL_128] (rows=1127 width=10)
            Output:["_col0","_col1"]
            Merge Join Operator [MERGEJOIN_127] (rows=1127 width=10)
              Conds:RS_41._col1=Union 12._col0(Inner),Output:["_col0","_col3"]
            <-Reducer 4 [SIMPLE_EDGE] llap
              SHUFFLE [RS_41]
                PartitionCols:_col1
                Merge Join Operator [MERGEJOIN_112] (rows=550 width=10)
                  Conds:RS_208._col0=RS_212._col0(Inner),Output:["_col0","_col1","_col3"]
                <-Map 1 [SIMPLE_EDGE] vectorized, llap
                  SHUFFLE [RS_208]
                    PartitionCols:_col0
                    Select Operator [SEL_206] (rows=500 width=10)
                      Output:["_col0","_col1"]
                      Filter Operator [FIL_204] (rows=500 width=10)
                        predicate:(key is not null and value is not null)
                         Please refer to the previous TableScan [TS_0]
                <-Map 10 [SIMPLE_EDGE] vectorized, llap
                  SHUFFLE [RS_212]
                    PartitionCols:_col0
                    Select Operator [SEL_211] (rows=500 width=10)
                      Output:["_col0","_col1"]
                      Filter Operator [FIL_210] (rows=500 width=10)
                        predicate:key is not null
                        TableScan [TS_24] (rows=500 width=10)
                          default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
            <-Union 12 [SIMPLE_EDGE]
              <-Map 11 [CONTAINS] vectorized, llap
                Reduce Output Operator [RS_221]
                  PartitionCols:_col0
                  Select Operator [SEL_220] (rows=25 width=7)
                    Output:["_col0"]
                    Filter Operator [FIL_219] (rows=25 width=7)
                      predicate:value is not null
                      TableScan [TS_141] (rows=25 width=7)
                        Output:["value"]
              <-Map 13 [CONTAINS] vectorized, llap
                Reduce Output Operator [RS_224]
                  PartitionCols:_col0
                  Select Operator [SEL_223] (rows=500 width=10)
                    Output:["_col0"]
                    Filter Operator [FIL_222] (rows=500 width=10)
                      predicate:value is not null
                      TableScan [TS_146] (rows=500 width=10)
                        Output:["value"]
              <-Map 14 [CONTAINS] vectorized, llap
                Reduce Output Operator [RS_227]
                  PartitionCols:_col0
                  Select Operator [SEL_226] (rows=500 width=10)
                    Output:["_col0"]
                    Filter Operator [FIL_225] (rows=500 width=10)
                      predicate:value is not null
                      TableScan [TS_151] (rows=500 width=10)
                        Output:["value"]

PREHOOK: query: explain
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src1 y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src union select key, value from src)z ON (x.value = z.value)
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src)z ON (x.value = z.value)
union
SELECT x.key, y.value
FROM src1 x JOIN src1 y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src union select key, value from src)z ON (x.value = z.value)
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 9 (BROADCAST_EDGE)
Map 10 <- Union 11 (CONTAINS)
Map 13 <- Union 11 (CONTAINS)
Map 15 <- Union 16 (CONTAINS)
Map 20 <- Union 16 (CONTAINS)
Map 21 <- Union 18 (CONTAINS)
Map 23 <- Union 24 (CONTAINS)
Map 30 <- Union 24 (CONTAINS)
Map 31 <- Union 26 (CONTAINS)
Map 32 <- Union 28 (CONTAINS)
Map 9 <- Map 22 (BROADCAST_EDGE)
Reducer 12 <- Union 11 (SIMPLE_EDGE)
Reducer 17 <- Union 16 (SIMPLE_EDGE), Union 18 (CONTAINS)
Reducer 19 <- Union 18 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 25 <- Union 24 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 27 <- Union 26 (SIMPLE_EDGE), Union 28 (CONTAINS)
Reducer 29 <- Map 9 (BROADCAST_EDGE), Union 28 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 4 <- Union 3 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 6 <- Union 5 (SIMPLE_EDGE)
Reducer 7 <- Map 1 (SIMPLE_EDGE), Map 14 (SIMPLE_EDGE)
Reducer 8 <- Reducer 19 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE), Union 3 (CONTAINS)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6 vectorized, llap
      File Output Operator [FS_281]
        Group By Operator [GBY_280] (rows=544 width=10)
          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
        <-Union 5 [SIMPLE_EDGE]
          <-Reducer 29 [CONTAINS] vectorized, llap
            Reduce Output Operator [RS_329]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_328] (rows=1089 width=10)
                Output:["_col0","_col1"],keys:_col0, _col1
                Select Operator [SEL_327] (rows=484 width=10)
                  Output:["_col0","_col1"]
                  Map Join Operator [MAPJOIN_326] (rows=484 width=10)
                    Conds:RS_266._col1=SEL_325._col1(Inner),Output:["_col0","_col3"]
                  <-Map 9 [BROADCAST_EDGE] vectorized, llap
                    BROADCAST [RS_266]
                      PartitionCols:_col1
                      Map Join Operator [MAPJOIN_265] (rows=27 width=7)
                        Conds:SEL_263._col0=RS_261._col0(Inner),Output:["_col0","_col1","_col3"]
                      <-Map 22 [BROADCAST_EDGE] vectorized, llap
                        BROADCAST [RS_261]
                          PartitionCols:_col0
                          Select Operator [SEL_260] (rows=25 width=7)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_259] (rows=25 width=7)
                              predicate:key is not null
                              TableScan [TS_72] (rows=25 width=7)
                                default@src1,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                      <-Select Operator [SEL_263] (rows=25 width=7)
                          Output:["_col0","_col1"]
                          Filter Operator [FIL_262] (rows=25 width=7)
                            predicate:(key is not null and value is not null)
                            TableScan [TS_3] (rows=25 width=7)
                              default@src1,x,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                  <-Select Operator [SEL_325] (rows=440 width=10)
                      Output:["_col1"]
                      Group By Operator [GBY_324] (rows=440 width=10)
                        Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                      <-Union 28 [SIMPLE_EDGE]
                        <-Map 32 [CONTAINS] vectorized, llap
                          Reduce Output Operator [RS_341]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_340] (rows=881 width=10)
                              Output:["_col0","_col1"],keys:_col1, _col0
                              Select Operator [SEL_339] (rows=500 width=10)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_338] (rows=500 width=10)
                                  predicate:value is not null
                                  TableScan [TS_253] (rows=500 width=10)
                                    Output:["key","value"]
                        <-Reducer 27 [CONTAINS] vectorized, llap
                          Reduce Output Operator [RS_323]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_322] (rows=881 width=10)
                              Output:["_col0","_col1"],keys:_col1, _col0
                              Select Operator [SEL_321] (rows=381 width=10)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_320] (rows=381 width=10)
                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                <-Union 26 [SIMPLE_EDGE]
                                  <-Map 31 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_337]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_336] (rows=762 width=10)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_335] (rows=500 width=10)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_334] (rows=500 width=10)
                                            predicate:value is not null
                                            TableScan [TS_247] (rows=500 width=10)
                                              Output:["key","value"]
                                  <-Reducer 25 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_319]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_318] (rows=762 width=10)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_317] (rows=262 width=10)
                                          Output:["_col0","_col1"]
                                          Group By Operator [GBY_316] (rows=262 width=10)
                                            Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                          <-Union 24 [SIMPLE_EDGE]
                                            <-Map 23 [CONTAINS] vectorized, llap
                                              Reduce Output Operator [RS_315]
                                                PartitionCols:_col0, _col1
                                                Group By Operator [GBY_314] (rows=525 width=10)
                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                  Select Operator [SEL_313] (rows=25 width=7)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_312] (rows=25 width=7)
                                                      predicate:value is not null
                                                      TableScan [TS_217] (rows=25 width=7)
                                                        Output:["key","value"]
                                            <-Map 30 [CONTAINS] vectorized, llap
                                              Reduce Output Operator [RS_333]
                                                PartitionCols:_col0, _col1
                                                Group By Operator [GBY_332] (rows=525 width=10)
                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                  Select Operator [SEL_331] (rows=500 width=10)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_330] (rows=500 width=10)
                                                      predicate:value is not null
                                                      TableScan [TS_241] (rows=500 width=10)
                                                        Output:["key","value"]
          <-Reducer 4 [CONTAINS] vectorized, llap
            Reduce Output Operator [RS_279]
              PartitionCols:_col0, _col1
              Group By Operator [GBY_278] (rows=1089 width=10)
                Output:["_col0","_col1"],keys:_col0, _col1
                Group By Operator [GBY_277] (rows=605 width=10)
                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                <-Union 3 [SIMPLE_EDGE]
                  <-Reducer 2 [CONTAINS] llap
                    Reduce Output Operator [RS_172]
                      PartitionCols:_col0, _col1
                      Group By Operator [GBY_171] (rows=1210 width=10)
                        Output:["_col0","_col1"],keys:_col0, _col1
                        Select Operator [SEL_169] (rows=605 width=10)
                          Output:["_col0","_col1"]
                          Merge Join Operator [MERGEJOIN_168] (rows=605 width=10)
                            Conds:RS_273._col3=RS_276._col1(Inner),Output:["_col1","_col2"]
                          <-Map 1 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_273]
                              PartitionCols:_col3
                              Map Join Operator [MAPJOIN_271] (rows=550 width=10)
                                Conds:SEL_269._col0=RS_264._col0(Inner),Output:["_col1","_col2","_col3"]
                              <-Map 9 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_264]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_263]
                              <-Select Operator [SEL_269] (rows=500 width=10)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_267] (rows=500 width=10)
                                    predicate:key is not null
                                    TableScan [TS_0] (rows=500 width=10)
                                      default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                          <-Reducer 12 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_276]
                              PartitionCols:_col1
                              Select Operator [SEL_275] (rows=262 width=10)
                                Output:["_col1"]
                                Group By Operator [GBY_274] (rows=262 width=10)
                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                <-Union 11 [SIMPLE_EDGE]
                                  <-Map 10 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_291]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_290] (rows=525 width=10)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_289] (rows=25 width=7)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_288] (rows=25 width=7)
                                            predicate:value is not null
                                            TableScan [TS_182] (rows=25 width=7)
                                              Output:["key","value"]
                                  <-Map 13 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_295]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_294] (rows=525 width=10)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_293] (rows=500 width=10)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_292] (rows=500 width=10)
                                            predicate:value is not null
                                            TableScan [TS_188] (rows=500 width=10)
                                              Output:["key","value"]
                  <-Reducer 8 [CONTAINS] llap
                    Reduce Output Operator [RS_181]
                      PartitionCols:_col0, _col1
                      Group By Operator [GBY_180] (rows=1210 width=10)
                        Output:["_col0","_col1"],keys:_col0, _col1
                        Select Operator [SEL_178] (rows=605 width=10)
                          Output:["_col0","_col1"]
                          Merge Join Operator [MERGEJOIN_177] (rows=605 width=10)
                            Conds:RS_58._col1=RS_287._col1(Inner),Output:["_col0","_col3"]
                          <-Reducer 19 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_287]
                              PartitionCols:_col1
                              Select Operator [SEL_286] (rows=381 width=10)
                                Output:["_col1"]
                                Group By Operator [GBY_285] (rows=381 width=10)
                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                <-Union 18 [SIMPLE_EDGE]
                                  <-Map 21 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_311]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_310] (rows=762 width=10)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_309] (rows=500 width=10)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_308] (rows=500 width=10)
                                            predicate:value is not null
                                            TableScan [TS_211] (rows=500 width=10)
                                              Output:["key","value"]
                                  <-Reducer 17 [CONTAINS] vectorized, llap
                                    Reduce Output Operator [RS_303]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_302] (rows=762 width=10)
                                        Output:["_col0","_col1"],keys:_col1, _col0
                                        Select Operator [SEL_301] (rows=262 width=10)
                                          Output:["_col0","_col1"]
                                          Group By Operator [GBY_300] (rows=262 width=10)
                                            Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                          <-Union 16 [SIMPLE_EDGE]
                                            <-Map 15 [CONTAINS] vectorized, llap
                                              Reduce Output Operator [RS_299]
                                                PartitionCols:_col0, _col1
                                                Group By Operator [GBY_298] (rows=525 width=10)
                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                  Select Operator [SEL_297] (rows=25 width=7)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_296] (rows=25 width=7)
                                                      predicate:value is not null
                                                      TableScan [TS_194] (rows=25 width=7)
                                                        Output:["key","value"]
                                            <-Map 20 [CONTAINS] vectorized, llap
                                              Reduce Output Operator [RS_307]
                                                PartitionCols:_col0, _col1
                                                Group By Operator [GBY_306] (rows=525 width=10)
                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                  Select Operator [SEL_305] (rows=500 width=10)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_304] (rows=500 width=10)
                                                      predicate:value is not null
                                                      TableScan [TS_205] (rows=500 width=10)
                                                        Output:["key","value"]
                          <-Reducer 7 [SIMPLE_EDGE] llap
                            SHUFFLE [RS_58]
                              PartitionCols:_col1
                              Merge Join Operator [MERGEJOIN_160] (rows=550 width=10)
                                Conds:RS_272._col0=RS_284._col0(Inner),Output:["_col0","_col1","_col3"]
                              <-Map 1 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_272]
                                  PartitionCols:_col0
                                  Select Operator [SEL_270] (rows=500 width=10)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_268] (rows=500 width=10)
                                      predicate:(key is not null and value is not null)
                                       Please refer to the previous TableScan [TS_0]
                              <-Map 14 [SIMPLE_EDGE] vectorized, llap
                                SHUFFLE [RS_284]
                                  PartitionCols:_col0
                                  Select Operator [SEL_283] (rows=500 width=10)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_282] (rows=500 width=10)
                                      predicate:key is not null
                                      TableScan [TS_29] (rows=500 width=10)
                                        default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]

PREHOOK: query: CREATE TABLE a_n19(key STRING, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@a_n19
POSTHOOK: query: CREATE TABLE a_n19(key STRING, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@a_n19
PREHOOK: query: CREATE TABLE b_n15(key STRING, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@b_n15
POSTHOOK: query: CREATE TABLE b_n15(key STRING, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@b_n15
PREHOOK: query: CREATE TABLE c_n4(key STRING, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@c_n4
POSTHOOK: query: CREATE TABLE c_n4(key STRING, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@c_n4
PREHOOK: query: explain
from
(
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union all select * from src)z ON (x.value = z.value)
union all
SELECT x.key, y.value
FROM src x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union all select key, value from src union all select key, value from src)z ON (x.value = z.value)
union all
SELECT x.key, y.value
FROM src1 x JOIN src1 y ON (x.key = y.key) 
JOIN (select key, value from src1 union all select key, value from src union all select key, value from src union all select key, value from src)z ON (x.value = z.value)
) tmp
INSERT OVERWRITE TABLE a_n19 SELECT tmp.key, tmp.value
INSERT OVERWRITE TABLE b_n15 SELECT tmp.key, tmp.value
INSERT OVERWRITE TABLE c_n4 SELECT tmp.key, tmp.value
PREHOOK: type: QUERY
POSTHOOK: query: explain
from
(
SELECT x.key, y.value
FROM src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union all select * from src)z ON (x.value = z.value)
union all
SELECT x.key, y.value
FROM src x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union all select key, value from src union all select key, value from src)z ON (x.value = z.value)
union all
SELECT x.key, y.value
FROM src1 x JOIN src1 y ON (x.key = y.key) 
JOIN (select key, value from src1 union all select key, value from src union all select key, value from src union all select key, value from src)z ON (x.value = z.value)
) tmp
INSERT OVERWRITE TABLE a_n19 SELECT tmp.key, tmp.value
INSERT OVERWRITE TABLE b_n15 SELECT tmp.key, tmp.value
INSERT OVERWRITE TABLE c_n4 SELECT tmp.key, tmp.value
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 9 (BROADCAST_EDGE)
Map 10 <- Union 11 (CONTAINS)
Map 12 <- Union 11 (CONTAINS)
Map 14 <- Union 15 (CONTAINS)
Map 16 <- Union 15 (CONTAINS)
Map 17 <- Union 15 (CONTAINS)
Map 19 <- Map 9 (BROADCAST_EDGE), Union 3 (CONTAINS)
Map 20 <- Map 9 (BROADCAST_EDGE), Union 3 (CONTAINS)
Map 21 <- Map 9 (BROADCAST_EDGE), Union 3 (CONTAINS)
Map 22 <- Map 9 (BROADCAST_EDGE), Union 3 (CONTAINS)
Map 9 <- Map 18 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Union 11 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 4 <- Union 3 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Union 3 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Union 3 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 1 (SIMPLE_EDGE), Map 13 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE), Union 15 (SIMPLE_EDGE), Union 3 (CONTAINS)

Stage-5
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.a_n19"}
        Stage-4
          Dependency Collection{}
            Stage-3
              Reducer 4 llap
              File Output Operator [FS_82]
                Group By Operator [GBY_80] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Union 3 [CUSTOM_SIMPLE_EDGE]
                  <-Map 19 [CONTAINS] llap
                    File Output Operator [FS_212]
                      table:{"name:":"default.a_n19"}
                      Select Operator [SEL_209] (rows=1677 width=10)
                        Output:["_col0","_col1"]
                        Map Join Operator [MAPJOIN_207] (rows=1677 width=10)
                          Conds:RS_291._col1=SEL_208._col0(Inner),Output:["_col0","_col3"]
                        <-Map 9 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_291]
                            PartitionCols:_col1
                            Map Join Operator [MAPJOIN_290] (rows=27 width=7)
                              Conds:SEL_288._col0=RS_286._col0(Inner),Output:["_col0","_col1","_col3"]
                            <-Map 18 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_286]
                                PartitionCols:_col0
                                Select Operator [SEL_285] (rows=25 width=7)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_284] (rows=25 width=7)
                                    predicate:key is not null
                                    TableScan [TS_49] (rows=25 width=7)
                                      default@src1,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                            <-Select Operator [SEL_288] (rows=25 width=7)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_287] (rows=25 width=7)
                                  predicate:(key is not null and value is not null)
                                  TableScan [TS_3] (rows=25 width=7)
                                    default@src1,x,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                        <-Select Operator [SEL_208] (rows=25 width=7)
                            Output:["_col0"]
                            Filter Operator [FIL_206] (rows=25 width=7)
                              predicate:value is not null
                              TableScan [TS_204] (rows=25 width=7)
                                Output:["value"]
                    Reduce Output Operator [RS_221]
                      Group By Operator [GBY_218] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_213] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_209]
                    File Output Operator [FS_214]
                      table:{"name:":"default.b_n15"}
                       Please refer to the previous Select Operator [SEL_209]
                    Reduce Output Operator [RS_222]
                      Group By Operator [GBY_219] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_215] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_209]
                    File Output Operator [FS_216]
                      table:{"name:":"default.c_n4"}
                       Please refer to the previous Select Operator [SEL_209]
                    Reduce Output Operator [RS_223]
                      Group By Operator [GBY_220] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_217] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_209]
                  <-Map 20 [CONTAINS] llap
                    File Output Operator [FS_232]
                      table:{"name:":"default.a_n19"}
                      Select Operator [SEL_229] (rows=1677 width=10)
                        Output:["_col0","_col1"]
                        Map Join Operator [MAPJOIN_227] (rows=1677 width=10)
                          Conds:RS_292._col1=SEL_228._col0(Inner),Output:["_col0","_col3"]
                        <-Map 9 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_292]
                            PartitionCols:_col1
                             Please refer to the previous Map Join Operator [MAPJOIN_290]
                        <-Select Operator [SEL_228] (rows=500 width=10)
                            Output:["_col0"]
                            Filter Operator [FIL_226] (rows=500 width=10)
                              predicate:value is not null
                              TableScan [TS_224] (rows=500 width=10)
                                Output:["value"]
                    Reduce Output Operator [RS_241]
                      Group By Operator [GBY_238] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_233] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_229]
                    File Output Operator [FS_234]
                      table:{"name:":"default.b_n15"}
                       Please refer to the previous Select Operator [SEL_229]
                    Reduce Output Operator [RS_242]
                      Group By Operator [GBY_239] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_235] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_229]
                    File Output Operator [FS_236]
                      table:{"name:":"default.c_n4"}
                       Please refer to the previous Select Operator [SEL_229]
                    Reduce Output Operator [RS_243]
                      Group By Operator [GBY_240] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_237] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_229]
                  <-Map 21 [CONTAINS] llap
                    File Output Operator [FS_252]
                      table:{"name:":"default.a_n19"}
                      Select Operator [SEL_249] (rows=1677 width=10)
                        Output:["_col0","_col1"]
                        Map Join Operator [MAPJOIN_247] (rows=1677 width=10)
                          Conds:RS_293._col1=SEL_248._col0(Inner),Output:["_col0","_col3"]
                        <-Map 9 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_293]
                            PartitionCols:_col1
                             Please refer to the previous Map Join Operator [MAPJOIN_290]
                        <-Select Operator [SEL_248] (rows=500 width=10)
                            Output:["_col0"]
                            Filter Operator [FIL_246] (rows=500 width=10)
                              predicate:value is not null
                              TableScan [TS_244] (rows=500 width=10)
                                Output:["value"]
                    Reduce Output Operator [RS_261]
                      Group By Operator [GBY_258] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_253] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_249]
                    File Output Operator [FS_254]
                      table:{"name:":"default.b_n15"}
                       Please refer to the previous Select Operator [SEL_249]
                    Reduce Output Operator [RS_262]
                      Group By Operator [GBY_259] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_255] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_249]
                    File Output Operator [FS_256]
                      table:{"name:":"default.c_n4"}
                       Please refer to the previous Select Operator [SEL_249]
                    Reduce Output Operator [RS_263]
                      Group By Operator [GBY_260] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_257] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_249]
                  <-Map 22 [CONTAINS] llap
                    File Output Operator [FS_272]
                      table:{"name:":"default.a_n19"}
                      Select Operator [SEL_269] (rows=1677 width=10)
                        Output:["_col0","_col1"]
                        Map Join Operator [MAPJOIN_267] (rows=1677 width=10)
                          Conds:RS_294._col1=SEL_268._col0(Inner),Output:["_col0","_col3"]
                        <-Map 9 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_294]
                            PartitionCols:_col1
                             Please refer to the previous Map Join Operator [MAPJOIN_290]
                        <-Select Operator [SEL_268] (rows=500 width=10)
                            Output:["_col0"]
                            Filter Operator [FIL_266] (rows=500 width=10)
                              predicate:value is not null
                              TableScan [TS_264] (rows=500 width=10)
                                Output:["value"]
                    Reduce Output Operator [RS_281]
                      Group By Operator [GBY_278] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_273] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_269]
                    File Output Operator [FS_274]
                      table:{"name:":"default.b_n15"}
                       Please refer to the previous Select Operator [SEL_269]
                    Reduce Output Operator [RS_282]
                      Group By Operator [GBY_279] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_275] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_269]
                    File Output Operator [FS_276]
                      table:{"name:":"default.c_n4"}
                       Please refer to the previous Select Operator [SEL_269]
                    Reduce Output Operator [RS_283]
                      Group By Operator [GBY_280] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_277] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_269]
                  <-Reducer 2 [CONTAINS] llap
                    File Output Operator [FS_152]
                      table:{"name:":"default.a_n19"}
                      Select Operator [SEL_150] (rows=605 width=10)
                        Output:["_col0","_col1"]
                        Merge Join Operator [MERGEJOIN_149] (rows=605 width=10)
                          Conds:RS_301._col3=Union 11._col0(Inner),Output:["_col1","_col2"]
                        <-Map 1 [SIMPLE_EDGE] vectorized, llap
                          SHUFFLE [RS_301]
                            PartitionCols:_col3
                            Map Join Operator [MAPJOIN_299] (rows=550 width=10)
                              Conds:SEL_297._col0=RS_289._col0(Inner),Output:["_col1","_col2","_col3"]
                            <-Map 9 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_289]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_288]
                            <-Select Operator [SEL_297] (rows=500 width=10)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_295] (rows=500 width=10)
                                  predicate:key is not null
                                  TableScan [TS_0] (rows=500 width=10)
                                    default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                        <-Union 11 [SIMPLE_EDGE]
                          <-Map 10 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_307]
                              PartitionCols:_col0
                              Select Operator [SEL_306] (rows=25 width=7)
                                Output:["_col0"]
                                Filter Operator [FIL_305] (rows=25 width=7)
                                  predicate:value is not null
                                  TableScan [TS_179] (rows=25 width=7)
                                    Output:["value"]
                          <-Map 12 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_310]
                              PartitionCols:_col0
                              Select Operator [SEL_309] (rows=500 width=10)
                                Output:["_col0"]
                                Filter Operator [FIL_308] (rows=500 width=10)
                                  predicate:value is not null
                                  TableScan [TS_184] (rows=500 width=10)
                                    Output:["value"]
                    Reduce Output Operator [RS_161]
                      Group By Operator [GBY_158] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_153] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_150]
                    File Output Operator [FS_154]
                      table:{"name:":"default.b_n15"}
                       Please refer to the previous Select Operator [SEL_150]
                    Reduce Output Operator [RS_162]
                      Group By Operator [GBY_159] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_155] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_150]
                    File Output Operator [FS_156]
                      table:{"name:":"default.c_n4"}
                       Please refer to the previous Select Operator [SEL_150]
                    Reduce Output Operator [RS_163]
                      Group By Operator [GBY_160] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_157] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_150]
                  <-Reducer 8 [CONTAINS] llap
                    File Output Operator [FS_167]
                      table:{"name:":"default.a_n19"}
                      Select Operator [SEL_165] (rows=1127 width=10)
                        Output:["_col0","_col1"]
                        Merge Join Operator [MERGEJOIN_164] (rows=1127 width=10)
                          Conds:RS_41._col1=Union 15._col0(Inner),Output:["_col0","_col3"]
                        <-Reducer 7 [SIMPLE_EDGE] llap
                          SHUFFLE [RS_41]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_138] (rows=550 width=10)
                              Conds:RS_300._col0=RS_304._col0(Inner),Output:["_col0","_col1","_col3"]
                            <-Map 1 [SIMPLE_EDGE] vectorized, llap
                              SHUFFLE [RS_300]
                                PartitionCols:_col0
                                Select Operator [SEL_298] (rows=500 width=10)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_296] (rows=500 width=10)
                                    predicate:(key is not null and value is not null)
                                     Please refer to the previous TableScan [TS_0]
                            <-Map 13 [SIMPLE_EDGE] vectorized, llap
                              SHUFFLE [RS_304]
                                PartitionCols:_col0
                                Select Operator [SEL_303] (rows=500 width=10)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_302] (rows=500 width=10)
                                    predicate:key is not null
                                    TableScan [TS_24] (rows=500 width=10)
                                      default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                        <-Union 15 [SIMPLE_EDGE]
                          <-Map 14 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_313]
                              PartitionCols:_col0
                              Select Operator [SEL_312] (rows=25 width=7)
                                Output:["_col0"]
                                Filter Operator [FIL_311] (rows=25 width=7)
                                  predicate:value is not null
                                  TableScan [TS_189] (rows=25 width=7)
                                    Output:["value"]
                          <-Map 16 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_316]
                              PartitionCols:_col0
                              Select Operator [SEL_315] (rows=500 width=10)
                                Output:["_col0"]
                                Filter Operator [FIL_314] (rows=500 width=10)
                                  predicate:value is not null
                                  TableScan [TS_194] (rows=500 width=10)
                                    Output:["value"]
                          <-Map 17 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_319]
                              PartitionCols:_col0
                              Select Operator [SEL_318] (rows=500 width=10)
                                Output:["_col0"]
                                Filter Operator [FIL_317] (rows=500 width=10)
                                  predicate:value is not null
                                  TableScan [TS_199] (rows=500 width=10)
                                    Output:["value"]
                    Reduce Output Operator [RS_176]
                      Group By Operator [GBY_173] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_168] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_165]
                    File Output Operator [FS_169]
                      table:{"name:":"default.b_n15"}
                       Please refer to the previous Select Operator [SEL_165]
                    Reduce Output Operator [RS_177]
                      Group By Operator [GBY_174] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_170] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_165]
                    File Output Operator [FS_171]
                      table:{"name:":"default.c_n4"}
                       Please refer to the previous Select Operator [SEL_165]
                    Reduce Output Operator [RS_178]
                      Group By Operator [GBY_175] (rows=1 width=880)
                        Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                        Select Operator [SEL_172] (rows=3409 width=10)
                          Output:["key","value"]
                           Please refer to the previous Select Operator [SEL_165]
              Reducer 5 llap
              File Output Operator [FS_91]
                Group By Operator [GBY_89] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <- Please refer to the previous Union 3 [CUSTOM_SIMPLE_EDGE]
              Reducer 6 llap
              File Output Operator [FS_100]
                Group By Operator [GBY_98] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <- Please refer to the previous Union 3 [CUSTOM_SIMPLE_EDGE]
Stage-6
  Stats Work{}
    Stage-1
      Move Operator
        table:{"name:":"default.b_n15"}
         Please refer to the previous Stage-4
Stage-7
  Stats Work{}
    Stage-2
      Move Operator
        table:{"name:":"default.c_n4"}
         Please refer to the previous Stage-4

PREHOOK: query: explain
FROM
( 
SELECT x.key as key, y.value as value from src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value) 
union
SELECT x.key as key, y.value as value from src x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src)z ON (x.value = z.value)
union
SELECT x.key as key, y.value as value from src1 x JOIN src1 y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src union select key, value from src)z ON (x.value = z.value)
) tmp
INSERT OVERWRITE TABLE a_n19 SELECT tmp.key, tmp.value
INSERT OVERWRITE TABLE b_n15 SELECT tmp.key, tmp.value
INSERT OVERWRITE TABLE c_n4 SELECT tmp.key, tmp.value
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM
( 
SELECT x.key as key, y.value as value from src1 x JOIN src y ON (x.key = y.key) 
JOIN (select * from src1 union select * from src)z ON (x.value = z.value) 
union
SELECT x.key as key, y.value as value from src x JOIN src y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src)z ON (x.value = z.value)
union
SELECT x.key as key, y.value as value from src1 x JOIN src1 y ON (x.key = y.key) 
JOIN (select key, value from src1 union select key, value from src union select key, value from src union select key, value from src)z ON (x.value = z.value)
) tmp
INSERT OVERWRITE TABLE a_n19 SELECT tmp.key, tmp.value
INSERT OVERWRITE TABLE b_n15 SELECT tmp.key, tmp.value
INSERT OVERWRITE TABLE c_n4 SELECT tmp.key, tmp.value
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 12 (BROADCAST_EDGE)
Map 12 <- Map 25 (BROADCAST_EDGE)
Map 13 <- Union 14 (CONTAINS)
Map 16 <- Union 14 (CONTAINS)
Map 18 <- Union 19 (CONTAINS)
Map 23 <- Union 19 (CONTAINS)
Map 24 <- Union 21 (CONTAINS)
Map 26 <- Union 27 (CONTAINS)
Map 33 <- Union 27 (CONTAINS)
Map 34 <- Union 29 (CONTAINS)
Map 35 <- Union 31 (CONTAINS)
Reducer 10 <- Map 1 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE), Reducer 22 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 15 <- Union 14 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 15 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 20 <- Union 19 (SIMPLE_EDGE), Union 21 (CONTAINS)
Reducer 22 <- Union 21 (SIMPLE_EDGE)
Reducer 28 <- Union 27 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 30 <- Union 29 (SIMPLE_EDGE), Union 31 (CONTAINS)
Reducer 32 <- Map 12 (BROADCAST_EDGE), Union 31 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 4 <- Union 3 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 6 <- Union 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Reducer 6 (CUSTOM_SIMPLE_EDGE)
Reducer 9 <- Reducer 6 (CUSTOM_SIMPLE_EDGE)

Stage-5
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.a_n19"}
        Stage-4
          Dependency Collection{}
            Stage-3
              Reducer 7 llap
              File Output Operator [FS_130]
                Group By Operator [GBY_128] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 6 [CUSTOM_SIMPLE_EDGE] llap
                  PARTITION_ONLY_SHUFFLE [RS_127]
                    Group By Operator [GBY_126] (rows=1 width=880)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_125] (rows=544 width=10)
                        Output:["key","value"]
                        Group By Operator [GBY_120] (rows=544 width=10)
                          Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                        <-Union 5 [SIMPLE_EDGE]
                          <-Reducer 32 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_360]
                              PartitionCols:_col0, _col1
                              Group By Operator [GBY_359] (rows=1089 width=10)
                                Output:["_col0","_col1"],keys:_col0, _col1
                                Select Operator [SEL_358] (rows=484 width=10)
                                  Output:["_col0","_col1"]
                                  Map Join Operator [MAPJOIN_357] (rows=484 width=10)
                                    Conds:RS_292._col1=SEL_356._col1(Inner),Output:["_col0","_col3"]
                                  <-Map 12 [BROADCAST_EDGE] vectorized, llap
                                    BROADCAST [RS_292]
                                      PartitionCols:_col1
                                      Map Join Operator [MAPJOIN_291] (rows=27 width=7)
                                        Conds:SEL_289._col0=RS_287._col0(Inner),Output:["_col0","_col1","_col3"]
                                      <-Map 25 [BROADCAST_EDGE] vectorized, llap
                                        BROADCAST [RS_287]
                                          PartitionCols:_col0
                                          Select Operator [SEL_286] (rows=25 width=7)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_285] (rows=25 width=7)
                                              predicate:key is not null
                                              TableScan [TS_72] (rows=25 width=7)
                                                default@src1,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                                      <-Select Operator [SEL_289] (rows=25 width=7)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_288] (rows=25 width=7)
                                            predicate:(key is not null and value is not null)
                                            TableScan [TS_3] (rows=25 width=7)
                                              default@src1,x,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                                  <-Select Operator [SEL_356] (rows=440 width=10)
                                      Output:["_col1"]
                                      Group By Operator [GBY_355] (rows=440 width=10)
                                        Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                      <-Union 31 [SIMPLE_EDGE]
                                        <-Map 35 [CONTAINS] vectorized, llap
                                          Reduce Output Operator [RS_372]
                                            PartitionCols:_col0, _col1
                                            Group By Operator [GBY_371] (rows=881 width=10)
                                              Output:["_col0","_col1"],keys:_col1, _col0
                                              Select Operator [SEL_370] (rows=500 width=10)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_369] (rows=500 width=10)
                                                  predicate:value is not null
                                                  TableScan [TS_279] (rows=500 width=10)
                                                    Output:["key","value"]
                                        <-Reducer 30 [CONTAINS] vectorized, llap
                                          Reduce Output Operator [RS_354]
                                            PartitionCols:_col0, _col1
                                            Group By Operator [GBY_353] (rows=881 width=10)
                                              Output:["_col0","_col1"],keys:_col1, _col0
                                              Select Operator [SEL_352] (rows=381 width=10)
                                                Output:["_col0","_col1"]
                                                Group By Operator [GBY_351] (rows=381 width=10)
                                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                                <-Union 29 [SIMPLE_EDGE]
                                                  <-Map 34 [CONTAINS] vectorized, llap
                                                    Reduce Output Operator [RS_368]
                                                      PartitionCols:_col0, _col1
                                                      Group By Operator [GBY_367] (rows=762 width=10)
                                                        Output:["_col0","_col1"],keys:_col1, _col0
                                                        Select Operator [SEL_366] (rows=500 width=10)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_365] (rows=500 width=10)
                                                            predicate:value is not null
                                                            TableScan [TS_273] (rows=500 width=10)
                                                              Output:["key","value"]
                                                  <-Reducer 28 [CONTAINS] vectorized, llap
                                                    Reduce Output Operator [RS_350]
                                                      PartitionCols:_col0, _col1
                                                      Group By Operator [GBY_349] (rows=762 width=10)
                                                        Output:["_col0","_col1"],keys:_col1, _col0
                                                        Select Operator [SEL_348] (rows=262 width=10)
                                                          Output:["_col0","_col1"]
                                                          Group By Operator [GBY_347] (rows=262 width=10)
                                                            Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                                          <-Union 27 [SIMPLE_EDGE]
                                                            <-Map 26 [CONTAINS] vectorized, llap
                                                              Reduce Output Operator [RS_346]
                                                                PartitionCols:_col0, _col1
                                                                Group By Operator [GBY_345] (rows=525 width=10)
                                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                                  Select Operator [SEL_344] (rows=25 width=7)
                                                                    Output:["_col0","_col1"]
                                                                    Filter Operator [FIL_343] (rows=25 width=7)
                                                                      predicate:value is not null
                                                                      TableScan [TS_243] (rows=25 width=7)
                                                                        Output:["key","value"]
                                                            <-Map 33 [CONTAINS] vectorized, llap
                                                              Reduce Output Operator [RS_364]
                                                                PartitionCols:_col0, _col1
                                                                Group By Operator [GBY_363] (rows=525 width=10)
                                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                                  Select Operator [SEL_362] (rows=500 width=10)
                                                                    Output:["_col0","_col1"]
                                                                    Filter Operator [FIL_361] (rows=500 width=10)
                                                                      predicate:value is not null
                                                                      TableScan [TS_267] (rows=500 width=10)
                                                                        Output:["key","value"]
                          <-Reducer 4 [CONTAINS] vectorized, llap
                            Reduce Output Operator [RS_305]
                              PartitionCols:_col0, _col1
                              Group By Operator [GBY_304] (rows=1089 width=10)
                                Output:["_col0","_col1"],keys:_col0, _col1
                                Group By Operator [GBY_303] (rows=605 width=10)
                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                <-Union 3 [SIMPLE_EDGE]
                                  <-Reducer 11 [CONTAINS] llap
                                    Reduce Output Operator [RS_207]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_206] (rows=1210 width=10)
                                        Output:["_col0","_col1"],keys:_col0, _col1
                                        Select Operator [SEL_204] (rows=605 width=10)
                                          Output:["_col0","_col1"]
                                          Merge Join Operator [MERGEJOIN_203] (rows=605 width=10)
                                            Conds:RS_58._col1=RS_318._col1(Inner),Output:["_col0","_col3"]
                                          <-Reducer 10 [SIMPLE_EDGE] llap
                                            SHUFFLE [RS_58]
                                              PartitionCols:_col1
                                              Merge Join Operator [MERGEJOIN_186] (rows=550 width=10)
                                                Conds:RS_298._col0=RS_315._col0(Inner),Output:["_col0","_col1","_col3"]
                                              <-Map 1 [SIMPLE_EDGE] vectorized, llap
                                                SHUFFLE [RS_298]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_296] (rows=500 width=10)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_294] (rows=500 width=10)
                                                      predicate:(key is not null and value is not null)
                                                      TableScan [TS_0] (rows=500 width=10)
                                                        default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                                              <-Map 17 [SIMPLE_EDGE] vectorized, llap
                                                SHUFFLE [RS_315]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_314] (rows=500 width=10)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_313] (rows=500 width=10)
                                                      predicate:key is not null
                                                      TableScan [TS_29] (rows=500 width=10)
                                                        default@src,y,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                                          <-Reducer 22 [SIMPLE_EDGE] vectorized, llap
                                            SHUFFLE [RS_318]
                                              PartitionCols:_col1
                                              Select Operator [SEL_317] (rows=381 width=10)
                                                Output:["_col1"]
                                                Group By Operator [GBY_316] (rows=381 width=10)
                                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                                <-Union 21 [SIMPLE_EDGE]
                                                  <-Map 24 [CONTAINS] vectorized, llap
                                                    Reduce Output Operator [RS_342]
                                                      PartitionCols:_col0, _col1
                                                      Group By Operator [GBY_341] (rows=762 width=10)
                                                        Output:["_col0","_col1"],keys:_col1, _col0
                                                        Select Operator [SEL_340] (rows=500 width=10)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_339] (rows=500 width=10)
                                                            predicate:value is not null
                                                            TableScan [TS_237] (rows=500 width=10)
                                                              Output:["key","value"]
                                                  <-Reducer 20 [CONTAINS] vectorized, llap
                                                    Reduce Output Operator [RS_334]
                                                      PartitionCols:_col0, _col1
                                                      Group By Operator [GBY_333] (rows=762 width=10)
                                                        Output:["_col0","_col1"],keys:_col1, _col0
                                                        Select Operator [SEL_332] (rows=262 width=10)
                                                          Output:["_col0","_col1"]
                                                          Group By Operator [GBY_331] (rows=262 width=10)
                                                            Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                                          <-Union 19 [SIMPLE_EDGE]
                                                            <-Map 18 [CONTAINS] vectorized, llap
                                                              Reduce Output Operator [RS_330]
                                                                PartitionCols:_col0, _col1
                                                                Group By Operator [GBY_329] (rows=525 width=10)
                                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                                  Select Operator [SEL_328] (rows=25 width=7)
                                                                    Output:["_col0","_col1"]
                                                                    Filter Operator [FIL_327] (rows=25 width=7)
                                                                      predicate:value is not null
                                                                      TableScan [TS_220] (rows=25 width=7)
                                                                        Output:["key","value"]
                                                            <-Map 23 [CONTAINS] vectorized, llap
                                                              Reduce Output Operator [RS_338]
                                                                PartitionCols:_col0, _col1
                                                                Group By Operator [GBY_337] (rows=525 width=10)
                                                                  Output:["_col0","_col1"],keys:_col1, _col0
                                                                  Select Operator [SEL_336] (rows=500 width=10)
                                                                    Output:["_col0","_col1"]
                                                                    Filter Operator [FIL_335] (rows=500 width=10)
                                                                      predicate:value is not null
                                                                      TableScan [TS_231] (rows=500 width=10)
                                                                        Output:["key","value"]
                                  <-Reducer 2 [CONTAINS] llap
                                    Reduce Output Operator [RS_198]
                                      PartitionCols:_col0, _col1
                                      Group By Operator [GBY_197] (rows=1210 width=10)
                                        Output:["_col0","_col1"],keys:_col0, _col1
                                        Select Operator [SEL_195] (rows=605 width=10)
                                          Output:["_col0","_col1"]
                                          Merge Join Operator [MERGEJOIN_194] (rows=605 width=10)
                                            Conds:RS_299._col3=RS_302._col1(Inner),Output:["_col1","_col2"]
                                          <-Map 1 [SIMPLE_EDGE] vectorized, llap
                                            SHUFFLE [RS_299]
                                              PartitionCols:_col3
                                              Map Join Operator [MAPJOIN_297] (rows=550 width=10)
                                                Conds:SEL_295._col0=RS_290._col0(Inner),Output:["_col1","_col2","_col3"]
                                              <-Map 12 [BROADCAST_EDGE] vectorized, llap
                                                BROADCAST [RS_290]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_289]
                                              <-Select Operator [SEL_295] (rows=500 width=10)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_293] (rows=500 width=10)
                                                    predicate:key is not null
                                                     Please refer to the previous TableScan [TS_0]
                                          <-Reducer 15 [SIMPLE_EDGE] vectorized, llap
                                            SHUFFLE [RS_302]
                                              PartitionCols:_col1
                                              Select Operator [SEL_301] (rows=262 width=10)
                                                Output:["_col1"]
                                                Group By Operator [GBY_300] (rows=262 width=10)
                                                  Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                                <-Union 14 [SIMPLE_EDGE]
                                                  <-Map 13 [CONTAINS] vectorized, llap
                                                    Reduce Output Operator [RS_322]
                                                      PartitionCols:_col0, _col1
                                                      Group By Operator [GBY_321] (rows=525 width=10)
                                                        Output:["_col0","_col1"],keys:_col1, _col0
                                                        Select Operator [SEL_320] (rows=25 width=7)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_319] (rows=25 width=7)
                                                            predicate:value is not null
                                                            TableScan [TS_208] (rows=25 width=7)
                                                              Output:["key","value"]
                                                  <-Map 16 [CONTAINS] vectorized, llap
                                                    Reduce Output Operator [RS_326]
                                                      PartitionCols:_col0, _col1
                                                      Group By Operator [GBY_325] (rows=525 width=10)
                                                        Output:["_col0","_col1"],keys:_col1, _col0
                                                        Select Operator [SEL_324] (rows=500 width=10)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_323] (rows=500 width=10)
                                                            predicate:value is not null
                                                            TableScan [TS_214] (rows=500 width=10)
                                                              Output:["key","value"]
              Reducer 8 llap
              File Output Operator [FS_139]
                Group By Operator [GBY_137] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 6 [CUSTOM_SIMPLE_EDGE] llap
                  PARTITION_ONLY_SHUFFLE [RS_136]
                    Group By Operator [GBY_135] (rows=1 width=880)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_134] (rows=544 width=10)
                        Output:["key","value"]
                         Please refer to the previous Group By Operator [GBY_120]
              Reducer 9 llap
              File Output Operator [FS_148]
                Group By Operator [GBY_146] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 6 [CUSTOM_SIMPLE_EDGE] llap
                  PARTITION_ONLY_SHUFFLE [RS_145]
                    Group By Operator [GBY_144] (rows=1 width=880)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_143] (rows=544 width=10)
                        Output:["key","value"]
                         Please refer to the previous Group By Operator [GBY_120]
Stage-6
  Stats Work{}
    Stage-1
      Move Operator
        table:{"name:":"default.b_n15"}
         Please refer to the previous Stage-4
Stage-7
  Stats Work{}
    Stage-2
      Move Operator
        table:{"name:":"default.c_n4"}
         Please refer to the previous Stage-4

PREHOOK: query: CREATE TABLE DEST1_n172(key STRING, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DEST1_n172
POSTHOOK: query: CREATE TABLE DEST1_n172(key STRING, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DEST1_n172
PREHOOK: query: CREATE TABLE DEST2_n43(key STRING, val1 STRING, val2 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DEST2_n43
POSTHOOK: query: CREATE TABLE DEST2_n43(key STRING, val1 STRING, val2 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DEST2_n43
PREHOOK: query: explain 
FROM (select 'tst1' as key, cast(count(1) as string) as value from src s1
                         UNION DISTINCT  
      select s2.key as key, s2.value as value from src s2) unionsrc_n4
INSERT OVERWRITE TABLE DEST1_n172 SELECT unionsrc_n4.key, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) GROUP BY unionsrc_n4.key
INSERT OVERWRITE TABLE DEST2_n43 SELECT unionsrc_n4.key, unionsrc_n4.value, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) GROUP BY unionsrc_n4.key, unionsrc_n4.value
PREHOOK: type: QUERY
POSTHOOK: query: explain 
FROM (select 'tst1' as key, cast(count(1) as string) as value from src s1
                         UNION DISTINCT  
      select s2.key as key, s2.value as value from src s2) unionsrc_n4
INSERT OVERWRITE TABLE DEST1_n172 SELECT unionsrc_n4.key, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) GROUP BY unionsrc_n4.key
INSERT OVERWRITE TABLE DEST2_n43 SELECT unionsrc_n4.key, unionsrc_n4.value, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) GROUP BY unionsrc_n4.key, unionsrc_n4.value
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 8 <- Union 3 (CONTAINS)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 4 <- Union 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)

Stage-4
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.dest1_n172"}
        Stage-3
          Dependency Collection{}
            Stage-2
              Reducer 6 llap
              File Output Operator [FS_28]
                Group By Operator [GBY_26] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 5 [CUSTOM_SIMPLE_EDGE] llap
                  File Output Operator [FS_21]
                    table:{"name:":"default.dest1_n172"}
                    Select Operator [SEL_19] (rows=1 width=272)
                      Output:["_col0","_col1"]
                      Group By Operator [GBY_18] (rows=1 width=96)
                        Output:["_col0","_col1"],aggregations:["count(DISTINCT KEY._col1:0._col0)"],keys:KEY._col0
                      <-Reducer 4 [SIMPLE_EDGE] llap
                        PARTITION_ONLY_SHUFFLE [RS_17]
                          PartitionCols:_col0
                          Group By Operator [GBY_16] (rows=1 width=280)
                            Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, substr(_col1, 5)
                            Group By Operator [GBY_13] (rows=1 width=272)
                              Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                            <-Union 3 [SIMPLE_EDGE]
                              <-Map 8 [CONTAINS] vectorized, llap
                                Reduce Output Operator [RS_63]
                                  PartitionCols:_col0, _col1
                                  Group By Operator [GBY_62] (rows=1 width=272)
                                    Output:["_col0","_col1"],keys:_col0, _col1
                                    Select Operator [SEL_61] (rows=500 width=10)
                                      Output:["_col0","_col1"]
                                      TableScan [TS_48] (rows=500 width=10)
                                        Output:["key","value"]
                              <-Reducer 2 [CONTAINS] vectorized, llap
                                Reduce Output Operator [RS_59]
                                  PartitionCols:_col0, _col1
                                  Group By Operator [GBY_58] (rows=1 width=272)
                                    Output:["_col0","_col1"],keys:_col0, _col1
                                    Select Operator [SEL_57] (rows=1 width=272)
                                      Output:["_col0","_col1"]
                                      Group By Operator [GBY_56] (rows=1 width=8)
                                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_55]
                                          Group By Operator [GBY_54] (rows=1 width=8)
                                            Output:["_col0"],aggregations:["count()"]
                                            Select Operator [SEL_53] (rows=500 width=10)
                                              TableScan [TS_0] (rows=500 width=10)
                                                default@src,s1,Tbl:COMPLETE,Col:COMPLETE
                  PARTITION_ONLY_SHUFFLE [RS_25]
                    Group By Operator [GBY_24] (rows=1 width=880)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_23] (rows=1 width=272)
                        Output:["key","value"]
                         Please refer to the previous Select Operator [SEL_19]
              Reducer 7 llap
              File Output Operator [FS_42]
                Group By Operator [GBY_40] (rows=1 width=1320)
                  Output:["_col0","_col1","_col2"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)","compute_stats(VALUE._col2)"]
                <-Reducer 4 [CUSTOM_SIMPLE_EDGE] llap
                  PARTITION_ONLY_SHUFFLE [RS_39]
                    Group By Operator [GBY_38] (rows=1 width=1320)
                      Output:["_col0","_col1","_col2"],aggregations:["compute_stats(key, 'hll')","compute_stats(val1, 'hll')","compute_stats(val2, 'hll')"]
                      Select Operator [SEL_37] (rows=1 width=456)
                        Output:["key","val1","val2"]
                        Select Operator [SEL_33] (rows=1 width=456)
                          Output:["_col0","_col1","_col2"]
                          Group By Operator [GBY_32] (rows=1 width=464)
                            Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, _col1
                             Please refer to the previous Group By Operator [GBY_13]
Stage-5
  Stats Work{}
    Stage-1
      Move Operator
        table:{"name:":"default.dest2_n43"}
         Please refer to the previous Stage-3

PREHOOK: query: EXPLAIN FROM UNIQUEJOIN PRESERVE src a_n19 (a_n19.key), PRESERVE src1 b_n15 (b_n15.key), PRESERVE srcpart c_n4 (c_n4.key) SELECT a_n19.key, b_n15.key, c_n4.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN FROM UNIQUEJOIN PRESERVE src a_n19 (a_n19.key), PRESERVE src1 b_n15 (b_n15.key), PRESERVE srcpart c_n4 (c_n4.key) SELECT a_n19.key, b_n15.key, c_n4.key
POSTHOOK: type: QUERY
Plan not optimized by CBO due to missing feature [Unique_join].

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 llap
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=4400 width=10)
          Output:["_col0","_col1","_col2"]
          Merge Join Operator [MERGEJOIN_9] (rows=4400 width=10)
            Conds:RS_10.key=RS_10.key(Unique),RS_10.key=RS_10.key(Unique),RS_10.key=RS_10.key(Unique),Output:["_col0","_col5","_col10"]
          <-Map 1 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_10]
              PartitionCols:key
              TableScan [TS_0] (rows=500 width=10)
                default@src,a_n19,Tbl:COMPLETE,Col:NONE,Output:["key"]
          <-Map 3 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_11]
              PartitionCols:key
              TableScan [TS_1] (rows=25 width=7)
                default@src1,b_n15,Tbl:COMPLETE,Col:NONE,Output:["key"]
          <-Map 4 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_12]
              PartitionCols:key
              TableScan [TS_2] (rows=2000 width=10)
                default@srcpart,c_n4,Tbl:COMPLETE,Col:NONE,Output:["key"]

PREHOOK: query: EXPLAIN
SELECT 
TRANSFORM(a_n19.key, a_n19.value) USING 'cat' AS (tkey, tvalue)
FROM src a_n19 join src b_n15
on a_n19.key = b_n15.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT 
TRANSFORM(a_n19.key, a_n19.value) USING 'cat' AS (tkey, tvalue)
FROM src a_n19 join src b_n15
on a_n19.key = b_n15.key
POSTHOOK: type: QUERY
Plan not optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2
      File Output Operator [FS_9]
        Transform Operator [SCR_8] (rows=550 width=10)
          command:cat
          Merge Join Operator [MERGEJOIN_14] (rows=550 width=10)
            Conds:RS_16.key=RS_18.key(Inner),Output:["_col0","_col1"]
          <-Map 1 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_16]
              PartitionCols:key
              Filter Operator [FIL_15] (rows=500 width=10)
                predicate:key is not null
                TableScan [TS_0] (rows=500 width=10)
                  default@src,a_n19,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
          <-Map 3 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_18]
              PartitionCols:key
              Filter Operator [FIL_17] (rows=500 width=10)
                predicate:key is not null
                TableScan [TS_1] (rows=500 width=10)
                  default@src,b_n15,Tbl:COMPLETE,Col:NONE,Output:["key"]

PREHOOK: query: explain
FROM (
      select key, value from (
      select 'tst1' as key, cast(count(1) as string) as value, 'tst1' as value2 from src s1
                         UNION all 
      select s2.key as key, s2.value as value, 'tst1' as value2 from src s2) unionsub_n15
                         UNION all
      select key, value from src s0
                             ) unionsrc_n4
INSERT OVERWRITE TABLE DEST1_n172 SELECT unionsrc_n4.key, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) GROUP BY unionsrc_n4.key
INSERT OVERWRITE TABLE DEST2_n43 SELECT unionsrc_n4.key, unionsrc_n4.value, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) 
GROUP BY unionsrc_n4.key, unionsrc_n4.value
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM (
      select key, value from (
      select 'tst1' as key, cast(count(1) as string) as value, 'tst1' as value2 from src s1
                         UNION all 
      select s2.key as key, s2.value as value, 'tst1' as value2 from src s2) unionsub_n15
                         UNION all
      select key, value from src s0
                             ) unionsrc_n4
INSERT OVERWRITE TABLE DEST1_n172 SELECT unionsrc_n4.key, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) GROUP BY unionsrc_n4.key
INSERT OVERWRITE TABLE DEST2_n43 SELECT unionsrc_n4.key, unionsrc_n4.value, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) 
GROUP BY unionsrc_n4.key, unionsrc_n4.value
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 8 <- Union 3 (CONTAINS)
Map 9 <- Union 3 (CONTAINS)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 4 <- Union 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Union 3 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (CUSTOM_SIMPLE_EDGE)

Stage-4
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.dest1_n172"}
        Stage-3
          Dependency Collection{}
            Stage-2
              Reducer 5 llap
              File Output Operator [FS_25]
                Group By Operator [GBY_23] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 4 [CUSTOM_SIMPLE_EDGE] llap
                  File Output Operator [FS_18]
                    table:{"name:":"default.dest1_n172"}
                    Select Operator [SEL_16] (rows=1 width=272)
                      Output:["_col0","_col1"]
                      Group By Operator [GBY_15] (rows=1 width=96)
                        Output:["_col0","_col1"],aggregations:["count(DISTINCT KEY._col1:0._col0)"],keys:KEY._col0
                      <-Union 3 [SIMPLE_EDGE]
                        <-Map 8 [CONTAINS] llap
                          Reduce Output Operator [RS_52]
                            PartitionCols:_col0
                            Group By Operator [GBY_50] (rows=1 width=280)
                              Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, substr(_col1, 5)
                              Select Operator [SEL_48] (rows=500 width=10)
                                Output:["_col0","_col1"]
                                TableScan [TS_47] (rows=500 width=10)
                                  Output:["key","value"]
                          Reduce Output Operator [RS_53]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_51] (rows=1 width=464)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, _col1, substr(_col1, 5)
                               Please refer to the previous Select Operator [SEL_48]
                        <-Map 9 [CONTAINS] llap
                          Reduce Output Operator [RS_59]
                            PartitionCols:_col0
                            Group By Operator [GBY_57] (rows=1 width=280)
                              Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, substr(_col1, 5)
                              Select Operator [SEL_55] (rows=500 width=10)
                                Output:["_col0","_col1"]
                                TableScan [TS_54] (rows=500 width=10)
                                  Output:["key","value"]
                          Reduce Output Operator [RS_60]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_58] (rows=1 width=464)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, _col1, substr(_col1, 5)
                               Please refer to the previous Select Operator [SEL_55]
                        <-Reducer 2 [CONTAINS] llap
                          Reduce Output Operator [RS_45]
                            PartitionCols:_col0
                            Group By Operator [GBY_43] (rows=1 width=280)
                              Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, substr(_col1, 5)
                              Select Operator [SEL_41] (rows=1 width=272)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_40] (rows=1 width=8)
                                  Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                  PARTITION_ONLY_SHUFFLE [RS_63]
                                    Group By Operator [GBY_62] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_61] (rows=500 width=10)
                                        TableScan [TS_0] (rows=500 width=10)
                                          default@src,s1,Tbl:COMPLETE,Col:COMPLETE
                          Reduce Output Operator [RS_46]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_44] (rows=1 width=464)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, _col1, substr(_col1, 5)
                               Please refer to the previous Select Operator [SEL_41]
                  PARTITION_ONLY_SHUFFLE [RS_22]
                    Group By Operator [GBY_21] (rows=1 width=880)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_20] (rows=1 width=272)
                        Output:["key","value"]
                         Please refer to the previous Select Operator [SEL_16]
              Reducer 7 llap
              File Output Operator [FS_39]
                Group By Operator [GBY_37] (rows=1 width=1320)
                  Output:["_col0","_col1","_col2"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)","compute_stats(VALUE._col2)"]
                <-Reducer 6 [CUSTOM_SIMPLE_EDGE] llap
                  File Output Operator [FS_32]
                    table:{"name:":"default.dest2_n43"}
                    Select Operator [SEL_30] (rows=1 width=456)
                      Output:["_col0","_col1","_col2"]
                      Group By Operator [GBY_29] (rows=1 width=280)
                        Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT KEY._col2:0._col0)"],keys:KEY._col0, KEY._col1
                      <- Please refer to the previous Union 3 [SIMPLE_EDGE]
                  PARTITION_ONLY_SHUFFLE [RS_36]
                    Group By Operator [GBY_35] (rows=1 width=1320)
                      Output:["_col0","_col1","_col2"],aggregations:["compute_stats(key, 'hll')","compute_stats(val1, 'hll')","compute_stats(val2, 'hll')"]
                      Select Operator [SEL_34] (rows=1 width=456)
                        Output:["key","val1","val2"]
                         Please refer to the previous Select Operator [SEL_30]
Stage-5
  Stats Work{}
    Stage-1
      Move Operator
        table:{"name:":"default.dest2_n43"}
         Please refer to the previous Stage-3

PREHOOK: query: explain
FROM (
      select 'tst1' as key, cast(count(1) as string) as value, 'tst1' as value2 from src s1
                         UNION all 
      select s2.key as key, s2.value as value, 'tst1' as value2 from src s2
                             ) unionsrc_n4
INSERT OVERWRITE TABLE DEST1_n172 SELECT unionsrc_n4.key, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) GROUP BY unionsrc_n4.key
INSERT OVERWRITE TABLE DEST2_n43 SELECT unionsrc_n4.key, unionsrc_n4.value, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) 
GROUP BY unionsrc_n4.key, unionsrc_n4.value
PREHOOK: type: QUERY
POSTHOOK: query: explain
FROM (
      select 'tst1' as key, cast(count(1) as string) as value, 'tst1' as value2 from src s1
                         UNION all 
      select s2.key as key, s2.value as value, 'tst1' as value2 from src s2
                             ) unionsrc_n4
INSERT OVERWRITE TABLE DEST1_n172 SELECT unionsrc_n4.key, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) GROUP BY unionsrc_n4.key
INSERT OVERWRITE TABLE DEST2_n43 SELECT unionsrc_n4.key, unionsrc_n4.value, COUNT(DISTINCT SUBSTR(unionsrc_n4.value,5)) 
GROUP BY unionsrc_n4.key, unionsrc_n4.value
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 8 <- Union 3 (CONTAINS)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 4 <- Union 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Union 3 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (CUSTOM_SIMPLE_EDGE)

Stage-4
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.dest1_n172"}
        Stage-3
          Dependency Collection{}
            Stage-2
              Reducer 5 llap
              File Output Operator [FS_23]
                Group By Operator [GBY_21] (rows=1 width=880)
                  Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)"]
                <-Reducer 4 [CUSTOM_SIMPLE_EDGE] llap
                  File Output Operator [FS_16]
                    table:{"name:":"default.dest1_n172"}
                    Select Operator [SEL_14] (rows=1 width=272)
                      Output:["_col0","_col1"]
                      Group By Operator [GBY_13] (rows=1 width=96)
                        Output:["_col0","_col1"],aggregations:["count(DISTINCT KEY._col1:0._col0)"],keys:KEY._col0
                      <-Union 3 [SIMPLE_EDGE]
                        <-Map 8 [CONTAINS] llap
                          Reduce Output Operator [RS_50]
                            PartitionCols:_col0
                            Group By Operator [GBY_48] (rows=1 width=280)
                              Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, substr(_col1, 5)
                              Select Operator [SEL_46] (rows=500 width=10)
                                Output:["_col0","_col1"]
                                TableScan [TS_45] (rows=500 width=10)
                                  Output:["key","value"]
                          Reduce Output Operator [RS_51]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_49] (rows=1 width=464)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, _col1, substr(_col1, 5)
                               Please refer to the previous Select Operator [SEL_46]
                        <-Reducer 2 [CONTAINS] llap
                          Reduce Output Operator [RS_43]
                            PartitionCols:_col0
                            Group By Operator [GBY_41] (rows=1 width=280)
                              Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, substr(_col1, 5)
                              Select Operator [SEL_39] (rows=1 width=272)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_38] (rows=1 width=8)
                                  Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                  PARTITION_ONLY_SHUFFLE [RS_54]
                                    Group By Operator [GBY_53] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_52] (rows=500 width=10)
                                        TableScan [TS_0] (rows=500 width=10)
                                          default@src,s1,Tbl:COMPLETE,Col:COMPLETE
                          Reduce Output Operator [RS_44]
                            PartitionCols:_col0, _col1
                            Group By Operator [GBY_42] (rows=1 width=464)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["count(DISTINCT substr(_col1, 5))"],keys:_col0, _col1, substr(_col1, 5)
                               Please refer to the previous Select Operator [SEL_39]
                  PARTITION_ONLY_SHUFFLE [RS_20]
                    Group By Operator [GBY_19] (rows=1 width=880)
                      Output:["_col0","_col1"],aggregations:["compute_stats(key, 'hll')","compute_stats(value, 'hll')"]
                      Select Operator [SEL_18] (rows=1 width=272)
                        Output:["key","value"]
                         Please refer to the previous Select Operator [SEL_14]
              Reducer 7 llap
              File Output Operator [FS_37]
                Group By Operator [GBY_35] (rows=1 width=1320)
                  Output:["_col0","_col1","_col2"],aggregations:["compute_stats(VALUE._col0)","compute_stats(VALUE._col1)","compute_stats(VALUE._col2)"]
                <-Reducer 6 [CUSTOM_SIMPLE_EDGE] llap
                  File Output Operator [FS_30]
                    table:{"name:":"default.dest2_n43"}
                    Select Operator [SEL_28] (rows=1 width=456)
                      Output:["_col0","_col1","_col2"]
                      Group By Operator [GBY_27] (rows=1 width=280)
                        Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT KEY._col2:0._col0)"],keys:KEY._col0, KEY._col1
                      <- Please refer to the previous Union 3 [SIMPLE_EDGE]
                  PARTITION_ONLY_SHUFFLE [RS_34]
                    Group By Operator [GBY_33] (rows=1 width=1320)
                      Output:["_col0","_col1","_col2"],aggregations:["compute_stats(key, 'hll')","compute_stats(val1, 'hll')","compute_stats(val2, 'hll')"]
                      Select Operator [SEL_32] (rows=1 width=456)
                        Output:["key","val1","val2"]
                         Please refer to the previous Select Operator [SEL_28]
Stage-5
  Stats Work{}
    Stage-1
      Move Operator
        table:{"name:":"default.dest2_n43"}
         Please refer to the previous Stage-3

