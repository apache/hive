PREHOOK: query: drop table if exists x_date_dim
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: drop table if exists x_date_dim
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: drop table if exists x_item
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: drop table if exists x_item
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: drop table if exists x_store_sales
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: drop table if exists x_store_sales
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: create table x_date_dim (d_date_sk bigint, d_year int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@x_date_dim
POSTHOOK: query: create table x_date_dim (d_date_sk bigint, d_year int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@x_date_dim
PREHOOK: query: create table x_item (i_item_sk bigint, i_product_name string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@x_item
POSTHOOK: query: create table x_item (i_item_sk bigint, i_product_name string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@x_item
PREHOOK: query: create table x_store_sales (ss_item_sk bigint, dummy string) partitioned by (ss_sold_date_sk bigint)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@x_store_sales
POSTHOOK: query: create table x_store_sales (ss_item_sk bigint, dummy string) partitioned by (ss_sold_date_sk bigint)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@x_store_sales
PREHOOK: query: insert into table x_date_dim
values (1, 1999), (2, 2000), (3, 2001)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@x_date_dim
POSTHOOK: query: insert into table x_date_dim
values (1, 1999), (2, 2000), (3, 2001)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@x_date_dim
POSTHOOK: Lineage: x_date_dim.d_date_sk SCRIPT []
POSTHOOK: Lineage: x_date_dim.d_year SCRIPT []
PREHOOK: query: insert into table x_item values
(1, 'white snow'),
(2, 'solid steel'),
(3, 'dim cloud')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@x_item
POSTHOOK: query: insert into table x_item values
(1, 'white snow'),
(2, 'solid steel'),
(3, 'dim cloud')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@x_item
POSTHOOK: Lineage: x_item.i_item_sk SCRIPT []
POSTHOOK: Lineage: x_item.i_product_name SCRIPT []
PREHOOK: query: insert into table x_store_sales (ss_item_sk, dummy, ss_sold_date_sk)
values
(1, 'Dummy content just to make this table size the bigger among others', 1),
(2, 'Dummy content just to make this table size the bigger among others', 2),
(2, 'Dummy content just to make this table size the bigger among others', 3)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@x_store_sales
POSTHOOK: query: insert into table x_store_sales (ss_item_sk, dummy, ss_sold_date_sk)
values
(1, 'Dummy content just to make this table size the bigger among others', 1),
(2, 'Dummy content just to make this table size the bigger among others', 2),
(2, 'Dummy content just to make this table size the bigger among others', 3)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@x_store_sales
POSTHOOK: Output: default@x_store_sales@ss_sold_date_sk=1
POSTHOOK: Output: default@x_store_sales@ss_sold_date_sk=2
POSTHOOK: Output: default@x_store_sales@ss_sold_date_sk=3
POSTHOOK: Lineage: x_store_sales PARTITION(ss_sold_date_sk=1).dummy SCRIPT []
POSTHOOK: Lineage: x_store_sales PARTITION(ss_sold_date_sk=1).ss_item_sk SCRIPT []
POSTHOOK: Lineage: x_store_sales PARTITION(ss_sold_date_sk=2).dummy SCRIPT []
POSTHOOK: Lineage: x_store_sales PARTITION(ss_sold_date_sk=2).ss_item_sk SCRIPT []
POSTHOOK: Lineage: x_store_sales PARTITION(ss_sold_date_sk=3).dummy SCRIPT []
POSTHOOK: Lineage: x_store_sales PARTITION(ss_sold_date_sk=3).ss_item_sk SCRIPT []
PREHOOK: query: explain
with base as (
  select
    i_product_name product_name, i_item_sk item_sk, d_year year
  from x_store_sales, x_item, x_date_dim
  where
    ss_item_sk = i_item_sk and ss_sold_date_sk = d_date_sk
  group by i_product_name, i_item_sk, d_year
)
select cs1.product_name, cs1.year, cs2.year
from base cs1, base cs2
where
  cs1.item_sk = cs2.item_sk and
  cs1.year = 2000 and
  cs2.year = 2001
PREHOOK: type: QUERY
PREHOOK: Input: default@x_date_dim
PREHOOK: Input: default@x_item
PREHOOK: Input: default@x_store_sales
PREHOOK: Input: default@x_store_sales@ss_sold_date_sk=1
PREHOOK: Input: default@x_store_sales@ss_sold_date_sk=2
PREHOOK: Input: default@x_store_sales@ss_sold_date_sk=3
#### A masked pattern was here ####
POSTHOOK: query: explain
with base as (
  select
    i_product_name product_name, i_item_sk item_sk, d_year year
  from x_store_sales, x_item, x_date_dim
  where
    ss_item_sk = i_item_sk and ss_sold_date_sk = d_date_sk
  group by i_product_name, i_item_sk, d_year
)
select cs1.product_name, cs1.year, cs2.year
from base cs1, base cs2
where
  cs1.item_sk = cs2.item_sk and
  cs1.year = 2000 and
  cs2.year = 2001
POSTHOOK: type: QUERY
POSTHOOK: Input: default@x_date_dim
POSTHOOK: Input: default@x_item
POSTHOOK: Input: default@x_store_sales
POSTHOOK: Input: default@x_store_sales@ss_sold_date_sk=1
POSTHOOK: Input: default@x_store_sales@ss_sold_date_sk=2
POSTHOOK: Input: default@x_store_sales@ss_sold_date_sk=3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 3 <- Map 1 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE), Reducer 2 (BROADCAST_EDGE), Reducer 7 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 4 <- Map 3 (SIMPLE_EDGE)
        Reducer 5 <- Map 3 (SIMPLE_EDGE), Reducer 4 (BROADCAST_EDGE)
        Reducer 7 <- Map 6 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: x_store_sales
                  filterExpr: ss_item_sk is not null (type: boolean)
                  Statistics: Num rows: 3 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ss_item_sk is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: ss_item_sk (type: bigint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: ss_item_sk (type: bigint)
                      Statistics: Num rows: 3 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: ss_sold_date_sk (type: bigint)
                    Reduce Output Operator
                      key expressions: ss_item_sk (type: bigint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: ss_item_sk (type: bigint)
                      Statistics: Num rows: 3 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: ss_sold_date_sk (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: x_item
                  filterExpr: i_item_sk is not null (type: boolean)
                  Statistics: Num rows: 3 Data size: 306 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: i_item_sk is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 306 Basic stats: COMPLETE Column stats: COMPLETE
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      keys:
                        0 ss_item_sk (type: bigint)
                        1 i_item_sk (type: bigint)
                      outputColumnNames: _col0, _col2, _col7, _col8
                      input vertices:
                        0 Reducer 2
                      Statistics: Num rows: 3 Data size: 354 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col2 (type: bigint)
                          1 d_date_sk (type: bigint)
                        outputColumnNames: _col0, _col2, _col7, _col8, _col13
                        input vertices:
                          1 Map 6
                        Statistics: Num rows: 1 Data size: 126 Basic stats: COMPLETE Column stats: COMPLETE
                        Filter Operator
                          predicate: ((_col0 = _col7) and (_col2 = _col13)) (type: boolean)
                          Statistics: Num rows: 1 Data size: 126 Basic stats: COMPLETE Column stats: COMPLETE
                          Select Operator
                            expressions: _col7 (type: bigint), _col8 (type: string)
                            outputColumnNames: _col7, _col8
                            Statistics: Num rows: 1 Data size: 126 Basic stats: COMPLETE Column stats: COMPLETE
                            Group By Operator
                              keys: _col8 (type: string), _col7 (type: bigint), 2001 (type: int)
                              minReductionHashAggr: 0.4
                              mode: hash
                              outputColumnNames: _col0, _col1, _col2
                              Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
                              Reduce Output Operator
                                key expressions: _col0 (type: string), _col1 (type: bigint), 2001 (type: int)
                                null sort order: zzz
                                sort order: +++
                                Map-reduce partition columns: _col0 (type: string), _col1 (type: bigint), 2001 (type: int)
                                Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      keys:
                        0 ss_item_sk (type: bigint)
                        1 i_item_sk (type: bigint)
                      outputColumnNames: _col0, _col2, _col7, _col8
                      input vertices:
                        0 Map 1
                      Statistics: Num rows: 3 Data size: 354 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col2 (type: bigint)
                          1 d_date_sk (type: bigint)
                        outputColumnNames: _col0, _col2, _col7, _col8, _col13
                        input vertices:
                          1 Reducer 7
                        Statistics: Num rows: 1 Data size: 126 Basic stats: COMPLETE Column stats: COMPLETE
                        Filter Operator
                          predicate: ((_col0 = _col7) and (_col2 = _col13)) (type: boolean)
                          Statistics: Num rows: 1 Data size: 126 Basic stats: COMPLETE Column stats: COMPLETE
                          Select Operator
                            expressions: _col7 (type: bigint), _col8 (type: string)
                            outputColumnNames: _col7, _col8
                            Statistics: Num rows: 1 Data size: 126 Basic stats: COMPLETE Column stats: COMPLETE
                            Group By Operator
                              keys: _col8 (type: string), _col7 (type: bigint), 2000 (type: int)
                              minReductionHashAggr: 0.4
                              mode: hash
                              outputColumnNames: _col0, _col1, _col2
                              Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
                              Reduce Output Operator
                                key expressions: _col0 (type: string), _col1 (type: bigint), 2000 (type: int)
                                null sort order: zzz
                                sort order: +++
                                Map-reduce partition columns: _col0 (type: string), _col1 (type: bigint), 2000 (type: int)
                                Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: x_date_dim
                  filterExpr: ((d_date_sk is not null and (d_year = 2001)) or (d_date_sk is not null and (d_year = 2000))) (type: boolean)
                  Statistics: Num rows: 3 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: d_date_sk (type: bigint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: d_date_sk (type: bigint)
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_date_sk (type: bigint)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: _col0 (type: bigint)
                        minReductionHashAggr: 0.4
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Dynamic Partitioning Event Operator
                          Target column: ss_sold_date_sk (bigint)
                          Target Input: x_store_sales
                          Partition key expr: ss_sold_date_sk
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          Target Vertex: Map 1
                  Filter Operator
                    predicate: (d_date_sk is not null and (d_year = 2000)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: d_date_sk (type: bigint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: d_date_sk (type: bigint)
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_date_sk (type: bigint)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: _col0 (type: bigint)
                        minReductionHashAggr: 0.4
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Dynamic Partitioning Event Operator
                          Target column: ss_sold_date_sk (bigint)
                          Target Input: x_store_sales
                          Partition key expr: ss_sold_date_sk
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          Target Vertex: Map 1
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: bigint), VALUE._col1 (type: bigint)
                outputColumnNames: ss_item_sk, ss_sold_date_sk
                Reduce Output Operator
                  key expressions: ss_item_sk (type: bigint)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: ss_item_sk (type: bigint)
                  Statistics: Num rows: 3 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: ss_sold_date_sk (type: bigint)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: bigint), 2001 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: bigint)
                  outputColumnNames: _col1
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col1 (type: bigint)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col1 (type: bigint)
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: bigint), 2000 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: bigint)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 102 Basic stats: COMPLETE Column stats: COMPLETE
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                    keys:
                      0 _col1 (type: bigint)
                      1 _col1 (type: bigint)
                    outputColumnNames: _col0, _col1, _col4
                    input vertices:
                      1 Reducer 4
                    Statistics: Num rows: 1 Data size: 110 Basic stats: COMPLETE Column stats: COMPLETE
                    Filter Operator
                      predicate: (_col1 = _col4) (type: boolean)
                      Statistics: Num rows: 1 Data size: 110 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: _col0 (type: string), 2000 (type: int), 2001 (type: int)
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 1 Data size: 102 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 1 Data size: 102 Basic stats: COMPLETE Column stats: COMPLETE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 7 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: bigint)
                outputColumnNames: d_date_sk
                Reduce Output Operator
                  key expressions: d_date_sk (type: bigint)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: d_date_sk (type: bigint)
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: with base as (
  select
    i_product_name product_name, i_item_sk item_sk, d_year year
  from x_store_sales, x_item, x_date_dim
  where
    ss_item_sk = i_item_sk and ss_sold_date_sk = d_date_sk
  group by i_product_name, i_item_sk, d_year
)
select cs1.product_name, cs1.year, cs2.year
from base cs1, base cs2
where
  cs1.item_sk = cs2.item_sk and
  cs1.year = 2000 and
  cs2.year = 2001
PREHOOK: type: QUERY
PREHOOK: Input: default@x_date_dim
PREHOOK: Input: default@x_item
PREHOOK: Input: default@x_store_sales
PREHOOK: Input: default@x_store_sales@ss_sold_date_sk=1
PREHOOK: Input: default@x_store_sales@ss_sold_date_sk=2
PREHOOK: Input: default@x_store_sales@ss_sold_date_sk=3
#### A masked pattern was here ####
POSTHOOK: query: with base as (
  select
    i_product_name product_name, i_item_sk item_sk, d_year year
  from x_store_sales, x_item, x_date_dim
  where
    ss_item_sk = i_item_sk and ss_sold_date_sk = d_date_sk
  group by i_product_name, i_item_sk, d_year
)
select cs1.product_name, cs1.year, cs2.year
from base cs1, base cs2
where
  cs1.item_sk = cs2.item_sk and
  cs1.year = 2000 and
  cs2.year = 2001
POSTHOOK: type: QUERY
POSTHOOK: Input: default@x_date_dim
POSTHOOK: Input: default@x_item
POSTHOOK: Input: default@x_store_sales
POSTHOOK: Input: default@x_store_sales@ss_sold_date_sk=1
POSTHOOK: Input: default@x_store_sales@ss_sold_date_sk=2
POSTHOOK: Input: default@x_store_sales@ss_sold_date_sk=3
#### A masked pattern was here ####
solid steel	2000	2001
