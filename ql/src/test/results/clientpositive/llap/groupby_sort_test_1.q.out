PREHOOK: query: CREATE TABLE T1_n164(key STRING, val STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n164
POSTHOOK: query: CREATE TABLE T1_n164(key STRING, val STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n164
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_n164
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_n164
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_n164
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_n164
PREHOOK: query: INSERT OVERWRITE TABLE T1_n164 select key, val from T1_n164
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n164
PREHOOK: Output: default@t1_n164
POSTHOOK: query: INSERT OVERWRITE TABLE T1_n164 select key, val from T1_n164
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n164
POSTHOOK: Output: default@t1_n164
POSTHOOK: Lineage: t1_n164.key SIMPLE [(t1_n164)t1_n164.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t1_n164.val SIMPLE [(t1_n164)t1_n164.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE outputTbl1_n35(key int, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl1_n35
POSTHOOK: query: CREATE TABLE outputTbl1_n35(key int, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl1_n35
PREHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE outputTbl1_n35
SELECT key, count(1) FROM T1_n164 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n164
PREHOOK: Output: default@outputtbl1_n35
POSTHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE outputTbl1_n35
SELECT key, count(1) FROM T1_n164 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n164
POSTHOOK: Output: default@outputtbl1_n35
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n164
                  Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 1104 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n35
                        Select Operator
                          expressions: _col0 (type: int), _col1 (type: int)
                          outputColumnNames: key, cnt
                          Statistics: Num rows: 3 Data size: 552 Basic stats: COMPLETE Column stats: NONE
                          Group By Operator
                            aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), min(cnt), max(cnt), count(cnt), compute_bit_vector_hll(cnt)
                            minReductionHashAggr: 0.99
                            mode: hash
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                            Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                            Reduce Output Operator
                              null sort order: 
                              sort order: 
                              Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                              value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: int), _col7 (type: bigint), _col8 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'LONG' (type: string), UDFToLong(_col5) (type: bigint), UDFToLong(_col6) (type: bigint), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 516 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n35

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, cnt
          Column Types: int, int
          Table: default.outputtbl1_n35

