PREHOOK: query: create table vectortab2k_n6(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2k_n6
POSTHOOK: query: create table vectortab2k_n6(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2k_n6
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab2k' OVERWRITE INTO TABLE vectortab2k_n6
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@vectortab2k_n6
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab2k' OVERWRITE INTO TABLE vectortab2k_n6
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@vectortab2k_n6
PREHOOK: query: CREATE TABLE scratch AS SELECT t, si, i, b, f, d, dc FROM vectortab2k_n6
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@vectortab2k_n6
PREHOOK: Output: database:default
PREHOOK: Output: default@scratch
POSTHOOK: query: CREATE TABLE scratch AS SELECT t, si, i, b, f, d, dc FROM vectortab2k_n6
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@vectortab2k_n6
POSTHOOK: Output: database:default
POSTHOOK: Output: default@scratch
POSTHOOK: Lineage: scratch.b SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: scratch.d SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:d, type:double, comment:null), ]
POSTHOOK: Lineage: scratch.dc SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:dc, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: scratch.f SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:f, type:float, comment:null), ]
POSTHOOK: Lineage: scratch.i SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: scratch.si SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: scratch.t SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:t, type:tinyint, comment:null), ]
t	si	i	b	f	d	dc
PREHOOK: query: INSERT INTO TABLE scratch VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@scratch
POSTHOOK: query: INSERT INTO TABLE scratch VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@scratch
POSTHOOK: Lineage: scratch.b EXPRESSION []
POSTHOOK: Lineage: scratch.d EXPRESSION []
POSTHOOK: Lineage: scratch.dc EXPRESSION []
POSTHOOK: Lineage: scratch.f EXPRESSION []
POSTHOOK: Lineage: scratch.i EXPRESSION []
POSTHOOK: Lineage: scratch.si EXPRESSION []
POSTHOOK: Lineage: scratch.t EXPRESSION []
_col0	_col1	_col2	_col3	_col4	_col5	_col6
PREHOOK: query: CREATE TABLE vectortab2k_orc STORED AS ORC AS SELECT * FROM scratch
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@scratch
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2k_orc
POSTHOOK: query: CREATE TABLE vectortab2k_orc STORED AS ORC AS SELECT * FROM scratch
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@scratch
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2k_orc
POSTHOOK: Lineage: vectortab2k_orc.b SIMPLE [(scratch)scratch.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc.d SIMPLE [(scratch)scratch.FieldSchema(name:d, type:double, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc.dc SIMPLE [(scratch)scratch.FieldSchema(name:dc, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc.f SIMPLE [(scratch)scratch.FieldSchema(name:f, type:float, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc.i SIMPLE [(scratch)scratch.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc.si SIMPLE [(scratch)scratch.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc.t SIMPLE [(scratch)scratch.FieldSchema(name:t, type:tinyint, comment:null), ]
scratch.t	scratch.si	scratch.i	scratch.b	scratch.f	scratch.d	scratch.dc
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (t < 0) as compare1, (si <= 0) as compare2, (i = 0) as compare3 from vectortab2k_orc
        order by t, si, i) as q
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (t < 0) as compare1, (si <= 0) as compare2, (i = 0) as compare3 from vectortab2k_orc
        order by t, si, i) as q
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: vectortab2k_orc
                  Statistics: Num rows: 2001 Data size: 22824 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                  Select Operator
                    expressions: hash(t,si,i,(t < 0Y),(si <= 0S),(i = 0)) (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [11]
                        selectExpressions: VectorUDFAdaptor(hash(t,si,i,(t < 0Y),(si <= 0S),(i = 0)))(children: LongColLessLongScalar(col 0:tinyint, val 0) -> 8:boolean, LongColLessEqualLongScalar(col 1:smallint, val 0) -> 9:boolean, LongColEqualLongScalar(col 2:int, val 0) -> 10:boolean) -> 11:int
                    Statistics: Num rows: 2001 Data size: 22824 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: sum(_col0)
                      Group By Vectorization:
                          aggregators: VectorUDAFSumLong(col 11:int) -> bigint
                          className: VectorGroupByOperator
                          groupByMode: HASH
                          native: false
                          vectorProcessingMode: HASH
                          projectedOutputColumnNums: [0]
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkEmptyKeyOperator
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                        Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: true
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFSumLong(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (t < 0) as compare1, (si <= 0) as compare2, (i = 0) as compare3 from vectortab2k_orc
        order by t, si, i) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (t < 0) as compare1, (si <= 0) as compare2, (i = 0) as compare3 from vectortab2k_orc
        order by t, si, i) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
_c0
-3601806268
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (t > 0) as compare1, (si >= 0) as compare2, (i != 0) as compare3, (b > 0) as compare4 from vectortab2k_orc
        order by t, si, i, b) as q
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION
SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (t > 0) as compare1, (si >= 0) as compare2, (i != 0) as compare3, (b > 0) as compare4 from vectortab2k_orc
        order by t, si, i, b) as q
POSTHOOK: type: QUERY
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: vectortab2k_orc
                  Statistics: Num rows: 2001 Data size: 38040 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                  Select Operator
                    expressions: hash(t,si,i,b,(t > 0Y),(si >= 0S),(i <> 0),(b > 0L)) (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [12]
                        selectExpressions: VectorUDFAdaptor(hash(t,si,i,b,(t > 0Y),(si >= 0S),(i <> 0),(b > 0L)))(children: LongColGreaterLongScalar(col 0:tinyint, val 0) -> 8:boolean, LongColGreaterEqualLongScalar(col 1:smallint, val 0) -> 9:boolean, LongColNotEqualLongScalar(col 2:int, val 0) -> 10:boolean, LongColGreaterLongScalar(col 3:bigint, val 0) -> 11:boolean) -> 12:int
                    Statistics: Num rows: 2001 Data size: 38040 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: sum(_col0)
                      Group By Vectorization:
                          aggregators: VectorUDAFSumLong(col 12:int) -> bigint
                          className: VectorGroupByOperator
                          groupByMode: HASH
                          native: false
                          vectorProcessingMode: HASH
                          projectedOutputColumnNums: [0]
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 28 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkEmptyKeyOperator
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                        Statistics: Num rows: 1 Data size: 28 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: true
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFSumLong(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 28 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 28 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (t > 0) as compare1, (si >= 0) as compare2, (i != 0) as compare3, (b > 0) as compare4 from vectortab2k_orc
        order by t, si, i, b) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (t > 0) as compare1, (si >= 0) as compare2, (i != 0) as compare3, (b > 0) as compare4 from vectortab2k_orc
        order by t, si, i, b) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
_c0
24462176095
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (t < 0) as compare1, (si <= 0) as compare2, (i = 0) as compare3 from vectortab2k_orc
        where pmod(t, 4) > 1
        order by t, si, i) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (t < 0) as compare1, (si <= 0) as compare2, (i = 0) as compare3 from vectortab2k_orc
        where pmod(t, 4) > 1
        order by t, si, i) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
_c0
62396741790
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (t > 0) as compare1, (si >= 0) as compare2, (i != 0) as compare3, (b > 0) as compare4 from vectortab2k_orc
        where pmod(t, 4) < 2
        order by t, si, i, b) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (t > 0) as compare1, (si >= 0) as compare2, (i != 0) as compare3, (b > 0) as compare4 from vectortab2k_orc
        where pmod(t, 4) < 2
        order by t, si, i, b) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
_c0
14122059922
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (0 < t) as compare1, (0 <= si) as compare2, (0 = i) as compare3 from vectortab2k_orc
        order by t, si, i) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (0 < t) as compare1, (0 <= si) as compare2, (0 = i) as compare3 from vectortab2k_orc
        order by t, si, i) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
_c0
-3601796069
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (0 > t) as compare1, (0 >= si) as compare2, (0 != i) as compare3, (0 > b) as compare4 from vectortab2k_orc
        order by t, si, i, b) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (0 > t) as compare1, (0 >= si) as compare2, (0 != i) as compare3, (0 > b) as compare4 from vectortab2k_orc
        order by t, si, i, b) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
_c0
20166891877
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (0 < t) as compare1, (0 <= si) as compare2, (0 = i) as compare3 from vectortab2k_orc
        where pmod(t, 4) > 1
        order by t, si, i) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, (0 < t) as compare1, (0 <= si) as compare2, (0 = i) as compare3 from vectortab2k_orc
        where pmod(t, 4) > 1
        order by t, si, i) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
_c0
62396748920
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (0 > t) as compare1, (0 >= si) as compare2, (0 != i) as compare3, (0 > b) as compare4 from vectortab2k_orc
        where pmod(t, 4) < 2
        order by t, si, i, b) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t, si, i, b, (0 > t) as compare1, (0 >= si) as compare2, (0 != i) as compare3, (0 > b) as compare4 from vectortab2k_orc
        where pmod(t, 4) < 2
        order by t, si, i, b) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc
#### A masked pattern was here ####
_c0
14121946175
PREHOOK: query: CREATE TABLE scratch_repeat AS SELECT t, si, i, b, bo, 20 as t_repeat,
     9000 as si_repeat, 9233320 as i_repeat, -823823999339992 as b_repeat, false as bo_repeat_false, true as bo_repeat_true FROM vectortab2k_n6
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@vectortab2k_n6
PREHOOK: Output: database:default
PREHOOK: Output: default@scratch_repeat
POSTHOOK: query: CREATE TABLE scratch_repeat AS SELECT t, si, i, b, bo, 20 as t_repeat,
     9000 as si_repeat, 9233320 as i_repeat, -823823999339992 as b_repeat, false as bo_repeat_false, true as bo_repeat_true FROM vectortab2k_n6
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@vectortab2k_n6
POSTHOOK: Output: database:default
POSTHOOK: Output: default@scratch_repeat
POSTHOOK: Lineage: scratch_repeat.b SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: scratch_repeat.b_repeat SIMPLE []
POSTHOOK: Lineage: scratch_repeat.bo SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: scratch_repeat.bo_repeat_false SIMPLE []
POSTHOOK: Lineage: scratch_repeat.bo_repeat_true SIMPLE []
POSTHOOK: Lineage: scratch_repeat.i SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: scratch_repeat.i_repeat SIMPLE []
POSTHOOK: Lineage: scratch_repeat.si SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: scratch_repeat.si_repeat SIMPLE []
POSTHOOK: Lineage: scratch_repeat.t SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: scratch_repeat.t_repeat SIMPLE []
t	si	i	b	bo	t_repeat	si_repeat	i_repeat	b_repeat	bo_repeat_false	bo_repeat_true
PREHOOK: query: CREATE TABLE vectortab2k_orc_repeat STORED AS ORC AS SELECT * FROM scratch_repeat
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@scratch_repeat
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2k_orc_repeat
POSTHOOK: query: CREATE TABLE vectortab2k_orc_repeat STORED AS ORC AS SELECT * FROM scratch_repeat
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@scratch_repeat
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2k_orc_repeat
POSTHOOK: Lineage: vectortab2k_orc_repeat.b SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.b_repeat SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:b_repeat, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.bo SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.bo_repeat_false SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:bo_repeat_false, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.bo_repeat_true SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:bo_repeat_true, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.i SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.i_repeat SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:i_repeat, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.si SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.si_repeat SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:si_repeat, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.t SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_repeat.t_repeat SIMPLE [(scratch_repeat)scratch_repeat.FieldSchema(name:t_repeat, type:int, comment:null), ]
scratch_repeat.t	scratch_repeat.si	scratch_repeat.i	scratch_repeat.b	scratch_repeat.bo	scratch_repeat.t_repeat	scratch_repeat.si_repeat	scratch_repeat.i_repeat	scratch_repeat.b_repeat	scratch_repeat.bo_repeat_false	scratch_repeat.bo_repeat_true
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (t_repeat > 0) as compare1, (si_repeat >= 0) as compare2, (i_repeat = 0) as compare3 from vectortab2k_orc_repeat
        order by t_repeat, si_repeat, i_repeat) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (t_repeat > 0) as compare1, (si_repeat >= 0) as compare2, (i_repeat = 0) as compare3 from vectortab2k_orc_repeat
        order by t_repeat, si_repeat, i_repeat) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
_c0
972535192000
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (t_repeat < 0) as compare1, (si_repeat <=0) as compare2, (i_repeat != 0) as compare3 from vectortab2k_orc_repeat
        order by t_repeat, si_repeat, i_repeat) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (t_repeat < 0) as compare1, (si_repeat <=0) as compare2, (i_repeat != 0) as compare3 from vectortab2k_orc_repeat
        order by t_repeat, si_repeat, i_repeat) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
_c0
972533210000
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (t_repeat > 0) as compare1, (si_repeat >= 0) as compare2, (i_repeat = 0) as compare3 from vectortab2k_orc_repeat
        where pmod(si, 4) = 0
        order by t_repeat, si_repeat, i_repeat) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (t_repeat > 0) as compare1, (si_repeat >= 0) as compare2, (i_repeat = 0) as compare3 from vectortab2k_orc_repeat
        where pmod(si, 4) = 0
        order by t_repeat, si_repeat, i_repeat) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
_c0
231949643292
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (t_repeat < 0) as compare1, (si_repeat <=0) as compare2, (i_repeat != 0) as compare3 from vectortab2k_orc_repeat
        where pmod(si, 4) = 3
        order by t_repeat, si_repeat, i_repeat) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (t_repeat < 0) as compare1, (si_repeat <=0) as compare2, (i_repeat != 0) as compare3 from vectortab2k_orc_repeat
        where pmod(si, 4) = 3
        order by t_repeat, si_repeat, i_repeat) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
_c0
235353036820
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (0 > t_repeat) as compare1, (0 >= si_repeat) as compare2, (0 = i_repeat) as compare3 from vectortab2k_orc_repeat
        order by t_repeat, si_repeat, i_repeat) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (0 > t_repeat) as compare1, (0 >= si_repeat) as compare2, (0 = i_repeat) as compare3 from vectortab2k_orc_repeat
        order by t_repeat, si_repeat, i_repeat) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
_c0
972533208000
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (0 < t_repeat) as compare1, (0 <= si_repeat) as compare2, (0 != i_repeat) as compare3 from vectortab2k_orc_repeat
        order by t_repeat, si_repeat, i_repeat) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (0 < t_repeat) as compare1, (0 <= si_repeat) as compare2, (0 != i_repeat) as compare3 from vectortab2k_orc_repeat
        order by t_repeat, si_repeat, i_repeat) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
_c0
972535194000
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (0 > t_repeat) as compare1, (0 >= si_repeat) as compare2, (0 = i_repeat) as compare3 from vectortab2k_orc_repeat
        where pmod(si, 4) = 0
        order by t_repeat, si_repeat, i_repeat) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (0 > t_repeat) as compare1, (0 >= si_repeat) as compare2, (0 = i_repeat) as compare3 from vectortab2k_orc_repeat
        where pmod(si, 4) = 0
        order by t_repeat, si_repeat, i_repeat) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
_c0
231949170108
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (0 < t_repeat) as compare1, (0 <= si_repeat) as compare2, (0 != i_repeat) as compare3 from vectortab2k_orc_repeat
        where pmod(si, 4) = 3
        order by t_repeat, si_repeat, i_repeat) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_repeat, si_repeat, i_repeat, (0 < t_repeat) as compare1, (0 <= si_repeat) as compare2, (0 != i_repeat) as compare3 from vectortab2k_orc_repeat
        where pmod(si, 4) = 3
        order by t_repeat, si_repeat, i_repeat) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_repeat
#### A masked pattern was here ####
_c0
235353516948
PREHOOK: query: CREATE TABLE scratch_null AS SELECT t, si, i, b, bo,
     cast(null as tinyint) as t_null, cast(null as smallint) as si_null, cast(null as int) as i_null, cast(null as bigint) as b_null, cast(null as boolean) as bo_null FROM vectortab2k_n6
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@vectortab2k_n6
PREHOOK: Output: database:default
PREHOOK: Output: default@scratch_null
POSTHOOK: query: CREATE TABLE scratch_null AS SELECT t, si, i, b, bo,
     cast(null as tinyint) as t_null, cast(null as smallint) as si_null, cast(null as int) as i_null, cast(null as bigint) as b_null, cast(null as boolean) as bo_null FROM vectortab2k_n6
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@vectortab2k_n6
POSTHOOK: Output: database:default
POSTHOOK: Output: default@scratch_null
POSTHOOK: Lineage: scratch_null.b SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: scratch_null.b_null SIMPLE []
POSTHOOK: Lineage: scratch_null.bo SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: scratch_null.bo_null SIMPLE []
POSTHOOK: Lineage: scratch_null.i SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: scratch_null.i_null SIMPLE []
POSTHOOK: Lineage: scratch_null.si SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: scratch_null.si_null SIMPLE []
POSTHOOK: Lineage: scratch_null.t SIMPLE [(vectortab2k_n6)vectortab2k_n6.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: scratch_null.t_null SIMPLE []
t	si	i	b	bo	t_null	si_null	i_null	b_null	bo_null
PREHOOK: query: CREATE TABLE vectortab2k_orc_null STORED AS ORC AS SELECT * FROM scratch_null
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@scratch_null
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2k_orc_null
POSTHOOK: query: CREATE TABLE vectortab2k_orc_null STORED AS ORC AS SELECT * FROM scratch_null
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@scratch_null
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2k_orc_null
POSTHOOK: Lineage: vectortab2k_orc_null.b SIMPLE [(scratch_null)scratch_null.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_null.b_null SIMPLE [(scratch_null)scratch_null.FieldSchema(name:b_null, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_null.bo SIMPLE [(scratch_null)scratch_null.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_null.bo_null SIMPLE [(scratch_null)scratch_null.FieldSchema(name:bo_null, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_null.i SIMPLE [(scratch_null)scratch_null.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_null.i_null SIMPLE [(scratch_null)scratch_null.FieldSchema(name:i_null, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_null.si SIMPLE [(scratch_null)scratch_null.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_null.si_null SIMPLE [(scratch_null)scratch_null.FieldSchema(name:si_null, type:smallint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_null.t SIMPLE [(scratch_null)scratch_null.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: vectortab2k_orc_null.t_null SIMPLE [(scratch_null)scratch_null.FieldSchema(name:t_null, type:tinyint, comment:null), ]
scratch_null.t	scratch_null.si	scratch_null.i	scratch_null.b	scratch_null.bo	scratch_null.t_null	scratch_null.si_null	scratch_null.i_null	scratch_null.b_null	scratch_null.bo_null
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (t_null > 0) as compare1, (si_null >= 0) as compare2, (i_null = 0) as compare3 from vectortab2k_orc_null
        order by t_null, si_null, i_null) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (t_null > 0) as compare1, (si_null >= 0) as compare2, (i_null = 0) as compare3 from vectortab2k_orc_null
        order by t_null, si_null, i_null) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
_c0
0
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (t_null < 0) as compare1, (si_null <=0) as compare2, (i_null != 0) as compare3 from vectortab2k_orc_null
        order by t_null, si_null, i_null) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (t_null < 0) as compare1, (si_null <=0) as compare2, (i_null != 0) as compare3 from vectortab2k_orc_null
        order by t_null, si_null, i_null) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
_c0
0
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (t_null > 0) as compare1, (si_null >= 0) as compare2, (i_null = 0) as compare3 from vectortab2k_orc_null
        where pmod(si, 4) = 0
        order by t_null, si_null, i_null) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (t_null > 0) as compare1, (si_null >= 0) as compare2, (i_null = 0) as compare3 from vectortab2k_orc_null
        where pmod(si, 4) = 0
        order by t_null, si_null, i_null) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
_c0
0
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (t_null < 0) as compare1, (si_null <=0) as compare2, (i_null != 0) as compare3 from vectortab2k_orc_null
        where pmod(si, 4) = 3
        order by t_null, si_null, i_null) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (t_null < 0) as compare1, (si_null <=0) as compare2, (i_null != 0) as compare3 from vectortab2k_orc_null
        where pmod(si, 4) = 3
        order by t_null, si_null, i_null) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
_c0
0
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (0 > t_null) as compare1, (0 >= si_null) as compare2, (0 = i_null) as compare3 from vectortab2k_orc_null
        order by t_null, si_null, i_null) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (0 > t_null) as compare1, (0 >= si_null) as compare2, (0 = i_null) as compare3 from vectortab2k_orc_null
        order by t_null, si_null, i_null) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
_c0
0
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (0 < t_null) as compare1, (0 <= si_null) as compare2, (0 != i_null) as compare3 from vectortab2k_orc_null
        order by t_null, si_null, i_null) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (0 < t_null) as compare1, (0 <= si_null) as compare2, (0 != i_null) as compare3 from vectortab2k_orc_null
        order by t_null, si_null, i_null) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
_c0
0
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (0 > t_null) as compare1, (0 >= si_null) as compare2, (0 = i_null) as compare3 from vectortab2k_orc_null
        where pmod(si, 4) = 0
        order by t_null, si_null, i_null) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (0 > t_null) as compare1, (0 >= si_null) as compare2, (0 = i_null) as compare3 from vectortab2k_orc_null
        where pmod(si, 4) = 0
        order by t_null, si_null, i_null) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
_c0
0
PREHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (0 < t_null) as compare1, (0 <= si_null) as compare2, (0 != i_null) as compare3 from vectortab2k_orc_null
        where pmod(si, 4) = 3
        order by t_null, si_null, i_null) as q
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(hash(*)) FROM
    (SELECT t_null, si_null, i_null, (0 < t_null) as compare1, (0 <= si_null) as compare2, (0 != i_null) as compare3 from vectortab2k_orc_null
        where pmod(si, 4) = 3
        order by t_null, si_null, i_null) as q
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_orc_null
#### A masked pattern was here ####
_c0
0
