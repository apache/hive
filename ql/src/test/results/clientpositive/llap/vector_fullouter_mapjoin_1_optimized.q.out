PREHOOK: query: CREATE TABLE fullouter_long_big_1a_txt(key bigint)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_big_1a_txt
POSTHOOK: query: CREATE TABLE fullouter_long_big_1a_txt(key bigint)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_big_1a_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1a.txt' OVERWRITE INTO TABLE fullouter_long_big_1a_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_big_1a_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1a.txt' OVERWRITE INTO TABLE fullouter_long_big_1a_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_big_1a_txt
PREHOOK: query: CREATE TABLE fullouter_long_big_1a STORED AS ORC AS SELECT * FROM fullouter_long_big_1a_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_long_big_1a_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_big_1a
POSTHOOK: query: CREATE TABLE fullouter_long_big_1a STORED AS ORC AS SELECT * FROM fullouter_long_big_1a_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_long_big_1a_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_big_1a
POSTHOOK: Lineage: fullouter_long_big_1a.key SIMPLE [(fullouter_long_big_1a_txt)fullouter_long_big_1a_txt.FieldSchema(name:key, type:bigint, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_long_big_1a_nonull_txt(key bigint)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_big_1a_nonull_txt
POSTHOOK: query: CREATE TABLE fullouter_long_big_1a_nonull_txt(key bigint)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_big_1a_nonull_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_long_big_1a_nonull_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_big_1a_nonull_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_long_big_1a_nonull_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_big_1a_nonull_txt
PREHOOK: query: CREATE TABLE fullouter_long_big_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_long_big_1a_nonull_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_long_big_1a_nonull_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_big_1a_nonull
POSTHOOK: query: CREATE TABLE fullouter_long_big_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_long_big_1a_nonull_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_long_big_1a_nonull_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_big_1a_nonull
POSTHOOK: Lineage: fullouter_long_big_1a_nonull.key SIMPLE [(fullouter_long_big_1a_nonull_txt)fullouter_long_big_1a_nonull_txt.FieldSchema(name:key, type:bigint, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_long_small_1a_txt(key bigint, s_date date)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_small_1a_txt
POSTHOOK: query: CREATE TABLE fullouter_long_small_1a_txt(key bigint, s_date date)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_small_1a_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1a.txt' OVERWRITE INTO TABLE fullouter_long_small_1a_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_small_1a_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1a.txt' OVERWRITE INTO TABLE fullouter_long_small_1a_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_small_1a_txt
PREHOOK: query: CREATE TABLE fullouter_long_small_1a STORED AS ORC AS SELECT * FROM fullouter_long_small_1a_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_long_small_1a_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_small_1a
POSTHOOK: query: CREATE TABLE fullouter_long_small_1a STORED AS ORC AS SELECT * FROM fullouter_long_small_1a_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_long_small_1a_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_small_1a
POSTHOOK: Lineage: fullouter_long_small_1a.key SIMPLE [(fullouter_long_small_1a_txt)fullouter_long_small_1a_txt.FieldSchema(name:key, type:bigint, comment:null), ]
POSTHOOK: Lineage: fullouter_long_small_1a.s_date SIMPLE [(fullouter_long_small_1a_txt)fullouter_long_small_1a_txt.FieldSchema(name:s_date, type:date, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_long_small_1a_nonull_txt(key bigint, s_date date)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_small_1a_nonull_txt
POSTHOOK: query: CREATE TABLE fullouter_long_small_1a_nonull_txt(key bigint, s_date date)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_small_1a_nonull_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_long_small_1a_nonull_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_small_1a_nonull_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_long_small_1a_nonull_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_small_1a_nonull_txt
PREHOOK: query: CREATE TABLE fullouter_long_small_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_long_small_1a_nonull_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_long_small_1a_nonull_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_small_1a_nonull
POSTHOOK: query: CREATE TABLE fullouter_long_small_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_long_small_1a_nonull_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_long_small_1a_nonull_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_small_1a_nonull
POSTHOOK: Lineage: fullouter_long_small_1a_nonull.key SIMPLE [(fullouter_long_small_1a_nonull_txt)fullouter_long_small_1a_nonull_txt.FieldSchema(name:key, type:bigint, comment:null), ]
POSTHOOK: Lineage: fullouter_long_small_1a_nonull.s_date SIMPLE [(fullouter_long_small_1a_nonull_txt)fullouter_long_small_1a_nonull_txt.FieldSchema(name:s_date, type:date, comment:null), ]
PREHOOK: query: analyze table fullouter_long_big_1a compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1a
PREHOOK: Output: default@fullouter_long_big_1a
POSTHOOK: query: analyze table fullouter_long_big_1a compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1a
POSTHOOK: Output: default@fullouter_long_big_1a
PREHOOK: query: analyze table fullouter_long_big_1a compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_big_1a
PREHOOK: Output: default@fullouter_long_big_1a
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_big_1a compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_big_1a
POSTHOOK: Output: default@fullouter_long_big_1a
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_long_big_1a_nonull compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1a_nonull
PREHOOK: Output: default@fullouter_long_big_1a_nonull
POSTHOOK: query: analyze table fullouter_long_big_1a_nonull compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1a_nonull
POSTHOOK: Output: default@fullouter_long_big_1a_nonull
PREHOOK: query: analyze table fullouter_long_big_1a_nonull compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_big_1a_nonull
PREHOOK: Output: default@fullouter_long_big_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_big_1a_nonull compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_big_1a_nonull
POSTHOOK: Output: default@fullouter_long_big_1a_nonull
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_long_small_1a compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_small_1a
PREHOOK: Output: default@fullouter_long_small_1a
POSTHOOK: query: analyze table fullouter_long_small_1a compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_small_1a
POSTHOOK: Output: default@fullouter_long_small_1a
PREHOOK: query: analyze table fullouter_long_small_1a compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_small_1a
PREHOOK: Output: default@fullouter_long_small_1a
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_small_1a compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_small_1a
POSTHOOK: Output: default@fullouter_long_small_1a
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_long_small_1a_nonull compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_small_1a_nonull
PREHOOK: Output: default@fullouter_long_small_1a_nonull
POSTHOOK: query: analyze table fullouter_long_small_1a_nonull compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_small_1a_nonull
POSTHOOK: Output: default@fullouter_long_small_1a_nonull
PREHOOK: query: analyze table fullouter_long_small_1a_nonull compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_small_1a_nonull
PREHOOK: Output: default@fullouter_long_small_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_small_1a_nonull compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_small_1a_nonull
POSTHOOK: Output: default@fullouter_long_small_1a_nonull
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1a
PREHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1a
POSTHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 11 Data size: 124 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:bigint, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: bigint)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 11 Data size: 124 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: bigint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: bigint)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:bigint
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 11 Data size: 124 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    includeColumns: [0]
                    dataColumns: key:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 54 Data size: 3648 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:bigint, 1:s_date:date, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: bigint), s_date (type: date)
                    outputColumnNames: _col0, _col1
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1]
                    Statistics: Num rows: 54 Data size: 3648 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: bigint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: bigint)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:bigint
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumns: 1:date
                      Statistics: Num rows: 54 Data size: 3648 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: date)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:bigint, s_date:date
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Full Outer Join 0 to 1
                keys:
                  0 _col0 (type: bigint)
                  1 _col0 (type: bigint)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 59 Data size: 4012 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: bigint)
                  null sort order: z
                  sort order: +
                  Statistics: Num rows: 59 Data size: 4012 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: bigint), _col2 (type: date)
            MergeJoin Vectorization:
                enabled: false
                enableConditionsNotMet: Vectorizing MergeJoin Supported IS false
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: KEY.reducesinkkey0:bigint, VALUE._col0:bigint, VALUE._col1:date
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: bigint), VALUE._col0 (type: bigint), VALUE._col1 (type: date)
                outputColumnNames: _col0, _col1, _col2
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2]
                Statistics: Num rows: 59 Data size: 4012 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 59 Data size: 4012 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1a
PREHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1a
POSTHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
-5206670856103795573	NULL	NULL
-5310365297525168078	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-8460550397108077433	NULL	NULL
1569543799237464101	NULL	NULL
3313583664488247651	NULL	NULL
968819023021777205	NULL	NULL
NULL	-1339636982994067311	2000-06-20
NULL	-1339636982994067311	2008-12-03
NULL	-2098090254092150988	1817-03-12
NULL	-2098090254092150988	2163-05-26
NULL	-2098090254092150988	2219-12-23
NULL	-2184423060953067642	1853-07-06
NULL	-2184423060953067642	1880-10-06
NULL	-2575185053386712613	1809-07-12
NULL	-2575185053386712613	2105-01-21
NULL	-2688622006344936758	1948-10-15
NULL	-2688622006344936758	2129-01-11
NULL	-327698348664467755	2222-10-15
NULL	-3655445881497026796	2108-08-16
NULL	-4224290881682877258	1813-05-17
NULL	-4224290881682877258	2120-01-16
NULL	-4224290881682877258	2185-07-08
NULL	-4961171400048338491	2196-08-10
NULL	-5706981533666803767	1800-09-20
NULL	-5706981533666803767	2151-06-09
NULL	-5754527700632192146	1958-07-15
NULL	-614848861623872247	2101-05-25
NULL	-614848861623872247	2112-11-09
NULL	-6784441713807772877	1845-02-16
NULL	-6784441713807772877	2054-06-17
NULL	-7707546703881534780	2134-08-20
NULL	214451696109242839	1855-05-12
NULL	214451696109242839	1977-01-04
NULL	214451696109242839	2179-04-18
NULL	2438535236662373438	1881-09-16
NULL	2438535236662373438	1916-01-10
NULL	2438535236662373438	2026-06-23
NULL	3845554233155411208	1805-11-10
NULL	3845554233155411208	2264-04-05
NULL	3873405809071478736	1918-11-20
NULL	3873405809071478736	2034-06-09
NULL	3873405809071478736	2164-04-23
NULL	3905351789241845882	1866-07-28
NULL	3905351789241845882	2045-12-05
NULL	434940853096155515	2275-02-08
NULL	4436884039838843341	2031-05-23
NULL	5246983111579595707	1817-07-01
NULL	5246983111579595707	2260-05-11
NULL	5252407779338300447	2039-03-10
NULL	5252407779338300447	2042-04-26
NULL	6049335087268933751	2086-12-17
NULL	6049335087268933751	2282-06-09
NULL	7297177530102477725	1921-05-11
NULL	7297177530102477725	1926-04-12
NULL	7297177530102477725	2125-08-26
NULL	7937120928560087303	2083-03-14
NULL	8755921538765428593	1827-05-01
NULL	NULL	2024-01-23
NULL	NULL	2098-02-10
NULL	NULL	2242-02-08
NULL	NULL	NULL
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1a
PREHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1a
POSTHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 11 Data size: 124 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:bigint, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: bigint)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 11 Data size: 124 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: bigint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: bigint)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:bigint
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 11 Data size: 124 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    includeColumns: [0]
                    dataColumns: key:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 54 Data size: 3648 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:bigint, 1:s_date:date, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: bigint), s_date (type: date)
                    outputColumnNames: _col0, _col1
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1]
                    Statistics: Num rows: 54 Data size: 3648 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: bigint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: bigint)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:bigint
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumns: 1:date
                      Statistics: Num rows: 54 Data size: 3648 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: date)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:bigint, s_date:date
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    dataColumns: KEY.reducesinkkey0:bigint, VALUE._col0:date
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [bigint]
            Reduce Operator Tree:
              Map Join Operator
                condition map:
                     Full Outer Join 0 to 1
                keys:
                  0 KEY.reducesinkkey0 (type: bigint)
                  1 KEY.reducesinkkey0 (type: bigint)
                Map Join Vectorization:
                    bigTableKeyColumns: 0:bigint
                    bigTableRetainColumnNums: [0, 1]
                    bigTableValueColumns: 0:bigint, 1:date
                    className: VectorMapJoinFullOuterLongOperator
                    fullOuterSmallTableKeyMapping: 0 -> 2
                    native: true
                    nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Outer Join has keys IS true, Optimized Table and Supports Key Types IS true
                    projectedOutput: 2:bigint, 0:bigint, 1:date
                    hashTableImplementationType: OPTIMIZED
                outputColumnNames: _col0, _col1, _col2
                input vertices:
                  0 Map 1
                Statistics: Num rows: 59 Data size: 4012 Basic stats: COMPLETE Column stats: NONE
                DynamicPartitionHashJoin: true
                Reduce Output Operator
                  key expressions: _col0 (type: bigint)
                  null sort order: z
                  sort order: +
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      keyColumns: 2:bigint
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumns: 0:bigint, 1:date
                  Statistics: Num rows: 59 Data size: 4012 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: bigint), _col2 (type: date)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: KEY.reducesinkkey0:bigint, VALUE._col0:bigint, VALUE._col1:date
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: bigint), VALUE._col0 (type: bigint), VALUE._col1 (type: date)
                outputColumnNames: _col0, _col1, _col2
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2]
                Statistics: Num rows: 59 Data size: 4012 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 59 Data size: 4012 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1a
PREHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1a
POSTHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
-5206670856103795573	NULL	NULL
-5310365297525168078	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-8460550397108077433	NULL	NULL
1569543799237464101	NULL	NULL
3313583664488247651	NULL	NULL
968819023021777205	NULL	NULL
NULL	-1339636982994067311	2000-06-20
NULL	-1339636982994067311	2008-12-03
NULL	-2098090254092150988	1817-03-12
NULL	-2098090254092150988	2163-05-26
NULL	-2098090254092150988	2219-12-23
NULL	-2184423060953067642	1853-07-06
NULL	-2184423060953067642	1880-10-06
NULL	-2575185053386712613	1809-07-12
NULL	-2575185053386712613	2105-01-21
NULL	-2688622006344936758	1948-10-15
NULL	-2688622006344936758	2129-01-11
NULL	-327698348664467755	2222-10-15
NULL	-3655445881497026796	2108-08-16
NULL	-4224290881682877258	1813-05-17
NULL	-4224290881682877258	2120-01-16
NULL	-4224290881682877258	2185-07-08
NULL	-4961171400048338491	2196-08-10
NULL	-5706981533666803767	1800-09-20
NULL	-5706981533666803767	2151-06-09
NULL	-5754527700632192146	1958-07-15
NULL	-614848861623872247	2101-05-25
NULL	-614848861623872247	2112-11-09
NULL	-6784441713807772877	1845-02-16
NULL	-6784441713807772877	2054-06-17
NULL	-7707546703881534780	2134-08-20
NULL	214451696109242839	1855-05-12
NULL	214451696109242839	1977-01-04
NULL	214451696109242839	2179-04-18
NULL	2438535236662373438	1881-09-16
NULL	2438535236662373438	1916-01-10
NULL	2438535236662373438	2026-06-23
NULL	3845554233155411208	1805-11-10
NULL	3845554233155411208	2264-04-05
NULL	3873405809071478736	1918-11-20
NULL	3873405809071478736	2034-06-09
NULL	3873405809071478736	2164-04-23
NULL	3905351789241845882	1866-07-28
NULL	3905351789241845882	2045-12-05
NULL	434940853096155515	2275-02-08
NULL	4436884039838843341	2031-05-23
NULL	5246983111579595707	1817-07-01
NULL	5246983111579595707	2260-05-11
NULL	5252407779338300447	2039-03-10
NULL	5252407779338300447	2042-04-26
NULL	6049335087268933751	2086-12-17
NULL	6049335087268933751	2282-06-09
NULL	7297177530102477725	1921-05-11
NULL	7297177530102477725	1926-04-12
NULL	7297177530102477725	2125-08-26
NULL	7937120928560087303	2083-03-14
NULL	8755921538765428593	1827-05-01
NULL	NULL	2024-01-23
NULL	NULL	2098-02-10
NULL	NULL	2242-02-08
NULL	NULL	NULL
PREHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a_nonull b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1a_nonull
PREHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a_nonull b FULL OUTER JOIN fullouter_long_small_1a s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1a_nonull
POSTHOOK: Input: default@fullouter_long_small_1a
#### A masked pattern was here ####
-5206670856103795573	NULL	NULL
-5310365297525168078	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-8460550397108077433	NULL	NULL
1569543799237464101	NULL	NULL
3313583664488247651	NULL	NULL
968819023021777205	NULL	NULL
NULL	-1339636982994067311	2000-06-20
NULL	-1339636982994067311	2008-12-03
NULL	-2098090254092150988	1817-03-12
NULL	-2098090254092150988	2163-05-26
NULL	-2098090254092150988	2219-12-23
NULL	-2184423060953067642	1853-07-06
NULL	-2184423060953067642	1880-10-06
NULL	-2575185053386712613	1809-07-12
NULL	-2575185053386712613	2105-01-21
NULL	-2688622006344936758	1948-10-15
NULL	-2688622006344936758	2129-01-11
NULL	-327698348664467755	2222-10-15
NULL	-3655445881497026796	2108-08-16
NULL	-4224290881682877258	1813-05-17
NULL	-4224290881682877258	2120-01-16
NULL	-4224290881682877258	2185-07-08
NULL	-4961171400048338491	2196-08-10
NULL	-5706981533666803767	1800-09-20
NULL	-5706981533666803767	2151-06-09
NULL	-5754527700632192146	1958-07-15
NULL	-614848861623872247	2101-05-25
NULL	-614848861623872247	2112-11-09
NULL	-6784441713807772877	1845-02-16
NULL	-6784441713807772877	2054-06-17
NULL	-7707546703881534780	2134-08-20
NULL	214451696109242839	1855-05-12
NULL	214451696109242839	1977-01-04
NULL	214451696109242839	2179-04-18
NULL	2438535236662373438	1881-09-16
NULL	2438535236662373438	1916-01-10
NULL	2438535236662373438	2026-06-23
NULL	3845554233155411208	1805-11-10
NULL	3845554233155411208	2264-04-05
NULL	3873405809071478736	1918-11-20
NULL	3873405809071478736	2034-06-09
NULL	3873405809071478736	2164-04-23
NULL	3905351789241845882	1866-07-28
NULL	3905351789241845882	2045-12-05
NULL	434940853096155515	2275-02-08
NULL	4436884039838843341	2031-05-23
NULL	5246983111579595707	1817-07-01
NULL	5246983111579595707	2260-05-11
NULL	5252407779338300447	2039-03-10
NULL	5252407779338300447	2042-04-26
NULL	6049335087268933751	2086-12-17
NULL	6049335087268933751	2282-06-09
NULL	7297177530102477725	1921-05-11
NULL	7297177530102477725	1926-04-12
NULL	7297177530102477725	2125-08-26
NULL	7937120928560087303	2083-03-14
NULL	8755921538765428593	1827-05-01
NULL	NULL	2024-01-23
NULL	NULL	2098-02-10
NULL	NULL	2242-02-08
PREHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a_nonull s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1a
PREHOOK: Input: default@fullouter_long_small_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a b FULL OUTER JOIN fullouter_long_small_1a_nonull s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1a
POSTHOOK: Input: default@fullouter_long_small_1a_nonull
#### A masked pattern was here ####
-5206670856103795573	NULL	NULL
-5310365297525168078	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-8460550397108077433	NULL	NULL
1569543799237464101	NULL	NULL
3313583664488247651	NULL	NULL
968819023021777205	NULL	NULL
NULL	-1339636982994067311	2000-06-20
NULL	-1339636982994067311	2008-12-03
NULL	-2098090254092150988	1817-03-12
NULL	-2098090254092150988	2163-05-26
NULL	-2098090254092150988	2219-12-23
NULL	-2184423060953067642	1853-07-06
NULL	-2184423060953067642	1880-10-06
NULL	-2575185053386712613	1809-07-12
NULL	-2575185053386712613	2105-01-21
NULL	-2688622006344936758	1948-10-15
NULL	-2688622006344936758	2129-01-11
NULL	-327698348664467755	2222-10-15
NULL	-3655445881497026796	2108-08-16
NULL	-4224290881682877258	1813-05-17
NULL	-4224290881682877258	2120-01-16
NULL	-4224290881682877258	2185-07-08
NULL	-4961171400048338491	2196-08-10
NULL	-5706981533666803767	1800-09-20
NULL	-5706981533666803767	2151-06-09
NULL	-5754527700632192146	1958-07-15
NULL	-614848861623872247	2101-05-25
NULL	-614848861623872247	2112-11-09
NULL	-6784441713807772877	1845-02-16
NULL	-6784441713807772877	2054-06-17
NULL	-7707546703881534780	2134-08-20
NULL	214451696109242839	1855-05-12
NULL	214451696109242839	1977-01-04
NULL	214451696109242839	2179-04-18
NULL	2438535236662373438	1881-09-16
NULL	2438535236662373438	1916-01-10
NULL	2438535236662373438	2026-06-23
NULL	3845554233155411208	1805-11-10
NULL	3845554233155411208	2264-04-05
NULL	3873405809071478736	1918-11-20
NULL	3873405809071478736	2034-06-09
NULL	3873405809071478736	2164-04-23
NULL	3905351789241845882	1866-07-28
NULL	3905351789241845882	2045-12-05
NULL	434940853096155515	2275-02-08
NULL	4436884039838843341	2031-05-23
NULL	5246983111579595707	1817-07-01
NULL	5246983111579595707	2260-05-11
NULL	5252407779338300447	2039-03-10
NULL	5252407779338300447	2042-04-26
NULL	6049335087268933751	2086-12-17
NULL	6049335087268933751	2282-06-09
NULL	7297177530102477725	1921-05-11
NULL	7297177530102477725	1926-04-12
NULL	7297177530102477725	2125-08-26
NULL	7937120928560087303	2083-03-14
NULL	8755921538765428593	1827-05-01
NULL	NULL	NULL
PREHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a_nonull b FULL OUTER JOIN fullouter_long_small_1a_nonull s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1a_nonull
PREHOOK: Input: default@fullouter_long_small_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_date FROM fullouter_long_big_1a_nonull b FULL OUTER JOIN fullouter_long_small_1a_nonull s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1a_nonull
POSTHOOK: Input: default@fullouter_long_small_1a_nonull
#### A masked pattern was here ####
-5206670856103795573	NULL	NULL
-5310365297525168078	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-6187919478609154811	NULL	NULL
-8460550397108077433	NULL	NULL
1569543799237464101	NULL	NULL
3313583664488247651	NULL	NULL
968819023021777205	NULL	NULL
NULL	-1339636982994067311	2000-06-20
NULL	-1339636982994067311	2008-12-03
NULL	-2098090254092150988	1817-03-12
NULL	-2098090254092150988	2163-05-26
NULL	-2098090254092150988	2219-12-23
NULL	-2184423060953067642	1853-07-06
NULL	-2184423060953067642	1880-10-06
NULL	-2575185053386712613	1809-07-12
NULL	-2575185053386712613	2105-01-21
NULL	-2688622006344936758	1948-10-15
NULL	-2688622006344936758	2129-01-11
NULL	-327698348664467755	2222-10-15
NULL	-3655445881497026796	2108-08-16
NULL	-4224290881682877258	1813-05-17
NULL	-4224290881682877258	2120-01-16
NULL	-4224290881682877258	2185-07-08
NULL	-4961171400048338491	2196-08-10
NULL	-5706981533666803767	1800-09-20
NULL	-5706981533666803767	2151-06-09
NULL	-5754527700632192146	1958-07-15
NULL	-614848861623872247	2101-05-25
NULL	-614848861623872247	2112-11-09
NULL	-6784441713807772877	1845-02-16
NULL	-6784441713807772877	2054-06-17
NULL	-7707546703881534780	2134-08-20
NULL	214451696109242839	1855-05-12
NULL	214451696109242839	1977-01-04
NULL	214451696109242839	2179-04-18
NULL	2438535236662373438	1881-09-16
NULL	2438535236662373438	1916-01-10
NULL	2438535236662373438	2026-06-23
NULL	3845554233155411208	1805-11-10
NULL	3845554233155411208	2264-04-05
NULL	3873405809071478736	1918-11-20
NULL	3873405809071478736	2034-06-09
NULL	3873405809071478736	2164-04-23
NULL	3905351789241845882	1866-07-28
NULL	3905351789241845882	2045-12-05
NULL	434940853096155515	2275-02-08
NULL	4436884039838843341	2031-05-23
NULL	5246983111579595707	1817-07-01
NULL	5246983111579595707	2260-05-11
NULL	5252407779338300447	2039-03-10
NULL	5252407779338300447	2042-04-26
NULL	6049335087268933751	2086-12-17
NULL	6049335087268933751	2282-06-09
NULL	7297177530102477725	1921-05-11
NULL	7297177530102477725	1926-04-12
NULL	7297177530102477725	2125-08-26
NULL	7937120928560087303	2083-03-14
NULL	8755921538765428593	1827-05-01
PREHOOK: query: CREATE TABLE fullouter_long_big_1b(key smallint)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_big_1b
POSTHOOK: query: CREATE TABLE fullouter_long_big_1b(key smallint)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_big_1b
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1b.txt' OVERWRITE INTO TABLE fullouter_long_big_1b
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_big_1b
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1b.txt' OVERWRITE INTO TABLE fullouter_long_big_1b
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_big_1b
PREHOOK: query: CREATE TABLE fullouter_long_small_1b(key smallint, s_timestamp timestamp)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_small_1b
POSTHOOK: query: CREATE TABLE fullouter_long_small_1b(key smallint, s_timestamp timestamp)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_small_1b
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1b.txt' OVERWRITE INTO TABLE fullouter_long_small_1b
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_small_1b
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1b.txt' OVERWRITE INTO TABLE fullouter_long_small_1b
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_small_1b
PREHOOK: query: analyze table fullouter_long_big_1b compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1b
PREHOOK: Output: default@fullouter_long_big_1b
POSTHOOK: query: analyze table fullouter_long_big_1b compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1b
POSTHOOK: Output: default@fullouter_long_big_1b
PREHOOK: query: analyze table fullouter_long_big_1b compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_big_1b
PREHOOK: Output: default@fullouter_long_big_1b
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_big_1b compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_big_1b
POSTHOOK: Output: default@fullouter_long_big_1b
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_long_small_1b compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_small_1b
PREHOOK: Output: default@fullouter_long_small_1b
POSTHOOK: query: analyze table fullouter_long_small_1b compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_small_1b
POSTHOOK: Output: default@fullouter_long_small_1b
PREHOOK: query: analyze table fullouter_long_small_1b compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_small_1b
PREHOOK: Output: default@fullouter_long_small_1b
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_small_1b compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_small_1b
POSTHOOK: Output: default@fullouter_long_small_1b
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key, s.s_timestamp FROM fullouter_long_big_1b b FULL OUTER JOIN fullouter_long_small_1b s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1b
PREHOOK: Input: default@fullouter_long_small_1b
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key, s.s_timestamp FROM fullouter_long_big_1b b FULL OUTER JOIN fullouter_long_small_1b s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1b
POSTHOOK: Input: default@fullouter_long_small_1b
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 13 Data size: 63 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:smallint, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: smallint)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 13 Data size: 63 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: smallint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: smallint)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:smallint
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 13 Data size: 63 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    includeColumns: [0]
                    dataColumns: key:smallint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 72 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:smallint, 1:s_timestamp:timestamp, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: smallint), s_timestamp (type: timestamp)
                    outputColumnNames: _col0, _col1
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1]
                    Statistics: Num rows: 72 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: smallint)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: smallint)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:smallint
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumns: 1:timestamp
                      Statistics: Num rows: 72 Data size: 2208 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: timestamp)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:smallint, s_timestamp:timestamp
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    dataColumns: KEY.reducesinkkey0:smallint, VALUE._col0:timestamp
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [bigint]
            Reduce Operator Tree:
              Map Join Operator
                condition map:
                     Full Outer Join 0 to 1
                keys:
                  0 KEY.reducesinkkey0 (type: smallint)
                  1 KEY.reducesinkkey0 (type: smallint)
                Map Join Vectorization:
                    bigTableKeyColumns: 0:smallint
                    bigTableRetainColumnNums: [0, 1]
                    bigTableValueColumns: 0:smallint, 1:timestamp
                    className: VectorMapJoinFullOuterLongOperator
                    fullOuterSmallTableKeyMapping: 0 -> 2
                    native: true
                    nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Outer Join has keys IS true, Optimized Table and Supports Key Types IS true
                    projectedOutput: 2:smallint, 0:smallint, 1:timestamp
                    hashTableImplementationType: OPTIMIZED
                outputColumnNames: _col0, _col1, _col2
                input vertices:
                  0 Map 1
                Statistics: Num rows: 79 Data size: 2428 Basic stats: COMPLETE Column stats: NONE
                DynamicPartitionHashJoin: true
                Reduce Output Operator
                  key expressions: _col0 (type: smallint)
                  null sort order: z
                  sort order: +
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      keyColumns: 2:smallint
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumns: 0:smallint, 1:timestamp
                  Statistics: Num rows: 79 Data size: 2428 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: smallint), _col2 (type: timestamp)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: KEY.reducesinkkey0:smallint, VALUE._col0:smallint, VALUE._col1:timestamp
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: smallint), VALUE._col0 (type: smallint), VALUE._col1 (type: timestamp)
                outputColumnNames: _col0, _col1, _col2
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2]
                Statistics: Num rows: 79 Data size: 2428 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 79 Data size: 2428 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT b.key, s.key, s.s_timestamp FROM fullouter_long_big_1b b FULL OUTER JOIN fullouter_long_small_1b s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1b
PREHOOK: Input: default@fullouter_long_small_1b
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_timestamp FROM fullouter_long_big_1b b FULL OUTER JOIN fullouter_long_small_1b s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1b
POSTHOOK: Input: default@fullouter_long_small_1b
#### A masked pattern was here ####
-25394	NULL	NULL
31713	NULL	NULL
31713	NULL	NULL
31713	NULL	NULL
31713	NULL	NULL
31713	NULL	NULL
31713	NULL	NULL
31713	NULL	NULL
31713	NULL	NULL
31713	NULL	NULL
31713	NULL	NULL
32030	32030	2101-09-09 07:35:05.145
NULL	-14172	1918-09-13 11:44:24.496926711
NULL	-14172	2355-01-14 23:23:34
NULL	-14172	2809-06-07 02:10:58
NULL	-15361	2219-09-15 20:15:03.000169887
NULL	-15361	2434-08-13 20:37:07.000172979
NULL	-15427	2023-11-09 19:31:21
NULL	-15427	2046-06-07 22:58:40.728
NULL	-15427	2355-01-08 12:34:11.617
NULL	-19167	2230-12-22 20:25:39.000242111
NULL	-19167	2319-08-26 11:07:11.268
NULL	-20517	2233-12-20 04:06:56.666522799
NULL	-20517	2774-06-23 12:04:06.5
NULL	-20824	2478-11-05 00:28:05
NULL	-22422	1949-03-13 00:07:53.075
NULL	-22422	2337-07-19 06:33:02.000353352
NULL	-22422	2982-12-28 06:30:26.000883228
NULL	-23117	2037-01-05 21:52:30.685952759
NULL	-24775	2035-03-26 08:11:23.375224153
NULL	-24775	2920-08-06 15:58:28.261059449
NULL	-26998	2268-08-04 12:48:11.848006292
NULL	-26998	2428-12-26 07:53:45.96925825
NULL	-26998	2926-07-18 09:02:46.077
NULL	-29600	2333-11-02 15:06:30
NULL	-30059	2269-05-04 21:23:44.000339209
NULL	-30059	2420-12-10 22:12:30
NULL	-30059	2713-10-13 09:28:49
NULL	-30306	2619-05-24 10:35:58.000774018
NULL	-4279	2214-09-10 03:53:06
NULL	-4279	2470-08-12 11:21:14.000955747
NULL	-7373	2662-10-28 12:07:02.000526564
NULL	-7624	2219-12-03 17:07:19
NULL	-7624	2289-08-28 00:14:34
NULL	-7624	2623-03-20 03:18:45.00006465
NULL	-8087	2550-06-26 23:57:42.588007617
NULL	-8087	2923-07-02 11:40:26.115
NULL	-8435	2642-02-07 11:45:04.353231638
NULL	-8435	2834-12-06 16:38:18.901
NULL	-8624	2120-02-15 15:36:40.000758423
NULL	-8624	2282-03-28 07:58:16
NULL	-8624	2644-05-04 04:45:07.839
NULL	10553	2168-05-05 21:10:59.000152113
NULL	11232	2038-04-06 14:53:59
NULL	11232	2507-01-27 22:04:22.49661421
NULL	11232	2533-11-26 12:22:18
NULL	13598	2421-05-20 14:18:31.000264698
NULL	13598	2909-06-25 23:22:50
NULL	14865	2079-10-06 16:54:35.117
NULL	14865	2220-02-28 03:41:36
NULL	14865	2943-03-21 00:42:10.505
NULL	17125	2236-07-14 01:54:40.927230276
NULL	17125	2629-11-15 15:34:52
NULL	21181	2253-03-12 11:55:48.332
NULL	21181	2434-02-20 00:46:29.633
NULL	21436	2526-09-22 23:44:55
NULL	21436	2696-05-08 05:19:24.112
NULL	24870	2752-12-26 12:32:23.03685163
NULL	2632	2561-12-15 15:42:27
NULL	26484	1919-03-04 07:32:37.519
NULL	26484	2953-03-10 02:05:26.508953676
NULL	2748	2298-06-20 21:01:24
NULL	2748	2759-02-13 18:04:36.000307355
NULL	2748	2862-04-20 13:12:39.482805897
NULL	29407	2385-12-14 06:03:39.597
NULL	3198	2223-04-14 13:20:49
NULL	3198	2428-06-13 16:21:33.955
NULL	3198	2736-12-20 03:59:50.343550301
NULL	4510	2293-01-17 13:47:41.00001006
NULL	4510	2777-03-24 03:44:28.000169723
NULL	NULL	2124-05-07 15:01:19.021
NULL	NULL	2933-06-20 11:48:09.000839488
NULL	NULL	2971-08-07 12:02:11.000948152
NULL	NULL	NULL
PREHOOK: query: CREATE TABLE fullouter_long_big_1c(key int, b_string string)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_big_1c
POSTHOOK: query: CREATE TABLE fullouter_long_big_1c(key int, b_string string)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_big_1c
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1c.txt' OVERWRITE INTO TABLE fullouter_long_big_1c
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_big_1c
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1c.txt' OVERWRITE INTO TABLE fullouter_long_big_1c
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_big_1c
PREHOOK: query: CREATE TABLE fullouter_long_small_1c(key int, s_decimal decimal(38, 18))
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_small_1c
POSTHOOK: query: CREATE TABLE fullouter_long_small_1c(key int, s_decimal decimal(38, 18))
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_small_1c
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1c.txt' OVERWRITE INTO TABLE fullouter_long_small_1c
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_small_1c
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1c.txt' OVERWRITE INTO TABLE fullouter_long_small_1c
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_small_1c
PREHOOK: query: analyze table fullouter_long_big_1c compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1c
PREHOOK: Output: default@fullouter_long_big_1c
POSTHOOK: query: analyze table fullouter_long_big_1c compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1c
POSTHOOK: Output: default@fullouter_long_big_1c
PREHOOK: query: analyze table fullouter_long_big_1c compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_big_1c
PREHOOK: Output: default@fullouter_long_big_1c
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_big_1c compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_big_1c
POSTHOOK: Output: default@fullouter_long_big_1c
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_long_small_1c compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_small_1c
PREHOOK: Output: default@fullouter_long_small_1c
POSTHOOK: query: analyze table fullouter_long_small_1c compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_small_1c
POSTHOOK: Output: default@fullouter_long_small_1c
PREHOOK: query: analyze table fullouter_long_small_1c compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_small_1c
PREHOOK: Output: default@fullouter_long_small_1c
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_small_1c compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_small_1c
POSTHOOK: Output: default@fullouter_long_small_1c
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, b.b_string, s.key, s.s_decimal FROM fullouter_long_big_1c b FULL OUTER JOIN fullouter_long_small_1c s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1c
PREHOOK: Input: default@fullouter_long_small_1c
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, b.b_string, s.key, s.s_decimal FROM fullouter_long_big_1c b FULL OUTER JOIN fullouter_long_small_1c s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1c
POSTHOOK: Input: default@fullouter_long_small_1c
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 11 Data size: 173 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:b_string:string, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int), b_string (type: string)
                    outputColumnNames: _col0, _col1
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1]
                    Statistics: Num rows: 11 Data size: 173 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:int
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumns: 1:string
                      Statistics: Num rows: 11 Data size: 173 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:int, b_string:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 81 Data size: 1703 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:s_decimal:decimal(38,18), 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int), s_decimal (type: decimal(38,18))
                    outputColumnNames: _col0, _col1
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1]
                    Statistics: Num rows: 81 Data size: 1703 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:int
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumns: 1:decimal(38,18)
                      Statistics: Num rows: 81 Data size: 1703 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: decimal(38,18))
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:int, s_decimal:decimal(38,18)
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    dataColumns: KEY.reducesinkkey0:int, VALUE._col0:decimal(38,18)
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [bigint, string]
            Reduce Operator Tree:
              Map Join Operator
                condition map:
                     Full Outer Join 0 to 1
                keys:
                  0 KEY.reducesinkkey0 (type: int)
                  1 KEY.reducesinkkey0 (type: int)
                Map Join Vectorization:
                    bigTableKeyColumns: 0:int
                    bigTableRetainColumnNums: [0, 1]
                    bigTableValueColumns: 0:int, 1:decimal(38,18)
                    className: VectorMapJoinFullOuterLongOperator
                    fullOuterSmallTableKeyMapping: 0 -> 2
                    native: true
                    nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Outer Join has keys IS true, Optimized Table and Supports Key Types IS true
                    projectedOutput: 2:int, 3:string, 0:int, 1:decimal(38,18)
                    smallTableValueMapping: 3:string
                    hashTableImplementationType: OPTIMIZED
                outputColumnNames: _col0, _col1, _col2, _col3
                input vertices:
                  0 Map 1
                Statistics: Num rows: 89 Data size: 1873 Basic stats: COMPLETE Column stats: NONE
                DynamicPartitionHashJoin: true
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      keyColumns: 2:int
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumns: 3:string, 0:int, 1:decimal(38,18)
                  Statistics: Num rows: 89 Data size: 1873 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string), _col2 (type: int), _col3 (type: decimal(38,18))
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    dataColumns: KEY.reducesinkkey0:int, VALUE._col0:string, VALUE._col1:int, VALUE._col2:decimal(38,18)
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: string), VALUE._col1 (type: int), VALUE._col2 (type: decimal(38,18))
                outputColumnNames: _col0, _col1, _col2, _col3
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3]
                Statistics: Num rows: 89 Data size: 1873 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 89 Data size: 1873 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT b.key, b.b_string, s.key, s.s_decimal FROM fullouter_long_big_1c b FULL OUTER JOIN fullouter_long_small_1c s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1c
PREHOOK: Input: default@fullouter_long_small_1c
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, b.b_string, s.key, s.s_decimal FROM fullouter_long_big_1c b FULL OUTER JOIN fullouter_long_small_1c s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1c
POSTHOOK: Input: default@fullouter_long_small_1c
#### A masked pattern was here ####
-1437463633	JU	NULL	NULL
-1437463633	NULL	NULL	NULL
-1437463633	SOWDWMS	NULL	NULL
-1437463633	TKTKGVGFW	NULL	NULL
-1437463633	YYXPPCH	NULL	NULL
1725068083	MKSCCE	NULL	NULL
1928928239	AMKTIWQ	NULL	NULL
1928928239	NULL	NULL	NULL
1928928239	NULL	NULL	NULL
1928928239	VAQHVRI	NULL	NULL
NULL	ABBZ	NULL	NULL
NULL	NULL	-1093006502	-69.556658280000000000
NULL	NULL	-1197550983	-0.558879692200000000
NULL	NULL	-1197550983	0.100000000000000000
NULL	NULL	-1197550983	71852.833867441261300000
NULL	NULL	-1250662632	-544.554649000000000000
NULL	NULL	-1250662632	5454127198.951479000000000000
NULL	NULL	-1250662632	93104.000000000000000000
NULL	NULL	-1264372462	-6993985240226.000000000000000000
NULL	NULL	-1264372462	-899.000000000000000000
NULL	NULL	-1264372462	0.883000000000000000
NULL	NULL	-1490239076	92253.232096000000000000
NULL	NULL	-1681455031	-11105.372477000000000000
NULL	NULL	-1681455031	-6.454300000000000000
NULL	NULL	-1740848088	-9.157000000000000000
NULL	NULL	-1740848088	0.506394259000000000
NULL	NULL	-1740848088	901.441000000000000000
NULL	NULL	-2048404259	-0.322296044625100000
NULL	NULL	-2048404259	3939387044.100000000000000000
NULL	NULL	-2123273881	-55.891980000000000000
NULL	NULL	-2123273881	3.959000000000000000
NULL	NULL	-243940373	-583.258000000000000000
NULL	NULL	-243940373	-97176129669.654953000000000000
NULL	NULL	-369457052	560.119078830904550000
NULL	NULL	-369457052	7.700000000000000000
NULL	NULL	-424713789	0.480000000000000000
NULL	NULL	-466171792	0.000000000000000000
NULL	NULL	-466171792	4227.534400000000000000
NULL	NULL	-466171792	69.900000000000000000
NULL	NULL	-477147437	6.000000000000000000
NULL	NULL	-793950320	-0.100000000000000000
NULL	NULL	-793950320	-16.000000000000000000
NULL	NULL	-934092157	-7843850349.571300380000000000
NULL	NULL	-99948814	-38076694.398100000000000000
NULL	NULL	-99948814	-96386.438000000000000000
NULL	NULL	1039864870	0.700000000000000000
NULL	NULL	1039864870	94.040000000000000000
NULL	NULL	1039864870	987601.570000000000000000
NULL	NULL	1091836730	-5017.140000000000000000
NULL	NULL	1091836730	0.020000000000000000
NULL	NULL	1242586043	-4.000000000000000000
NULL	NULL	1242586043	-749975924224.630000000000000000
NULL	NULL	1242586043	71.148500000000000000
NULL	NULL	1479580778	92077343080.700000000000000000
NULL	NULL	150678276	-8278.000000000000000000
NULL	NULL	150678276	15989394.843600000000000000
NULL	NULL	1519948464	152.000000000000000000
NULL	NULL	1561921421	-5.405000000000000000
NULL	NULL	1561921421	53050.550000000000000000
NULL	NULL	1585021913	-5762331.066971120000000000
NULL	NULL	1585021913	607.227470000000000000
NULL	NULL	1585021913	745222.668089540000000000
NULL	NULL	1719049112	-7888197.000000000000000000
NULL	NULL	1738753776	-99817635066320.241600000000000000
NULL	NULL	1738753776	1525.280459649262000000
NULL	NULL	1755897735	-39.965207000000000000
NULL	NULL	1785750809	47443.115000000000000000
NULL	NULL	1801735854	-1760956929364.267000000000000000
NULL	NULL	1801735854	-438541294.700000000000000000
NULL	NULL	1816559437	-1035.700900000000000000
NULL	NULL	1909136587	-8610.078036935181000000
NULL	NULL	1909136587	181.076815359440000000
NULL	NULL	193709887	-0.566300000000000000
NULL	NULL	193709887	-19889.830000000000000000
NULL	NULL	193709887	0.800000000000000000
NULL	NULL	284554389	5.727146000000000000
NULL	NULL	294598722	-3542.600000000000000000
NULL	NULL	294598722	-9377326244.444000000000000000
NULL	NULL	448130683	-4302.485366846491000000
NULL	NULL	452719211	3020.293893074463600000
NULL	NULL	452719211	83003.437220000000000000
NULL	NULL	466567142	-58810.605860000000000000
NULL	NULL	466567142	-9763217822.129028000000000000
NULL	NULL	466567142	196.578529539858400000
NULL	NULL	560745412	678.250000000000000000
NULL	NULL	698032489	-330457.429262583900000000
NULL	NULL	891262439	-0.040000000000000000
NULL	NULL	90660785	-4564.517185000000000000
NULL	NULL	90660785	12590.288613000000000000
NULL	NULL	NULL	1.089120893565337000
NULL	NULL	NULL	4.261652270000000000
NULL	NULL	NULL	682070836.264960300000000000
PREHOOK: query: CREATE TABLE fullouter_long_big_1d(key int)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_big_1d
POSTHOOK: query: CREATE TABLE fullouter_long_big_1d(key int)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_big_1d
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1d.txt' OVERWRITE INTO TABLE fullouter_long_big_1d
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_big_1d
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_big_1d.txt' OVERWRITE INTO TABLE fullouter_long_big_1d
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_big_1d
PREHOOK: query: CREATE TABLE fullouter_long_small_1d(key int)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_long_small_1d
POSTHOOK: query: CREATE TABLE fullouter_long_small_1d(key int)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_long_small_1d
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1d.txt' OVERWRITE INTO TABLE fullouter_long_small_1d
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_long_small_1d
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_long_small_1d.txt' OVERWRITE INTO TABLE fullouter_long_small_1d
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_long_small_1d
PREHOOK: query: analyze table fullouter_long_big_1d compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1d
PREHOOK: Output: default@fullouter_long_big_1d
POSTHOOK: query: analyze table fullouter_long_big_1d compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1d
POSTHOOK: Output: default@fullouter_long_big_1d
PREHOOK: query: analyze table fullouter_long_big_1d compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_big_1d
PREHOOK: Output: default@fullouter_long_big_1d
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_big_1d compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_big_1d
POSTHOOK: Output: default@fullouter_long_big_1d
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_long_small_1d compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_small_1d
PREHOOK: Output: default@fullouter_long_small_1d
POSTHOOK: query: analyze table fullouter_long_small_1d compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_small_1d
POSTHOOK: Output: default@fullouter_long_small_1d
PREHOOK: query: analyze table fullouter_long_small_1d compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_long_small_1d
PREHOOK: Output: default@fullouter_long_small_1d
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_long_small_1d compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_long_small_1d
POSTHOOK: Output: default@fullouter_long_small_1d
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key FROM fullouter_long_big_1d b FULL OUTER JOIN fullouter_long_small_1d s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1d
PREHOOK: Input: default@fullouter_long_small_1d
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key FROM fullouter_long_big_1d b FULL OUTER JOIN fullouter_long_small_1d s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1d
POSTHOOK: Input: default@fullouter_long_small_1d
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 12 Data size: 106 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 12 Data size: 106 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:int
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 12 Data size: 106 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    includeColumns: [0]
                    dataColumns: key:int
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 39 Data size: 381 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 39 Data size: 381 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumns: 0:int
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 39 Data size: 381 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    includeColumns: [0]
                    dataColumns: key:int
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: KEY.reducesinkkey0:int
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [bigint]
            Reduce Operator Tree:
              Map Join Operator
                condition map:
                     Full Outer Join 0 to 1
                keys:
                  0 KEY.reducesinkkey0 (type: int)
                  1 KEY.reducesinkkey0 (type: int)
                Map Join Vectorization:
                    bigTableKeyColumns: 0:int
                    bigTableRetainColumnNums: [0]
                    bigTableValueColumns: 0:int
                    className: VectorMapJoinFullOuterLongOperator
                    fullOuterSmallTableKeyMapping: 0 -> 1
                    native: true
                    nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Outer Join has keys IS true, Optimized Table and Supports Key Types IS true
                    projectedOutput: 1:int, 0:int
                    hashTableImplementationType: OPTIMIZED
                outputColumnNames: _col0, _col1
                input vertices:
                  0 Map 1
                Statistics: Num rows: 42 Data size: 419 Basic stats: COMPLETE Column stats: NONE
                DynamicPartitionHashJoin: true
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      keyColumns: 1:int
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumns: 0:int
                  Statistics: Num rows: 42 Data size: 419 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: int)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    dataColumns: KEY.reducesinkkey0:int, VALUE._col0:int
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: int)
                outputColumnNames: _col0, _col1
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1]
                Statistics: Num rows: 42 Data size: 419 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 42 Data size: 419 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT b.key, s.key FROM fullouter_long_big_1d b FULL OUTER JOIN fullouter_long_small_1d s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_long_big_1d
PREHOOK: Input: default@fullouter_long_small_1d
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key FROM fullouter_long_big_1d b FULL OUTER JOIN fullouter_long_small_1d s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_long_big_1d
POSTHOOK: Input: default@fullouter_long_small_1d
#### A masked pattern was here ####
-1780951928	NULL
-2038654700	-2038654700
-670834064	NULL
-702028721	NULL
-702028721	NULL
-702028721	NULL
-814597051	NULL
-814597051	NULL
-814597051	NULL
-814597051	NULL
NULL	-1003639073
NULL	-1014271154
NULL	-1036083124
NULL	-1210744742
NULL	-1323620496
NULL	-1379355738
NULL	-1712018127
NULL	-1792852276
NULL	-1912571616
NULL	-497171161
NULL	-683339273
NULL	-707688773
NULL	-747044796
NULL	-894799664
NULL	-932176731
NULL	103640700
NULL	1164387380
NULL	1372592319
NULL	1431997749
NULL	1614287784
NULL	162858059
NULL	1635405412
NULL	1685473722
NULL	1780951928
NULL	1825107160
NULL	1831520491
NULL	1840266070
NULL	1997943409
NULL	2119085509
NULL	246169862
NULL	260588085
NULL	41376947
NULL	436878811
NULL	533298451
NULL	670834064
NULL	699007128
NULL	699863556
NULL	NULL
NULL	NULL
NULL	NULL
PREHOOK: query: CREATE TABLE fullouter_multikey_big_1a_txt(key0 smallint, key1 int)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_big_1a_txt
POSTHOOK: query: CREATE TABLE fullouter_multikey_big_1a_txt(key0 smallint, key1 int)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_big_1a_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_big_1a.txt' OVERWRITE INTO TABLE fullouter_multikey_big_1a_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_multikey_big_1a_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_big_1a.txt' OVERWRITE INTO TABLE fullouter_multikey_big_1a_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_multikey_big_1a_txt
PREHOOK: query: CREATE TABLE fullouter_multikey_big_1a STORED AS ORC AS SELECT * FROM fullouter_multikey_big_1a_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_multikey_big_1a_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_big_1a
POSTHOOK: query: CREATE TABLE fullouter_multikey_big_1a STORED AS ORC AS SELECT * FROM fullouter_multikey_big_1a_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_multikey_big_1a_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_big_1a
POSTHOOK: Lineage: fullouter_multikey_big_1a.key0 SIMPLE [(fullouter_multikey_big_1a_txt)fullouter_multikey_big_1a_txt.FieldSchema(name:key0, type:smallint, comment:null), ]
POSTHOOK: Lineage: fullouter_multikey_big_1a.key1 SIMPLE [(fullouter_multikey_big_1a_txt)fullouter_multikey_big_1a_txt.FieldSchema(name:key1, type:int, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_multikey_big_1a_nonull_txt(key0 smallint, key1 int)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_big_1a_nonull_txt
POSTHOOK: query: CREATE TABLE fullouter_multikey_big_1a_nonull_txt(key0 smallint, key1 int)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_big_1a_nonull_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_big_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_multikey_big_1a_nonull_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_multikey_big_1a_nonull_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_big_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_multikey_big_1a_nonull_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_multikey_big_1a_nonull_txt
PREHOOK: query: CREATE TABLE fullouter_multikey_big_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_multikey_big_1a_nonull_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_multikey_big_1a_nonull_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_big_1a_nonull
POSTHOOK: query: CREATE TABLE fullouter_multikey_big_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_multikey_big_1a_nonull_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_multikey_big_1a_nonull_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_big_1a_nonull
POSTHOOK: Lineage: fullouter_multikey_big_1a_nonull.key0 SIMPLE [(fullouter_multikey_big_1a_nonull_txt)fullouter_multikey_big_1a_nonull_txt.FieldSchema(name:key0, type:smallint, comment:null), ]
POSTHOOK: Lineage: fullouter_multikey_big_1a_nonull.key1 SIMPLE [(fullouter_multikey_big_1a_nonull_txt)fullouter_multikey_big_1a_nonull_txt.FieldSchema(name:key1, type:int, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_multikey_small_1a_txt(key0 smallint, key1 int)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_small_1a_txt
POSTHOOK: query: CREATE TABLE fullouter_multikey_small_1a_txt(key0 smallint, key1 int)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_small_1a_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_small_1a.txt' OVERWRITE INTO TABLE fullouter_multikey_small_1a_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_multikey_small_1a_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_small_1a.txt' OVERWRITE INTO TABLE fullouter_multikey_small_1a_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_multikey_small_1a_txt
PREHOOK: query: CREATE TABLE fullouter_multikey_small_1a STORED AS ORC AS SELECT * FROM fullouter_multikey_small_1a_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_multikey_small_1a_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_small_1a
POSTHOOK: query: CREATE TABLE fullouter_multikey_small_1a STORED AS ORC AS SELECT * FROM fullouter_multikey_small_1a_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_multikey_small_1a_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_small_1a
POSTHOOK: Lineage: fullouter_multikey_small_1a.key0 SIMPLE [(fullouter_multikey_small_1a_txt)fullouter_multikey_small_1a_txt.FieldSchema(name:key0, type:smallint, comment:null), ]
POSTHOOK: Lineage: fullouter_multikey_small_1a.key1 SIMPLE [(fullouter_multikey_small_1a_txt)fullouter_multikey_small_1a_txt.FieldSchema(name:key1, type:int, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_multikey_small_1a_nonull_txt(key0 smallint, key1 int)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_small_1a_nonull_txt
POSTHOOK: query: CREATE TABLE fullouter_multikey_small_1a_nonull_txt(key0 smallint, key1 int)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_small_1a_nonull_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_small_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_multikey_small_1a_nonull_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_multikey_small_1a_nonull_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_small_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_multikey_small_1a_nonull_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_multikey_small_1a_nonull_txt
PREHOOK: query: CREATE TABLE fullouter_multikey_small_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_multikey_small_1a_nonull_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_multikey_small_1a_nonull_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_small_1a_nonull
POSTHOOK: query: CREATE TABLE fullouter_multikey_small_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_multikey_small_1a_nonull_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_multikey_small_1a_nonull_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_small_1a_nonull
POSTHOOK: Lineage: fullouter_multikey_small_1a_nonull.key0 SIMPLE [(fullouter_multikey_small_1a_nonull_txt)fullouter_multikey_small_1a_nonull_txt.FieldSchema(name:key0, type:smallint, comment:null), ]
POSTHOOK: Lineage: fullouter_multikey_small_1a_nonull.key1 SIMPLE [(fullouter_multikey_small_1a_nonull_txt)fullouter_multikey_small_1a_nonull_txt.FieldSchema(name:key1, type:int, comment:null), ]
PREHOOK: query: analyze table fullouter_multikey_big_1a compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1a
PREHOOK: Output: default@fullouter_multikey_big_1a
POSTHOOK: query: analyze table fullouter_multikey_big_1a compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1a
POSTHOOK: Output: default@fullouter_multikey_big_1a
PREHOOK: query: analyze table fullouter_multikey_big_1a compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_multikey_big_1a
PREHOOK: Output: default@fullouter_multikey_big_1a
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_multikey_big_1a compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_multikey_big_1a
POSTHOOK: Output: default@fullouter_multikey_big_1a
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_multikey_big_1a_nonull compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1a_nonull
PREHOOK: Output: default@fullouter_multikey_big_1a_nonull
POSTHOOK: query: analyze table fullouter_multikey_big_1a_nonull compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1a_nonull
POSTHOOK: Output: default@fullouter_multikey_big_1a_nonull
PREHOOK: query: analyze table fullouter_multikey_big_1a_nonull compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_multikey_big_1a_nonull
PREHOOK: Output: default@fullouter_multikey_big_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_multikey_big_1a_nonull compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_multikey_big_1a_nonull
POSTHOOK: Output: default@fullouter_multikey_big_1a_nonull
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_multikey_small_1a compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_small_1a
PREHOOK: Output: default@fullouter_multikey_small_1a
POSTHOOK: query: analyze table fullouter_multikey_small_1a compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_small_1a
POSTHOOK: Output: default@fullouter_multikey_small_1a
PREHOOK: query: analyze table fullouter_multikey_small_1a compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_multikey_small_1a
PREHOOK: Output: default@fullouter_multikey_small_1a
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_multikey_small_1a compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_multikey_small_1a
POSTHOOK: Output: default@fullouter_multikey_small_1a
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_multikey_small_1a_nonull compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_small_1a_nonull
PREHOOK: Output: default@fullouter_multikey_small_1a_nonull
POSTHOOK: query: analyze table fullouter_multikey_small_1a_nonull compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_small_1a_nonull
POSTHOOK: Output: default@fullouter_multikey_small_1a_nonull
PREHOOK: query: analyze table fullouter_multikey_small_1a_nonull compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_multikey_small_1a_nonull
PREHOOK: Output: default@fullouter_multikey_small_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_multikey_small_1a_nonull compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_multikey_small_1a_nonull
POSTHOOK: Output: default@fullouter_multikey_small_1a_nonull
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a b FULL OUTER JOIN fullouter_multikey_small_1a s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1a
PREHOOK: Input: default@fullouter_multikey_small_1a
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a b FULL OUTER JOIN fullouter_multikey_small_1a s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1a
POSTHOOK: Input: default@fullouter_multikey_small_1a
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 13 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key0:smallint, 1:key1:int, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key0 (type: smallint), key1 (type: int)
                    outputColumnNames: _col0, _col1
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1]
                    Statistics: Num rows: 13 Data size: 140 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: smallint), _col1 (type: int)
                      null sort order: zz
                      sort order: ++
                      Map-reduce partition columns: _col0 (type: smallint), _col1 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkMultiKeyOperator
                          keyColumns: 0:smallint, 1:int
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 13 Data size: 140 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key0:smallint, key1:int
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 92 Data size: 1092 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key0:smallint, 1:key1:int, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key0 (type: smallint), key1 (type: int)
                    outputColumnNames: _col0, _col1
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1]
                    Statistics: Num rows: 92 Data size: 1092 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: smallint), _col1 (type: int)
                      null sort order: zz
                      sort order: ++
                      Map-reduce partition columns: _col0 (type: smallint), _col1 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkMultiKeyOperator
                          keyColumns: 0:smallint, 1:int
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 92 Data size: 1092 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key0:smallint, key1:int
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: zz
                reduceColumnSortOrder: ++
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    dataColumns: KEY.reducesinkkey0:smallint, KEY.reducesinkkey1:int
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [bigint, bigint]
            Reduce Operator Tree:
              Map Join Operator
                condition map:
                     Full Outer Join 0 to 1
                keys:
                  0 KEY.reducesinkkey0 (type: smallint), KEY.reducesinkkey1 (type: int)
                  1 KEY.reducesinkkey0 (type: smallint), KEY.reducesinkkey1 (type: int)
                Map Join Vectorization:
                    bigTableKeyColumns: 0:smallint, 1:int
                    bigTableRetainColumnNums: [0, 1]
                    bigTableValueColumns: 0:smallint, 1:int
                    className: VectorMapJoinFullOuterMultiKeyOperator
                    fullOuterSmallTableKeyMapping: 0 -> 2, 1 -> 3
                    native: true
                    nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Outer Join has keys IS true, Optimized Table and Supports Key Types IS true
                    projectedOutput: 2:smallint, 3:int, 0:smallint, 1:int
                    hashTableImplementationType: OPTIMIZED
                outputColumnNames: _col0, _col1, _col2, _col3
                input vertices:
                  0 Map 1
                Statistics: Num rows: 101 Data size: 1201 Basic stats: COMPLETE Column stats: NONE
                DynamicPartitionHashJoin: true
                Reduce Output Operator
                  key expressions: _col0 (type: smallint), _col1 (type: int)
                  null sort order: zz
                  sort order: ++
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      keyColumns: 2:smallint, 3:int
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumns: 0:smallint, 1:int
                  Statistics: Num rows: 101 Data size: 1201 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: smallint), _col3 (type: int)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: zz
                reduceColumnSortOrder: ++
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    dataColumns: KEY.reducesinkkey0:smallint, KEY.reducesinkkey1:int, VALUE._col0:smallint, VALUE._col1:int
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: smallint), KEY.reducesinkkey1 (type: int), VALUE._col0 (type: smallint), VALUE._col1 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3]
                Statistics: Num rows: 101 Data size: 1201 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 101 Data size: 1201 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a b FULL OUTER JOIN fullouter_multikey_small_1a s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1a
PREHOOK: Input: default@fullouter_multikey_small_1a
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a b FULL OUTER JOIN fullouter_multikey_small_1a s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1a
POSTHOOK: Input: default@fullouter_multikey_small_1a
#### A masked pattern was here ####
-17582	-1730236061	NULL	NULL
-17582	1082230084	NULL	NULL
-17582	267529350	-17582	267529350
-17582	827141667	NULL	NULL
-17582	9637312	NULL	NULL
-18222	-1969080993	NULL	NULL
-6131	-1969080993	-6131	-1969080993
1499	371855128	NULL	NULL
22767	-1969080993	NULL	NULL
3556	-1969080993	NULL	NULL
3556	NULL	NULL	NULL
NULL	1082230084	NULL	NULL
NULL	NULL	-11868	-3536499
NULL	NULL	-11868	-915441041
NULL	NULL	-11868	1052120431
NULL	NULL	-11868	1318114822
NULL	NULL	-11868	1456809245
NULL	NULL	-11868	1658440922
NULL	NULL	-11868	930596435
NULL	NULL	-11868	97203778
NULL	NULL	-12252	1956403781
NULL	NULL	-12252	964377504
NULL	NULL	-15212	-2055239583
NULL	NULL	-17788	-1361776766
NULL	NULL	-17788	-738743861
NULL	NULL	-17788	-872691214
NULL	NULL	-17788	528419995
NULL	NULL	-1787	-63842445
NULL	NULL	-20125	-1995259010
NULL	NULL	-20900	1078466156
NULL	NULL	-22311	-2055239583
NULL	NULL	-23457	-63842445
NULL	NULL	-2407	1078466156
NULL	NULL	-24206	-1456409156
NULL	NULL	-24206	641361618
NULL	NULL	-26894	-63842445
NULL	NULL	-28129	-2055239583
NULL	NULL	-28137	-63842445
NULL	NULL	-28313	-706104224
NULL	NULL	-28313	51228026
NULL	NULL	-28313	837320573
NULL	NULL	-4117	-1386947816
NULL	NULL	-5734	1078466156
NULL	NULL	-6061	-586336015
NULL	NULL	-7386	-1635102480
NULL	NULL	-7386	-2112062470
NULL	NULL	-7386	100736776
NULL	NULL	-980	-270600267
NULL	NULL	-980	-333603940
NULL	NULL	-980	-465544127
NULL	NULL	-980	-801821285
NULL	NULL	-980	1310479628
NULL	NULL	-980	2009785365
NULL	NULL	-980	356970043
NULL	NULL	-980	628784462
NULL	NULL	-980	712692345
NULL	NULL	11460	1078466156
NULL	NULL	12089	-63842445
NULL	NULL	13672	-63842445
NULL	NULL	14400	-825652334
NULL	NULL	15061	-63842445
NULL	NULL	15404	1078466156
NULL	NULL	16166	931172175
NULL	NULL	16696	-63842445
NULL	NULL	20156	-1618478138
NULL	NULL	20156	1165375499
NULL	NULL	20156	1855042153
NULL	NULL	20156	963883665
NULL	NULL	20969	-1995259010
NULL	NULL	21186	-586336015
NULL	NULL	22934	-1695419330
NULL	NULL	23015	-1893013623
NULL	NULL	23015	-217613200
NULL	NULL	23015	-252525791
NULL	NULL	23015	-276888585
NULL	NULL	23015	-696928205
NULL	NULL	23015	-893234501
NULL	NULL	23015	258882280
NULL	NULL	23015	564751472
NULL	NULL	26738	-2055239583
NULL	NULL	26944	-1995259010
NULL	NULL	30353	-1007182618
NULL	NULL	30353	-1011627089
NULL	NULL	30353	-1507157031
NULL	NULL	30353	105613996
NULL	NULL	30353	1241923267
NULL	NULL	30353	1364268303
NULL	NULL	30353	2044473567
NULL	NULL	31443	-1968665833
NULL	NULL	3412	-1196037018
NULL	NULL	3412	-1249487623
NULL	NULL	3412	-2081156563
NULL	NULL	3412	-2132472060
NULL	NULL	3412	1253976194
NULL	NULL	3890	1411429004
NULL	NULL	4586	-586336015
NULL	NULL	4779	-1995259010
NULL	NULL	4902	1078466156
NULL	NULL	5957	-1995259010
NULL	NULL	8177	-1995259010
NULL	NULL	NULL	1082230084
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL
PREHOOK: query: SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a_nonull b FULL OUTER JOIN fullouter_multikey_small_1a s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1a_nonull
PREHOOK: Input: default@fullouter_multikey_small_1a
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a_nonull b FULL OUTER JOIN fullouter_multikey_small_1a s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1a_nonull
POSTHOOK: Input: default@fullouter_multikey_small_1a
#### A masked pattern was here ####
-17582	-1730236061	NULL	NULL
-17582	1082230084	NULL	NULL
-17582	267529350	-17582	267529350
-17582	827141667	NULL	NULL
-17582	9637312	NULL	NULL
-18222	-1969080993	NULL	NULL
-6131	-1969080993	-6131	-1969080993
1499	371855128	NULL	NULL
22767	-1969080993	NULL	NULL
3556	-1969080993	NULL	NULL
NULL	NULL	-11868	-3536499
NULL	NULL	-11868	-915441041
NULL	NULL	-11868	1052120431
NULL	NULL	-11868	1318114822
NULL	NULL	-11868	1456809245
NULL	NULL	-11868	1658440922
NULL	NULL	-11868	930596435
NULL	NULL	-11868	97203778
NULL	NULL	-12252	1956403781
NULL	NULL	-12252	964377504
NULL	NULL	-15212	-2055239583
NULL	NULL	-17788	-1361776766
NULL	NULL	-17788	-738743861
NULL	NULL	-17788	-872691214
NULL	NULL	-17788	528419995
NULL	NULL	-1787	-63842445
NULL	NULL	-20125	-1995259010
NULL	NULL	-20900	1078466156
NULL	NULL	-22311	-2055239583
NULL	NULL	-23457	-63842445
NULL	NULL	-2407	1078466156
NULL	NULL	-24206	-1456409156
NULL	NULL	-24206	641361618
NULL	NULL	-26894	-63842445
NULL	NULL	-28129	-2055239583
NULL	NULL	-28137	-63842445
NULL	NULL	-28313	-706104224
NULL	NULL	-28313	51228026
NULL	NULL	-28313	837320573
NULL	NULL	-4117	-1386947816
NULL	NULL	-5734	1078466156
NULL	NULL	-6061	-586336015
NULL	NULL	-7386	-1635102480
NULL	NULL	-7386	-2112062470
NULL	NULL	-7386	100736776
NULL	NULL	-980	-270600267
NULL	NULL	-980	-333603940
NULL	NULL	-980	-465544127
NULL	NULL	-980	-801821285
NULL	NULL	-980	1310479628
NULL	NULL	-980	2009785365
NULL	NULL	-980	356970043
NULL	NULL	-980	628784462
NULL	NULL	-980	712692345
NULL	NULL	11460	1078466156
NULL	NULL	12089	-63842445
NULL	NULL	13672	-63842445
NULL	NULL	14400	-825652334
NULL	NULL	15061	-63842445
NULL	NULL	15404	1078466156
NULL	NULL	16166	931172175
NULL	NULL	16696	-63842445
NULL	NULL	20156	-1618478138
NULL	NULL	20156	1165375499
NULL	NULL	20156	1855042153
NULL	NULL	20156	963883665
NULL	NULL	20969	-1995259010
NULL	NULL	21186	-586336015
NULL	NULL	22934	-1695419330
NULL	NULL	23015	-1893013623
NULL	NULL	23015	-217613200
NULL	NULL	23015	-252525791
NULL	NULL	23015	-276888585
NULL	NULL	23015	-696928205
NULL	NULL	23015	-893234501
NULL	NULL	23015	258882280
NULL	NULL	23015	564751472
NULL	NULL	26738	-2055239583
NULL	NULL	26944	-1995259010
NULL	NULL	30353	-1007182618
NULL	NULL	30353	-1011627089
NULL	NULL	30353	-1507157031
NULL	NULL	30353	105613996
NULL	NULL	30353	1241923267
NULL	NULL	30353	1364268303
NULL	NULL	30353	2044473567
NULL	NULL	31443	-1968665833
NULL	NULL	3412	-1196037018
NULL	NULL	3412	-1249487623
NULL	NULL	3412	-2081156563
NULL	NULL	3412	-2132472060
NULL	NULL	3412	1253976194
NULL	NULL	3890	1411429004
NULL	NULL	4586	-586336015
NULL	NULL	4779	-1995259010
NULL	NULL	4902	1078466156
NULL	NULL	5957	-1995259010
NULL	NULL	8177	-1995259010
NULL	NULL	NULL	1082230084
NULL	NULL	NULL	NULL
PREHOOK: query: SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a b FULL OUTER JOIN fullouter_multikey_small_1a_nonull s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1a
PREHOOK: Input: default@fullouter_multikey_small_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a b FULL OUTER JOIN fullouter_multikey_small_1a_nonull s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1a
POSTHOOK: Input: default@fullouter_multikey_small_1a_nonull
#### A masked pattern was here ####
-17582	-1730236061	NULL	NULL
-17582	1082230084	NULL	NULL
-17582	267529350	-17582	267529350
-17582	827141667	NULL	NULL
-17582	9637312	NULL	NULL
-18222	-1969080993	NULL	NULL
-6131	-1969080993	-6131	-1969080993
1499	371855128	NULL	NULL
22767	-1969080993	NULL	NULL
3556	-1969080993	NULL	NULL
3556	NULL	NULL	NULL
NULL	1082230084	NULL	NULL
NULL	NULL	-11868	-3536499
NULL	NULL	-11868	-915441041
NULL	NULL	-11868	1052120431
NULL	NULL	-11868	1318114822
NULL	NULL	-11868	1456809245
NULL	NULL	-11868	1658440922
NULL	NULL	-11868	930596435
NULL	NULL	-11868	97203778
NULL	NULL	-12252	1956403781
NULL	NULL	-12252	964377504
NULL	NULL	-15212	-2055239583
NULL	NULL	-17788	-1361776766
NULL	NULL	-17788	-738743861
NULL	NULL	-17788	-872691214
NULL	NULL	-17788	528419995
NULL	NULL	-1787	-63842445
NULL	NULL	-20125	-1995259010
NULL	NULL	-20900	1078466156
NULL	NULL	-22311	-2055239583
NULL	NULL	-23457	-63842445
NULL	NULL	-2407	1078466156
NULL	NULL	-24206	-1456409156
NULL	NULL	-24206	641361618
NULL	NULL	-26894	-63842445
NULL	NULL	-28129	-2055239583
NULL	NULL	-28137	-63842445
NULL	NULL	-28313	-706104224
NULL	NULL	-28313	51228026
NULL	NULL	-28313	837320573
NULL	NULL	-4117	-1386947816
NULL	NULL	-5734	1078466156
NULL	NULL	-6061	-586336015
NULL	NULL	-7386	-1635102480
NULL	NULL	-7386	-2112062470
NULL	NULL	-7386	100736776
NULL	NULL	-980	-270600267
NULL	NULL	-980	-333603940
NULL	NULL	-980	-465544127
NULL	NULL	-980	-801821285
NULL	NULL	-980	1310479628
NULL	NULL	-980	2009785365
NULL	NULL	-980	356970043
NULL	NULL	-980	628784462
NULL	NULL	-980	712692345
NULL	NULL	11460	1078466156
NULL	NULL	12089	-63842445
NULL	NULL	13672	-63842445
NULL	NULL	14400	-825652334
NULL	NULL	15061	-63842445
NULL	NULL	15404	1078466156
NULL	NULL	16166	931172175
NULL	NULL	16696	-63842445
NULL	NULL	20156	-1618478138
NULL	NULL	20156	1165375499
NULL	NULL	20156	1855042153
NULL	NULL	20156	963883665
NULL	NULL	20969	-1995259010
NULL	NULL	21186	-586336015
NULL	NULL	22934	-1695419330
NULL	NULL	23015	-1893013623
NULL	NULL	23015	-217613200
NULL	NULL	23015	-252525791
NULL	NULL	23015	-276888585
NULL	NULL	23015	-696928205
NULL	NULL	23015	-893234501
NULL	NULL	23015	258882280
NULL	NULL	23015	564751472
NULL	NULL	26738	-2055239583
NULL	NULL	26944	-1995259010
NULL	NULL	30353	-1007182618
NULL	NULL	30353	-1011627089
NULL	NULL	30353	-1507157031
NULL	NULL	30353	105613996
NULL	NULL	30353	1241923267
NULL	NULL	30353	1364268303
NULL	NULL	30353	2044473567
NULL	NULL	31443	-1968665833
NULL	NULL	3412	-1196037018
NULL	NULL	3412	-1249487623
NULL	NULL	3412	-2081156563
NULL	NULL	3412	-2132472060
NULL	NULL	3412	1253976194
NULL	NULL	3890	1411429004
NULL	NULL	4586	-586336015
NULL	NULL	4779	-1995259010
NULL	NULL	4902	1078466156
NULL	NULL	5957	-1995259010
NULL	NULL	8177	-1995259010
NULL	NULL	NULL	NULL
PREHOOK: query: SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a_nonull b FULL OUTER JOIN fullouter_multikey_small_1a_nonull s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1a_nonull
PREHOOK: Input: default@fullouter_multikey_small_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key0, b.key1, s.key0, s.key1 FROM fullouter_multikey_big_1a_nonull b FULL OUTER JOIN fullouter_multikey_small_1a_nonull s ON b.key0 = s.key0 AND b.key1 = s.key1
order by b.key0, b.key1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1a_nonull
POSTHOOK: Input: default@fullouter_multikey_small_1a_nonull
#### A masked pattern was here ####
-17582	-1730236061	NULL	NULL
-17582	1082230084	NULL	NULL
-17582	267529350	-17582	267529350
-17582	827141667	NULL	NULL
-17582	9637312	NULL	NULL
-18222	-1969080993	NULL	NULL
-6131	-1969080993	-6131	-1969080993
1499	371855128	NULL	NULL
22767	-1969080993	NULL	NULL
3556	-1969080993	NULL	NULL
NULL	NULL	-11868	-3536499
NULL	NULL	-11868	-915441041
NULL	NULL	-11868	1052120431
NULL	NULL	-11868	1318114822
NULL	NULL	-11868	1456809245
NULL	NULL	-11868	1658440922
NULL	NULL	-11868	930596435
NULL	NULL	-11868	97203778
NULL	NULL	-12252	1956403781
NULL	NULL	-12252	964377504
NULL	NULL	-15212	-2055239583
NULL	NULL	-17788	-1361776766
NULL	NULL	-17788	-738743861
NULL	NULL	-17788	-872691214
NULL	NULL	-17788	528419995
NULL	NULL	-1787	-63842445
NULL	NULL	-20125	-1995259010
NULL	NULL	-20900	1078466156
NULL	NULL	-22311	-2055239583
NULL	NULL	-23457	-63842445
NULL	NULL	-2407	1078466156
NULL	NULL	-24206	-1456409156
NULL	NULL	-24206	641361618
NULL	NULL	-26894	-63842445
NULL	NULL	-28129	-2055239583
NULL	NULL	-28137	-63842445
NULL	NULL	-28313	-706104224
NULL	NULL	-28313	51228026
NULL	NULL	-28313	837320573
NULL	NULL	-4117	-1386947816
NULL	NULL	-5734	1078466156
NULL	NULL	-6061	-586336015
NULL	NULL	-7386	-1635102480
NULL	NULL	-7386	-2112062470
NULL	NULL	-7386	100736776
NULL	NULL	-980	-270600267
NULL	NULL	-980	-333603940
NULL	NULL	-980	-465544127
NULL	NULL	-980	-801821285
NULL	NULL	-980	1310479628
NULL	NULL	-980	2009785365
NULL	NULL	-980	356970043
NULL	NULL	-980	628784462
NULL	NULL	-980	712692345
NULL	NULL	11460	1078466156
NULL	NULL	12089	-63842445
NULL	NULL	13672	-63842445
NULL	NULL	14400	-825652334
NULL	NULL	15061	-63842445
NULL	NULL	15404	1078466156
NULL	NULL	16166	931172175
NULL	NULL	16696	-63842445
NULL	NULL	20156	-1618478138
NULL	NULL	20156	1165375499
NULL	NULL	20156	1855042153
NULL	NULL	20156	963883665
NULL	NULL	20969	-1995259010
NULL	NULL	21186	-586336015
NULL	NULL	22934	-1695419330
NULL	NULL	23015	-1893013623
NULL	NULL	23015	-217613200
NULL	NULL	23015	-252525791
NULL	NULL	23015	-276888585
NULL	NULL	23015	-696928205
NULL	NULL	23015	-893234501
NULL	NULL	23015	258882280
NULL	NULL	23015	564751472
NULL	NULL	26738	-2055239583
NULL	NULL	26944	-1995259010
NULL	NULL	30353	-1007182618
NULL	NULL	30353	-1011627089
NULL	NULL	30353	-1507157031
NULL	NULL	30353	105613996
NULL	NULL	30353	1241923267
NULL	NULL	30353	1364268303
NULL	NULL	30353	2044473567
NULL	NULL	31443	-1968665833
NULL	NULL	3412	-1196037018
NULL	NULL	3412	-1249487623
NULL	NULL	3412	-2081156563
NULL	NULL	3412	-2132472060
NULL	NULL	3412	1253976194
NULL	NULL	3890	1411429004
NULL	NULL	4586	-586336015
NULL	NULL	4779	-1995259010
NULL	NULL	4902	1078466156
NULL	NULL	5957	-1995259010
NULL	NULL	8177	-1995259010
PREHOOK: query: CREATE TABLE fullouter_multikey_big_1b_txt(key0 timestamp, key1 smallint, key2 string)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_big_1b_txt
POSTHOOK: query: CREATE TABLE fullouter_multikey_big_1b_txt(key0 timestamp, key1 smallint, key2 string)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_big_1b_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_big_1b.txt' OVERWRITE INTO TABLE fullouter_multikey_big_1b_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_multikey_big_1b_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_big_1b.txt' OVERWRITE INTO TABLE fullouter_multikey_big_1b_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_multikey_big_1b_txt
PREHOOK: query: CREATE TABLE fullouter_multikey_big_1b STORED AS ORC AS SELECT * FROM fullouter_multikey_big_1b_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_multikey_big_1b_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_big_1b
POSTHOOK: query: CREATE TABLE fullouter_multikey_big_1b STORED AS ORC AS SELECT * FROM fullouter_multikey_big_1b_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_multikey_big_1b_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_big_1b
POSTHOOK: Lineage: fullouter_multikey_big_1b.key0 SIMPLE [(fullouter_multikey_big_1b_txt)fullouter_multikey_big_1b_txt.FieldSchema(name:key0, type:timestamp, comment:null), ]
POSTHOOK: Lineage: fullouter_multikey_big_1b.key1 SIMPLE [(fullouter_multikey_big_1b_txt)fullouter_multikey_big_1b_txt.FieldSchema(name:key1, type:smallint, comment:null), ]
POSTHOOK: Lineage: fullouter_multikey_big_1b.key2 SIMPLE [(fullouter_multikey_big_1b_txt)fullouter_multikey_big_1b_txt.FieldSchema(name:key2, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_multikey_small_1b_txt(key0 timestamp, key1 smallint, key2 string, s_decimal decimal(38, 18))
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_small_1b_txt
POSTHOOK: query: CREATE TABLE fullouter_multikey_small_1b_txt(key0 timestamp, key1 smallint, key2 string, s_decimal decimal(38, 18))
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_small_1b_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_small_1b.txt' OVERWRITE INTO TABLE fullouter_multikey_small_1b_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_multikey_small_1b_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_multikey_small_1b.txt' OVERWRITE INTO TABLE fullouter_multikey_small_1b_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_multikey_small_1b_txt
PREHOOK: query: CREATE TABLE fullouter_multikey_small_1b STORED AS ORC AS SELECT * FROM fullouter_multikey_small_1b_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_multikey_small_1b_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_multikey_small_1b
POSTHOOK: query: CREATE TABLE fullouter_multikey_small_1b STORED AS ORC AS SELECT * FROM fullouter_multikey_small_1b_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_multikey_small_1b_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_multikey_small_1b
POSTHOOK: Lineage: fullouter_multikey_small_1b.key0 SIMPLE [(fullouter_multikey_small_1b_txt)fullouter_multikey_small_1b_txt.FieldSchema(name:key0, type:timestamp, comment:null), ]
POSTHOOK: Lineage: fullouter_multikey_small_1b.key1 SIMPLE [(fullouter_multikey_small_1b_txt)fullouter_multikey_small_1b_txt.FieldSchema(name:key1, type:smallint, comment:null), ]
POSTHOOK: Lineage: fullouter_multikey_small_1b.key2 SIMPLE [(fullouter_multikey_small_1b_txt)fullouter_multikey_small_1b_txt.FieldSchema(name:key2, type:string, comment:null), ]
POSTHOOK: Lineage: fullouter_multikey_small_1b.s_decimal SIMPLE [(fullouter_multikey_small_1b_txt)fullouter_multikey_small_1b_txt.FieldSchema(name:s_decimal, type:decimal(38,18), comment:null), ]
PREHOOK: query: analyze table fullouter_multikey_big_1b_txt compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1b_txt
PREHOOK: Output: default@fullouter_multikey_big_1b_txt
POSTHOOK: query: analyze table fullouter_multikey_big_1b_txt compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1b_txt
POSTHOOK: Output: default@fullouter_multikey_big_1b_txt
PREHOOK: query: analyze table fullouter_multikey_big_1b_txt compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_multikey_big_1b_txt
PREHOOK: Output: default@fullouter_multikey_big_1b_txt
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_multikey_big_1b_txt compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_multikey_big_1b_txt
POSTHOOK: Output: default@fullouter_multikey_big_1b_txt
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_multikey_small_1b_txt compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_small_1b_txt
PREHOOK: Output: default@fullouter_multikey_small_1b_txt
POSTHOOK: query: analyze table fullouter_multikey_small_1b_txt compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_small_1b_txt
POSTHOOK: Output: default@fullouter_multikey_small_1b_txt
PREHOOK: query: analyze table fullouter_multikey_small_1b_txt compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_multikey_small_1b_txt
PREHOOK: Output: default@fullouter_multikey_small_1b_txt
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_multikey_small_1b_txt compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_multikey_small_1b_txt
POSTHOOK: Output: default@fullouter_multikey_small_1b_txt
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key0, b.key1, b.key2, s.key0, s.key1, s.key2, s.s_decimal FROM fullouter_multikey_big_1b b FULL OUTER JOIN fullouter_multikey_small_1b s ON b.key0 = s.key0 AND b.key1 = s.key1 AND b.key2 = s.key2
order by b.key0, b.key1
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1b
PREHOOK: Input: default@fullouter_multikey_small_1b
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key0, b.key1, b.key2, s.key0, s.key1, s.key2, s.s_decimal FROM fullouter_multikey_big_1b b FULL OUTER JOIN fullouter_multikey_small_1b s ON b.key0 = s.key0 AND b.key1 = s.key1 AND b.key2 = s.key2
order by b.key0, b.key1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1b
POSTHOOK: Input: default@fullouter_multikey_small_1b
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 17 Data size: 1729 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key0:timestamp, 1:key1:smallint, 2:key2:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key0 (type: timestamp), key1 (type: smallint), key2 (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2]
                    Statistics: Num rows: 17 Data size: 1729 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: timestamp), _col1 (type: smallint), _col2 (type: string)
                      null sort order: zzz
                      sort order: +++
                      Map-reduce partition columns: _col0 (type: timestamp), _col1 (type: smallint), _col2 (type: string)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkMultiKeyOperator
                          keyColumns: 0:timestamp, 1:smallint, 2:string
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 17 Data size: 1729 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    includeColumns: [0, 1, 2]
                    dataColumns: key0:timestamp, key1:smallint, key2:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 118 Data size: 28216 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key0:timestamp, 1:key1:smallint, 2:key2:string, 3:s_decimal:decimal(38,18), 4:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key0 (type: timestamp), key1 (type: smallint), key2 (type: string), s_decimal (type: decimal(38,18))
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2, 3]
                    Statistics: Num rows: 118 Data size: 28216 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: timestamp), _col1 (type: smallint), _col2 (type: string)
                      null sort order: zzz
                      sort order: +++
                      Map-reduce partition columns: _col0 (type: timestamp), _col1 (type: smallint), _col2 (type: string)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkMultiKeyOperator
                          keyColumns: 0:timestamp, 1:smallint, 2:string
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumns: 3:decimal(38,18)
                      Statistics: Num rows: 118 Data size: 28216 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col3 (type: decimal(38,18))
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    includeColumns: [0, 1, 2, 3]
                    dataColumns: key0:timestamp, key1:smallint, key2:string, s_decimal:decimal(38,18)
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: zzz
                reduceColumnSortOrder: +++
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    dataColumns: KEY.reducesinkkey0:timestamp, KEY.reducesinkkey1:smallint, KEY.reducesinkkey2:string, VALUE._col0:decimal(38,18)
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [timestamp, bigint, string]
            Reduce Operator Tree:
              Map Join Operator
                condition map:
                     Full Outer Join 0 to 1
                keys:
                  0 KEY.reducesinkkey0 (type: timestamp), KEY.reducesinkkey1 (type: smallint), KEY.reducesinkkey2 (type: string)
                  1 KEY.reducesinkkey0 (type: timestamp), KEY.reducesinkkey1 (type: smallint), KEY.reducesinkkey2 (type: string)
                Map Join Vectorization:
                    bigTableKeyColumns: 0:timestamp, 1:smallint, 2:string
                    bigTableRetainColumnNums: [0, 1, 2, 3]
                    bigTableValueColumns: 0:timestamp, 1:smallint, 2:string, 3:decimal(38,18)
                    className: VectorMapJoinFullOuterMultiKeyOperator
                    fullOuterSmallTableKeyMapping: 0 -> 4, 1 -> 5, 2 -> 6
                    native: true
                    nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Outer Join has keys IS true, Optimized Table and Supports Key Types IS true
                    projectedOutput: 4:timestamp, 5:smallint, 6:string, 0:timestamp, 1:smallint, 2:string, 3:decimal(38,18)
                    hashTableImplementationType: OPTIMIZED
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                input vertices:
                  0 Map 1
                Statistics: Num rows: 129 Data size: 31037 Basic stats: COMPLETE Column stats: NONE
                DynamicPartitionHashJoin: true
                Reduce Output Operator
                  key expressions: _col0 (type: timestamp), _col1 (type: smallint)
                  null sort order: zz
                  sort order: ++
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      keyColumns: 4:timestamp, 5:smallint
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumns: 6:string, 0:timestamp, 1:smallint, 2:string, 3:decimal(38,18)
                  Statistics: Num rows: 129 Data size: 31037 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: string), _col3 (type: timestamp), _col4 (type: smallint), _col5 (type: string), _col6 (type: decimal(38,18))
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: zz
                reduceColumnSortOrder: ++
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 7
                    dataColumns: KEY.reducesinkkey0:timestamp, KEY.reducesinkkey1:smallint, VALUE._col0:string, VALUE._col1:timestamp, VALUE._col2:smallint, VALUE._col3:string, VALUE._col4:decimal(38,18)
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: timestamp), KEY.reducesinkkey1 (type: smallint), VALUE._col0 (type: string), VALUE._col1 (type: timestamp), VALUE._col2 (type: smallint), VALUE._col3 (type: string), VALUE._col4 (type: decimal(38,18))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3, 4, 5, 6]
                Statistics: Num rows: 129 Data size: 31037 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 129 Data size: 31037 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT b.key0, b.key1, b.key2, s.key0, s.key1, s.key2, s.s_decimal FROM fullouter_multikey_big_1b b FULL OUTER JOIN fullouter_multikey_small_1b s ON b.key0 = s.key0 AND b.key1 = s.key1 AND b.key2 = s.key2
order by b.key0, b.key1
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_multikey_big_1b
PREHOOK: Input: default@fullouter_multikey_small_1b
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key0, b.key1, b.key2, s.key0, s.key1, s.key2, s.s_decimal FROM fullouter_multikey_big_1b b FULL OUTER JOIN fullouter_multikey_small_1b s ON b.key0 = s.key0 AND b.key1 = s.key1 AND b.key2 = s.key2
order by b.key0, b.key1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_multikey_big_1b
POSTHOOK: Input: default@fullouter_multikey_small_1b
#### A masked pattern was here ####
2061-12-19 22:10:32.000628309	21635	ANCO	NULL	NULL	NULL	NULL
2082-07-14 04:00:40.695380469	12556	NCYBDW	NULL	NULL	NULL	NULL
2093-04-10 23:36:54.846	1446	GHZVPWFO	NULL	NULL	NULL	NULL
2093-04-10 23:36:54.846	28996	Q	NULL	NULL	NULL	NULL
2093-04-10 23:36:54.846	NULL	NULL	NULL	NULL	NULL	NULL
2188-06-04 15:03:14.963259704	9468	AAA	2188-06-04 15:03:14.963259704	9468	AAA	2.754963520000000000
2299-11-15 16:41:30.401	-31077	NCYBDW	NULL	NULL	NULL	NULL
2306-06-21 11:02:00.143124239	-6909	NCYBDW	NULL	NULL	NULL	NULL
2306-06-21 11:02:00.143124239	1446	NULL	NULL	NULL	NULL	NULL
2608-02-23 23:44:02.546440891	26184	NCYBDW	NULL	NULL	NULL	NULL
2686-05-23 07:46:46.565832918	13212	NCYBDW	2686-05-23 07:46:46.565832918	13212	NCYBDW	-917116793.400000000000000000
2686-05-23 07:46:46.565832918	NULL	GHZVPWFO	NULL	NULL	NULL	NULL
2898-10-01 22:27:02.000871113	10361	NCYBDW	NULL	NULL	NULL	NULL
NULL	-6909	NULL	NULL	NULL	NULL	NULL
NULL	21635	ANCO	NULL	NULL	NULL	NULL
NULL	NULL	CCWYD	NULL	NULL	NULL	NULL
NULL	NULL	NULL	1905-04-20 13:42:25.000469776	2638	KAUUFF	7.000000000000000000
NULL	NULL	NULL	1919-06-20 00:16:50.611028595	20223	ZKBC	-23.000000000000000000
NULL	NULL	NULL	1931-12-04 11:13:47.269597392	23196	HVJCQMTQL	-9697532.899400000000000000
NULL	NULL	NULL	1941-10-16 02:19:36.000423663	-24459	AO	-821445414.457971200000000000
NULL	NULL	NULL	1957-02-01 14:00:29.000548421	-16085	ZVEUKC	-2312.814900000000000000
NULL	NULL	NULL	1957-03-06 09:57:31	-26373	NXLNNSO	2.000000000000000000
NULL	NULL	NULL	1980-09-13 19:57:15	NULL	M	57650.772300000000000000
NULL	NULL	NULL	2018-11-25 22:27:55.84	-12202	VBDBM	7506645.953700000000000000
NULL	NULL	NULL	2018-11-25 22:27:55.84	-12202	VBDBM	98790.713907420831000000
NULL	NULL	NULL	2018-11-25 22:27:55.84	-22419	LOTLS	342.372604022858400000
NULL	NULL	NULL	2038-10-12 09:15:33.000539653	-19598	YKNIAJW	-642807895924.660000000000000000
NULL	NULL	NULL	2044-05-02 07:00:03.35	-8751	ZSMB	-453797242.029791752000000000
NULL	NULL	NULL	2071-07-21 20:02:32.000250697	2638	NRUV	-66198.351092000000000000
NULL	NULL	NULL	2073-03-21 15:32:57.617920888	26425	MPRACIRYW	5.000000000000000000
NULL	NULL	NULL	2073-03-21 15:32:57.617920888	26425	MPRACIRYW	726945733.419300000000000000
NULL	NULL	NULL	2075-10-25 20:32:40.000792874	NULL	NULL	226612651968.360760000000000000
NULL	NULL	NULL	2083-06-07 09:35:19.383	-26373	MR	-394.086700000000000000
NULL	NULL	NULL	2083-06-07 09:35:19.383	-26373	MR	67892053.023760940000000000
NULL	NULL	NULL	2086-04-09 00:03:10	20223	THXNJGFFV	-85184687349898.892000000000000000
NULL	NULL	NULL	2086-04-09 00:03:10	20223	THXNJGFFV	0.439686100000000000
NULL	NULL	NULL	2086-04-09 00:03:10	20223	THXNJGFFV	482.538341135921900000
NULL	NULL	NULL	2105-01-04 16:27:45	23100	ZSMB	-83.232800000000000000
NULL	NULL	NULL	2145-10-15 06:58:42.831	2638	NULL	-9784.820000000000000000
NULL	NULL	NULL	2145-10-15 06:58:42.831	2638	UANGISEXR	-5996.306000000000000000
NULL	NULL	NULL	2169-04-02 06:30:32	23855	PDVQATOS	-1515597428.000000000000000000
NULL	NULL	NULL	2169-04-02 06:30:32	23855	PDVQATOS	-4016.960800000000000000
NULL	NULL	NULL	2201-07-05 17:22:06.084206844	-24459	UBGT	1.506948328200000000
NULL	NULL	NULL	2238-05-17 19:27:25.519	20223	KQCM	-0.010950000000000000
NULL	NULL	NULL	2242-08-04 07:51:46.905	20223	UCYXACQ	-0.261490000000000000
NULL	NULL	NULL	2242-08-04 07:51:46.905	20223	UCYXACQ	37.728800000000000000
NULL	NULL	NULL	2266-09-26 06:27:29.000284762	20223	EDYJJN	14.000000000000000000
NULL	NULL	NULL	2301-06-03 17:16:19	15332	ZVEUKC	0.500000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	-13125	JFYW	6.086657000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	11101	YJCKKCR	-0.200000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	11101	YJCKKCR	-0.500000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	11101	YJCKKCR	1279917802.420000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	12587	OPW	-4.594895040000000000
NULL	NULL	NULL	2304-12-15 15:31:16	1301	T	-0.800000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	1301	T	2720.800000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	1301	T	61.302000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	15090	G	-4319470286240016.300000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	15090	G	975.000000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	30285	GSJPSIYOU	0.200000000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	8650	RLNO	-0.435500000000000000
NULL	NULL	NULL	2304-12-15 15:31:16	8650	RLNO	0.713517473350000000
NULL	NULL	NULL	2309-01-15 12:43:49	22821	ZMY	40.900000000000000000
NULL	NULL	NULL	2332-06-14 07:02:42.32	-26373	XFFFDTQ	56845106806308.900000000000000000
NULL	NULL	NULL	2333-07-28 09:59:26	23196	RKSK	37872288434740893.500000000000000000
NULL	NULL	NULL	2338-02-12 09:30:07	20223	CTH	-6154.763054000000000000
NULL	NULL	NULL	2340-12-15 05:15:17.133588982	23663	HHTP	33383.800000000000000000
NULL	NULL	NULL	2355-09-23 19:52:34.638084141	-19598	H	74179461.880493000000000000
NULL	NULL	NULL	2355-09-23 19:52:34.638084141	-19598	H	92.150000000000000000
NULL	NULL	NULL	2357-05-08 07:09:09.000482799	6226	ZSMB	-32.460000000000000000
NULL	NULL	NULL	2357-05-08 07:09:09.000482799	6226	ZSMB	-472.000000000000000000
NULL	NULL	NULL	2391-01-17 15:28:37.00045143	16160	ZVEUKC	771355639420297.133000000000000000
NULL	NULL	NULL	2396-04-06 15:39:02.404013577	29661	ZSMB	-5151598.347000000000000000
NULL	NULL	NULL	2396-04-06 15:39:02.404013577	29661	ZSMB	0.767183260000000000
NULL	NULL	NULL	2409-09-23 10:33:27	2638	XSXR	-162.950000000000000000
NULL	NULL	NULL	2409-09-23 10:33:27	2638	XSXR	-9926693851.000000000000000000
NULL	NULL	NULL	2409-09-23 10:33:27	2638	XSXR	0.400000000000000000
NULL	NULL	NULL	2410-05-03 13:44:56	2638	PHOR	-769088.176482000000000000
NULL	NULL	NULL	2410-05-03 13:44:56	2638	PHOR	93262.914526611000000000
NULL	NULL	NULL	2461-03-09 09:54:45.000982385	-16454	ZSMB	-9575827.553960000000000000
NULL	NULL	NULL	2461-03-09 09:54:45.000982385	-16454	ZSMB	-991.436050000000000000
NULL	NULL	NULL	2461-03-09 09:54:45.000982385	-16454	ZSMB	8694.890000000000000000
NULL	NULL	NULL	2462-12-16 23:11:32.633305644	-26373	CB	-582687.000000000000000000
NULL	NULL	NULL	2462-12-16 23:11:32.633305644	-26373	CB	67.417990000000000000
NULL	NULL	NULL	2467-05-11 06:04:13.426693647	23196	EIBSDASR	-8.554888380100000000
NULL	NULL	NULL	2480-10-02 09:31:37.000770961	-26373	NBN	-5875.519725200000000000
NULL	NULL	NULL	2512-10-06 03:03:03	-3465	VZQ	-49.512190000000000000
NULL	NULL	NULL	2512-10-06 03:03:03	-3465	VZQ	0.445800000000000000
NULL	NULL	NULL	2512-10-06 03:03:03	13195	CRJ	14.000000000000000000
NULL	NULL	NULL	2512-10-06 03:03:03	1560	X	-922.695158410700000000
NULL	NULL	NULL	2512-10-06 03:03:03	1560	X	761196.522000000000000000
NULL	NULL	NULL	2512-10-06 03:03:03	24313	QBHUG	-8423.151573236000000000
NULL	NULL	NULL	2512-10-06 03:03:03	32099	ARNZ	-0.410000000000000000
NULL	NULL	NULL	2525-05-12 15:59:35	-24459	SAVRGA	53106747151.863300000000000000
NULL	NULL	NULL	2535-03-01 05:04:49.000525883	23663	ALIQKNXHE	-0.166569100000000000
NULL	NULL	NULL	2629-04-07 01:54:11	-6776	WGGFVFTW	41.774515077866460000
NULL	NULL	NULL	2629-04-07 01:54:11	-6776	WGGFVFTW	6.801285170800000000
NULL	NULL	NULL	2637-03-12 22:25:46.385	-12923	PPTJPFR	5.400000000000000000
NULL	NULL	NULL	2637-03-12 22:25:46.385	-17786	HYEGQ	-84.169614329419000000
NULL	NULL	NULL	2637-03-12 22:25:46.385	21841	CXTI	7362887891522.378200000000000000
NULL	NULL	NULL	2637-03-12 22:25:46.385	21841	CXTI	749563668434009.650000000000000000
NULL	NULL	NULL	2668-06-25 07:12:37.000970744	2638	TJE	-2.779682700000000000
NULL	NULL	NULL	2688-02-06 20:58:42.000947837	20223	PAIY	67661.735000000000000000
NULL	NULL	NULL	2743-12-27 05:16:19.000573579	-12914	ZVEUKC	-811984611.517849700000000000
NULL	NULL	NULL	2759-11-26 22:19:55.410967136	-27454	ZMY	368.000000000000000000
NULL	NULL	NULL	2759-11-26 22:19:55.410967136	-27454	ZMY	60.602579700000000000
NULL	NULL	NULL	2808-07-09 02:10:11.928498854	-19598	FHFX	0.300000000000000000
NULL	NULL	NULL	2829-06-04 08:01:47.836	22771	ZVEUKC	94317.753180000000000000
NULL	NULL	NULL	2861-05-27 07:13:01.000848622	-19598	WKPXNLXS	29399.000000000000000000
NULL	NULL	NULL	2882-05-20 07:21:25.221299462	23196	U	-4244.926206619000000000
NULL	NULL	NULL	2882-05-20 07:21:25.221299462	23196	U	-9951044.000000000000000000
NULL	NULL	NULL	2888-05-08 08:36:55.182302102	5786	ZVEUKC	-56082455.033918000000000000
NULL	NULL	NULL	2888-05-08 08:36:55.182302102	5786	ZVEUKC	57.621752577880370000
NULL	NULL	NULL	2897-08-10 15:21:47.09	23663	XYUVBED	51.732330327300000000
NULL	NULL	NULL	2897-08-10 15:21:47.09	23663	XYUVBED	6370.000000000000000000
NULL	NULL	NULL	2898-12-18 03:37:17	-24459	MHNBXPBM	14.236693562384810000
NULL	NULL	NULL	2913-07-17 15:06:58.041	-10206	NULL	-0.200000000000000000
NULL	NULL	NULL	2938-12-21 23:35:59.498	29362	ZMY	0.880000000000000000
NULL	NULL	NULL	2957-05-07 10:41:46	20223	OWQT	-586953.153681000000000000
NULL	NULL	NULL	2960-04-12 07:03:42.000366651	20340	CYZYUNSF	-96.300000000000000000
NULL	NULL	NULL	2960-04-12 07:03:42.000366651	20340	CYZYUNSF	2.157765900000000000
NULL	NULL	NULL	2969-01-23 14:08:04.000667259	-18138	VDPN	8924831210.427680190000000000
NULL	NULL	NULL	2969-01-23 14:08:04.000667259	-32485	AGEPWWLJF	-48431309405.652522000000000000
NULL	NULL	NULL	2969-01-23 14:08:04.000667259	-8913	UIMQ	-375994644577.315257000000000000
NULL	NULL	NULL	2969-01-23 14:08:04.000667259	-8913	UIMQ	-81.000000000000000000
NULL	NULL	NULL	2969-01-23 14:08:04.000667259	-8913	UIMQ	9.178000000000000000
NULL	NULL	NULL	2969-01-23 14:08:04.000667259	14500	WXLTRFQP	-23.819800000000000000
NULL	NULL	NULL	2969-01-23 14:08:04.000667259	6689	TFGVOGPJF	-0.010000000000000000
NULL	NULL	NULL	2971-02-14 09:13:19	-16605	BVACIRP	-27394351.300000000000000000
NULL	NULL	NULL	2971-02-14 09:13:19	-16605	BVACIRP	-5.751278023000000000
NULL	NULL	NULL	NULL	-12914	ZVEUKC	221.000000000000000000
NULL	NULL	NULL	NULL	NULL	NULL	-2.400000000000000000
NULL	NULL	NULL	NULL	NULL	NULL	-2207.300000000000000000
NULL	NULL	NULL	NULL	NULL	NULL	NULL
PREHOOK: query: CREATE TABLE fullouter_string_big_1a_txt(key string)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_string_big_1a_txt
POSTHOOK: query: CREATE TABLE fullouter_string_big_1a_txt(key string)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_string_big_1a_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_string_big_1a.txt' OVERWRITE INTO TABLE fullouter_string_big_1a_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_string_big_1a_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_string_big_1a.txt' OVERWRITE INTO TABLE fullouter_string_big_1a_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_string_big_1a_txt
PREHOOK: query: CREATE TABLE fullouter_string_big_1a STORED AS ORC AS SELECT * FROM fullouter_string_big_1a_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_string_big_1a_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_string_big_1a
POSTHOOK: query: CREATE TABLE fullouter_string_big_1a STORED AS ORC AS SELECT * FROM fullouter_string_big_1a_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_string_big_1a_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_string_big_1a
POSTHOOK: Lineage: fullouter_string_big_1a.key SIMPLE [(fullouter_string_big_1a_txt)fullouter_string_big_1a_txt.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_string_big_1a_nonull_txt(key string)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_string_big_1a_nonull_txt
POSTHOOK: query: CREATE TABLE fullouter_string_big_1a_nonull_txt(key string)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_string_big_1a_nonull_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_string_big_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_string_big_1a_nonull_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_string_big_1a_nonull_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_string_big_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_string_big_1a_nonull_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_string_big_1a_nonull_txt
PREHOOK: query: CREATE TABLE fullouter_string_big_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_string_big_1a_nonull_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_string_big_1a_nonull_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_string_big_1a_nonull
POSTHOOK: query: CREATE TABLE fullouter_string_big_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_string_big_1a_nonull_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_string_big_1a_nonull_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_string_big_1a_nonull
POSTHOOK: Lineage: fullouter_string_big_1a_nonull.key SIMPLE [(fullouter_string_big_1a_nonull_txt)fullouter_string_big_1a_nonull_txt.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_string_small_1a_txt(key string, s_date date, s_timestamp timestamp)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_string_small_1a_txt
POSTHOOK: query: CREATE TABLE fullouter_string_small_1a_txt(key string, s_date date, s_timestamp timestamp)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_string_small_1a_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_string_small_1a.txt' OVERWRITE INTO TABLE fullouter_string_small_1a_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_string_small_1a_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_string_small_1a.txt' OVERWRITE INTO TABLE fullouter_string_small_1a_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_string_small_1a_txt
PREHOOK: query: CREATE TABLE fullouter_string_small_1a STORED AS ORC AS SELECT * FROM fullouter_string_small_1a_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_string_small_1a_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_string_small_1a
POSTHOOK: query: CREATE TABLE fullouter_string_small_1a STORED AS ORC AS SELECT * FROM fullouter_string_small_1a_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_string_small_1a_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_string_small_1a
POSTHOOK: Lineage: fullouter_string_small_1a.key SIMPLE [(fullouter_string_small_1a_txt)fullouter_string_small_1a_txt.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: fullouter_string_small_1a.s_date SIMPLE [(fullouter_string_small_1a_txt)fullouter_string_small_1a_txt.FieldSchema(name:s_date, type:date, comment:null), ]
POSTHOOK: Lineage: fullouter_string_small_1a.s_timestamp SIMPLE [(fullouter_string_small_1a_txt)fullouter_string_small_1a_txt.FieldSchema(name:s_timestamp, type:timestamp, comment:null), ]
PREHOOK: query: CREATE TABLE fullouter_string_small_1a_nonull_txt(key string, s_date date, s_timestamp timestamp)
row format delimited fields terminated by ','
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_string_small_1a_nonull_txt
POSTHOOK: query: CREATE TABLE fullouter_string_small_1a_nonull_txt(key string, s_date date, s_timestamp timestamp)
row format delimited fields terminated by ','
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_string_small_1a_nonull_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_string_small_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_string_small_1a_nonull_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@fullouter_string_small_1a_nonull_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/fullouter_string_small_1a_nonull.txt' OVERWRITE INTO TABLE fullouter_string_small_1a_nonull_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@fullouter_string_small_1a_nonull_txt
PREHOOK: query: CREATE TABLE fullouter_string_small_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_string_small_1a_nonull_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@fullouter_string_small_1a_nonull_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@fullouter_string_small_1a_nonull
POSTHOOK: query: CREATE TABLE fullouter_string_small_1a_nonull STORED AS ORC AS SELECT * FROM fullouter_string_small_1a_nonull_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@fullouter_string_small_1a_nonull_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@fullouter_string_small_1a_nonull
POSTHOOK: Lineage: fullouter_string_small_1a_nonull.key SIMPLE [(fullouter_string_small_1a_nonull_txt)fullouter_string_small_1a_nonull_txt.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: fullouter_string_small_1a_nonull.s_date SIMPLE [(fullouter_string_small_1a_nonull_txt)fullouter_string_small_1a_nonull_txt.FieldSchema(name:s_date, type:date, comment:null), ]
POSTHOOK: Lineage: fullouter_string_small_1a_nonull.s_timestamp SIMPLE [(fullouter_string_small_1a_nonull_txt)fullouter_string_small_1a_nonull_txt.FieldSchema(name:s_timestamp, type:timestamp, comment:null), ]
PREHOOK: query: analyze table fullouter_string_big_1a compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_string_big_1a
PREHOOK: Output: default@fullouter_string_big_1a
POSTHOOK: query: analyze table fullouter_string_big_1a compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_string_big_1a
POSTHOOK: Output: default@fullouter_string_big_1a
PREHOOK: query: analyze table fullouter_string_big_1a compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_string_big_1a
PREHOOK: Output: default@fullouter_string_big_1a
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_string_big_1a compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_string_big_1a
POSTHOOK: Output: default@fullouter_string_big_1a
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_string_big_1a_nonull compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_string_big_1a_nonull
PREHOOK: Output: default@fullouter_string_big_1a_nonull
POSTHOOK: query: analyze table fullouter_string_big_1a_nonull compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_string_big_1a_nonull
POSTHOOK: Output: default@fullouter_string_big_1a_nonull
PREHOOK: query: analyze table fullouter_string_big_1a_nonull compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_string_big_1a_nonull
PREHOOK: Output: default@fullouter_string_big_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_string_big_1a_nonull compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_string_big_1a_nonull
POSTHOOK: Output: default@fullouter_string_big_1a_nonull
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_string_small_1a compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_string_small_1a
PREHOOK: Output: default@fullouter_string_small_1a
POSTHOOK: query: analyze table fullouter_string_small_1a compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_string_small_1a
POSTHOOK: Output: default@fullouter_string_small_1a
PREHOOK: query: analyze table fullouter_string_small_1a compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_string_small_1a
PREHOOK: Output: default@fullouter_string_small_1a
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_string_small_1a compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_string_small_1a
POSTHOOK: Output: default@fullouter_string_small_1a
#### A masked pattern was here ####
PREHOOK: query: analyze table fullouter_string_small_1a_nonull compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_string_small_1a_nonull
PREHOOK: Output: default@fullouter_string_small_1a_nonull
POSTHOOK: query: analyze table fullouter_string_small_1a_nonull compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_string_small_1a_nonull
POSTHOOK: Output: default@fullouter_string_small_1a_nonull
PREHOOK: query: analyze table fullouter_string_small_1a_nonull compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@fullouter_string_small_1a_nonull
PREHOOK: Output: default@fullouter_string_small_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: analyze table fullouter_string_small_1a_nonull compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@fullouter_string_small_1a_nonull
POSTHOOK: Output: default@fullouter_string_small_1a_nonull
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a b FULL OUTER JOIN fullouter_string_small_1a s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_string_big_1a
PREHOOK: Input: default@fullouter_string_small_1a
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a b FULL OUTER JOIN fullouter_string_small_1a s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_string_big_1a
POSTHOOK: Input: default@fullouter_string_small_1a
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 13 Data size: 1108 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 13 Data size: 1108 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: string)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkStringOperator
                          keyColumns: 0:string
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      Statistics: Num rows: 13 Data size: 1108 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    includeColumns: [0]
                    dataColumns: key:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 38 Data size: 6758 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:s_date:date, 2:s_timestamp:timestamp, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: string), s_date (type: date), s_timestamp (type: timestamp)
                    outputColumnNames: _col0, _col1, _col2
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0, 1, 2]
                    Statistics: Num rows: 38 Data size: 6758 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: string)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkStringOperator
                          keyColumns: 0:string
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumns: 1:date, 2:timestamp
                      Statistics: Num rows: 38 Data size: 6758 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: date), _col2 (type: timestamp)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    includeColumns: [0, 1, 2]
                    dataColumns: key:string, s_date:date, s_timestamp:timestamp
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: KEY.reducesinkkey0:string, VALUE._col0:date, VALUE._col1:timestamp
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [string]
            Reduce Operator Tree:
              Map Join Operator
                condition map:
                     Full Outer Join 0 to 1
                keys:
                  0 KEY.reducesinkkey0 (type: string)
                  1 KEY.reducesinkkey0 (type: string)
                Map Join Vectorization:
                    bigTableKeyColumns: 0:string
                    bigTableRetainColumnNums: [0, 1, 2]
                    bigTableValueColumns: 0:string, 1:date, 2:timestamp
                    className: VectorMapJoinFullOuterStringOperator
                    fullOuterSmallTableKeyMapping: 0 -> 3
                    native: true
                    nativeConditionsMet: hive.mapjoin.optimized.hashtable IS true, hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Small table vectorizes IS true, Outer Join has keys IS true, Optimized Table and Supports Key Types IS true
                    projectedOutput: 3:string, 0:string, 1:date, 2:timestamp
                    hashTableImplementationType: OPTIMIZED
                outputColumnNames: _col0, _col1, _col2, _col3
                input vertices:
                  0 Map 1
                Statistics: Num rows: 41 Data size: 7433 Basic stats: COMPLETE Column stats: NONE
                DynamicPartitionHashJoin: true
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: z
                  sort order: +
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      keyColumns: 3:string
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumns: 0:string, 1:date, 2:timestamp
                  Statistics: Num rows: 41 Data size: 7433 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string), _col2 (type: date), _col3 (type: timestamp)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: z
                reduceColumnSortOrder: +
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 4
                    dataColumns: KEY.reducesinkkey0:string, VALUE._col0:string, VALUE._col1:date, VALUE._col2:timestamp
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: string), VALUE._col1 (type: date), VALUE._col2 (type: timestamp)
                outputColumnNames: _col0, _col1, _col2, _col3
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3]
                Statistics: Num rows: 41 Data size: 7433 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 41 Data size: 7433 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a b FULL OUTER JOIN fullouter_string_small_1a s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_string_big_1a
PREHOOK: Input: default@fullouter_string_small_1a
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a b FULL OUTER JOIN fullouter_string_small_1a s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_string_big_1a
POSTHOOK: Input: default@fullouter_string_small_1a
#### A masked pattern was here ####
FTWURVH	FTWURVH	1976-03-10	2683-11-22 13:07:04.66673556
MXGDMBD	MXGDMBD	1880-11-01	2765-10-06 13:28:17.000688592
NULL		1985-01-22	2111-01-10 15:44:28
NULL		2021-02-21	2802-04-21 18:48:18.5933838
NULL	AARNZRVZQ	2000-11-13	2309-06-05 19:54:13
NULL	AARNZRVZQ	2002-10-23	2525-05-12 15:59:35
NULL	ATZJTPECF	1829-10-16	2357-05-08 07:09:09.000482799
NULL	ATZJTPECF	2217-10-22	2808-10-20 16:01:24.558
NULL	BDBMW	2278-04-27	2101-02-21 08:53:34.692
NULL	BEP	2141-02-19	2521-06-09 01:20:07.121
NULL	BEP	2206-08-10	2331-10-09 10:59:51
NULL	CQMTQLI	2031-09-13	1927-02-13 08:39:25.000919094
NULL	CQMTQLI	2090-11-13	2693-03-17 16:19:55.82
NULL	FROPIK	2023-02-28	2467-05-11 06:04:13.426693647
NULL	FROPIK	2124-10-01	2974-07-06 12:05:08.000146048
NULL	FROPIK	2214-02-09	1949-08-18 17:14:38.000703738
NULL	FYW	1807-03-20	2305-08-17 01:32:44
NULL	GOYJHW	1959-04-27	NULL
NULL	GOYJHW	1976-03-06	2805-07-10 10:51:57.00083302
NULL	GOYJHW	1993-04-07	1950-05-04 09:28:22.000114784
NULL	GSJPSIYOU	1948-07-17	2006-09-24 16:01:24.000239251
NULL	IOQIDQBHU	2198-02-08	2073-03-21 15:32:57.617920888
NULL	IWEZJHKE	NULL	NULL
NULL	KL	1980-09-22	2073-08-25 11:51:10.318
NULL	LOTLS	1957-11-09	2092-06-07 06:42:30.000538454
NULL	LOTLS	2099-08-04	2181-01-25 01:04:25.000030055
NULL	LOTLS	2126-09-16	1977-12-15 15:28:56
NULL	NADANUQMW	2037-10-19	2320-04-26 18:50:25.000426922
NULL	NULL	1865-11-08	2893-04-07 07:36:12
NULL	NULL	1915-02-22	2554-10-27 09:34:30
NULL	NULL	2250-04-22	2548-03-21 08:23:13.133573801
NULL	NULL	NULL	NULL
NULL	QTSRKSKB	2144-01-13	2627-12-20 03:38:53.000389266
NULL	SDA	2196-04-12	2462-10-26 19:28:12.733
NULL	VNRXWQ	1883-02-06	2287-07-17 16:46:58.287
NULL	VNRXWQ	2276-11-16	2072-08-16 17:45:47.48349887
NULL	WNGFTTY	1843-06-10	2411-01-28 20:03:59
NULL	WNGFTTY	2251-08-16	2649-12-21 18:30:42.498
NULL	ZNOUDCR	NULL	1988-04-23 08:40:21
PXLD	NULL	NULL	NULL
PXLD	NULL	NULL	NULL
PXLD	NULL	NULL	NULL
QNCYBDW	NULL	NULL	NULL
UA	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
PREHOOK: query: SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a_nonull b FULL OUTER JOIN fullouter_string_small_1a s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_string_big_1a_nonull
PREHOOK: Input: default@fullouter_string_small_1a
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a_nonull b FULL OUTER JOIN fullouter_string_small_1a s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_string_big_1a_nonull
POSTHOOK: Input: default@fullouter_string_small_1a
#### A masked pattern was here ####
FTWURVH	FTWURVH	1976-03-10	2683-11-22 13:07:04.66673556
MXGDMBD	MXGDMBD	1880-11-01	2765-10-06 13:28:17.000688592
NULL		1985-01-22	2111-01-10 15:44:28
NULL		2021-02-21	2802-04-21 18:48:18.5933838
NULL	AARNZRVZQ	2000-11-13	2309-06-05 19:54:13
NULL	AARNZRVZQ	2002-10-23	2525-05-12 15:59:35
NULL	ATZJTPECF	1829-10-16	2357-05-08 07:09:09.000482799
NULL	ATZJTPECF	2217-10-22	2808-10-20 16:01:24.558
NULL	BDBMW	2278-04-27	2101-02-21 08:53:34.692
NULL	BEP	2141-02-19	2521-06-09 01:20:07.121
NULL	BEP	2206-08-10	2331-10-09 10:59:51
NULL	CQMTQLI	2031-09-13	1927-02-13 08:39:25.000919094
NULL	CQMTQLI	2090-11-13	2693-03-17 16:19:55.82
NULL	FROPIK	2023-02-28	2467-05-11 06:04:13.426693647
NULL	FROPIK	2124-10-01	2974-07-06 12:05:08.000146048
NULL	FROPIK	2214-02-09	1949-08-18 17:14:38.000703738
NULL	FYW	1807-03-20	2305-08-17 01:32:44
NULL	GOYJHW	1959-04-27	NULL
NULL	GOYJHW	1976-03-06	2805-07-10 10:51:57.00083302
NULL	GOYJHW	1993-04-07	1950-05-04 09:28:22.000114784
NULL	GSJPSIYOU	1948-07-17	2006-09-24 16:01:24.000239251
NULL	IOQIDQBHU	2198-02-08	2073-03-21 15:32:57.617920888
NULL	IWEZJHKE	NULL	NULL
NULL	KL	1980-09-22	2073-08-25 11:51:10.318
NULL	LOTLS	1957-11-09	2092-06-07 06:42:30.000538454
NULL	LOTLS	2099-08-04	2181-01-25 01:04:25.000030055
NULL	LOTLS	2126-09-16	1977-12-15 15:28:56
NULL	NADANUQMW	2037-10-19	2320-04-26 18:50:25.000426922
NULL	NULL	1865-11-08	2893-04-07 07:36:12
NULL	NULL	1915-02-22	2554-10-27 09:34:30
NULL	NULL	2250-04-22	2548-03-21 08:23:13.133573801
NULL	QTSRKSKB	2144-01-13	2627-12-20 03:38:53.000389266
NULL	SDA	2196-04-12	2462-10-26 19:28:12.733
NULL	VNRXWQ	1883-02-06	2287-07-17 16:46:58.287
NULL	VNRXWQ	2276-11-16	2072-08-16 17:45:47.48349887
NULL	WNGFTTY	1843-06-10	2411-01-28 20:03:59
NULL	WNGFTTY	2251-08-16	2649-12-21 18:30:42.498
NULL	ZNOUDCR	NULL	1988-04-23 08:40:21
PXLD	NULL	NULL	NULL
PXLD	NULL	NULL	NULL
PXLD	NULL	NULL	NULL
QNCYBDW	NULL	NULL	NULL
UA	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
PREHOOK: query: SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a b FULL OUTER JOIN fullouter_string_small_1a_nonull s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_string_big_1a
PREHOOK: Input: default@fullouter_string_small_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a b FULL OUTER JOIN fullouter_string_small_1a_nonull s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_string_big_1a
POSTHOOK: Input: default@fullouter_string_small_1a_nonull
#### A masked pattern was here ####
FTWURVH	FTWURVH	1976-03-10	2683-11-22 13:07:04.66673556
MXGDMBD	MXGDMBD	1880-11-01	2765-10-06 13:28:17.000688592
NULL		1985-01-22	2111-01-10 15:44:28
NULL		2021-02-21	2802-04-21 18:48:18.5933838
NULL	AARNZRVZQ	2000-11-13	2309-06-05 19:54:13
NULL	AARNZRVZQ	2002-10-23	2525-05-12 15:59:35
NULL	ATZJTPECF	1829-10-16	2357-05-08 07:09:09.000482799
NULL	ATZJTPECF	2217-10-22	2808-10-20 16:01:24.558
NULL	BDBMW	2278-04-27	2101-02-21 08:53:34.692
NULL	BEP	2141-02-19	2521-06-09 01:20:07.121
NULL	BEP	2206-08-10	2331-10-09 10:59:51
NULL	CQMTQLI	2031-09-13	1927-02-13 08:39:25.000919094
NULL	CQMTQLI	2090-11-13	2693-03-17 16:19:55.82
NULL	FROPIK	2023-02-28	2467-05-11 06:04:13.426693647
NULL	FROPIK	2124-10-01	2974-07-06 12:05:08.000146048
NULL	FROPIK	2214-02-09	1949-08-18 17:14:38.000703738
NULL	FYW	1807-03-20	2305-08-17 01:32:44
NULL	GOYJHW	1959-04-27	NULL
NULL	GOYJHW	1976-03-06	2805-07-10 10:51:57.00083302
NULL	GOYJHW	1993-04-07	1950-05-04 09:28:22.000114784
NULL	GSJPSIYOU	1948-07-17	2006-09-24 16:01:24.000239251
NULL	IOQIDQBHU	2198-02-08	2073-03-21 15:32:57.617920888
NULL	IWEZJHKE	NULL	NULL
NULL	KL	1980-09-22	2073-08-25 11:51:10.318
NULL	LOTLS	1957-11-09	2092-06-07 06:42:30.000538454
NULL	LOTLS	2099-08-04	2181-01-25 01:04:25.000030055
NULL	LOTLS	2126-09-16	1977-12-15 15:28:56
NULL	NADANUQMW	2037-10-19	2320-04-26 18:50:25.000426922
NULL	NULL	NULL	NULL
NULL	QTSRKSKB	2144-01-13	2627-12-20 03:38:53.000389266
NULL	SDA	2196-04-12	2462-10-26 19:28:12.733
NULL	VNRXWQ	1883-02-06	2287-07-17 16:46:58.287
NULL	VNRXWQ	2276-11-16	2072-08-16 17:45:47.48349887
NULL	WNGFTTY	1843-06-10	2411-01-28 20:03:59
NULL	WNGFTTY	2251-08-16	2649-12-21 18:30:42.498
NULL	ZNOUDCR	NULL	1988-04-23 08:40:21
PXLD	NULL	NULL	NULL
PXLD	NULL	NULL	NULL
PXLD	NULL	NULL	NULL
QNCYBDW	NULL	NULL	NULL
UA	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
PREHOOK: query: SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a_nonull b FULL OUTER JOIN fullouter_string_small_1a_nonull s ON b.key = s.key
order by b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@fullouter_string_big_1a_nonull
PREHOOK: Input: default@fullouter_string_small_1a_nonull
#### A masked pattern was here ####
POSTHOOK: query: SELECT b.key, s.key, s.s_date, s.s_timestamp FROM fullouter_string_big_1a_nonull b FULL OUTER JOIN fullouter_string_small_1a_nonull s ON b.key = s.key
order by b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@fullouter_string_big_1a_nonull
POSTHOOK: Input: default@fullouter_string_small_1a_nonull
#### A masked pattern was here ####
FTWURVH	FTWURVH	1976-03-10	2683-11-22 13:07:04.66673556
MXGDMBD	MXGDMBD	1880-11-01	2765-10-06 13:28:17.000688592
NULL		1985-01-22	2111-01-10 15:44:28
NULL		2021-02-21	2802-04-21 18:48:18.5933838
NULL	AARNZRVZQ	2000-11-13	2309-06-05 19:54:13
NULL	AARNZRVZQ	2002-10-23	2525-05-12 15:59:35
NULL	ATZJTPECF	1829-10-16	2357-05-08 07:09:09.000482799
NULL	ATZJTPECF	2217-10-22	2808-10-20 16:01:24.558
NULL	BDBMW	2278-04-27	2101-02-21 08:53:34.692
NULL	BEP	2141-02-19	2521-06-09 01:20:07.121
NULL	BEP	2206-08-10	2331-10-09 10:59:51
NULL	CQMTQLI	2031-09-13	1927-02-13 08:39:25.000919094
NULL	CQMTQLI	2090-11-13	2693-03-17 16:19:55.82
NULL	FROPIK	2023-02-28	2467-05-11 06:04:13.426693647
NULL	FROPIK	2124-10-01	2974-07-06 12:05:08.000146048
NULL	FROPIK	2214-02-09	1949-08-18 17:14:38.000703738
NULL	FYW	1807-03-20	2305-08-17 01:32:44
NULL	GOYJHW	1959-04-27	NULL
NULL	GOYJHW	1976-03-06	2805-07-10 10:51:57.00083302
NULL	GOYJHW	1993-04-07	1950-05-04 09:28:22.000114784
NULL	GSJPSIYOU	1948-07-17	2006-09-24 16:01:24.000239251
NULL	IOQIDQBHU	2198-02-08	2073-03-21 15:32:57.617920888
NULL	IWEZJHKE	NULL	NULL
NULL	KL	1980-09-22	2073-08-25 11:51:10.318
NULL	LOTLS	1957-11-09	2092-06-07 06:42:30.000538454
NULL	LOTLS	2099-08-04	2181-01-25 01:04:25.000030055
NULL	LOTLS	2126-09-16	1977-12-15 15:28:56
NULL	NADANUQMW	2037-10-19	2320-04-26 18:50:25.000426922
NULL	QTSRKSKB	2144-01-13	2627-12-20 03:38:53.000389266
NULL	SDA	2196-04-12	2462-10-26 19:28:12.733
NULL	VNRXWQ	1883-02-06	2287-07-17 16:46:58.287
NULL	VNRXWQ	2276-11-16	2072-08-16 17:45:47.48349887
NULL	WNGFTTY	1843-06-10	2411-01-28 20:03:59
NULL	WNGFTTY	2251-08-16	2649-12-21 18:30:42.498
NULL	ZNOUDCR	NULL	1988-04-23 08:40:21
PXLD	NULL	NULL	NULL
PXLD	NULL	NULL	NULL
PXLD	NULL	NULL	NULL
QNCYBDW	NULL	NULL	NULL
UA	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
WXHJ	NULL	NULL	NULL
