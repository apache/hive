PREHOOK: query: CREATE TABLE emps
(
    empid  INTEGER,
    deptno INTEGER,
    name   VARCHAR(10),
    salary DECIMAL(8, 2)
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@emps
POSTHOOK: query: CREATE TABLE emps
(
    empid  INTEGER,
    deptno INTEGER,
    name   VARCHAR(10),
    salary DECIMAL(8, 2)
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emps
PREHOOK: query: INSERT INTO emps VALUES (0, 0, 'Rob', 150000.50), (1, 0, 'Alice', 160000.30), (2, 0, 'Mark', 100000.20), 
                        (3, 1, 'Greg', 50000.20), (4, 1, 'Josh', 150000.50), (5, 1, 'Hector', 50000.20)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps
POSTHOOK: query: INSERT INTO emps VALUES (0, 0, 'Rob', 150000.50), (1, 0, 'Alice', 160000.30), (2, 0, 'Mark', 100000.20), 
                        (3, 1, 'Greg', 50000.20), (4, 1, 'Josh', 150000.50), (5, 1, 'Hector', 50000.20)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps
POSTHOOK: Lineage: emps.deptno SCRIPT []
POSTHOOK: Lineage: emps.empid SCRIPT []
POSTHOOK: Lineage: emps.name SCRIPT []
POSTHOOK: Lineage: emps.salary SCRIPT []
PREHOOK: query: CREATE TABLE depts
(
    deptno INTEGER,
    name   VARCHAR(20)
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@depts
POSTHOOK: query: CREATE TABLE depts
(
    deptno INTEGER,
    name   VARCHAR(20)
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@depts
PREHOOK: query: INSERT INTO depts VALUES (0, 'Engineering'), (1, 'Support'), (2, 'Sales')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@depts
POSTHOOK: query: INSERT INTO depts VALUES (0, 'Engineering'), (1, 'Support'), (2, 'Sales')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@depts
POSTHOOK: Lineage: depts.deptno SCRIPT []
POSTHOOK: Lineage: depts.name SCRIPT []
PREHOOK: query: EXPLAIN SELECT sup.name, eng.name
FROM (SELECT e.name, e.salary
      FROM emps e
      INNER JOIN depts d ON e.deptno = d.deptno AND d.name = 'Engineering') eng,
     (SELECT e.name, e.salary
      FROM emps e
      INNER JOIN depts d ON e.deptno = d.deptno AND d.name = 'Support') sup
WHERE sup.salary = eng.salary
PREHOOK: type: QUERY
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN SELECT sup.name, eng.name
FROM (SELECT e.name, e.salary
      FROM emps e
      INNER JOIN depts d ON e.deptno = d.deptno AND d.name = 'Engineering') eng,
     (SELECT e.name, e.salary
      FROM emps e
      INNER JOIN depts d ON e.deptno = d.deptno AND d.name = 'Support') sup
WHERE sup.salary = eng.salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: eng:e
                  filterExpr: (salary is not null and deptno is not null) (type: boolean)
                  Statistics: Num rows: 6 Data size: 1224 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (salary is not null and deptno is not null) (type: boolean)
                    Statistics: Num rows: 6 Data size: 1224 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: deptno (type: int)
                      null sort order: a
                      sort order: +
                      Map-reduce partition columns: deptno (type: int)
                      Statistics: Num rows: 6 Data size: 1224 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: name (type: varchar(10)), salary (type: decimal(8,2))
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: eng:d
                  filterExpr: deptno is not null (type: boolean)
                  Statistics: Num rows: 3 Data size: 288 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: deptno is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 288 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: deptno (type: int)
                      null sort order: a
                      sort order: +
                      Map-reduce partition columns: deptno (type: int)
                      Statistics: Num rows: 3 Data size: 288 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: name (type: varchar(20))
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 deptno (type: int)
                  1 deptno (type: int)
                outputColumnNames: name, salary, name0
                Statistics: Num rows: 6 Data size: 1752 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: name0 (type: varchar(20)), name (type: varchar(10)), salary (type: decimal(8,2))
                  outputColumnNames: $f0, $f1, $f2
                  Statistics: Num rows: 6 Data size: 1752 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (($f0 = 'Engineering') and $f2 is not null) (type: boolean)
                    Statistics: Num rows: 2 Data size: 584 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: $f2 (type: decimal(8,2))
                      null sort order: a
                      sort order: +
                      Map-reduce partition columns: $f2 (type: decimal(8,2))
                      Statistics: Num rows: 2 Data size: 584 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: $f1 (type: varchar(10))
                  Filter Operator
                    predicate: (($f0 = 'Support') and $f2 is not null) (type: boolean)
                    Statistics: Num rows: 2 Data size: 584 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: $f2 (type: decimal(8,2))
                      null sort order: a
                      sort order: +
                      Map-reduce partition columns: $f2 (type: decimal(8,2))
                      Statistics: Num rows: 2 Data size: 584 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: $f1 (type: varchar(10))
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 $f2 (type: decimal(8,2))
                  1 $f2 (type: decimal(8,2))
                outputColumnNames: $f1, $f10
                Statistics: Num rows: 2 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: $f1 (type: varchar(10)), $f10 (type: varchar(10))
                  outputColumnNames: name, name1
                  Statistics: Num rows: 2 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

