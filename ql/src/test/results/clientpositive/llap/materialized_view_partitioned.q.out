PREHOOK: query: CREATE TABLE src_txn stored as orc TBLPROPERTIES ('transactional' = 'true')
AS SELECT * FROM src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@src_txn
POSTHOOK: query: CREATE TABLE src_txn stored as orc TBLPROPERTIES ('transactional' = 'true')
AS SELECT * FROM src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@src_txn
POSTHOOK: Lineage: src_txn.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: src_txn.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: EXPLAIN
CREATE MATERIALIZED VIEW partition_mv_1 PARTITIONED ON (key) AS
SELECT value, key FROM src_txn where key > 200 and key < 250
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@src_txn
PREHOOK: Output: database:default
PREHOOK: Output: default@partition_mv_1
PREHOOK: Output: default@partition_mv_1
POSTHOOK: query: EXPLAIN
CREATE MATERIALIZED VIEW partition_mv_1 PARTITIONED ON (key) AS
SELECT value, key FROM src_txn where key > 200 and key < 250
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@src_txn
POSTHOOK: Output: database:default
POSTHOOK: Output: default@partition_mv_1
POSTHOOK: Output: default@partition_mv_1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-4
  Stage-3 depends on stages: Stage-0, Stage-4
  Stage-5 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src_txn
                  filterExpr: ((UDFToDouble(key) > 200.0D) and (UDFToDouble(key) < 250.0D)) (type: boolean)
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((UDFToDouble(key) > 200.0D) and (UDFToDouble(key) < 250.0D)) (type: boolean)
                    Statistics: Num rows: 55 Data size: 9790 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: value (type: string), key (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 55 Data size: 9790 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col1 (type: string)
                        Statistics: Num rows: 55 Data size: 9790 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: string)
                      Select Operator
                        expressions: _col0 (type: string), _col1 (type: string)
                        outputColumnNames: col1, col2
                        Statistics: Num rows: 55 Data size: 9790 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: max(length(col1)), avg(COALESCE(length(col1),0)), count(1), count(col1), compute_bit_vector_hll(col1)
                          keys: col2 (type: string)
                          minReductionHashAggr: 0.5090909
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                          Statistics: Num rows: 27 Data size: 8829 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col0 (type: string)
                            null sort order: z
                            sort order: +
                            Map-reduce partition columns: _col0 (type: string)
                            Statistics: Num rows: 27 Data size: 8829 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col1 (type: int), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY._col1 (type: string)
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 55 Data size: 9790 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.partition_mv_1
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 27 Data size: 6993 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col1,0)) (type: bigint), COALESCE(_col2,0) (type: double), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                  Statistics: Num rows: 27 Data size: 9531 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 27 Data size: 9531 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
    Create Materialized View
      partition columns: key string
      columns: value string
      expanded text: SELECT `value`, `key` FROM (SELECT `src_txn`.`value`, `src_txn`.`key` FROM `default`.`src_txn` where `src_txn`.`key` > 200 and `src_txn`.`key` < 250) `partition_mv_1`
      name: default.partition_mv_1
      original text: SELECT value, key FROM src_txn where key > 200 and key < 250
      rewrite enabled: true

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            key 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.partition_mv_1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: value
          Column Types: string
          Table: default.partition_mv_1

  Stage: Stage-5
    Materialized View Update
      name: default.partition_mv_1
      retrieve and include: true

PREHOOK: query: CREATE MATERIALIZED VIEW partition_mv_1 PARTITIONED ON (key) AS
SELECT value, key FROM src_txn where key > 200 and key < 250
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@src_txn
PREHOOK: Output: database:default
PREHOOK: Output: default@partition_mv_1
PREHOOK: Output: default@partition_mv_1
POSTHOOK: query: CREATE MATERIALIZED VIEW partition_mv_1 PARTITIONED ON (key) AS
SELECT value, key FROM src_txn where key > 200 and key < 250
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@src_txn
POSTHOOK: Output: database:default
POSTHOOK: Output: default@partition_mv_1
POSTHOOK: Output: default@partition_mv_1
POSTHOOK: Output: default@partition_mv_1@key=201
POSTHOOK: Output: default@partition_mv_1@key=202
POSTHOOK: Output: default@partition_mv_1@key=203
POSTHOOK: Output: default@partition_mv_1@key=205
POSTHOOK: Output: default@partition_mv_1@key=207
POSTHOOK: Output: default@partition_mv_1@key=208
POSTHOOK: Output: default@partition_mv_1@key=209
POSTHOOK: Output: default@partition_mv_1@key=213
POSTHOOK: Output: default@partition_mv_1@key=214
POSTHOOK: Output: default@partition_mv_1@key=216
POSTHOOK: Output: default@partition_mv_1@key=217
POSTHOOK: Output: default@partition_mv_1@key=218
POSTHOOK: Output: default@partition_mv_1@key=219
POSTHOOK: Output: default@partition_mv_1@key=221
POSTHOOK: Output: default@partition_mv_1@key=222
POSTHOOK: Output: default@partition_mv_1@key=223
POSTHOOK: Output: default@partition_mv_1@key=224
POSTHOOK: Output: default@partition_mv_1@key=226
POSTHOOK: Output: default@partition_mv_1@key=228
POSTHOOK: Output: default@partition_mv_1@key=229
POSTHOOK: Output: default@partition_mv_1@key=230
POSTHOOK: Output: default@partition_mv_1@key=233
POSTHOOK: Output: default@partition_mv_1@key=235
POSTHOOK: Output: default@partition_mv_1@key=237
POSTHOOK: Output: default@partition_mv_1@key=238
POSTHOOK: Output: default@partition_mv_1@key=239
POSTHOOK: Output: default@partition_mv_1@key=241
POSTHOOK: Output: default@partition_mv_1@key=242
POSTHOOK: Output: default@partition_mv_1@key=244
POSTHOOK: Output: default@partition_mv_1@key=247
POSTHOOK: Output: default@partition_mv_1@key=248
POSTHOOK: Output: default@partition_mv_1@key=249
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=201).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=202).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=203).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=205).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=207).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=208).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=209).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=213).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=214).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=216).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=217).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=218).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=219).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=221).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=222).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=223).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=224).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=226).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=228).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=229).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=230).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=233).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=235).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=237).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=238).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=239).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=241).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=242).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=244).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=247).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=248).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=249).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: DESCRIBE FORMATTED partition_mv_1
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@partition_mv_1
POSTHOOK: query: DESCRIBE FORMATTED partition_mv_1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@partition_mv_1
# col_name            	data_type           	comment             
value               	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
key                 	string              	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MATERIALIZED_VIEW   	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\"}
	bucketing_version   	2                   
	numFiles            	32                  
	numPartitions       	32                  
	numRows             	55                  
	rawDataSize         	5005                
	totalSize           	7682                
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
	 	 
# Materialized View Information	 	 
Original Query:     	SELECT value, key FROM src_txn where key > 200 and key < 250	 
Expanded Query:     	SELECT `value`, `key` FROM (SELECT `src_txn`.`value`, `src_txn`.`key` FROM `default`.`src_txn` where `src_txn`.`key` > 200 and `src_txn`.`key` < 250) `partition_mv_1`	 
Rewrite Enabled:    	Yes                 	 
Outdated for Rewriting:	No                  	 
PREHOOK: query: EXPLAIN
SELECT * FROM partition_mv_1 where key = 238
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_mv_1
PREHOOK: Input: default@partition_mv_1@key=238
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT * FROM partition_mv_1 where key = 238
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_mv_1
POSTHOOK: Input: default@partition_mv_1@key=238
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: partition_mv_1
          filterExpr: (238.0D = 238.0D) (type: boolean)
          Select Operator
            expressions: value (type: string), key (type: string)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: SELECT * FROM partition_mv_1 where key = 238
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_mv_1
PREHOOK: Input: default@partition_mv_1@key=238
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM partition_mv_1 where key = 238
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_mv_1
POSTHOOK: Input: default@partition_mv_1@key=238
#### A masked pattern was here ####
val_238	238
val_238	238
PREHOOK: query: CREATE MATERIALIZED VIEW partition_mv_2 PARTITIONED ON (value) AS
SELECT key, value FROM src_txn where key > 200 and key < 250
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@src_txn
PREHOOK: Output: database:default
PREHOOK: Output: default@partition_mv_2
PREHOOK: Output: default@partition_mv_2
POSTHOOK: query: CREATE MATERIALIZED VIEW partition_mv_2 PARTITIONED ON (value) AS
SELECT key, value FROM src_txn where key > 200 and key < 250
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@src_txn
POSTHOOK: Output: database:default
POSTHOOK: Output: default@partition_mv_2
POSTHOOK: Output: default@partition_mv_2
POSTHOOK: Output: default@partition_mv_2@value=val_201
POSTHOOK: Output: default@partition_mv_2@value=val_202
POSTHOOK: Output: default@partition_mv_2@value=val_203
POSTHOOK: Output: default@partition_mv_2@value=val_205
POSTHOOK: Output: default@partition_mv_2@value=val_207
POSTHOOK: Output: default@partition_mv_2@value=val_208
POSTHOOK: Output: default@partition_mv_2@value=val_209
POSTHOOK: Output: default@partition_mv_2@value=val_213
POSTHOOK: Output: default@partition_mv_2@value=val_214
POSTHOOK: Output: default@partition_mv_2@value=val_216
POSTHOOK: Output: default@partition_mv_2@value=val_217
POSTHOOK: Output: default@partition_mv_2@value=val_218
POSTHOOK: Output: default@partition_mv_2@value=val_219
POSTHOOK: Output: default@partition_mv_2@value=val_221
POSTHOOK: Output: default@partition_mv_2@value=val_222
POSTHOOK: Output: default@partition_mv_2@value=val_223
POSTHOOK: Output: default@partition_mv_2@value=val_224
POSTHOOK: Output: default@partition_mv_2@value=val_226
POSTHOOK: Output: default@partition_mv_2@value=val_228
POSTHOOK: Output: default@partition_mv_2@value=val_229
POSTHOOK: Output: default@partition_mv_2@value=val_230
POSTHOOK: Output: default@partition_mv_2@value=val_233
POSTHOOK: Output: default@partition_mv_2@value=val_235
POSTHOOK: Output: default@partition_mv_2@value=val_237
POSTHOOK: Output: default@partition_mv_2@value=val_238
POSTHOOK: Output: default@partition_mv_2@value=val_239
POSTHOOK: Output: default@partition_mv_2@value=val_241
POSTHOOK: Output: default@partition_mv_2@value=val_242
POSTHOOK: Output: default@partition_mv_2@value=val_244
POSTHOOK: Output: default@partition_mv_2@value=val_247
POSTHOOK: Output: default@partition_mv_2@value=val_248
POSTHOOK: Output: default@partition_mv_2@value=val_249
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_201).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_202).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_203).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_205).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_207).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_208).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_209).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_213).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_214).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_216).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_217).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_218).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_219).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_221).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_222).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_223).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_224).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_226).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_228).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_229).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_230).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_233).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_235).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_237).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_238).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_239).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_241).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_242).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_244).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_247).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_248).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_2 PARTITION(value=val_249).key SIMPLE [(src_txn)src_txn.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: EXPLAIN
SELECT * FROM partition_mv_2 where value = 'val_238'
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_mv_2
PREHOOK: Input: default@partition_mv_2@value=val_238
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT * FROM partition_mv_2 where value = 'val_238'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_mv_2
POSTHOOK: Input: default@partition_mv_2@value=val_238
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: partition_mv_2
          filterExpr: (value = 'val_238') (type: boolean)
          Select Operator
            expressions: key (type: string), 'val_238' (type: string)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: SELECT * FROM partition_mv_2 where value = 'val_238'
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_mv_2
PREHOOK: Input: default@partition_mv_2@value=val_238
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM partition_mv_2 where value = 'val_238'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_mv_2
POSTHOOK: Input: default@partition_mv_2@value=val_238
#### A masked pattern was here ####
238	val_238
238	val_238
PREHOOK: query: EXPLAIN
SELECT value FROM partition_mv_2 where key = 238
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_mv_2
PREHOOK: Input: default@partition_mv_2@value=val_201
PREHOOK: Input: default@partition_mv_2@value=val_202
PREHOOK: Input: default@partition_mv_2@value=val_203
PREHOOK: Input: default@partition_mv_2@value=val_205
PREHOOK: Input: default@partition_mv_2@value=val_207
PREHOOK: Input: default@partition_mv_2@value=val_208
PREHOOK: Input: default@partition_mv_2@value=val_209
PREHOOK: Input: default@partition_mv_2@value=val_213
PREHOOK: Input: default@partition_mv_2@value=val_214
PREHOOK: Input: default@partition_mv_2@value=val_216
PREHOOK: Input: default@partition_mv_2@value=val_217
PREHOOK: Input: default@partition_mv_2@value=val_218
PREHOOK: Input: default@partition_mv_2@value=val_219
PREHOOK: Input: default@partition_mv_2@value=val_221
PREHOOK: Input: default@partition_mv_2@value=val_222
PREHOOK: Input: default@partition_mv_2@value=val_223
PREHOOK: Input: default@partition_mv_2@value=val_224
PREHOOK: Input: default@partition_mv_2@value=val_226
PREHOOK: Input: default@partition_mv_2@value=val_228
PREHOOK: Input: default@partition_mv_2@value=val_229
PREHOOK: Input: default@partition_mv_2@value=val_230
PREHOOK: Input: default@partition_mv_2@value=val_233
PREHOOK: Input: default@partition_mv_2@value=val_235
PREHOOK: Input: default@partition_mv_2@value=val_237
PREHOOK: Input: default@partition_mv_2@value=val_238
PREHOOK: Input: default@partition_mv_2@value=val_239
PREHOOK: Input: default@partition_mv_2@value=val_241
PREHOOK: Input: default@partition_mv_2@value=val_242
PREHOOK: Input: default@partition_mv_2@value=val_244
PREHOOK: Input: default@partition_mv_2@value=val_247
PREHOOK: Input: default@partition_mv_2@value=val_248
PREHOOK: Input: default@partition_mv_2@value=val_249
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT value FROM partition_mv_2 where key = 238
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_mv_2
POSTHOOK: Input: default@partition_mv_2@value=val_201
POSTHOOK: Input: default@partition_mv_2@value=val_202
POSTHOOK: Input: default@partition_mv_2@value=val_203
POSTHOOK: Input: default@partition_mv_2@value=val_205
POSTHOOK: Input: default@partition_mv_2@value=val_207
POSTHOOK: Input: default@partition_mv_2@value=val_208
POSTHOOK: Input: default@partition_mv_2@value=val_209
POSTHOOK: Input: default@partition_mv_2@value=val_213
POSTHOOK: Input: default@partition_mv_2@value=val_214
POSTHOOK: Input: default@partition_mv_2@value=val_216
POSTHOOK: Input: default@partition_mv_2@value=val_217
POSTHOOK: Input: default@partition_mv_2@value=val_218
POSTHOOK: Input: default@partition_mv_2@value=val_219
POSTHOOK: Input: default@partition_mv_2@value=val_221
POSTHOOK: Input: default@partition_mv_2@value=val_222
POSTHOOK: Input: default@partition_mv_2@value=val_223
POSTHOOK: Input: default@partition_mv_2@value=val_224
POSTHOOK: Input: default@partition_mv_2@value=val_226
POSTHOOK: Input: default@partition_mv_2@value=val_228
POSTHOOK: Input: default@partition_mv_2@value=val_229
POSTHOOK: Input: default@partition_mv_2@value=val_230
POSTHOOK: Input: default@partition_mv_2@value=val_233
POSTHOOK: Input: default@partition_mv_2@value=val_235
POSTHOOK: Input: default@partition_mv_2@value=val_237
POSTHOOK: Input: default@partition_mv_2@value=val_238
POSTHOOK: Input: default@partition_mv_2@value=val_239
POSTHOOK: Input: default@partition_mv_2@value=val_241
POSTHOOK: Input: default@partition_mv_2@value=val_242
POSTHOOK: Input: default@partition_mv_2@value=val_244
POSTHOOK: Input: default@partition_mv_2@value=val_247
POSTHOOK: Input: default@partition_mv_2@value=val_248
POSTHOOK: Input: default@partition_mv_2@value=val_249
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: partition_mv_2
          filterExpr: (UDFToDouble(key) = 238.0D) (type: boolean)
          Filter Operator
            predicate: (UDFToDouble(key) = 238.0D) (type: boolean)
            Select Operator
              expressions: value (type: string)
              outputColumnNames: _col0
              ListSink

PREHOOK: query: SELECT value FROM partition_mv_2 where key = 238
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_mv_2
PREHOOK: Input: default@partition_mv_2@value=val_201
PREHOOK: Input: default@partition_mv_2@value=val_202
PREHOOK: Input: default@partition_mv_2@value=val_203
PREHOOK: Input: default@partition_mv_2@value=val_205
PREHOOK: Input: default@partition_mv_2@value=val_207
PREHOOK: Input: default@partition_mv_2@value=val_208
PREHOOK: Input: default@partition_mv_2@value=val_209
PREHOOK: Input: default@partition_mv_2@value=val_213
PREHOOK: Input: default@partition_mv_2@value=val_214
PREHOOK: Input: default@partition_mv_2@value=val_216
PREHOOK: Input: default@partition_mv_2@value=val_217
PREHOOK: Input: default@partition_mv_2@value=val_218
PREHOOK: Input: default@partition_mv_2@value=val_219
PREHOOK: Input: default@partition_mv_2@value=val_221
PREHOOK: Input: default@partition_mv_2@value=val_222
PREHOOK: Input: default@partition_mv_2@value=val_223
PREHOOK: Input: default@partition_mv_2@value=val_224
PREHOOK: Input: default@partition_mv_2@value=val_226
PREHOOK: Input: default@partition_mv_2@value=val_228
PREHOOK: Input: default@partition_mv_2@value=val_229
PREHOOK: Input: default@partition_mv_2@value=val_230
PREHOOK: Input: default@partition_mv_2@value=val_233
PREHOOK: Input: default@partition_mv_2@value=val_235
PREHOOK: Input: default@partition_mv_2@value=val_237
PREHOOK: Input: default@partition_mv_2@value=val_238
PREHOOK: Input: default@partition_mv_2@value=val_239
PREHOOK: Input: default@partition_mv_2@value=val_241
PREHOOK: Input: default@partition_mv_2@value=val_242
PREHOOK: Input: default@partition_mv_2@value=val_244
PREHOOK: Input: default@partition_mv_2@value=val_247
PREHOOK: Input: default@partition_mv_2@value=val_248
PREHOOK: Input: default@partition_mv_2@value=val_249
#### A masked pattern was here ####
POSTHOOK: query: SELECT value FROM partition_mv_2 where key = 238
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_mv_2
POSTHOOK: Input: default@partition_mv_2@value=val_201
POSTHOOK: Input: default@partition_mv_2@value=val_202
POSTHOOK: Input: default@partition_mv_2@value=val_203
POSTHOOK: Input: default@partition_mv_2@value=val_205
POSTHOOK: Input: default@partition_mv_2@value=val_207
POSTHOOK: Input: default@partition_mv_2@value=val_208
POSTHOOK: Input: default@partition_mv_2@value=val_209
POSTHOOK: Input: default@partition_mv_2@value=val_213
POSTHOOK: Input: default@partition_mv_2@value=val_214
POSTHOOK: Input: default@partition_mv_2@value=val_216
POSTHOOK: Input: default@partition_mv_2@value=val_217
POSTHOOK: Input: default@partition_mv_2@value=val_218
POSTHOOK: Input: default@partition_mv_2@value=val_219
POSTHOOK: Input: default@partition_mv_2@value=val_221
POSTHOOK: Input: default@partition_mv_2@value=val_222
POSTHOOK: Input: default@partition_mv_2@value=val_223
POSTHOOK: Input: default@partition_mv_2@value=val_224
POSTHOOK: Input: default@partition_mv_2@value=val_226
POSTHOOK: Input: default@partition_mv_2@value=val_228
POSTHOOK: Input: default@partition_mv_2@value=val_229
POSTHOOK: Input: default@partition_mv_2@value=val_230
POSTHOOK: Input: default@partition_mv_2@value=val_233
POSTHOOK: Input: default@partition_mv_2@value=val_235
POSTHOOK: Input: default@partition_mv_2@value=val_237
POSTHOOK: Input: default@partition_mv_2@value=val_238
POSTHOOK: Input: default@partition_mv_2@value=val_239
POSTHOOK: Input: default@partition_mv_2@value=val_241
POSTHOOK: Input: default@partition_mv_2@value=val_242
POSTHOOK: Input: default@partition_mv_2@value=val_244
POSTHOOK: Input: default@partition_mv_2@value=val_247
POSTHOOK: Input: default@partition_mv_2@value=val_248
POSTHOOK: Input: default@partition_mv_2@value=val_249
#### A masked pattern was here ####
val_238
val_238
PREHOOK: query: INSERT INTO src_txn VALUES (238, 'val_238_n')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@src_txn
POSTHOOK: query: INSERT INTO src_txn VALUES (238, 'val_238_n')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@src_txn
POSTHOOK: Lineage: src_txn.key SCRIPT []
POSTHOOK: Lineage: src_txn.value SCRIPT []
PREHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW partition_mv_1 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@src_txn
PREHOOK: Output: default@partition_mv_1
POSTHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW partition_mv_1 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@src_txn
POSTHOOK: Output: default@partition_mv_1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-4 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src_txn
                  filterExpr: ((ROW__ID.writeid > 1L) and (UDFToDouble(key) > 200.0D) and (UDFToDouble(key) < 250.0D)) (type: boolean)
                  Statistics: Num rows: 501 Data size: 90180 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((ROW__ID.writeid > 1L) and (UDFToDouble(key) > 200.0D) and (UDFToDouble(key) < 250.0D)) (type: boolean)
                    Statistics: Num rows: 18 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: value (type: string), key (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 18 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col1 (type: string)
                        Statistics: Num rows: 18 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: string)
                      Select Operator
                        expressions: _col0 (type: string), _col1 (type: string)
                        outputColumnNames: value, key
                        Statistics: Num rows: 18 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: max(length(value)), avg(COALESCE(length(value),0)), count(1), count(value), compute_bit_vector_hll(value)
                          keys: key (type: string)
                          minReductionHashAggr: 0.5
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                          Statistics: Num rows: 9 Data size: 2943 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col0 (type: string)
                            null sort order: z
                            sort order: +
                            Map-reduce partition columns: _col0 (type: string)
                            Statistics: Num rows: 9 Data size: 2943 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col1 (type: int), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY._col1 (type: string)
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 18 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.partition_mv_1
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 9 Data size: 2331 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col1,0)) (type: bigint), COALESCE(_col2,0) (type: double), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                  Statistics: Num rows: 9 Data size: 3177 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 9 Data size: 3177 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            key 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.partition_mv_1

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: value
          Column Types: string
          Table: default.partition_mv_1

  Stage: Stage-4
    Materialized View Update
      name: default.partition_mv_1
      update creation metadata: true

PREHOOK: query: ALTER MATERIALIZED VIEW partition_mv_1 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@src_txn
PREHOOK: Output: default@partition_mv_1
POSTHOOK: query: ALTER MATERIALIZED VIEW partition_mv_1 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@src_txn
POSTHOOK: Output: default@partition_mv_1
POSTHOOK: Output: default@partition_mv_1@key=238
POSTHOOK: Lineage: partition_mv_1 PARTITION(key=238).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM partition_mv_1 where key = 238
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_mv_1
PREHOOK: Input: default@partition_mv_1@key=238
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM partition_mv_1 where key = 238
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_mv_1
POSTHOOK: Input: default@partition_mv_1@key=238
#### A masked pattern was here ####
val_238	238
val_238	238
val_238_n	238
PREHOOK: query: SELECT * FROM partition_mv_2 where key = 238
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_mv_2
PREHOOK: Input: default@partition_mv_2@value=val_201
PREHOOK: Input: default@partition_mv_2@value=val_202
PREHOOK: Input: default@partition_mv_2@value=val_203
PREHOOK: Input: default@partition_mv_2@value=val_205
PREHOOK: Input: default@partition_mv_2@value=val_207
PREHOOK: Input: default@partition_mv_2@value=val_208
PREHOOK: Input: default@partition_mv_2@value=val_209
PREHOOK: Input: default@partition_mv_2@value=val_213
PREHOOK: Input: default@partition_mv_2@value=val_214
PREHOOK: Input: default@partition_mv_2@value=val_216
PREHOOK: Input: default@partition_mv_2@value=val_217
PREHOOK: Input: default@partition_mv_2@value=val_218
PREHOOK: Input: default@partition_mv_2@value=val_219
PREHOOK: Input: default@partition_mv_2@value=val_221
PREHOOK: Input: default@partition_mv_2@value=val_222
PREHOOK: Input: default@partition_mv_2@value=val_223
PREHOOK: Input: default@partition_mv_2@value=val_224
PREHOOK: Input: default@partition_mv_2@value=val_226
PREHOOK: Input: default@partition_mv_2@value=val_228
PREHOOK: Input: default@partition_mv_2@value=val_229
PREHOOK: Input: default@partition_mv_2@value=val_230
PREHOOK: Input: default@partition_mv_2@value=val_233
PREHOOK: Input: default@partition_mv_2@value=val_235
PREHOOK: Input: default@partition_mv_2@value=val_237
PREHOOK: Input: default@partition_mv_2@value=val_238
PREHOOK: Input: default@partition_mv_2@value=val_239
PREHOOK: Input: default@partition_mv_2@value=val_241
PREHOOK: Input: default@partition_mv_2@value=val_242
PREHOOK: Input: default@partition_mv_2@value=val_244
PREHOOK: Input: default@partition_mv_2@value=val_247
PREHOOK: Input: default@partition_mv_2@value=val_248
PREHOOK: Input: default@partition_mv_2@value=val_249
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM partition_mv_2 where key = 238
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_mv_2
POSTHOOK: Input: default@partition_mv_2@value=val_201
POSTHOOK: Input: default@partition_mv_2@value=val_202
POSTHOOK: Input: default@partition_mv_2@value=val_203
POSTHOOK: Input: default@partition_mv_2@value=val_205
POSTHOOK: Input: default@partition_mv_2@value=val_207
POSTHOOK: Input: default@partition_mv_2@value=val_208
POSTHOOK: Input: default@partition_mv_2@value=val_209
POSTHOOK: Input: default@partition_mv_2@value=val_213
POSTHOOK: Input: default@partition_mv_2@value=val_214
POSTHOOK: Input: default@partition_mv_2@value=val_216
POSTHOOK: Input: default@partition_mv_2@value=val_217
POSTHOOK: Input: default@partition_mv_2@value=val_218
POSTHOOK: Input: default@partition_mv_2@value=val_219
POSTHOOK: Input: default@partition_mv_2@value=val_221
POSTHOOK: Input: default@partition_mv_2@value=val_222
POSTHOOK: Input: default@partition_mv_2@value=val_223
POSTHOOK: Input: default@partition_mv_2@value=val_224
POSTHOOK: Input: default@partition_mv_2@value=val_226
POSTHOOK: Input: default@partition_mv_2@value=val_228
POSTHOOK: Input: default@partition_mv_2@value=val_229
POSTHOOK: Input: default@partition_mv_2@value=val_230
POSTHOOK: Input: default@partition_mv_2@value=val_233
POSTHOOK: Input: default@partition_mv_2@value=val_235
POSTHOOK: Input: default@partition_mv_2@value=val_237
POSTHOOK: Input: default@partition_mv_2@value=val_238
POSTHOOK: Input: default@partition_mv_2@value=val_239
POSTHOOK: Input: default@partition_mv_2@value=val_241
POSTHOOK: Input: default@partition_mv_2@value=val_242
POSTHOOK: Input: default@partition_mv_2@value=val_244
POSTHOOK: Input: default@partition_mv_2@value=val_247
POSTHOOK: Input: default@partition_mv_2@value=val_248
POSTHOOK: Input: default@partition_mv_2@value=val_249
#### A masked pattern was here ####
238	val_238
238	val_238
PREHOOK: query: CREATE TABLE src_txn_2 stored as orc TBLPROPERTIES ('transactional' = 'true')
AS SELECT * FROM src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@src_txn_2
POSTHOOK: query: CREATE TABLE src_txn_2 stored as orc TBLPROPERTIES ('transactional' = 'true')
AS SELECT * FROM src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@src_txn_2
POSTHOOK: Lineage: src_txn_2.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: src_txn_2.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: CREATE MATERIALIZED VIEW partition_mv_3 PARTITIONED ON (key) AS
SELECT src_txn.value, src_txn.key FROM src_txn, src_txn_2
WHERE src_txn.key = src_txn_2.key
  AND src_txn.key > 200 AND src_txn.key < 250
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@src_txn
PREHOOK: Input: default@src_txn_2
PREHOOK: Output: database:default
PREHOOK: Output: default@partition_mv_3
PREHOOK: Output: default@partition_mv_3
POSTHOOK: query: CREATE MATERIALIZED VIEW partition_mv_3 PARTITIONED ON (key) AS
SELECT src_txn.value, src_txn.key FROM src_txn, src_txn_2
WHERE src_txn.key = src_txn_2.key
  AND src_txn.key > 200 AND src_txn.key < 250
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@src_txn
POSTHOOK: Input: default@src_txn_2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@partition_mv_3
POSTHOOK: Output: default@partition_mv_3
POSTHOOK: Output: default@partition_mv_3@key=201
POSTHOOK: Output: default@partition_mv_3@key=202
POSTHOOK: Output: default@partition_mv_3@key=203
POSTHOOK: Output: default@partition_mv_3@key=205
POSTHOOK: Output: default@partition_mv_3@key=207
POSTHOOK: Output: default@partition_mv_3@key=208
POSTHOOK: Output: default@partition_mv_3@key=209
POSTHOOK: Output: default@partition_mv_3@key=213
POSTHOOK: Output: default@partition_mv_3@key=214
POSTHOOK: Output: default@partition_mv_3@key=216
POSTHOOK: Output: default@partition_mv_3@key=217
POSTHOOK: Output: default@partition_mv_3@key=218
POSTHOOK: Output: default@partition_mv_3@key=219
POSTHOOK: Output: default@partition_mv_3@key=221
POSTHOOK: Output: default@partition_mv_3@key=222
POSTHOOK: Output: default@partition_mv_3@key=223
POSTHOOK: Output: default@partition_mv_3@key=224
POSTHOOK: Output: default@partition_mv_3@key=226
POSTHOOK: Output: default@partition_mv_3@key=228
POSTHOOK: Output: default@partition_mv_3@key=229
POSTHOOK: Output: default@partition_mv_3@key=230
POSTHOOK: Output: default@partition_mv_3@key=233
POSTHOOK: Output: default@partition_mv_3@key=235
POSTHOOK: Output: default@partition_mv_3@key=237
POSTHOOK: Output: default@partition_mv_3@key=238
POSTHOOK: Output: default@partition_mv_3@key=239
POSTHOOK: Output: default@partition_mv_3@key=241
POSTHOOK: Output: default@partition_mv_3@key=242
POSTHOOK: Output: default@partition_mv_3@key=244
POSTHOOK: Output: default@partition_mv_3@key=247
POSTHOOK: Output: default@partition_mv_3@key=248
POSTHOOK: Output: default@partition_mv_3@key=249
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=201).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=202).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=203).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=205).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=207).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=208).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=209).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=213).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=214).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=216).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=217).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=218).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=219).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=221).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=222).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=223).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=224).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=226).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=228).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=229).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=230).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=233).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=235).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=237).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=238).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=239).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=241).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=242).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=244).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=247).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=248).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=249).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: INSERT INTO src_txn VALUES (238, 'val_238_n2')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@src_txn
POSTHOOK: query: INSERT INTO src_txn VALUES (238, 'val_238_n2')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@src_txn
POSTHOOK: Lineage: src_txn.key SCRIPT []
POSTHOOK: Lineage: src_txn.value SCRIPT []
PREHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW partition_mv_3 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@src_txn
PREHOOK: Input: default@src_txn_2
PREHOOK: Output: default@partition_mv_3
POSTHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW partition_mv_3 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@src_txn
POSTHOOK: Input: default@src_txn_2
POSTHOOK: Output: default@partition_mv_3
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-4 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src_txn
                  filterExpr: ((ROW__ID.writeid > 2L) and (UDFToDouble(key) > 200.0D) and (UDFToDouble(key) < 250.0D)) (type: boolean)
                  Statistics: Num rows: 502 Data size: 90862 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((ROW__ID.writeid > 2L) and (UDFToDouble(key) > 200.0D) and (UDFToDouble(key) < 250.0D)) (type: boolean)
                    Statistics: Num rows: 18 Data size: 3258 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 18 Data size: 3258 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 18 Data size: 3258 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: src_txn_2
                  filterExpr: ((UDFToDouble(key) > 200.0D) and (UDFToDouble(key) < 250.0D)) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((UDFToDouble(key) > 200.0D) and (UDFToDouble(key) < 250.0D)) (type: boolean)
                    Statistics: Num rows: 55 Data size: 4785 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 55 Data size: 4785 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 55 Data size: 4785 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 18 Data size: 3258 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: string), _col0 (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 18 Data size: 3258 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col1 (type: string)
                    null sort order: a
                    sort order: +
                    Map-reduce partition columns: _col1 (type: string)
                    Statistics: Num rows: 18 Data size: 3258 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: string)
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string)
                    outputColumnNames: value, key
                    Statistics: Num rows: 18 Data size: 3258 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: max(length(value)), avg(COALESCE(length(value),0)), count(1), count(value), compute_bit_vector_hll(value)
                      keys: key (type: string)
                      minReductionHashAggr: 0.5
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                      Statistics: Num rows: 9 Data size: 2943 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 9 Data size: 2943 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), KEY._col1 (type: string)
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 18 Data size: 3258 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.partition_mv_3
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 9 Data size: 2331 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col1,0)) (type: bigint), COALESCE(_col2,0) (type: double), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                  Statistics: Num rows: 9 Data size: 3177 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 9 Data size: 3177 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            key 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.partition_mv_3

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: value
          Column Types: string
          Table: default.partition_mv_3

  Stage: Stage-4
    Materialized View Update
      name: default.partition_mv_3
      update creation metadata: true

PREHOOK: query: ALTER MATERIALIZED VIEW partition_mv_3 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@src_txn
PREHOOK: Input: default@src_txn_2
PREHOOK: Output: default@partition_mv_3
POSTHOOK: query: ALTER MATERIALIZED VIEW partition_mv_3 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@src_txn
POSTHOOK: Input: default@src_txn_2
POSTHOOK: Output: default@partition_mv_3
POSTHOOK: Output: default@partition_mv_3@key=238
POSTHOOK: Lineage: partition_mv_3 PARTITION(key=238).value SIMPLE [(src_txn)src_txn.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM partition_mv_3 where key = 238
PREHOOK: type: QUERY
PREHOOK: Input: default@partition_mv_3
PREHOOK: Input: default@partition_mv_3@key=238
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM partition_mv_3 where key = 238
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partition_mv_3
POSTHOOK: Input: default@partition_mv_3@key=238
#### A masked pattern was here ####
val_238_n	238
val_238_n	238
val_238	238
val_238	238
val_238	238
val_238	238
val_238_n2	238
val_238_n2	238
