PREHOOK: query: DROP TABLE IF EXISTS bucket2
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: DROP TABLE IF EXISTS bucket2
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: CREATE TABLE bucket2(key string, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucket2
POSTHOOK: query: CREATE TABLE bucket2(key string, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucket2
PREHOOK: query: DROP TABLE IF EXISTS bucket3
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: DROP TABLE IF EXISTS bucket3
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: CREATE TABLE bucket3(key string, value string) CLUSTERED BY (key) SORTED BY (key) INTO 3 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucket3
POSTHOOK: query: CREATE TABLE bucket3(key string, value string) CLUSTERED BY (key) SORTED BY (key) INTO 3 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucket3
PREHOOK: query: INSERT INTO TABLE bucket2 VALUES (1, 1), (2, 2), (7, 7), (6, 6), (14, 14), (11, 11)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@bucket2
POSTHOOK: query: INSERT INTO TABLE bucket2 VALUES (1, 1), (2, 2), (7, 7), (6, 6), (14, 14), (11, 11)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@bucket2
POSTHOOK: Lineage: bucket2.key SCRIPT []
POSTHOOK: Lineage: bucket2.value SCRIPT []
PREHOOK: query: INSERT INTO TABLE bucket3 VALUES (1, 1), (2, 2), (7, 7), (6, 6), (14, 14), (11, 11)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@bucket3
POSTHOOK: query: INSERT INTO TABLE bucket3 VALUES (1, 1), (2, 2), (7, 7), (6, 6), (14, 14), (11, 11)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@bucket3
POSTHOOK: Lineage: bucket3.key SCRIPT []
POSTHOOK: Lineage: bucket3.value SCRIPT []
PREHOOK: query: EXPLAIN
SELECT * FROM bucket2 JOIN bucket3 on bucket2.key = bucket3.key
PREHOOK: type: QUERY
PREHOOK: Input: default@bucket2
PREHOOK: Input: default@bucket3
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
SELECT * FROM bucket2 JOIN bucket3 on bucket2.key = bucket3.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucket2
POSTHOOK: Input: default@bucket3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: bucket3
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                      Dummy Store
            Map Operator Tree:
                TableScan
                  alias: bucket2
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 1020 Basic stats: COMPLETE Column stats: COMPLETE
                      Merge Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: string)
                          1 _col0 (type: string)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 6 Data size: 2040 Basic stats: COMPLETE Column stats: COMPLETE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 6 Data size: 2040 Basic stats: COMPLETE Column stats: COMPLETE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: llap

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT * FROM bucket2 JOIN bucket3 on bucket2.key = bucket3.key
PREHOOK: type: QUERY
PREHOOK: Input: default@bucket2
PREHOOK: Input: default@bucket3
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM bucket2 JOIN bucket3 on bucket2.key = bucket3.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucket2
POSTHOOK: Input: default@bucket3
#### A masked pattern was here ####
1	1	1	1
11	11	11	11
14	14	14	14
2	2	2	2
6	6	6	6
7	7	7	7
