PREHOOK: query: CREATE TABLE bucketed_table(key INT, value STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketed_table
POSTHOOK: query: CREATE TABLE bucketed_table(key INT, value STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketed_table
PREHOOK: query: CREATE TABLE unbucketed_table(key INT, value STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@unbucketed_table
POSTHOOK: query: CREATE TABLE unbucketed_table(key INT, value STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@unbucketed_table
PREHOOK: query: EXPLAIN EXTENDED
FROM src
INSERT OVERWRITE TABLE bucketed_table SELECT key, value
INSERT OVERWRITE TABLE unbucketed_table SELECT key, value cluster by key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@bucketed_table
PREHOOK: Output: default@unbucketed_table
POSTHOOK: query: EXPLAIN EXTENDED
FROM src
INSERT OVERWRITE TABLE bucketed_table SELECT key, value
INSERT OVERWRITE TABLE unbucketed_table SELECT key, value cluster by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@bucketed_table
POSTHOOK: Output: default@unbucketed_table
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2, Stage-7, Stage-6, Stage-9
  Stage-0 depends on stages: Stage-3
  Stage-4 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-3
  Stage-5 depends on stages: Stage-1
  Stage-10 depends on stages: Stage-2 , consists of Stage-7, Stage-6, Stage-8
  Stage-7
  Stage-6
  Stage-8
  Stage-9 depends on stages: Stage-8

STAGE PLANS:
  Stage: Stage-2
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 4 <- Map 1 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Select Operator
                    expressions: UDFToInteger(key) (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      bucketingVersion: 2
                      key expressions: _col0 (type: int)
                      null sort order: a
                      numBuckets: -1
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                      tag: -1
                      value expressions: _col1 (type: string)
                      auto parallelism: false
                  Select Operator
                    expressions: key (type: string), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      bucketingVersion: 2
                      key expressions: _col0 (type: string)
                      null sort order: a
                      numBuckets: -1
                      sort order: +
                      Map-reduce partition columns: _col0 (type: string)
                      Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                      tag: -1
                      value expressions: _col1 (type: string)
                      auto parallelism: false
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Path -> Alias:
              hdfs://### HDFS PATH ### [src]
            Path -> Partition:
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: src
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucket_count -1
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.types string:string
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.src
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 'default','default'
                      columns.types string:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.src
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.src
                  name: default.src
            Truncated Path -> Alias:
              /src [src]
        Reducer 2 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  bucketingVersion: 2
                  compressed: false
                  GlobalTableId: 1
                  directory: hdfs://### HDFS PATH ###
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                  Stats Publishing Key Prefix: hdfs://### HDFS PATH ###
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      properties:
                        SORTBUCKETCOLSPREFIX TRUE
                        bucket_count 2
                        bucket_field_name key
                        bucketing_version 2
                        column.name.delimiter ,
                        columns key,value
                        columns.comments 
                        columns.types int:string
#### A masked pattern was here ####
                        location hdfs://### HDFS PATH ###
                        name default.bucketed_table
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.bucketed_table
                  TotalFiles: 1
                  GatherStats: true
                  MultiFileSpray: false
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: string)
                  outputColumnNames: key, value
                  Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), max(length(value)), avg(COALESCE(length(value),0)), count(value), compute_bit_vector_hll(value)
                    minReductionHashAggr: 0.99
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                    Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      bucketingVersion: 2
                      null sort order: 
                      numBuckets: -1
                      sort order: 
                      Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                      tag: -1
                      value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary)
                      auto parallelism: false
        Reducer 3 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
                    directory: hdfs://### HDFS PATH ###
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    Stats Publishing Key Prefix: hdfs://### HDFS PATH ###
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false
        Reducer 4 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Select Operator
                expressions: UDFToInteger(KEY.reducesinkkey0) (type: int), VALUE._col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  bucketingVersion: 2
                  compressed: false
                  GlobalTableId: 2
                  directory: hdfs://### HDFS PATH ###
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                  Stats Publishing Key Prefix: hdfs://### HDFS PATH ###
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      properties:
                        bucketing_version 2
                        column.name.delimiter ,
                        columns key,value
                        columns.comments 
                        columns.types int:string
#### A masked pattern was here ####
                        location hdfs://### HDFS PATH ###
                        name default.unbucketed_table
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.unbucketed_table
                  TotalFiles: 1
                  GatherStats: true
                  MultiFileSpray: false
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: string)
                  outputColumnNames: key, value
                  Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), max(length(value)), avg(COALESCE(length(value),0)), count(value), compute_bit_vector_hll(value)
                    minReductionHashAggr: 0.99
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                    Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      bucketingVersion: 2
                      null sort order: 
                      numBuckets: -1
                      sort order: 
                      Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                      tag: -1
                      value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary)
                      auto parallelism: false
        Reducer 5 
            Execution mode: vectorized, llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
                    directory: hdfs://### HDFS PATH ###
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    Stats Publishing Key Prefix: hdfs://### HDFS PATH ###
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          bucketing_version -1
                          columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11
                          columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-3
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          source: hdfs://### HDFS PATH ###
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 2
                bucket_field_name key
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                location hdfs://### HDFS PATH ###
                name default.bucketed_table
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.bucketed_table

  Stage: Stage-4
    Stats Work
      Basic Stats Work:
          Stats Aggregation Key Prefix: hdfs://### HDFS PATH ###
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.bucketed_table
          Is Table Level Stats: true

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          source: hdfs://### HDFS PATH ###
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                location hdfs://### HDFS PATH ###
                name default.unbucketed_table
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.unbucketed_table

  Stage: Stage-5
    Stats Work
      Basic Stats Work:
          Stats Aggregation Key Prefix: hdfs://### HDFS PATH ###
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.unbucketed_table
          Is Table Level Stats: true

  Stage: Stage-10
    Conditional Operator

  Stage: Stage-7
    Move Operator
      files:
          hdfs directory: true
          source: hdfs://### HDFS PATH ###
          destination: hdfs://### HDFS PATH ###

  Stage: Stage-6
    Tez
#### A masked pattern was here ####
      Vertices:
        File Merge 
            Map Operator Tree:
                TableScan
                  GatherStats: false
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
                    directory: hdfs://### HDFS PATH ###
                    NumFilesPerFileSink: 1
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,value
                          columns.comments 
                          columns.types int:string
#### A masked pattern was here ####
                          location hdfs://### HDFS PATH ###
                          name default.unbucketed_table
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.unbucketed_table
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false
            Path -> Alias:
              hdfs://### HDFS PATH ### [hdfs://### HDFS PATH ###]
            Path -> Partition:
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: -ext-10004
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.unbucketed_table
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.unbucketed_table
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.unbucketed_table
                  name: default.unbucketed_table
            Truncated Path -> Alias:
#### A masked pattern was here ####

  Stage: Stage-8
    Tez
#### A masked pattern was here ####
      Vertices:
        File Merge 
            Map Operator Tree:
                TableScan
                  GatherStats: false
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 0
                    directory: hdfs://### HDFS PATH ###
                    NumFilesPerFileSink: 1
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,value
                          columns.comments 
                          columns.types int:string
#### A masked pattern was here ####
                          location hdfs://### HDFS PATH ###
                          name default.unbucketed_table
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.unbucketed_table
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false
            Path -> Alias:
              hdfs://### HDFS PATH ### [hdfs://### HDFS PATH ###]
            Path -> Partition:
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: -ext-10004
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.unbucketed_table
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.unbucketed_table
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.unbucketed_table
                  name: default.unbucketed_table
            Truncated Path -> Alias:
#### A masked pattern was here ####

  Stage: Stage-9
    Move Operator
      files:
          hdfs directory: true
          source: hdfs://### HDFS PATH ###
          destination: hdfs://### HDFS PATH ###

PREHOOK: query: FROM src
INSERT OVERWRITE TABLE bucketed_table SELECT key, value
INSERT OVERWRITE TABLE unbucketed_table SELECT key, value cluster by key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@bucketed_table
PREHOOK: Output: default@unbucketed_table
POSTHOOK: query: FROM src
INSERT OVERWRITE TABLE bucketed_table SELECT key, value
INSERT OVERWRITE TABLE unbucketed_table SELECT key, value cluster by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@bucketed_table
POSTHOOK: Output: default@unbucketed_table
POSTHOOK: Lineage: bucketed_table.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketed_table.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: unbucketed_table.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: unbucketed_table.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: DESC FORMATTED bucketed_table
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@bucketed_table
POSTHOOK: query: DESC FORMATTED bucketed_table
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@bucketed_table
# col_name            	data_type           	comment             
key                 	int                 	                    
value               	string              	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"key\":\"true\",\"value\":\"true\"}}
	SORTBUCKETCOLSPREFIX	TRUE                
	bucketing_version   	2                   
	numFiles            	2                   
	numRows             	500                 
	rawDataSize         	5312                
	totalSize           	5812                
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	2                   	 
Bucket Columns:     	[key]               	 
Sort Columns:       	[Order(col:key, order:1)]	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: SELECT * FROM bucketed_table TABLESAMPLE (BUCKET 1 OUT OF 2) s LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketed_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM bucketed_table TABLESAMPLE (BUCKET 1 OUT OF 2) s LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketed_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2	val_2
10	val_10
17	val_17
19	val_19
20	val_20
27	val_27
30	val_30
41	val_41
43	val_43
51	val_51
PREHOOK: query: SELECT * FROM bucketed_table TABLESAMPLE (BUCKET 2 OUT OF 2) s LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketed_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM bucketed_table TABLESAMPLE (BUCKET 2 OUT OF 2) s LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketed_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
0	val_0
0	val_0
0	val_0
4	val_4
5	val_5
5	val_5
5	val_5
8	val_8
9	val_9
11	val_11
PREHOOK: query: SELECT COUNT(DISTINCT INPUT__FILE__NAME) FROM bucketed_table
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketed_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT COUNT(DISTINCT INPUT__FILE__NAME) FROM bucketed_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketed_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2
PREHOOK: query: SELECT COUNT(DISTINCT INPUT__FILE__NAME) FROM unbucketed_table
PREHOOK: type: QUERY
PREHOOK: Input: default@unbucketed_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT COUNT(DISTINCT INPUT__FILE__NAME) FROM unbucketed_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@unbucketed_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
1
