PREHOOK: query: create table varchar_table(vs varchar(50))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@varchar_table
POSTHOOK: query: create table varchar_table(vs varchar(50))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@varchar_table
PREHOOK: query: insert into table varchar_table
    values ("blue"), ("a long sentence"), ("more sunshine and rain"), ("exactly 10"), ("longer 10 "), ("tells the truth")
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@varchar_table
POSTHOOK: query: insert into table varchar_table
    values ("blue"), ("a long sentence"), ("more sunshine and rain"), ("exactly 10"), ("longer 10 "), ("tells the truth")
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@varchar_table
POSTHOOK: Lineage: varchar_table.vs SCRIPT []
_col0
PREHOOK: query: alter table varchar_table change column vs vs varchar(10)
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@varchar_table
PREHOOK: Output: default@varchar_table
POSTHOOK: query: alter table varchar_table change column vs vs varchar(10)
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@varchar_table
POSTHOOK: Output: default@varchar_table
PREHOOK: query: explain vectorization detail
create table varchar_ctas_1 as select length(vs),reverse(vs) from varchar_table
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@varchar_table
PREHOOK: Output: database:default
PREHOOK: Output: default@varchar_ctas_1
POSTHOOK: query: explain vectorization detail
create table varchar_ctas_1 as select length(vs),reverse(vs) from varchar_table
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@varchar_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@varchar_ctas_1
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-0, Stage-2
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: varchar_table
                  Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: length(vs) (type: int), reverse(vs) (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.varchar_ctas_1
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: string)
                      outputColumnNames: col1, col2
                      Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: compute_stats(col1, 'hll'), compute_stats(col2, 'hll')
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 958 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 958 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col0 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
            Execution mode: llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                notVectorizedReason: Aggregation Function expression for GROUPBY operator: UDF compute_stats not supported
                vectorized: false
        Reducer 2 
            Execution mode: llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                notVectorizedReason: Aggregation Function expression for GROUPBY operator: UDF compute_stats not supported
                vectorized: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 974 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 974 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
    Create Table
      columns: _c0 int, _c1 string
      name: default.varchar_ctas_1
      input format: org.apache.hadoop.mapred.TextInputFormat
      output format: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
      serde name: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: _c0, _c1
          Column Types: int, string
          Table: default.varchar_ctas_1

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: create table varchar_ctas_1 as select length(vs),reverse(vs) from varchar_table
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@varchar_table
PREHOOK: Output: database:default
PREHOOK: Output: default@varchar_ctas_1
POSTHOOK: query: create table varchar_ctas_1 as select length(vs),reverse(vs) from varchar_table
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@varchar_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@varchar_ctas_1
POSTHOOK: Lineage: varchar_ctas_1._c0 EXPRESSION [(varchar_table)varchar_table.FieldSchema(name:vs, type:varchar(10), comment:null), ]
POSTHOOK: Lineage: varchar_ctas_1._c1 EXPRESSION [(varchar_table)varchar_table.FieldSchema(name:vs, type:varchar(10), comment:null), ]
_c0	_c1
PREHOOK: query: select * from varchar_ctas_1 order by 2
PREHOOK: type: QUERY
PREHOOK: Input: default@varchar_ctas_1
#### A masked pattern was here ####
POSTHOOK: query: select * from varchar_ctas_1 order by 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@varchar_ctas_1
#### A masked pattern was here ####
varchar_ctas_1._c0	varchar_ctas_1._c1
10	 01 regnol
10	 eht sllet
10	01 yltcaxe
4	eulb
10	hsnus erom
10	nes gnol a
PREHOOK: query: create table char_table(vs char(50))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@char_table
POSTHOOK: query: create table char_table(vs char(50))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@char_table
PREHOOK: query: insert into table char_table
    values ("  yellow"), ("some words and spaces  "), ("less sunshine and rain"), ("exactly 10"), ("sunlight moon"), ("begs the truth")
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@char_table
POSTHOOK: query: insert into table char_table
    values ("  yellow"), ("some words and spaces  "), ("less sunshine and rain"), ("exactly 10"), ("sunlight moon"), ("begs the truth")
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@char_table
POSTHOOK: Lineage: char_table.vs SCRIPT []
_col0
PREHOOK: query: alter table char_table change column vs vs char(10)
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@char_table
PREHOOK: Output: default@char_table
POSTHOOK: query: alter table char_table change column vs vs char(10)
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@char_table
POSTHOOK: Output: default@char_table
PREHOOK: query: explain vectorization detail
create table char_ctas_1 as select length(vs),reverse(vs) from char_table
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@char_table
PREHOOK: Output: database:default
PREHOOK: Output: default@char_ctas_1
POSTHOOK: query: explain vectorization detail
create table char_ctas_1 as select length(vs),reverse(vs) from char_table
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@char_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@char_ctas_1
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-0, Stage-2
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: char_table
                  Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: length(vs) (type: int), reverse(vs) (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.char_ctas_1
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: string)
                      outputColumnNames: col1, col2
                      Statistics: Num rows: 6 Data size: 564 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: compute_stats(col1, 'hll'), compute_stats(col2, 'hll')
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 958 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 958 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col0 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
            Execution mode: llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                notVectorizedReason: Aggregation Function expression for GROUPBY operator: UDF compute_stats not supported
                vectorized: false
        Reducer 2 
            Execution mode: llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                notVectorizedReason: Aggregation Function expression for GROUPBY operator: UDF compute_stats not supported
                vectorized: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 974 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 974 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
    Create Table
      columns: _c0 int, _c1 string
      name: default.char_ctas_1
      input format: org.apache.hadoop.mapred.TextInputFormat
      output format: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
      serde name: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: _c0, _c1
          Column Types: int, string
          Table: default.char_ctas_1

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: create table char_ctas_1 as select length(vs),reverse(vs) from char_table
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@char_table
PREHOOK: Output: database:default
PREHOOK: Output: default@char_ctas_1
POSTHOOK: query: create table char_ctas_1 as select length(vs),reverse(vs) from char_table
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@char_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@char_ctas_1
POSTHOOK: Lineage: char_ctas_1._c0 EXPRESSION [(char_table)char_table.FieldSchema(name:vs, type:char(10), comment:null), ]
POSTHOOK: Lineage: char_ctas_1._c1 EXPRESSION [(char_table)char_table.FieldSchema(name:vs, type:char(10), comment:null), ]
_c0	_c1
PREHOOK: query: select * from char_ctas_1 order by 2
PREHOOK: type: QUERY
PREHOOK: Input: default@char_ctas_1
#### A masked pattern was here ####
POSTHOOK: query: select * from char_ctas_1 order by 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@char_ctas_1
#### A masked pattern was here ####
char_ctas_1._c0	char_ctas_1._c1
10	01 yltcaxe
10	hsnus ssel
10	m thgilnus
10	sdrow emos
10	t eht sgeb
8	wolley  
