PREHOOK: query: CREATE TABLE T1_n87(key STRING, val STRING)
SKEWED BY (key) ON ((2)) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n87
POSTHOOK: query: CREATE TABLE T1_n87(key STRING, val STRING)
SKEWED BY (key) ON ((2)) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n87
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE T1_n87
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_n87
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE T1_n87
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_n87
PREHOOK: query: CREATE TABLE T2_n54(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T2_n54
POSTHOOK: query: CREATE TABLE T2_n54(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2_n54
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE T2_n54
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t2_n54
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE T2_n54
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t2_n54
PREHOOK: query: EXPLAIN
select * from
(
select key, val from T1_n87
  union all 
select key, val from T1_n87
) subq1
join T2_n54 b on subq1.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n87
PREHOOK: Input: default@t2_n54
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
select * from
(
select key, val from T1_n87
  union all 
select key, val from T1_n87
) subq1
join T2_n54 b on subq1.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n87
POSTHOOK: Input: default@t2_n54
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
        Map 3 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n87
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: string)
                          1 _col0 (type: string)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        input vertices:
                          1 Map 4
                        Statistics: Num rows: 2 Data size: 809 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 2 Data size: 809 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: t1_n87
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col0 (type: string)
                          1 _col0 (type: string)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        input vertices:
                          1 Map 4
                        Statistics: Num rows: 2 Data size: 809 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          Statistics: Num rows: 2 Data size: 809 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Union 2 
            Vertex: Union 2

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from
(
select key, val from T1_n87
  union all 
select key, val from T1_n87
) subq1
join T2_n54 b on subq1.key = b.key
ORDER BY subq1.key, b.key, subq1.val, b.val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n87
PREHOOK: Input: default@t2_n54
#### A masked pattern was here ####
POSTHOOK: query: select * from
(
select key, val from T1_n87
  union all 
select key, val from T1_n87
) subq1
join T2_n54 b on subq1.key = b.key
ORDER BY subq1.key, b.key, subq1.val, b.val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n87
POSTHOOK: Input: default@t2_n54
#### A masked pattern was here ####
2	12	2	22
2	12	2	22
3	13	3	13
3	13	3	13
8	18	8	18
8	18	8	18
8	18	8	18
8	18	8	18
8	28	8	18
8	28	8	18
8	28	8	18
8	28	8	18
PREHOOK: query: EXPLAIN
select * from
(
select key, count(1) as cnt from T1_n87 group by key
) subq1
join T2_n54 b on subq1.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n87
PREHOOK: Input: default@t2_n54
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN
select * from
(
select key, count(1) as cnt from T1_n87 group by key
) subq1
join T2_n54 b on subq1.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n87
POSTHOOK: Input: default@t2_n54
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n87
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: string)
                    1 _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  input vertices:
                    1 Map 3
                  Statistics: Num rows: 1 Data size: 202 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 202 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from
(
select key, count(1) as cnt from T1_n87 group by key
) subq1
join T2_n54 b on subq1.key = b.key
ORDER BY subq1.key, b.key, subq1.cnt, b.val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n87
PREHOOK: Input: default@t2_n54
#### A masked pattern was here ####
POSTHOOK: query: select * from
(
select key, count(1) as cnt from T1_n87 group by key
) subq1
join T2_n54 b on subq1.key = b.key
ORDER BY subq1.key, b.key, subq1.cnt, b.val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n87
POSTHOOK: Input: default@t2_n54
#### A masked pattern was here ####
2	1	2	22
3	1	3	13
8	2	8	18
8	2	8	18
