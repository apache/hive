PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n8 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n8 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n8
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 2008-04-08
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-1
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n8 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n8 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08
#### A masked pattern was here ####
0	val_0	2008-04-08
0	val_0	2008-04-08
0	val_0	2008-04-08
103	val_103	2008-04-08
103	val_103	2008-04-08
11	val_11	2008-04-08
114	val_114	2008-04-08
118	val_118	2008-04-08
118	val_118	2008-04-08
125	val_125	2008-04-08
125	val_125	2008-04-08
129	val_129	2008-04-08
129	val_129	2008-04-08
136	val_136	2008-04-08
143	val_143	2008-04-08
15	val_15	2008-04-08
15	val_15	2008-04-08
150	val_150	2008-04-08
158	val_158	2008-04-08
165	val_165	2008-04-08
165	val_165	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
172	val_172	2008-04-08
172	val_172	2008-04-08
176	val_176	2008-04-08
176	val_176	2008-04-08
183	val_183	2008-04-08
187	val_187	2008-04-08
187	val_187	2008-04-08
187	val_187	2008-04-08
19	val_19	2008-04-08
190	val_190	2008-04-08
194	val_194	2008-04-08
202	val_202	2008-04-08
213	val_213	2008-04-08
213	val_213	2008-04-08
217	val_217	2008-04-08
217	val_217	2008-04-08
224	val_224	2008-04-08
224	val_224	2008-04-08
228	val_228	2008-04-08
235	val_235	2008-04-08
239	val_239	2008-04-08
239	val_239	2008-04-08
242	val_242	2008-04-08
242	val_242	2008-04-08
257	val_257	2008-04-08
26	val_26	2008-04-08
26	val_26	2008-04-08
260	val_260	2008-04-08
275	val_275	2008-04-08
282	val_282	2008-04-08
282	val_282	2008-04-08
286	val_286	2008-04-08
305	val_305	2008-04-08
309	val_309	2008-04-08
309	val_309	2008-04-08
316	val_316	2008-04-08
316	val_316	2008-04-08
316	val_316	2008-04-08
323	val_323	2008-04-08
327	val_327	2008-04-08
327	val_327	2008-04-08
327	val_327	2008-04-08
33	val_33	2008-04-08
338	val_338	2008-04-08
341	val_341	2008-04-08
345	val_345	2008-04-08
356	val_356	2008-04-08
367	val_367	2008-04-08
367	val_367	2008-04-08
37	val_37	2008-04-08
37	val_37	2008-04-08
374	val_374	2008-04-08
378	val_378	2008-04-08
389	val_389	2008-04-08
392	val_392	2008-04-08
396	val_396	2008-04-08
396	val_396	2008-04-08
396	val_396	2008-04-08
4	val_4	2008-04-08
400	val_400	2008-04-08
404	val_404	2008-04-08
404	val_404	2008-04-08
411	val_411	2008-04-08
419	val_419	2008-04-08
437	val_437	2008-04-08
44	val_44	2008-04-08
444	val_444	2008-04-08
448	val_448	2008-04-08
455	val_455	2008-04-08
459	val_459	2008-04-08
459	val_459	2008-04-08
462	val_462	2008-04-08
462	val_462	2008-04-08
466	val_466	2008-04-08
466	val_466	2008-04-08
466	val_466	2008-04-08
477	val_477	2008-04-08
480	val_480	2008-04-08
480	val_480	2008-04-08
480	val_480	2008-04-08
484	val_484	2008-04-08
491	val_491	2008-04-08
495	val_495	2008-04-08
51	val_51	2008-04-08
51	val_51	2008-04-08
66	val_66	2008-04-08
77	val_77	2008-04-08
8	val_8	2008-04-08
80	val_80	2008-04-08
84	val_84	2008-04-08
84	val_84	2008-04-08
95	val_95	2008-04-08
95	val_95	2008-04-08
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 68 Data size: 24552 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string), ds (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 68 Data size: 24552 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: string)
                      sort order: +
                      Map-reduce partition columns: _col2 (type: string)
                      value expressions: _col0 (type: int), _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), KEY._col2 (type: string)
                outputColumnNames: _col0, _col1, _col2
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 68 Data size: 24552 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08
#### A masked pattern was here ####
0	val_0	2008-04-08
0	val_0	2008-04-08
0	val_0	2008-04-08
103	val_103	2008-04-08
103	val_103	2008-04-08
11	val_11	2008-04-08
114	val_114	2008-04-08
118	val_118	2008-04-08
118	val_118	2008-04-08
125	val_125	2008-04-08
125	val_125	2008-04-08
129	val_129	2008-04-08
129	val_129	2008-04-08
136	val_136	2008-04-08
143	val_143	2008-04-08
15	val_15	2008-04-08
15	val_15	2008-04-08
150	val_150	2008-04-08
158	val_158	2008-04-08
165	val_165	2008-04-08
165	val_165	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
172	val_172	2008-04-08
172	val_172	2008-04-08
176	val_176	2008-04-08
176	val_176	2008-04-08
183	val_183	2008-04-08
187	val_187	2008-04-08
187	val_187	2008-04-08
187	val_187	2008-04-08
19	val_19	2008-04-08
190	val_190	2008-04-08
194	val_194	2008-04-08
202	val_202	2008-04-08
213	val_213	2008-04-08
213	val_213	2008-04-08
217	val_217	2008-04-08
217	val_217	2008-04-08
224	val_224	2008-04-08
224	val_224	2008-04-08
228	val_228	2008-04-08
235	val_235	2008-04-08
239	val_239	2008-04-08
239	val_239	2008-04-08
242	val_242	2008-04-08
242	val_242	2008-04-08
257	val_257	2008-04-08
26	val_26	2008-04-08
26	val_26	2008-04-08
260	val_260	2008-04-08
275	val_275	2008-04-08
282	val_282	2008-04-08
282	val_282	2008-04-08
286	val_286	2008-04-08
305	val_305	2008-04-08
309	val_309	2008-04-08
309	val_309	2008-04-08
316	val_316	2008-04-08
316	val_316	2008-04-08
316	val_316	2008-04-08
323	val_323	2008-04-08
327	val_327	2008-04-08
327	val_327	2008-04-08
327	val_327	2008-04-08
33	val_33	2008-04-08
338	val_338	2008-04-08
341	val_341	2008-04-08
345	val_345	2008-04-08
356	val_356	2008-04-08
367	val_367	2008-04-08
367	val_367	2008-04-08
37	val_37	2008-04-08
37	val_37	2008-04-08
374	val_374	2008-04-08
378	val_378	2008-04-08
389	val_389	2008-04-08
392	val_392	2008-04-08
396	val_396	2008-04-08
396	val_396	2008-04-08
396	val_396	2008-04-08
4	val_4	2008-04-08
400	val_400	2008-04-08
404	val_404	2008-04-08
404	val_404	2008-04-08
411	val_411	2008-04-08
419	val_419	2008-04-08
437	val_437	2008-04-08
44	val_44	2008-04-08
444	val_444	2008-04-08
448	val_448	2008-04-08
455	val_455	2008-04-08
459	val_459	2008-04-08
459	val_459	2008-04-08
462	val_462	2008-04-08
462	val_462	2008-04-08
466	val_466	2008-04-08
466	val_466	2008-04-08
466	val_466	2008-04-08
477	val_477	2008-04-08
480	val_480	2008-04-08
480	val_480	2008-04-08
480	val_480	2008-04-08
484	val_484	2008-04-08
491	val_491	2008-04-08
495	val_495	2008-04-08
51	val_51	2008-04-08
51	val_51	2008-04-08
66	val_66	2008-04-08
77	val_77	2008-04-08
8	val_8	2008-04-08
80	val_80	2008-04-08
84	val_84	2008-04-08
84	val_84	2008-04-08
95	val_95	2008-04-08
95	val_95	2008-04-08
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 73 Data size: 26696 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string), ds (type: string), hr (type: int)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 73 Data size: 26696 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: string), _col3 (type: int)
                      sort order: ++
                      Map-reduce partition columns: _col2 (type: string), _col3 (type: int)
                      value expressions: _col0 (type: int), _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 73 Data size: 26696 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
0	val_0	2008-04-08	0
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
103	val_103	2008-04-08	0
103	val_103	2008-04-08	1
11	val_11	2008-04-08	1
114	val_114	2008-04-08	1
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	1
129	val_129	2008-04-08	0
129	val_129	2008-04-08	1
136	val_136	2008-04-08	1
143	val_143	2008-04-08	0
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
150	val_150	2008-04-08	1
158	val_158	2008-04-08	0
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
183	val_183	2008-04-08	1
187	val_187	2008-04-08	0
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
19	val_19	2008-04-08	1
190	val_190	2008-04-08	0
194	val_194	2008-04-08	1
202	val_202	2008-04-08	1
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
228	val_228	2008-04-08	1
235	val_235	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
257	val_257	2008-04-08	1
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
260	val_260	2008-04-08	1
275	val_275	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	1
286	val_286	2008-04-08	1
305	val_305	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	1
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
323	val_323	2008-04-08	1
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	1
33	val_33	2008-04-08	0
338	val_338	2008-04-08	0
341	val_341	2008-04-08	0
345	val_345	2008-04-08	1
356	val_356	2008-04-08	1
367	val_367	2008-04-08	0
367	val_367	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
374	val_374	2008-04-08	1
378	val_378	2008-04-08	1
389	val_389	2008-04-08	0
392	val_392	2008-04-08	1
396	val_396	2008-04-08	0
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
4	val_4	2008-04-08	0
400	val_400	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
411	val_411	2008-04-08	1
419	val_419	2008-04-08	0
437	val_437	2008-04-08	0
44	val_44	2008-04-08	1
444	val_444	2008-04-08	1
448	val_448	2008-04-08	0
455	val_455	2008-04-08	1
459	val_459	2008-04-08	0
459	val_459	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	1
477	val_477	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
484	val_484	2008-04-08	0
491	val_491	2008-04-08	1
495	val_495	2008-04-08	0
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
66	val_66	2008-04-08	1
77	val_77	2008-04-08	0
8	val_8	2008-04-08	0
80	val_80	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	1
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/subdir' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/subdir' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 147 Data size: 53016 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string), ds (type: string), hr (type: int)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 147 Data size: 53016 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: string), _col3 (type: int)
                      sort order: ++
                      Map-reduce partition columns: _col2 (type: string), _col3 (type: int)
                      value expressions: _col0 (type: int), _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 147 Data size: 53016 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/subdir' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/subdir' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
0	val_0	2008-04-08	0
0	val_0	2008-04-08	0
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
103	val_103	2008-04-08	0
103	val_103	2008-04-08	0
103	val_103	2008-04-08	1
103	val_103	2008-04-08	1
11	val_11	2008-04-08	1
11	val_11	2008-04-08	1
114	val_114	2008-04-08	1
114	val_114	2008-04-08	1
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	1
125	val_125	2008-04-08	1
129	val_129	2008-04-08	0
129	val_129	2008-04-08	0
129	val_129	2008-04-08	1
129	val_129	2008-04-08	1
136	val_136	2008-04-08	1
136	val_136	2008-04-08	1
143	val_143	2008-04-08	0
143	val_143	2008-04-08	0
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
150	val_150	2008-04-08	1
150	val_150	2008-04-08	1
158	val_158	2008-04-08	0
158	val_158	2008-04-08	0
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
183	val_183	2008-04-08	1
183	val_183	2008-04-08	1
187	val_187	2008-04-08	0
187	val_187	2008-04-08	0
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
19	val_19	2008-04-08	1
19	val_19	2008-04-08	1
190	val_190	2008-04-08	0
190	val_190	2008-04-08	0
194	val_194	2008-04-08	1
194	val_194	2008-04-08	1
202	val_202	2008-04-08	1
202	val_202	2008-04-08	1
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
228	val_228	2008-04-08	1
228	val_228	2008-04-08	1
235	val_235	2008-04-08	1
235	val_235	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
257	val_257	2008-04-08	1
257	val_257	2008-04-08	1
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
260	val_260	2008-04-08	1
260	val_260	2008-04-08	1
275	val_275	2008-04-08	0
275	val_275	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	1
282	val_282	2008-04-08	1
286	val_286	2008-04-08	1
286	val_286	2008-04-08	1
305	val_305	2008-04-08	0
305	val_305	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	1
309	val_309	2008-04-08	1
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
323	val_323	2008-04-08	1
323	val_323	2008-04-08	1
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	1
327	val_327	2008-04-08	1
33	val_33	2008-04-08	0
33	val_33	2008-04-08	0
338	val_338	2008-04-08	0
338	val_338	2008-04-08	0
341	val_341	2008-04-08	0
341	val_341	2008-04-08	0
345	val_345	2008-04-08	1
345	val_345	2008-04-08	1
356	val_356	2008-04-08	1
356	val_356	2008-04-08	1
367	val_367	2008-04-08	0
367	val_367	2008-04-08	0
367	val_367	2008-04-08	1
367	val_367	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
374	val_374	2008-04-08	1
374	val_374	2008-04-08	1
378	val_378	2008-04-08	1
378	val_378	2008-04-08	1
389	val_389	2008-04-08	0
389	val_389	2008-04-08	0
392	val_392	2008-04-08	1
392	val_392	2008-04-08	1
396	val_396	2008-04-08	0
396	val_396	2008-04-08	0
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
4	val_4	2008-04-08	0
4	val_4	2008-04-08	0
400	val_400	2008-04-08	0
400	val_400	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
411	val_411	2008-04-08	1
411	val_411	2008-04-08	1
419	val_419	2008-04-08	0
419	val_419	2008-04-08	0
437	val_437	2008-04-08	0
437	val_437	2008-04-08	0
44	val_44	2008-04-08	1
44	val_44	2008-04-08	1
444	val_444	2008-04-08	1
444	val_444	2008-04-08	1
448	val_448	2008-04-08	0
448	val_448	2008-04-08	0
455	val_455	2008-04-08	1
455	val_455	2008-04-08	1
459	val_459	2008-04-08	0
459	val_459	2008-04-08	0
459	val_459	2008-04-08	1
459	val_459	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	1
466	val_466	2008-04-08	1
477	val_477	2008-04-08	0
477	val_477	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
484	val_484	2008-04-08	0
484	val_484	2008-04-08	0
491	val_491	2008-04-08	1
491	val_491	2008-04-08	1
495	val_495	2008-04-08	0
495	val_495	2008-04-08	0
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
66	val_66	2008-04-08	1
66	val_66	2008-04-08	1
77	val_77	2008-04-08	0
77	val_77	2008-04-08	0
8	val_8	2008-04-08	0
8	val_8	2008-04-08	0
80	val_80	2008-04-08	0
80	val_80	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	1
95	val_95	2008-04-08	1
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/bucketing.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/bucketing.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 47 Data size: 8648 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 47 Data size: 8648 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 47 Data size: 8648 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 47 Data size: 8648 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 47 Data size: 8648 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/bucketing.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/bucketing.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: Lineage: srcbucket_mapjoin_n8.key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8.value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
103	val_103
103	val_103
11	val_11
114	val_114
118	val_118
118	val_118
125	val_125
125	val_125
129	val_129
129	val_129
136	val_136
143	val_143
15	val_15
15	val_15
150	val_150
158	val_158
165	val_165
165	val_165
169	val_169
169	val_169
169	val_169
169	val_169
172	val_172
172	val_172
176	val_176
176	val_176
183	val_183
187	val_187
187	val_187
187	val_187
19	val_19
190	val_190
194	val_194
202	val_202
213	val_213
213	val_213
217	val_217
217	val_217
224	val_224
224	val_224
228	val_228
235	val_235
239	val_239
239	val_239
242	val_242
242	val_242
257	val_257
26	val_26
26	val_26
260	val_260
275	val_275
282	val_282
282	val_282
286	val_286
305	val_305
309	val_309
309	val_309
316	val_316
316	val_316
316	val_316
323	val_323
327	val_327
327	val_327
327	val_327
33	val_33
338	val_338
341	val_341
345	val_345
356	val_356
367	val_367
367	val_367
37	val_37
37	val_37
374	val_374
378	val_378
389	val_389
392	val_392
396	val_396
396	val_396
396	val_396
4	val_4
400	val_400
404	val_404
404	val_404
411	val_411
419	val_419
437	val_437
44	val_44
444	val_444
448	val_448
455	val_455
459	val_459
459	val_459
462	val_462
462	val_462
466	val_466
466	val_466
466	val_466
477	val_477
480	val_480
480	val_480
480	val_480
484	val_484
491	val_491
495	val_495
51	val_51
51	val_51
66	val_66
77	val_77
8	val_8
80	val_80
84	val_84
84	val_84
95	val_95
95	val_95
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 68 Data size: 24552 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string), ds (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 68 Data size: 24552 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: string), _bucket_number (type: string), _col0 (type: int)
                      sort order: +++
                      Map-reduce partition columns: _col2 (type: string)
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY._col0 (type: int), VALUE._col1 (type: string), KEY._col2 (type: string), KEY._bucket_number (type: string)
                outputColumnNames: _col0, _col1, _col2, _bucket_number
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_BUCKET_SORTED
                  Statistics: Num rows: 68 Data size: 24552 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08
#### A masked pattern was here ####
0	val_0	2008-04-08
0	val_0	2008-04-08
0	val_0	2008-04-08
103	val_103	2008-04-08
103	val_103	2008-04-08
11	val_11	2008-04-08
114	val_114	2008-04-08
118	val_118	2008-04-08
118	val_118	2008-04-08
125	val_125	2008-04-08
125	val_125	2008-04-08
129	val_129	2008-04-08
129	val_129	2008-04-08
136	val_136	2008-04-08
143	val_143	2008-04-08
15	val_15	2008-04-08
15	val_15	2008-04-08
150	val_150	2008-04-08
158	val_158	2008-04-08
165	val_165	2008-04-08
165	val_165	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
172	val_172	2008-04-08
172	val_172	2008-04-08
176	val_176	2008-04-08
176	val_176	2008-04-08
183	val_183	2008-04-08
187	val_187	2008-04-08
187	val_187	2008-04-08
187	val_187	2008-04-08
19	val_19	2008-04-08
190	val_190	2008-04-08
194	val_194	2008-04-08
202	val_202	2008-04-08
213	val_213	2008-04-08
213	val_213	2008-04-08
217	val_217	2008-04-08
217	val_217	2008-04-08
224	val_224	2008-04-08
224	val_224	2008-04-08
228	val_228	2008-04-08
235	val_235	2008-04-08
239	val_239	2008-04-08
239	val_239	2008-04-08
242	val_242	2008-04-08
242	val_242	2008-04-08
257	val_257	2008-04-08
26	val_26	2008-04-08
26	val_26	2008-04-08
260	val_260	2008-04-08
275	val_275	2008-04-08
282	val_282	2008-04-08
282	val_282	2008-04-08
286	val_286	2008-04-08
305	val_305	2008-04-08
309	val_309	2008-04-08
309	val_309	2008-04-08
316	val_316	2008-04-08
316	val_316	2008-04-08
316	val_316	2008-04-08
323	val_323	2008-04-08
327	val_327	2008-04-08
327	val_327	2008-04-08
327	val_327	2008-04-08
33	val_33	2008-04-08
338	val_338	2008-04-08
341	val_341	2008-04-08
345	val_345	2008-04-08
356	val_356	2008-04-08
367	val_367	2008-04-08
367	val_367	2008-04-08
37	val_37	2008-04-08
37	val_37	2008-04-08
374	val_374	2008-04-08
378	val_378	2008-04-08
389	val_389	2008-04-08
392	val_392	2008-04-08
396	val_396	2008-04-08
396	val_396	2008-04-08
396	val_396	2008-04-08
4	val_4	2008-04-08
400	val_400	2008-04-08
404	val_404	2008-04-08
404	val_404	2008-04-08
411	val_411	2008-04-08
419	val_419	2008-04-08
437	val_437	2008-04-08
44	val_44	2008-04-08
444	val_444	2008-04-08
448	val_448	2008-04-08
455	val_455	2008-04-08
459	val_459	2008-04-08
459	val_459	2008-04-08
462	val_462	2008-04-08
462	val_462	2008-04-08
466	val_466	2008-04-08
466	val_466	2008-04-08
466	val_466	2008-04-08
477	val_477	2008-04-08
480	val_480	2008-04-08
480	val_480	2008-04-08
480	val_480	2008-04-08
484	val_484	2008-04-08
491	val_491	2008-04-08
495	val_495	2008-04-08
51	val_51	2008-04-08
51	val_51	2008-04-08
66	val_66	2008-04-08
77	val_77	2008-04-08
8	val_8	2008-04-08
80	val_80	2008-04-08
84	val_84	2008-04-08
84	val_84	2008-04-08
95	val_95	2008-04-08
95	val_95	2008-04-08
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 73 Data size: 26696 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string), ds (type: string), hr (type: int)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 73 Data size: 26696 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: string), _col3 (type: int), _bucket_number (type: string), _col0 (type: int)
                      sort order: ++++
                      Map-reduce partition columns: _col2 (type: string), _col3 (type: int)
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY._col0 (type: int), VALUE._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: int), KEY._bucket_number (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _bucket_number
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_BUCKET_SORTED
                  Statistics: Num rows: 73 Data size: 26696 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
0	val_0	2008-04-08	0
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
103	val_103	2008-04-08	0
103	val_103	2008-04-08	1
11	val_11	2008-04-08	1
114	val_114	2008-04-08	1
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	1
129	val_129	2008-04-08	0
129	val_129	2008-04-08	1
136	val_136	2008-04-08	1
143	val_143	2008-04-08	0
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
150	val_150	2008-04-08	1
158	val_158	2008-04-08	0
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
183	val_183	2008-04-08	1
187	val_187	2008-04-08	0
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
19	val_19	2008-04-08	1
190	val_190	2008-04-08	0
194	val_194	2008-04-08	1
202	val_202	2008-04-08	1
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
228	val_228	2008-04-08	1
235	val_235	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
257	val_257	2008-04-08	1
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
260	val_260	2008-04-08	1
275	val_275	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	1
286	val_286	2008-04-08	1
305	val_305	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	1
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
323	val_323	2008-04-08	1
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	1
33	val_33	2008-04-08	0
338	val_338	2008-04-08	0
341	val_341	2008-04-08	0
345	val_345	2008-04-08	1
356	val_356	2008-04-08	1
367	val_367	2008-04-08	0
367	val_367	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
374	val_374	2008-04-08	1
378	val_378	2008-04-08	1
389	val_389	2008-04-08	0
392	val_392	2008-04-08	1
396	val_396	2008-04-08	0
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
4	val_4	2008-04-08	0
400	val_400	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
411	val_411	2008-04-08	1
419	val_419	2008-04-08	0
437	val_437	2008-04-08	0
44	val_44	2008-04-08	1
444	val_444	2008-04-08	1
448	val_448	2008-04-08	0
455	val_455	2008-04-08	1
459	val_459	2008-04-08	0
459	val_459	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	1
477	val_477	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
484	val_484	2008-04-08	0
491	val_491	2008-04-08	1
495	val_495	2008-04-08	0
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
66	val_66	2008-04-08	1
77	val_77	2008-04-08	0
8	val_8	2008-04-08	0
80	val_80	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	1
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/subdir' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/subdir' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 147 Data size: 53016 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string), ds (type: string), hr (type: int)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 147 Data size: 53016 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: string), _col3 (type: int), _bucket_number (type: string), _col0 (type: int)
                      sort order: ++++
                      Map-reduce partition columns: _col2 (type: string), _col3 (type: int)
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY._col0 (type: int), VALUE._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: int), KEY._bucket_number (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _bucket_number
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_BUCKET_SORTED
                  Statistics: Num rows: 147 Data size: 53016 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/subdir' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/subdir' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
0	val_0	2008-04-08	0
0	val_0	2008-04-08	0
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
103	val_103	2008-04-08	0
103	val_103	2008-04-08	0
103	val_103	2008-04-08	1
103	val_103	2008-04-08	1
11	val_11	2008-04-08	1
11	val_11	2008-04-08	1
114	val_114	2008-04-08	1
114	val_114	2008-04-08	1
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	1
125	val_125	2008-04-08	1
129	val_129	2008-04-08	0
129	val_129	2008-04-08	0
129	val_129	2008-04-08	1
129	val_129	2008-04-08	1
136	val_136	2008-04-08	1
136	val_136	2008-04-08	1
143	val_143	2008-04-08	0
143	val_143	2008-04-08	0
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
150	val_150	2008-04-08	1
150	val_150	2008-04-08	1
158	val_158	2008-04-08	0
158	val_158	2008-04-08	0
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
183	val_183	2008-04-08	1
183	val_183	2008-04-08	1
187	val_187	2008-04-08	0
187	val_187	2008-04-08	0
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
19	val_19	2008-04-08	1
19	val_19	2008-04-08	1
190	val_190	2008-04-08	0
190	val_190	2008-04-08	0
194	val_194	2008-04-08	1
194	val_194	2008-04-08	1
202	val_202	2008-04-08	1
202	val_202	2008-04-08	1
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
228	val_228	2008-04-08	1
228	val_228	2008-04-08	1
235	val_235	2008-04-08	1
235	val_235	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
257	val_257	2008-04-08	1
257	val_257	2008-04-08	1
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
260	val_260	2008-04-08	1
260	val_260	2008-04-08	1
275	val_275	2008-04-08	0
275	val_275	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	1
282	val_282	2008-04-08	1
286	val_286	2008-04-08	1
286	val_286	2008-04-08	1
305	val_305	2008-04-08	0
305	val_305	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	1
309	val_309	2008-04-08	1
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
323	val_323	2008-04-08	1
323	val_323	2008-04-08	1
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	1
327	val_327	2008-04-08	1
33	val_33	2008-04-08	0
33	val_33	2008-04-08	0
338	val_338	2008-04-08	0
338	val_338	2008-04-08	0
341	val_341	2008-04-08	0
341	val_341	2008-04-08	0
345	val_345	2008-04-08	1
345	val_345	2008-04-08	1
356	val_356	2008-04-08	1
356	val_356	2008-04-08	1
367	val_367	2008-04-08	0
367	val_367	2008-04-08	0
367	val_367	2008-04-08	1
367	val_367	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
374	val_374	2008-04-08	1
374	val_374	2008-04-08	1
378	val_378	2008-04-08	1
378	val_378	2008-04-08	1
389	val_389	2008-04-08	0
389	val_389	2008-04-08	0
392	val_392	2008-04-08	1
392	val_392	2008-04-08	1
396	val_396	2008-04-08	0
396	val_396	2008-04-08	0
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
4	val_4	2008-04-08	0
4	val_4	2008-04-08	0
400	val_400	2008-04-08	0
400	val_400	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
411	val_411	2008-04-08	1
411	val_411	2008-04-08	1
419	val_419	2008-04-08	0
419	val_419	2008-04-08	0
437	val_437	2008-04-08	0
437	val_437	2008-04-08	0
44	val_44	2008-04-08	1
44	val_44	2008-04-08	1
444	val_444	2008-04-08	1
444	val_444	2008-04-08	1
448	val_448	2008-04-08	0
448	val_448	2008-04-08	0
455	val_455	2008-04-08	1
455	val_455	2008-04-08	1
459	val_459	2008-04-08	0
459	val_459	2008-04-08	0
459	val_459	2008-04-08	1
459	val_459	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	1
466	val_466	2008-04-08	1
477	val_477	2008-04-08	0
477	val_477	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
484	val_484	2008-04-08	0
484	val_484	2008-04-08	0
491	val_491	2008-04-08	1
491	val_491	2008-04-08	1
495	val_495	2008-04-08	0
495	val_495	2008-04-08	0
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
66	val_66	2008-04-08	1
66	val_66	2008-04-08	1
77	val_77	2008-04-08	0
77	val_77	2008-04-08	0
8	val_8	2008-04-08	0
8	val_8	2008-04-08	0
80	val_80	2008-04-08	0
80	val_80	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	1
95	val_95	2008-04-08	1
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string, hr int) clustered by (key) sorted by (key) into 5 buckets STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 295 Data size: 106032 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string), ds (type: string), hr (type: int)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 295 Data size: 106032 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: string), _col3 (type: int), _bucket_number (type: string), _col0 (type: int)
                      sort order: ++++
                      Map-reduce partition columns: _col2 (type: string), _col3 (type: int)
                      value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY._col0 (type: int), VALUE._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: int), KEY._bucket_number (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _bucket_number
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_BUCKET_SORTED
                  Statistics: Num rows: 295 Data size: 106032 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/partitions' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/partitions' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=0).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08,hr=1).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=0
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08/hr=1
#### A masked pattern was here ####
0	val_0	2008-04-08	0
0	val_0	2008-04-08	0
0	val_0	2008-04-08	0
0	val_0	2008-04-08	0
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
103	val_103	2008-04-08	0
103	val_103	2008-04-08	0
103	val_103	2008-04-08	0
103	val_103	2008-04-08	0
103	val_103	2008-04-08	1
103	val_103	2008-04-08	1
103	val_103	2008-04-08	1
103	val_103	2008-04-08	1
11	val_11	2008-04-08	1
11	val_11	2008-04-08	1
11	val_11	2008-04-08	1
11	val_11	2008-04-08	1
114	val_114	2008-04-08	1
114	val_114	2008-04-08	1
114	val_114	2008-04-08	1
114	val_114	2008-04-08	1
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	1
125	val_125	2008-04-08	1
125	val_125	2008-04-08	1
125	val_125	2008-04-08	1
129	val_129	2008-04-08	0
129	val_129	2008-04-08	0
129	val_129	2008-04-08	0
129	val_129	2008-04-08	0
129	val_129	2008-04-08	1
129	val_129	2008-04-08	1
129	val_129	2008-04-08	1
129	val_129	2008-04-08	1
136	val_136	2008-04-08	1
136	val_136	2008-04-08	1
136	val_136	2008-04-08	1
136	val_136	2008-04-08	1
143	val_143	2008-04-08	0
143	val_143	2008-04-08	0
143	val_143	2008-04-08	0
143	val_143	2008-04-08	0
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
150	val_150	2008-04-08	1
150	val_150	2008-04-08	1
150	val_150	2008-04-08	1
150	val_150	2008-04-08	1
158	val_158	2008-04-08	0
158	val_158	2008-04-08	0
158	val_158	2008-04-08	0
158	val_158	2008-04-08	0
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
183	val_183	2008-04-08	1
183	val_183	2008-04-08	1
183	val_183	2008-04-08	1
183	val_183	2008-04-08	1
187	val_187	2008-04-08	0
187	val_187	2008-04-08	0
187	val_187	2008-04-08	0
187	val_187	2008-04-08	0
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
19	val_19	2008-04-08	1
19	val_19	2008-04-08	1
19	val_19	2008-04-08	1
19	val_19	2008-04-08	1
190	val_190	2008-04-08	0
190	val_190	2008-04-08	0
190	val_190	2008-04-08	0
190	val_190	2008-04-08	0
194	val_194	2008-04-08	1
194	val_194	2008-04-08	1
194	val_194	2008-04-08	1
194	val_194	2008-04-08	1
202	val_202	2008-04-08	1
202	val_202	2008-04-08	1
202	val_202	2008-04-08	1
202	val_202	2008-04-08	1
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
228	val_228	2008-04-08	1
228	val_228	2008-04-08	1
228	val_228	2008-04-08	1
228	val_228	2008-04-08	1
235	val_235	2008-04-08	1
235	val_235	2008-04-08	1
235	val_235	2008-04-08	1
235	val_235	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
257	val_257	2008-04-08	1
257	val_257	2008-04-08	1
257	val_257	2008-04-08	1
257	val_257	2008-04-08	1
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
260	val_260	2008-04-08	1
260	val_260	2008-04-08	1
260	val_260	2008-04-08	1
260	val_260	2008-04-08	1
275	val_275	2008-04-08	0
275	val_275	2008-04-08	0
275	val_275	2008-04-08	0
275	val_275	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	1
282	val_282	2008-04-08	1
282	val_282	2008-04-08	1
282	val_282	2008-04-08	1
286	val_286	2008-04-08	1
286	val_286	2008-04-08	1
286	val_286	2008-04-08	1
286	val_286	2008-04-08	1
305	val_305	2008-04-08	0
305	val_305	2008-04-08	0
305	val_305	2008-04-08	0
305	val_305	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	1
309	val_309	2008-04-08	1
309	val_309	2008-04-08	1
309	val_309	2008-04-08	1
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
323	val_323	2008-04-08	1
323	val_323	2008-04-08	1
323	val_323	2008-04-08	1
323	val_323	2008-04-08	1
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	1
327	val_327	2008-04-08	1
327	val_327	2008-04-08	1
327	val_327	2008-04-08	1
33	val_33	2008-04-08	0
33	val_33	2008-04-08	0
33	val_33	2008-04-08	0
33	val_33	2008-04-08	0
338	val_338	2008-04-08	0
338	val_338	2008-04-08	0
338	val_338	2008-04-08	0
338	val_338	2008-04-08	0
341	val_341	2008-04-08	0
341	val_341	2008-04-08	0
341	val_341	2008-04-08	0
341	val_341	2008-04-08	0
345	val_345	2008-04-08	1
345	val_345	2008-04-08	1
345	val_345	2008-04-08	1
345	val_345	2008-04-08	1
356	val_356	2008-04-08	1
356	val_356	2008-04-08	1
356	val_356	2008-04-08	1
356	val_356	2008-04-08	1
367	val_367	2008-04-08	0
367	val_367	2008-04-08	0
367	val_367	2008-04-08	0
367	val_367	2008-04-08	0
367	val_367	2008-04-08	1
367	val_367	2008-04-08	1
367	val_367	2008-04-08	1
367	val_367	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
374	val_374	2008-04-08	1
374	val_374	2008-04-08	1
374	val_374	2008-04-08	1
374	val_374	2008-04-08	1
378	val_378	2008-04-08	1
378	val_378	2008-04-08	1
378	val_378	2008-04-08	1
378	val_378	2008-04-08	1
389	val_389	2008-04-08	0
389	val_389	2008-04-08	0
389	val_389	2008-04-08	0
389	val_389	2008-04-08	0
392	val_392	2008-04-08	1
392	val_392	2008-04-08	1
392	val_392	2008-04-08	1
392	val_392	2008-04-08	1
396	val_396	2008-04-08	0
396	val_396	2008-04-08	0
396	val_396	2008-04-08	0
396	val_396	2008-04-08	0
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
4	val_4	2008-04-08	0
4	val_4	2008-04-08	0
4	val_4	2008-04-08	0
4	val_4	2008-04-08	0
400	val_400	2008-04-08	0
400	val_400	2008-04-08	0
400	val_400	2008-04-08	0
400	val_400	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
411	val_411	2008-04-08	1
411	val_411	2008-04-08	1
411	val_411	2008-04-08	1
411	val_411	2008-04-08	1
419	val_419	2008-04-08	0
419	val_419	2008-04-08	0
419	val_419	2008-04-08	0
419	val_419	2008-04-08	0
437	val_437	2008-04-08	0
437	val_437	2008-04-08	0
437	val_437	2008-04-08	0
437	val_437	2008-04-08	0
44	val_44	2008-04-08	1
44	val_44	2008-04-08	1
44	val_44	2008-04-08	1
44	val_44	2008-04-08	1
444	val_444	2008-04-08	1
444	val_444	2008-04-08	1
444	val_444	2008-04-08	1
444	val_444	2008-04-08	1
448	val_448	2008-04-08	0
448	val_448	2008-04-08	0
448	val_448	2008-04-08	0
448	val_448	2008-04-08	0
455	val_455	2008-04-08	1
455	val_455	2008-04-08	1
455	val_455	2008-04-08	1
455	val_455	2008-04-08	1
459	val_459	2008-04-08	0
459	val_459	2008-04-08	0
459	val_459	2008-04-08	0
459	val_459	2008-04-08	0
459	val_459	2008-04-08	1
459	val_459	2008-04-08	1
459	val_459	2008-04-08	1
459	val_459	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	1
466	val_466	2008-04-08	1
466	val_466	2008-04-08	1
466	val_466	2008-04-08	1
477	val_477	2008-04-08	0
477	val_477	2008-04-08	0
477	val_477	2008-04-08	0
477	val_477	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
484	val_484	2008-04-08	0
484	val_484	2008-04-08	0
484	val_484	2008-04-08	0
484	val_484	2008-04-08	0
491	val_491	2008-04-08	1
491	val_491	2008-04-08	1
491	val_491	2008-04-08	1
491	val_491	2008-04-08	1
495	val_495	2008-04-08	0
495	val_495	2008-04-08	0
495	val_495	2008-04-08	0
495	val_495	2008-04-08	0
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
66	val_66	2008-04-08	1
66	val_66	2008-04-08	1
66	val_66	2008-04-08	1
66	val_66	2008-04-08	1
77	val_77	2008-04-08	0
77	val_77	2008-04-08	0
77	val_77	2008-04-08	0
77	val_77	2008-04-08	0
8	val_8	2008-04-08	0
8	val_8	2008-04-08	0
8	val_8	2008-04-08	0
8	val_8	2008-04-08	0
80	val_80	2008-04-08	0
80	val_80	2008-04-08	0
80	val_80	2008-04-08	0
80	val_80	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	1
95	val_95	2008-04-08	1
95	val_95	2008-04-08	1
95	val_95	2008-04-08	1
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string, ds string) partitioned by (hr int) clustered by (key, value) sorted by (key, value) into 5 buckets STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string, ds string) partitioned by (hr int) clustered by (key, value) sorted by (key, value) into 5 buckets STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 73 Data size: 26696 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string), ds (type: string), hr (type: int)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 73 Data size: 26696 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col3 (type: int), _bucket_number (type: string), _col0 (type: int), _col1 (type: string)
                      sort order: ++++
                      Map-reduce partition columns: _col3 (type: int)
                      value expressions: _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY._col0 (type: int), KEY._col1 (type: string), VALUE._col2 (type: string), KEY._col3 (type: int), KEY._bucket_number (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _bucket_number
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_BUCKET_SORTED
                  Statistics: Num rows: 73 Data size: 26696 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            hr 
          replace: false
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/partitions/load_data_2_partitions.txt' INTO TABLE srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8@hr=0
POSTHOOK: Output: default@srcbucket_mapjoin_n8@hr=1
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(hr=0).ds SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(hr=0).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(hr=0).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(hr=1).ds SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(hr=1).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(hr=1).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@hr=0
PREHOOK: Input: default@srcbucket_mapjoin_n8@hr=1
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@hr=0
POSTHOOK: Input: default@srcbucket_mapjoin_n8@hr=1
#### A masked pattern was here ####
0	val_0	2008-04-08	0
0	val_0	2008-04-08	1
0	val_0	2008-04-08	1
103	val_103	2008-04-08	0
103	val_103	2008-04-08	1
11	val_11	2008-04-08	1
114	val_114	2008-04-08	1
118	val_118	2008-04-08	0
118	val_118	2008-04-08	0
125	val_125	2008-04-08	0
125	val_125	2008-04-08	1
129	val_129	2008-04-08	0
129	val_129	2008-04-08	1
136	val_136	2008-04-08	1
143	val_143	2008-04-08	0
15	val_15	2008-04-08	1
15	val_15	2008-04-08	1
150	val_150	2008-04-08	1
158	val_158	2008-04-08	0
165	val_165	2008-04-08	1
165	val_165	2008-04-08	1
169	val_169	2008-04-08	0
169	val_169	2008-04-08	0
169	val_169	2008-04-08	1
169	val_169	2008-04-08	1
172	val_172	2008-04-08	0
172	val_172	2008-04-08	0
176	val_176	2008-04-08	1
176	val_176	2008-04-08	1
183	val_183	2008-04-08	1
187	val_187	2008-04-08	0
187	val_187	2008-04-08	1
187	val_187	2008-04-08	1
19	val_19	2008-04-08	1
190	val_190	2008-04-08	0
194	val_194	2008-04-08	1
202	val_202	2008-04-08	1
213	val_213	2008-04-08	0
213	val_213	2008-04-08	0
217	val_217	2008-04-08	1
217	val_217	2008-04-08	1
224	val_224	2008-04-08	0
224	val_224	2008-04-08	0
228	val_228	2008-04-08	1
235	val_235	2008-04-08	1
239	val_239	2008-04-08	1
239	val_239	2008-04-08	1
242	val_242	2008-04-08	0
242	val_242	2008-04-08	0
257	val_257	2008-04-08	1
26	val_26	2008-04-08	0
26	val_26	2008-04-08	0
260	val_260	2008-04-08	1
275	val_275	2008-04-08	0
282	val_282	2008-04-08	0
282	val_282	2008-04-08	1
286	val_286	2008-04-08	1
305	val_305	2008-04-08	0
309	val_309	2008-04-08	0
309	val_309	2008-04-08	1
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
316	val_316	2008-04-08	0
323	val_323	2008-04-08	1
327	val_327	2008-04-08	0
327	val_327	2008-04-08	0
327	val_327	2008-04-08	1
33	val_33	2008-04-08	0
338	val_338	2008-04-08	0
341	val_341	2008-04-08	0
345	val_345	2008-04-08	1
356	val_356	2008-04-08	1
367	val_367	2008-04-08	0
367	val_367	2008-04-08	1
37	val_37	2008-04-08	1
37	val_37	2008-04-08	1
374	val_374	2008-04-08	1
378	val_378	2008-04-08	1
389	val_389	2008-04-08	0
392	val_392	2008-04-08	1
396	val_396	2008-04-08	0
396	val_396	2008-04-08	1
396	val_396	2008-04-08	1
4	val_4	2008-04-08	0
400	val_400	2008-04-08	0
404	val_404	2008-04-08	0
404	val_404	2008-04-08	0
411	val_411	2008-04-08	1
419	val_419	2008-04-08	0
437	val_437	2008-04-08	0
44	val_44	2008-04-08	1
444	val_444	2008-04-08	1
448	val_448	2008-04-08	0
455	val_455	2008-04-08	1
459	val_459	2008-04-08	0
459	val_459	2008-04-08	1
462	val_462	2008-04-08	1
462	val_462	2008-04-08	1
466	val_466	2008-04-08	0
466	val_466	2008-04-08	0
466	val_466	2008-04-08	1
477	val_477	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
480	val_480	2008-04-08	0
484	val_484	2008-04-08	0
491	val_491	2008-04-08	1
495	val_495	2008-04-08	0
51	val_51	2008-04-08	1
51	val_51	2008-04-08	1
66	val_66	2008-04-08	1
77	val_77	2008-04-08	0
8	val_8	2008-04-08	0
80	val_80	2008-04-08	0
84	val_84	2008-04-08	0
84	val_84	2008-04-08	0
95	val_95	2008-04-08	0
95	val_95	2008-04-08	1
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n8(key int, value string) partitioned by (ds string) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: explain load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat'
SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: explain load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat'
SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: srcbucket_mapjoin_n8__temp_table_for_load_data__
                  Statistics: Num rows: 68 Data size: 24552 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string), ds (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 68 Data size: 24552 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: string)
                      sort order: +
                      Map-reduce partition columns: _col2 (type: string)
                      value expressions: _col0 (type: int), _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), KEY._col2 (type: string)
                outputColumnNames: _col0, _col1, _col2
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 68 Data size: 24552 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.srcbucket_mapjoin_n8

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.srcbucket_mapjoin_n8

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat'
SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: load data local inpath '../../data/files/load_data_job/load_data_1_partition.txt' INTO TABLE srcbucket_mapjoin_n8
INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat'
SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8__temp_table_for_load_data__
POSTHOOK: Output: default@srcbucket_mapjoin_n8@ds=2008-04-08
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: srcbucket_mapjoin_n8 PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_n8__temp_table_for_load_data__)srcbucket_mapjoin_n8__temp_table_for_load_data__.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from srcbucket_mapjoin_n8
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from srcbucket_mapjoin_n8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Input: default@srcbucket_mapjoin_n8@ds=2008-04-08
#### A masked pattern was here ####
0	val_0	2008-04-08
0	val_0	2008-04-08
0	val_0	2008-04-08
103	val_103	2008-04-08
103	val_103	2008-04-08
11	val_11	2008-04-08
114	val_114	2008-04-08
118	val_118	2008-04-08
118	val_118	2008-04-08
125	val_125	2008-04-08
125	val_125	2008-04-08
129	val_129	2008-04-08
129	val_129	2008-04-08
136	val_136	2008-04-08
143	val_143	2008-04-08
15	val_15	2008-04-08
15	val_15	2008-04-08
150	val_150	2008-04-08
158	val_158	2008-04-08
165	val_165	2008-04-08
165	val_165	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
169	val_169	2008-04-08
172	val_172	2008-04-08
172	val_172	2008-04-08
176	val_176	2008-04-08
176	val_176	2008-04-08
183	val_183	2008-04-08
187	val_187	2008-04-08
187	val_187	2008-04-08
187	val_187	2008-04-08
19	val_19	2008-04-08
190	val_190	2008-04-08
194	val_194	2008-04-08
202	val_202	2008-04-08
213	val_213	2008-04-08
213	val_213	2008-04-08
217	val_217	2008-04-08
217	val_217	2008-04-08
224	val_224	2008-04-08
224	val_224	2008-04-08
228	val_228	2008-04-08
235	val_235	2008-04-08
239	val_239	2008-04-08
239	val_239	2008-04-08
242	val_242	2008-04-08
242	val_242	2008-04-08
257	val_257	2008-04-08
26	val_26	2008-04-08
26	val_26	2008-04-08
260	val_260	2008-04-08
275	val_275	2008-04-08
282	val_282	2008-04-08
282	val_282	2008-04-08
286	val_286	2008-04-08
305	val_305	2008-04-08
309	val_309	2008-04-08
309	val_309	2008-04-08
316	val_316	2008-04-08
316	val_316	2008-04-08
316	val_316	2008-04-08
323	val_323	2008-04-08
327	val_327	2008-04-08
327	val_327	2008-04-08
327	val_327	2008-04-08
33	val_33	2008-04-08
338	val_338	2008-04-08
341	val_341	2008-04-08
345	val_345	2008-04-08
356	val_356	2008-04-08
367	val_367	2008-04-08
367	val_367	2008-04-08
37	val_37	2008-04-08
37	val_37	2008-04-08
374	val_374	2008-04-08
378	val_378	2008-04-08
389	val_389	2008-04-08
392	val_392	2008-04-08
396	val_396	2008-04-08
396	val_396	2008-04-08
396	val_396	2008-04-08
4	val_4	2008-04-08
400	val_400	2008-04-08
404	val_404	2008-04-08
404	val_404	2008-04-08
411	val_411	2008-04-08
419	val_419	2008-04-08
437	val_437	2008-04-08
44	val_44	2008-04-08
444	val_444	2008-04-08
448	val_448	2008-04-08
455	val_455	2008-04-08
459	val_459	2008-04-08
459	val_459	2008-04-08
462	val_462	2008-04-08
462	val_462	2008-04-08
466	val_466	2008-04-08
466	val_466	2008-04-08
466	val_466	2008-04-08
477	val_477	2008-04-08
480	val_480	2008-04-08
480	val_480	2008-04-08
480	val_480	2008-04-08
484	val_484	2008-04-08
491	val_491	2008-04-08
495	val_495	2008-04-08
51	val_51	2008-04-08
51	val_51	2008-04-08
66	val_66	2008-04-08
77	val_77	2008-04-08
8	val_8	2008-04-08
80	val_80	2008-04-08
84	val_84	2008-04-08
84	val_84	2008-04-08
95	val_95	2008-04-08
95	val_95	2008-04-08
PREHOOK: query: drop table srcbucket_mapjoin_n8
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket_mapjoin_n8
PREHOOK: Output: default@srcbucket_mapjoin_n8
POSTHOOK: query: drop table srcbucket_mapjoin_n8
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket_mapjoin_n8
POSTHOOK: Output: default@srcbucket_mapjoin_n8
PREHOOK: query: CREATE TABLE orc_test_txn (`id` integer, name string, dept string) PARTITIONED BY (year integer) STORED AS ORC TBLPROPERTIES('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@orc_test_txn
POSTHOOK: query: CREATE TABLE orc_test_txn (`id` integer, name string, dept string) PARTITIONED BY (year integer) STORED AS ORC TBLPROPERTIES('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orc_test_txn
#### A masked pattern was here ####
PREHOOK: type: QUERY
PREHOOK: Input: default@orc_test_txn__temp_table_for_load_data__
PREHOOK: Output: default@orc_test_txn
#### A masked pattern was here ####
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orc_test_txn__temp_table_for_load_data__
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: orc_test_txn__temp_table_for_load_data__
                  Statistics: Num rows: 24 Data size: 9024 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: id (type: int), name (type: string), dept (type: string), year (type: int)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 24 Data size: 9024 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col3 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col3 (type: int)
                      value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), VALUE._col2 (type: string), KEY._col3 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 24 Data size: 9024 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.orc_test_txn
                  Write Type: INSERT

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            year 
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.orc_test_txn
          Write Type: INSERT

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

#### A masked pattern was here ####
PREHOOK: type: QUERY
PREHOOK: Input: default@orc_test_txn__temp_table_for_load_data__
PREHOOK: Output: default@orc_test_txn
#### A masked pattern was here ####
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orc_test_txn__temp_table_for_load_data__
POSTHOOK: Output: default@orc_test_txn@year=2016
POSTHOOK: Output: default@orc_test_txn@year=2017
POSTHOOK: Output: default@orc_test_txn@year=2018
POSTHOOK: Lineage: orc_test_txn PARTITION(year=2016).dept SIMPLE [(orc_test_txn__temp_table_for_load_data__)orc_test_txn__temp_table_for_load_data__.FieldSchema(name:dept, type:string, comment:null), ]
POSTHOOK: Lineage: orc_test_txn PARTITION(year=2016).id SIMPLE [(orc_test_txn__temp_table_for_load_data__)orc_test_txn__temp_table_for_load_data__.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: orc_test_txn PARTITION(year=2016).name SIMPLE [(orc_test_txn__temp_table_for_load_data__)orc_test_txn__temp_table_for_load_data__.FieldSchema(name:name, type:string, comment:null), ]
POSTHOOK: Lineage: orc_test_txn PARTITION(year=2017).dept SIMPLE [(orc_test_txn__temp_table_for_load_data__)orc_test_txn__temp_table_for_load_data__.FieldSchema(name:dept, type:string, comment:null), ]
POSTHOOK: Lineage: orc_test_txn PARTITION(year=2017).id SIMPLE [(orc_test_txn__temp_table_for_load_data__)orc_test_txn__temp_table_for_load_data__.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: orc_test_txn PARTITION(year=2017).name SIMPLE [(orc_test_txn__temp_table_for_load_data__)orc_test_txn__temp_table_for_load_data__.FieldSchema(name:name, type:string, comment:null), ]
POSTHOOK: Lineage: orc_test_txn PARTITION(year=2018).dept SIMPLE [(orc_test_txn__temp_table_for_load_data__)orc_test_txn__temp_table_for_load_data__.FieldSchema(name:dept, type:string, comment:null), ]
POSTHOOK: Lineage: orc_test_txn PARTITION(year=2018).id SIMPLE [(orc_test_txn__temp_table_for_load_data__)orc_test_txn__temp_table_for_load_data__.FieldSchema(name:id, type:int, comment:null), ]
POSTHOOK: Lineage: orc_test_txn PARTITION(year=2018).name SIMPLE [(orc_test_txn__temp_table_for_load_data__)orc_test_txn__temp_table_for_load_data__.FieldSchema(name:name, type:string, comment:null), ]
PREHOOK: query: select * from orc_test_txn
PREHOOK: type: QUERY
PREHOOK: Input: default@orc_test_txn
PREHOOK: Input: default@orc_test_txn@year=2016
PREHOOK: Input: default@orc_test_txn@year=2017
PREHOOK: Input: default@orc_test_txn@year=2018
#### A masked pattern was here ####
POSTHOOK: query: select * from orc_test_txn
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orc_test_txn
POSTHOOK: Input: default@orc_test_txn@year=2016
POSTHOOK: Input: default@orc_test_txn@year=2017
POSTHOOK: Input: default@orc_test_txn@year=2018
#### A masked pattern was here ####
10	Haley	CSE	2018
8	Henry	CSE	2016
9	Harris	CSE	2017
