PREHOOK: query: create table tempty(i int, j int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tempty
POSTHOOK: query: create table tempty(i int, j int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tempty
PREHOOK: query: CREATE TABLE part_null_n0 as select * from part
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@part
PREHOOK: Output: database:default
PREHOOK: Output: default@part_null_n0
POSTHOOK: query: CREATE TABLE part_null_n0 as select * from part
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@part
POSTHOOK: Output: database:default
POSTHOOK: Output: default@part_null_n0
POSTHOOK: Lineage: part_null_n0.p_brand SIMPLE [(part)part.FieldSchema(name:p_brand, type:string, comment:null), ]
POSTHOOK: Lineage: part_null_n0.p_comment SIMPLE [(part)part.FieldSchema(name:p_comment, type:string, comment:null), ]
POSTHOOK: Lineage: part_null_n0.p_container SIMPLE [(part)part.FieldSchema(name:p_container, type:string, comment:null), ]
POSTHOOK: Lineage: part_null_n0.p_mfgr SIMPLE [(part)part.FieldSchema(name:p_mfgr, type:string, comment:null), ]
POSTHOOK: Lineage: part_null_n0.p_name SIMPLE [(part)part.FieldSchema(name:p_name, type:string, comment:null), ]
POSTHOOK: Lineage: part_null_n0.p_partkey SIMPLE [(part)part.FieldSchema(name:p_partkey, type:int, comment:null), ]
POSTHOOK: Lineage: part_null_n0.p_retailprice SIMPLE [(part)part.FieldSchema(name:p_retailprice, type:double, comment:null), ]
POSTHOOK: Lineage: part_null_n0.p_size SIMPLE [(part)part.FieldSchema(name:p_size, type:int, comment:null), ]
POSTHOOK: Lineage: part_null_n0.p_type SIMPLE [(part)part.FieldSchema(name:p_type, type:string, comment:null), ]
PREHOOK: query: insert into part_null_n0 values(NULL,NULL,NULL,NULL,NULL, NULL, NULL,NULL,NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@part_null_n0
POSTHOOK: query: insert into part_null_n0 values(NULL,NULL,NULL,NULL,NULL, NULL, NULL,NULL,NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@part_null_n0
POSTHOOK: Lineage: part_null_n0.p_brand EXPRESSION []
POSTHOOK: Lineage: part_null_n0.p_comment EXPRESSION []
POSTHOOK: Lineage: part_null_n0.p_container EXPRESSION []
POSTHOOK: Lineage: part_null_n0.p_mfgr EXPRESSION []
POSTHOOK: Lineage: part_null_n0.p_name EXPRESSION []
POSTHOOK: Lineage: part_null_n0.p_partkey EXPRESSION []
POSTHOOK: Lineage: part_null_n0.p_retailprice EXPRESSION []
POSTHOOK: Lineage: part_null_n0.p_size EXPRESSION []
POSTHOOK: Lineage: part_null_n0.p_type EXPRESSION []
Warning: Shuffle Join MERGEJOIN[37][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: explain select count(*) from part where p_partkey <> ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: explain select count(*) from part where p_partkey <> ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (XPROD_EDGE), Reducer 6 (XPROD_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Map 1 (SIMPLE_EDGE)
        Reducer 6 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: part
                  Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: p_partkey (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: p_partkey is not null (type: boolean)
                    Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: p_partkey (type: int)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: p_partkey (type: int)
                    outputColumnNames: p_partkey
                    Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: count(), count(p_partkey)
                      minReductionHashAggr: 0.96153843
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: bigint), _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Outer Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col2
                Statistics: Num rows: 26 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 26 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col2 (type: boolean)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0, _col2, _col3, _col4
                Statistics: Num rows: 26 Data size: 624 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int), _col3 (type: bigint), _col4 (type: bigint), _col2 (type: boolean)
                  outputColumnNames: _col0, _col1, _col2, _col4
                  Statistics: Num rows: 26 Data size: 624 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((_col1 = 0L) or (_col4 is null and (_col2 >= _col1) and _col0 is not null)) (type: boolean)
                    Statistics: Num rows: 26 Data size: 624 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 26 Data size: 624 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.96153843
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int), true (type: boolean)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 25 Data size: 200 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: int)
                    Statistics: Num rows: 25 Data size: 200 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: boolean)
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0), count(VALUE._col1)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: bigint), _col1 (type: bigint)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join MERGEJOIN[37][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: select count(*) from part where p_partkey <> ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey <> ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
0
Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain cbo select count(*) from part where p_partkey > ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select count(*) from part where p_partkey > ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{}], agg#0=[count()])
  HiveJoin(condition=[OR($2, AND(>($0, $1), $3, IS NOT TRUE(OR(<=($0, $1), $4))))], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(p_partkey=[$0])
      HiveTableScan(table=[[default, part]], table:alias=[part])
    HiveProject(m=[$0], ==[=($1, 0)], <>=[<>($1, 0)], >=[>($1, $2)])
      HiveAggregate(group=[{}], m=[MAX($0)], c=[COUNT()], d=[COUNT($0)])
        HiveTableScan(table=[[default, part]], table:alias=[part])

Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select count(*) from part where p_partkey > ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey > ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
0
Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain cbo select count(*) from part where p_partkey < ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select count(*) from part where p_partkey < ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{}], agg#0=[count()])
  HiveJoin(condition=[OR($2, AND(<($0, $1), $3, IS NOT TRUE(OR(>=($0, $1), $4))))], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(p_partkey=[$0])
      HiveTableScan(table=[[default, part]], table:alias=[part])
    HiveProject(m=[$0], ==[=($1, 0)], <>=[<>($1, 0)], >=[>($1, $2)])
      HiveAggregate(group=[{}], m=[MIN($0)], c=[COUNT()], d=[COUNT($0)])
        HiveTableScan(table=[[default, part]], table:alias=[part])

Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select count(*) from part where p_partkey < ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey < ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
0
Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain cbo select count(*) from part where p_partkey >= ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select count(*) from part where p_partkey >= ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{}], agg#0=[count()])
  HiveJoin(condition=[OR($2, AND(>=($0, $1), $3, IS NOT TRUE(OR(<($0, $1), $4))))], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(p_partkey=[$0])
      HiveTableScan(table=[[default, part]], table:alias=[part])
    HiveProject(m=[$0], ==[=($1, 0)], <>=[<>($1, 0)], >=[>($1, $2)])
      HiveAggregate(group=[{}], m=[MAX($0)], c=[COUNT()], d=[COUNT($0)])
        HiveTableScan(table=[[default, part]], table:alias=[part])

Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select count(*) from part where p_partkey >= ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey >= ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
1
Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain cbo select count(*) from part where p_partkey <= ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select count(*) from part where p_partkey <= ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{}], agg#0=[count()])
  HiveJoin(condition=[OR($2, AND(<=($0, $1), $3, IS NOT TRUE(OR(>($0, $1), $4))))], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(p_partkey=[$0])
      HiveTableScan(table=[[default, part]], table:alias=[part])
    HiveProject(m=[$0], ==[=($1, 0)], <>=[<>($1, 0)], >=[>($1, $2)])
      HiveAggregate(group=[{}], m=[MIN($0)], c=[COUNT()], d=[COUNT($0)])
        HiveTableScan(table=[[default, part]], table:alias=[part])

Warning: Shuffle Join MERGEJOIN[17][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select count(*) from part where p_partkey <= ALL (select p_partkey from part)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey <= ALL (select p_partkey from part)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
1
Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 4' is a cross product
PREHOOK: query: explain cbo select count(*) from part where p_size < ALL (select max(p_size) from part group by p_partkey)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select count(*) from part where p_size < ALL (select max(p_size) from part group by p_partkey)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{}], agg#0=[count()])
  HiveJoin(condition=[OR($2, AND(<($0, $1), $3, IS NOT TRUE(OR(>=($0, $1), $4))))], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(p_size=[$5])
      HiveTableScan(table=[[default, part]], table:alias=[part])
    HiveProject(m=[$0], ==[=($1, 0)], <>=[<>($1, 0)], >=[>($1, $2)])
      HiveAggregate(group=[{}], m=[MIN($1)], c=[COUNT()], d=[COUNT($1)])
        HiveProject(p_partkey=[$0], $f1=[$1])
          HiveAggregate(group=[{0}], agg#0=[max($5)])
            HiveTableScan(table=[[default, part]], table:alias=[part])

Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 4' is a cross product
PREHOOK: query: select count(*) from part where p_size < ALL (select max(p_size) from part group by p_partkey)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_size < ALL (select max(p_size) from part group by p_partkey)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
0
Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select count(*) from part where p_size < ALL (select max(null) from part group by p_partkey)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_size < ALL (select max(null) from part group by p_partkey)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
0
Warning: Shuffle Join MERGEJOIN[37][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: select count(*) from part where p_partkey <> ALL(select i from tempty)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
PREHOOK: Input: default@tempty
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey <> ALL(select i from tempty)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
POSTHOOK: Input: default@tempty
#### A masked pattern was here ####
26
Warning: Shuffle Join MERGEJOIN[36][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 6' is a cross product
PREHOOK: query: select count(*) from part where p_partkey > ALL (select max(p_partkey) from part_null_n0 UNION select null from part group by true)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
PREHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey > ALL (select max(p_partkey) from part_null_n0 UNION select null from part group by true)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
POSTHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
0
Warning: Shuffle Join MERGEJOIN[45][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: select count(*) from part where ((p_partkey <> ALL (select p_partkey from part_null_n0)) == false)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
PREHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where ((p_partkey <> ALL (select p_partkey from part_null_n0)) == false)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
POSTHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
26
Warning: Shuffle Join MERGEJOIN[39][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
Warning: Shuffle Join MERGEJOIN[40][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 4' is a cross product
PREHOOK: query: select count(*) from part where (p_partkey <> ALL (select p_partkey from part_null_n0 where p_partkey is null)) is null
PREHOOK: type: QUERY
PREHOOK: Input: default@part
PREHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where (p_partkey <> ALL (select p_partkey from part_null_n0 where p_partkey is null)) is null
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
POSTHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
26
Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select count(*) from part where p_partkey > ALL (select max(p_partkey) from part_null_n0)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
PREHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey > ALL (select max(p_partkey) from part_null_n0)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
POSTHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
0
Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: explain cbo select count(*) from part having count(*) > ALL (select count(*) from part group by p_partkey)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select count(*) from part having count(*) > ALL (select count(*) from part group by p_partkey)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
CBO PLAN:
HiveProject($f0=[$4])
  HiveJoin(condition=[OR($1, AND(>($4, $0), $2, IS NOT TRUE(OR(<=($4, $0), $3))))], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(m=[$0], ==[=($1, 0)], <>=[<>($1, 0)], >=[>($1, $2)])
      HiveAggregate(group=[{}], m=[MAX($1)], c=[COUNT()], d=[COUNT($1)])
        HiveProject(p_partkey=[$0], $f1=[$1])
          HiveAggregate(group=[{0}], agg#0=[count()])
            HiveTableScan(table=[[default, part]], table:alias=[part])
    HiveProject($f0=[$0])
      HiveAggregate(group=[{}], agg#0=[count()])
        HiveTableScan(table=[[default, part]], table:alias=[part])

Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: select count(*) from part having count(*) > ALL (select count(*) from part group by p_partkey)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part having count(*) > ALL (select count(*) from part group by p_partkey)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
26
Warning: Shuffle Join MERGEJOIN[52][tables = [$hdt$_2, $hdt$_3]] in Stage 'Reducer 7' is a cross product
Warning: Shuffle Join MERGEJOIN[53][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: explain select count(*) from part where p_partkey >= ALL (select p_partkey from part)
	AND p_size <> ALL (select p_size from part group by p_size)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: explain select count(*) from part where p_partkey >= ALL (select p_partkey from part)
	AND p_size <> ALL (select p_size from part group by p_size)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (XPROD_EDGE), Reducer 7 (XPROD_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Map 1 (SIMPLE_EDGE)
        Reducer 6 <- Reducer 5 (CUSTOM_SIMPLE_EDGE)
        Reducer 7 <- Reducer 6 (XPROD_EDGE), Reducer 9 (XPROD_EDGE)
        Reducer 8 <- Map 1 (SIMPLE_EDGE)
        Reducer 9 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: part
                  Statistics: Num rows: 26 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: p_partkey (type: int), p_size (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 26 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col1 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col1 (type: int)
                      Statistics: Num rows: 26 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: int)
                  Select Operator
                    expressions: p_size (type: int)
                    outputColumnNames: p_size
                    Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: p_size (type: int)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 21 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 21 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: p_size is not null (type: boolean)
                    Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: p_size (type: int)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 21 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 21 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: p_partkey (type: int)
                    outputColumnNames: p_partkey
                    Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: max(p_partkey), count(), count(p_partkey)
                      minReductionHashAggr: 0.96153843
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int), _col1 (type: bigint), _col2 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Outer Join 0 to 1
                keys:
                  0 _col1 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col3
                Statistics: Num rows: 26 Data size: 312 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 26 Data size: 312 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col1 (type: int), _col3 (type: boolean)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0, _col1, _col3, _col4, _col5, _col6, _col7, _col8
                residual filter predicates: {((_col5 = 0L) or ((_col0 >= _col4) and (_col5 <> 0L) and ((_col0 < _col4) or (_col5 > _col6)) is not true))}
                Statistics: Num rows: 26 Data size: 1248 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: int), _col7 (type: bigint), _col8 (type: bigint), _col3 (type: boolean)
                  outputColumnNames: _col1, _col5, _col6, _col8
                  Statistics: Num rows: 26 Data size: 1248 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((_col5 = 0L) or (_col8 is null and (_col6 >= _col5) and _col1 is not null)) (type: boolean)
                    Statistics: Num rows: 26 Data size: 1248 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 26 Data size: 1248 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.96153843
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 21 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count(), count(_col0)
                  minReductionHashAggr: 0.95238096
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint), _col1 (type: bigint)
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0), count(VALUE._col1)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: bigint), _col1 (type: bigint)
        Reducer 7 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col1 (type: bigint), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: bigint)
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 21 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int), true (type: boolean)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 21 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: int)
                    Statistics: Num rows: 21 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: boolean)
        Reducer 9 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col1 (type: bigint), _col2 (type: bigint)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join MERGEJOIN[52][tables = [$hdt$_2, $hdt$_3]] in Stage 'Reducer 6' is a cross product
Warning: Shuffle Join MERGEJOIN[53][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: select count(*) from part where p_partkey >= ALL (select p_partkey from part) 
	AND p_partkey <> ALL (select p_size from part group by p_size)
PREHOOK: type: QUERY
PREHOOK: Input: default@part
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey >= ALL (select p_partkey from part) 
	AND p_partkey <> ALL (select p_size from part group by p_size)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
#### A masked pattern was here ####
1
Warning: Shuffle Join MERGEJOIN[32][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 2' is a cross product
Warning: Shuffle Join MERGEJOIN[33][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 4' is a cross product
PREHOOK: query: explain cbo select count(*) from part where p_partkey 
	>= ALL (select p_partkey from part where p_size >= ALL(select p_size from part_null_n0 group by p_size))
PREHOOK: type: QUERY
PREHOOK: Input: default@part
PREHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
POSTHOOK: query: explain cbo select count(*) from part where p_partkey 
	>= ALL (select p_partkey from part where p_size >= ALL(select p_size from part_null_n0 group by p_size))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
POSTHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{}], agg#0=[count()])
  HiveJoin(condition=[OR($2, AND(>=($0, $1), $3, IS NOT TRUE(OR(<($0, $1), $4))))], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(p_partkey=[$0])
      HiveTableScan(table=[[default, part]], table:alias=[part])
    HiveProject(m=[$0], ==[=($1, 0)], <>=[<>($1, 0)], >=[>($1, $2)])
      HiveAggregate(group=[{}], m=[MAX($0)], c=[COUNT()], d=[COUNT($0)])
        HiveJoin(condition=[OR($3, AND(>=($1, $2), $4, IS NOT TRUE(OR(<($1, $2), $5))))], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject(p_partkey=[$0], p_size=[$5])
            HiveTableScan(table=[[default, part]], table:alias=[part])
          HiveProject(m=[$0], ==[=($1, 0)], <>=[<>($1, 0)], >=[>($1, $2)])
            HiveAggregate(group=[{}], m=[MAX($0)], c=[COUNT()], d=[COUNT($0)])
              HiveProject(p_size=[$0])
                HiveAggregate(group=[{5}])
                  HiveTableScan(table=[[default, part_null_n0]], table:alias=[part_null_n0])

Warning: Shuffle Join MERGEJOIN[32][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 2' is a cross product
Warning: Shuffle Join MERGEJOIN[33][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 4' is a cross product
PREHOOK: query: select count(*) from part where p_partkey 
	>= ALL (select p_partkey from part where p_size >= ALL(select p_size from part_null_n0 group by p_size))
PREHOOK: type: QUERY
PREHOOK: Input: default@part
PREHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from part where p_partkey 
	>= ALL (select p_partkey from part where p_size >= ALL(select p_size from part_null_n0 group by p_size))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part
POSTHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
26
Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select p_partkey, (p_partkey >= ALL (select p_partkey from part_null_n0)) from part_null_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
POSTHOOK: query: select p_partkey, (p_partkey >= ALL (select p_partkey from part_null_n0)) from part_null_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
105685	false
110592	false
112398	false
121152	false
121152	false
132666	false
144293	false
146985	false
15103	false
155733	false
17273	false
17927	false
191709	false
192697	false
195606	NULL
33357	false
40982	false
42669	false
45261	false
48427	false
49671	false
65667	false
78486	false
85768	false
86428	false
90681	false
NULL	NULL
Warning: Shuffle Join MERGEJOIN[14][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: select p_partkey, (p_partkey > ALL (select null from part_null_n0)) from part_null_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
POSTHOOK: query: select p_partkey, (p_partkey > ALL (select null from part_null_n0)) from part_null_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part_null_n0
#### A masked pattern was here ####
105685	NULL
110592	NULL
112398	NULL
121152	NULL
121152	NULL
132666	NULL
144293	NULL
146985	NULL
15103	NULL
155733	NULL
17273	NULL
17927	NULL
191709	NULL
192697	NULL
195606	NULL
33357	NULL
40982	NULL
42669	NULL
45261	NULL
48427	NULL
49671	NULL
65667	NULL
78486	NULL
85768	NULL
86428	NULL
90681	NULL
NULL	NULL
Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select p_partkey, (p_partkey > ALL (select i from tempty)) from part_null_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@part_null_n0
PREHOOK: Input: default@tempty
#### A masked pattern was here ####
POSTHOOK: query: select p_partkey, (p_partkey > ALL (select i from tempty)) from part_null_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part_null_n0
POSTHOOK: Input: default@tempty
#### A masked pattern was here ####
105685	true
110592	true
112398	true
121152	true
121152	true
132666	true
144293	true
146985	true
15103	true
155733	true
17273	true
17927	true
191709	true
192697	true
195606	true
33357	true
40982	true
42669	true
45261	true
48427	true
49671	true
65667	true
78486	true
85768	true
86428	true
90681	true
NULL	true
PREHOOK: query: DROP TABLE part_null_n0
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@part_null_n0
PREHOOK: Output: default@part_null_n0
POSTHOOK: query: DROP TABLE part_null_n0
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@part_null_n0
POSTHOOK: Output: default@part_null_n0
PREHOOK: query: DROP TABLE tempty
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tempty
PREHOOK: Output: default@tempty
POSTHOOK: query: DROP TABLE tempty
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tempty
POSTHOOK: Output: default@tempty
