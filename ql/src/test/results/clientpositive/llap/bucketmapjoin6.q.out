PREHOOK: query: create table tmp1 (a string, b string) clustered by (a) sorted by (a) into 10 buckets
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmp1
POSTHOOK: query: create table tmp1 (a string, b string) clustered by (a) sorted by (a) into 10 buckets
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmp1
PREHOOK: query: create table tmp2 (a string, b string) clustered by (a) sorted by (a) into 10 buckets
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmp2
POSTHOOK: query: create table tmp2 (a string, b string) clustered by (a) sorted by (a) into 10 buckets
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmp2
PREHOOK: query: insert overwrite table tmp1 select * from src where key < 50
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tmp1
POSTHOOK: query: insert overwrite table tmp1 select * from src where key < 50
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tmp1
POSTHOOK: Lineage: tmp1.a SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: tmp1.b SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table tmp2 select * from src where key < 50
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tmp2
POSTHOOK: query: insert overwrite table tmp2 select * from src where key < 50
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tmp2
POSTHOOK: Lineage: tmp2.a SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: tmp2.b SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create table tmp3 (a string, b string, c string) clustered by (a) sorted by (a) into 10 buckets
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmp3
POSTHOOK: query: create table tmp3 (a string, b string, c string) clustered by (a) sorted by (a) into 10 buckets
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmp3
PREHOOK: query: insert overwrite table tmp3
  select /*+ MAPJOIN(l) */ i.a, i.b, l.b
  from tmp1 i join tmp2 l ON i.a = l.a
PREHOOK: type: QUERY
PREHOOK: Input: default@tmp1
PREHOOK: Input: default@tmp2
PREHOOK: Output: default@tmp3
POSTHOOK: query: insert overwrite table tmp3
  select /*+ MAPJOIN(l) */ i.a, i.b, l.b
  from tmp1 i join tmp2 l ON i.a = l.a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmp1
POSTHOOK: Input: default@tmp2
POSTHOOK: Output: default@tmp3
POSTHOOK: Lineage: tmp3.a SIMPLE [(tmp1)i.FieldSchema(name:a, type:string, comment:null), ]
POSTHOOK: Lineage: tmp3.b SIMPLE [(tmp1)i.FieldSchema(name:b, type:string, comment:null), ]
POSTHOOK: Lineage: tmp3.c SIMPLE [(tmp2)l.FieldSchema(name:b, type:string, comment:null), ]
PREHOOK: query: select * from tmp3
PREHOOK: type: QUERY
PREHOOK: Input: default@tmp3
#### A masked pattern was here ####
POSTHOOK: query: select * from tmp3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmp3
#### A masked pattern was here ####
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
10	val_10	val_10
11	val_11	val_11
12	val_12	val_12
12	val_12	val_12
12	val_12	val_12
12	val_12	val_12
15	val_15	val_15
15	val_15	val_15
15	val_15	val_15
15	val_15	val_15
17	val_17	val_17
18	val_18	val_18
18	val_18	val_18
18	val_18	val_18
18	val_18	val_18
19	val_19	val_19
2	val_2	val_2
20	val_20	val_20
24	val_24	val_24
24	val_24	val_24
24	val_24	val_24
24	val_24	val_24
26	val_26	val_26
26	val_26	val_26
26	val_26	val_26
26	val_26	val_26
27	val_27	val_27
28	val_28	val_28
30	val_30	val_30
33	val_33	val_33
34	val_34	val_34
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
37	val_37	val_37
37	val_37	val_37
37	val_37	val_37
37	val_37	val_37
4	val_4	val_4
41	val_41	val_41
42	val_42	val_42
42	val_42	val_42
42	val_42	val_42
42	val_42	val_42
43	val_43	val_43
44	val_44	val_44
47	val_47	val_47
5	val_5	val_5
5	val_5	val_5
5	val_5	val_5
5	val_5	val_5
5	val_5	val_5
5	val_5	val_5
5	val_5	val_5
5	val_5	val_5
5	val_5	val_5
8	val_8	val_8
9	val_9	val_9
