PREHOOK: query: DROP TABLE IF EXISTS user_web_events
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS user_web_events
POSTHOOK: type: DROPTABLE
PREHOOK: query: create temporary table user_web_events(`user id` bigint, `user name` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@user_web_events
POSTHOOK: query: create temporary table user_web_events(`user id` bigint, `user name` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@user_web_events
PREHOOK: query: explain analyze table user_web_events compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@user_web_events
PREHOOK: Output: default@user_web_events
#### A masked pattern was here ####
POSTHOOK: query: explain analyze table user_web_events compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@user_web_events
POSTHOOK: Output: default@user_web_events
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: user_web_events
                  Statistics: Num rows: 1 Data size: 192 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: user id (type: bigint), user name (type: string)
                    outputColumnNames: user id, user name
                    Statistics: Num rows: 1 Data size: 192 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: min(user id), max(user id), count(1), count(user id), compute_bit_vector_hll(user id), max(length(user name)), avg(COALESCE(length(user name),0)), count(user name), compute_bit_vector_hll(user name)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 1 Data size: 600 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 600 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint), _col1 (type: bigint), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 600 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'LONG' (type: string), _col0 (type: bigint), _col1 (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 600 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 600 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: user id, user name
          Column Types: bigint, string
          Table: default.user_web_events

PREHOOK: query: analyze table user_web_events compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@user_web_events
PREHOOK: Output: default@user_web_events
#### A masked pattern was here ####
POSTHOOK: query: analyze table user_web_events compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@user_web_events
POSTHOOK: Output: default@user_web_events
#### A masked pattern was here ####
PREHOOK: query: explain analyze table user_web_events compute statistics for columns `user id`
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@user_web_events
PREHOOK: Output: default@user_web_events
#### A masked pattern was here ####
POSTHOOK: query: explain analyze table user_web_events compute statistics for columns `user id`
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@user_web_events
POSTHOOK: Output: default@user_web_events
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: user_web_events
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: user id (type: bigint)
                    outputColumnNames: user id
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      aggregations: min(user id), max(user id), count(1), count(user id), compute_bit_vector_hll(user id)
                      minReductionHashAggr: 0.4
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
                      Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: bigint), _col1 (type: bigint), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), _col0 (type: bigint), _col1 (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: user id
          Column Types: bigint
          Table: default.user_web_events

PREHOOK: query: analyze table user_web_events compute statistics for columns `user id`
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@user_web_events
PREHOOK: Output: default@user_web_events
#### A masked pattern was here ####
POSTHOOK: query: analyze table user_web_events compute statistics for columns `user id`
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@user_web_events
POSTHOOK: Output: default@user_web_events
#### A masked pattern was here ####
