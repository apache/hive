PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
PREHOOK: query: -- INCLUDE_HADOOP_MAJOR_VERSIONS(0.20, 0.20S)
-- This test sets mapred.max.split.size=300 and hive.merge.smallfiles.avgsize=1
-- in an attempt to force the generation of multiple splits and multiple output files.
-- However, Hadoop 0.20 is incapable of generating splits smaller than the block size
-- when using CombineFileInputFormat, so only one split is generated. This has a
-- significant impact on the results of the TABLESAMPLE(x PERCENT). This issue was
-- fixed in MAPREDUCE-2046 which is included in 0.22.

-- create file inputs
create table sih_i_part (key int, value string) partitioned by (p string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: -- INCLUDE_HADOOP_MAJOR_VERSIONS(0.20, 0.20S)
-- This test sets mapred.max.split.size=300 and hive.merge.smallfiles.avgsize=1
-- in an attempt to force the generation of multiple splits and multiple output files.
-- However, Hadoop 0.20 is incapable of generating splits smaller than the block size
-- when using CombineFileInputFormat, so only one split is generated. This has a
-- significant impact on the results of the TABLESAMPLE(x PERCENT). This issue was
-- fixed in MAPREDUCE-2046 which is included in 0.22.

-- create file inputs
create table sih_i_part (key int, value string) partitioned by (p string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sih_i_part
PREHOOK: query: insert overwrite table sih_i_part partition (p='1') select key, value from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@sih_i_part@p=1
POSTHOOK: query: insert overwrite table sih_i_part partition (p='1') select key, value from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@sih_i_part@p=1
POSTHOOK: Lineage: sih_i_part PARTITION(p=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: sih_i_part PARTITION(p=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table sih_i_part partition (p='2') select key+10000, value from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@sih_i_part@p=2
POSTHOOK: query: insert overwrite table sih_i_part partition (p='2') select key+10000, value from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@sih_i_part@p=2
POSTHOOK: Lineage: sih_i_part PARTITION(p=2).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: sih_i_part PARTITION(p=2).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table sih_i_part partition (p='3') select key+20000, value from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@sih_i_part@p=3
POSTHOOK: query: insert overwrite table sih_i_part partition (p='3') select key+20000, value from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@sih_i_part@p=3
POSTHOOK: Lineage: sih_i_part PARTITION(p=3).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: sih_i_part PARTITION(p=3).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create table sih_src as select key, value from sih_i_part order by key, value
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@sih_i_part
PREHOOK: Input: default@sih_i_part@p=1
PREHOOK: Input: default@sih_i_part@p=2
PREHOOK: Input: default@sih_i_part@p=3
POSTHOOK: query: create table sih_src as select key, value from sih_i_part order by key, value
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@sih_i_part
POSTHOOK: Input: default@sih_i_part@p=1
POSTHOOK: Input: default@sih_i_part@p=2
POSTHOOK: Input: default@sih_i_part@p=3
POSTHOOK: Output: default@sih_src
PREHOOK: query: create table sih_src2 as select key, value from sih_src order by key, value
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@sih_src
POSTHOOK: query: create table sih_src2 as select key, value from sih_src order by key, value
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@sih_src
POSTHOOK: Output: default@sih_src2
PREHOOK: query: -- Sample split, running locally limited by num tasks
select count(1) from sih_src tablesample(1 percent)
PREHOOK: type: QUERY
PREHOOK: Input: default@sih_src
#### A masked pattern was here ####
1500
PREHOOK: query: -- sample two tables
select count(1) from sih_src tablesample(1 percent)a join sih_src2 tablesample(1 percent)b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@sih_src
PREHOOK: Input: default@sih_src2
#### A masked pattern was here ####
3084
PREHOOK: query: -- sample split, running locally limited by max bytes
select count(1) from sih_src tablesample(1 percent)
PREHOOK: type: QUERY
PREHOOK: Input: default@sih_src
#### A masked pattern was here ####
1500
