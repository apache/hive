PREHOOK: query: explain vectorization detail
select * from src a join src1 b on a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select * from src a join src1 b on a.key = b.key
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Reducer 4 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
        Reducer 4 <- Map 3 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: (key is not null and (key BETWEEN DynamicValue(RS_7_b_key_min) AND DynamicValue(RS_7_b_key_max) and in_bloom_filter(key, DynamicValue(RS_7_b_key_bloom_filter)))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterExprAndExpr(children: SelectColumnIsNotNull(col 0:string), FilterExprAndExpr(children: FilterStringColumnBetweenDynamicValue(col 0:string, left NULL, right NULL), VectorInBloomFilterColDynamicValue))
                    predicate: ((key BETWEEN DynamicValue(RS_7_b_key_min) AND DynamicValue(RS_7_b_key_max) and in_bloom_filter(key, DynamicValue(RS_7_b_key_bloom_filter))) and key is not null) (type: boolean)
                    Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0, 1]
                      Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: [1]
                        Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                vectorizationSupportRemovedReasons: [DECIMAL_64 disabled because LLAP is enabled]
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:string, value:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 25 Data size: 4375 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:string)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 25 Data size: 4375 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0, 1]
                      Statistics: Num rows: 25 Data size: 4375 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: [1]
                        Statistics: Num rows: 25 Data size: 4375 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string)
                      Select Operator
                        expressions: _col0 (type: string)
                        outputColumnNames: _col0
                        Select Vectorization:
                            className: VectorSelectOperator
                            native: true
                            projectedOutputColumnNums: [0]
                        Statistics: Num rows: 25 Data size: 2150 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: min(_col0), max(_col0), bloom_filter(_col0, expectedEntries=16)
                          Group By Vectorization:
                              aggregators: VectorUDAFMinString(col 0:string) -> string, VectorUDAFMaxString(col 0:string) -> string, VectorUDAFBloomFilter(col 0:string) -> binary
                              className: VectorGroupByOperator
                              groupByMode: HASH
                              native: false
                              vectorProcessingMode: HASH
                              projectedOutputColumnNums: [0, 1, 2]
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            sort order: 
                            Reduce Sink Vectorization:
                                className: VectorReduceSinkEmptyKeyOperator
                                keyColumnNums: []
                                native: true
                                nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                                valueColumnNums: [0, 1, 2]
                            Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                vectorizationSupportRemovedReasons: [DECIMAL_64 disabled because LLAP is enabled]
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:string, value:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 40 Data size: 14120 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 40 Data size: 14120 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: VALUE._col0:string, VALUE._col1:string, VALUE._col2:binary
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), bloom_filter(VALUE._col2, expectedEntries=16)
                Group By Vectorization:
                    aggregators: VectorUDAFMinString(col 0:string) -> string, VectorUDAFMaxString(col 1:string) -> string, VectorUDAFBloomFilterMerge(col 2:binary) -> binary
                    className: VectorGroupByOperator
                    groupByMode: FINAL
                    native: false
                    vectorProcessingMode: STREAMING
                    projectedOutputColumnNums: [0, 1, 2]
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  sort order: 
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkEmptyKeyOperator
                      keyColumnNums: []
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumnNums: [0, 1, 2]
                  Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from src a join src1 b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
#### A masked pattern was here ####
POSTHOOK: query: select * from src a join src1 b on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
#### A masked pattern was here ####
128	val_128	128	
128	val_128	128	
128	val_128	128	
146	val_146	146	val_146
146	val_146	146	val_146
150	val_150	150	val_150
213	val_213	213	val_213
213	val_213	213	val_213
224	val_224	224	
224	val_224	224	
238	val_238	238	val_238
238	val_238	238	val_238
255	val_255	255	val_255
255	val_255	255	val_255
273	val_273	273	val_273
273	val_273	273	val_273
273	val_273	273	val_273
278	val_278	278	val_278
278	val_278	278	val_278
311	val_311	311	val_311
311	val_311	311	val_311
311	val_311	311	val_311
369	val_369	369	
369	val_369	369	
369	val_369	369	
401	val_401	401	val_401
401	val_401	401	val_401
401	val_401	401	val_401
401	val_401	401	val_401
401	val_401	401	val_401
406	val_406	406	val_406
406	val_406	406	val_406
406	val_406	406	val_406
406	val_406	406	val_406
66	val_66	66	val_66
98	val_98	98	val_98
98	val_98	98	val_98
PREHOOK: query: CREATE TABLE srcbucket_mapjoin(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin
PREHOOK: query: CREATE TABLE tab_part (key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 4 BUCKETS STORED AS ORCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab_part
POSTHOOK: query: CREATE TABLE tab_part (key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 4 BUCKETS STORED AS ORCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab_part
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_part
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin
POSTHOOK: Output: default@srcbucket_mapjoin@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj1/000001_0' INTO TABLE srcbucket_mapjoin partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj1/000001_0' INTO TABLE srcbucket_mapjoin partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part
POSTHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
PREHOOK: query: insert overwrite table tab_part partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_part
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_part
PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
PREHOOK: Output: default@tab_part@ds=2008-04-08
POSTHOOK: query: insert overwrite table tab_part partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_part
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_part
POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
POSTHOOK: Output: default@tab_part@ds=2008-04-08
POSTHOOK: Lineage: tab_part PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_part)srcbucket_mapjoin_part.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: tab_part PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_part)srcbucket_mapjoin_part.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE tab(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS ORCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab
POSTHOOK: query: CREATE TABLE tab(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS ORCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab
PREHOOK: query: insert overwrite table tab partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin
PREHOOK: Input: default@srcbucket_mapjoin@ds=2008-04-08
PREHOOK: Output: default@tab@ds=2008-04-08
POSTHOOK: query: insert overwrite table tab partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin
POSTHOOK: Input: default@srcbucket_mapjoin@ds=2008-04-08
POSTHOOK: Output: default@tab@ds=2008-04-08
POSTHOOK: Lineage: tab PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin)srcbucket_mapjoin.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: tab PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin)srcbucket_mapjoin.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: explain vectorization detail
select count(*)
from tab a join tab_part b on a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count(*)
from tab a join tab_part b on a.key = b.key
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 391 Data size: 3128 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from tab a join tab_part b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from tab a join tab_part b on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
103	val_103	2008-04-08	103	val_103	2008-04-08
103	val_103	2008-04-08	103	val_103	2008-04-08
103	val_103	2008-04-08	103	val_103	2008-04-08
103	val_103	2008-04-08	103	val_103	2008-04-08
105	val_105	2008-04-08	105	val_105	2008-04-08
11	val_11	2008-04-08	11	val_11	2008-04-08
114	val_114	2008-04-08	114	val_114	2008-04-08
116	val_116	2008-04-08	116	val_116	2008-04-08
118	val_118	2008-04-08	118	val_118	2008-04-08
118	val_118	2008-04-08	118	val_118	2008-04-08
118	val_118	2008-04-08	118	val_118	2008-04-08
118	val_118	2008-04-08	118	val_118	2008-04-08
125	val_125	2008-04-08	125	val_125	2008-04-08
125	val_125	2008-04-08	125	val_125	2008-04-08
125	val_125	2008-04-08	125	val_125	2008-04-08
125	val_125	2008-04-08	125	val_125	2008-04-08
129	val_129	2008-04-08	129	val_129	2008-04-08
129	val_129	2008-04-08	129	val_129	2008-04-08
129	val_129	2008-04-08	129	val_129	2008-04-08
129	val_129	2008-04-08	129	val_129	2008-04-08
134	val_134	2008-04-08	134	val_134	2008-04-08
134	val_134	2008-04-08	134	val_134	2008-04-08
134	val_134	2008-04-08	134	val_134	2008-04-08
134	val_134	2008-04-08	134	val_134	2008-04-08
136	val_136	2008-04-08	136	val_136	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
143	val_143	2008-04-08	143	val_143	2008-04-08
145	val_145	2008-04-08	145	val_145	2008-04-08
149	val_149	2008-04-08	149	val_149	2008-04-08
149	val_149	2008-04-08	149	val_149	2008-04-08
149	val_149	2008-04-08	149	val_149	2008-04-08
149	val_149	2008-04-08	149	val_149	2008-04-08
15	val_15	2008-04-08	15	val_15	2008-04-08
15	val_15	2008-04-08	15	val_15	2008-04-08
15	val_15	2008-04-08	15	val_15	2008-04-08
15	val_15	2008-04-08	15	val_15	2008-04-08
150	val_150	2008-04-08	150	val_150	2008-04-08
152	val_152	2008-04-08	152	val_152	2008-04-08
152	val_152	2008-04-08	152	val_152	2008-04-08
152	val_152	2008-04-08	152	val_152	2008-04-08
152	val_152	2008-04-08	152	val_152	2008-04-08
156	val_156	2008-04-08	156	val_156	2008-04-08
158	val_158	2008-04-08	158	val_158	2008-04-08
163	val_163	2008-04-08	163	val_163	2008-04-08
165	val_165	2008-04-08	165	val_165	2008-04-08
165	val_165	2008-04-08	165	val_165	2008-04-08
165	val_165	2008-04-08	165	val_165	2008-04-08
165	val_165	2008-04-08	165	val_165	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
17	val_17	2008-04-08	17	val_17	2008-04-08
170	val_170	2008-04-08	170	val_170	2008-04-08
172	val_172	2008-04-08	172	val_172	2008-04-08
172	val_172	2008-04-08	172	val_172	2008-04-08
172	val_172	2008-04-08	172	val_172	2008-04-08
172	val_172	2008-04-08	172	val_172	2008-04-08
174	val_174	2008-04-08	174	val_174	2008-04-08
174	val_174	2008-04-08	174	val_174	2008-04-08
174	val_174	2008-04-08	174	val_174	2008-04-08
174	val_174	2008-04-08	174	val_174	2008-04-08
176	val_176	2008-04-08	176	val_176	2008-04-08
176	val_176	2008-04-08	176	val_176	2008-04-08
176	val_176	2008-04-08	176	val_176	2008-04-08
176	val_176	2008-04-08	176	val_176	2008-04-08
178	val_178	2008-04-08	178	val_178	2008-04-08
181	val_181	2008-04-08	181	val_181	2008-04-08
183	val_183	2008-04-08	183	val_183	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
189	val_189	2008-04-08	189	val_189	2008-04-08
19	val_19	2008-04-08	19	val_19	2008-04-08
190	val_190	2008-04-08	190	val_190	2008-04-08
192	val_192	2008-04-08	192	val_192	2008-04-08
194	val_194	2008-04-08	194	val_194	2008-04-08
196	val_196	2008-04-08	196	val_196	2008-04-08
2	val_2	2008-04-08	2	val_2	2008-04-08
20	val_20	2008-04-08	20	val_20	2008-04-08
200	val_200	2008-04-08	200	val_200	2008-04-08
200	val_200	2008-04-08	200	val_200	2008-04-08
200	val_200	2008-04-08	200	val_200	2008-04-08
200	val_200	2008-04-08	200	val_200	2008-04-08
202	val_202	2008-04-08	202	val_202	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
213	val_213	2008-04-08	213	val_213	2008-04-08
213	val_213	2008-04-08	213	val_213	2008-04-08
213	val_213	2008-04-08	213	val_213	2008-04-08
213	val_213	2008-04-08	213	val_213	2008-04-08
217	val_217	2008-04-08	217	val_217	2008-04-08
217	val_217	2008-04-08	217	val_217	2008-04-08
217	val_217	2008-04-08	217	val_217	2008-04-08
217	val_217	2008-04-08	217	val_217	2008-04-08
219	val_219	2008-04-08	219	val_219	2008-04-08
219	val_219	2008-04-08	219	val_219	2008-04-08
219	val_219	2008-04-08	219	val_219	2008-04-08
219	val_219	2008-04-08	219	val_219	2008-04-08
222	val_222	2008-04-08	222	val_222	2008-04-08
224	val_224	2008-04-08	224	val_224	2008-04-08
224	val_224	2008-04-08	224	val_224	2008-04-08
224	val_224	2008-04-08	224	val_224	2008-04-08
224	val_224	2008-04-08	224	val_224	2008-04-08
226	val_226	2008-04-08	226	val_226	2008-04-08
228	val_228	2008-04-08	228	val_228	2008-04-08
233	val_233	2008-04-08	233	val_233	2008-04-08
233	val_233	2008-04-08	233	val_233	2008-04-08
233	val_233	2008-04-08	233	val_233	2008-04-08
233	val_233	2008-04-08	233	val_233	2008-04-08
235	val_235	2008-04-08	235	val_235	2008-04-08
237	val_237	2008-04-08	237	val_237	2008-04-08
237	val_237	2008-04-08	237	val_237	2008-04-08
237	val_237	2008-04-08	237	val_237	2008-04-08
237	val_237	2008-04-08	237	val_237	2008-04-08
239	val_239	2008-04-08	239	val_239	2008-04-08
239	val_239	2008-04-08	239	val_239	2008-04-08
239	val_239	2008-04-08	239	val_239	2008-04-08
239	val_239	2008-04-08	239	val_239	2008-04-08
24	val_24	2008-04-08	24	val_24	2008-04-08
24	val_24	2008-04-08	24	val_24	2008-04-08
24	val_24	2008-04-08	24	val_24	2008-04-08
24	val_24	2008-04-08	24	val_24	2008-04-08
242	val_242	2008-04-08	242	val_242	2008-04-08
242	val_242	2008-04-08	242	val_242	2008-04-08
242	val_242	2008-04-08	242	val_242	2008-04-08
242	val_242	2008-04-08	242	val_242	2008-04-08
244	val_244	2008-04-08	244	val_244	2008-04-08
248	val_248	2008-04-08	248	val_248	2008-04-08
255	val_255	2008-04-08	255	val_255	2008-04-08
255	val_255	2008-04-08	255	val_255	2008-04-08
255	val_255	2008-04-08	255	val_255	2008-04-08
255	val_255	2008-04-08	255	val_255	2008-04-08
257	val_257	2008-04-08	257	val_257	2008-04-08
26	val_26	2008-04-08	26	val_26	2008-04-08
26	val_26	2008-04-08	26	val_26	2008-04-08
26	val_26	2008-04-08	26	val_26	2008-04-08
26	val_26	2008-04-08	26	val_26	2008-04-08
260	val_260	2008-04-08	260	val_260	2008-04-08
262	val_262	2008-04-08	262	val_262	2008-04-08
266	val_266	2008-04-08	266	val_266	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
275	val_275	2008-04-08	275	val_275	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
28	val_28	2008-04-08	28	val_28	2008-04-08
280	val_280	2008-04-08	280	val_280	2008-04-08
280	val_280	2008-04-08	280	val_280	2008-04-08
280	val_280	2008-04-08	280	val_280	2008-04-08
280	val_280	2008-04-08	280	val_280	2008-04-08
282	val_282	2008-04-08	282	val_282	2008-04-08
282	val_282	2008-04-08	282	val_282	2008-04-08
282	val_282	2008-04-08	282	val_282	2008-04-08
282	val_282	2008-04-08	282	val_282	2008-04-08
284	val_284	2008-04-08	284	val_284	2008-04-08
286	val_286	2008-04-08	286	val_286	2008-04-08
288	val_288	2008-04-08	288	val_288	2008-04-08
288	val_288	2008-04-08	288	val_288	2008-04-08
288	val_288	2008-04-08	288	val_288	2008-04-08
288	val_288	2008-04-08	288	val_288	2008-04-08
291	val_291	2008-04-08	291	val_291	2008-04-08
305	val_305	2008-04-08	305	val_305	2008-04-08
307	val_307	2008-04-08	307	val_307	2008-04-08
307	val_307	2008-04-08	307	val_307	2008-04-08
307	val_307	2008-04-08	307	val_307	2008-04-08
307	val_307	2008-04-08	307	val_307	2008-04-08
309	val_309	2008-04-08	309	val_309	2008-04-08
309	val_309	2008-04-08	309	val_309	2008-04-08
309	val_309	2008-04-08	309	val_309	2008-04-08
309	val_309	2008-04-08	309	val_309	2008-04-08
310	val_310	2008-04-08	310	val_310	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
321	val_321	2008-04-08	321	val_321	2008-04-08
321	val_321	2008-04-08	321	val_321	2008-04-08
321	val_321	2008-04-08	321	val_321	2008-04-08
321	val_321	2008-04-08	321	val_321	2008-04-08
323	val_323	2008-04-08	323	val_323	2008-04-08
325	val_325	2008-04-08	325	val_325	2008-04-08
325	val_325	2008-04-08	325	val_325	2008-04-08
325	val_325	2008-04-08	325	val_325	2008-04-08
325	val_325	2008-04-08	325	val_325	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
33	val_33	2008-04-08	33	val_33	2008-04-08
332	val_332	2008-04-08	332	val_332	2008-04-08
336	val_336	2008-04-08	336	val_336	2008-04-08
338	val_338	2008-04-08	338	val_338	2008-04-08
341	val_341	2008-04-08	341	val_341	2008-04-08
345	val_345	2008-04-08	345	val_345	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
356	val_356	2008-04-08	356	val_356	2008-04-08
365	val_365	2008-04-08	365	val_365	2008-04-08
367	val_367	2008-04-08	367	val_367	2008-04-08
367	val_367	2008-04-08	367	val_367	2008-04-08
367	val_367	2008-04-08	367	val_367	2008-04-08
367	val_367	2008-04-08	367	val_367	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
37	val_37	2008-04-08	37	val_37	2008-04-08
37	val_37	2008-04-08	37	val_37	2008-04-08
37	val_37	2008-04-08	37	val_37	2008-04-08
37	val_37	2008-04-08	37	val_37	2008-04-08
374	val_374	2008-04-08	374	val_374	2008-04-08
378	val_378	2008-04-08	378	val_378	2008-04-08
389	val_389	2008-04-08	389	val_389	2008-04-08
392	val_392	2008-04-08	392	val_392	2008-04-08
394	val_394	2008-04-08	394	val_394	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
4	val_4	2008-04-08	4	val_4	2008-04-08
400	val_400	2008-04-08	400	val_400	2008-04-08
402	val_402	2008-04-08	402	val_402	2008-04-08
404	val_404	2008-04-08	404	val_404	2008-04-08
404	val_404	2008-04-08	404	val_404	2008-04-08
404	val_404	2008-04-08	404	val_404	2008-04-08
404	val_404	2008-04-08	404	val_404	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
411	val_411	2008-04-08	411	val_411	2008-04-08
413	val_413	2008-04-08	413	val_413	2008-04-08
413	val_413	2008-04-08	413	val_413	2008-04-08
413	val_413	2008-04-08	413	val_413	2008-04-08
413	val_413	2008-04-08	413	val_413	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
419	val_419	2008-04-08	419	val_419	2008-04-08
42	val_42	2008-04-08	42	val_42	2008-04-08
42	val_42	2008-04-08	42	val_42	2008-04-08
42	val_42	2008-04-08	42	val_42	2008-04-08
42	val_42	2008-04-08	42	val_42	2008-04-08
424	val_424	2008-04-08	424	val_424	2008-04-08
424	val_424	2008-04-08	424	val_424	2008-04-08
424	val_424	2008-04-08	424	val_424	2008-04-08
424	val_424	2008-04-08	424	val_424	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
435	val_435	2008-04-08	435	val_435	2008-04-08
437	val_437	2008-04-08	437	val_437	2008-04-08
439	val_439	2008-04-08	439	val_439	2008-04-08
439	val_439	2008-04-08	439	val_439	2008-04-08
439	val_439	2008-04-08	439	val_439	2008-04-08
439	val_439	2008-04-08	439	val_439	2008-04-08
44	val_44	2008-04-08	44	val_44	2008-04-08
444	val_444	2008-04-08	444	val_444	2008-04-08
446	val_446	2008-04-08	446	val_446	2008-04-08
448	val_448	2008-04-08	448	val_448	2008-04-08
453	val_453	2008-04-08	453	val_453	2008-04-08
455	val_455	2008-04-08	455	val_455	2008-04-08
457	val_457	2008-04-08	457	val_457	2008-04-08
459	val_459	2008-04-08	459	val_459	2008-04-08
459	val_459	2008-04-08	459	val_459	2008-04-08
459	val_459	2008-04-08	459	val_459	2008-04-08
459	val_459	2008-04-08	459	val_459	2008-04-08
460	val_460	2008-04-08	460	val_460	2008-04-08
462	val_462	2008-04-08	462	val_462	2008-04-08
462	val_462	2008-04-08	462	val_462	2008-04-08
462	val_462	2008-04-08	462	val_462	2008-04-08
462	val_462	2008-04-08	462	val_462	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
475	val_475	2008-04-08	475	val_475	2008-04-08
477	val_477	2008-04-08	477	val_477	2008-04-08
479	val_479	2008-04-08	479	val_479	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
482	val_482	2008-04-08	482	val_482	2008-04-08
484	val_484	2008-04-08	484	val_484	2008-04-08
491	val_491	2008-04-08	491	val_491	2008-04-08
493	val_493	2008-04-08	493	val_493	2008-04-08
495	val_495	2008-04-08	495	val_495	2008-04-08
497	val_497	2008-04-08	497	val_497	2008-04-08
51	val_51	2008-04-08	51	val_51	2008-04-08
51	val_51	2008-04-08	51	val_51	2008-04-08
51	val_51	2008-04-08	51	val_51	2008-04-08
51	val_51	2008-04-08	51	val_51	2008-04-08
53	val_53	2008-04-08	53	val_53	2008-04-08
57	val_57	2008-04-08	57	val_57	2008-04-08
64	val_64	2008-04-08	64	val_64	2008-04-08
66	val_66	2008-04-08	66	val_66	2008-04-08
77	val_77	2008-04-08	77	val_77	2008-04-08
8	val_8	2008-04-08	8	val_8	2008-04-08
80	val_80	2008-04-08	80	val_80	2008-04-08
82	val_82	2008-04-08	82	val_82	2008-04-08
84	val_84	2008-04-08	84	val_84	2008-04-08
84	val_84	2008-04-08	84	val_84	2008-04-08
84	val_84	2008-04-08	84	val_84	2008-04-08
84	val_84	2008-04-08	84	val_84	2008-04-08
86	val_86	2008-04-08	86	val_86	2008-04-08
95	val_95	2008-04-08	95	val_95	2008-04-08
95	val_95	2008-04-08	95	val_95	2008-04-08
95	val_95	2008-04-08	95	val_95	2008-04-08
95	val_95	2008-04-08	95	val_95	2008-04-08
97	val_97	2008-04-08	97	val_97	2008-04-08
97	val_97	2008-04-08	97	val_97	2008-04-08
97	val_97	2008-04-08	97	val_97	2008-04-08
97	val_97	2008-04-08	97	val_97	2008-04-08
PREHOOK: query: select * from tab a join tab_part b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from tab a join tab_part b on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
0	val_0	2008-04-08	0	val_0	2008-04-08
103	val_103	2008-04-08	103	val_103	2008-04-08
103	val_103	2008-04-08	103	val_103	2008-04-08
103	val_103	2008-04-08	103	val_103	2008-04-08
103	val_103	2008-04-08	103	val_103	2008-04-08
105	val_105	2008-04-08	105	val_105	2008-04-08
11	val_11	2008-04-08	11	val_11	2008-04-08
114	val_114	2008-04-08	114	val_114	2008-04-08
116	val_116	2008-04-08	116	val_116	2008-04-08
118	val_118	2008-04-08	118	val_118	2008-04-08
118	val_118	2008-04-08	118	val_118	2008-04-08
118	val_118	2008-04-08	118	val_118	2008-04-08
118	val_118	2008-04-08	118	val_118	2008-04-08
125	val_125	2008-04-08	125	val_125	2008-04-08
125	val_125	2008-04-08	125	val_125	2008-04-08
125	val_125	2008-04-08	125	val_125	2008-04-08
125	val_125	2008-04-08	125	val_125	2008-04-08
129	val_129	2008-04-08	129	val_129	2008-04-08
129	val_129	2008-04-08	129	val_129	2008-04-08
129	val_129	2008-04-08	129	val_129	2008-04-08
129	val_129	2008-04-08	129	val_129	2008-04-08
134	val_134	2008-04-08	134	val_134	2008-04-08
134	val_134	2008-04-08	134	val_134	2008-04-08
134	val_134	2008-04-08	134	val_134	2008-04-08
134	val_134	2008-04-08	134	val_134	2008-04-08
136	val_136	2008-04-08	136	val_136	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
138	val_138	2008-04-08	138	val_138	2008-04-08
143	val_143	2008-04-08	143	val_143	2008-04-08
145	val_145	2008-04-08	145	val_145	2008-04-08
149	val_149	2008-04-08	149	val_149	2008-04-08
149	val_149	2008-04-08	149	val_149	2008-04-08
149	val_149	2008-04-08	149	val_149	2008-04-08
149	val_149	2008-04-08	149	val_149	2008-04-08
15	val_15	2008-04-08	15	val_15	2008-04-08
15	val_15	2008-04-08	15	val_15	2008-04-08
15	val_15	2008-04-08	15	val_15	2008-04-08
15	val_15	2008-04-08	15	val_15	2008-04-08
150	val_150	2008-04-08	150	val_150	2008-04-08
152	val_152	2008-04-08	152	val_152	2008-04-08
152	val_152	2008-04-08	152	val_152	2008-04-08
152	val_152	2008-04-08	152	val_152	2008-04-08
152	val_152	2008-04-08	152	val_152	2008-04-08
156	val_156	2008-04-08	156	val_156	2008-04-08
158	val_158	2008-04-08	158	val_158	2008-04-08
163	val_163	2008-04-08	163	val_163	2008-04-08
165	val_165	2008-04-08	165	val_165	2008-04-08
165	val_165	2008-04-08	165	val_165	2008-04-08
165	val_165	2008-04-08	165	val_165	2008-04-08
165	val_165	2008-04-08	165	val_165	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
167	val_167	2008-04-08	167	val_167	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
169	val_169	2008-04-08	169	val_169	2008-04-08
17	val_17	2008-04-08	17	val_17	2008-04-08
170	val_170	2008-04-08	170	val_170	2008-04-08
172	val_172	2008-04-08	172	val_172	2008-04-08
172	val_172	2008-04-08	172	val_172	2008-04-08
172	val_172	2008-04-08	172	val_172	2008-04-08
172	val_172	2008-04-08	172	val_172	2008-04-08
174	val_174	2008-04-08	174	val_174	2008-04-08
174	val_174	2008-04-08	174	val_174	2008-04-08
174	val_174	2008-04-08	174	val_174	2008-04-08
174	val_174	2008-04-08	174	val_174	2008-04-08
176	val_176	2008-04-08	176	val_176	2008-04-08
176	val_176	2008-04-08	176	val_176	2008-04-08
176	val_176	2008-04-08	176	val_176	2008-04-08
176	val_176	2008-04-08	176	val_176	2008-04-08
178	val_178	2008-04-08	178	val_178	2008-04-08
181	val_181	2008-04-08	181	val_181	2008-04-08
183	val_183	2008-04-08	183	val_183	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
187	val_187	2008-04-08	187	val_187	2008-04-08
189	val_189	2008-04-08	189	val_189	2008-04-08
19	val_19	2008-04-08	19	val_19	2008-04-08
190	val_190	2008-04-08	190	val_190	2008-04-08
192	val_192	2008-04-08	192	val_192	2008-04-08
194	val_194	2008-04-08	194	val_194	2008-04-08
196	val_196	2008-04-08	196	val_196	2008-04-08
2	val_2	2008-04-08	2	val_2	2008-04-08
20	val_20	2008-04-08	20	val_20	2008-04-08
200	val_200	2008-04-08	200	val_200	2008-04-08
200	val_200	2008-04-08	200	val_200	2008-04-08
200	val_200	2008-04-08	200	val_200	2008-04-08
200	val_200	2008-04-08	200	val_200	2008-04-08
202	val_202	2008-04-08	202	val_202	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
208	val_208	2008-04-08	208	val_208	2008-04-08
213	val_213	2008-04-08	213	val_213	2008-04-08
213	val_213	2008-04-08	213	val_213	2008-04-08
213	val_213	2008-04-08	213	val_213	2008-04-08
213	val_213	2008-04-08	213	val_213	2008-04-08
217	val_217	2008-04-08	217	val_217	2008-04-08
217	val_217	2008-04-08	217	val_217	2008-04-08
217	val_217	2008-04-08	217	val_217	2008-04-08
217	val_217	2008-04-08	217	val_217	2008-04-08
219	val_219	2008-04-08	219	val_219	2008-04-08
219	val_219	2008-04-08	219	val_219	2008-04-08
219	val_219	2008-04-08	219	val_219	2008-04-08
219	val_219	2008-04-08	219	val_219	2008-04-08
222	val_222	2008-04-08	222	val_222	2008-04-08
224	val_224	2008-04-08	224	val_224	2008-04-08
224	val_224	2008-04-08	224	val_224	2008-04-08
224	val_224	2008-04-08	224	val_224	2008-04-08
224	val_224	2008-04-08	224	val_224	2008-04-08
226	val_226	2008-04-08	226	val_226	2008-04-08
228	val_228	2008-04-08	228	val_228	2008-04-08
233	val_233	2008-04-08	233	val_233	2008-04-08
233	val_233	2008-04-08	233	val_233	2008-04-08
233	val_233	2008-04-08	233	val_233	2008-04-08
233	val_233	2008-04-08	233	val_233	2008-04-08
235	val_235	2008-04-08	235	val_235	2008-04-08
237	val_237	2008-04-08	237	val_237	2008-04-08
237	val_237	2008-04-08	237	val_237	2008-04-08
237	val_237	2008-04-08	237	val_237	2008-04-08
237	val_237	2008-04-08	237	val_237	2008-04-08
239	val_239	2008-04-08	239	val_239	2008-04-08
239	val_239	2008-04-08	239	val_239	2008-04-08
239	val_239	2008-04-08	239	val_239	2008-04-08
239	val_239	2008-04-08	239	val_239	2008-04-08
24	val_24	2008-04-08	24	val_24	2008-04-08
24	val_24	2008-04-08	24	val_24	2008-04-08
24	val_24	2008-04-08	24	val_24	2008-04-08
24	val_24	2008-04-08	24	val_24	2008-04-08
242	val_242	2008-04-08	242	val_242	2008-04-08
242	val_242	2008-04-08	242	val_242	2008-04-08
242	val_242	2008-04-08	242	val_242	2008-04-08
242	val_242	2008-04-08	242	val_242	2008-04-08
244	val_244	2008-04-08	244	val_244	2008-04-08
248	val_248	2008-04-08	248	val_248	2008-04-08
255	val_255	2008-04-08	255	val_255	2008-04-08
255	val_255	2008-04-08	255	val_255	2008-04-08
255	val_255	2008-04-08	255	val_255	2008-04-08
255	val_255	2008-04-08	255	val_255	2008-04-08
257	val_257	2008-04-08	257	val_257	2008-04-08
26	val_26	2008-04-08	26	val_26	2008-04-08
26	val_26	2008-04-08	26	val_26	2008-04-08
26	val_26	2008-04-08	26	val_26	2008-04-08
26	val_26	2008-04-08	26	val_26	2008-04-08
260	val_260	2008-04-08	260	val_260	2008-04-08
262	val_262	2008-04-08	262	val_262	2008-04-08
266	val_266	2008-04-08	266	val_266	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
273	val_273	2008-04-08	273	val_273	2008-04-08
275	val_275	2008-04-08	275	val_275	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
277	val_277	2008-04-08	277	val_277	2008-04-08
28	val_28	2008-04-08	28	val_28	2008-04-08
280	val_280	2008-04-08	280	val_280	2008-04-08
280	val_280	2008-04-08	280	val_280	2008-04-08
280	val_280	2008-04-08	280	val_280	2008-04-08
280	val_280	2008-04-08	280	val_280	2008-04-08
282	val_282	2008-04-08	282	val_282	2008-04-08
282	val_282	2008-04-08	282	val_282	2008-04-08
282	val_282	2008-04-08	282	val_282	2008-04-08
282	val_282	2008-04-08	282	val_282	2008-04-08
284	val_284	2008-04-08	284	val_284	2008-04-08
286	val_286	2008-04-08	286	val_286	2008-04-08
288	val_288	2008-04-08	288	val_288	2008-04-08
288	val_288	2008-04-08	288	val_288	2008-04-08
288	val_288	2008-04-08	288	val_288	2008-04-08
288	val_288	2008-04-08	288	val_288	2008-04-08
291	val_291	2008-04-08	291	val_291	2008-04-08
305	val_305	2008-04-08	305	val_305	2008-04-08
307	val_307	2008-04-08	307	val_307	2008-04-08
307	val_307	2008-04-08	307	val_307	2008-04-08
307	val_307	2008-04-08	307	val_307	2008-04-08
307	val_307	2008-04-08	307	val_307	2008-04-08
309	val_309	2008-04-08	309	val_309	2008-04-08
309	val_309	2008-04-08	309	val_309	2008-04-08
309	val_309	2008-04-08	309	val_309	2008-04-08
309	val_309	2008-04-08	309	val_309	2008-04-08
310	val_310	2008-04-08	310	val_310	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
316	val_316	2008-04-08	316	val_316	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
318	val_318	2008-04-08	318	val_318	2008-04-08
321	val_321	2008-04-08	321	val_321	2008-04-08
321	val_321	2008-04-08	321	val_321	2008-04-08
321	val_321	2008-04-08	321	val_321	2008-04-08
321	val_321	2008-04-08	321	val_321	2008-04-08
323	val_323	2008-04-08	323	val_323	2008-04-08
325	val_325	2008-04-08	325	val_325	2008-04-08
325	val_325	2008-04-08	325	val_325	2008-04-08
325	val_325	2008-04-08	325	val_325	2008-04-08
325	val_325	2008-04-08	325	val_325	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
327	val_327	2008-04-08	327	val_327	2008-04-08
33	val_33	2008-04-08	33	val_33	2008-04-08
332	val_332	2008-04-08	332	val_332	2008-04-08
336	val_336	2008-04-08	336	val_336	2008-04-08
338	val_338	2008-04-08	338	val_338	2008-04-08
341	val_341	2008-04-08	341	val_341	2008-04-08
345	val_345	2008-04-08	345	val_345	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
35	val_35	2008-04-08	35	val_35	2008-04-08
356	val_356	2008-04-08	356	val_356	2008-04-08
365	val_365	2008-04-08	365	val_365	2008-04-08
367	val_367	2008-04-08	367	val_367	2008-04-08
367	val_367	2008-04-08	367	val_367	2008-04-08
367	val_367	2008-04-08	367	val_367	2008-04-08
367	val_367	2008-04-08	367	val_367	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
369	val_369	2008-04-08	369	val_369	2008-04-08
37	val_37	2008-04-08	37	val_37	2008-04-08
37	val_37	2008-04-08	37	val_37	2008-04-08
37	val_37	2008-04-08	37	val_37	2008-04-08
37	val_37	2008-04-08	37	val_37	2008-04-08
374	val_374	2008-04-08	374	val_374	2008-04-08
378	val_378	2008-04-08	378	val_378	2008-04-08
389	val_389	2008-04-08	389	val_389	2008-04-08
392	val_392	2008-04-08	392	val_392	2008-04-08
394	val_394	2008-04-08	394	val_394	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
396	val_396	2008-04-08	396	val_396	2008-04-08
4	val_4	2008-04-08	4	val_4	2008-04-08
400	val_400	2008-04-08	400	val_400	2008-04-08
402	val_402	2008-04-08	402	val_402	2008-04-08
404	val_404	2008-04-08	404	val_404	2008-04-08
404	val_404	2008-04-08	404	val_404	2008-04-08
404	val_404	2008-04-08	404	val_404	2008-04-08
404	val_404	2008-04-08	404	val_404	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
406	val_406	2008-04-08	406	val_406	2008-04-08
411	val_411	2008-04-08	411	val_411	2008-04-08
413	val_413	2008-04-08	413	val_413	2008-04-08
413	val_413	2008-04-08	413	val_413	2008-04-08
413	val_413	2008-04-08	413	val_413	2008-04-08
413	val_413	2008-04-08	413	val_413	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
417	val_417	2008-04-08	417	val_417	2008-04-08
419	val_419	2008-04-08	419	val_419	2008-04-08
42	val_42	2008-04-08	42	val_42	2008-04-08
42	val_42	2008-04-08	42	val_42	2008-04-08
42	val_42	2008-04-08	42	val_42	2008-04-08
42	val_42	2008-04-08	42	val_42	2008-04-08
424	val_424	2008-04-08	424	val_424	2008-04-08
424	val_424	2008-04-08	424	val_424	2008-04-08
424	val_424	2008-04-08	424	val_424	2008-04-08
424	val_424	2008-04-08	424	val_424	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
431	val_431	2008-04-08	431	val_431	2008-04-08
435	val_435	2008-04-08	435	val_435	2008-04-08
437	val_437	2008-04-08	437	val_437	2008-04-08
439	val_439	2008-04-08	439	val_439	2008-04-08
439	val_439	2008-04-08	439	val_439	2008-04-08
439	val_439	2008-04-08	439	val_439	2008-04-08
439	val_439	2008-04-08	439	val_439	2008-04-08
44	val_44	2008-04-08	44	val_44	2008-04-08
444	val_444	2008-04-08	444	val_444	2008-04-08
446	val_446	2008-04-08	446	val_446	2008-04-08
448	val_448	2008-04-08	448	val_448	2008-04-08
453	val_453	2008-04-08	453	val_453	2008-04-08
455	val_455	2008-04-08	455	val_455	2008-04-08
457	val_457	2008-04-08	457	val_457	2008-04-08
459	val_459	2008-04-08	459	val_459	2008-04-08
459	val_459	2008-04-08	459	val_459	2008-04-08
459	val_459	2008-04-08	459	val_459	2008-04-08
459	val_459	2008-04-08	459	val_459	2008-04-08
460	val_460	2008-04-08	460	val_460	2008-04-08
462	val_462	2008-04-08	462	val_462	2008-04-08
462	val_462	2008-04-08	462	val_462	2008-04-08
462	val_462	2008-04-08	462	val_462	2008-04-08
462	val_462	2008-04-08	462	val_462	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
466	val_466	2008-04-08	466	val_466	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
468	val_468	2008-04-08	468	val_468	2008-04-08
475	val_475	2008-04-08	475	val_475	2008-04-08
477	val_477	2008-04-08	477	val_477	2008-04-08
479	val_479	2008-04-08	479	val_479	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
480	val_480	2008-04-08	480	val_480	2008-04-08
482	val_482	2008-04-08	482	val_482	2008-04-08
484	val_484	2008-04-08	484	val_484	2008-04-08
491	val_491	2008-04-08	491	val_491	2008-04-08
493	val_493	2008-04-08	493	val_493	2008-04-08
495	val_495	2008-04-08	495	val_495	2008-04-08
497	val_497	2008-04-08	497	val_497	2008-04-08
51	val_51	2008-04-08	51	val_51	2008-04-08
51	val_51	2008-04-08	51	val_51	2008-04-08
51	val_51	2008-04-08	51	val_51	2008-04-08
51	val_51	2008-04-08	51	val_51	2008-04-08
53	val_53	2008-04-08	53	val_53	2008-04-08
57	val_57	2008-04-08	57	val_57	2008-04-08
64	val_64	2008-04-08	64	val_64	2008-04-08
66	val_66	2008-04-08	66	val_66	2008-04-08
77	val_77	2008-04-08	77	val_77	2008-04-08
8	val_8	2008-04-08	8	val_8	2008-04-08
80	val_80	2008-04-08	80	val_80	2008-04-08
82	val_82	2008-04-08	82	val_82	2008-04-08
84	val_84	2008-04-08	84	val_84	2008-04-08
84	val_84	2008-04-08	84	val_84	2008-04-08
84	val_84	2008-04-08	84	val_84	2008-04-08
84	val_84	2008-04-08	84	val_84	2008-04-08
86	val_86	2008-04-08	86	val_86	2008-04-08
95	val_95	2008-04-08	95	val_95	2008-04-08
95	val_95	2008-04-08	95	val_95	2008-04-08
95	val_95	2008-04-08	95	val_95	2008-04-08
95	val_95	2008-04-08	95	val_95	2008-04-08
97	val_97	2008-04-08	97	val_97	2008-04-08
97	val_97	2008-04-08	97	val_97	2008-04-08
97	val_97	2008-04-08	97	val_97	2008-04-08
97	val_97	2008-04-08	97	val_97	2008-04-08
PREHOOK: query: explain vectorization detail
select count(*)
from tab a left outer join tab_part b on a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count(*)
from tab a left outer join tab_part b on a.key = b.key
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumnNums: [0]
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumnNums: []
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumnNums: [0]
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumnNums: []
                      Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Outer Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 391 Data size: 3128 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*)
from tab a left outer join tab_part b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select count(*)
from tab a left outer join tab_part b on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
480
PREHOOK: query: explain vectorization detail
select count (*)
from tab a right outer join tab_part b on a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count (*)
from tab a right outer join tab_part b on a.key = b.key
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumnNums: [0]
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumnNums: []
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumnNums: [0]
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumnNums: []
                      Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Right Outer Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 500 Data size: 4000 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count (*)
from tab a right outer join tab_part b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select count (*)
from tab a right outer join tab_part b on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
738
PREHOOK: query: explain vectorization detail
select count(*)
from tab a full outer join tab_part b on a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count(*)
from tab a full outer join tab_part b on a.key = b.key
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumnNums: [0]
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumnNums: []
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Select Operator
                    expressions: key (type: int)
                    outputColumnNames: _col0
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [0]
                    Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Reduce Sink Vectorization:
                          className: VectorReduceSinkLongOperator
                          keyColumnNums: [0]
                          native: true
                          nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                          valueColumnNums: []
                      Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Outer Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 742 Data size: 5936 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*)
from tab a full outer join tab_part b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select count(*)
from tab a full outer join tab_part b on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
738
PREHOOK: query: explain vectorization detail
select count(*) from tab a join tab_part b on a.key = b.key join src1 c on a.value = c.value
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count(*) from tab a join tab_part b on a.key = b.key join src1 c on a.value = c.value
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Reducer 7 (BROADCAST_EDGE)
        Map 8 <- Reducer 5 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
        Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 7 <- Map 6 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: (key is not null and value is not null and (value BETWEEN DynamicValue(RS_10_c_value_min) AND DynamicValue(RS_10_c_value_max) and in_bloom_filter(value, DynamicValue(RS_10_c_value_bloom_filter)))) (type: boolean)
                  Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterExprAndExpr(children: SelectColumnIsNotNull(col 0:int), SelectColumnIsNotNull(col 1:string), FilterExprAndExpr(children: FilterStringColumnBetweenDynamicValue(col 1:string, left NULL, right NULL), VectorInBloomFilterColDynamicValue))
                    predicate: ((value BETWEEN DynamicValue(RS_10_c_value_min) AND DynamicValue(RS_10_c_value_max) and in_bloom_filter(value, DynamicValue(RS_10_c_value_bloom_filter))) and key is not null and value is not null) (type: boolean)
                    Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0, 1]
                      Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col1 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: [0]
                        Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: c
                  filterExpr: value is not null (type: boolean)
                  Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 1:string)
                    predicate: value is not null (type: boolean)
                    Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: value (type: string)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [1]
                      Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: _col0 (type: string)
                        outputColumnNames: _col0
                        Select Vectorization:
                            className: VectorSelectOperator
                            native: true
                            projectedOutputColumnNums: [1]
                        Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: min(_col0), max(_col0), bloom_filter(_col0, expectedEntries=19)
                          Group By Vectorization:
                              aggregators: VectorUDAFMinString(col 1:string) -> string, VectorUDAFMaxString(col 1:string) -> string, VectorUDAFBloomFilter(col 1:string) -> binary
                              className: VectorGroupByOperator
                              groupByMode: HASH
                              native: false
                              vectorProcessingMode: HASH
                              projectedOutputColumnNums: [0, 1, 2]
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            sort order: 
                            Reduce Sink Vectorization:
                                className: VectorReduceSinkEmptyKeyOperator
                                keyColumnNums: []
                                native: true
                                nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                                valueColumnNums: [0, 1, 2]
                            Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                vectorizationSupportRemovedReasons: [DECIMAL_64 disabled because LLAP is enabled]
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [1]
                    dataColumns: key:string, value:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: (key is not null and (key BETWEEN DynamicValue(RS_12_a_key_min) AND DynamicValue(RS_12_a_key_max) and in_bloom_filter(key, DynamicValue(RS_12_a_key_bloom_filter)))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterExprAndExpr(children: SelectColumnIsNotNull(col 0:int), FilterExprAndExpr(children: FilterLongColumnBetweenDynamicValue(col 0:int, left 0, right 0), VectorInBloomFilterColDynamicValue))
                    predicate: ((key BETWEEN DynamicValue(RS_12_a_key_min) AND DynamicValue(RS_12_a_key_max) and in_bloom_filter(key, DynamicValue(RS_12_a_key_bloom_filter))) and key is not null) (type: boolean)
                    Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 39 Data size: 156 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 39 Data size: 156 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 39 Data size: 156 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: min(_col0), max(_col0), bloom_filter(_col0, expectedEntries=25)
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: binary)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 63 Data size: 504 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: VALUE._col0:int, VALUE._col1:int, VALUE._col2:binary
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), bloom_filter(VALUE._col2, expectedEntries=25)
                Group By Vectorization:
                    aggregators: VectorUDAFMinLong(col 0:int) -> int, VectorUDAFMaxLong(col 1:int) -> int, VectorUDAFBloomFilterMerge(col 2:binary) -> binary
                    className: VectorGroupByOperator
                    groupByMode: FINAL
                    native: false
                    vectorProcessingMode: STREAMING
                    projectedOutputColumnNums: [0, 1, 2]
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  sort order: 
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkEmptyKeyOperator
                      keyColumnNums: []
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumnNums: [0, 1, 2]
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: binary)
        Reducer 7 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: VALUE._col0:string, VALUE._col1:string, VALUE._col2:binary
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), bloom_filter(VALUE._col2, expectedEntries=19)
                Group By Vectorization:
                    aggregators: VectorUDAFMinString(col 0:string) -> string, VectorUDAFMaxString(col 1:string) -> string, VectorUDAFBloomFilterMerge(col 2:binary) -> binary
                    className: VectorGroupByOperator
                    groupByMode: FINAL
                    native: false
                    vectorProcessingMode: STREAMING
                    projectedOutputColumnNums: [0, 1, 2]
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  sort order: 
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkEmptyKeyOperator
                      keyColumnNums: []
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumnNums: [0, 1, 2]
                  Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from tab a join tab_part b on a.key = b.key join src1 c on a.value = c.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from tab a join tab_part b on a.key = b.key join src1 c on a.value = c.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
40
PREHOOK: query: explain vectorization detail
select count(*) from tab a join tab_part b on a.value = b.value
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count(*) from tab a join tab_part b on a.value = b.value
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: value is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 22022 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 1:string)
                    predicate: value is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 22022 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: value (type: string)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [1]
                      Statistics: Num rows: 242 Data size: 22022 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 242 Data size: 22022 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [1]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: value is not null (type: boolean)
                  Statistics: Num rows: 500 Data size: 45500 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 1:string)
                    predicate: value is not null (type: boolean)
                    Statistics: Num rows: 500 Data size: 45500 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: value (type: string)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [1]
                      Statistics: Num rows: 500 Data size: 45500 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 500 Data size: 45500 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [1]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                Statistics: Num rows: 391 Data size: 3128 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from tab a join tab_part b on a.value = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from tab a join tab_part b on a.value = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
480
PREHOOK: query: explain vectorization detail
select count(*) from (select s1.key as key, s1.value as value from tab s1 join tab s3 on s1.key=s3.key
UNION  ALL
select s2.key as key, s2.value as value from tab s2
) a join tab_part b on (a.key = b.key)
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count(*) from (select s1.key as key, s1.value as value from tab s1 join tab s3 on s1.key=s3.key
UNION  ALL
select s2.key as key, s2.value as value from tab s2
) a join tab_part b on (a.key = b.key)
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 7 <- Union 3 (CONTAINS)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE), Union 3 (CONTAINS)
        Reducer 4 <- Map 8 (SIMPLE_EDGE), Union 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: s1
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: s3
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: s2
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 624 Data size: 2496 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 382 Data size: 1528 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 624 Data size: 2496 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 4 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 1009 Data size: 8072 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Union 3 
            Vertex: Union 3

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain vectorization detail
select count(*) from tab a join tab_part b on a.value = b.value
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count(*) from tab a join tab_part b on a.value = b.value
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: value is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 22022 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 1:string)
                    predicate: value is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 22022 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: value (type: string)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [1]
                      Statistics: Num rows: 242 Data size: 22022 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 242 Data size: 22022 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [1]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: value is not null (type: boolean)
                  Statistics: Num rows: 500 Data size: 45500 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 1:string)
                    predicate: value is not null (type: boolean)
                    Statistics: Num rows: 500 Data size: 45500 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: value (type: string)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [1]
                      Statistics: Num rows: 500 Data size: 45500 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 500 Data size: 45500 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [1]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                Statistics: Num rows: 391 Data size: 3128 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from tab a join tab_part b on a.value = b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from tab a join tab_part b on a.value = b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
480
PREHOOK: query: explain vectorization detail
select count(*) from tab a join tab_part b on a.key = b.key join src1 c on a.value = c.value
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count(*) from tab a join tab_part b on a.key = b.key join src1 c on a.value = c.value
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Reducer 7 (BROADCAST_EDGE)
        Map 8 <- Reducer 5 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
        Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 5 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 7 <- Map 6 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  filterExpr: (key is not null and value is not null and (value BETWEEN DynamicValue(RS_10_c_value_min) AND DynamicValue(RS_10_c_value_max) and in_bloom_filter(value, DynamicValue(RS_10_c_value_bloom_filter)))) (type: boolean)
                  Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterExprAndExpr(children: SelectColumnIsNotNull(col 0:int), SelectColumnIsNotNull(col 1:string), FilterExprAndExpr(children: FilterStringColumnBetweenDynamicValue(col 1:string, left NULL, right NULL), VectorInBloomFilterColDynamicValue))
                    predicate: ((value BETWEEN DynamicValue(RS_10_c_value_min) AND DynamicValue(RS_10_c_value_max) and in_bloom_filter(value, DynamicValue(RS_10_c_value_bloom_filter))) and key is not null and value is not null) (type: boolean)
                    Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0, 1]
                      Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col1 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: [0]
                        Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: c
                  filterExpr: value is not null (type: boolean)
                  Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:string, 1:value:string, 2:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 1:string)
                    predicate: value is not null (type: boolean)
                    Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: value (type: string)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [1]
                      Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkStringOperator
                            keyColumnNums: [1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: _col0 (type: string)
                        outputColumnNames: _col0
                        Select Vectorization:
                            className: VectorSelectOperator
                            native: true
                            projectedOutputColumnNums: [1]
                        Statistics: Num rows: 25 Data size: 2225 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: min(_col0), max(_col0), bloom_filter(_col0, expectedEntries=19)
                          Group By Vectorization:
                              aggregators: VectorUDAFMinString(col 1:string) -> string, VectorUDAFMaxString(col 1:string) -> string, VectorUDAFBloomFilter(col 1:string) -> binary
                              className: VectorGroupByOperator
                              groupByMode: HASH
                              native: false
                              vectorProcessingMode: HASH
                              projectedOutputColumnNums: [0, 1, 2]
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            sort order: 
                            Reduce Sink Vectorization:
                                className: VectorReduceSinkEmptyKeyOperator
                                keyColumnNums: []
                                native: true
                                nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                                valueColumnNums: [0, 1, 2]
                            Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                vectorizationSupportRemovedReasons: [DECIMAL_64 disabled because LLAP is enabled]
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.mapred.TextInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [1]
                    dataColumns: key:string, value:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: (key is not null and (key BETWEEN DynamicValue(RS_12_a_key_min) AND DynamicValue(RS_12_a_key_max) and in_bloom_filter(key, DynamicValue(RS_12_a_key_bloom_filter)))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterExprAndExpr(children: SelectColumnIsNotNull(col 0:int), FilterExprAndExpr(children: FilterLongColumnBetweenDynamicValue(col 0:int, left 0, right 0), VectorInBloomFilterColDynamicValue))
                    predicate: ((key BETWEEN DynamicValue(RS_12_a_key_min) AND DynamicValue(RS_12_a_key_max) and in_bloom_filter(key, DynamicValue(RS_12_a_key_bloom_filter))) and key is not null) (type: boolean)
                    Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 39 Data size: 156 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 39 Data size: 156 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 39 Data size: 156 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: min(_col0), max(_col0), bloom_filter(_col0, expectedEntries=25)
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: binary)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 63 Data size: 504 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: VALUE._col0:int, VALUE._col1:int, VALUE._col2:binary
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), bloom_filter(VALUE._col2, expectedEntries=25)
                Group By Vectorization:
                    aggregators: VectorUDAFMinLong(col 0:int) -> int, VectorUDAFMaxLong(col 1:int) -> int, VectorUDAFBloomFilterMerge(col 2:binary) -> binary
                    className: VectorGroupByOperator
                    groupByMode: FINAL
                    native: false
                    vectorProcessingMode: STREAMING
                    projectedOutputColumnNums: [0, 1, 2]
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  sort order: 
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkEmptyKeyOperator
                      keyColumnNums: []
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumnNums: [0, 1, 2]
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: binary)
        Reducer 7 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 3
                    dataColumns: VALUE._col0:string, VALUE._col1:string, VALUE._col2:binary
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), bloom_filter(VALUE._col2, expectedEntries=19)
                Group By Vectorization:
                    aggregators: VectorUDAFMinString(col 0:string) -> string, VectorUDAFMaxString(col 1:string) -> string, VectorUDAFBloomFilterMerge(col 2:binary) -> binary
                    className: VectorGroupByOperator
                    groupByMode: FINAL
                    native: false
                    vectorProcessingMode: STREAMING
                    projectedOutputColumnNums: [0, 1, 2]
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  sort order: 
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkEmptyKeyOperator
                      keyColumnNums: []
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumnNums: [0, 1, 2]
                  Statistics: Num rows: 1 Data size: 552 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: binary)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from tab a join tab_part b on a.key = b.key join src1 c on a.value = c.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src1
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from tab a join tab_part b on a.key = b.key join src1 c on a.value = c.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src1
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
40
PREHOOK: query: explain vectorization detail
select count(*) from (select s1.key as key, s1.value as value from tab s1 join tab s3 on s1.key=s3.key
UNION  ALL
select s2.key as key, s2.value as value from tab s2
) a join tab_part b on (a.key = b.key)
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization detail
select count(*) from (select s1.key as key, s1.value as value from tab s1 join tab s3 on s1.key=s3.key
UNION  ALL
select s2.key as key, s2.value as value from tab s2
) a join tab_part b on (a.key = b.key)
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 7 <- Union 3 (CONTAINS)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE), Union 3 (CONTAINS)
        Reducer 4 <- Map 8 (SIMPLE_EDGE), Union 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: s1
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: s3
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: s2
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 624 Data size: 2496 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: b
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0]
                      Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            keyColumnNums: [0]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 382 Data size: 1528 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 624 Data size: 2496 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 4 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 1009 Data size: 8072 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Union 3 
            Vertex: Union 3

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain  vectorization detail
select count(*) from
(select rt1.id from
(select t1.key as id, t1.value as od from tab t1 order by id, od) rt1) vt1
join
(select rt2.id from
(select t2.key as id, t2.value as od from tab_part t2 order by id, od) rt2) vt2
where vt1.id=vt2.id
PREHOOK: type: QUERY
POSTHOOK: query: explain  vectorization detail
select count(*) from
(select rt1.id from
(select t1.key as id, t1.value as od from tab t1 order by id, od) rt1) vt1
join
(select rt2.id from
(select t2.key as id, t2.value as od from tab_part t2 order by id, od) rt2) vt2
where vt1.id=vt2.id
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
        Reducer 6 <- Map 5 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0, 1]
                      Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int), _col1 (type: string)
                        sort order: ++
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            keyColumnNums: [0, 1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 242 Data size: 22990 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: t2
                  filterExpr: key is not null (type: boolean)
                  Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:key:int, 1:value:string, 2:ds:string, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNotNull(col 0:int)
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [0, 1]
                      Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int), _col1 (type: string)
                        sort order: ++
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            keyColumnNums: [0, 1]
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                            valueColumnNums: []
                        Statistics: Num rows: 500 Data size: 47500 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    includeColumns: [0, 1]
                    dataColumns: key:int, value:string
                    partitionColumnCount: 1
                    partitionColumns: ds:string
                    scratchColumnTypeNames: []
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: aa
                reduceColumnSortOrder: ++
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    dataColumns: KEY.reducesinkkey0:int, KEY.reducesinkkey1:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int)
                outputColumnNames: _col0
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0]
                Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkLongOperator
                      keyColumnNums: [0]
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumnNums: []
                  Statistics: Num rows: 242 Data size: 968 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 391 Data size: 3128 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: bigint)
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: 
                reduceColumnSortOrder: 
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 1
                    dataColumns: VALUE._col0:bigint
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFCountMerge(col 0:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    native: false
                    vectorProcessingMode: GLOBAL
                    projectedOutputColumnNums: [0]
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                reduceColumnNullOrder: aa
                reduceColumnSortOrder: ++
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 2
                    dataColumns: KEY.reducesinkkey0:int, KEY.reducesinkkey1:string
                    partitionColumnCount: 0
                    scratchColumnTypeNames: []
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int)
                outputColumnNames: _col0
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0]
                Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkLongOperator
                      keyColumnNums: [0]
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      valueColumnNums: []
                  Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*) from
(select rt1.id from
(select t1.key as id, t1.value as od from tab t1 order by id, od) rt1) vt1
join
(select rt2.id from
(select t2.key as id, t2.value as od from tab_part t2 order by id, od) rt2) vt2
where vt1.id=vt2.id
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from
(select rt1.id from
(select t1.key as id, t1.value as od from tab t1 order by id, od) rt1) vt1
join
(select rt2.id from
(select t2.key as id, t2.value as od from tab_part t2 order by id, od) rt2) vt2
where vt1.id=vt2.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
480
Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select * from (select * from tab where tab.key = 0)a full outer join (select * from tab_part where tab_part.key = 98)b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from (select * from tab where tab.key = 0)a full outer join (select * from tab_part where tab_part.key = 98)b on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
0	val_0	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	NULL	NULL	NULL
NULL	NULL	NULL	98	val_98	2008-04-08
NULL	NULL	NULL	98	val_98	2008-04-08
Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select * from (select * from tab where tab.key = 0)a right outer join (select * from tab_part where tab_part.key = 98)b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from (select * from tab where tab.key = 0)a right outer join (select * from tab_part where tab_part.key = 98)b on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
NULL	NULL	NULL	98	val_98	2008-04-08
NULL	NULL	NULL	98	val_98	2008-04-08
Warning: Shuffle Join MERGEJOIN[18][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select * from
(select * from tab where tab.key = 0)a
full outer join
(select * from tab_part where tab_part.key = 98)b join tab_part c on a.key = b.key and b.key = c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab_part
#### A masked pattern was here ####
POSTHOOK: query: select * from
(select * from tab where tab.key = 0)a
full outer join
(select * from tab_part where tab_part.key = 98)b join tab_part c on a.key = b.key and b.key = c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab_part
#### A masked pattern was here ####
Warning: Shuffle Join MERGEJOIN[20][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
Warning: Shuffle Join MERGEJOIN[21][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: select * from
(select * from tab where tab.key = 0)a
full outer join
(select * from tab_part where tab_part.key = 98)b on a.key = b.key join tab_part c on b.key = c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from
(select * from tab where tab.key = 0)a
full outer join
(select * from tab_part where tab_part.key = 98)b on a.key = b.key join tab_part c on b.key = c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
NULL	NULL	NULL	98	val_98	2008-04-08	98	val_98	2008-04-08
NULL	NULL	NULL	98	val_98	2008-04-08	98	val_98	2008-04-08
NULL	NULL	NULL	98	val_98	2008-04-08	98	val_98	2008-04-08
NULL	NULL	NULL	98	val_98	2008-04-08	98	val_98	2008-04-08
Warning: Shuffle Join MERGEJOIN[18][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
Warning: Shuffle Join MERGEJOIN[19][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: select * from
(select * from tab where tab.key = 0)a
join
(select * from tab_part where tab_part.key = 98)b full outer join tab_part c on a.key = b.key and b.key = c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from
(select * from tab where tab.key = 0)a
join
(select * from tab_part where tab_part.key = 98)b full outer join tab_part c on a.key = b.key and b.key = c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	0	val_0	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	0	val_0	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	0	val_0	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	10	val_10	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	100	val_100	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	100	val_100	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	103	val_103	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	103	val_103	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	104	val_104	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	104	val_104	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	105	val_105	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	11	val_11	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	111	val_111	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	113	val_113	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	113	val_113	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	114	val_114	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	116	val_116	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	118	val_118	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	118	val_118	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	119	val_119	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	119	val_119	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	119	val_119	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	12	val_12	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	12	val_12	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	120	val_120	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	120	val_120	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	125	val_125	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	125	val_125	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	126	val_126	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	128	val_128	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	128	val_128	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	128	val_128	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	129	val_129	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	129	val_129	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	131	val_131	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	133	val_133	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	134	val_134	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	134	val_134	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	136	val_136	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	137	val_137	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	137	val_137	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	143	val_143	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	145	val_145	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	146	val_146	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	146	val_146	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	149	val_149	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	149	val_149	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	15	val_15	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	15	val_15	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	150	val_150	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	152	val_152	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	152	val_152	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	153	val_153	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	155	val_155	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	156	val_156	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	157	val_157	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	158	val_158	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	160	val_160	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	162	val_162	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	163	val_163	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	164	val_164	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	164	val_164	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	165	val_165	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	165	val_165	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	166	val_166	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	167	val_167	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	167	val_167	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	167	val_167	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	168	val_168	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	17	val_17	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	170	val_170	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	172	val_172	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	172	val_172	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	174	val_174	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	174	val_174	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	175	val_175	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	175	val_175	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	176	val_176	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	176	val_176	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	177	val_177	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	178	val_178	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	179	val_179	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	179	val_179	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	18	val_18	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	18	val_18	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	180	val_180	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	181	val_181	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	183	val_183	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	186	val_186	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	187	val_187	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	187	val_187	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	187	val_187	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	189	val_189	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	19	val_19	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	190	val_190	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	191	val_191	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	191	val_191	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	192	val_192	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	193	val_193	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	193	val_193	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	193	val_193	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	194	val_194	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	195	val_195	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	195	val_195	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	196	val_196	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	197	val_197	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	197	val_197	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	199	val_199	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	199	val_199	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	199	val_199	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	2	val_2	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	20	val_20	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	200	val_200	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	200	val_200	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	201	val_201	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	202	val_202	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	203	val_203	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	203	val_203	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	205	val_205	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	205	val_205	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	207	val_207	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	207	val_207	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	208	val_208	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	208	val_208	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	208	val_208	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	209	val_209	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	209	val_209	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	213	val_213	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	213	val_213	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	214	val_214	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	216	val_216	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	216	val_216	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	217	val_217	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	217	val_217	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	218	val_218	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	219	val_219	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	219	val_219	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	221	val_221	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	221	val_221	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	222	val_222	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	223	val_223	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	223	val_223	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	224	val_224	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	224	val_224	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	226	val_226	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	228	val_228	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	229	val_229	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	229	val_229	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	233	val_233	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	233	val_233	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	235	val_235	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	237	val_237	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	237	val_237	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	238	val_238	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	238	val_238	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	239	val_239	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	239	val_239	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	24	val_24	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	24	val_24	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	241	val_241	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	242	val_242	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	242	val_242	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	244	val_244	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	247	val_247	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	248	val_248	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	249	val_249	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	252	val_252	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	255	val_255	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	255	val_255	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	256	val_256	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	256	val_256	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	257	val_257	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	258	val_258	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	26	val_26	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	26	val_26	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	260	val_260	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	262	val_262	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	263	val_263	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	265	val_265	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	265	val_265	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	266	val_266	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	27	val_27	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	272	val_272	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	272	val_272	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	273	val_273	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	273	val_273	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	273	val_273	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	274	val_274	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	275	val_275	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	278	val_278	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	278	val_278	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	28	val_28	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	280	val_280	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	280	val_280	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	281	val_281	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	281	val_281	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	282	val_282	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	282	val_282	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	283	val_283	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	284	val_284	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	285	val_285	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	286	val_286	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	287	val_287	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	288	val_288	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	288	val_288	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	289	val_289	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	291	val_291	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	292	val_292	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	296	val_296	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	298	val_298	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	298	val_298	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	298	val_298	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	30	val_30	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	302	val_302	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	305	val_305	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	306	val_306	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	307	val_307	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	307	val_307	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	308	val_308	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	309	val_309	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	309	val_309	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	310	val_310	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	311	val_311	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	311	val_311	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	311	val_311	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	315	val_315	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	316	val_316	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	316	val_316	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	316	val_316	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	317	val_317	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	317	val_317	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	318	val_318	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	318	val_318	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	318	val_318	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	321	val_321	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	321	val_321	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	322	val_322	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	322	val_322	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	323	val_323	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	325	val_325	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	325	val_325	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	327	val_327	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	327	val_327	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	327	val_327	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	33	val_33	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	331	val_331	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	331	val_331	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	332	val_332	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	333	val_333	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	333	val_333	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	335	val_335	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	336	val_336	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	338	val_338	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	339	val_339	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	34	val_34	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	341	val_341	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	342	val_342	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	342	val_342	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	344	val_344	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	344	val_344	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	345	val_345	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	35	val_35	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	35	val_35	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	35	val_35	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	351	val_351	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	353	val_353	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	353	val_353	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	356	val_356	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	360	val_360	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	362	val_362	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	364	val_364	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	365	val_365	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	366	val_366	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	367	val_367	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	367	val_367	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	368	val_368	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	369	val_369	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	369	val_369	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	369	val_369	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	37	val_37	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	37	val_37	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	373	val_373	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	374	val_374	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	375	val_375	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	377	val_377	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	378	val_378	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	379	val_379	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	382	val_382	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	382	val_382	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	384	val_384	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	384	val_384	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	384	val_384	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	386	val_386	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	389	val_389	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	392	val_392	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	393	val_393	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	394	val_394	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	395	val_395	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	395	val_395	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	396	val_396	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	396	val_396	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	396	val_396	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	397	val_397	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	397	val_397	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	399	val_399	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	399	val_399	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	4	val_4	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	400	val_400	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	402	val_402	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	403	val_403	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	403	val_403	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	403	val_403	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	404	val_404	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	404	val_404	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	407	val_407	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	409	val_409	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	409	val_409	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	409	val_409	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	41	val_41	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	411	val_411	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	413	val_413	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	413	val_413	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	414	val_414	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	414	val_414	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	417	val_417	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	417	val_417	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	417	val_417	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	418	val_418	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	419	val_419	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	42	val_42	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	42	val_42	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	421	val_421	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	424	val_424	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	424	val_424	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	427	val_427	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	429	val_429	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	429	val_429	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	43	val_43	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	430	val_430	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	430	val_430	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	430	val_430	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	431	val_431	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	431	val_431	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	431	val_431	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	432	val_432	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	435	val_435	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	436	val_436	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	437	val_437	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	438	val_438	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	438	val_438	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	438	val_438	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	439	val_439	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	439	val_439	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	44	val_44	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	443	val_443	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	444	val_444	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	446	val_446	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	448	val_448	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	449	val_449	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	452	val_452	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	453	val_453	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	454	val_454	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	454	val_454	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	454	val_454	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	455	val_455	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	457	val_457	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	458	val_458	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	458	val_458	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	459	val_459	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	459	val_459	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	460	val_460	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	462	val_462	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	462	val_462	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	463	val_463	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	463	val_463	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	466	val_466	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	466	val_466	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	466	val_466	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	467	val_467	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	47	val_47	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	470	val_470	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	472	val_472	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	475	val_475	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	477	val_477	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	478	val_478	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	478	val_478	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	479	val_479	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	480	val_480	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	480	val_480	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	480	val_480	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	481	val_481	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	482	val_482	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	483	val_483	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	484	val_484	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	485	val_485	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	487	val_487	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	490	val_490	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	491	val_491	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	492	val_492	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	492	val_492	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	493	val_493	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	494	val_494	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	495	val_495	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	496	val_496	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	497	val_497	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	498	val_498	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	498	val_498	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	498	val_498	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	5	val_5	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	5	val_5	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	5	val_5	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	51	val_51	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	51	val_51	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	53	val_53	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	54	val_54	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	57	val_57	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	58	val_58	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	58	val_58	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	64	val_64	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	65	val_65	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	66	val_66	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	67	val_67	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	67	val_67	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	69	val_69	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	70	val_70	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	70	val_70	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	70	val_70	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	72	val_72	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	72	val_72	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	74	val_74	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	76	val_76	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	76	val_76	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	77	val_77	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	78	val_78	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	8	val_8	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	80	val_80	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	82	val_82	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	83	val_83	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	83	val_83	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	84	val_84	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	84	val_84	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	85	val_85	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	86	val_86	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	87	val_87	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	9	val_9	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	90	val_90	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	90	val_90	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	90	val_90	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	92	val_92	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	95	val_95	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	95	val_95	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	96	val_96	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	97	val_97	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	97	val_97	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	98	val_98	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	98	val_98	2008-04-08
Warning: Shuffle Join MERGEJOIN[18][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
Warning: Shuffle Join MERGEJOIN[19][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
PREHOOK: query: select * from
(select * from tab where tab.key = 0)a
join
(select * from tab_part where tab_part.key = 98)b on a.key = b.key full outer join tab_part c on b.key = c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from
(select * from tab where tab.key = 0)a
join
(select * from tab_part where tab_part.key = 98)b on a.key = b.key full outer join tab_part c on b.key = c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
NULL	NULL	NULL	NULL	NULL	NULL	0	val_0	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	0	val_0	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	0	val_0	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	10	val_10	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	100	val_100	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	100	val_100	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	103	val_103	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	103	val_103	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	104	val_104	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	104	val_104	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	105	val_105	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	11	val_11	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	111	val_111	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	113	val_113	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	113	val_113	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	114	val_114	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	116	val_116	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	118	val_118	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	118	val_118	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	119	val_119	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	119	val_119	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	119	val_119	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	12	val_12	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	12	val_12	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	120	val_120	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	120	val_120	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	125	val_125	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	125	val_125	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	126	val_126	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	128	val_128	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	128	val_128	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	128	val_128	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	129	val_129	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	129	val_129	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	131	val_131	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	133	val_133	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	134	val_134	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	134	val_134	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	136	val_136	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	137	val_137	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	137	val_137	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	143	val_143	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	145	val_145	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	146	val_146	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	146	val_146	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	149	val_149	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	149	val_149	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	15	val_15	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	15	val_15	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	150	val_150	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	152	val_152	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	152	val_152	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	153	val_153	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	155	val_155	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	156	val_156	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	157	val_157	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	158	val_158	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	160	val_160	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	162	val_162	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	163	val_163	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	164	val_164	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	164	val_164	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	165	val_165	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	165	val_165	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	166	val_166	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	167	val_167	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	167	val_167	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	167	val_167	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	168	val_168	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	17	val_17	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	170	val_170	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	172	val_172	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	172	val_172	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	174	val_174	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	174	val_174	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	175	val_175	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	175	val_175	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	176	val_176	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	176	val_176	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	177	val_177	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	178	val_178	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	179	val_179	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	179	val_179	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	18	val_18	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	18	val_18	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	180	val_180	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	181	val_181	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	183	val_183	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	186	val_186	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	187	val_187	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	187	val_187	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	187	val_187	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	189	val_189	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	19	val_19	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	190	val_190	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	191	val_191	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	191	val_191	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	192	val_192	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	193	val_193	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	193	val_193	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	193	val_193	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	194	val_194	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	195	val_195	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	195	val_195	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	196	val_196	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	197	val_197	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	197	val_197	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	199	val_199	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	199	val_199	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	199	val_199	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	2	val_2	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	20	val_20	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	200	val_200	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	200	val_200	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	201	val_201	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	202	val_202	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	203	val_203	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	203	val_203	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	205	val_205	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	205	val_205	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	207	val_207	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	207	val_207	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	208	val_208	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	208	val_208	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	208	val_208	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	209	val_209	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	209	val_209	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	213	val_213	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	213	val_213	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	214	val_214	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	216	val_216	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	216	val_216	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	217	val_217	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	217	val_217	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	218	val_218	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	219	val_219	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	219	val_219	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	221	val_221	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	221	val_221	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	222	val_222	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	223	val_223	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	223	val_223	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	224	val_224	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	224	val_224	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	226	val_226	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	228	val_228	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	229	val_229	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	229	val_229	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	233	val_233	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	233	val_233	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	235	val_235	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	237	val_237	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	237	val_237	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	238	val_238	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	238	val_238	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	239	val_239	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	239	val_239	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	24	val_24	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	24	val_24	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	241	val_241	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	242	val_242	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	242	val_242	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	244	val_244	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	247	val_247	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	248	val_248	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	249	val_249	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	252	val_252	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	255	val_255	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	255	val_255	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	256	val_256	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	256	val_256	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	257	val_257	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	258	val_258	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	26	val_26	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	26	val_26	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	260	val_260	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	262	val_262	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	263	val_263	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	265	val_265	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	265	val_265	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	266	val_266	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	27	val_27	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	272	val_272	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	272	val_272	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	273	val_273	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	273	val_273	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	273	val_273	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	274	val_274	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	275	val_275	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	278	val_278	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	278	val_278	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	28	val_28	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	280	val_280	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	280	val_280	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	281	val_281	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	281	val_281	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	282	val_282	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	282	val_282	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	283	val_283	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	284	val_284	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	285	val_285	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	286	val_286	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	287	val_287	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	288	val_288	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	288	val_288	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	289	val_289	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	291	val_291	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	292	val_292	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	296	val_296	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	298	val_298	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	298	val_298	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	298	val_298	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	30	val_30	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	302	val_302	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	305	val_305	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	306	val_306	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	307	val_307	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	307	val_307	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	308	val_308	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	309	val_309	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	309	val_309	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	310	val_310	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	311	val_311	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	311	val_311	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	311	val_311	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	315	val_315	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	316	val_316	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	316	val_316	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	316	val_316	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	317	val_317	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	317	val_317	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	318	val_318	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	318	val_318	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	318	val_318	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	321	val_321	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	321	val_321	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	322	val_322	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	322	val_322	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	323	val_323	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	325	val_325	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	325	val_325	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	327	val_327	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	327	val_327	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	327	val_327	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	33	val_33	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	331	val_331	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	331	val_331	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	332	val_332	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	333	val_333	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	333	val_333	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	335	val_335	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	336	val_336	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	338	val_338	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	339	val_339	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	34	val_34	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	341	val_341	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	342	val_342	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	342	val_342	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	344	val_344	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	344	val_344	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	345	val_345	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	35	val_35	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	35	val_35	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	35	val_35	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	351	val_351	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	353	val_353	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	353	val_353	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	356	val_356	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	360	val_360	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	362	val_362	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	364	val_364	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	365	val_365	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	366	val_366	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	367	val_367	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	367	val_367	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	368	val_368	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	369	val_369	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	369	val_369	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	369	val_369	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	37	val_37	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	37	val_37	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	373	val_373	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	374	val_374	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	375	val_375	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	377	val_377	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	378	val_378	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	379	val_379	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	382	val_382	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	382	val_382	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	384	val_384	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	384	val_384	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	384	val_384	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	386	val_386	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	389	val_389	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	392	val_392	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	393	val_393	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	394	val_394	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	395	val_395	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	395	val_395	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	396	val_396	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	396	val_396	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	396	val_396	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	397	val_397	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	397	val_397	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	399	val_399	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	399	val_399	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	4	val_4	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	400	val_400	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	402	val_402	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	403	val_403	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	403	val_403	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	403	val_403	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	404	val_404	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	404	val_404	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	407	val_407	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	409	val_409	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	409	val_409	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	409	val_409	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	41	val_41	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	411	val_411	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	413	val_413	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	413	val_413	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	414	val_414	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	414	val_414	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	417	val_417	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	417	val_417	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	417	val_417	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	418	val_418	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	419	val_419	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	42	val_42	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	42	val_42	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	421	val_421	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	424	val_424	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	424	val_424	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	427	val_427	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	429	val_429	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	429	val_429	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	43	val_43	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	430	val_430	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	430	val_430	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	430	val_430	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	431	val_431	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	431	val_431	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	431	val_431	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	432	val_432	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	435	val_435	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	436	val_436	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	437	val_437	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	438	val_438	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	438	val_438	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	438	val_438	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	439	val_439	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	439	val_439	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	44	val_44	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	443	val_443	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	444	val_444	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	446	val_446	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	448	val_448	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	449	val_449	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	452	val_452	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	453	val_453	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	454	val_454	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	454	val_454	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	454	val_454	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	455	val_455	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	457	val_457	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	458	val_458	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	458	val_458	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	459	val_459	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	459	val_459	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	460	val_460	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	462	val_462	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	462	val_462	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	463	val_463	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	463	val_463	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	466	val_466	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	466	val_466	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	466	val_466	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	467	val_467	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	47	val_47	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	470	val_470	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	472	val_472	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	475	val_475	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	477	val_477	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	478	val_478	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	478	val_478	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	479	val_479	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	480	val_480	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	480	val_480	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	480	val_480	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	481	val_481	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	482	val_482	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	483	val_483	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	484	val_484	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	485	val_485	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	487	val_487	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	490	val_490	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	491	val_491	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	492	val_492	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	492	val_492	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	493	val_493	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	494	val_494	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	495	val_495	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	496	val_496	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	497	val_497	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	498	val_498	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	498	val_498	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	498	val_498	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	5	val_5	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	5	val_5	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	5	val_5	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	51	val_51	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	51	val_51	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	53	val_53	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	54	val_54	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	57	val_57	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	58	val_58	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	58	val_58	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	64	val_64	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	65	val_65	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	66	val_66	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	67	val_67	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	67	val_67	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	69	val_69	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	70	val_70	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	70	val_70	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	70	val_70	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	72	val_72	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	72	val_72	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	74	val_74	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	76	val_76	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	76	val_76	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	77	val_77	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	78	val_78	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	8	val_8	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	80	val_80	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	82	val_82	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	83	val_83	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	83	val_83	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	84	val_84	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	84	val_84	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	85	val_85	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	86	val_86	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	87	val_87	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	9	val_9	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	90	val_90	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	90	val_90	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	90	val_90	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	92	val_92	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	95	val_95	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	95	val_95	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	96	val_96	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	97	val_97	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	97	val_97	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	98	val_98	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	98	val_98	2008-04-08
Warning: Shuffle Join MERGEJOIN[30][tables = [a, b]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select * from
(select * from tab where tab.key = 0)a
full outer join
(select * from tab_part where tab_part.key = 98)b join tab_part c on a.key = b.key and b.key = c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from
(select * from tab where tab.key = 0)a
full outer join
(select * from tab_part where tab_part.key = 98)b join tab_part c on a.key = b.key and b.key = c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
Warning: Shuffle Join MERGEJOIN[17][tables = [a, b]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: select * from
(select * from tab where tab.key = 0)a
join
(select * from tab_part where tab_part.key = 98)b full outer join tab_part c on a.key = b.key and b.key = c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab
PREHOOK: Input: default@tab@ds=2008-04-08
PREHOOK: Input: default@tab_part
PREHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select * from
(select * from tab where tab.key = 0)a
join
(select * from tab_part where tab_part.key = 98)b full outer join tab_part c on a.key = b.key and b.key = c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab
POSTHOOK: Input: default@tab@ds=2008-04-08
POSTHOOK: Input: default@tab_part
POSTHOOK: Input: default@tab_part@ds=2008-04-08
#### A masked pattern was here ####
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
0	val_0	2008-04-08	98	val_98	2008-04-08	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	0	val_0	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	0	val_0	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	0	val_0	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	10	val_10	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	100	val_100	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	100	val_100	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	103	val_103	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	103	val_103	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	104	val_104	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	104	val_104	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	105	val_105	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	11	val_11	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	111	val_111	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	113	val_113	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	113	val_113	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	114	val_114	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	116	val_116	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	118	val_118	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	118	val_118	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	119	val_119	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	119	val_119	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	119	val_119	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	12	val_12	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	12	val_12	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	120	val_120	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	120	val_120	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	125	val_125	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	125	val_125	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	126	val_126	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	128	val_128	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	128	val_128	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	128	val_128	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	129	val_129	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	129	val_129	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	131	val_131	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	133	val_133	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	134	val_134	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	134	val_134	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	136	val_136	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	137	val_137	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	137	val_137	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	138	val_138	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	143	val_143	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	145	val_145	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	146	val_146	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	146	val_146	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	149	val_149	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	149	val_149	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	15	val_15	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	15	val_15	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	150	val_150	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	152	val_152	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	152	val_152	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	153	val_153	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	155	val_155	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	156	val_156	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	157	val_157	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	158	val_158	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	160	val_160	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	162	val_162	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	163	val_163	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	164	val_164	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	164	val_164	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	165	val_165	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	165	val_165	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	166	val_166	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	167	val_167	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	167	val_167	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	167	val_167	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	168	val_168	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	169	val_169	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	17	val_17	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	170	val_170	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	172	val_172	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	172	val_172	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	174	val_174	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	174	val_174	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	175	val_175	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	175	val_175	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	176	val_176	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	176	val_176	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	177	val_177	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	178	val_178	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	179	val_179	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	179	val_179	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	18	val_18	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	18	val_18	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	180	val_180	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	181	val_181	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	183	val_183	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	186	val_186	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	187	val_187	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	187	val_187	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	187	val_187	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	189	val_189	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	19	val_19	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	190	val_190	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	191	val_191	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	191	val_191	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	192	val_192	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	193	val_193	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	193	val_193	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	193	val_193	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	194	val_194	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	195	val_195	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	195	val_195	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	196	val_196	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	197	val_197	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	197	val_197	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	199	val_199	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	199	val_199	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	199	val_199	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	2	val_2	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	20	val_20	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	200	val_200	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	200	val_200	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	201	val_201	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	202	val_202	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	203	val_203	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	203	val_203	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	205	val_205	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	205	val_205	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	207	val_207	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	207	val_207	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	208	val_208	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	208	val_208	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	208	val_208	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	209	val_209	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	209	val_209	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	213	val_213	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	213	val_213	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	214	val_214	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	216	val_216	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	216	val_216	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	217	val_217	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	217	val_217	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	218	val_218	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	219	val_219	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	219	val_219	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	221	val_221	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	221	val_221	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	222	val_222	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	223	val_223	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	223	val_223	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	224	val_224	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	224	val_224	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	226	val_226	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	228	val_228	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	229	val_229	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	229	val_229	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	230	val_230	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	233	val_233	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	233	val_233	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	235	val_235	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	237	val_237	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	237	val_237	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	238	val_238	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	238	val_238	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	239	val_239	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	239	val_239	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	24	val_24	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	24	val_24	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	241	val_241	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	242	val_242	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	242	val_242	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	244	val_244	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	247	val_247	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	248	val_248	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	249	val_249	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	252	val_252	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	255	val_255	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	255	val_255	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	256	val_256	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	256	val_256	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	257	val_257	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	258	val_258	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	26	val_26	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	26	val_26	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	260	val_260	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	262	val_262	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	263	val_263	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	265	val_265	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	265	val_265	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	266	val_266	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	27	val_27	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	272	val_272	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	272	val_272	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	273	val_273	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	273	val_273	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	273	val_273	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	274	val_274	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	275	val_275	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	277	val_277	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	278	val_278	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	278	val_278	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	28	val_28	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	280	val_280	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	280	val_280	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	281	val_281	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	281	val_281	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	282	val_282	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	282	val_282	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	283	val_283	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	284	val_284	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	285	val_285	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	286	val_286	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	287	val_287	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	288	val_288	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	288	val_288	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	289	val_289	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	291	val_291	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	292	val_292	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	296	val_296	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	298	val_298	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	298	val_298	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	298	val_298	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	30	val_30	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	302	val_302	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	305	val_305	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	306	val_306	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	307	val_307	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	307	val_307	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	308	val_308	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	309	val_309	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	309	val_309	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	310	val_310	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	311	val_311	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	311	val_311	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	311	val_311	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	315	val_315	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	316	val_316	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	316	val_316	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	316	val_316	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	317	val_317	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	317	val_317	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	318	val_318	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	318	val_318	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	318	val_318	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	321	val_321	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	321	val_321	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	322	val_322	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	322	val_322	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	323	val_323	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	325	val_325	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	325	val_325	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	327	val_327	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	327	val_327	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	327	val_327	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	33	val_33	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	331	val_331	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	331	val_331	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	332	val_332	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	333	val_333	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	333	val_333	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	335	val_335	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	336	val_336	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	338	val_338	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	339	val_339	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	34	val_34	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	341	val_341	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	342	val_342	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	342	val_342	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	344	val_344	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	344	val_344	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	345	val_345	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	348	val_348	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	35	val_35	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	35	val_35	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	35	val_35	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	351	val_351	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	353	val_353	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	353	val_353	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	356	val_356	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	360	val_360	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	362	val_362	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	364	val_364	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	365	val_365	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	366	val_366	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	367	val_367	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	367	val_367	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	368	val_368	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	369	val_369	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	369	val_369	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	369	val_369	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	37	val_37	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	37	val_37	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	373	val_373	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	374	val_374	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	375	val_375	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	377	val_377	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	378	val_378	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	379	val_379	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	382	val_382	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	382	val_382	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	384	val_384	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	384	val_384	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	384	val_384	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	386	val_386	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	389	val_389	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	392	val_392	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	393	val_393	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	394	val_394	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	395	val_395	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	395	val_395	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	396	val_396	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	396	val_396	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	396	val_396	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	397	val_397	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	397	val_397	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	399	val_399	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	399	val_399	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	4	val_4	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	400	val_400	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	401	val_401	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	402	val_402	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	403	val_403	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	403	val_403	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	403	val_403	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	404	val_404	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	404	val_404	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	406	val_406	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	407	val_407	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	409	val_409	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	409	val_409	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	409	val_409	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	41	val_41	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	411	val_411	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	413	val_413	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	413	val_413	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	414	val_414	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	414	val_414	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	417	val_417	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	417	val_417	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	417	val_417	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	418	val_418	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	419	val_419	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	42	val_42	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	42	val_42	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	421	val_421	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	424	val_424	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	424	val_424	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	427	val_427	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	429	val_429	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	429	val_429	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	43	val_43	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	430	val_430	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	430	val_430	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	430	val_430	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	431	val_431	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	431	val_431	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	431	val_431	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	432	val_432	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	435	val_435	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	436	val_436	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	437	val_437	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	438	val_438	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	438	val_438	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	438	val_438	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	439	val_439	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	439	val_439	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	44	val_44	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	443	val_443	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	444	val_444	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	446	val_446	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	448	val_448	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	449	val_449	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	452	val_452	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	453	val_453	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	454	val_454	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	454	val_454	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	454	val_454	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	455	val_455	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	457	val_457	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	458	val_458	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	458	val_458	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	459	val_459	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	459	val_459	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	460	val_460	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	462	val_462	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	462	val_462	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	463	val_463	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	463	val_463	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	466	val_466	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	466	val_466	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	466	val_466	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	467	val_467	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	468	val_468	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	469	val_469	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	47	val_47	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	470	val_470	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	472	val_472	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	475	val_475	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	477	val_477	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	478	val_478	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	478	val_478	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	479	val_479	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	480	val_480	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	480	val_480	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	480	val_480	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	481	val_481	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	482	val_482	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	483	val_483	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	484	val_484	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	485	val_485	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	487	val_487	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	489	val_489	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	490	val_490	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	491	val_491	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	492	val_492	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	492	val_492	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	493	val_493	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	494	val_494	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	495	val_495	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	496	val_496	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	497	val_497	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	498	val_498	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	498	val_498	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	498	val_498	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	5	val_5	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	5	val_5	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	5	val_5	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	51	val_51	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	51	val_51	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	53	val_53	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	54	val_54	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	57	val_57	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	58	val_58	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	58	val_58	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	64	val_64	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	65	val_65	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	66	val_66	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	67	val_67	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	67	val_67	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	69	val_69	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	70	val_70	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	70	val_70	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	70	val_70	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	72	val_72	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	72	val_72	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	74	val_74	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	76	val_76	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	76	val_76	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	77	val_77	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	78	val_78	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	8	val_8	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	80	val_80	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	82	val_82	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	83	val_83	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	83	val_83	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	84	val_84	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	84	val_84	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	85	val_85	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	86	val_86	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	87	val_87	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	9	val_9	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	90	val_90	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	90	val_90	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	90	val_90	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	92	val_92	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	95	val_95	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	95	val_95	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	96	val_96	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	97	val_97	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	97	val_97	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	98	val_98	2008-04-08
NULL	NULL	NULL	NULL	NULL	NULL	98	val_98	2008-04-08
