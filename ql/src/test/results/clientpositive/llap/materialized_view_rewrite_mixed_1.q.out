PREHOOK: query: create table emps_n3 (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@emps_n3
POSTHOOK: query: create table emps_n3 (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emps_n3
PREHOOK: query: insert into emps_n3 values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (120, 10, 'Bill', 10000, 250)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps_n3
POSTHOOK: query: insert into emps_n3 values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (120, 10, 'Bill', 10000, 250)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps_n3
POSTHOOK: Lineage: emps_n3.commission SCRIPT []
POSTHOOK: Lineage: emps_n3.deptno SCRIPT []
POSTHOOK: Lineage: emps_n3.empid SCRIPT []
POSTHOOK: Lineage: emps_n3.name SCRIPT []
POSTHOOK: Lineage: emps_n3.salary SCRIPT []
PREHOOK: query: create table depts_n2 (
  deptno int,
  name varchar(256),
  locationid int)
stored as orc TBLPROPERTIES ('transactional'='false')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@depts_n2
POSTHOOK: query: create table depts_n2 (
  deptno int,
  name varchar(256),
  locationid int)
stored as orc TBLPROPERTIES ('transactional'='false')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@depts_n2
PREHOOK: query: insert into depts_n2 values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@depts_n2
POSTHOOK: query: insert into depts_n2 values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@depts_n2
POSTHOOK: Lineage: depts_n2.deptno SCRIPT []
POSTHOOK: Lineage: depts_n2.locationid SCRIPT []
POSTHOOK: Lineage: depts_n2.name SCRIPT []
PREHOOK: query: create materialized view mv1_n2 as
select * from emps_n3 where empid < 150
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select * from emps_n3 where empid < 150
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select *
from (select * from emps_n3 where empid < 120) t
join depts_n2 using (deptno)
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select *
from (select * from emps_n3 where empid < 120) t
join depts_n2 using (deptno)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveProject(deptno0=[$5], empid=[$0], name=[$2], salary=[$3], commission=[$4], name0=[$6], locationid=[$7])
  HiveJoin(condition=[=($1, $5)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(empid=[$0], deptno=[$1], name=[$2], salary=[$3], commission=[$4])
      HiveFilter(condition=[AND(>(120, $0), IS NOT NULL($1))])
        HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])
    HiveProject(deptno=[$0], name=[$1], locationid=[$2])
      HiveFilter(condition=[IS NOT NULL($0)])
        HiveTableScan(table=[[default, depts_n2]], table:alias=[depts_n2])

PREHOOK: query: select *
from (select * from emps_n3 where empid < 120) t
join depts_n2 using (deptno)
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select *
from (select * from emps_n3 where empid < 120) t
join depts_n2 using (deptno)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
10	100	Bill	10000.0	1000	Sales	10
10	110	Theodore	10000.0	250	Sales	10
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 as
select deptno, name, salary, commission
from emps_n3
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select deptno, name, salary, commission
from emps_n3
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select emps_n3.name, emps_n3.salary, emps_n3.commission
from emps_n3
join depts_n2 using (deptno)
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select emps_n3.name, emps_n3.salary, emps_n3.commission
from emps_n3
join depts_n2 using (deptno)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveProject(name=[$1], salary=[$2], commission=[$3])
  HiveJoin(condition=[=($0, $4)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(deptno=[$0], name=[$1], salary=[$2], commission=[$3])
      HiveFilter(condition=[IS NOT NULL($0)])
        HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])
    HiveProject(deptno=[$0])
      HiveFilter(condition=[IS NOT NULL($0)])
        HiveTableScan(table=[[default, depts_n2]], table:alias=[depts_n2])

PREHOOK: query: select emps_n3.name, emps_n3.salary, emps_n3.commission
from emps_n3
join depts_n2 using (deptno)
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select emps_n3.name, emps_n3.salary, emps_n3.commission
from emps_n3
join depts_n2 using (deptno)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
Bill	10000.0	1000
Bill	10000.0	250
Eric	8000.0	500
Sebastian	7000.0	NULL
Theodore	10000.0	250
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 as
select empid deptno from emps_n3
join depts_n2 using (deptno)
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select empid deptno from emps_n3
join depts_n2 using (deptno)
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
#### A masked pattern was here ####
CBO PLAN:
HiveProject(deptno=[CAST(100):INTEGER])
  HiveJoin(condition=[=($0, $1)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(deptno=[$1])
      HiveFilter(condition=[AND(=($0, 100), IS NOT NULL($1))])
        HiveTableScan(table=[[default, emps_n3]], table:alias=[emps_n3])
    HiveProject(deptno=[$0])
      HiveFilter(condition=[IS NOT NULL($0)])
        HiveTableScan(table=[[default, depts_n2]], table:alias=[depts_n2])

PREHOOK: query: select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
#### A masked pattern was here ####
POSTHOOK: query: select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
#### A masked pattern was here ####
100
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 TBLPROPERTIES ('rewriting.time.window' = '-1') as
select empid deptno from emps_n3
join depts_n2 using (deptno)
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 TBLPROPERTIES ('rewriting.time.window' = '-1') as
select empid deptno from emps_n3
join depts_n2 using (deptno)
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveProject($f0=[CAST(100):INTEGER])
  HiveFilter(condition=[=(100, $0)])
    HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
100
PREHOOK: query: insert into emps_n3 values (130, 10, 'Jane', 100000, 250)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps_n3
POSTHOOK: query: insert into emps_n3 values (130, 10, 'Jane', 100000, 250)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps_n3
POSTHOOK: Lineage: emps_n3.commission SCRIPT []
POSTHOOK: Lineage: emps_n3.deptno SCRIPT []
POSTHOOK: Lineage: emps_n3.empid SCRIPT []
POSTHOOK: Lineage: emps_n3.name SCRIPT []
POSTHOOK: Lineage: emps_n3.salary SCRIPT []
PREHOOK: query: explain
alter materialized view mv1_n2 rebuild
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: explain
alter materialized view mv1_n2 rebuild
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: default@mv1_n2
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-4 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: emps_n3
                  filterExpr: deptno is not null (type: boolean)
                  Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: deptno is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: empid (type: int), deptno (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: int)
                        Statistics: Num rows: 6 Data size: 48 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: depts_n2
                  filterExpr: deptno is not null (type: boolean)
                  Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: deptno is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: deptno (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.mv1_n2
                Select Operator
                  expressions: _col0 (type: int)
                  outputColumnNames: deptno
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: min(deptno), max(deptno), count(1), count(deptno), compute_bit_vector(deptno, 'hll')
                    minReductionHashAggr: 0.8333333
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4
                    Statistics: Num rows: 1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      null sort order: 
                      sort order: 
                      Statistics: Num rows: 1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector(VALUE._col4)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.mv1_n2

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: deptno
          Column Types: int
          Table: default.mv1_n2

  Stage: Stage-4
    Materialized View Update
      name: default.mv1_n2
      update creation metadata: true

PREHOOK: query: alter materialized view mv1_n2 rebuild
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: alter materialized view mv1_n2 rebuild
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: default@mv1_n2
POSTHOOK: Lineage: mv1_n2.deptno SIMPLE [(emps_n3)emps_n3.FieldSchema(name:empid, type:int, comment:null), ]
PREHOOK: query: explain cbo
select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveProject($f0=[CAST(100):INTEGER])
  HiveFilter(condition=[=(100, $0)])
    HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select empid deptno from emps_n3
join depts_n2 using (deptno) where empid = 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
100
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 as
select * from emps_n3 where empid < 200
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select * from emps_n3 where empid < 200
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select * from emps_n3 where empid > 120
union all select * from emps_n3 where empid < 150
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select * from emps_n3 where empid > 120
union all select * from emps_n3 where empid < 150
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveUnion(all=[true])
  HiveProject(empid=[$0], deptno=[$1], name=[$2], salary=[$3], commission=[$4])
    HiveFilter(condition=[>($0, 120)])
      HiveTableScan(table=[[default, emps_n3]], table:alias=[emps_n3])
  HiveProject(empid=[$0], deptno=[$1], name=[$2], salary=[$3], commission=[$4])
    HiveFilter(condition=[>(150, $0)])
      HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select * from emps_n3 where empid > 120
union all select * from emps_n3 where empid < 150
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select * from emps_n3 where empid > 120
union all select * from emps_n3 where empid < 150
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
100	10	Bill	10000.0	1000
110	10	Theodore	10000.0	250
120	10	Bill	10000.0	250
130	10	Jane	100000.0	250
130	10	Jane	100000.0	250
150	10	Sebastian	7000.0	NULL
200	20	Eric	8000.0	500
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 as
select empid, deptno from emps_n3 group by empid, deptno
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select empid, deptno from emps_n3 group by empid, deptno
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select empid, deptno from emps_n3 group by empid, deptno
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select empid, deptno from emps_n3 group by empid, deptno
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select empid, deptno from emps_n3 group by empid, deptno
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select empid, deptno from emps_n3 group by empid, deptno
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
100	10
110	10
120	10
130	10
150	10
200	20
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 as
select empid, name from emps_n3 group by empid, name
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select empid, name from emps_n3 group by empid, name
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select empid, name from emps_n3 group by empid, name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select empid, name from emps_n3 group by empid, name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select empid, name from emps_n3 group by empid, name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select empid, name from emps_n3 group by empid, name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
100	Bill
110	Theodore
120	Bill
130	Jane
150	Sebastian
200	Eric
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 as
select name, salary from emps_n3 group by name, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select name, salary from emps_n3 group by name, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select name, salary from emps_n3 group by name, salary
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select name, salary from emps_n3 group by name, salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select name, salary from emps_n3 group by name, salary
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select name, salary from emps_n3 group by name, salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
Bill	10000.0
Eric	8000.0
Jane	100000.0
Sebastian	7000.0
Theodore	10000.0
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 as
select name, salary from emps_n3 group by name, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select name, salary from emps_n3 group by name, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select name from emps_n3 group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select name from emps_n3 group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{0}])
  HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select name from emps_n3 group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select name from emps_n3 group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
Bill
Eric
Jane
Sebastian
Theodore
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 as
select name, salary from emps_n3 where deptno = 10 group by name, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select name, salary from emps_n3 where deptno = 10 group by name, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select name from emps_n3 where deptno = 10 group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select name from emps_n3 where deptno = 10 group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{0}])
  HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select name from emps_n3 where deptno = 10 group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select name from emps_n3 where deptno = 10 group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
Bill
Jane
Sebastian
Theodore
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 as
select name, salary, count(*) as c, sum(empid) as s
from emps_n3 group by name, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps_n3
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 as
select name, salary, count(*) as c, sum(empid) as s
from emps_n3 group by name, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps_n3
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select name from emps_n3 group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select name from emps_n3 group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{0}])
  HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select name from emps_n3 group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps_n3
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select name from emps_n3 group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps_n3
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
Bill
Eric
Jane
Sebastian
Theodore
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 TBLPROPERTIES ('rewriting.time.window' = '-1') as
select deptno, name, count(*) as c
from depts_n2
group by deptno, name
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 TBLPROPERTIES ('rewriting.time.window' = '-1') as
select deptno, name, count(*) as c
from depts_n2
group by deptno, name
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select name, count(*) as c
from depts_n2
where name = 'Sales'
group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select name, count(*) as c
from depts_n2
where name = 'Sales'
group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveProject($f0=[CAST(_UTF-16LE'Sales':VARCHAR(256) CHARACTER SET "UTF-16LE"):VARCHAR(256) CHARACTER SET "UTF-16LE"], $f1=[COALESCE($1, 0:BIGINT)])
  HiveAggregate(group=[{1}], agg#0=[sum($0)])
    HiveProject(c=[$2], $f3=[true])
      HiveFilter(condition=[=($1, _UTF-16LE'Sales')])
        HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select name, count(*) as c
from depts_n2
where name = 'Sales'
group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select name, count(*) as c
from depts_n2
where name = 'Sales'
group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
Sales	1
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n2 TBLPROPERTIES ('rewriting.time.window' = '-1') as
select deptno, name, locationid, count(*) as c
from depts_n2
group by deptno, name, locationid
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: create materialized view mv1_n2 TBLPROPERTIES ('rewriting.time.window' = '-1') as
select deptno, name, locationid, count(*) as c
from depts_n2
group by deptno, name, locationid
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: explain cbo
select deptno, name, count(*) as c
from depts_n2
where name = 'Sales'
group by deptno, name
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select deptno, name, count(*) as c
from depts_n2
where name = 'Sales'
group by deptno, name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
CBO PLAN:
HiveProject(deptno=[$0], $f1=[CAST(_UTF-16LE'Sales':VARCHAR(256) CHARACTER SET "UTF-16LE"):VARCHAR(256) CHARACTER SET "UTF-16LE"], $f10=[COALESCE($1, 0:BIGINT)])
  HiveAggregate(group=[{0}], agg#0=[sum($3)])
    HiveFilter(condition=[=($1, _UTF-16LE'Sales')])
      HiveTableScan(table=[[default, mv1_n2]], table:alias=[default.mv1_n2])

PREHOOK: query: select deptno, name, count(*) as c
from depts_n2
where name = 'Sales'
group by deptno, name
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
POSTHOOK: query: select deptno, name, count(*) as c
from depts_n2
where name = 'Sales'
group by deptno, name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@mv1_n2
#### A masked pattern was here ####
10	Sales	1
PREHOOK: query: drop materialized view mv1_n2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n2
PREHOOK: Output: default@mv1_n2
POSTHOOK: query: drop materialized view mv1_n2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n2
POSTHOOK: Output: default@mv1_n2
PREHOOK: query: create materialized view mv1_n3 TBLPROPERTIES ('rewriting.time.window' = '-1') as
select count(*) as c
from depts_n2
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts_n2
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1_n3
POSTHOOK: query: create materialized view mv1_n3 TBLPROPERTIES ('rewriting.time.window' = '-1') as
select count(*) as c
from depts_n2
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts_n2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1_n3
PREHOOK: query: explain cbo
select count(*) as c
from depts_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@mv1_n3
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select count(*) as c
from depts_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@mv1_n3
#### A masked pattern was here ####
CBO PLAN:
HiveTableScan(table=[[default, mv1_n3]], table:alias=[default.mv1_n3])

PREHOOK: query: explain
select count(*) as c
from depts_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@mv1_n3
#### A masked pattern was here ####
POSTHOOK: query: explain
select count(*) as c
from depts_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@mv1_n3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1_n3
          Select Operator
            expressions: c (type: bigint)
            outputColumnNames: _col0
            ListSink

PREHOOK: query: select count(*) as c
from depts_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@depts_n2
PREHOOK: Input: default@mv1_n3
#### A masked pattern was here ####
POSTHOOK: query: select count(*) as c
from depts_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts_n2
POSTHOOK: Input: default@mv1_n3
#### A masked pattern was here ####
3
PREHOOK: query: drop materialized view mv1_n3
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1_n3
PREHOOK: Output: default@mv1_n3
POSTHOOK: query: drop materialized view mv1_n3
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1_n3
POSTHOOK: Output: default@mv1_n3
