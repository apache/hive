PREHOOK: query: create database chejianer_mask
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: create database chejianer_mask
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: create database chejianer_temp
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:chejianer_temp
POSTHOOK: query: create database chejianer_temp
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:chejianer_temp
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`blacklist`(
`id` bigint COMMENT '',
`company_id` string COMMENT '',
`company_name` string COMMENT '',
`order_id` string COMMENT '',
`company_type` bigint COMMENT '公司类型，0:修理厂 1:配件商',
`black_type` bigint COMMENT '类型，0：测试，1：刷单',
`reason_desc` string COMMENT '',
`record_date` string COMMENT '',
`order_no` string COMMENT '',
`black_target_type` bigint COMMENT '',
`is_deleted` bigint COMMENT '')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_mask@blacklist
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`blacklist`(
`id` bigint COMMENT '',
`company_id` string COMMENT '',
`company_name` string COMMENT '',
`order_id` string COMMENT '',
`company_type` bigint COMMENT '公司类型，0:修理厂 1:配件商',
`black_type` bigint COMMENT '类型，0：测试，1：刷单',
`reason_desc` string COMMENT '',
`record_date` string COMMENT '',
`order_no` string COMMENT '',
`black_target_type` bigint COMMENT '',
`is_deleted` bigint COMMENT '')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_mask@blacklist
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`enquiry`(
`id` string COMMENT '',
`bid` string COMMENT '',
`buyer_company_id` string COMMENT '',
`buyer_account_id` string COMMENT '',
`car_desc` string COMMENT '',
`car_brand` string COMMENT '',
`car_model` string COMMENT '',
`default_favorite_quality` string COMMENT '',
`default_favorite_qualities` string COMMENT '新默认品质选项',
`status` string COMMENT '',
`status_update_at` string COMMENT 'status最新更新日期',
`parts_num` bigint COMMENT '',
`parts_desc` string COMMENT '',
`vin_code` string COMMENT '',
`advance_enquiry_id` string COMMENT '',
`source` string COMMENT '',
`vin_code_pic` string COMMENT '',
`expected_day` bigint COMMENT '',
`is_invoice_required` string COMMENT '',
`photos` string COMMENT '',
`automotive_ly_id` string COMMENT '',
`is_chosen_vendor` string COMMENT '',
`chosen_vendors` string COMMENT '',
`insurance_company_id` string COMMENT '保险公司id',
`created_at` string COMMENT '')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_mask@enquiry
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`enquiry`(
`id` string COMMENT '',
`bid` string COMMENT '',
`buyer_company_id` string COMMENT '',
`buyer_account_id` string COMMENT '',
`car_desc` string COMMENT '',
`car_brand` string COMMENT '',
`car_model` string COMMENT '',
`default_favorite_quality` string COMMENT '',
`default_favorite_qualities` string COMMENT '新默认品质选项',
`status` string COMMENT '',
`status_update_at` string COMMENT 'status最新更新日期',
`parts_num` bigint COMMENT '',
`parts_desc` string COMMENT '',
`vin_code` string COMMENT '',
`advance_enquiry_id` string COMMENT '',
`source` string COMMENT '',
`vin_code_pic` string COMMENT '',
`expected_day` bigint COMMENT '',
`is_invoice_required` string COMMENT '',
`photos` string COMMENT '',
`automotive_ly_id` string COMMENT '',
`is_chosen_vendor` string COMMENT '',
`chosen_vendors` string COMMENT '',
`insurance_company_id` string COMMENT '保险公司id',
`created_at` string COMMENT '')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_mask@enquiry
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`insurance_direct_supply_enquiry_case`(
`id` string,
`id_supply_fits` string,
`buyer_enquiry_id` string COMMENT '修理厂询价单号',
`vendor_enquiry_id` string COMMENT '配件商询价单号',
`insurance_company_type` string,
`insurance_case_no` string,
`um_code` string,
`buyer_company_id` string COMMENT '修理厂ID',
`buyer_company_name` string,
`buyer_company_address` string,
`buyer_company_contact` string,
`vin_code` string,
`vin_code_pic` string,
`car_brand` string,
`car_model` string,
`car_desc` string,
`fail_type` string,
`fail_reason` string,
`created_at` string,
`has_fail` string,
`claim_case_change_type` string,
`channel_process_id` string,
`third_institution` string,
`is_deleted` string,
`status` string,
`status_update_at` string COMMENT 'status最新更新日期',
`id_order_info` string,
`total_profit` decimal(10,0),
`assess_um_name` string,
`assess_um_tel` string,
`vehicle_type` string COMMENT '01乘用车，02商用车',
`department_code` string COMMENT '机构号',
`case_car_type` string COMMENT '直供理赔车辆类型:[0/1]: 标的车/三者车',
`linked_freedom_enquiry_id` string COMMENT '链接的自由交易询价单(-> 直供模式失败后用户选择转换成自由交易时存储)',
`confirm_time` string,
`id_supply_record` string COMMENT '小额自主单记录ID (小额与理赔沟通需要)',
`not_bidding` string COMMENT '是否不竞价流程 (默认null|false)',
`plate_number` string)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_mask@insurance_direct_supply_enquiry_case
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`insurance_direct_supply_enquiry_case`(
`id` string,
`id_supply_fits` string,
`buyer_enquiry_id` string COMMENT '修理厂询价单号',
`vendor_enquiry_id` string COMMENT '配件商询价单号',
`insurance_company_type` string,
`insurance_case_no` string,
`um_code` string,
`buyer_company_id` string COMMENT '修理厂ID',
`buyer_company_name` string,
`buyer_company_address` string,
`buyer_company_contact` string,
`vin_code` string,
`vin_code_pic` string,
`car_brand` string,
`car_model` string,
`car_desc` string,
`fail_type` string,
`fail_reason` string,
`created_at` string,
`has_fail` string,
`claim_case_change_type` string,
`channel_process_id` string,
`third_institution` string,
`is_deleted` string,
`status` string,
`status_update_at` string COMMENT 'status最新更新日期',
`id_order_info` string,
`total_profit` decimal(10,0),
`assess_um_name` string,
`assess_um_tel` string,
`vehicle_type` string COMMENT '01乘用车，02商用车',
`department_code` string COMMENT '机构号',
`case_car_type` string COMMENT '直供理赔车辆类型:[0/1]: 标的车/三者车',
`linked_freedom_enquiry_id` string COMMENT '链接的自由交易询价单(-> 直供模式失败后用户选择转换成自由交易时存储)',
`confirm_time` string,
`id_supply_record` string COMMENT '小额自主单记录ID (小额与理赔沟通需要)',
`not_bidding` string COMMENT '是否不竞价流程 (默认null|false)',
`plate_number` string)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_mask@insurance_direct_supply_enquiry_case
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`order_`(
`id` string,
`order_no` string,
`type` string,
`parent_pay_status` string,
`status` string,
`status_update_at` string,
`order_group_type` string COMMENT '订单组类型:普通/父单/子单',
`parent_order_id` string,
`enquiry_id` string,
`vin_code` string COMMENT 'VIN_CODE',
`offer_id` string,
`buyer_account_id` string,
`buyer_account_name` string,
`buyer_account_concat` string,
`buyer_company_id` string,
`buyer_company_name` string,
`buyer_company_concat` string,
`buyer_company_address` string,
`vendor_account_id` string,
`vendor_account_name` string,
`vendor_account_concat` string,
`vendor_company_id` string,
`vendor_company_name` string,
`vendor_company_concat` string,
`vendor_company_address` string,
`description` string,
`description_extra` string,
`logo` string,
`total_quantity` bigint,
`include_tax` string,
`remarks` string,
`goods_total_amount` decimal(10,2) COMMENT '商品总金额',
`order_total_amount` decimal(10,2) COMMENT '订单总金额',
`delivery_fee` decimal(10,2) COMMENT '配送费',
`delivery_platform_discount` decimal(10,2) COMMENT '配送费平台优惠金额',
`delivery_coupon_discount` decimal(10,2) COMMENT '配送费优惠券优惠金额',
`goods_platform_discount` decimal(10,2) COMMENT '商品平台优惠金额',
`goods_coupon_discount` decimal(10,2) COMMENT '商品优惠券优惠金额',
`order_payment_status` string COMMENT '订单支付状态',
`order_payment_method` string COMMENT '订单支付方式',
`online_payment_method_id` string COMMENT '在线支付方式ID',
`online_payment_amount` decimal(10,2) COMMENT '在线支付金额',
`online_payment_status` string COMMENT '在线支状态',
`order_cancel_reason` string COMMENT '订单取消原因',
`created_at` string COMMENT '创建时间',
`paid_time` string COMMENT '在线支付时间(update on webhooks callback)',
`delivery_time` string COMMENT '开始配送时间',
`cancel_time` string COMMENT '订单取消时间',
`refund_time` string COMMENT '退款成功时间(update on webhooks callback)',
`is_invoice_required` string,
`is_insurance_order` string,
`is_after_sale` string COMMENT '是否存在售后记录',
`buyer_company_address_id` string,
`coupon_id` bigint,
`reduction_id` bigint,
`has_rating` string COMMENT '是否有评论，0否，1是',
`order_platform_type` string,
`vendor_commission_fee_rate` double COMMENT '配件商佣金费率',
`vendor_commission_fee` decimal(10,2) COMMENT '配件商佣金费用',
`insurance_company_id` string,
`is_in_black_list` string,
`is_deleted` int,
`is_online_pay` int)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_mask@order_
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`order_`(
`id` string,
`order_no` string,
`type` string,
`parent_pay_status` string,
`status` string,
`status_update_at` string,
`order_group_type` string COMMENT '订单组类型:普通/父单/子单',
`parent_order_id` string,
`enquiry_id` string,
`vin_code` string COMMENT 'VIN_CODE',
`offer_id` string,
`buyer_account_id` string,
`buyer_account_name` string,
`buyer_account_concat` string,
`buyer_company_id` string,
`buyer_company_name` string,
`buyer_company_concat` string,
`buyer_company_address` string,
`vendor_account_id` string,
`vendor_account_name` string,
`vendor_account_concat` string,
`vendor_company_id` string,
`vendor_company_name` string,
`vendor_company_concat` string,
`vendor_company_address` string,
`description` string,
`description_extra` string,
`logo` string,
`total_quantity` bigint,
`include_tax` string,
`remarks` string,
`goods_total_amount` decimal(10,2) COMMENT '商品总金额',
`order_total_amount` decimal(10,2) COMMENT '订单总金额',
`delivery_fee` decimal(10,2) COMMENT '配送费',
`delivery_platform_discount` decimal(10,2) COMMENT '配送费平台优惠金额',
`delivery_coupon_discount` decimal(10,2) COMMENT '配送费优惠券优惠金额',
`goods_platform_discount` decimal(10,2) COMMENT '商品平台优惠金额',
`goods_coupon_discount` decimal(10,2) COMMENT '商品优惠券优惠金额',
`order_payment_status` string COMMENT '订单支付状态',
`order_payment_method` string COMMENT '订单支付方式',
`online_payment_method_id` string COMMENT '在线支付方式ID',
`online_payment_amount` decimal(10,2) COMMENT '在线支付金额',
`online_payment_status` string COMMENT '在线支状态',
`order_cancel_reason` string COMMENT '订单取消原因',
`created_at` string COMMENT '创建时间',
`paid_time` string COMMENT '在线支付时间(update on webhooks callback)',
`delivery_time` string COMMENT '开始配送时间',
`cancel_time` string COMMENT '订单取消时间',
`refund_time` string COMMENT '退款成功时间(update on webhooks callback)',
`is_invoice_required` string,
`is_insurance_order` string,
`is_after_sale` string COMMENT '是否存在售后记录',
`buyer_company_address_id` string,
`coupon_id` bigint,
`reduction_id` bigint,
`has_rating` string COMMENT '是否有评论，0否，1是',
`order_platform_type` string,
`vendor_commission_fee_rate` double COMMENT '配件商佣金费率',
`vendor_commission_fee` decimal(10,2) COMMENT '配件商佣金费用',
`insurance_company_id` string,
`is_in_black_list` string,
`is_deleted` int,
`is_online_pay` int)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_mask@order_
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`order_after_sale`(
`id` string,
`order_no` string,
`type` bigint,
`status` bigint,
`inner_status` bigint,
`after_sale_reason` bigint,
`after_sale_reason_extra` string,
`received_goods` bigint,
`refund_amount` decimal(10,2),
`refund_method` bigint,
`certificate` string,
`created_at` string,
`is_in_black_list` bigint COMMENT 'is_in_black_list',
`insurance_company_id` string COMMENT '保险公司ID',
`after_sale_no` string)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_mask@order_after_sale
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`order_after_sale`(
`id` string,
`order_no` string,
`type` bigint,
`status` bigint,
`inner_status` bigint,
`after_sale_reason` bigint,
`after_sale_reason_extra` string,
`received_goods` bigint,
`refund_amount` decimal(10,2),
`refund_method` bigint,
`certificate` string,
`created_at` string,
`is_in_black_list` bigint COMMENT 'is_in_black_list',
`insurance_company_id` string COMMENT '保险公司ID',
`after_sale_no` string)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_mask@order_after_sale
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`order_after_sale_item`(
`id` string COMMENT '',
`order_after_sale_id` string COMMENT '',
`sub_order_id` string COMMENT '',
`status` bigint COMMENT '',
`sub_status` bigint COMMENT '0:已取消 1:超时未发货，系统自动取消  2:手动申请售后，配件商或后管同意取消成功',
`created_at` string COMMENT '')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_mask@order_after_sale_item
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`order_after_sale_item`(
`id` string COMMENT '',
`order_after_sale_id` string COMMENT '',
`sub_order_id` string COMMENT '',
`status` bigint COMMENT '',
`sub_status` bigint COMMENT '0:已取消 1:超时未发货，系统自动取消  2:手动申请售后，配件商或后管同意取消成功',
`created_at` string COMMENT '')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_mask@order_after_sale_item
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`order_logistics_package`(
`id` string COMMENT '',
`order_no` string COMMENT '',
`waybill_no` string COMMENT '',
`logistics_company_id` string COMMENT '',
`logistics_company_name` string COMMENT '',
`logistics_company_contact` string COMMENT '',
`buyer_company_name` string COMMENT '',
`buyer_account` string COMMENT '',
`buyer_contact` string COMMENT '',
`buyer_address` string COMMENT '',
`match_router_id` string COMMENT '',
`waybill_url` string COMMENT '',
`status` bigint COMMENT '',
`estimated_delivery_time` bigint COMMENT '',
`shipped_time` string COMMENT '',
`created_at` string COMMENT '')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_mask@order_logistics_package
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`order_logistics_package`(
`id` string COMMENT '',
`order_no` string COMMENT '',
`waybill_no` string COMMENT '',
`logistics_company_id` string COMMENT '',
`logistics_company_name` string COMMENT '',
`logistics_company_contact` string COMMENT '',
`buyer_company_name` string COMMENT '',
`buyer_account` string COMMENT '',
`buyer_contact` string COMMENT '',
`buyer_address` string COMMENT '',
`match_router_id` string COMMENT '',
`waybill_url` string COMMENT '',
`status` bigint COMMENT '',
`estimated_delivery_time` bigint COMMENT '',
`shipped_time` string COMMENT '',
`created_at` string COMMENT '')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_mask@order_logistics_package
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`trading_app_source_record`(
`id` string COMMENT '',
`type` bigint COMMENT 'id类型 1:询价单 2:分配单 3:报价单 4:订单 5:售后',
`table_id` string COMMENT 'id值  询价单id、分配单id、报价单id、订单id、售后单id等等',
`op` bigint COMMENT '具体操作 100询价(type=1) 101追加询价(type=1) 200领取(type=2) 201转交(type=2) 300报价(type=3) 301追加报价(type=3) 400下单(type=4) 500:发起售后(type=5) 501同意售后(type=5)',
`app_source` bigint COMMENT '1:WEB 2:IOS 3:ANDROID',
`app_version` string COMMENT 'app版本号',
`account_id` string COMMENT '操作人',
`created_at` string COMMENT '创建时间')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_mask@trading_app_source_record
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`trading_app_source_record`(
`id` string COMMENT '',
`type` bigint COMMENT 'id类型 1:询价单 2:分配单 3:报价单 4:订单 5:售后',
`table_id` string COMMENT 'id值  询价单id、分配单id、报价单id、订单id、售后单id等等',
`op` bigint COMMENT '具体操作 100询价(type=1) 101追加询价(type=1) 200领取(type=2) 201转交(type=2) 300报价(type=3) 301追加报价(type=3) 400下单(type=4) 500:发起售后(type=5) 501同意售后(type=5)',
`app_source` bigint COMMENT '1:WEB 2:IOS 3:ANDROID',
`app_version` string COMMENT 'app版本号',
`account_id` string COMMENT '操作人',
`created_at` string COMMENT '创建时间')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_mask@trading_app_source_record
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`vendor_company`(
`id` string,
`parent_id` string,
`name` string,
`accounts_manager` string COMMENT '客户经理',
`province` string,
`city` string,
`county` string,
`address` string,
`company_type` string,
`chain_brand` string,
`logo` string,
`license_photo` string,
`license_file_key` string COMMENT '营业执照',
`province_on_license` string COMMENT '营业执照上的省',
`city_on_license` string COMMENT '营业执照上的市',
`county_on_license` string COMMENT '营业执照上的区',
`address_on_license` string COMMENT '营业执照上的注册地址',
`contact_person_back_id_photo` string COMMENT '联系人身份证反面照片(人像面)',
`contact_person_back_id_file_key` string COMMENT '居民身份证背面',
`contact_person_front_id_photo` string COMMENT '联系人身份证正面照片(国徽面)',
`contact_person_front_id_file_key` string COMMENT '居民身份证正面',
`office_place_photo` string COMMENT '办公场所照',
`office_place_file_key` string COMMENT '配件商内部照',
`facade_photo` string COMMENT '门头照片',
`facade_file_key` string COMMENT '配件商门面照',
`shop_photo` string,
`phone_number` string,
`status` bigint,
`grade` bigint,
`oe_brands` string,
`tyre_brands` string,
`oil_brands` string,
`part_types` string,
`latitude` string,
`longitude` string,
`zone` string,
`created_at` string,
`chain_type` bigint,
`chain_status` bigint,
`specified` bigint,
`partnerships_promotion_code` string,
`verified_by` string,
`commission_fee` double COMMENT '累计被车件儿收取的佣金',
`commission_fee_update_at` string COMMENT '最后统计更新佣金的时间',
`is_in_black_list` bigint COMMENT 'is_in_black_list',
`license_code` string COMMENT '组织结构代码',
`business_types` string COMMENT '经营范围目录',
`legal_person_name` string COMMENT '法人姓名',
`legal_person_id_no` string COMMENT '法人身份证号码',
`company_establishment_date` string COMMENT '企业成立日期',
`register_version` bigint COMMENT '新老用户版本 0-老版注册用户 1-新版注册用户',
`update_at` string COMMENT '修改时间',
`old_company_status` bigint COMMENT '老用户的资质资料审核状态 0-老用户资质资料未审核 1-老用户资质资料已审核 2-老用户资质资料已拒绝',
`company_admin_open_status` bigint COMMENT '停用/启用状态:0停用,1启用',
`ext_supplier_company_status` int,
`legal_person_id_type` int,
`company_code` string COMMENT '公司编码')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_mask@vendor_company
PREHOOK: Output: database:chejianer_mask
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_mask`.`vendor_company`(
`id` string,
`parent_id` string,
`name` string,
`accounts_manager` string COMMENT '客户经理',
`province` string,
`city` string,
`county` string,
`address` string,
`company_type` string,
`chain_brand` string,
`logo` string,
`license_photo` string,
`license_file_key` string COMMENT '营业执照',
`province_on_license` string COMMENT '营业执照上的省',
`city_on_license` string COMMENT '营业执照上的市',
`county_on_license` string COMMENT '营业执照上的区',
`address_on_license` string COMMENT '营业执照上的注册地址',
`contact_person_back_id_photo` string COMMENT '联系人身份证反面照片(人像面)',
`contact_person_back_id_file_key` string COMMENT '居民身份证背面',
`contact_person_front_id_photo` string COMMENT '联系人身份证正面照片(国徽面)',
`contact_person_front_id_file_key` string COMMENT '居民身份证正面',
`office_place_photo` string COMMENT '办公场所照',
`office_place_file_key` string COMMENT '配件商内部照',
`facade_photo` string COMMENT '门头照片',
`facade_file_key` string COMMENT '配件商门面照',
`shop_photo` string,
`phone_number` string,
`status` bigint,
`grade` bigint,
`oe_brands` string,
`tyre_brands` string,
`oil_brands` string,
`part_types` string,
`latitude` string,
`longitude` string,
`zone` string,
`created_at` string,
`chain_type` bigint,
`chain_status` bigint,
`specified` bigint,
`partnerships_promotion_code` string,
`verified_by` string,
`commission_fee` double COMMENT '累计被车件儿收取的佣金',
`commission_fee_update_at` string COMMENT '最后统计更新佣金的时间',
`is_in_black_list` bigint COMMENT 'is_in_black_list',
`license_code` string COMMENT '组织结构代码',
`business_types` string COMMENT '经营范围目录',
`legal_person_name` string COMMENT '法人姓名',
`legal_person_id_no` string COMMENT '法人身份证号码',
`company_establishment_date` string COMMENT '企业成立日期',
`register_version` bigint COMMENT '新老用户版本 0-老版注册用户 1-新版注册用户',
`update_at` string COMMENT '修改时间',
`old_company_status` bigint COMMENT '老用户的资质资料审核状态 0-老用户资质资料未审核 1-老用户资质资料已审核 2-老用户资质资料已拒绝',
`company_admin_open_status` bigint COMMENT '停用/启用状态:0停用,1启用',
`ext_supplier_company_status` int,
`legal_person_id_type` int,
`company_code` string COMMENT '公司编码')
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_mask@vendor_company
POSTHOOK: Output: database:chejianer_mask
PREHOOK: query: CREATE EXTERNAL TABLE `chejianer_temp`.`cxj_tableau_order_list_month`(
`buyer_charge_area` string,
`buyer_charge_person` string,
`second_institution` string,
`third_institution` string,
`city` string,
`buyer_charge_zone` string,
`buyer_charge_zone_person` string,
`vendor_city` string,
`vendor_second_institution` string,
`vendor_charge_area` string,
`vendor_charge_person` string,
`insurance_case_no` string,
`enquiry_id` string,
`offer_id` string,
`order_id` string,
`order_no` string,
`total_quantity` bigint,
`order_total_amount` decimal(10,2),
`status` string,
`status1` string,
`order_platform_type` string,
`buyer_company_id` string,
`um_code` string,
`buyer_company_name` string,
`vendor_company_id` string,
`vendor_company_name` string,
`vin_code` string,
`enquiry_car_brand` string,
`order_payment_method` string,
`order_payment_method_1` string,
`is_in_black_list` string,
`vendor_company_type` string,
`created_at` string,
`status_update_at` string,
`order_package_time` string,
`order_take_time` string)
ROW FORMAT SERDE
'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.mapred.TextInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_temp@cxj_tableau_order_list_month
PREHOOK: Output: database:chejianer_temp
POSTHOOK: query: CREATE EXTERNAL TABLE `chejianer_temp`.`cxj_tableau_order_list_month`(
`buyer_charge_area` string,
`buyer_charge_person` string,
`second_institution` string,
`third_institution` string,
`city` string,
`buyer_charge_zone` string,
`buyer_charge_zone_person` string,
`vendor_city` string,
`vendor_second_institution` string,
`vendor_charge_area` string,
`vendor_charge_person` string,
`insurance_case_no` string,
`enquiry_id` string,
`offer_id` string,
`order_id` string,
`order_no` string,
`total_quantity` bigint,
`order_total_amount` decimal(10,2),
`status` string,
`status1` string,
`order_platform_type` string,
`buyer_company_id` string,
`um_code` string,
`buyer_company_name` string,
`vendor_company_id` string,
`vendor_company_name` string,
`vin_code` string,
`enquiry_car_brand` string,
`order_payment_method` string,
`order_payment_method_1` string,
`is_in_black_list` string,
`vendor_company_type` string,
`created_at` string,
`status_update_at` string,
`order_package_time` string,
`order_take_time` string)
ROW FORMAT SERDE
'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.mapred.TextInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_temp@cxj_tableau_order_list_month
POSTHOOK: Output: database:chejianer_temp
PREHOOK: query: CREATE TABLE `chejianer_temp`.`hhq_daily_trade_report_unique_order_detail_total`(
`created_at` string,
`paid_time` string,
`cancel_time` string,
`status_update_at` string,
`package_at` string,
`package_create_min` double,
`dt` string,
`package_dt` string,
`order_take_dt_at` string,
`order_take_dt` string,
`insurance_case_no` string,
`enquiry_id` string,
`enquiry_dt` string,
`offer_created_at` string,
`order_source` string,
`offer_id` string,
`vin_code` string,
`plate_number` string,
`vehicle_flag` string,
`enquiry_source` string,
`not_bidding` string,
`enquiry_car_brand` string,
`enquiry_car_model` string,
`car_brand` string,
`car_model` string,
`logo` string,
`description` string,
`description_extra` string,
`order_no` string,
`status1` string,
`order_status` string,
`order_id` string,
`order_total_quantity` bigint,
`order_total_amount` decimal(16,8),
`is_invoice_required` string,
`include_tax` string,
`rk` bigint,
`gmv_type` string,
`order_type1` string,
`order_type` string,
`payment_type1` string,
`payment_type` string,
`wchat_flag` string,
`buyer_company_id` string,
`order_buyer_name` string,
`um_code` string,
`buyer_company_name` string,
`buyer_second_institution` string,
`vendor_company_id` string,
`vendor_company_name` string,
`vendor_second_institution` string,
`order_deal_type` string,
`is_core_buyer_company_flag` string,
`is_workday_flag` string,
`vendor_company_type` string,
`institution_code` string,
`oe_brands` string,
`assess_um_code` string,
`operator_name` string,
`b_city` string,
`b_charge_zone` string,
`b_charge_zone_person` string,
`b_charge_person` string,
`b_charge_area` string,
`real_buyer_company_name` string,
`v_city` string,
`v_charge_person` string,
`v_charge_area` string,
`b_county` string,
`v_county` string,
`ym` string,
`month_days` bigint,
`total_sku` bigint,
`total_amount` decimal(38,2),
`total_coupon` double,
`q0_yclt_amount` decimal(38,17),
`q0_yclt_coupon` double,
`q1_yclt_amount` decimal(38,17),
`q1_yclt_coupon` double,
`q2_ptpp_amount` decimal(38,17),
`q2_ptpp_coupon` double,
`q3_hyj_amount` decimal(38,17),
`q3_hyj_coupon` double,
`q4_qt_amount` decimal(38,17),
`q4_qt_coupon` double,
`q5_shpp_amount` decimal(38,17),
`q5_shpp_coupon` double,
`q6_rzpp_amount` decimal(38,17),
`q6_rzpp_coupon` double,
`q7_zzz_amount` decimal(38,17),
`q7_zzz_coupon` double)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_temp@hhq_daily_trade_report_unique_order_detail_total
PREHOOK: Output: database:chejianer_temp
POSTHOOK: query: CREATE TABLE `chejianer_temp`.`hhq_daily_trade_report_unique_order_detail_total`(
`created_at` string,
`paid_time` string,
`cancel_time` string,
`status_update_at` string,
`package_at` string,
`package_create_min` double,
`dt` string,
`package_dt` string,
`order_take_dt_at` string,
`order_take_dt` string,
`insurance_case_no` string,
`enquiry_id` string,
`enquiry_dt` string,
`offer_created_at` string,
`order_source` string,
`offer_id` string,
`vin_code` string,
`plate_number` string,
`vehicle_flag` string,
`enquiry_source` string,
`not_bidding` string,
`enquiry_car_brand` string,
`enquiry_car_model` string,
`car_brand` string,
`car_model` string,
`logo` string,
`description` string,
`description_extra` string,
`order_no` string,
`status1` string,
`order_status` string,
`order_id` string,
`order_total_quantity` bigint,
`order_total_amount` decimal(16,8),
`is_invoice_required` string,
`include_tax` string,
`rk` bigint,
`gmv_type` string,
`order_type1` string,
`order_type` string,
`payment_type1` string,
`payment_type` string,
`wchat_flag` string,
`buyer_company_id` string,
`order_buyer_name` string,
`um_code` string,
`buyer_company_name` string,
`buyer_second_institution` string,
`vendor_company_id` string,
`vendor_company_name` string,
`vendor_second_institution` string,
`order_deal_type` string,
`is_core_buyer_company_flag` string,
`is_workday_flag` string,
`vendor_company_type` string,
`institution_code` string,
`oe_brands` string,
`assess_um_code` string,
`operator_name` string,
`b_city` string,
`b_charge_zone` string,
`b_charge_zone_person` string,
`b_charge_person` string,
`b_charge_area` string,
`real_buyer_company_name` string,
`v_city` string,
`v_charge_person` string,
`v_charge_area` string,
`b_county` string,
`v_county` string,
`ym` string,
`month_days` bigint,
`total_sku` bigint,
`total_amount` decimal(38,2),
`total_coupon` double,
`q0_yclt_amount` decimal(38,17),
`q0_yclt_coupon` double,
`q1_yclt_amount` decimal(38,17),
`q1_yclt_coupon` double,
`q2_ptpp_amount` decimal(38,17),
`q2_ptpp_coupon` double,
`q3_hyj_amount` decimal(38,17),
`q3_hyj_coupon` double,
`q4_qt_amount` decimal(38,17),
`q4_qt_coupon` double,
`q5_shpp_amount` decimal(38,17),
`q5_shpp_coupon` double,
`q6_rzpp_amount` decimal(38,17),
`q6_rzpp_coupon` double,
`q7_zzz_amount` decimal(38,17),
`q7_zzz_coupon` double)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_temp@hhq_daily_trade_report_unique_order_detail_total
POSTHOOK: Output: database:chejianer_temp
PREHOOK: query: CREATE TABLE `chejianer_temp`.`hhq_daily_trade_report_unique_order_part_detail`(
`car_brand_type` string,
`created_at` string,
`paid_time` string,
`cancel_time` string,
`status_update_at` string,
`package_at` string,
`package_create_min` double,
`dt` string,
`package_dt` string,
`package_dt1` string,
`order_take_at` string,
`order_take_dt` string,
`insurance_case_no` string,
`enquiry_id` string,
`enquiry_source` string,
`enquiry_trace_source` string,
`enquiry_dt` string,
`order_source` string,
`offer_id` string,
`offer_at` string,
`vin_code` string,
`plate_number` string,
`vehicle_type` string,
`vehicle_flag` string,
`tid` bigint,
`not_bidding` string,
`enquiry_car_brand` string,
`enquiry_car_model` string,
`car_brand` string,
`car_model` string,
`logo` string,
`description` string,
`description_extra` string,
`order_no` string,
`order_status` string,
`order_id` string,
`order_total_quantity` bigint,
`order_total_amount` decimal(16,8),
`goods_platform_discount` decimal(10,2),
`goods_coupon_discount` decimal(10,2),
`rk` bigint,
`gmv_type` string,
`order_type1` string,
`order_type` string,
`payment_type1` string,
`payment_type` string,
`wchat_flag` string,
`buyer_account_id` string,
`buyer_company_id` string,
`um_code` string,
`buyer_company_name` string,
`buyer_second_institution` string,
`vendor_company_id` string,
`vendor_company_name` string,
`vendor_second_institution` string,
`order_deal_type` string,
`is_core_buyer_company_flag` string,
`is_workday_flag` string,
`vendor_company_type` string,
`institution_code` string,
`oe_brands` string,
`assess_um_code` string,
`b_city` string,
`b_charge_zone` string,
`b_charge_zone_person` string,
`b_charge_person` string,
`b_charge_area` string,
`real_buyer_company_name` string,
`v_city` string,
`v_charge_zone` string,
`v_charge_zone_person` string,
`v_charge_person` string,
`v_charge_area` string,
`b_county` string,
`v_county` string,
`ym` string,
`month_days` bigint,
`total_sku` bigint,
`total_amount` decimal(38,2),
`total_coupon` double,
`q0_yclt_amount` decimal(38,17),
`q0_yclt_cnt` bigint,
`q0_yclt_coupon` double,
`q1_yclt_amount` decimal(38,17),
`q1_yclt_coupon` double,
`q1_yclt_cnt` bigint,
`q2_ptpp_amount` decimal(38,17),
`q2_ptpp_cnt` bigint,
`q2_ptpp_coupon` double,
`q3_hyj_amount` decimal(38,17),
`q3_hyj_cnt` bigint,
`q3_hyj_coupon` double,
`q4_qt_amount` decimal(38,17),
`q4_qt_cnt` bigint,
`q4_qt_coupon` double,
`q5_shpp_amount` decimal(38,17),
`q5_shpp_cnt` bigint,
`q5_shpp_coupon` double,
`q6_rzpp_amount` decimal(38,17),
`q6_rzpp_cnt` bigint,
`q6_rzpp_coupon` double,
`q7_zzz_amount` decimal(38,17),
`q7_zzz_cnt` bigint,
`q7_zzz_coupon` double,
`sop_id` string,
`part_enquiry_id` string,
`part_offer_id` string,
`oe_code` string,
`part_name` string,
`quantity` bigint,
`quality1` string,
`quality` string,
`part_brand` string,
`price` decimal(10,2),
`coupon_amount` double,
`sop_include_tax` string,
`logistics_package_id` string,
`remark` string,
`quality_assurance_period` bigint,
`tag_type` string,
`product_id` bigint,
`eshop_type` string)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_temp@hhq_daily_trade_report_unique_order_part_detail
PREHOOK: Output: database:chejianer_temp
POSTHOOK: query: CREATE TABLE `chejianer_temp`.`hhq_daily_trade_report_unique_order_part_detail`(
`car_brand_type` string,
`created_at` string,
`paid_time` string,
`cancel_time` string,
`status_update_at` string,
`package_at` string,
`package_create_min` double,
`dt` string,
`package_dt` string,
`package_dt1` string,
`order_take_at` string,
`order_take_dt` string,
`insurance_case_no` string,
`enquiry_id` string,
`enquiry_source` string,
`enquiry_trace_source` string,
`enquiry_dt` string,
`order_source` string,
`offer_id` string,
`offer_at` string,
`vin_code` string,
`plate_number` string,
`vehicle_type` string,
`vehicle_flag` string,
`tid` bigint,
`not_bidding` string,
`enquiry_car_brand` string,
`enquiry_car_model` string,
`car_brand` string,
`car_model` string,
`logo` string,
`description` string,
`description_extra` string,
`order_no` string,
`order_status` string,
`order_id` string,
`order_total_quantity` bigint,
`order_total_amount` decimal(16,8),
`goods_platform_discount` decimal(10,2),
`goods_coupon_discount` decimal(10,2),
`rk` bigint,
`gmv_type` string,
`order_type1` string,
`order_type` string,
`payment_type1` string,
`payment_type` string,
`wchat_flag` string,
`buyer_account_id` string,
`buyer_company_id` string,
`um_code` string,
`buyer_company_name` string,
`buyer_second_institution` string,
`vendor_company_id` string,
`vendor_company_name` string,
`vendor_second_institution` string,
`order_deal_type` string,
`is_core_buyer_company_flag` string,
`is_workday_flag` string,
`vendor_company_type` string,
`institution_code` string,
`oe_brands` string,
`assess_um_code` string,
`b_city` string,
`b_charge_zone` string,
`b_charge_zone_person` string,
`b_charge_person` string,
`b_charge_area` string,
`real_buyer_company_name` string,
`v_city` string,
`v_charge_zone` string,
`v_charge_zone_person` string,
`v_charge_person` string,
`v_charge_area` string,
`b_county` string,
`v_county` string,
`ym` string,
`month_days` bigint,
`total_sku` bigint,
`total_amount` decimal(38,2),
`total_coupon` double,
`q0_yclt_amount` decimal(38,17),
`q0_yclt_cnt` bigint,
`q0_yclt_coupon` double,
`q1_yclt_amount` decimal(38,17),
`q1_yclt_coupon` double,
`q1_yclt_cnt` bigint,
`q2_ptpp_amount` decimal(38,17),
`q2_ptpp_cnt` bigint,
`q2_ptpp_coupon` double,
`q3_hyj_amount` decimal(38,17),
`q3_hyj_cnt` bigint,
`q3_hyj_coupon` double,
`q4_qt_amount` decimal(38,17),
`q4_qt_cnt` bigint,
`q4_qt_coupon` double,
`q5_shpp_amount` decimal(38,17),
`q5_shpp_cnt` bigint,
`q5_shpp_coupon` double,
`q6_rzpp_amount` decimal(38,17),
`q6_rzpp_cnt` bigint,
`q6_rzpp_coupon` double,
`q7_zzz_amount` decimal(38,17),
`q7_zzz_cnt` bigint,
`q7_zzz_coupon` double,
`sop_id` string,
`part_enquiry_id` string,
`part_offer_id` string,
`oe_code` string,
`part_name` string,
`quantity` bigint,
`quality1` string,
`quality` string,
`part_brand` string,
`price` decimal(10,2),
`coupon_amount` double,
`sop_include_tax` string,
`logistics_package_id` string,
`remark` string,
`quality_assurance_period` bigint,
`tag_type` string,
`product_id` bigint,
`eshop_type` string)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_temp@hhq_daily_trade_report_unique_order_part_detail
POSTHOOK: Output: database:chejianer_temp
PREHOOK: query: CREATE TABLE `chejianer_temp`.`hhq_enquiry_offer_parts_detail`(
`car_brand_type` string,
`enquiry_type` string,
`um_code` string,
`third_institution` string,
`insurance_case_no` string,
`ea_status` bigint,
`e_id` string,
`enquiry_id` string,
`ea_enquiry_id` string,
`id` string,
`idsec_enquiry_id` string,
`not_bidding` string,
`buyer_enquiry_id` string,
`buyer_account_id` string,
`buyer_company_id` string,
`true_company` string,
`buyer_company_name` string,
`buyer_company_city` string,
`buyer_company_county` string,
`buyer_charge_area` string,
`buyer_charge_person` string,
`buyer_second_institution` string,
`buyer_third_institution` string,
`buyer_charge_zone` string,
`buyer_charge_zone_person` string,
`assess_um_code` string,
`enquiry_intention_type` int,
`enquiry_intention_flag` string,
`real_buyer_company_name` string,
`true_vendor_company` string,
`vendor_company_type` string,
`vendor_company_id` string,
`is_direct_vendor_company` string,
`vendor_company_name` string,
`vendor_company_city` string,
`vendor_company_county` string,
`vendor_charge_area` string,
`vendor_charge_person` string,
`vendor_second_institution` string,
`enquiry_dt` string,
`begin_replied_dt` string,
`acknowledged_dt` string,
`reply_type` string,
`reply_timediff` double,
`allocation_type` bigint,
`enquiry_allocation_id` string,
`enquiry_allocation_status` bigint,
`enquiry_allocation_status_update_at` string,
`pe_vehicle_type` string,
`vehicle_flag` string,
`e_source` string,
`enquiry_source` string,
`enquiry_car_brand` string,
`enquiry_car_model` string,
`enquiry_car_desc` string,
`vin_code` string,
`enquiry_parts_num` bigint,
`empty_offer_parts_cnt` bigint,
`enquiry_offer_type` string,
`enquiry_offer_type_0610` string,
`part_enquiry_id` string,
`eas_enquiry_app_source` bigint,
`enquiry_trace_source` string,
`pet_source` bigint,
`part_trace_source` string,
`pe_oe_code` string,
`sys_oe_codes` string,
`oe_code` string,
`nsf_flag` string,
`sku_type` string,
`part_name` string,
`part_enquiry_status` bigint,
`quantity` bigint,
`remarks` string,
`favorite_quality` string,
`favorite_qualities` string,
`car_brand` string,
`plate_number` string,
`part_offer_id` string,
`offer_id` string,
`part_offer_quality` string,
`oe_quality_type` string,
`part_offer_brand` string,
`price_with_tax` decimal(10,2),
`price_without_tax` decimal(10,2),
`part_offer_status` string,
`part_offer_type` string,
`part_price` decimal(10,2),
`is_fill_rate_satisfied` string,
`buyer_account_name` string,
`buyer_account_role` string,
`vendor_account_id` string,
`vendor_account_name` string,
`vendor_account_role` string,
`enquiry_bid` string,
`enquiry_offer_flag` string,
`desc_rk` bigint,
`asc_rk` bigint,
`response_time` double)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
PREHOOK: type: CREATETABLE
PREHOOK: Output: chejianer_temp@hhq_enquiry_offer_parts_detail
PREHOOK: Output: database:chejianer_temp
POSTHOOK: query: CREATE TABLE `chejianer_temp`.`hhq_enquiry_offer_parts_detail`(
`car_brand_type` string,
`enquiry_type` string,
`um_code` string,
`third_institution` string,
`insurance_case_no` string,
`ea_status` bigint,
`e_id` string,
`enquiry_id` string,
`ea_enquiry_id` string,
`id` string,
`idsec_enquiry_id` string,
`not_bidding` string,
`buyer_enquiry_id` string,
`buyer_account_id` string,
`buyer_company_id` string,
`true_company` string,
`buyer_company_name` string,
`buyer_company_city` string,
`buyer_company_county` string,
`buyer_charge_area` string,
`buyer_charge_person` string,
`buyer_second_institution` string,
`buyer_third_institution` string,
`buyer_charge_zone` string,
`buyer_charge_zone_person` string,
`assess_um_code` string,
`enquiry_intention_type` int,
`enquiry_intention_flag` string,
`real_buyer_company_name` string,
`true_vendor_company` string,
`vendor_company_type` string,
`vendor_company_id` string,
`is_direct_vendor_company` string,
`vendor_company_name` string,
`vendor_company_city` string,
`vendor_company_county` string,
`vendor_charge_area` string,
`vendor_charge_person` string,
`vendor_second_institution` string,
`enquiry_dt` string,
`begin_replied_dt` string,
`acknowledged_dt` string,
`reply_type` string,
`reply_timediff` double,
`allocation_type` bigint,
`enquiry_allocation_id` string,
`enquiry_allocation_status` bigint,
`enquiry_allocation_status_update_at` string,
`pe_vehicle_type` string,
`vehicle_flag` string,
`e_source` string,
`enquiry_source` string,
`enquiry_car_brand` string,
`enquiry_car_model` string,
`enquiry_car_desc` string,
`vin_code` string,
`enquiry_parts_num` bigint,
`empty_offer_parts_cnt` bigint,
`enquiry_offer_type` string,
`enquiry_offer_type_0610` string,
`part_enquiry_id` string,
`eas_enquiry_app_source` bigint,
`enquiry_trace_source` string,
`pet_source` bigint,
`part_trace_source` string,
`pe_oe_code` string,
`sys_oe_codes` string,
`oe_code` string,
`nsf_flag` string,
`sku_type` string,
`part_name` string,
`part_enquiry_status` bigint,
`quantity` bigint,
`remarks` string,
`favorite_quality` string,
`favorite_qualities` string,
`car_brand` string,
`plate_number` string,
`part_offer_id` string,
`offer_id` string,
`part_offer_quality` string,
`oe_quality_type` string,
`part_offer_brand` string,
`price_with_tax` decimal(10,2),
`price_without_tax` decimal(10,2),
`part_offer_status` string,
`part_offer_type` string,
`part_price` decimal(10,2),
`is_fill_rate_satisfied` string,
`buyer_account_name` string,
`buyer_account_role` string,
`vendor_account_id` string,
`vendor_account_name` string,
`vendor_account_role` string,
`enquiry_bid` string,
`enquiry_offer_flag` string,
`desc_rk` bigint,
`asc_rk` bigint,
`response_time` double)
ROW FORMAT SERDE
'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
STORED AS INPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat'
OUTPUTFORMAT
'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: chejianer_temp@hhq_enquiry_offer_parts_detail
POSTHOOK: Output: database:chejianer_temp
WARNING: Comparing bigint and string may result in loss of information.
WARNING: Comparing bigint and string may result in loss of information.
WARNING: Comparing bigint and string may result in loss of information.
WARNING: Comparing bigint and string may result in loss of information.
PREHOOK: query: create table if not exists chejianer_temp.hhq_enquiry_offer_statics as
select 
case cast
(
    vc.status as string
)
when '0' then '未审核'
when '1' then '已审核'
when '2' then '已拒绝'
when '3' then '其他'
when '4' then '已关闭'
when '5' then '申请开店中'
when '6' then '资质资料审核通过'
else cast
(
    vc.status as string
) end vendor_company_status_flag,
a.*,
b.order_cnt,
b.deal_order_cnt,
b.order_total_amount,
b.deal_order_total_amount,
b.package_in_48h_order_cnt,
b.deal_order_total_amount_in_48h,
b.online_order_cnt,
b.online_deal_order_cnt,
b.online_order_total_amount,
b.online_deal_order_total_amount,
b.after_order_cnt,
b.after_order_amount,
c.change_enquiry_offer_cnt,
c.change_enquiry_offer_parts_cnt,
d.enquiry_parts_num kh_enquiry_parts_num,
d.offer_parts_num kh_enquiry_offer_parts_num,
d.response_time kh_response_time,
d.offer_time kh_offer_time,
d.enquiry_parts_num_new,
d.enquiry_parts_num_new kh_enquiry_parts_num_new,
d.offer_parts_num_new kh_offer_parts_num_new,
d.response_time_new kh_response_time_new,
d.offer_time_new kh_offer_time_new,
e.in_48h kh_in_48h,
e.out_48h kh_out_48h,
e.total_order_cnt kh_total_order_cnt,
f.enquiry_cnt kh_enquiry_cnt,
f.offer_parts_num kh_offer_parts_num,
f.deal_sku_cnt kh_deal_sku_cnt,
f.after_sku_cnt kh_after_sku_cnt
from 
(
    select d.vendor_company_id,
    d.vendor_company_name,
    d.enquiry_type,
    d.um_code,
    d.third_institution,
    nvl
    (
        d.insurance_case_no,
        0
    ) insurance_case_no,
    d.vendor_charge_area,
    d.vendor_charge_person,
    d.vendor_second_institution,
    d.vendor_company_city,
    d.vendor_company_county,
    d.true_vendor_company,
    d.vendor_company_type,
    d.vehicle_flag,
    d.is_direct_vendor_company,
    substr
    (
        d.enquiry_dt,
        1,
        10
    ) dt,
    d.enquiry_source,
    d.enquiry_trace_source,
    d.enquiry_car_brand,
    d.car_brand_type enquiry_car_brand_type,
    d.buyer_enquiry_id,
    d.enquiry_id,
    d.vin_code,
    d.not_bidding,
    d.vendor_account_id,
    d.vendor_account_name,
    d.vendor_account_role,
    d.buyer_company_id,
    d.buyer_company_name,
    d.true_company,
    d.buyer_charge_area,
    d.buyer_charge_person,
    d.buyer_second_institution,
    d.buyer_company_city,
    d.buyer_company_county,
    d.reply_type,
    d.buyer_third_institution,
    d.buyer_charge_zone,
    d.buyer_charge_zone_person,
    d.assess_um_code,
    d.enquiry_intention_type,
    d.enquiry_intention_flag,
    count
    (
        distinct d.enquiry_allocation_id
    ) enquiry_cnt,
    count
    (
        distinct case when lq.lq_app_source = '1' then d.enquiry_allocation_id
        end
    ) enquiry_cnt_pc_lq,
    count
    (
        distinct case when lq.lq_app_source in 
        (
            '2',
            '3'
        ) then d.enquiry_allocation_id end
    ) enquiry_cnt_app_lq,
    count
    (
        distinct case when lq.lq_app_source in 
        (
            '4'
        ) then d.enquiry_allocation_id end
    ) enquiry_cnt_im_lq,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价' then d.enquiry_allocation_id
        end
    ) offer_cnt,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        and bj.bj_app_source = '1' then d.enquiry_allocation_id end
    ) offer_cnt_pc_bj,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        and bj.bj_app_source in 
        (
            '2',
            '3'
        ) then d.enquiry_allocation_id end
    ) offer_cnt_app_bj,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        and bj.bj_app_source in 
        (
            '4'
        ) then d.enquiry_allocation_id end
    ) offer_cnt_im_bj,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 10 then d.enquiry_allocation_id end
    ) offer_cnt_min_10,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 20 then d.enquiry_allocation_id end
    ) offer_cnt_min_20,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 30 then d.enquiry_allocation_id end
    ) offer_cnt_min_30,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 60 then d.enquiry_allocation_id end
    ) offer_cnt_min_60,
    count
    (
        distinct case when d.enquiry_offer_flag = '超时报价' then d.enquiry_allocation_id
        end
    ) offer_over_cnt,
    count
    (
        distinct case when d.enquiry_offer_flag = '未报价' then d.enquiry_allocation_id
        end
    ) empty_offer_cnt,
    count
    (
        distinct case when d.enquiry_offer_flag = '无货报价'
        and d.empty_offer_parts_cnt = d.enquiry_parts_num then d.enquiry_allocation_id
        end
    ) all_empty_offer_cnt,
    count
    (
        distinct d.part_enquiry_id
    ) enquiry_total_parts_num,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) enquiry_offer_price_parts_num,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) / count
    (
        distinct d.part_enquiry_id
    ) enquiry_offer_price_parts_ratio,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) /
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价' then d.part_enquiry_id
        end
    ) enquiry_offer_price_parts_ratio_offer,
    count
    (
        distinct case when d.enquiry_type = '直供'
        and d.desc_rk = 1
        and d.part_offer_status = '1' then d.part_enquiry_id end
    ) offer_no_parts_num,
    count
    (
        distinct case when d.ea_status = '4' then d.enquiry_allocation_id end
    ) total_empty_offer_cnt,
    count
    (
        distinct case when d.ea_status = '4' then d.part_enquiry_id end
    ) total_offer_no_parts_num,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 5 then d.enquiry_allocation_id end
    ) response_cnt_min_5,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 10 then d.enquiry_allocation_id end
    ) response_cnt_min_10,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 20 then d.enquiry_allocation_id end
    ) response_cnt_min_20,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 30 then d.enquiry_allocation_id end
    ) response_cnt_min_30,
    d.response_time
    from chejianer_temp.hhq_enquiry_offer_parts_detail d
    left join 
    (
        select distinct app_source lq_app_source,
        table_id 
        from chejianer_mask.trading_app_source_record tasr
        where created_at>= '2021-01-01'
        and tasr.type = 2
        and tasr.op = 200
    ) lq on d.enquiry_allocation_id = lq.table_id
    left join 
    (
        select distinct app_source bj_app_source,
        table_id 
        from chejianer_mask.trading_app_source_record tasr
        where created_at>= '2021-01-01'
        and tasr.type = 3
        and tasr.op = 300
    ) bj on d.offer_id = bj.table_id 
    where 
    substr
    (
        d.enquiry_dt,
        1,
        10
    )>= '2021-01-01' 
    group by d.vendor_company_id,
    d.vendor_company_name,
    d.enquiry_type,
    d.um_code,
    d.third_institution,
    nvl
    (
        d.insurance_case_no,
        0
    ),
    d.vendor_charge_area,
    d.vendor_charge_person,
    d.vendor_second_institution,
    d.vendor_company_city,
    d.vendor_company_county,
    d.true_vendor_company,
    d.vendor_company_type,
    d.vehicle_flag,
    d.is_direct_vendor_company,
    substr
    (
        d.enquiry_dt,
        1,
        10
    ),
    d.enquiry_source,
    d.enquiry_trace_source,
    d.enquiry_car_brand,
    d.car_brand_type,
    d.buyer_enquiry_id,
    d.enquiry_id,
    d.vin_code,
    d.not_bidding,
    d.vendor_account_id,
    d.vendor_account_name,
    d.vendor_account_role,
    d.buyer_company_id,
    d.buyer_company_name,
    d.true_company,
    d.buyer_charge_area,
    d.buyer_charge_person,
    d.buyer_second_institution,
    d.buyer_company_city,
    d.buyer_company_county,
    d.reply_type,
    d.buyer_third_institution,
    d.buyer_charge_zone,
    d.buyer_charge_zone_person,
    d.assess_um_code,
    d.enquiry_intention_type,
    d.enquiry_intention_flag,
    d.response_time
) a
left join 
(
    select 
    o.enquiry_id,
    substr
    (
        d.enquiry_dt,
        1,
        10
    ) dt,
    nvl
    (
        insurance_case_no,
        0
    ) insurance_case_no,
    o.buyer_company_id,
    o.vendor_company_id,
    case when o.order_platform_type = '4' then '保险理赔系统触发直供' when o.order_platform_type
    = '5' then '修理厂自主直供' else '其他' end
    order_source_type,
    count
    (
        distinct o.order_no
    )
    order_cnt,
    count
    (
        distinct case when o.status in 
        (
            '1',
            '4'
        ) then o.order_no end
    ) deal_order_cnt,
    count
    (
        distinct case when 
        (
            unix_timestamp
            (
                p.package_at
            )/3600-unix_timestamp
            (
                o.created_at
            )/3600
        )<=48 then o.order_no end
    ) package_in_48h_order_cnt,
    sum
    (
        o.order_total_amount
    )
    order_total_amount,
    sum
    (
        case when o.status in 
        (
            '1',
            '4'
        ) then o.order_total_amount else 0 end
    ) deal_order_total_amount,
    sum
    (
        case when o.status in 
        (
            '1',
            '4'
        )
        and 
        (
            unix_timestamp
            (
                p.package_at
            )/3600-unix_timestamp
            (
                o.created_at
            )/3600
        )<=48 then o.order_total_amount else 0 end
    ) deal_order_total_amount_in_48h,
    count
    (
        distinct case when o.order_payment_method IN 
        (
            '2',
            '3',
            '4',
            '9',
            '10'
        ) then o.order_no end
    ) online_order_cnt,
    count
    (
        distinct case when o.status in 
        (
            '1',
            '4'
        )
        and o.order_payment_method IN 
        (
            '2',
            '3',
            '4',
            '9',
            '10'
        ) then o.order_no end
    ) online_deal_order_cnt,
    sum
    (
        case when o.order_payment_method IN 
        (
            '2',
            '3',
            '4',
            '9',
            '10'
        ) then o.order_total_amount else 0 end
    ) online_order_total_amount,
    sum
    (
        case when o.status in 
        (
            '1',
            '4'
        )
        and o.order_payment_method IN 
        (
            '2',
            '3',
            '4',
            '9',
            '10'
        ) then o.order_total_amount else 0 end
    ) online_deal_order_total_amount,
    count
    (
        distinct aft.order_no
    ) after_order_cnt,
    sum
    (
        nvl
        (
            aft.order_after_amount,
            0
        )
    ) after_order_amount 
    from chejianer_mask.order_ o 
    left join 
    (
        select distinct buyer_enquiry_id,
        insurance_case_no,
        car_brand,
        car_model,
        has_fail
        from chejianer_mask.insurance_direct_supply_enquiry_case
        where has_fail = '0'
    ) idsec on o.enquiry_id = idsec.buyer_enquiry_id 
    left join 
    (
        select distinct bl.company_id
        FROM chejianer_mask.blacklist bl
        WHERE bl.company_type = 0
    ) b1 on o.buyer_company_id = b1.company_id
    left join 
    (
        select distinct bl.company_id
        FROM chejianer_mask.blacklist bl
        WHERE bl.company_type = 1
    ) b2 on o.vendor_company_id = b2.company_id
    left join 
    (
        select distinct bl.order_id
        FROM chejianer_mask.blacklist bl
        WHERE bl.company_type = 1
    ) b3 on o.id = b3.order_id
    left join 
    (
        select
        order_no,
        sum
        (
            nvl
            (
                refund_amount,
                0
            )
        )
        order_after_amount
        from chejianer_mask.order_after_sale 
        where status = 2
        and after_sale_reason <>6
        and type not in 
        (
            2,
            4,
            6,
            7
        ) group by
        order_no
    ) aft on o.order_no = aft.order_no 
    join 
    (
        select distinct d.enquiry_dt,
        d.enquiry_id,
        d.vendor_company_id,
        d.vendor_company_name,
        d.vendor_company_city,
        d.buyer_company_id 
        from chejianer_temp.hhq_enquiry_offer_parts_detail d 
        where substr
        (
            d.enquiry_dt,
            1,
            10
        )>= '2021-01-01'
    ) d on o.enquiry_id = d.enquiry_id
    and d.vendor_company_id = o.vendor_company_id
    and d.buyer_company_id = o.buyer_company_id
    left join 
    (
        select
        order_no,
        min
        (
            created_at
        ) as package_at
        from chejianer_mask.order_logistics_package group by
        order_no
    ) p on o.order_no = p.order_no 
    where 
    b1.company_id is null
    and b2.company_id is null
    and b3.order_id is null
    and 
    to_date
    (
        nvl
        (
            o.status_update_at,
            o.created_at
        )
    )>= '2021-01-01'
    group by 
    o.enquiry_id,
    substr
    (
        d.enquiry_dt,
        1,
        10
    ),
    nvl
    (
        insurance_case_no,
        0
    ),
    o.buyer_company_id,
    case when o.order_platform_type = '4' then '保险理赔系统触发直供' when o.order_platform_type
    = '5' then '修理厂自主直供' else '其他' end,
    o.vendor_company_id
) b on a.dt = b.dt
and a.enquiry_id = b.enquiry_id
and a.vendor_company_id = b.vendor_company_id
and a.buyer_company_id = b.buyer_company_id 
left join 
(
    select dt,
    enquiry_source,
    enquiry_id,
    vendor_company_id,
    buyer_company_id,
    insurance_case_no,
    count
    (
        distinct enquiry_id
    ) change_enquiry_offer_cnt,
    count
    (
        distinct part_enquiry_id
    ) change_enquiry_offer_parts_cnt
    from 
    (
        select substr
        (
            enquiry_dt,
            1,
            10
        ) as dt,
        enquiry_source,
        nvl
        (
            insurance_case_no,
            0
        ) insurance_case_no,
        enquiry_id,
        offer_id,
        part_enquiry_id,
        buyer_company_id,
        vendor_company_id,
        count
        (
            distinct part_offer_id
        ) as part_enquiry_offer_num
        from chejianer_temp.hhq_enquiry_offer_parts_detail 
        where part_enquiry_id is not null
        and vendor_company_id is not null 
        group by substr
        (
            enquiry_dt,
            1,
            10
        ),
        enquiry_source,
        nvl
        (
            insurance_case_no,
            0
        ),
        enquiry_id,
        offer_id,
        part_enquiry_id,
        buyer_company_id,
        vendor_company_id
    )a
    where part_enquiry_offer_num>1
    group by dt,
    enquiry_source,
    enquiry_id,
    vendor_company_id,
    buyer_company_id,
    insurance_case_no
) c on a.dt = c.dt
and a.enquiry_id = c.enquiry_id
and a.vendor_company_id = c.vendor_company_id
and a.buyer_company_id = c.buyer_company_id 
left join chejianer_mask.vendor_company vc on a.vendor_company_id = vc.id
left join 
(
    select 
    substr
    (
        enquiry_dt,
        1,
        10
    ) enquiry_day,
    enquiry_id,
    buyer_company_id,
    vendor_company_id,
    offer_id,
    enquiry_parts_num,
    count
    (
        distinct case when part_price>0 then part_enquiry_id end
    ) as offer_parts_num,
    nvl
    (
        max
        (
            response_time
        ),
        0
    ) response_time,
    max
    (
        unix_timestamp
        (
            acknowledged_dt
        )/60-unix_timestamp
        (
            enquiry_dt
        )/60
    ) as offer_time,
    tmp.enquiry_parts_num_new,
    count
    (
        distinct case when part_price>0
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        )>= 9
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        ) <= 18 then part_enquiry_id end
    ) offer_parts_num_new,
    nvl
    (
        max
        (
            case when cast
            (
                substr
                (
                    enquiry_dt,
                    12,
                    2
                ) as int
            )>= 9
            and cast
            (
                substr
                (
                    enquiry_dt,
                    12,
                    2
                ) as int
            ) <= 18 then response_time else 0 end
        ),
        0
    ) response_time_new,
    max
    (
        case when cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        )>= 9
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        ) <= 18 then unix_timestamp
        (
            acknowledged_dt
        )/60-unix_timestamp
        (
            enquiry_dt
        )/60 else 0 end
    ) as offer_time_new 
    from chejianer_temp.hhq_enquiry_offer_parts_detail pd
    left join 
    (
        select 
        enquiry_id e_id,
        count
        (
            distinct part_enquiry_id
        ) enquiry_parts_num_new
        from chejianer_temp.hhq_enquiry_offer_parts_detail 
        where substr
        (
            enquiry_dt,
            1,
            10
        )>='2021-01-01'
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        )>= 9
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        ) <= 18
        group by enquiry_id
    ) tmp on pd.enquiry_id = tmp.e_id
    where part_offer_type in 
    (
        '已报价',
        '接受报价'
    )
    and substr
    (
        enquiry_dt,
        1,
        10
    )>='2021-01-01'
    group by 
    substr
    (
        enquiry_dt,
        1,
        10
    ),
    enquiry_id,
    buyer_company_id,
    vendor_company_id,
    offer_id,
    enquiry_parts_num,
    tmp.enquiry_parts_num_new
) d on a.dt = d.enquiry_day
and a.enquiry_id = d.enquiry_id
and a.vendor_company_id = d.vendor_company_id
and a.buyer_company_id = d.buyer_company_id 
left join 
(
    select
    substr
    (
        e.created_at,
        1,
        10
    ) enquiry_dt,
    o.enquiry_id,
    o.buyer_company_id,
    o.vendor_company_id,
    count
    (
        distinct case when 
        (
            unix_timestamp
            (
                o.package_at
            )/3600-unix_timestamp
            (
                o.created_at
            )/3600
        )<=48 then o.order_no end
    ) in_48h,
    count
    (
        distinct case when 
        (
            unix_timestamp
            (
                o.package_at
            )/3600-unix_timestamp
            (
                o.created_at
            )/3600
        )>48 then o.order_no end
    ) out_48h,
    count
    (
        distinct o.order_no
    ) total_order_cnt 
    from chejianer_temp.hhq_daily_trade_report_unique_order_detail_total
    o 
    join chejianer_mask.enquiry e on o.enquiry_id = e.id
    where substr
    (
        e.created_at,
        1,
        10
    )>='2021-01-01'
    and status1 in 
    (
        '1',
        '4'
    )
    group by 
    substr
    (
        e.created_at,
        1,
        10
    ),
    o.enquiry_id,
    o.buyer_company_id,
    o.vendor_company_id
) e on a.dt = e.enquiry_dt
and a.enquiry_id = e.enquiry_id
and a.vendor_company_id = e.vendor_company_id
and a.buyer_company_id = e.buyer_company_id 
left join 
(
    select 
    t.enquiry_day,
    t.enquiry_id,
    t.buyer_company_id,
    t.vendor_company_id,
    t.enquiry_cnt,
    nvl
    (
        t.offer_parts_num,
        0
    ) offer_parts_num,
    nvl
    (
        t2.deal_sku_cnt,
        0
    ) deal_sku_cnt,
    nvl
    (
        t3.after_sku_cnt,
        0
    ) after_sku_cnt
    from 
    (
        select 
        substr
        (
            enquiry_dt,
            1,
            10
        ) enquiry_day,
        enquiry_id,
        buyer_company_id,
        vendor_company_id,
        count
        (
            distinct enquiry_allocation_id
        ) enquiry_cnt,
        count
        (
            distinct case when part_offer_type in 
            (
                '已报价',
                '接受报价'
            )
            and part_price>0 then part_enquiry_id end
        ) as offer_parts_num 
        from chejianer_temp.hhq_enquiry_offer_parts_detail 
        where substr
        (
            enquiry_dt,
            1,
            10
        )>='2021-01-01'
        group by 
        substr
        (
            enquiry_dt,
            1,
            10
        ),
        enquiry_id,
        buyer_company_id,
        vendor_company_id
    ) t 
    left join 
    (
        select 
        substr
        (
            enquiry_dt,
            1,
            10
        ) enquiry_day,
        enquiry_id,
        buyer_company_id,
        vendor_company_id,
        count
        (
            distinct part_offer_id
        ) deal_sku_cnt
        from chejianer_temp.hhq_daily_trade_report_unique_order_part_detail
        where package_dt>= '2021-01-01'
        and
        order_source = '平台'
        group by 
        substr
        (
            enquiry_dt,
            1,
            10
        ),
        enquiry_id,
        buyer_company_id,
        vendor_company_id
    ) t2 on t.enquiry_day = t2.enquiry_day
    and t.enquiry_id = t2.enquiry_id
    and t.buyer_company_id = t2.buyer_company_id
    and t.vendor_company_id = t2.vendor_company_id
    left join 
    (
        select 
        substr
        (
            e.created_at,
            1,
            10
        ) enquiry_day,
        d.enquiry_id,
        d.buyer_company_id,
        d.vendor_company_id,
        count
        (
            distinct i.sub_order_id
        ) after_sku_cnt 
        from chejianer_mask.order_after_sale oas 
        join chejianer_mask.order_ d on oas.order_no = d.order_no
        join chejianer_mask.order_after_sale_item i on oas.id = i.order_after_sale_id
        join chejianer_mask.enquiry e on d.enquiry_id = e.id
        where oas.inner_status <>6
        and oas.type not in 
        (
            2,
            4,
            6,
            7
        )
        and substr
        (
            oas.created_at,
            1,
            10
        )>= '2021-01-01'
        group by 
        substr
        (
            e.created_at,
            1,
            10
        ),
        d.enquiry_id,
        d.buyer_company_id,
        d.vendor_company_id
    ) t3 on t.enquiry_day = t3.enquiry_day
    and t.enquiry_id = t3.enquiry_id
    and t.buyer_company_id = t3.buyer_company_id
    and t.vendor_company_id = t3.vendor_company_id
) f on a.dt = f.enquiry_day
and a.enquiry_id = f.enquiry_id
and a.vendor_company_id = f.vendor_company_id
and a.buyer_company_id = f.buyer_company_id
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: chejianer_mask@blacklist
PREHOOK: Input: chejianer_mask@enquiry
PREHOOK: Input: chejianer_mask@insurance_direct_supply_enquiry_case
PREHOOK: Input: chejianer_mask@order_
PREHOOK: Input: chejianer_mask@order_after_sale
PREHOOK: Input: chejianer_mask@order_after_sale_item
PREHOOK: Input: chejianer_mask@order_logistics_package
PREHOOK: Input: chejianer_mask@trading_app_source_record
PREHOOK: Input: chejianer_mask@vendor_company
PREHOOK: Input: chejianer_temp@hhq_daily_trade_report_unique_order_detail_total
PREHOOK: Input: chejianer_temp@hhq_daily_trade_report_unique_order_part_detail
PREHOOK: Input: chejianer_temp@hhq_enquiry_offer_parts_detail
PREHOOK: Output: chejianer_temp@hhq_enquiry_offer_statics
PREHOOK: Output: database:chejianer_temp
POSTHOOK: query: create table if not exists chejianer_temp.hhq_enquiry_offer_statics as
select 
case cast
(
    vc.status as string
)
when '0' then '未审核'
when '1' then '已审核'
when '2' then '已拒绝'
when '3' then '其他'
when '4' then '已关闭'
when '5' then '申请开店中'
when '6' then '资质资料审核通过'
else cast
(
    vc.status as string
) end vendor_company_status_flag,
a.*,
b.order_cnt,
b.deal_order_cnt,
b.order_total_amount,
b.deal_order_total_amount,
b.package_in_48h_order_cnt,
b.deal_order_total_amount_in_48h,
b.online_order_cnt,
b.online_deal_order_cnt,
b.online_order_total_amount,
b.online_deal_order_total_amount,
b.after_order_cnt,
b.after_order_amount,
c.change_enquiry_offer_cnt,
c.change_enquiry_offer_parts_cnt,
d.enquiry_parts_num kh_enquiry_parts_num,
d.offer_parts_num kh_enquiry_offer_parts_num,
d.response_time kh_response_time,
d.offer_time kh_offer_time,
d.enquiry_parts_num_new,
d.enquiry_parts_num_new kh_enquiry_parts_num_new,
d.offer_parts_num_new kh_offer_parts_num_new,
d.response_time_new kh_response_time_new,
d.offer_time_new kh_offer_time_new,
e.in_48h kh_in_48h,
e.out_48h kh_out_48h,
e.total_order_cnt kh_total_order_cnt,
f.enquiry_cnt kh_enquiry_cnt,
f.offer_parts_num kh_offer_parts_num,
f.deal_sku_cnt kh_deal_sku_cnt,
f.after_sku_cnt kh_after_sku_cnt
from 
(
    select d.vendor_company_id,
    d.vendor_company_name,
    d.enquiry_type,
    d.um_code,
    d.third_institution,
    nvl
    (
        d.insurance_case_no,
        0
    ) insurance_case_no,
    d.vendor_charge_area,
    d.vendor_charge_person,
    d.vendor_second_institution,
    d.vendor_company_city,
    d.vendor_company_county,
    d.true_vendor_company,
    d.vendor_company_type,
    d.vehicle_flag,
    d.is_direct_vendor_company,
    substr
    (
        d.enquiry_dt,
        1,
        10
    ) dt,
    d.enquiry_source,
    d.enquiry_trace_source,
    d.enquiry_car_brand,
    d.car_brand_type enquiry_car_brand_type,
    d.buyer_enquiry_id,
    d.enquiry_id,
    d.vin_code,
    d.not_bidding,
    d.vendor_account_id,
    d.vendor_account_name,
    d.vendor_account_role,
    d.buyer_company_id,
    d.buyer_company_name,
    d.true_company,
    d.buyer_charge_area,
    d.buyer_charge_person,
    d.buyer_second_institution,
    d.buyer_company_city,
    d.buyer_company_county,
    d.reply_type,
    d.buyer_third_institution,
    d.buyer_charge_zone,
    d.buyer_charge_zone_person,
    d.assess_um_code,
    d.enquiry_intention_type,
    d.enquiry_intention_flag,
    count
    (
        distinct d.enquiry_allocation_id
    ) enquiry_cnt,
    count
    (
        distinct case when lq.lq_app_source = '1' then d.enquiry_allocation_id
        end
    ) enquiry_cnt_pc_lq,
    count
    (
        distinct case when lq.lq_app_source in 
        (
            '2',
            '3'
        ) then d.enquiry_allocation_id end
    ) enquiry_cnt_app_lq,
    count
    (
        distinct case when lq.lq_app_source in 
        (
            '4'
        ) then d.enquiry_allocation_id end
    ) enquiry_cnt_im_lq,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价' then d.enquiry_allocation_id
        end
    ) offer_cnt,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        and bj.bj_app_source = '1' then d.enquiry_allocation_id end
    ) offer_cnt_pc_bj,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        and bj.bj_app_source in 
        (
            '2',
            '3'
        ) then d.enquiry_allocation_id end
    ) offer_cnt_app_bj,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        and bj.bj_app_source in 
        (
            '4'
        ) then d.enquiry_allocation_id end
    ) offer_cnt_im_bj,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 10 then d.enquiry_allocation_id end
    ) offer_cnt_min_10,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 20 then d.enquiry_allocation_id end
    ) offer_cnt_min_20,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 30 then d.enquiry_allocation_id end
    ) offer_cnt_min_30,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 60 then d.enquiry_allocation_id end
    ) offer_cnt_min_60,
    count
    (
        distinct case when d.enquiry_offer_flag = '超时报价' then d.enquiry_allocation_id
        end
    ) offer_over_cnt,
    count
    (
        distinct case when d.enquiry_offer_flag = '未报价' then d.enquiry_allocation_id
        end
    ) empty_offer_cnt,
    count
    (
        distinct case when d.enquiry_offer_flag = '无货报价'
        and d.empty_offer_parts_cnt = d.enquiry_parts_num then d.enquiry_allocation_id
        end
    ) all_empty_offer_cnt,
    count
    (
        distinct d.part_enquiry_id
    ) enquiry_total_parts_num,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) enquiry_offer_price_parts_num,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) / count
    (
        distinct d.part_enquiry_id
    ) enquiry_offer_price_parts_ratio,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) /
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价' then d.part_enquiry_id
        end
    ) enquiry_offer_price_parts_ratio_offer,
    count
    (
        distinct case when d.enquiry_type = '直供'
        and d.desc_rk = 1
        and d.part_offer_status = '1' then d.part_enquiry_id end
    ) offer_no_parts_num,
    count
    (
        distinct case when d.ea_status = '4' then d.enquiry_allocation_id end
    ) total_empty_offer_cnt,
    count
    (
        distinct case when d.ea_status = '4' then d.part_enquiry_id end
    ) total_offer_no_parts_num,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 5 then d.enquiry_allocation_id end
    ) response_cnt_min_5,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 10 then d.enquiry_allocation_id end
    ) response_cnt_min_10,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 20 then d.enquiry_allocation_id end
    ) response_cnt_min_20,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 30 then d.enquiry_allocation_id end
    ) response_cnt_min_30,
    d.response_time
    from chejianer_temp.hhq_enquiry_offer_parts_detail d
    left join 
    (
        select distinct app_source lq_app_source,
        table_id 
        from chejianer_mask.trading_app_source_record tasr
        where created_at>= '2021-01-01'
        and tasr.type = 2
        and tasr.op = 200
    ) lq on d.enquiry_allocation_id = lq.table_id
    left join 
    (
        select distinct app_source bj_app_source,
        table_id 
        from chejianer_mask.trading_app_source_record tasr
        where created_at>= '2021-01-01'
        and tasr.type = 3
        and tasr.op = 300
    ) bj on d.offer_id = bj.table_id 
    where 
    substr
    (
        d.enquiry_dt,
        1,
        10
    )>= '2021-01-01' 
    group by d.vendor_company_id,
    d.vendor_company_name,
    d.enquiry_type,
    d.um_code,
    d.third_institution,
    nvl
    (
        d.insurance_case_no,
        0
    ),
    d.vendor_charge_area,
    d.vendor_charge_person,
    d.vendor_second_institution,
    d.vendor_company_city,
    d.vendor_company_county,
    d.true_vendor_company,
    d.vendor_company_type,
    d.vehicle_flag,
    d.is_direct_vendor_company,
    substr
    (
        d.enquiry_dt,
        1,
        10
    ),
    d.enquiry_source,
    d.enquiry_trace_source,
    d.enquiry_car_brand,
    d.car_brand_type,
    d.buyer_enquiry_id,
    d.enquiry_id,
    d.vin_code,
    d.not_bidding,
    d.vendor_account_id,
    d.vendor_account_name,
    d.vendor_account_role,
    d.buyer_company_id,
    d.buyer_company_name,
    d.true_company,
    d.buyer_charge_area,
    d.buyer_charge_person,
    d.buyer_second_institution,
    d.buyer_company_city,
    d.buyer_company_county,
    d.reply_type,
    d.buyer_third_institution,
    d.buyer_charge_zone,
    d.buyer_charge_zone_person,
    d.assess_um_code,
    d.enquiry_intention_type,
    d.enquiry_intention_flag,
    d.response_time
) a
left join 
(
    select 
    o.enquiry_id,
    substr
    (
        d.enquiry_dt,
        1,
        10
    ) dt,
    nvl
    (
        insurance_case_no,
        0
    ) insurance_case_no,
    o.buyer_company_id,
    o.vendor_company_id,
    case when o.order_platform_type = '4' then '保险理赔系统触发直供' when o.order_platform_type
    = '5' then '修理厂自主直供' else '其他' end
    order_source_type,
    count
    (
        distinct o.order_no
    )
    order_cnt,
    count
    (
        distinct case when o.status in 
        (
            '1',
            '4'
        ) then o.order_no end
    ) deal_order_cnt,
    count
    (
        distinct case when 
        (
            unix_timestamp
            (
                p.package_at
            )/3600-unix_timestamp
            (
                o.created_at
            )/3600
        )<=48 then o.order_no end
    ) package_in_48h_order_cnt,
    sum
    (
        o.order_total_amount
    )
    order_total_amount,
    sum
    (
        case when o.status in 
        (
            '1',
            '4'
        ) then o.order_total_amount else 0 end
    ) deal_order_total_amount,
    sum
    (
        case when o.status in 
        (
            '1',
            '4'
        )
        and 
        (
            unix_timestamp
            (
                p.package_at
            )/3600-unix_timestamp
            (
                o.created_at
            )/3600
        )<=48 then o.order_total_amount else 0 end
    ) deal_order_total_amount_in_48h,
    count
    (
        distinct case when o.order_payment_method IN 
        (
            '2',
            '3',
            '4',
            '9',
            '10'
        ) then o.order_no end
    ) online_order_cnt,
    count
    (
        distinct case when o.status in 
        (
            '1',
            '4'
        )
        and o.order_payment_method IN 
        (
            '2',
            '3',
            '4',
            '9',
            '10'
        ) then o.order_no end
    ) online_deal_order_cnt,
    sum
    (
        case when o.order_payment_method IN 
        (
            '2',
            '3',
            '4',
            '9',
            '10'
        ) then o.order_total_amount else 0 end
    ) online_order_total_amount,
    sum
    (
        case when o.status in 
        (
            '1',
            '4'
        )
        and o.order_payment_method IN 
        (
            '2',
            '3',
            '4',
            '9',
            '10'
        ) then o.order_total_amount else 0 end
    ) online_deal_order_total_amount,
    count
    (
        distinct aft.order_no
    ) after_order_cnt,
    sum
    (
        nvl
        (
            aft.order_after_amount,
            0
        )
    ) after_order_amount 
    from chejianer_mask.order_ o 
    left join 
    (
        select distinct buyer_enquiry_id,
        insurance_case_no,
        car_brand,
        car_model,
        has_fail
        from chejianer_mask.insurance_direct_supply_enquiry_case
        where has_fail = '0'
    ) idsec on o.enquiry_id = idsec.buyer_enquiry_id 
    left join 
    (
        select distinct bl.company_id
        FROM chejianer_mask.blacklist bl
        WHERE bl.company_type = 0
    ) b1 on o.buyer_company_id = b1.company_id
    left join 
    (
        select distinct bl.company_id
        FROM chejianer_mask.blacklist bl
        WHERE bl.company_type = 1
    ) b2 on o.vendor_company_id = b2.company_id
    left join 
    (
        select distinct bl.order_id
        FROM chejianer_mask.blacklist bl
        WHERE bl.company_type = 1
    ) b3 on o.id = b3.order_id
    left join 
    (
        select
        order_no,
        sum
        (
            nvl
            (
                refund_amount,
                0
            )
        )
        order_after_amount
        from chejianer_mask.order_after_sale 
        where status = 2
        and after_sale_reason <>6
        and type not in 
        (
            2,
            4,
            6,
            7
        ) group by
        order_no
    ) aft on o.order_no = aft.order_no 
    join 
    (
        select distinct d.enquiry_dt,
        d.enquiry_id,
        d.vendor_company_id,
        d.vendor_company_name,
        d.vendor_company_city,
        d.buyer_company_id 
        from chejianer_temp.hhq_enquiry_offer_parts_detail d 
        where substr
        (
            d.enquiry_dt,
            1,
            10
        )>= '2021-01-01'
    ) d on o.enquiry_id = d.enquiry_id
    and d.vendor_company_id = o.vendor_company_id
    and d.buyer_company_id = o.buyer_company_id
    left join 
    (
        select
        order_no,
        min
        (
            created_at
        ) as package_at
        from chejianer_mask.order_logistics_package group by
        order_no
    ) p on o.order_no = p.order_no 
    where 
    b1.company_id is null
    and b2.company_id is null
    and b3.order_id is null
    and 
    to_date
    (
        nvl
        (
            o.status_update_at,
            o.created_at
        )
    )>= '2021-01-01'
    group by 
    o.enquiry_id,
    substr
    (
        d.enquiry_dt,
        1,
        10
    ),
    nvl
    (
        insurance_case_no,
        0
    ),
    o.buyer_company_id,
    case when o.order_platform_type = '4' then '保险理赔系统触发直供' when o.order_platform_type
    = '5' then '修理厂自主直供' else '其他' end,
    o.vendor_company_id
) b on a.dt = b.dt
and a.enquiry_id = b.enquiry_id
and a.vendor_company_id = b.vendor_company_id
and a.buyer_company_id = b.buyer_company_id 
left join 
(
    select dt,
    enquiry_source,
    enquiry_id,
    vendor_company_id,
    buyer_company_id,
    insurance_case_no,
    count
    (
        distinct enquiry_id
    ) change_enquiry_offer_cnt,
    count
    (
        distinct part_enquiry_id
    ) change_enquiry_offer_parts_cnt
    from 
    (
        select substr
        (
            enquiry_dt,
            1,
            10
        ) as dt,
        enquiry_source,
        nvl
        (
            insurance_case_no,
            0
        ) insurance_case_no,
        enquiry_id,
        offer_id,
        part_enquiry_id,
        buyer_company_id,
        vendor_company_id,
        count
        (
            distinct part_offer_id
        ) as part_enquiry_offer_num
        from chejianer_temp.hhq_enquiry_offer_parts_detail 
        where part_enquiry_id is not null
        and vendor_company_id is not null 
        group by substr
        (
            enquiry_dt,
            1,
            10
        ),
        enquiry_source,
        nvl
        (
            insurance_case_no,
            0
        ),
        enquiry_id,
        offer_id,
        part_enquiry_id,
        buyer_company_id,
        vendor_company_id
    )a
    where part_enquiry_offer_num>1
    group by dt,
    enquiry_source,
    enquiry_id,
    vendor_company_id,
    buyer_company_id,
    insurance_case_no
) c on a.dt = c.dt
and a.enquiry_id = c.enquiry_id
and a.vendor_company_id = c.vendor_company_id
and a.buyer_company_id = c.buyer_company_id 
left join chejianer_mask.vendor_company vc on a.vendor_company_id = vc.id
left join 
(
    select 
    substr
    (
        enquiry_dt,
        1,
        10
    ) enquiry_day,
    enquiry_id,
    buyer_company_id,
    vendor_company_id,
    offer_id,
    enquiry_parts_num,
    count
    (
        distinct case when part_price>0 then part_enquiry_id end
    ) as offer_parts_num,
    nvl
    (
        max
        (
            response_time
        ),
        0
    ) response_time,
    max
    (
        unix_timestamp
        (
            acknowledged_dt
        )/60-unix_timestamp
        (
            enquiry_dt
        )/60
    ) as offer_time,
    tmp.enquiry_parts_num_new,
    count
    (
        distinct case when part_price>0
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        )>= 9
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        ) <= 18 then part_enquiry_id end
    ) offer_parts_num_new,
    nvl
    (
        max
        (
            case when cast
            (
                substr
                (
                    enquiry_dt,
                    12,
                    2
                ) as int
            )>= 9
            and cast
            (
                substr
                (
                    enquiry_dt,
                    12,
                    2
                ) as int
            ) <= 18 then response_time else 0 end
        ),
        0
    ) response_time_new,
    max
    (
        case when cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        )>= 9
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        ) <= 18 then unix_timestamp
        (
            acknowledged_dt
        )/60-unix_timestamp
        (
            enquiry_dt
        )/60 else 0 end
    ) as offer_time_new 
    from chejianer_temp.hhq_enquiry_offer_parts_detail pd
    left join 
    (
        select 
        enquiry_id e_id,
        count
        (
            distinct part_enquiry_id
        ) enquiry_parts_num_new
        from chejianer_temp.hhq_enquiry_offer_parts_detail 
        where substr
        (
            enquiry_dt,
            1,
            10
        )>='2021-01-01'
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        )>= 9
        and cast
        (
            substr
            (
                enquiry_dt,
                12,
                2
            ) as int
        ) <= 18
        group by enquiry_id
    ) tmp on pd.enquiry_id = tmp.e_id
    where part_offer_type in 
    (
        '已报价',
        '接受报价'
    )
    and substr
    (
        enquiry_dt,
        1,
        10
    )>='2021-01-01'
    group by 
    substr
    (
        enquiry_dt,
        1,
        10
    ),
    enquiry_id,
    buyer_company_id,
    vendor_company_id,
    offer_id,
    enquiry_parts_num,
    tmp.enquiry_parts_num_new
) d on a.dt = d.enquiry_day
and a.enquiry_id = d.enquiry_id
and a.vendor_company_id = d.vendor_company_id
and a.buyer_company_id = d.buyer_company_id 
left join 
(
    select
    substr
    (
        e.created_at,
        1,
        10
    ) enquiry_dt,
    o.enquiry_id,
    o.buyer_company_id,
    o.vendor_company_id,
    count
    (
        distinct case when 
        (
            unix_timestamp
            (
                o.package_at
            )/3600-unix_timestamp
            (
                o.created_at
            )/3600
        )<=48 then o.order_no end
    ) in_48h,
    count
    (
        distinct case when 
        (
            unix_timestamp
            (
                o.package_at
            )/3600-unix_timestamp
            (
                o.created_at
            )/3600
        )>48 then o.order_no end
    ) out_48h,
    count
    (
        distinct o.order_no
    ) total_order_cnt 
    from chejianer_temp.hhq_daily_trade_report_unique_order_detail_total
    o 
    join chejianer_mask.enquiry e on o.enquiry_id = e.id
    where substr
    (
        e.created_at,
        1,
        10
    )>='2021-01-01'
    and status1 in 
    (
        '1',
        '4'
    )
    group by 
    substr
    (
        e.created_at,
        1,
        10
    ),
    o.enquiry_id,
    o.buyer_company_id,
    o.vendor_company_id
) e on a.dt = e.enquiry_dt
and a.enquiry_id = e.enquiry_id
and a.vendor_company_id = e.vendor_company_id
and a.buyer_company_id = e.buyer_company_id 
left join 
(
    select 
    t.enquiry_day,
    t.enquiry_id,
    t.buyer_company_id,
    t.vendor_company_id,
    t.enquiry_cnt,
    nvl
    (
        t.offer_parts_num,
        0
    ) offer_parts_num,
    nvl
    (
        t2.deal_sku_cnt,
        0
    ) deal_sku_cnt,
    nvl
    (
        t3.after_sku_cnt,
        0
    ) after_sku_cnt
    from 
    (
        select 
        substr
        (
            enquiry_dt,
            1,
            10
        ) enquiry_day,
        enquiry_id,
        buyer_company_id,
        vendor_company_id,
        count
        (
            distinct enquiry_allocation_id
        ) enquiry_cnt,
        count
        (
            distinct case when part_offer_type in 
            (
                '已报价',
                '接受报价'
            )
            and part_price>0 then part_enquiry_id end
        ) as offer_parts_num 
        from chejianer_temp.hhq_enquiry_offer_parts_detail 
        where substr
        (
            enquiry_dt,
            1,
            10
        )>='2021-01-01'
        group by 
        substr
        (
            enquiry_dt,
            1,
            10
        ),
        enquiry_id,
        buyer_company_id,
        vendor_company_id
    ) t 
    left join 
    (
        select 
        substr
        (
            enquiry_dt,
            1,
            10
        ) enquiry_day,
        enquiry_id,
        buyer_company_id,
        vendor_company_id,
        count
        (
            distinct part_offer_id
        ) deal_sku_cnt
        from chejianer_temp.hhq_daily_trade_report_unique_order_part_detail
        where package_dt>= '2021-01-01'
        and
        order_source = '平台'
        group by 
        substr
        (
            enquiry_dt,
            1,
            10
        ),
        enquiry_id,
        buyer_company_id,
        vendor_company_id
    ) t2 on t.enquiry_day = t2.enquiry_day
    and t.enquiry_id = t2.enquiry_id
    and t.buyer_company_id = t2.buyer_company_id
    and t.vendor_company_id = t2.vendor_company_id
    left join 
    (
        select 
        substr
        (
            e.created_at,
            1,
            10
        ) enquiry_day,
        d.enquiry_id,
        d.buyer_company_id,
        d.vendor_company_id,
        count
        (
            distinct i.sub_order_id
        ) after_sku_cnt 
        from chejianer_mask.order_after_sale oas 
        join chejianer_mask.order_ d on oas.order_no = d.order_no
        join chejianer_mask.order_after_sale_item i on oas.id = i.order_after_sale_id
        join chejianer_mask.enquiry e on d.enquiry_id = e.id
        where oas.inner_status <>6
        and oas.type not in 
        (
            2,
            4,
            6,
            7
        )
        and substr
        (
            oas.created_at,
            1,
            10
        )>= '2021-01-01'
        group by 
        substr
        (
            e.created_at,
            1,
            10
        ),
        d.enquiry_id,
        d.buyer_company_id,
        d.vendor_company_id
    ) t3 on t.enquiry_day = t3.enquiry_day
    and t.enquiry_id = t3.enquiry_id
    and t.buyer_company_id = t3.buyer_company_id
    and t.vendor_company_id = t3.vendor_company_id
) f on a.dt = f.enquiry_day
and a.enquiry_id = f.enquiry_id
and a.vendor_company_id = f.vendor_company_id
and a.buyer_company_id = f.buyer_company_id
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: chejianer_mask@blacklist
POSTHOOK: Input: chejianer_mask@enquiry
POSTHOOK: Input: chejianer_mask@insurance_direct_supply_enquiry_case
POSTHOOK: Input: chejianer_mask@order_
POSTHOOK: Input: chejianer_mask@order_after_sale
POSTHOOK: Input: chejianer_mask@order_after_sale_item
POSTHOOK: Input: chejianer_mask@order_logistics_package
POSTHOOK: Input: chejianer_mask@trading_app_source_record
POSTHOOK: Input: chejianer_mask@vendor_company
POSTHOOK: Input: chejianer_temp@hhq_daily_trade_report_unique_order_detail_total
POSTHOOK: Input: chejianer_temp@hhq_daily_trade_report_unique_order_part_detail
POSTHOOK: Input: chejianer_temp@hhq_enquiry_offer_parts_detail
POSTHOOK: Output: chejianer_temp@hhq_enquiry_offer_statics
POSTHOOK: Output: database:chejianer_temp
POSTHOOK: Lineage: hhq_enquiry_offer_statics.after_order_amount EXPRESSION [(order_after_sale)order_after_sale.FieldSchema(name:refund_amount, type:decimal(10,2), comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.after_order_cnt EXPRESSION [(order_after_sale)order_after_sale.FieldSchema(name:order_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.all_empty_offer_cnt EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_offer_flag, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:empty_offer_parts_cnt, type:bigint, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_parts_num, type:bigint, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.assess_um_code SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:assess_um_code, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_charge_area SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_charge_area, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_charge_person SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_charge_person, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_charge_zone SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_charge_zone, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_charge_zone_person SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_charge_zone_person, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_company_city SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_company_city, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_company_county SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_company_county, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_company_id SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_company_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_company_name SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_company_name, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_enquiry_id SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_second_institution SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_second_institution, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.buyer_third_institution SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:buyer_third_institution, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.change_enquiry_offer_cnt EXPRESSION [(hhq_enquiry_offer_parts_detail)hhq_enquiry_offer_parts_detail.FieldSchema(name:enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.change_enquiry_offer_parts_cnt EXPRESSION [(hhq_enquiry_offer_parts_detail)hhq_enquiry_offer_parts_detail.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.deal_order_cnt EXPRESSION [(order_)o.FieldSchema(name:status, type:string, comment:null), (order_)o.FieldSchema(name:order_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.deal_order_total_amount EXPRESSION [(order_)o.FieldSchema(name:status, type:string, comment:null), (order_)o.FieldSchema(name:order_total_amount, type:decimal(10,2), comment:订单总金额), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.deal_order_total_amount_in_48h EXPRESSION [(order_)o.FieldSchema(name:status, type:string, comment:null), (order_logistics_package)order_logistics_package.FieldSchema(name:created_at, type:string, comment:), (order_)o.FieldSchema(name:created_at, type:string, comment:创建时间), (order_)o.FieldSchema(name:order_total_amount, type:decimal(10,2), comment:订单总金额), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.dt EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_dt, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.empty_offer_cnt EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_offer_flag, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_car_brand SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_car_brand, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_car_brand_type SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:car_brand_type, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_cnt EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_cnt_app_lq EXPRESSION [(trading_app_source_record)tasr.FieldSchema(name:app_source, type:bigint, comment:1:WEB 2:IOS 3:ANDROID), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_cnt_im_lq EXPRESSION [(trading_app_source_record)tasr.FieldSchema(name:app_source, type:bigint, comment:1:WEB 2:IOS 3:ANDROID), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_cnt_pc_lq EXPRESSION [(trading_app_source_record)tasr.FieldSchema(name:app_source, type:bigint, comment:1:WEB 2:IOS 3:ANDROID), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_id SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_intention_flag SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_intention_flag, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_intention_type SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_intention_type, type:int, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_offer_price_parts_num EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_price, type:decimal(10,2), comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_offer_price_parts_ratio EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_price, type:decimal(10,2), comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_offer_price_parts_ratio_offer EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_price, type:decimal(10,2), comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_enquiry_id, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_offer_type_0610, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_parts_num_new EXPRESSION [(hhq_enquiry_offer_parts_detail)hhq_enquiry_offer_parts_detail.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_source SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_source, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_total_parts_num EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_trace_source SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_trace_source, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.enquiry_type SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_type, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.insurance_case_no EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:insurance_case_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.is_direct_vendor_company SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:is_direct_vendor_company, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_after_sku_cnt EXPRESSION [(order_after_sale_item)i.FieldSchema(name:sub_order_id, type:string, comment:), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_deal_sku_cnt EXPRESSION [(hhq_daily_trade_report_unique_order_part_detail)hhq_daily_trade_report_unique_order_part_detail.FieldSchema(name:part_offer_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_enquiry_cnt EXPRESSION [(hhq_enquiry_offer_parts_detail)hhq_enquiry_offer_parts_detail.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_enquiry_offer_parts_num EXPRESSION [(hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:part_price, type:decimal(10,2), comment:null), (hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_enquiry_parts_num SIMPLE [(hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:enquiry_parts_num, type:bigint, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_enquiry_parts_num_new EXPRESSION [(hhq_enquiry_offer_parts_detail)hhq_enquiry_offer_parts_detail.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_in_48h EXPRESSION [(hhq_daily_trade_report_unique_order_detail_total)o.FieldSchema(name:package_at, type:string, comment:null), (hhq_daily_trade_report_unique_order_detail_total)o.FieldSchema(name:created_at, type:string, comment:null), (hhq_daily_trade_report_unique_order_detail_total)o.FieldSchema(name:order_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_offer_parts_num EXPRESSION [(hhq_enquiry_offer_parts_detail)hhq_enquiry_offer_parts_detail.FieldSchema(name:part_offer_type, type:string, comment:null), (hhq_enquiry_offer_parts_detail)hhq_enquiry_offer_parts_detail.FieldSchema(name:part_price, type:decimal(10,2), comment:null), (hhq_enquiry_offer_parts_detail)hhq_enquiry_offer_parts_detail.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_offer_parts_num_new EXPRESSION [(hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:part_price, type:decimal(10,2), comment:null), (hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:enquiry_dt, type:string, comment:null), (hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_offer_time EXPRESSION [(hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:acknowledged_dt, type:string, comment:null), (hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:enquiry_dt, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_offer_time_new EXPRESSION [(hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:enquiry_dt, type:string, comment:null), (hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:acknowledged_dt, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_out_48h EXPRESSION [(hhq_daily_trade_report_unique_order_detail_total)o.FieldSchema(name:package_at, type:string, comment:null), (hhq_daily_trade_report_unique_order_detail_total)o.FieldSchema(name:created_at, type:string, comment:null), (hhq_daily_trade_report_unique_order_detail_total)o.FieldSchema(name:order_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_response_time EXPRESSION [(hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:response_time, type:double, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_response_time_new EXPRESSION [(hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:enquiry_dt, type:string, comment:null), (hhq_enquiry_offer_parts_detail)pd.FieldSchema(name:response_time, type:double, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.kh_total_order_cnt EXPRESSION [(hhq_daily_trade_report_unique_order_detail_total)o.FieldSchema(name:order_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.not_bidding SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:not_bidding, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_cnt EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_offer_type_0610, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_cnt_app_bj EXPRESSION [(trading_app_source_record)tasr.FieldSchema(name:app_source, type:bigint, comment:1:WEB 2:IOS 3:ANDROID), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_offer_type_0610, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_cnt_im_bj EXPRESSION [(trading_app_source_record)tasr.FieldSchema(name:app_source, type:bigint, comment:1:WEB 2:IOS 3:ANDROID), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_offer_type_0610, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_cnt_min_10 EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:reply_timediff, type:double, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_cnt_min_20 EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:reply_timediff, type:double, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_cnt_min_30 EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:reply_timediff, type:double, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_cnt_min_60 EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:reply_timediff, type:double, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_cnt_pc_bj EXPRESSION [(trading_app_source_record)tasr.FieldSchema(name:app_source, type:bigint, comment:1:WEB 2:IOS 3:ANDROID), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_offer_type_0610, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_no_parts_num EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_type, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:desc_rk, type:bigint, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_offer_status, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.offer_over_cnt EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_offer_flag, type:string, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.online_deal_order_cnt EXPRESSION [(order_)o.FieldSchema(name:status, type:string, comment:null), (order_)o.FieldSchema(name:order_payment_method, type:string, comment:订单支付方式), (order_)o.FieldSchema(name:order_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.online_deal_order_total_amount EXPRESSION [(order_)o.FieldSchema(name:status, type:string, comment:null), (order_)o.FieldSchema(name:order_payment_method, type:string, comment:订单支付方式), (order_)o.FieldSchema(name:order_total_amount, type:decimal(10,2), comment:订单总金额), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.online_order_cnt EXPRESSION [(order_)o.FieldSchema(name:order_payment_method, type:string, comment:订单支付方式), (order_)o.FieldSchema(name:order_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.online_order_total_amount EXPRESSION [(order_)o.FieldSchema(name:order_payment_method, type:string, comment:订单支付方式), (order_)o.FieldSchema(name:order_total_amount, type:decimal(10,2), comment:订单总金额), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.order_cnt EXPRESSION [(order_)o.FieldSchema(name:order_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.order_total_amount EXPRESSION [(order_)o.FieldSchema(name:order_total_amount, type:decimal(10,2), comment:订单总金额), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.package_in_48h_order_cnt EXPRESSION [(order_logistics_package)order_logistics_package.FieldSchema(name:created_at, type:string, comment:), (order_)o.FieldSchema(name:created_at, type:string, comment:创建时间), (order_)o.FieldSchema(name:order_no, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.reply_type SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:reply_type, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.response_cnt_min_10 EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:response_time, type:double, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.response_cnt_min_20 EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:response_time, type:double, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.response_cnt_min_30 EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:response_time, type:double, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.response_cnt_min_5 EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:response_time, type:double, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.response_time SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:response_time, type:double, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.third_institution SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:third_institution, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.total_empty_offer_cnt EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:ea_status, type:bigint, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:enquiry_allocation_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.total_offer_no_parts_num EXPRESSION [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:ea_status, type:bigint, comment:null), (hhq_enquiry_offer_parts_detail)d.FieldSchema(name:part_enquiry_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.true_company SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:true_company, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.true_vendor_company SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:true_vendor_company, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.um_code SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:um_code, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vehicle_flag SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vehicle_flag, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_account_id SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_account_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_account_name SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_account_name, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_account_role SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_account_role, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_charge_area SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_charge_area, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_charge_person SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_charge_person, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_company_city SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_company_city, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_company_county SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_company_county, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_company_id SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_company_id, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_company_name SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_company_name, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_company_status_flag EXPRESSION [(vendor_company)vc.FieldSchema(name:status, type:bigint, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_company_type SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_company_type, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vendor_second_institution SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vendor_second_institution, type:string, comment:null), ]
POSTHOOK: Lineage: hhq_enquiry_offer_statics.vin_code SIMPLE [(hhq_enquiry_offer_parts_detail)d.FieldSchema(name:vin_code, type:string, comment:null), ]
WARNING: Comparing bigint and string may result in loss of information.
WARNING: Comparing bigint and string may result in loss of information.
PREHOOK: query: explain
create table if not exists chejianer_temp.hhq_enquiry_offer_statics2 as
select 
enquiry_type kh_after_sku_cnt
from 
(
    select
    d.vendor_company_id,
    d.vendor_company_name,
    d.enquiry_type,
    d.um_code,
    d.third_institution,
    d.assess_um_code,
    d.enquiry_intention_type,
    d.enquiry_intention_flag,
    count
    (
        distinct d.enquiry_allocation_id
    ) enquiry_cnt,
    count
    (
        distinct  d.enquiry_allocation_id+1
    ) enquiry_cnt_pc_lq,
    count
    (
        distinct d.enquiry_allocation_id +1
    ) enquiry_cnt_app_lq,
    count
    (
        distinct d.enquiry_allocation_id +11
    ) enquiry_cnt_im_lq,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价' then d.enquiry_allocation_id
        end
    ) offer_cnt,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
         then d.enquiry_allocation_id end
    ) offer_cnt_pc_bj,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        then d.enquiry_allocation_id end
    ) offer_cnt_app_bj,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        then d.enquiry_allocation_id end
    ) offer_cnt_im_bj,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 10 then d.enquiry_allocation_id end
    ) offer_cnt_min_10,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 20 then d.enquiry_allocation_id end
    ) offer_cnt_min_20,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 30 then d.enquiry_allocation_id end
    ) offer_cnt_min_30,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 60 then d.enquiry_allocation_id end
    ) offer_cnt_min_60,
    count
    (
        distinct case when d.enquiry_offer_flag = '超时报价' then d.enquiry_allocation_id
        end
    ) offer_over_cnt,
    count
    (
        distinct case when d.enquiry_offer_flag = '未报价' then d.enquiry_allocation_id
        end
    ) empty_offer_cnt,
    count
    (
        distinct case when d.enquiry_offer_flag = '无货报价'
        and d.empty_offer_parts_cnt = d.enquiry_parts_num then d.enquiry_allocation_id
        end
    ) all_empty_offer_cnt,
    count
    (
        distinct d.part_enquiry_id
    ) enquiry_total_parts_num,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) enquiry_offer_price_parts_num,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) / count
    (
        distinct d.part_enquiry_id
    ) enquiry_offer_price_parts_ratio,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) /
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价' then d.part_enquiry_id
        end
    ) enquiry_offer_price_parts_ratio_offer,
    count
    (
        distinct case when d.enquiry_type = '直供'
        and d.desc_rk = 1
        and d.part_offer_status = '1' then d.part_enquiry_id end
    ) offer_no_parts_num,
    count
    (
        distinct case when d.ea_status = '4' then d.enquiry_allocation_id end
    ) total_empty_offer_cnt,
    count
    (
        distinct case when d.ea_status = '4' then d.part_enquiry_id end
    ) total_offer_no_parts_num,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 5 then d.enquiry_allocation_id end
    ) response_cnt_min_5,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 10 then d.enquiry_allocation_id end
    ) response_cnt_min_10,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 20 then d.enquiry_allocation_id end
    ) response_cnt_min_20,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 30 then d.enquiry_allocation_id end
    ) response_cnt_min_30,
    d.response_time
    from chejianer_temp.hhq_enquiry_offer_parts_detail d
    group by
    d.vendor_company_id,
    d.vendor_company_id*d.vendor_company_id,
    d.vendor_company_name,
    d.enquiry_type,
    d.um_code,
    d.third_institution,
    d.vendor_charge_area,
    d.vendor_charge_person,
    d.vendor_second_institution,
    d.vendor_company_city,
    d.vendor_company_county,
    d.true_vendor_company,
    d.vendor_company_type,
    d.vehicle_flag,
    d.is_direct_vendor_company,
    d.enquiry_source,
    d.enquiry_trace_source,
    d.enquiry_car_brand,
    d.car_brand_type,
    d.buyer_enquiry_id,
    d.buyer_enquiry_id*    d.buyer_enquiry_id,
    d.enquiry_id,
    d.vin_code,
    d.not_bidding,
    d.vendor_account_id,
    d.vendor_account_name,
    d.vendor_account_role,
    d.buyer_company_id,
    d.buyer_company_name,
    d.true_company,
    d.buyer_charge_area,
    d.buyer_charge_person,
    d.buyer_second_institution,
    d.buyer_company_city,
    d.buyer_company_county,
    d.reply_type,
    d.buyer_third_institution,
    d.buyer_charge_zone,
    d.buyer_charge_zone_person,
    d.assess_um_code,
    d.enquiry_intention_type,
    d.enquiry_intention_flag,
    d.response_time,
    d.enquiry_allocation_id*d.enquiry_allocation_id
) a
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: chejianer_temp@hhq_enquiry_offer_parts_detail
PREHOOK: Output: chejianer_temp@hhq_enquiry_offer_statics2
PREHOOK: Output: database:chejianer_temp
POSTHOOK: query: explain
create table if not exists chejianer_temp.hhq_enquiry_offer_statics2 as
select 
enquiry_type kh_after_sku_cnt
from 
(
    select
    d.vendor_company_id,
    d.vendor_company_name,
    d.enquiry_type,
    d.um_code,
    d.third_institution,
    d.assess_um_code,
    d.enquiry_intention_type,
    d.enquiry_intention_flag,
    count
    (
        distinct d.enquiry_allocation_id
    ) enquiry_cnt,
    count
    (
        distinct  d.enquiry_allocation_id+1
    ) enquiry_cnt_pc_lq,
    count
    (
        distinct d.enquiry_allocation_id +1
    ) enquiry_cnt_app_lq,
    count
    (
        distinct d.enquiry_allocation_id +11
    ) enquiry_cnt_im_lq,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价' then d.enquiry_allocation_id
        end
    ) offer_cnt,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
         then d.enquiry_allocation_id end
    ) offer_cnt_pc_bj,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        then d.enquiry_allocation_id end
    ) offer_cnt_app_bj,
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价'
        then d.enquiry_allocation_id end
    ) offer_cnt_im_bj,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 10 then d.enquiry_allocation_id end
    ) offer_cnt_min_10,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 20 then d.enquiry_allocation_id end
    ) offer_cnt_min_20,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 30 then d.enquiry_allocation_id end
    ) offer_cnt_min_30,
    count
    (
        distinct case when d.reply_timediff>= 0
        and d.reply_timediff <= 60 then d.enquiry_allocation_id end
    ) offer_cnt_min_60,
    count
    (
        distinct case when d.enquiry_offer_flag = '超时报价' then d.enquiry_allocation_id
        end
    ) offer_over_cnt,
    count
    (
        distinct case when d.enquiry_offer_flag = '未报价' then d.enquiry_allocation_id
        end
    ) empty_offer_cnt,
    count
    (
        distinct case when d.enquiry_offer_flag = '无货报价'
        and d.empty_offer_parts_cnt = d.enquiry_parts_num then d.enquiry_allocation_id
        end
    ) all_empty_offer_cnt,
    count
    (
        distinct d.part_enquiry_id
    ) enquiry_total_parts_num,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) enquiry_offer_price_parts_num,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) / count
    (
        distinct d.part_enquiry_id
    ) enquiry_offer_price_parts_ratio,
    count
    (
        distinct case when d.part_price>0 then d.part_enquiry_id end
    ) /
    count
    (
        distinct case when d.enquiry_offer_type_0610 <>'未报价' then d.part_enquiry_id
        end
    ) enquiry_offer_price_parts_ratio_offer,
    count
    (
        distinct case when d.enquiry_type = '直供'
        and d.desc_rk = 1
        and d.part_offer_status = '1' then d.part_enquiry_id end
    ) offer_no_parts_num,
    count
    (
        distinct case when d.ea_status = '4' then d.enquiry_allocation_id end
    ) total_empty_offer_cnt,
    count
    (
        distinct case when d.ea_status = '4' then d.part_enquiry_id end
    ) total_offer_no_parts_num,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 5 then d.enquiry_allocation_id end
    ) response_cnt_min_5,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 10 then d.enquiry_allocation_id end
    ) response_cnt_min_10,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 20 then d.enquiry_allocation_id end
    ) response_cnt_min_20,
    count
    (
        distinct case when d.response_time>= 0
        and d.response_time <= 30 then d.enquiry_allocation_id end
    ) response_cnt_min_30,
    d.response_time
    from chejianer_temp.hhq_enquiry_offer_parts_detail d
    group by
    d.vendor_company_id,
    d.vendor_company_id*d.vendor_company_id,
    d.vendor_company_name,
    d.enquiry_type,
    d.um_code,
    d.third_institution,
    d.vendor_charge_area,
    d.vendor_charge_person,
    d.vendor_second_institution,
    d.vendor_company_city,
    d.vendor_company_county,
    d.true_vendor_company,
    d.vendor_company_type,
    d.vehicle_flag,
    d.is_direct_vendor_company,
    d.enquiry_source,
    d.enquiry_trace_source,
    d.enquiry_car_brand,
    d.car_brand_type,
    d.buyer_enquiry_id,
    d.buyer_enquiry_id*    d.buyer_enquiry_id,
    d.enquiry_id,
    d.vin_code,
    d.not_bidding,
    d.vendor_account_id,
    d.vendor_account_name,
    d.vendor_account_role,
    d.buyer_company_id,
    d.buyer_company_name,
    d.true_company,
    d.buyer_charge_area,
    d.buyer_charge_person,
    d.buyer_second_institution,
    d.buyer_company_city,
    d.buyer_company_county,
    d.reply_type,
    d.buyer_third_institution,
    d.buyer_charge_zone,
    d.buyer_charge_zone_person,
    d.assess_um_code,
    d.enquiry_intention_type,
    d.enquiry_intention_flag,
    d.response_time,
    d.enquiry_allocation_id*d.enquiry_allocation_id
) a
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: chejianer_temp@hhq_enquiry_offer_parts_detail
POSTHOOK: Output: chejianer_temp@hhq_enquiry_offer_statics2
POSTHOOK: Output: database:chejianer_temp
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-4 depends on stages: Stage-0, Stage-2
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: d
                  Statistics: Num rows: 1 Data size: 7372 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: vendor_company_id (type: string), (UDFToDouble(vendor_company_id) * UDFToDouble(vendor_company_id)) (type: double), vendor_company_name (type: string), enquiry_type (type: string), um_code (type: string), third_institution (type: string), vendor_charge_area (type: string), vendor_charge_person (type: string), vendor_second_institution (type: string), vendor_company_city (type: string), vendor_company_county (type: string), true_vendor_company (type: string), vendor_company_type (type: string), vehicle_flag (type: string), is_direct_vendor_company (type: string), enquiry_source (type: string), enquiry_trace_source (type: string), enquiry_car_brand (type: string), car_brand_type (type: string), buyer_enquiry_id (type: string), (UDFToDouble(buyer_enquiry_id) * UDFToDouble(buyer_enquiry_id)) (type: double), enquiry_id (type: string), vin_code (type: string), not_bidding (type: string), vendor_account_id (type: string), vendor_account_name (type: string), vendor_account_role (type: string), buyer_company_id (type: string), buyer_company_name (type: string), true_company (type: string), buyer_charge_area (type: string), buyer_charge_person (type: string), buyer_second_institution (type: string), buyer_company_city (type: string), buyer_company_county (type: string), reply_type (type: string), buyer_third_institution (type: string), buyer_charge_zone (type: string), buyer_charge_zone_person (type: string), assess_um_code (type: string), enquiry_intention_type (type: int), enquiry_intention_flag (type: string), response_time (type: double), (UDFToDouble(enquiry_allocation_id) * UDFToDouble(enquiry_allocation_id)) (type: double)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col30, _col31, _col32, _col33, _col34, _col35, _col36, _col37, _col38, _col39, _col40, _col41, _col42, _col43
                    Statistics: Num rows: 1 Data size: 7372 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      keys: _col0 (type: string), _col1 (type: double), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string), _col15 (type: string), _col16 (type: string), _col17 (type: string), _col18 (type: string), _col19 (type: string), _col20 (type: double), _col21 (type: string), _col22 (type: string), _col23 (type: string), _col24 (type: string), _col25 (type: string), _col26 (type: string), _col27 (type: string), _col28 (type: string), _col29 (type: string), _col30 (type: string), _col31 (type: string), _col32 (type: string), _col33 (type: string), _col34 (type: string), _col35 (type: string), _col36 (type: string), _col37 (type: string), _col38 (type: string), _col39 (type: string), _col40 (type: int), _col41 (type: string), _col42 (type: double), _col43 (type: double)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col30, _col31, _col32, _col33, _col34, _col35, _col36, _col37, _col38, _col39, _col40, _col41, _col42, _col43
                      Statistics: Num rows: 1 Data size: 7372 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: double), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string), _col15 (type: string), _col16 (type: string), _col17 (type: string), _col18 (type: string), _col19 (type: string), _col20 (type: double), _col21 (type: string), _col22 (type: string), _col23 (type: string), _col24 (type: string), _col25 (type: string), _col26 (type: string), _col27 (type: string), _col28 (type: string), _col29 (type: string), _col30 (type: string), _col31 (type: string), _col32 (type: string), _col33 (type: string), _col34 (type: string), _col35 (type: string), _col36 (type: string), _col37 (type: string), _col38 (type: string), _col39 (type: string), _col40 (type: int), _col41 (type: string), _col42 (type: double), _col43 (type: double)
                        null sort order: zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
                        sort order: ++++++++++++++++++++++++++++++++++++++++++++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: double), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col13 (type: string), _col14 (type: string), _col15 (type: string), _col16 (type: string), _col17 (type: string), _col18 (type: string), _col19 (type: string), _col20 (type: double), _col21 (type: string), _col22 (type: string), _col23 (type: string), _col24 (type: string), _col25 (type: string), _col26 (type: string), _col27 (type: string), _col28 (type: string), _col29 (type: string), _col30 (type: string), _col31 (type: string), _col32 (type: string), _col33 (type: string), _col34 (type: string), _col35 (type: string), _col36 (type: string), _col37 (type: string), _col38 (type: string), _col39 (type: string), _col40 (type: int), _col41 (type: string), _col42 (type: double), _col43 (type: double)
                        Statistics: Num rows: 1 Data size: 7372 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: all inputs (cache only)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: double), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string), KEY._col10 (type: string), KEY._col11 (type: string), KEY._col12 (type: string), KEY._col13 (type: string), KEY._col14 (type: string), KEY._col15 (type: string), KEY._col16 (type: string), KEY._col17 (type: string), KEY._col18 (type: string), KEY._col19 (type: string), KEY._col20 (type: double), KEY._col21 (type: string), KEY._col22 (type: string), KEY._col23 (type: string), KEY._col24 (type: string), KEY._col25 (type: string), KEY._col26 (type: string), KEY._col27 (type: string), KEY._col28 (type: string), KEY._col29 (type: string), KEY._col30 (type: string), KEY._col31 (type: string), KEY._col32 (type: string), KEY._col33 (type: string), KEY._col34 (type: string), KEY._col35 (type: string), KEY._col36 (type: string), KEY._col37 (type: string), KEY._col38 (type: string), KEY._col39 (type: string), KEY._col40 (type: int), KEY._col41 (type: string), KEY._col42 (type: double), KEY._col43 (type: double)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23, _col24, _col25, _col26, _col27, _col28, _col29, _col30, _col31, _col32, _col33, _col34, _col35, _col36, _col37, _col38, _col39, _col40, _col41, _col42, _col43
                Statistics: Num rows: 1 Data size: 7372 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col3 (type: string)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 7372 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 7372 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: chejianer_temp.hhq_enquiry_offer_statics2
                  Select Operator
                    expressions: _col0 (type: string)
                    outputColumnNames: col1
                    Statistics: Num rows: 1 Data size: 7372 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: max(length(col1)), avg(COALESCE(length(col1),0)), count(1), count(col1), compute_bit_vector_hll(col1)
                      minReductionHashAggr: 0.99
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
                      Statistics: Num rows: 1 Data size: 7612 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 7612 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 7612 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 1 Data size: 7612 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 7612 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-4
    Create Table
      columns: kh_after_sku_cnt string
      name: chejianer_temp.hhq_enquiry_offer_statics2
      if not exists: true
      input format: org.apache.hadoop.mapred.TextInputFormat
      output format: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
      serde name: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: kh_after_sku_cnt
          Column Types: string
          Table: chejianer_temp.hhq_enquiry_offer_statics2

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

