PREHOOK: query: CREATE TABLE test (c_numeric STRING, c_non_numeric STRING, c_mix STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test
POSTHOOK: query: CREATE TABLE test (c_numeric STRING, c_non_numeric STRING, c_mix STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test
PREHOOK: query: INSERT INTO test VALUES
  ('1', 'val1', '1'),
  ('3', 'val3', 'val3'),
  ('101', 'val101', '101'),
  ('-51', 'val-51', '-51'),
  ('32', 'val32', 'val32'),
  ('0', 'val0', '0'),
  ('87', 'val87', '87'),
  ('55', 'val55', '55')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test
POSTHOOK: query: INSERT INTO test VALUES
  ('1', 'val1', '1'),
  ('3', 'val3', 'val3'),
  ('101', 'val101', '101'),
  ('-51', 'val-51', '-51'),
  ('32', 'val32', 'val32'),
  ('0', 'val0', '0'),
  ('87', 'val87', '87'),
  ('55', 'val55', '55')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test
POSTHOOK: Lineage: test.c_mix SCRIPT []
POSTHOOK: Lineage: test.c_non_numeric SCRIPT []
POSTHOOK: Lineage: test.c_numeric SCRIPT []
PREHOOK: query: EXPLAIN CBO
SELECT
  `$SUM0`(c_numeric),
  `$SUM0`(CAST(c_numeric AS DOUBLE)),
  `$SUM0`(c_non_numeric),
  `$SUM0`(CAST(c_non_numeric AS DOUBLE)),
  `$SUM0`(c_mix),
  `$SUM0`(CAST(c_mix AS DOUBLE)),

  AVG(c_numeric),
  AVG(CAST(c_numeric AS DOUBLE)),
  AVG(c_non_numeric),
  AVG(CAST(c_non_numeric AS DOUBLE)),
  AVG(c_mix),
  AVG(CAST(c_mix AS DOUBLE)),

  STDDEV_POP(c_numeric),
  STDDEV_POP(CAST(c_numeric AS DOUBLE)),
  STDDEV_POP(c_non_numeric),
  STDDEV_POP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_POP(c_mix),
  STDDEV_POP(CAST(c_mix AS DOUBLE)),

  STDDEV_SAMP(c_numeric),
  STDDEV_SAMP(CAST(c_numeric AS DOUBLE)),
  STDDEV_SAMP(c_non_numeric),
  STDDEV_SAMP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_SAMP(c_mix),
  STDDEV_SAMP(CAST(c_mix AS DOUBLE)),

  VAR_POP(c_numeric),
  VAR_POP(CAST(c_numeric AS DOUBLE)),
  VAR_POP(c_non_numeric),
  VAR_POP(CAST(c_non_numeric AS DOUBLE)),
  VAR_POP(c_mix),
  VAR_POP(CAST(c_mix AS DOUBLE)),

  VAR_SAMP(c_numeric),
  VAR_SAMP(CAST(c_numeric AS DOUBLE)),
  VAR_SAMP(c_non_numeric),
  VAR_SAMP(CAST(c_non_numeric AS DOUBLE)),
  VAR_SAMP(c_mix),
  VAR_SAMP(CAST(c_mix AS DOUBLE)),

  -- SUM and COUNT are not converted but used in the transformations
  SUM(c_numeric),
  SUM(CAST(c_numeric AS DOUBLE)),
  SUM(c_non_numeric),
  SUM(CAST(c_non_numeric AS DOUBLE)),
  SUM(c_mix),
  SUM(CAST(c_mix AS DOUBLE)),

  COUNT(c_numeric),
  COUNT(CAST(c_numeric AS DOUBLE)),
  COUNT(c_non_numeric),
  COUNT(CAST(c_non_numeric AS DOUBLE)),
  COUNT(c_mix),
  COUNT(CAST(c_mix AS DOUBLE))
FROM test
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN CBO
SELECT
  `$SUM0`(c_numeric),
  `$SUM0`(CAST(c_numeric AS DOUBLE)),
  `$SUM0`(c_non_numeric),
  `$SUM0`(CAST(c_non_numeric AS DOUBLE)),
  `$SUM0`(c_mix),
  `$SUM0`(CAST(c_mix AS DOUBLE)),

  AVG(c_numeric),
  AVG(CAST(c_numeric AS DOUBLE)),
  AVG(c_non_numeric),
  AVG(CAST(c_non_numeric AS DOUBLE)),
  AVG(c_mix),
  AVG(CAST(c_mix AS DOUBLE)),

  STDDEV_POP(c_numeric),
  STDDEV_POP(CAST(c_numeric AS DOUBLE)),
  STDDEV_POP(c_non_numeric),
  STDDEV_POP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_POP(c_mix),
  STDDEV_POP(CAST(c_mix AS DOUBLE)),

  STDDEV_SAMP(c_numeric),
  STDDEV_SAMP(CAST(c_numeric AS DOUBLE)),
  STDDEV_SAMP(c_non_numeric),
  STDDEV_SAMP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_SAMP(c_mix),
  STDDEV_SAMP(CAST(c_mix AS DOUBLE)),

  VAR_POP(c_numeric),
  VAR_POP(CAST(c_numeric AS DOUBLE)),
  VAR_POP(c_non_numeric),
  VAR_POP(CAST(c_non_numeric AS DOUBLE)),
  VAR_POP(c_mix),
  VAR_POP(CAST(c_mix AS DOUBLE)),

  VAR_SAMP(c_numeric),
  VAR_SAMP(CAST(c_numeric AS DOUBLE)),
  VAR_SAMP(c_non_numeric),
  VAR_SAMP(CAST(c_non_numeric AS DOUBLE)),
  VAR_SAMP(c_mix),
  VAR_SAMP(CAST(c_mix AS DOUBLE)),

  -- SUM and COUNT are not converted but used in the transformations
  SUM(c_numeric),
  SUM(CAST(c_numeric AS DOUBLE)),
  SUM(c_non_numeric),
  SUM(CAST(c_non_numeric AS DOUBLE)),
  SUM(c_mix),
  SUM(CAST(c_mix AS DOUBLE)),

  COUNT(c_numeric),
  COUNT(CAST(c_numeric AS DOUBLE)),
  COUNT(c_non_numeric),
  COUNT(CAST(c_non_numeric AS DOUBLE)),
  COUNT(c_mix),
  COUNT(CAST(c_mix AS DOUBLE))
FROM test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
CBO PLAN:
HiveProject(_o__c0=[COALESCE($0, 0E0:DOUBLE)], _o__c1=[COALESCE($1, 0E0:DOUBLE)], _o__c2=[COALESCE($2, 0E0:DOUBLE)], _o__c3=[COALESCE($3, 0E0:DOUBLE)], _o__c4=[COALESCE($4, 0E0:DOUBLE)], _o__c5=[COALESCE($5, 0E0:DOUBLE)], _o__c6=[/($6, $7)], _o__c7=[/($1, $8)], _o__c8=[/($9, $10)], _o__c9=[/($3, $11)], _o__c10=[/($12, $13)], _o__c11=[/($5, $14)], _o__c12=[POWER(/(-($15, /(*($6, $6), $7)), $7), 0.5:DECIMAL(2, 1))], _o__c13=[POWER(/(-($16, /(*($1, $1), $8)), $8), 0.5:DECIMAL(2, 1))], _o__c14=[POWER(/(-($17, /(*($9, $9), $10)), $10), 0.5:DECIMAL(2, 1))], _o__c15=[POWER(/(-($18, /(*($3, $3), $11)), $11), 0.5:DECIMAL(2, 1))], _o__c16=[POWER(/(-($19, /(*($12, $12), $13)), $13), 0.5:DECIMAL(2, 1))], _o__c17=[POWER(/(-($20, /(*($5, $5), $14)), $14), 0.5:DECIMAL(2, 1))], _o__c18=[POWER(/(-($15, /(*($6, $6), $7)), CASE(=($7, 1), null:BIGINT, -($7, 1))), 0.5:DECIMAL(2, 1))], _o__c19=[POWER(/(-($16, /(*($1, $1), $8)), CASE(=($8, 1), null:BIGINT, -($8, 1))), 0.5:DECIMAL(2, 1))], _o__c20=[POWER(/(-($17, /(*($9, $9), $10)), CASE(=($10, 1), null:BIGINT, -($10, 1))), 0.5:DECIMAL(2, 1))], _o__c21=[POWER(/(-($18, /(*($3, $3), $11)), CASE(=($11, 1), null:BIGINT, -($11, 1))), 0.5:DECIMAL(2, 1))], _o__c22=[POWER(/(-($19, /(*($12, $12), $13)), CASE(=($13, 1), null:BIGINT, -($13, 1))), 0.5:DECIMAL(2, 1))], _o__c23=[POWER(/(-($20, /(*($5, $5), $14)), CASE(=($14, 1), null:BIGINT, -($14, 1))), 0.5:DECIMAL(2, 1))], _o__c24=[/(-($15, /(*($6, $6), $7)), $7)], _o__c25=[/(-($16, /(*($1, $1), $8)), $8)], _o__c26=[/(-($17, /(*($9, $9), $10)), $10)], _o__c27=[/(-($18, /(*($3, $3), $11)), $11)], _o__c28=[/(-($19, /(*($12, $12), $13)), $13)], _o__c29=[/(-($20, /(*($5, $5), $14)), $14)], _o__c30=[/(-($15, /(*($6, $6), $7)), CASE(=($7, 1), null:BIGINT, -($7, 1)))], _o__c31=[/(-($16, /(*($1, $1), $8)), CASE(=($8, 1), null:BIGINT, -($8, 1)))], _o__c32=[/(-($17, /(*($9, $9), $10)), CASE(=($10, 1), null:BIGINT, -($10, 1)))], _o__c33=[/(-($18, /(*($3, $3), $11)), CASE(=($11, 1), null:BIGINT, -($11, 1)))], _o__c34=[/(-($19, /(*($12, $12), $13)), CASE(=($13, 1), null:BIGINT, -($13, 1)))], _o__c35=[/(-($20, /(*($5, $5), $14)), CASE(=($14, 1), null:BIGINT, -($14, 1)))], _o__c36=[$0], _o__c37=[$1], _o__c38=[$2], _o__c39=[$3], _o__c40=[$4], _o__c41=[$5], _o__c42=[$21], _o__c43=[$8], _o__c44=[$22], _o__c45=[$11], _o__c46=[$23], _o__c47=[$14])
  HiveAggregate(group=[{}], agg#0=[sum($0)], agg#1=[sum($1)], agg#2=[sum($2)], agg#3=[sum($3)], agg#4=[sum($4)], agg#5=[sum($5)], agg#6=[sum($6)], agg#7=[count($6)], agg#8=[count($1)], agg#9=[sum($7)], agg#10=[count($7)], agg#11=[count($3)], agg#12=[sum($8)], agg#13=[count($8)], agg#14=[count($5)], agg#15=[sum($9)], agg#16=[sum($10)], agg#17=[sum($11)], agg#18=[sum($12)], agg#19=[sum($13)], agg#20=[sum($14)], agg#21=[count($0)], agg#22=[count($2)], agg#23=[count($4)])
    HiveProject($f0=[$0], $f1=[CAST($0):DOUBLE], $f2=[$1], $f3=[CAST($1):DOUBLE], $f4=[$2], $f5=[CAST($2):DOUBLE], $f00=[CAST($0):DOUBLE], $f20=[CAST($1):DOUBLE], $f40=[CAST($2):DOUBLE], $f9=[*(CAST($0):DOUBLE, CAST($0):DOUBLE)], $f10=[*(CAST($0):DOUBLE, CAST($0):DOUBLE)], $f11=[*(CAST($1):DOUBLE, CAST($1):DOUBLE)], $f12=[*(CAST($1):DOUBLE, CAST($1):DOUBLE)], $f13=[*(CAST($2):DOUBLE, CAST($2):DOUBLE)], $f14=[*(CAST($2):DOUBLE, CAST($2):DOUBLE)])
      HiveTableScan(table=[[default, test]], table:alias=[test])

PREHOOK: query: SELECT
  `$SUM0`(c_numeric),
  `$SUM0`(CAST(c_numeric AS DOUBLE)),
  `$SUM0`(c_non_numeric),
  `$SUM0`(CAST(c_non_numeric AS DOUBLE)),
  `$SUM0`(c_mix),
  `$SUM0`(CAST(c_mix AS DOUBLE)),

  AVG(c_numeric),
  AVG(CAST(c_numeric AS DOUBLE)),
  AVG(c_non_numeric),
  AVG(CAST(c_non_numeric AS DOUBLE)),
  AVG(c_mix),
  AVG(CAST(c_mix AS DOUBLE)),

  STDDEV_POP(c_numeric),
  STDDEV_POP(CAST(c_numeric AS DOUBLE)),
  STDDEV_POP(c_non_numeric),
  STDDEV_POP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_POP(c_mix),
  STDDEV_POP(CAST(c_mix AS DOUBLE)),

  STDDEV_SAMP(c_numeric),
  STDDEV_SAMP(CAST(c_numeric AS DOUBLE)),
  STDDEV_SAMP(c_non_numeric),
  STDDEV_SAMP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_SAMP(c_mix),
  STDDEV_SAMP(CAST(c_mix AS DOUBLE)),

  VAR_POP(c_numeric),
  VAR_POP(CAST(c_numeric AS DOUBLE)),
  VAR_POP(c_non_numeric),
  VAR_POP(CAST(c_non_numeric AS DOUBLE)),
  VAR_POP(c_mix),
  VAR_POP(CAST(c_mix AS DOUBLE)),

  VAR_SAMP(c_numeric),
  VAR_SAMP(CAST(c_numeric AS DOUBLE)),
  VAR_SAMP(c_non_numeric),
  VAR_SAMP(CAST(c_non_numeric AS DOUBLE)),
  VAR_SAMP(c_mix),
  VAR_SAMP(CAST(c_mix AS DOUBLE)),

  -- SUM and COUNT are not converted but used in the transformations
  SUM(c_numeric),
  SUM(CAST(c_numeric AS DOUBLE)),
  SUM(c_non_numeric),
  SUM(CAST(c_non_numeric AS DOUBLE)),
  SUM(c_mix),
  SUM(CAST(c_mix AS DOUBLE)),

  COUNT(c_numeric),
  COUNT(CAST(c_numeric AS DOUBLE)),
  COUNT(c_non_numeric),
  COUNT(CAST(c_non_numeric AS DOUBLE)),
  COUNT(c_mix),
  COUNT(CAST(c_mix AS DOUBLE))
FROM test
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  `$SUM0`(c_numeric),
  `$SUM0`(CAST(c_numeric AS DOUBLE)),
  `$SUM0`(c_non_numeric),
  `$SUM0`(CAST(c_non_numeric AS DOUBLE)),
  `$SUM0`(c_mix),
  `$SUM0`(CAST(c_mix AS DOUBLE)),

  AVG(c_numeric),
  AVG(CAST(c_numeric AS DOUBLE)),
  AVG(c_non_numeric),
  AVG(CAST(c_non_numeric AS DOUBLE)),
  AVG(c_mix),
  AVG(CAST(c_mix AS DOUBLE)),

  STDDEV_POP(c_numeric),
  STDDEV_POP(CAST(c_numeric AS DOUBLE)),
  STDDEV_POP(c_non_numeric),
  STDDEV_POP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_POP(c_mix),
  STDDEV_POP(CAST(c_mix AS DOUBLE)),

  STDDEV_SAMP(c_numeric),
  STDDEV_SAMP(CAST(c_numeric AS DOUBLE)),
  STDDEV_SAMP(c_non_numeric),
  STDDEV_SAMP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_SAMP(c_mix),
  STDDEV_SAMP(CAST(c_mix AS DOUBLE)),

  VAR_POP(c_numeric),
  VAR_POP(CAST(c_numeric AS DOUBLE)),
  VAR_POP(c_non_numeric),
  VAR_POP(CAST(c_non_numeric AS DOUBLE)),
  VAR_POP(c_mix),
  VAR_POP(CAST(c_mix AS DOUBLE)),

  VAR_SAMP(c_numeric),
  VAR_SAMP(CAST(c_numeric AS DOUBLE)),
  VAR_SAMP(c_non_numeric),
  VAR_SAMP(CAST(c_non_numeric AS DOUBLE)),
  VAR_SAMP(c_mix),
  VAR_SAMP(CAST(c_mix AS DOUBLE)),

  -- SUM and COUNT are not converted but used in the transformations
  SUM(c_numeric),
  SUM(CAST(c_numeric AS DOUBLE)),
  SUM(c_non_numeric),
  SUM(CAST(c_non_numeric AS DOUBLE)),
  SUM(c_mix),
  SUM(CAST(c_mix AS DOUBLE)),

  COUNT(c_numeric),
  COUNT(CAST(c_numeric AS DOUBLE)),
  COUNT(c_non_numeric),
  COUNT(CAST(c_non_numeric AS DOUBLE)),
  COUNT(c_mix),
  COUNT(CAST(c_mix AS DOUBLE))
FROM test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
228.0	228.0	0.0	0.0	193.0	193.0	28.5	28.5	NULL	NULL	32.166666666666664	32.166666666666664	47.34448225506326	47.34448225506326	NULL	NULL	53.52387836802893	53.52387836802893	50.61338050075578	50.61338050075578	NULL	NULL	58.63247109466449	58.63247109466449	2241.5	2241.5	NULL	NULL	2864.805555555555	2864.805555555555	2561.714285714286	2561.714285714286	NULL	NULL	3437.7666666666664	3437.7666666666664	228.0	228.0	NULL	NULL	193.0	193.0	8	8	8	0	8	6
PREHOOK: query: SELECT
  `$SUM0`(c_numeric),
  `$SUM0`(CAST(c_numeric AS DOUBLE)),
  `$SUM0`(c_non_numeric),
  `$SUM0`(CAST(c_non_numeric AS DOUBLE)),
  `$SUM0`(c_mix),
  `$SUM0`(CAST(c_mix AS DOUBLE)),

  AVG(c_numeric),
  AVG(CAST(c_numeric AS DOUBLE)),
  AVG(c_non_numeric),
  AVG(CAST(c_non_numeric AS DOUBLE)),
  AVG(c_mix),
  AVG(CAST(c_mix AS DOUBLE)),

  STDDEV_POP(c_numeric),
  STDDEV_POP(CAST(c_numeric AS DOUBLE)),
  STDDEV_POP(c_non_numeric),
  STDDEV_POP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_POP(c_mix),
  STDDEV_POP(CAST(c_mix AS DOUBLE)),

  STDDEV_SAMP(c_numeric),
  STDDEV_SAMP(CAST(c_numeric AS DOUBLE)),
  STDDEV_SAMP(c_non_numeric),
  STDDEV_SAMP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_SAMP(c_mix),
  STDDEV_SAMP(CAST(c_mix AS DOUBLE)),

  VAR_POP(c_numeric),
  VAR_POP(CAST(c_numeric AS DOUBLE)),
  VAR_POP(c_non_numeric),
  VAR_POP(CAST(c_non_numeric AS DOUBLE)),
  VAR_POP(c_mix),
  VAR_POP(CAST(c_mix AS DOUBLE)),

  VAR_SAMP(c_numeric),
  VAR_SAMP(CAST(c_numeric AS DOUBLE)),
  VAR_SAMP(c_non_numeric),
  VAR_SAMP(CAST(c_non_numeric AS DOUBLE)),
  VAR_SAMP(c_mix),
  VAR_SAMP(CAST(c_mix AS DOUBLE)),

  -- SUM and COUNT are not converted but used in the transformations
  SUM(c_numeric),
  SUM(CAST(c_numeric AS DOUBLE)),
  SUM(c_non_numeric),
  SUM(CAST(c_non_numeric AS DOUBLE)),
  SUM(c_mix),
  SUM(CAST(c_mix AS DOUBLE)),

  COUNT(c_numeric),
  COUNT(CAST(c_numeric AS DOUBLE)),
  COUNT(c_non_numeric),
  COUNT(CAST(c_non_numeric AS DOUBLE)),
  COUNT(c_mix),
  COUNT(CAST(c_mix AS DOUBLE))
FROM test
PREHOOK: type: QUERY
PREHOOK: Input: default@test
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  `$SUM0`(c_numeric),
  `$SUM0`(CAST(c_numeric AS DOUBLE)),
  `$SUM0`(c_non_numeric),
  `$SUM0`(CAST(c_non_numeric AS DOUBLE)),
  `$SUM0`(c_mix),
  `$SUM0`(CAST(c_mix AS DOUBLE)),

  AVG(c_numeric),
  AVG(CAST(c_numeric AS DOUBLE)),
  AVG(c_non_numeric),
  AVG(CAST(c_non_numeric AS DOUBLE)),
  AVG(c_mix),
  AVG(CAST(c_mix AS DOUBLE)),

  STDDEV_POP(c_numeric),
  STDDEV_POP(CAST(c_numeric AS DOUBLE)),
  STDDEV_POP(c_non_numeric),
  STDDEV_POP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_POP(c_mix),
  STDDEV_POP(CAST(c_mix AS DOUBLE)),

  STDDEV_SAMP(c_numeric),
  STDDEV_SAMP(CAST(c_numeric AS DOUBLE)),
  STDDEV_SAMP(c_non_numeric),
  STDDEV_SAMP(CAST(c_non_numeric AS DOUBLE)),
  STDDEV_SAMP(c_mix),
  STDDEV_SAMP(CAST(c_mix AS DOUBLE)),

  VAR_POP(c_numeric),
  VAR_POP(CAST(c_numeric AS DOUBLE)),
  VAR_POP(c_non_numeric),
  VAR_POP(CAST(c_non_numeric AS DOUBLE)),
  VAR_POP(c_mix),
  VAR_POP(CAST(c_mix AS DOUBLE)),

  VAR_SAMP(c_numeric),
  VAR_SAMP(CAST(c_numeric AS DOUBLE)),
  VAR_SAMP(c_non_numeric),
  VAR_SAMP(CAST(c_non_numeric AS DOUBLE)),
  VAR_SAMP(c_mix),
  VAR_SAMP(CAST(c_mix AS DOUBLE)),

  -- SUM and COUNT are not converted but used in the transformations
  SUM(c_numeric),
  SUM(CAST(c_numeric AS DOUBLE)),
  SUM(c_non_numeric),
  SUM(CAST(c_non_numeric AS DOUBLE)),
  SUM(c_mix),
  SUM(CAST(c_mix AS DOUBLE)),

  COUNT(c_numeric),
  COUNT(CAST(c_numeric AS DOUBLE)),
  COUNT(c_non_numeric),
  COUNT(CAST(c_non_numeric AS DOUBLE)),
  COUNT(c_mix),
  COUNT(CAST(c_mix AS DOUBLE))
FROM test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test
#### A masked pattern was here ####
228.0	228.0	0.0	0.0	193.0	193.0	28.5	28.5	NULL	NULL	32.166666666666664	32.166666666666664	47.34448225506326	47.34448225506326	NULL	NULL	53.52387836802894	53.52387836802894	50.61338050075578	50.61338050075578	NULL	NULL	58.632471094664496	58.632471094664496	2241.5	2241.5	NULL	NULL	2864.805555555556	2864.805555555556	2561.714285714286	2561.714285714286	NULL	NULL	3437.7666666666673	3437.7666666666673	228.0	228.0	NULL	NULL	193.0	193.0	8	8	8	0	8	6
