PREHOOK: query: create table sample_partitioned (x int) partitioned by (y int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sample_partitioned
POSTHOOK: query: create table sample_partitioned (x int) partitioned by (y int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sample_partitioned
PREHOOK: query: insert into sample_partitioned partition(y=1) values (1),(2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@sample_partitioned@y=1
POSTHOOK: query: insert into sample_partitioned partition(y=1) values (1),(2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@sample_partitioned@y=1
POSTHOOK: Lineage: sample_partitioned PARTITION(y=1).x SCRIPT []
PREHOOK: query: create temporary table sample as select * from sample_partitioned
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@sample_partitioned
PREHOOK: Input: default@sample_partitioned@y=1
PREHOOK: Output: database:default
PREHOOK: Output: default@sample
POSTHOOK: query: create temporary table sample as select * from sample_partitioned
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@sample_partitioned
POSTHOOK: Input: default@sample_partitioned@y=1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sample
PREHOOK: query: analyze table sample compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@sample
PREHOOK: Output: default@sample
#### A masked pattern was here ####
POSTHOOK: query: analyze table sample compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@sample
POSTHOOK: Output: default@sample
#### A masked pattern was here ####
PREHOOK: query: explain select sample_partitioned.x from sample_partitioned, sample where sample.y = sample_partitioned.y
PREHOOK: type: QUERY
PREHOOK: Input: default@sample
PREHOOK: Input: default@sample_partitioned
PREHOOK: Input: default@sample_partitioned@y=1
#### A masked pattern was here ####
POSTHOOK: query: explain select sample_partitioned.x from sample_partitioned, sample where sample.y = sample_partitioned.y
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sample
POSTHOOK: Input: default@sample_partitioned
POSTHOOK: Input: default@sample_partitioned@y=1
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: sample_partitioned
                  filterExpr: y is not null (type: boolean)
                  Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: x (type: int), y (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col1 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col1 (type: int)
                      Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: sample
                  filterExpr: y is not null (type: boolean)
                  Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: y is not null (type: boolean)
                    Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: y (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: _col0 (type: int)
                        outputColumnNames: _col0
                        Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          keys: _col0 (type: int)
                          minReductionHashAggr: 0.5
                          mode: hash
                          outputColumnNames: _col0
                          Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                          Dynamic Partitioning Event Operator
                            Target column: y (int)
                            Target Input: sample_partitioned
                            Partition key expr: y
                            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                            Target Vertex: Map 1
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

