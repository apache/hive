PREHOOK: query: create table cmv_basetable_n6 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_basetable_n6
POSTHOOK: query: create table cmv_basetable_n6 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_basetable_n6
PREHOOK: query: insert into cmv_basetable_n6 values
(1, 'alfred', 10.30, 2),
(1, 'charlie', 20.30, 2),
(2, 'zoe', 100.30, 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable_n6
POSTHOOK: query: insert into cmv_basetable_n6 values
(1, 'alfred', 10.30, 2),
(1, 'charlie', 20.30, 2),
(2, 'zoe', 100.30, 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable_n6
POSTHOOK: Lineage: cmv_basetable_n6.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n6.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n6.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n6.d SCRIPT []
PREHOOK: query: create table cmv_basetable_2_n3 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_basetable_2_n3
POSTHOOK: query: create table cmv_basetable_2_n3 (a int, b varchar(256), c decimal(10,2), d int) stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_basetable_2_n3
PREHOOK: query: insert into cmv_basetable_2_n3 values
(1, 'bob', 30.30, 2),
(1, 'bonnie', 40.30, 2),
(2, 'joe', 130.30, 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable_2_n3
POSTHOOK: query: insert into cmv_basetable_2_n3 values
(1, 'bob', 30.30, 2),
(1, 'bonnie', 40.30, 2),
(2, 'joe', 130.30, 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable_2_n3
POSTHOOK: Lineage: cmv_basetable_2_n3.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n3.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n3.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable_2_n3.d SCRIPT []
PREHOOK: query: SELECT cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b, count(*)
FROM cmv_basetable_n6 JOIN cmv_basetable_2_n3 ON (cmv_basetable_n6.a = cmv_basetable_2_n3.a)
group by cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n3
PREHOOK: Input: default@cmv_basetable_n6
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b, count(*)
FROM cmv_basetable_n6 JOIN cmv_basetable_2_n3 ON (cmv_basetable_n6.a = cmv_basetable_2_n3.a)
group by cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n3
POSTHOOK: Input: default@cmv_basetable_n6
#### A masked pattern was here ####
2	130.30	joe	1
1	30.30	bob	2
1	40.30	bonnie	2
PREHOOK: query: CREATE MATERIALIZED VIEW cmv_mat_view_n6 TBLPROPERTIES ('transactional'='true') AS
SELECT cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b, count(*)
FROM cmv_basetable_n6 JOIN cmv_basetable_2_n3 ON (cmv_basetable_n6.a = cmv_basetable_2_n3.a)
group by cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_basetable_2_n3
PREHOOK: Input: default@cmv_basetable_n6
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: query: CREATE MATERIALIZED VIEW cmv_mat_view_n6 TBLPROPERTIES ('transactional'='true') AS
SELECT cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b, count(*)
FROM cmv_basetable_n6 JOIN cmv_basetable_2_n3 ON (cmv_basetable_n6.a = cmv_basetable_2_n3.a)
group by cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_basetable_2_n3
POSTHOOK: Input: default@cmv_basetable_n6
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: Lineage: cmv_mat_view_n6._c3 EXPRESSION [(cmv_basetable_n6)cmv_basetable_n6.null, (cmv_basetable_2_n3)cmv_basetable_2_n3.null, ]
POSTHOOK: Lineage: cmv_mat_view_n6.a SIMPLE [(cmv_basetable_n6)cmv_basetable_n6.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n6.b SIMPLE [(cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:b, type:varchar(256), comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n6.c SIMPLE [(cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:c, type:decimal(10,2), comment:null), ]
PREHOOK: query: insert into cmv_basetable_n6 values
(1, 'kevin', 50.30, 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable_n6
POSTHOOK: query: insert into cmv_basetable_n6 values
(1, 'kevin', 50.30, 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable_n6
POSTHOOK: Lineage: cmv_basetable_n6.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n6.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n6.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable_n6.d SCRIPT []
PREHOOK: query: DELETE FROM cmv_basetable_2_n3 WHERE b = 'bonnie'
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n3
PREHOOK: Output: default@cmv_basetable_2_n3
POSTHOOK: query: DELETE FROM cmv_basetable_2_n3 WHERE b = 'bonnie'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n3
POSTHOOK: Output: default@cmv_basetable_2_n3
PREHOOK: query: EXPLAIN CBO
ALTER MATERIALIZED VIEW cmv_mat_view_n6 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@cmv_basetable_2_n3
PREHOOK: Input: default@cmv_basetable_n6
PREHOOK: Input: default@cmv_mat_view_n6
PREHOOK: Output: default@cmv_mat_view_n6
PREHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: query: EXPLAIN CBO
ALTER MATERIALIZED VIEW cmv_mat_view_n6 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@cmv_basetable_2_n3
POSTHOOK: Input: default@cmv_basetable_n6
POSTHOOK: Input: default@cmv_mat_view_n6
POSTHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: Output: default@cmv_mat_view_n6
CBO PLAN:
HiveProject(a0=[$5], c0=[$6], b0=[$7], $f3=[CASE(IS NULL($3), $8, +($8, $3))])
  HiveFilter(condition=[OR(AND($4, OR(AND(IS NULL($3), =($8, 0)), AND(=(+($8, $3), 0), IS NOT NULL($3)))), AND(IS NULL($4), OR(AND(IS NULL($3), >($8, 0)), AND(>(+($8, $3), 0), IS NOT NULL($3)))), AND($4, OR(AND(IS NULL($3), >($8, 0)), AND(>(+($8, $3), 0), IS NOT NULL($3)))))])
    HiveJoin(condition=[AND(IS NOT DISTINCT FROM($0, $5), IS NOT DISTINCT FROM($1, $6), IS NOT DISTINCT FROM($2, $7))], joinType=[right], algorithm=[none], cost=[not available])
      HiveProject(a=[$0], c=[$1], b=[$2], _c3=[$3], $f4=[true])
        HiveTableScan(table=[[default, cmv_mat_view_n6]], table:alias=[default.cmv_mat_view_n6])
      HiveProject(a=[$0], c0=[$1], b0=[$2], $f3=[$3])
        HiveAggregate(group=[{0, 1, 2}], agg#0=[SUM($3)])
          HiveProject(a=[$0], c0=[$6], b0=[$5], $f5=[CASE(OR($2, $8), -1, 1)])
            HiveJoin(condition=[AND(=($0, $4), OR(AND(NOT($2), NOT($8)), AND(NOT($3), NOT($9))), OR(<(1, $7.writeid), <(1, $1.writeid)))], joinType=[inner], algorithm=[none], cost=[not available])
              HiveProject(a=[$0], ROW__ID=[$6], _deleted=[AND($7, <(1, $6.writeid))], _inserted=[AND(<(1, $6.writeid), NOT($7))])
                HiveFilter(condition=[IS NOT NULL($0)])
                  HiveTableScan(table=[[default, cmv_basetable_n6]], table:alias=[cmv_basetable_n6])
              HiveProject(a=[$0], b=[$1], c=[$2], ROW__ID=[$6], _deleted=[AND($7, <(1, $6.writeid))], _inserted=[AND(<(1, $6.writeid), NOT($7))])
                HiveFilter(condition=[IS NOT NULL($0)])
                  HiveTableScan(table=[[default, cmv_basetable_2_n3]], table:alias=[cmv_basetable_2_n3])

PREHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW cmv_mat_view_n6 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@cmv_basetable_2_n3
PREHOOK: Input: default@cmv_basetable_n6
PREHOOK: Input: default@cmv_mat_view_n6
PREHOOK: Output: default@cmv_mat_view_n6
PREHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW cmv_mat_view_n6 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@cmv_basetable_2_n3
POSTHOOK: Input: default@cmv_basetable_n6
POSTHOOK: Input: default@cmv_mat_view_n6
POSTHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: Output: default@cmv_mat_view_n6
STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-5 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-5
  Stage-6 depends on stages: Stage-0
  Stage-10 depends on stages: Stage-6, Stage-7, Stage-8, Stage-9
  Stage-1 depends on stages: Stage-5
  Stage-7 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-5
  Stage-8 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-5
  Stage-9 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 6 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
        Reducer 8 <- Map 10 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
        Reducer 9 <- Reducer 8 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: default.cmv_mat_view_n6
                  Statistics: Num rows: 3 Data size: 636 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: a (type: int), c (type: decimal(10,2)), b (type: varchar(256)), _c3 (type: bigint), true (type: boolean), ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                    Statistics: Num rows: 3 Data size: 876 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256))
                      null sort order: zzz
                      sort order: +++
                      Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256))
                      Statistics: Num rows: 3 Data size: 876 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col3 (type: bigint), _col4 (type: boolean), _col5 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 10 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_2_n3
                  filterExpr: a is not null (type: boolean)
                  properties:
                    acid.fetch.deleted.rows TRUE
                  Statistics: Num rows: 2 Data size: 408 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: a is not null (type: boolean)
                    Statistics: Num rows: 2 Data size: 408 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int), b (type: varchar(256)), c (type: decimal(10,2)), ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), (ROW__IS__DELETED and (ROW__ID.writeid > 1L)) (type: boolean), ((ROW__ID.writeid > 1L) and (not ROW__IS__DELETED)) (type: boolean)
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                      Statistics: Num rows: 2 Data size: 576 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 2 Data size: 576 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: varchar(256)), _col2 (type: decimal(10,2)), _col3 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), _col4 (type: boolean), _col5 (type: boolean)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable_n6
                  filterExpr: a is not null (type: boolean)
                  properties:
                    acid.fetch.deleted.rows TRUE
                  Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: a is not null (type: boolean)
                    Statistics: Num rows: 4 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: a (type: int), ROW__ID (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), (ROW__IS__DELETED and (ROW__ID.writeid > 1L)) (type: boolean), ((ROW__ID.writeid > 1L) and (not ROW__IS__DELETED)) (type: boolean)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 4 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 4 Data size: 352 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>), _col2 (type: boolean), _col3 (type: boolean)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Right Outer Join 0 to 1
                keys:
                  0 _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256))
                  1 _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256))
                nullSafes: [true, true, true]
                outputColumnNames: _col3, _col4, _col5, _col6, _col7, _col8, _col9
                Statistics: Num rows: 2 Data size: 600 Basic stats: COMPLETE Column stats: COMPLETE
                Filter Operator
                  predicate: (_col4 and ((_col3 is null and (_col9 > 0L)) or (((_col9 + _col3) > 0) and _col3 is not null))) (type: boolean)
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col5 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                      Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                Filter Operator
                  predicate: (_col4 and ((_col3 is null and (_col9 = 0L)) or (((_col9 + _col3) = 0) and _col3 is not null))) (type: boolean)
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col5 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: UDFToInteger(_col0) (type: int)
                      Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                Filter Operator
                  predicate: (_col4 and ((_col3 is null and (_col9 > 0L)) or (((_col9 + _col3) > 0) and _col3 is not null))) (type: boolean)
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col6 (type: int), _col7 (type: decimal(10,2)), _col8 (type: varchar(256)), if(_col3 is null, _col9, (_col9 + _col3)) (type: bigint)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                          output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                          serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                          name: default.cmv_mat_view_n6
                      Write Type: INSERT
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256)), _col3 (type: bigint)
                      outputColumnNames: a, c, b, _c3
                      Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(a), max(a), count(1), count(a), compute_bit_vector_hll(a), min(c), max(c), count(c), compute_bit_vector_hll(c), max(length(b)), avg(COALESCE(length(b),0)), count(b), compute_bit_vector_hll(b), min(_c3), max(_c3), count(_c3), compute_bit_vector_hll(_c3)
                        minReductionHashAggr: 0.4
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                        Statistics: Num rows: 1 Data size: 944 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 944 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: decimal(10,2)), _col6 (type: decimal(10,2)), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary), _col13 (type: bigint), _col14 (type: bigint), _col15 (type: bigint), _col16 (type: binary)
                Filter Operator
                  predicate: (_col4 is null and ((_col3 is null and (_col9 > 0L)) or (((_col9 + _col3) > 0) and _col3 is not null))) (type: boolean)
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: _col6 (type: int), _col7 (type: decimal(10,2)), _col8 (type: varchar(256)), if(_col3 is null, _col9, (_col9 + _col3)) (type: bigint)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                      table:
                          input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                          output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                          serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                          name: default.cmv_mat_view_n6
                      Write Type: INSERT
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256)), _col3 (type: bigint)
                      outputColumnNames: a, c, b, _c3
                      Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(a), max(a), count(1), count(a), compute_bit_vector_hll(a), min(c), max(c), count(c), compute_bit_vector_hll(c), max(length(b)), avg(COALESCE(length(b),0)), count(b), compute_bit_vector_hll(b), min(_c3), max(_c3), count(_c3), compute_bit_vector_hll(_c3)
                        minReductionHashAggr: 0.4
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                        Statistics: Num rows: 1 Data size: 944 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 944 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: decimal(10,2)), _col6 (type: decimal(10,2)), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary), _col13 (type: bigint), _col14 (type: bigint), _col15 (type: bigint), _col16 (type: binary)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.cmv_mat_view_n6
                  Write Type: DELETE
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: struct<writeid:bigint,bucketid:int,rowid:bigint>)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 76 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                      output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                      serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                      name: default.cmv_mat_view_n6
                  Write Type: DELETE
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12), min(VALUE._col13), max(VALUE._col14), count(VALUE._col15), compute_bit_vector_hll(VALUE._col16)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                Statistics: Num rows: 1 Data size: 876 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'DECIMAL' (type: string), _col5 (type: decimal(10,2)), _col6 (type: decimal(10,2)), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary), 'LONG' (type: string), _col13 (type: bigint), _col14 (type: bigint), (_col2 - _col15) (type: bigint), COALESCE(ndv_compute_bit_vector(_col16),0) (type: bigint), _col16 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23
                  Statistics: Num rows: 1 Data size: 1269 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 1269 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), min(VALUE._col5), max(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12), min(VALUE._col13), max(VALUE._col14), count(VALUE._col15), compute_bit_vector_hll(VALUE._col16)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                Statistics: Num rows: 1 Data size: 876 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'DECIMAL' (type: string), _col5 (type: decimal(10,2)), _col6 (type: decimal(10,2)), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary), 'LONG' (type: string), _col13 (type: bigint), _col14 (type: bigint), (_col2 - _col15) (type: bigint), COALESCE(ndv_compute_bit_vector(_col16),0) (type: bigint), _col16 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21, _col22, _col23
                  Statistics: Num rows: 1 Data size: 1269 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 1269 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 8 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col5, _col6, _col7, _col8, _col9
                residual filter predicates: {(((not _col2) and (not _col8)) or ((not _col3) and (not _col9)))} {((_col7.writeid > 1L) or (_col1.writeid > 1L))}
                Statistics: Num rows: 1 Data size: 372 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int), _col6 (type: decimal(10,2)), _col5 (type: varchar(256)), if((_col2 or _col8), -1, 1) (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 372 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: sum(_col3)
                    keys: _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256))
                    minReductionHashAggr: 0.4
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256))
                      null sort order: zzz
                      sort order: +++
                      Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256))
                      Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col3 (type: bigint)
        Reducer 9 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: int), KEY._col1 (type: decimal(10,2)), KEY._col2 (type: varchar(256))
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256))
                  null sort order: zzz
                  sort order: +++
                  Map-reduce partition columns: _col0 (type: int), _col1 (type: decimal(10,2)), _col2 (type: varchar(256))
                  Statistics: Num rows: 1 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col3 (type: bigint)

  Stage: Stage-5
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.cmv_mat_view_n6
          Write Type: DELETE

  Stage: Stage-6
    Stats Work
      Basic Stats Work:

  Stage: Stage-10
    Materialized View Update
      name: default.cmv_mat_view_n6
      update creation metadata: true

  Stage: Stage-1
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.cmv_mat_view_n6
          Write Type: DELETE

  Stage: Stage-7
    Stats Work
      Basic Stats Work:

  Stage: Stage-2
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.cmv_mat_view_n6
          Write Type: INSERT

  Stage: Stage-8
    Stats Work
      Basic Stats Work:

  Stage: Stage-3
    Move Operator
      tables:
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: default.cmv_mat_view_n6
          Write Type: INSERT

  Stage: Stage-9
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: a, c, b, _c3
          Column Types: int, decimal(10,2), varchar(256), bigint
          Table: default.cmv_mat_view_n6

PREHOOK: query: ALTER MATERIALIZED VIEW cmv_mat_view_n6 REBUILD
PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
PREHOOK: Input: default@cmv_basetable_2_n3
PREHOOK: Input: default@cmv_basetable_n6
PREHOOK: Input: default@cmv_mat_view_n6
PREHOOK: Output: default@cmv_mat_view_n6
PREHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: query: ALTER MATERIALIZED VIEW cmv_mat_view_n6 REBUILD
POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD
POSTHOOK: Input: default@cmv_basetable_2_n3
POSTHOOK: Input: default@cmv_basetable_n6
POSTHOOK: Input: default@cmv_mat_view_n6
POSTHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: Lineage: cmv_mat_view_n6._c3 EXPRESSION [(cmv_mat_view_n6)default.cmv_mat_view_n6.FieldSchema(name:_c3, type:bigint, comment:null), (cmv_basetable_n6)cmv_basetable_n6.FieldSchema(name:ROW__IS__DELETED, type:boolean, comment:), (cmv_basetable_n6)cmv_basetable_n6.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), (cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:ROW__IS__DELETED, type:boolean, comment:), (cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), ]
POSTHOOK: Lineage: cmv_mat_view_n6._c3 EXPRESSION [(cmv_mat_view_n6)default.cmv_mat_view_n6.FieldSchema(name:_c3, type:bigint, comment:null), (cmv_basetable_n6)cmv_basetable_n6.FieldSchema(name:ROW__IS__DELETED, type:boolean, comment:), (cmv_basetable_n6)cmv_basetable_n6.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), (cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:ROW__IS__DELETED, type:boolean, comment:), (cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), ]
POSTHOOK: Lineage: cmv_mat_view_n6.a SIMPLE [(cmv_basetable_n6)cmv_basetable_n6.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n6.a SIMPLE [(cmv_basetable_n6)cmv_basetable_n6.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n6.b SIMPLE [(cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:b, type:varchar(256), comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n6.b SIMPLE [(cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:b, type:varchar(256), comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n6.c SIMPLE [(cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:c, type:decimal(10,2), comment:null), ]
POSTHOOK: Lineage: cmv_mat_view_n6.c SIMPLE [(cmv_basetable_2_n3)cmv_basetable_2_n3.FieldSchema(name:c, type:decimal(10,2), comment:null), ]
PREHOOK: query: select * from cmv_mat_view_n6
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_mat_view_n6
#### A masked pattern was here ####
POSTHOOK: query: select * from cmv_mat_view_n6
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_mat_view_n6
#### A masked pattern was here ####
2	130.30	joe	1
1	30.30	bob	3
PREHOOK: query: drop materialized view cmv_mat_view_n6
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_mat_view_n6
PREHOOK: Output: default@cmv_mat_view_n6
POSTHOOK: query: drop materialized view cmv_mat_view_n6
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_mat_view_n6
POSTHOOK: Output: default@cmv_mat_view_n6
PREHOOK: query: SELECT cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b, count(*)
FROM cmv_basetable_n6 JOIN cmv_basetable_2_n3 ON (cmv_basetable_n6.a = cmv_basetable_2_n3.a)
group by cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable_2_n3
PREHOOK: Input: default@cmv_basetable_n6
#### A masked pattern was here ####
POSTHOOK: query: SELECT cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b, count(*)
FROM cmv_basetable_n6 JOIN cmv_basetable_2_n3 ON (cmv_basetable_n6.a = cmv_basetable_2_n3.a)
group by cmv_basetable_n6.a, cmv_basetable_2_n3.c, cmv_basetable_2_n3.b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable_2_n3
POSTHOOK: Input: default@cmv_basetable_n6
#### A masked pattern was here ####
2	130.30	joe	1
1	30.30	bob	3
