PREHOOK: query: create table alter1(a int, b int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alter1
POSTHOOK: query: create table alter1(a int, b int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alter1
PREHOOK: query: explain ddl select * from alter1
PREHOOK: type: QUERY
PREHOOK: Input: default@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter1
#### A masked pattern was here ####

CREATE TABLE `default`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1;

EXPLAIN CBO select * from alter1;

EXPLAIN VECTORIZED select * from alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[default, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: alter table alter1 set tblproperties ('a'='1', 'c'='3')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: default@alter1
PREHOOK: Output: default@alter1
POSTHOOK: query: alter table alter1 set tblproperties ('a'='1', 'c'='3')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: default@alter1
POSTHOOK: Output: default@alter1
PREHOOK: query: explain ddl select * from alter1
PREHOOK: type: QUERY
PREHOOK: Input: default@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter1
#### A masked pattern was here ####

CREATE TABLE `default`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='3', 
#### A masked pattern was here ####
ALTER TABLE default.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1;

EXPLAIN CBO select * from alter1;

EXPLAIN VECTORIZED select * from alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[default, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: alter table alter1 set tblproperties ('a'='1', 'c'='4', 'd'='3')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: default@alter1
PREHOOK: Output: default@alter1
POSTHOOK: query: alter table alter1 set tblproperties ('a'='1', 'c'='4', 'd'='3')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: default@alter1
POSTHOOK: Output: default@alter1
PREHOOK: query: explain ddl select * from alter1
PREHOOK: type: QUERY
PREHOOK: Input: default@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter1
#### A masked pattern was here ####

CREATE TABLE `default`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE default.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1;

EXPLAIN CBO select * from alter1;

EXPLAIN VECTORIZED select * from alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[default, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: alter table alter1 set tblproperties ('EXTERNAL'='TRUE')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: default@alter1
PREHOOK: Output: default@alter1
POSTHOOK: query: alter table alter1 set tblproperties ('EXTERNAL'='TRUE')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: default@alter1
POSTHOOK: Output: default@alter1
PREHOOK: query: explain ddl select * from alter1
PREHOOK: type: QUERY
PREHOOK: Input: default@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter1
#### A masked pattern was here ####

CREATE EXTERNAL TABLE `default`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE default.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1;

EXPLAIN CBO select * from alter1;

EXPLAIN VECTORIZED select * from alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[default, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: alter table alter1 set tblproperties ('EXTERNAL'='FALSE')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: default@alter1
PREHOOK: Output: default@alter1
POSTHOOK: query: alter table alter1 set tblproperties ('EXTERNAL'='FALSE')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: default@alter1
POSTHOOK: Output: default@alter1
PREHOOK: query: explain ddl select * from alter1
PREHOOK: type: QUERY
PREHOOK: Input: default@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter1
#### A masked pattern was here ####

CREATE TABLE `default`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE default.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1;

EXPLAIN CBO select * from alter1;

EXPLAIN VECTORIZED select * from alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[default, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: alter table alter1 set serdeproperties('s1'='9')
PREHOOK: type: ALTERTABLE_SERDEPROPERTIES
PREHOOK: Input: default@alter1
PREHOOK: Output: default@alter1
POSTHOOK: query: alter table alter1 set serdeproperties('s1'='9')
POSTHOOK: type: ALTERTABLE_SERDEPROPERTIES
POSTHOOK: Input: default@alter1
POSTHOOK: Output: default@alter1
PREHOOK: query: explain ddl select * from alter1
PREHOOK: type: QUERY
PREHOOK: Input: default@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter1
#### A masked pattern was here ####

CREATE TABLE `default`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
WITH SERDEPROPERTIES ( 
  's1'='9') 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE default.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1;

EXPLAIN CBO select * from alter1;

EXPLAIN VECTORIZED select * from alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[default, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: alter table alter1 set serdeproperties('s1'='10', 's2' ='20')
PREHOOK: type: ALTERTABLE_SERDEPROPERTIES
PREHOOK: Input: default@alter1
PREHOOK: Output: default@alter1
POSTHOOK: query: alter table alter1 set serdeproperties('s1'='10', 's2' ='20')
POSTHOOK: type: ALTERTABLE_SERDEPROPERTIES
POSTHOOK: Input: default@alter1
POSTHOOK: Output: default@alter1
PREHOOK: query: explain ddl select * from alter1
PREHOOK: type: QUERY
PREHOOK: Input: default@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter1
#### A masked pattern was here ####

CREATE TABLE `default`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
WITH SERDEPROPERTIES ( 
  's1'='10', 
  's2'='20') 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE default.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1;

EXPLAIN CBO select * from alter1;

EXPLAIN VECTORIZED select * from alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[default, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: drop table alter1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@alter1
PREHOOK: Output: default@alter1
POSTHOOK: query: drop table alter1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@alter1
POSTHOOK: Output: default@alter1
PREHOOK: query: CREATE DATABASE alter1_db
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:alter1_db
POSTHOOK: query: CREATE DATABASE alter1_db
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:alter1_db
PREHOOK: query: SHOW TABLES alter1_db
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: SHOW TABLES alter1_db
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
PREHOOK: query: CREATE TABLE alter1_db.alter1(a INT, b INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: alter1_db@alter1
PREHOOK: Output: database:alter1_db
POSTHOOK: query: CREATE TABLE alter1_db.alter1(a INT, b INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: alter1_db@alter1
POSTHOOK: Output: database:alter1_db
PREHOOK: query: explain ddl select * from alter1_db.alter1
PREHOOK: type: QUERY
PREHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1_db.alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter1_db;
CREATE TABLE `alter1_db`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE alter1_db.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1_db.alter1;

EXPLAIN CBO select * from alter1_db.alter1;

EXPLAIN VECTORIZED select * from alter1_db.alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[alter1_db, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: ALTER TABLE alter1_db.alter1 SET TBLPROPERTIES ('a'='1', 'c'='3')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: alter1_db@alter1
PREHOOK: Output: alter1_db@alter1
POSTHOOK: query: ALTER TABLE alter1_db.alter1 SET TBLPROPERTIES ('a'='1', 'c'='3')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: alter1_db@alter1
POSTHOOK: Output: alter1_db@alter1
PREHOOK: query: explain ddl select * from alter1_db.alter1
PREHOOK: type: QUERY
PREHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1_db.alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter1_db;
CREATE TABLE `alter1_db`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='3', 
#### A masked pattern was here ####
ALTER TABLE alter1_db.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1_db.alter1;

EXPLAIN CBO select * from alter1_db.alter1;

EXPLAIN VECTORIZED select * from alter1_db.alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[alter1_db, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: ALTER TABLE alter1_db.alter1 SET TBLPROPERTIES ('a'='1', 'c'='4', 'd'='3')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: alter1_db@alter1
PREHOOK: Output: alter1_db@alter1
POSTHOOK: query: ALTER TABLE alter1_db.alter1 SET TBLPROPERTIES ('a'='1', 'c'='4', 'd'='3')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: alter1_db@alter1
POSTHOOK: Output: alter1_db@alter1
PREHOOK: query: explain ddl select * from alter1_db.alter1
PREHOOK: type: QUERY
PREHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1_db.alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter1_db;
CREATE TABLE `alter1_db`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE alter1_db.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1_db.alter1;

EXPLAIN CBO select * from alter1_db.alter1;

EXPLAIN VECTORIZED select * from alter1_db.alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[alter1_db, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: ALTER TABLE alter1_db.alter1 SET TBLPROPERTIES ('EXTERNAL'='TRUE')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: alter1_db@alter1
PREHOOK: Output: alter1_db@alter1
POSTHOOK: query: ALTER TABLE alter1_db.alter1 SET TBLPROPERTIES ('EXTERNAL'='TRUE')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: alter1_db@alter1
POSTHOOK: Output: alter1_db@alter1
PREHOOK: query: explain ddl select * from alter1_db.alter1
PREHOOK: type: QUERY
PREHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1_db.alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter1_db;
CREATE EXTERNAL TABLE `alter1_db`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE alter1_db.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1_db.alter1;

EXPLAIN CBO select * from alter1_db.alter1;

EXPLAIN VECTORIZED select * from alter1_db.alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[alter1_db, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: ALTER TABLE alter1_db.alter1 SET TBLPROPERTIES ('EXTERNAL'='FALSE')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: alter1_db@alter1
PREHOOK: Output: alter1_db@alter1
POSTHOOK: query: ALTER TABLE alter1_db.alter1 SET TBLPROPERTIES ('EXTERNAL'='FALSE')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: alter1_db@alter1
POSTHOOK: Output: alter1_db@alter1
PREHOOK: query: explain ddl select * from alter1_db.alter1
PREHOOK: type: QUERY
PREHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1_db.alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter1_db;
CREATE TABLE `alter1_db`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE alter1_db.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1_db.alter1;

EXPLAIN CBO select * from alter1_db.alter1;

EXPLAIN VECTORIZED select * from alter1_db.alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[alter1_db, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: ALTER TABLE alter1_db.alter1 SET SERDEPROPERTIES('s1'='9')
PREHOOK: type: ALTERTABLE_SERDEPROPERTIES
PREHOOK: Input: alter1_db@alter1
PREHOOK: Output: alter1_db@alter1
POSTHOOK: query: ALTER TABLE alter1_db.alter1 SET SERDEPROPERTIES('s1'='9')
POSTHOOK: type: ALTERTABLE_SERDEPROPERTIES
POSTHOOK: Input: alter1_db@alter1
POSTHOOK: Output: alter1_db@alter1
PREHOOK: query: explain ddl select * from alter1_db.alter1
PREHOOK: type: QUERY
PREHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1_db.alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter1_db;
CREATE TABLE `alter1_db`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
WITH SERDEPROPERTIES ( 
  's1'='9') 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE alter1_db.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1_db.alter1;

EXPLAIN CBO select * from alter1_db.alter1;

EXPLAIN VECTORIZED select * from alter1_db.alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[alter1_db, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: ALTER TABLE alter1_db.alter1 SET SERDEPROPERTIES('s1'='10', 's2' ='20')
PREHOOK: type: ALTERTABLE_SERDEPROPERTIES
PREHOOK: Input: alter1_db@alter1
PREHOOK: Output: alter1_db@alter1
POSTHOOK: query: ALTER TABLE alter1_db.alter1 SET SERDEPROPERTIES('s1'='10', 's2' ='20')
POSTHOOK: type: ALTERTABLE_SERDEPROPERTIES
POSTHOOK: Input: alter1_db@alter1
POSTHOOK: Output: alter1_db@alter1
PREHOOK: query: explain ddl select * from alter1_db.alter1
PREHOOK: type: QUERY
PREHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter1_db.alter1
POSTHOOK: type: QUERY
POSTHOOK: Input: alter1_db@alter1
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter1_db;
CREATE TABLE `alter1_db`.`alter1`(
  `a` int, 
  `b` int)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
WITH SERDEPROPERTIES ( 
  's1'='10', 
  's2'='20') 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'a'='1', 
  'bucketing_version'='2', 
  'c'='4', 
  'd'='3', 
#### A masked pattern was here ####
ALTER TABLE alter1_db.alter1 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter1_db.alter1;

EXPLAIN CBO select * from alter1_db.alter1;

EXPLAIN VECTORIZED select * from alter1_db.alter1;
CBO PLAN:HiveProject(a=[$0], b=[$1])
  HiveTableScan(table=[[alter1_db, alter1]], table:alias=[alter1])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter1
          Select Operator
            expressions: a (type: int), b (type: int)
            outputColumnNames: _col0, _col1
            ListSink

PREHOOK: query: DROP TABLE alter1_db.alter1
PREHOOK: type: DROPTABLE
PREHOOK: Input: alter1_db@alter1
PREHOOK: Output: alter1_db@alter1
POSTHOOK: query: DROP TABLE alter1_db.alter1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: alter1_db@alter1
POSTHOOK: Output: alter1_db@alter1
PREHOOK: query: DROP DATABASE alter1_db
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:alter1_db
PREHOOK: Output: database:alter1_db
POSTHOOK: query: DROP DATABASE alter1_db
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:alter1_db
POSTHOOK: Output: database:alter1_db
PREHOOK: query: create table alter2(a int, b int) partitioned by (insertdate string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alter2
POSTHOOK: query: create table alter2(a int, b int) partitioned by (insertdate string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alter2
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: default@alter2
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter2
#### A masked pattern was here ####

CREATE TABLE `default`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[default, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: show partitions alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@alter2
POSTHOOK: query: show partitions alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@alter2
PREHOOK: query: alter table alter2 add partition (insertdate='2008-01-01') location '2008/01/01'
PREHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
PREHOOK: Output: default@alter2
POSTHOOK: query: alter table alter2 add partition (insertdate='2008-01-01') location '2008/01/01'
POSTHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
POSTHOOK: Output: default@alter2
POSTHOOK: Output: default@alter2@insertdate=2008-01-01
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: default@alter2
PREHOOK: Input: default@alter2@insertdate=2008-01-01
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter2
POSTHOOK: Input: default@alter2@insertdate=2008-01-01
#### A masked pattern was here ####

CREATE TABLE `default`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-01');
ALTER TABLE default.alter2 PARTITION (insertdate='2008-01-01') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );


EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[default, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: show partitions alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@alter2
POSTHOOK: query: show partitions alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@alter2
insertdate=2008-01-01
PREHOOK: query: alter table alter2 add partition (insertdate='2008-01-02') location '2008/01/02'
PREHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
PREHOOK: Output: default@alter2
POSTHOOK: query: alter table alter2 add partition (insertdate='2008-01-02') location '2008/01/02'
POSTHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
POSTHOOK: Output: default@alter2
POSTHOOK: Output: default@alter2@insertdate=2008-01-02
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: default@alter2
PREHOOK: Input: default@alter2@insertdate=2008-01-01
PREHOOK: Input: default@alter2@insertdate=2008-01-02
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter2
POSTHOOK: Input: default@alter2@insertdate=2008-01-01
POSTHOOK: Input: default@alter2@insertdate=2008-01-02
#### A masked pattern was here ####

CREATE TABLE `default`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-01');
ALTER TABLE default.alter2 PARTITION (insertdate='2008-01-01') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-02');
ALTER TABLE default.alter2 PARTITION (insertdate='2008-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );


EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[default, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: show partitions alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@alter2
POSTHOOK: query: show partitions alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@alter2
insertdate=2008-01-01
insertdate=2008-01-02
PREHOOK: query: drop table alter2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@alter2
PREHOOK: Output: default@alter2
POSTHOOK: query: drop table alter2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@alter2
POSTHOOK: Output: default@alter2
PREHOOK: query: create external table alter2(a int, b int) partitioned by (insertdate string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alter2
POSTHOOK: query: create external table alter2(a int, b int) partitioned by (insertdate string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alter2
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: default@alter2
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter2
#### A masked pattern was here ####

CREATE EXTERNAL TABLE `default`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[default, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: show partitions alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@alter2
POSTHOOK: query: show partitions alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@alter2
PREHOOK: query: alter table alter2 add partition (insertdate='2008-01-01') location '2008/01/01'
PREHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
PREHOOK: Output: default@alter2
POSTHOOK: query: alter table alter2 add partition (insertdate='2008-01-01') location '2008/01/01'
POSTHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
POSTHOOK: Output: default@alter2
POSTHOOK: Output: default@alter2@insertdate=2008-01-01
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: default@alter2
PREHOOK: Input: default@alter2@insertdate=2008-01-01
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter2
POSTHOOK: Input: default@alter2@insertdate=2008-01-01
#### A masked pattern was here ####

CREATE EXTERNAL TABLE `default`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-01');
ALTER TABLE default.alter2 PARTITION (insertdate='2008-01-01') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );


EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[default, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: show partitions alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@alter2
POSTHOOK: query: show partitions alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@alter2
insertdate=2008-01-01
PREHOOK: query: alter table alter2 add partition (insertdate='2008-01-02') location '2008/01/02'
PREHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
PREHOOK: Output: default@alter2
POSTHOOK: query: alter table alter2 add partition (insertdate='2008-01-02') location '2008/01/02'
POSTHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
POSTHOOK: Output: default@alter2
POSTHOOK: Output: default@alter2@insertdate=2008-01-02
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: default@alter2
PREHOOK: Input: default@alter2@insertdate=2008-01-01
PREHOOK: Input: default@alter2@insertdate=2008-01-02
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alter2
POSTHOOK: Input: default@alter2@insertdate=2008-01-01
POSTHOOK: Input: default@alter2@insertdate=2008-01-02
#### A masked pattern was here ####

CREATE EXTERNAL TABLE `default`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE default.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-01');
ALTER TABLE default.alter2 PARTITION (insertdate='2008-01-01') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE default.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-02');
ALTER TABLE default.alter2 PARTITION (insertdate='2008-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );


EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[default, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: show partitions alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@alter2
POSTHOOK: query: show partitions alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@alter2
insertdate=2008-01-01
insertdate=2008-01-02
PREHOOK: query: DROP TABLE alter2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@alter2
PREHOOK: Output: default@alter2
POSTHOOK: query: DROP TABLE alter2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@alter2
POSTHOOK: Output: default@alter2
PREHOOK: query: SHOW TABLES LIKE "alter*"
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: SHOW TABLES LIKE "alter*"
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
PREHOOK: query: CREATE DATABASE alter2_db
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:alter2_db
POSTHOOK: query: CREATE DATABASE alter2_db
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:alter2_db
PREHOOK: query: USE alter2_db
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:alter2_db
POSTHOOK: query: USE alter2_db
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:alter2_db
PREHOOK: query: SHOW TABLES LIKE "alter*"
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:alter2_db
POSTHOOK: query: SHOW TABLES LIKE "alter*"
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:alter2_db
PREHOOK: query: CREATE TABLE alter2(a int, b int) PARTITIONED BY (insertdate string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: alter2_db@alter2
PREHOOK: Output: database:alter2_db
POSTHOOK: query: CREATE TABLE alter2(a int, b int) PARTITIONED BY (insertdate string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: alter2_db@alter2
POSTHOOK: Output: database:alter2_db
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: alter2_db@alter2
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: alter2_db@alter2
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter2_db;
CREATE TABLE `alter2_db`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE alter2_db.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[alter2_db, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: SHOW PARTITIONS alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: alter2_db@alter2
POSTHOOK: query: SHOW PARTITIONS alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: alter2_db@alter2
#### A masked pattern was here ####
PREHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
PREHOOK: Output: alter2_db@alter2
#### A masked pattern was here ####
POSTHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
POSTHOOK: Output: alter2_db@alter2
POSTHOOK: Output: alter2_db@alter2@insertdate=2008-01-01
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: alter2_db@alter2
PREHOOK: Input: alter2_db@alter2@insertdate=2008-01-01
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: alter2_db@alter2
POSTHOOK: Input: alter2_db@alter2@insertdate=2008-01-01
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter2_db;
CREATE TABLE `alter2_db`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE alter2_db.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE alter2_db.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-01');
ALTER TABLE alter2_db.alter2 PARTITION (insertdate='2008-01-01') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );


EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[alter2_db, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: SHOW PARTITIONS alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: alter2_db@alter2
POSTHOOK: query: SHOW PARTITIONS alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: alter2_db@alter2
insertdate=2008-01-01
#### A masked pattern was here ####
PREHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
PREHOOK: Output: alter2_db@alter2
#### A masked pattern was here ####
POSTHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
POSTHOOK: Output: alter2_db@alter2
POSTHOOK: Output: alter2_db@alter2@insertdate=2008-01-02
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: alter2_db@alter2
PREHOOK: Input: alter2_db@alter2@insertdate=2008-01-01
PREHOOK: Input: alter2_db@alter2@insertdate=2008-01-02
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: alter2_db@alter2
POSTHOOK: Input: alter2_db@alter2@insertdate=2008-01-01
POSTHOOK: Input: alter2_db@alter2@insertdate=2008-01-02
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter2_db;
CREATE TABLE `alter2_db`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE alter2_db.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE alter2_db.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-01');
ALTER TABLE alter2_db.alter2 PARTITION (insertdate='2008-01-01') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE alter2_db.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-02');
ALTER TABLE alter2_db.alter2 PARTITION (insertdate='2008-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );


EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[alter2_db, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: SHOW PARTITIONS alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: alter2_db@alter2
POSTHOOK: query: SHOW PARTITIONS alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: alter2_db@alter2
insertdate=2008-01-01
insertdate=2008-01-02
PREHOOK: query: DROP TABLE alter2
PREHOOK: type: DROPTABLE
PREHOOK: Input: alter2_db@alter2
PREHOOK: Output: alter2_db@alter2
POSTHOOK: query: DROP TABLE alter2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: alter2_db@alter2
POSTHOOK: Output: alter2_db@alter2
PREHOOK: query: CREATE EXTERNAL TABLE alter2(a int, b int) PARTITIONED BY (insertdate string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: alter2_db@alter2
PREHOOK: Output: database:alter2_db
POSTHOOK: query: CREATE EXTERNAL TABLE alter2(a int, b int) PARTITIONED BY (insertdate string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: alter2_db@alter2
POSTHOOK: Output: database:alter2_db
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: alter2_db@alter2
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: alter2_db@alter2
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter2_db;
CREATE EXTERNAL TABLE `alter2_db`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE alter2_db.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );



EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[alter2_db, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: SHOW PARTITIONS alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: alter2_db@alter2
POSTHOOK: query: SHOW PARTITIONS alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: alter2_db@alter2
#### A masked pattern was here ####
PREHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
PREHOOK: Output: alter2_db@alter2
#### A masked pattern was here ####
POSTHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
POSTHOOK: Output: alter2_db@alter2
POSTHOOK: Output: alter2_db@alter2@insertdate=2008-01-01
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: alter2_db@alter2
PREHOOK: Input: alter2_db@alter2@insertdate=2008-01-01
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: alter2_db@alter2
POSTHOOK: Input: alter2_db@alter2@insertdate=2008-01-01
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter2_db;
CREATE EXTERNAL TABLE `alter2_db`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE alter2_db.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE alter2_db.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-01');
ALTER TABLE alter2_db.alter2 PARTITION (insertdate='2008-01-01') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );


EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[alter2_db, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: SHOW PARTITIONS alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: alter2_db@alter2
POSTHOOK: query: SHOW PARTITIONS alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: alter2_db@alter2
insertdate=2008-01-01
#### A masked pattern was here ####
PREHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
PREHOOK: Output: alter2_db@alter2
#### A masked pattern was here ####
POSTHOOK: type: ALTERTABLE_ADDPARTS
#### A masked pattern was here ####
POSTHOOK: Output: alter2_db@alter2
POSTHOOK: Output: alter2_db@alter2@insertdate=2008-01-02
PREHOOK: query: explain ddl select * from alter2
PREHOOK: type: QUERY
PREHOOK: Input: alter2_db@alter2
PREHOOK: Input: alter2_db@alter2@insertdate=2008-01-01
PREHOOK: Input: alter2_db@alter2@insertdate=2008-01-02
#### A masked pattern was here ####
POSTHOOK: query: explain ddl select * from alter2
POSTHOOK: type: QUERY
POSTHOOK: Input: alter2_db@alter2
POSTHOOK: Input: alter2_db@alter2@insertdate=2008-01-01
POSTHOOK: Input: alter2_db@alter2@insertdate=2008-01-02
#### A masked pattern was here ####
CREATE DATABASE IF NOT EXISTS alter2_db;
CREATE EXTERNAL TABLE `alter2_db`.`alter2`(
  `a` int, 
  `b` int)
PARTITIONED BY ( 
  `insertdate` string)
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
ALTER TABLE alter2_db.alter2 UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE alter2_db.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-01');
ALTER TABLE alter2_db.alter2 PARTITION (insertdate='2008-01-01') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );
ALTER TABLE alter2_db.alter2 ADD IF NOT EXISTS PARTITION (insertdate='2008-01-02');
ALTER TABLE alter2_db.alter2 PARTITION (insertdate='2008-01-02') UPDATE STATISTICS SET('numRows'='0','rawDataSize'='0' );


EXPLAIN select * from alter2;

EXPLAIN CBO select * from alter2;

EXPLAIN VECTORIZED select * from alter2;
CBO PLAN:HiveProject(a=[$0], b=[$1], insertdate=[$2])
  HiveTableScan(table=[[alter2_db, alter2]], table:alias=[alter2])

PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: alter2
          Select Operator
            expressions: a (type: int), b (type: int), insertdate (type: string)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: SHOW PARTITIONS alter2
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: alter2_db@alter2
POSTHOOK: query: SHOW PARTITIONS alter2
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: alter2_db@alter2
insertdate=2008-01-01
insertdate=2008-01-02
PREHOOK: query: DROP TABLE alter2
PREHOOK: type: DROPTABLE
PREHOOK: Input: alter2_db@alter2
PREHOOK: Output: alter2_db@alter2
POSTHOOK: query: DROP TABLE alter2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: alter2_db@alter2
POSTHOOK: Output: alter2_db@alter2
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: DROP DATABASE alter2_db
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:alter2_db
PREHOOK: Output: database:alter2_db
POSTHOOK: query: DROP DATABASE alter2_db
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:alter2_db
POSTHOOK: Output: database:alter2_db
