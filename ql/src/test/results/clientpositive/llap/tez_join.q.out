PREHOOK: query: create table t1_n42(
id string,
od string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1_n42
POSTHOOK: query: create table t1_n42(
id string,
od string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1_n42
PREHOOK: query: create table t2_n26(
id string,
od string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t2_n26
POSTHOOK: query: create table t2_n26(
id string,
od string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t2_n26
PREHOOK: query: explain
select vt1_n42.id from
(select rt1_n42.id from
(select t1_n42.id, t1_n42.od from t1_n42 order by t1_n42.id, t1_n42.od) rt1_n42) vt1_n42
join
(select rt2_n26.id from
(select t2_n26.id, t2_n26.od from t2_n26 order by t2_n26.id, t2_n26.od) rt2_n26) vt2_n26
where vt1_n42.id=vt2_n26.id
PREHOOK: type: QUERY
POSTHOOK: query: explain
select vt1_n42.id from
(select rt1_n42.id from
(select t1_n42.id, t1_n42.od from t1_n42 order by t1_n42.id, t1_n42.od) rt1_n42) vt1_n42
join
(select rt2_n26.id from
(select t2_n26.id, t2_n26.od from t2_n26 order by t2_n26.id, t2_n26.od) rt2_n26) vt2_n26
where vt1_n42.id=vt2_n26.id
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n42
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: id is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: string), od (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        sort order: ++
                        Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: t2_n26
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: id is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id (type: string), od (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        sort order: ++
                        Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                Merge Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: string)
                    1 _col0 (type: string)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 404 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 404 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select vt1_n42.id from
(select rt1_n42.id from
(select t1_n42.id, t1_n42.od from t1_n42 order by t1_n42.id, t1_n42.od) rt1_n42) vt1_n42
join
(select rt2_n26.id from
(select t2_n26.id, t2_n26.od from t2_n26 order by t2_n26.id, t2_n26.od) rt2_n26) vt2_n26
where vt1_n42.id=vt2_n26.id
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n42
PREHOOK: Input: default@t2_n26
#### A masked pattern was here ####
POSTHOOK: query: select vt1_n42.id from
(select rt1_n42.id from
(select t1_n42.id, t1_n42.od from t1_n42 order by t1_n42.id, t1_n42.od) rt1_n42) vt1_n42
join
(select rt2_n26.id from
(select t2_n26.id, t2_n26.od from t2_n26 order by t2_n26.id, t2_n26.od) rt2_n26) vt2_n26
where vt1_n42.id=vt2_n26.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n42
POSTHOOK: Input: default@t2_n26
#### A masked pattern was here ####
