PREHOOK: query: explain extended prepare pcount from select count(*) from src where key > ?
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: explain extended prepare pcount from select count(*) from src where key > ?
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT COUNT(*) AS `$f0`
FROM `default`.`src`
WHERE `key` > CAST(? AS STRING)
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  filterExpr: (key > CAST( $1 AS STRING)) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: (key > CAST( $1 AS STRING)) (type: boolean)
                    Statistics: Num rows: 166 Data size: 14442 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 166 Data size: 14442 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          bucketingVersion: 2
                          null sort order: 
                          numBuckets: -1
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          tag: -1
                          value expressions: _col0 (type: bigint)
                          auto parallelism: false
            Execution mode: llap
            LLAP IO: no inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: src
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    bucket_count -1
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.types string:string
#### A masked pattern was here ####
                    name default.src
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 'default','default'
                      columns.types string:string
#### A masked pattern was here ####
                      name default.src
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.src
                  name: default.src
            Truncated Path -> Alias:
              /src [src]
        Reducer 2 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  bucketingVersion: 2
                  compressed: false
                  GlobalTableId: 0
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        bucketing_version -1
                        columns _col0
                        columns.types bigint
                        escape.delim \
                        hive.serialization.extend.additional.nesting.levels true
                        serialization.escape.crlf true
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pcount from select count(*) from src where key > ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: prepare pcount from select count(*) from src where key > ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  filterExpr: (key > CAST( '200' AS STRING)) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key > CAST( '200' AS STRING)) (type: boolean)
                    Statistics: Num rows: 166 Data size: 14442 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 166 Data size: 14442 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pcount from select count(*) from src where key > ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: prepare pcount from select count(*) from src where key > ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
378
PREHOOK: query: prepare pcount from select count(*) from src where key > ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: prepare pcount from select count(*) from src where key > ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
497
PREHOOK: query: explain prepare p1 from select * from src where key > ? order by key limit 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: explain prepare p1 from select * from src where key > ? order by key limit 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  filterExpr: (key > CAST( $1 AS STRING)) (type: boolean)
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key > CAST( $1 AS STRING)) (type: boolean)
                    Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                    Top N Key Operator
                      sort order: +
                      keys: key (type: string)
                      null sort order: z
                      Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                      top n: 10
                      Select Operator
                        expressions: key (type: string), value (type: string)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          null sort order: z
                          sort order: +
                          Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: string)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 10 Data size: 1780 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 10 Data size: 1780 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

PREHOOK: query: prepare p1 from select * from src where key > ? order by key limit 10
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: prepare p1 from select * from src where key > ? order by key limit 10
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  filterExpr: (key > CAST( '100' AS STRING)) (type: boolean)
                  Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key > CAST( '100' AS STRING)) (type: boolean)
                    Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                    Top N Key Operator
                      sort order: +
                      keys: key (type: string)
                      null sort order: z
                      Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                      top n: 10
                      Select Operator
                        expressions: key (type: string), value (type: string)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          null sort order: z
                          sort order: +
                          Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: string)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), VALUE._col0 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 166 Data size: 29548 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 10
                  Statistics: Num rows: 10 Data size: 1780 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 10 Data size: 1780 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

PREHOOK: query: prepare p1 from select * from src where key > ? order by key limit 10
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: prepare p1 from select * from src where key > ? order by key limit 10
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
103	val_103
103	val_103
104	val_104
104	val_104
105	val_105
11	val_11
111	val_111
113	val_113
113	val_113
114	val_114
PREHOOK: query: explain
    prepare pint
    from select avg(ctinyint) as ag from alltypesorc where cint <= ?  and cbigint <= ? and cfloat != ? group by ctinyint having ag < ?
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: explain
    prepare pint
    from select avg(ctinyint) as ag from alltypesorc where cint <= ?  and cbigint <= ? and cfloat != ? group by ctinyint having ag < ?
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  filterExpr: ((cint <= $1) and (cbigint <= $2) and (cfloat <> $3)) (type: boolean)
                  Statistics: Num rows: 12288 Data size: 183480 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((cint <= $1) and (cbigint <= $2) and (cfloat <> $3)) (type: boolean)
                    Statistics: Num rows: 1365 Data size: 20400 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ctinyint (type: tinyint)
                      outputColumnNames: ctinyint
                      Statistics: Num rows: 1365 Data size: 20400 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: avg(ctinyint)
                        keys: ctinyint (type: tinyint)
                        minReductionHashAggr: 0.9040293
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 131 Data size: 10352 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: tinyint)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: tinyint)
                          Statistics: Num rows: 131 Data size: 10352 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: struct<count:bigint,sum:double,input:tinyint>)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: avg(VALUE._col0)
                keys: KEY._col0 (type: tinyint)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 131 Data size: 1444 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: double)
                  outputColumnNames: _col1
                  Statistics: Num rows: 131 Data size: 1048 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (_col1 < $4) (type: boolean)
                    Statistics: Num rows: 43 Data size: 344 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col1 (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 43 Data size: 344 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 43 Data size: 344 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pint
    from select avg(ctinyint) as ag from alltypesorc where cint <= ?  and cbigint <= ? and cfloat != ? group by ctinyint having ag < ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: prepare pint
    from select avg(ctinyint) as ag from alltypesorc where cint <= ?  and cbigint <= ? and cfloat != ? group by ctinyint having ag < ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  filterExpr: ((cint <= 100) and (cbigint <= 5000000) and (cfloat <> 0.023)) (type: boolean)
                  Statistics: Num rows: 12288 Data size: 183480 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((cint <= 100) and (cbigint <= 5000000) and (cfloat <> 0.023)) (type: boolean)
                    Statistics: Num rows: 1365 Data size: 20400 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ctinyint (type: tinyint)
                      outputColumnNames: ctinyint
                      Statistics: Num rows: 1365 Data size: 20400 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: avg(ctinyint)
                        keys: ctinyint (type: tinyint)
                        minReductionHashAggr: 0.9040293
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 131 Data size: 10352 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: tinyint)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: tinyint)
                          Statistics: Num rows: 131 Data size: 10352 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: struct<count:bigint,sum:double,input:tinyint>)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: avg(VALUE._col0)
                keys: KEY._col0 (type: tinyint)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 131 Data size: 1444 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: double)
                  outputColumnNames: _col1
                  Statistics: Num rows: 131 Data size: 1048 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (_col1 < 0) (type: boolean)
                    Statistics: Num rows: 43 Data size: 344 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col1 (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 43 Data size: 344 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 43 Data size: 344 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pint
    from select avg(ctinyint) as ag from alltypesorc where cint <= ?  and cbigint <= ? and cfloat != ? group by ctinyint having ag < ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: prepare pint
    from select avg(ctinyint) as ag from alltypesorc where cint <= ?  and cbigint <= ? and cfloat != ? group by ctinyint having ag < ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
-51.0
PREHOOK: query: explain
    prepare psint
    from select count(*) as ag from alltypesorc where ctinyint = ?  and csmallint != ? group by cint
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: explain
    prepare psint
    from select count(*) as ag from alltypesorc where ctinyint = ?  and csmallint != ? group by cint
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  filterExpr: ((ctinyint = UDFToByte($1)) and (csmallint <> UDFToShort($2))) (type: boolean)
                  Statistics: Num rows: 12288 Data size: 110092 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((ctinyint = UDFToByte($1)) and (csmallint <> UDFToShort($2))) (type: boolean)
                    Statistics: Num rows: 6144 Data size: 55048 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cint (type: int)
                      outputColumnNames: cint
                      Statistics: Num rows: 6144 Data size: 55048 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        keys: cint (type: int)
                        minReductionHashAggr: 0.49983722
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3072 Data size: 33752 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 3072 Data size: 33752 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3072 Data size: 33752 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: bigint)
                  outputColumnNames: _col0
                  Statistics: Num rows: 3072 Data size: 24576 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3072 Data size: 24576 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare psint
    from select count(*) as ag from alltypesorc where ctinyint <= ?  and csmallint != ? group by cint
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: prepare psint
    from select count(*) as ag from alltypesorc where ctinyint <= ?  and csmallint != ? group by cint
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  filterExpr: ((ctinyint <= UDFToByte(3)) and (csmallint <> UDFToShort(10))) (type: boolean)
                  Statistics: Num rows: 12288 Data size: 110092 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((ctinyint <= UDFToByte(3)) and (csmallint <> UDFToShort(10))) (type: boolean)
                    Statistics: Num rows: 4096 Data size: 36708 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cint (type: int)
                      outputColumnNames: cint
                      Statistics: Num rows: 4096 Data size: 36708 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        keys: cint (type: int)
                        minReductionHashAggr: 0.49975586
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 2048 Data size: 22504 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 2048 Data size: 22504 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 2048 Data size: 22504 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: bigint)
                  outputColumnNames: _col0
                  Statistics: Num rows: 2048 Data size: 16384 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2048 Data size: 16384 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare psint
    from select count(*) as ag from alltypesorc where ctinyint <= ?  and csmallint != ? group by cint
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: prepare psint
    from select count(*) as ag from alltypesorc where ctinyint <= ?  and csmallint != ? group by cint
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
553
547
523
1665
PREHOOK: query: create table tcharvchar(c char(10), v varchar(50)) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tcharvchar
POSTHOOK: query: create table tcharvchar(c char(10), v varchar(50)) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tcharvchar
PREHOOK: query: insert into tcharvchar values ('c1', 'v10'), ('c2', 'v100')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tcharvchar
POSTHOOK: query: insert into tcharvchar values ('c1', 'v10'), ('c2', 'v100')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tcharvchar
POSTHOOK: Lineage: tcharvchar.c SCRIPT []
POSTHOOK: Lineage: tcharvchar.v SCRIPT []
PREHOOK: query: explain prepare pcharv  from select count(*) from tcharvchar where c = ? and v != ?
PREHOOK: type: QUERY
PREHOOK: Input: default@tcharvchar
#### A masked pattern was here ####
POSTHOOK: query: explain prepare pcharv  from select count(*) from tcharvchar where c = ? and v != ?
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tcharvchar
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tcharvchar
                  filterExpr: ((c = CAST( $1 AS CHAR(10))) and (v <> CAST( $2 AS varchar(50)))) (type: boolean)
                  Statistics: Num rows: 2 Data size: 348 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c = CAST( $1 AS CHAR(10))) and (v <> CAST( $2 AS varchar(50)))) (type: boolean)
                    Statistics: Num rows: 1 Data size: 174 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 1 Data size: 174 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.0
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pcharv  from select count(*) from tcharvchar where c = ? and v != ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@tcharvchar
#### A masked pattern was here ####
POSTHOOK: query: prepare pcharv  from select count(*) from tcharvchar where c = ? and v != ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@tcharvchar
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tcharvchar
                  filterExpr: ((c = CAST( 'c1' AS CHAR(10))) and (v <> CAST( 'v1' AS varchar(50)))) (type: boolean)
                  Statistics: Num rows: 2 Data size: 348 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c = CAST( 'c1' AS CHAR(10))) and (v <> CAST( 'v1' AS varchar(50)))) (type: boolean)
                    Statistics: Num rows: 1 Data size: 174 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 1 Data size: 174 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.0
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pcharv  from select count(*) from tcharvchar where c = ? and v != ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@tcharvchar
#### A masked pattern was here ####
POSTHOOK: query: prepare pcharv  from select count(*) from tcharvchar where c = ? and v != ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@tcharvchar
#### A masked pattern was here ####
1
PREHOOK: query: drop table tcharvchar
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tcharvchar
PREHOOK: Output: default@tcharvchar
POSTHOOK: query: drop table tcharvchar
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tcharvchar
POSTHOOK: Output: default@tcharvchar
PREHOOK: query: create table tdatets(t timestamp, d date, dc decimal(10,2)) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tdatets
POSTHOOK: query: create table tdatets(t timestamp, d date, dc decimal(10,2)) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tdatets
PREHOOK: query: insert into tdatets values ( cast('2011-01-01 00:00:00' as timestamp), cast('1919-11-01' as date), 5.00)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tdatets
POSTHOOK: query: insert into tdatets values ( cast('2011-01-01 00:00:00' as timestamp), cast('1919-11-01' as date), 5.00)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tdatets
POSTHOOK: Lineage: tdatets.d SCRIPT []
POSTHOOK: Lineage: tdatets.dc SCRIPT []
POSTHOOK: Lineage: tdatets.t SCRIPT []
PREHOOK: query: insert into tdatets values ( cast('2010-01-01 04:00:00' as timestamp), cast('1918-11-01' as date), 4.00)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tdatets
POSTHOOK: query: insert into tdatets values ( cast('2010-01-01 04:00:00' as timestamp), cast('1918-11-01' as date), 4.00)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tdatets
POSTHOOK: Lineage: tdatets.d SCRIPT []
POSTHOOK: Lineage: tdatets.dc SCRIPT []
POSTHOOK: Lineage: tdatets.t SCRIPT []
PREHOOK: query: explain
    prepare ptsd from select count(*) from tdatets where t != ? and d != ? and dc > ?
PREHOOK: type: QUERY
PREHOOK: Input: default@tdatets
#### A masked pattern was here ####
POSTHOOK: query: explain
    prepare ptsd from select count(*) from tdatets where t != ? and d != ? and dc > ?
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tdatets
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tdatets
                  filterExpr: ((t <> CAST( $1 AS TIMESTAMP)) and (d <> CAST( $2 AS DATE)) and (dc > CAST( $3 AS decimal(10,2)))) (type: boolean)
                  Statistics: Num rows: 2 Data size: 416 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((t <> CAST( $1 AS TIMESTAMP)) and (d <> CAST( $2 AS DATE)) and (dc > CAST( $3 AS decimal(10,2)))) (type: boolean)
                    Statistics: Num rows: 1 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 1 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.0
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare ptsd from select count(*) from tdatets where t != ? and d != ? and dc > ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@tdatets
#### A masked pattern was here ####
POSTHOOK: query: prepare ptsd from select count(*) from tdatets where t != ? and d != ? and dc > ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@tdatets
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tdatets
                  filterExpr: ((t <> CAST( '2012-01-01 00:01:01' AS TIMESTAMP)) and (d <> CAST( '2020-01-01' AS DATE)) and (dc > CAST( 1 AS decimal(10,2)))) (type: boolean)
                  Statistics: Num rows: 2 Data size: 416 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((t <> CAST( '2012-01-01 00:01:01' AS TIMESTAMP)) and (d <> CAST( '2020-01-01' AS DATE)) and (dc > CAST( 1 AS decimal(10,2)))) (type: boolean)
                    Statistics: Num rows: 1 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 1 Data size: 208 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.0
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare ptsd from select count(*) from tdatets where t != ? and d != ? and dc > ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@tdatets
#### A masked pattern was here ####
POSTHOOK: query: prepare ptsd from select count(*) from tdatets where t != ? and d != ? and dc > ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@tdatets
#### A masked pattern was here ####
2
PREHOOK: query: drop table tdatets
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tdatets
PREHOOK: Output: default@tdatets
POSTHOOK: query: drop table tdatets
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tdatets
POSTHOOK: Output: default@tdatets
PREHOOK: query: explain prepare p2 from select min(ctinyint), max(cbigint) from alltypesorc where cint > (? + ? + ?) group by ctinyint
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: explain prepare p2 from select min(ctinyint), max(cbigint) from alltypesorc where cint > (? + ? + ?) group by ctinyint
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  filterExpr: (cint > UDFToInteger((($1 + $2) + $3))) (type: boolean)
                  Statistics: Num rows: 12288 Data size: 146784 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (cint > UDFToInteger((($1 + $2) + $3))) (type: boolean)
                    Statistics: Num rows: 4096 Data size: 48944 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ctinyint (type: tinyint), cbigint (type: bigint)
                      outputColumnNames: ctinyint, cbigint
                      Statistics: Num rows: 4096 Data size: 48944 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: min(ctinyint), max(cbigint)
                        keys: ctinyint (type: tinyint)
                        minReductionHashAggr: 0.9680176
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 131 Data size: 1968 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: tinyint)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: tinyint)
                          Statistics: Num rows: 131 Data size: 1968 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: tinyint), _col2 (type: bigint)
            Execution mode: llap
            LLAP IO: all inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1)
                keys: KEY._col0 (type: tinyint)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 131 Data size: 1968 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col1 (type: tinyint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 131 Data size: 1572 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 131 Data size: 1572 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare p2 from select min(ctinyint), max(cbigint) from alltypesorc where cint > (? + ? + ?) group by ctinyint
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: prepare p2 from select min(ctinyint), max(cbigint) from alltypesorc where cint > (? + ? + ?) group by ctinyint
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
-64	NULL
-62	NULL
-58	NULL
-57	NULL
-54	NULL
-50	NULL
-44	NULL
-42	NULL
-39	NULL
-38	NULL
-37	NULL
-36	NULL
-35	NULL
-31	NULL
-29	NULL
-27	NULL
-26	NULL
-24	NULL
-23	NULL
-22	NULL
-18	NULL
-17	NULL
-16	NULL
-14	NULL
-12	NULL
-11	NULL
-10	NULL
-9	NULL
-8	NULL
-6	NULL
-5	NULL
-4	NULL
-3	NULL
-2	NULL
0	NULL
1	NULL
2	NULL
5	NULL
7	NULL
8	2141237419
11	2145498388
13	NULL
17	NULL
19	NULL
21	NULL
22	NULL
25	NULL
26	NULL
28	NULL
29	NULL
32	NULL
33	NULL
36	NULL
43	NULL
44	NULL
45	NULL
47	NULL
50	NULL
51	NULL
53	NULL
54	NULL
55	NULL
56	NULL
57	NULL
58	NULL
59	NULL
60	NULL
61	NULL
-63	NULL
-61	NULL
-60	NULL
-59	NULL
-56	NULL
-55	NULL
-53	NULL
-52	NULL
-51	2140002067
-49	NULL
-48	NULL
-47	NULL
-46	NULL
-45	NULL
-43	NULL
-41	NULL
-40	NULL
-34	NULL
-33	NULL
-32	NULL
-30	NULL
-28	NULL
-25	NULL
-21	NULL
-20	NULL
-19	NULL
-15	NULL
-13	NULL
-7	NULL
-1	NULL
3	NULL
4	NULL
6	NULL
9	NULL
10	NULL
12	NULL
14	NULL
15	NULL
16	NULL
18	NULL
20	NULL
23	NULL
24	NULL
27	NULL
30	NULL
31	NULL
34	NULL
35	NULL
37	NULL
38	NULL
39	NULL
40	NULL
41	NULL
42	NULL
46	NULL
48	NULL
49	NULL
52	NULL
62	NULL
NULL	1864027286
PREHOOK: query: explain prepare pconcat
    from select count(*) from src where key > concat(?, ?)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: explain prepare pconcat
    from select count(*) from src where key > concat(?, ?)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  filterExpr: (key > concat(CAST( $1 AS STRING), $2)) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key > concat(CAST( $1 AS STRING), $2)) (type: boolean)
                    Statistics: Num rows: 166 Data size: 14442 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 166 Data size: 14442 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pconcat
    from select count(*) from src where key > concat(?, ?)
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: prepare pconcat
    from select count(*) from src where key > concat(?, ?)
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  filterExpr: (key > concat(CAST( '1' AS STRING), '20')) (type: boolean)
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key > concat(CAST( '1' AS STRING), '20')) (type: boolean)
                    Statistics: Num rows: 166 Data size: 14442 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 166 Data size: 14442 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pconcat
    from select count(*) from src where key > concat(?, ?)
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: prepare pconcat
    from select count(*) from src where key > concat(?, ?)
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
474
PREHOOK: query: create table daysales (customer int) partitioned by (dt string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@daysales
POSTHOOK: query: create table daysales (customer int) partitioned by (dt string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@daysales
PREHOOK: query: insert into daysales partition(dt='2001-01-01') values(1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@daysales@dt=2001-01-01
POSTHOOK: query: insert into daysales partition(dt='2001-01-01') values(1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@daysales@dt=2001-01-01
POSTHOOK: Lineage: daysales PARTITION(dt=2001-01-01).customer SCRIPT []
PREHOOK: query: insert into daysales partition(dt='2001-01-03') values(1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@daysales@dt=2001-01-03
POSTHOOK: query: insert into daysales partition(dt='2001-01-03') values(1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@daysales@dt=2001-01-03
POSTHOOK: Lineage: daysales PARTITION(dt=2001-01-03).customer SCRIPT []
PREHOOK: query: insert into daysales partition(dt='2001-01-03') values(1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@daysales@dt=2001-01-03
POSTHOOK: query: insert into daysales partition(dt='2001-01-03') values(1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@daysales@dt=2001-01-03
POSTHOOK: Lineage: daysales PARTITION(dt=2001-01-03).customer SCRIPT []
PREHOOK: query: explain prepare pPart1 from select count(*) from daysales where dt=? and customer=?
PREHOOK: type: QUERY
PREHOOK: Input: default@daysales
PREHOOK: Input: default@daysales@dt=2001-01-01
PREHOOK: Input: default@daysales@dt=2001-01-03
#### A masked pattern was here ####
POSTHOOK: query: explain prepare pPart1 from select count(*) from daysales where dt=? and customer=?
POSTHOOK: type: QUERY
POSTHOOK: Input: default@daysales
POSTHOOK: Input: default@daysales@dt=2001-01-01
POSTHOOK: Input: default@daysales@dt=2001-01-03
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: daysales
                  filterExpr: ((dt = CAST( $1 AS STRING)) and (customer = UDFToInteger($2))) (type: boolean)
                  Statistics: Num rows: 3 Data size: 564 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((dt = CAST( $1 AS STRING)) and (customer = UDFToInteger($2))) (type: boolean)
                    Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.0
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pPart1 from select count(*) from daysales where dt=? and customer=?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@daysales
PREHOOK: Input: default@daysales@dt=2001-01-01
PREHOOK: Input: default@daysales@dt=2001-01-03
#### A masked pattern was here ####
POSTHOOK: query: prepare pPart1 from select count(*) from daysales where dt=? and customer=?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@daysales
POSTHOOK: Input: default@daysales@dt=2001-01-01
POSTHOOK: Input: default@daysales@dt=2001-01-03
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: daysales
                  filterExpr: ((dt = CAST( '2001-01-01' AS STRING)) and (customer = UDFToInteger(1))) (type: boolean)
                  Statistics: Num rows: 3 Data size: 564 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((dt = CAST( '2001-01-01' AS STRING)) and (customer = UDFToInteger(1))) (type: boolean)
                    Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 1 Data size: 188 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.0
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pPart1 from select count(*) from daysales where dt=? and customer=?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@daysales
PREHOOK: Input: default@daysales@dt=2001-01-01
PREHOOK: Input: default@daysales@dt=2001-01-03
#### A masked pattern was here ####
POSTHOOK: query: prepare pPart1 from select count(*) from daysales where dt=? and customer=?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@daysales
POSTHOOK: Input: default@daysales@dt=2001-01-01
POSTHOOK: Input: default@daysales@dt=2001-01-03
#### A masked pattern was here ####
1
PREHOOK: query: prepare pPart1 from select count(*) from daysales where dt=? and customer=?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@daysales
PREHOOK: Input: default@daysales@dt=2001-01-01
PREHOOK: Input: default@daysales@dt=2001-01-03
#### A masked pattern was here ####
POSTHOOK: query: prepare pPart1 from select count(*) from daysales where dt=? and customer=?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@daysales
POSTHOOK: Input: default@daysales@dt=2001-01-01
POSTHOOK: Input: default@daysales@dt=2001-01-03
#### A masked pattern was here ####
2
PREHOOK: query: create table testParam(c char(5), v varchar(10), d decimal(10,3), dt date) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@testParam
POSTHOOK: query: create table testParam(c char(5), v varchar(10), d decimal(10,3), dt date) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@testParam
PREHOOK: query: insert into testParam values ('ch1', 'var1', 1000.34,'1947-12-12' )
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@testparam
POSTHOOK: query: insert into testParam values ('ch1', 'var1', 1000.34,'1947-12-12' )
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@testparam
POSTHOOK: Lineage: testparam.c SCRIPT []
POSTHOOK: Lineage: testparam.d SCRIPT []
POSTHOOK: Lineage: testparam.dt SCRIPT []
POSTHOOK: Lineage: testparam.v SCRIPT []
PREHOOK: query: insert into testParam values ('ch2', 'var2', 2000.00,'1967-02-02')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@testparam
POSTHOOK: query: insert into testParam values ('ch2', 'var2', 2000.00,'1967-02-02')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@testparam
POSTHOOK: Lineage: testparam.c SCRIPT []
POSTHOOK: Lineage: testparam.d SCRIPT []
POSTHOOK: Lineage: testparam.dt SCRIPT []
POSTHOOK: Lineage: testparam.v SCRIPT []
PREHOOK: query: CREATE TABLE alltypes(
    c char(5),
    v varchar(10),
    d decimal(10,3),
    dt date,
    bl boolean,
    ctinyint TINYINT,
    csmallint SMALLINT,
    cint INT,
    cbigint BIGINT,
    cfloat FLOAT,
    cdouble DOUBLE,
    cstring1 STRING,
    ctimestamp1 TIMESTAMP)
    stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alltypes
POSTHOOK: query: CREATE TABLE alltypes(
    c char(5),
    v varchar(10),
    d decimal(10,3),
    dt date,
    bl boolean,
    ctinyint TINYINT,
    csmallint SMALLINT,
    cint INT,
    cbigint BIGINT,
    cfloat FLOAT,
    cdouble DOUBLE,
    cstring1 STRING,
    ctimestamp1 TIMESTAMP)
    stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alltypes
Warning: Shuffle Join MERGEJOIN[22][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: insert into alltypes select c,v,d,dt,cboolean1,ctinyint,csmallint,cint,cbigint,cfloat,cdouble,cstring1,ctimestamp1
    from testParam join alltypesorc where ctinyint is not null order by cboolean2 limit 500
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
PREHOOK: Input: default@testparam
PREHOOK: Output: default@alltypes
POSTHOOK: query: insert into alltypes select c,v,d,dt,cboolean1,ctinyint,csmallint,cint,cbigint,cfloat,cdouble,cstring1,ctimestamp1
    from testParam join alltypesorc where ctinyint is not null order by cboolean2 limit 500
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Input: default@testparam
POSTHOOK: Output: default@alltypes
POSTHOOK: Lineage: alltypes.bl SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: alltypes.c SIMPLE [(testparam)testparam.FieldSchema(name:c, type:char(5), comment:null), ]
POSTHOOK: Lineage: alltypes.cbigint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: alltypes.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: alltypes.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: alltypes.cint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: alltypes.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: alltypes.cstring1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: alltypes.ctimestamp1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: alltypes.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
POSTHOOK: Lineage: alltypes.d SIMPLE [(testparam)testparam.FieldSchema(name:d, type:decimal(10,3), comment:null), ]
POSTHOOK: Lineage: alltypes.dt SIMPLE [(testparam)testparam.FieldSchema(name:dt, type:date, comment:null), ]
POSTHOOK: Lineage: alltypes.v SIMPLE [(testparam)testparam.FieldSchema(name:v, type:varchar(10), comment:null), ]
PREHOOK: query: select * from alltypes
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: select * from alltypes
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
ch1  	var1	1000.340	1947-12-12	true	11	NULL	25892751	-1978674520	11.0	NULL	ET3d4F2I4lV	1969-12-31 16:00:02.351
ch2  	var2	2000.000	1967-02-02	NULL	22	-200	NULL	-998574307	22.0	-200.0	NULL	1969-12-31 16:00:10.436
ch1  	var1	1000.340	1947-12-12	NULL	15	-7196	NULL	965505355	15.0	-7196.0	NULL	1969-12-31 16:00:08.615
ch1  	var1	1000.340	1947-12-12	false	11	NULL	878306866	1883452895	11.0	NULL	3rDE5ohocdMweTS7gspnT3	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	959723602	-460226493	11.0	NULL	H8PP4887	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-985655403	1798347287	11.0	NULL	esc3k10A074II2a6h45	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-453151220	1834604085	11.0	NULL	0rdrrU461v	1969-12-31 16:00:02.351
ch2  	var2	2000.000	1967-02-02	NULL	24	-200	NULL	-499521357	24.0	-200.0	NULL	1969-12-31 15:59:44.55
ch1  	var1	1000.340	1947-12-12	NULL	-21	-7196	NULL	-1827273066	-21.0	-7196.0	NULL	1969-12-31 16:00:15.188
ch1  	var1	1000.340	1947-12-12	NULL	34	-7196	NULL	1412648789	34.0	-7196.0	NULL	1969-12-31 16:00:04.36
ch1  	var1	1000.340	1947-12-12	NULL	-5	-7196	NULL	-474752759	-5.0	-7196.0	NULL	1969-12-31 16:00:10.326
ch1  	var1	1000.340	1947-12-12	NULL	-13	-7196	NULL	-1900879493	-13.0	-7196.0	NULL	1969-12-31 15:59:52.946
ch1  	var1	1000.340	1947-12-12	NULL	-39	-7196	NULL	-398822457	-39.0	-7196.0	NULL	1969-12-31 15:59:44.512
ch1  	var1	1000.340	1947-12-12	NULL	-9	-7196	NULL	123461184	-9.0	-7196.0	NULL	1969-12-31 15:59:58.061
ch1  	var1	1000.340	1947-12-12	NULL	-12	-7196	NULL	-1938621277	-12.0	-7196.0	NULL	1969-12-31 15:59:51.038
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-67924063	348175083	11.0	NULL	5O4amH0XK1mu8716	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-837529554	874008450	11.0	NULL	yAl0UQdXg0	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-193440333	-1084617270	11.0	NULL	nUyrKhXj4RG6e3c3nRpP2	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-253814694	-596249136	11.0	NULL	tOG5U	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	91838950	1738547959	11.0	NULL	DfTvU1F4hkNd5lJ4FGSe	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-528532585	-511463313	11.0	NULL	ijU4c	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-433998199	-1675997054	11.0	NULL	Mekui5MM6PUU06e	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	1000549600	1192003058	11.0	NULL	B7P12uoI	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	891370742	-1197683264	11.0	NULL	WKH6j0Dtb3VNsOa4uFq2v	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	606800306	798714948	11.0	NULL	6p0GBdNQ2l5m15T	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	317155416	1323600966	11.0	NULL	IUtkHTnBRV	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-170811446	-272326423	11.0	NULL	1q6mOJMMOOaF1FraYJET8Y	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-538267859	502201431	11.0	NULL	vkYPoDV5YkBk	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-878577676	819385623	11.0	NULL	ea23p2penJ5W5T4	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	558776204	-2013188419	11.0	NULL	M45b3SlE5q5n	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-654374827	857266469	11.0	NULL	OEfPnHnIYueoup	1969-12-31 16:00:02.351
ch2  	var2	2000.000	1967-02-02	NULL	8	-200	NULL	-1236645308	8.0	-200.0	NULL	1969-12-31 15:59:46.007
ch1  	var1	1000.340	1947-12-12	NULL	-45	-7196	NULL	-1352651602	-45.0	-7196.0	NULL	1969-12-31 16:00:09.332
ch1  	var1	1000.340	1947-12-12	NULL	-61	-7196	NULL	NULL	-61.0	-7196.0	NULL	1969-12-31 16:00:11.842
ch1  	var1	1000.340	1947-12-12	NULL	-61	-7196	NULL	-1513172815	-61.0	-7196.0	NULL	1969-12-31 16:00:03.049
ch1  	var1	1000.340	1947-12-12	NULL	57	-7196	NULL	-1511601241	57.0	-7196.0	NULL	1969-12-31 15:59:51.725
ch1  	var1	1000.340	1947-12-12	NULL	2	-7196	NULL	1633931264	2.0	-7196.0	NULL	1969-12-31 15:59:51.184
ch1  	var1	1000.340	1947-12-12	NULL	-29	-7196	NULL	-1851730063	-29.0	-7196.0	NULL	1969-12-31 16:00:01.125
ch1  	var1	1000.340	1947-12-12	NULL	61	-7196	NULL	1875242301	61.0	-7196.0	NULL	1969-12-31 16:00:13.868
ch1  	var1	1000.340	1947-12-12	NULL	-46	-7196	NULL	-1020872577	-46.0	-7196.0	NULL	1969-12-31 15:59:54.257
ch1  	var1	1000.340	1947-12-12	NULL	-45	-7196	NULL	-123182483	-45.0	-7196.0	NULL	1969-12-31 15:59:49.512
ch1  	var1	1000.340	1947-12-12	NULL	16	-7196	NULL	-2016344182	16.0	-7196.0	NULL	1969-12-31 15:59:50.404
ch1  	var1	1000.340	1947-12-12	NULL	-19	-7196	NULL	-1169681501	-19.0	-7196.0	NULL	1969-12-31 16:00:06.188
ch1  	var1	1000.340	1947-12-12	NULL	4	-7196	NULL	-1498229137	4.0	-7196.0	NULL	1969-12-31 16:00:12.309
ch1  	var1	1000.340	1947-12-12	NULL	56	-7196	NULL	1421751268	56.0	-7196.0	NULL	1969-12-31 16:00:00.909
ch1  	var1	1000.340	1947-12-12	NULL	-37	-7196	NULL	-680140600	-37.0	-7196.0	NULL	1969-12-31 16:00:11.738
ch1  	var1	1000.340	1947-12-12	NULL	-51	-7196	NULL	1611717184	-51.0	-7196.0	NULL	1969-12-31 15:59:45.932
ch1  	var1	1000.340	1947-12-12	NULL	62	-7196	NULL	-519770970	62.0	-7196.0	NULL	1969-12-31 15:59:48.395
ch1  	var1	1000.340	1947-12-12	NULL	-45	-7196	NULL	635433167	-45.0	-7196.0	NULL	1969-12-31 16:00:12.921
ch1  	var1	1000.340	1947-12-12	NULL	-64	-7196	NULL	-1615920595	-64.0	-7196.0	NULL	1969-12-31 16:00:11.912
ch1  	var1	1000.340	1947-12-12	NULL	-29	-7196	NULL	-473766733	-29.0	-7196.0	NULL	1969-12-31 16:00:16.065
ch1  	var1	1000.340	1947-12-12	NULL	48	-7196	NULL	-449170614	48.0	-7196.0	NULL	1969-12-31 16:00:05.616
ch1  	var1	1000.340	1947-12-12	NULL	29	-7196	NULL	867823537	29.0	-7196.0	NULL	1969-12-31 15:59:53.458
ch1  	var1	1000.340	1947-12-12	NULL	-45	-7196	NULL	-366443186	-45.0	-7196.0	NULL	1969-12-31 16:00:11.856
ch1  	var1	1000.340	1947-12-12	NULL	-43	-7196	NULL	-1328837124	-43.0	-7196.0	NULL	1969-12-31 15:59:51.433
ch1  	var1	1000.340	1947-12-12	NULL	3	-7196	NULL	-1668843486	3.0	-7196.0	NULL	1969-12-31 15:59:50.265
ch1  	var1	1000.340	1947-12-12	NULL	-6	-7196	NULL	1934144944	-6.0	-7196.0	NULL	1969-12-31 15:59:58.625
ch1  	var1	1000.340	1947-12-12	NULL	-21	-7196	NULL	-1096608306	-21.0	-7196.0	NULL	1969-12-31 16:00:01.062
ch1  	var1	1000.340	1947-12-12	NULL	5	-7196	NULL	-1716824974	5.0	-7196.0	NULL	1969-12-31 15:59:44.401
ch1  	var1	1000.340	1947-12-12	NULL	-5	-7196	NULL	-1556798997	-5.0	-7196.0	NULL	1969-12-31 15:59:43.948
ch1  	var1	1000.340	1947-12-12	NULL	-46	-7196	NULL	-1737647990	-46.0	-7196.0	NULL	1969-12-31 16:00:07.744
ch1  	var1	1000.340	1947-12-12	NULL	-47	-7196	NULL	1481273634	-47.0	-7196.0	NULL	1969-12-31 16:00:10.274
ch1  	var1	1000.340	1947-12-12	NULL	-14	-7196	NULL	-1552199500	-14.0	-7196.0	NULL	1969-12-31 16:00:11.065
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-109176674	256433515	11.0	NULL	fg7BpI	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	956505958	1382764942	11.0	NULL	3Qm5PpAGbhf8NkWHJPv	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	NULL	520444480	11.0	NULL	Xw6nBW1A205Rv7rE	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	437290024	-301235714	11.0	NULL	t35FRs	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-851613195	729823064	11.0	NULL	34p208wH32	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	558148199	-1307447880	11.0	NULL	Evy38C7jJH13gywu	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	533286683	-729712683	11.0	NULL	7Fu3P11UxJJ101	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-1051223597	-1074802968	11.0	NULL	7i7FJDchQc1	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	460270374	-1788936061	11.0	NULL	W0K88hHwlY6g5JNIeRT311G3	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-169706155	1019412771	11.0	NULL	TNxkTGadB87QTkpe177	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	151510572	-834471234	11.0	NULL	1RWm38Sn4LfJyr7341Mg	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-637153545	-1503166059	11.0	NULL	j60Kr2t1K	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-925970696	1187679350	11.0	NULL	46uf5iNX	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	691082966	267061091	11.0	NULL	7i03i80	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-603645790	158133212	11.0	NULL	2sQ408i6h2V7MI7	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	547309599	472477804	11.0	NULL	fpgauY3B1	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-279987023	-2100681528	11.0	NULL	l6E3G8	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	891702124	1875891525	11.0	NULL	02k5poW73QsWM	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-709936547	-1662978851	11.0	NULL	YXbTksK2YAt32i4vi6xyT2	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-791904835	-639988447	11.0	NULL	5TVADgO1Sm3	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	608433699	119919777	11.0	NULL	UtFC8i5	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-619943931	-774012758	11.0	NULL	iASE7cWnCT4NRf	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-907424078	-1800270623	11.0	NULL	fwo2yaxByegAga0	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	561612929	780432663	11.0	NULL	1f4h0JU667ht28ergbmQ42	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	11134454	905490638	11.0	NULL	V5u6EjQhsMFyr2vF	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	461729876	-893147159	11.0	NULL	6s3xvhV71f7c6l0Y8	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-279520896	-2123170141	11.0	NULL	7e8cuG44	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-101283906	-1784935395	11.0	NULL	L64VGc	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-277828168	-851937830	11.0	NULL	6WRFtUnuF3scFWKkY4h782J	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	178616625	486971827	11.0	NULL	ie3QYAuCo	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	499930503	-1367861196	11.0	NULL	lt17miwn	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	129012357	-32434893	11.0	NULL	K11m3K43m5XFX40RJm1q	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	129466569	-942283901	11.0	NULL	88dJOgqIlfUA411	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-521365810	784342400	11.0	NULL	ibHg41d7f	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	592876446	1388475279	11.0	NULL	fqa4UONO5MWDc7865q	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	326872972	-866014829	11.0	NULL	F8iVJQQdC6O4	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-552944417	921326410	11.0	NULL	y6LhmEv	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	578700764	-1151212846	11.0	NULL	0Y77KBQmKC14u	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-1009874474	204614388	11.0	NULL	8IkicjRJ21c054Id	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	11340479	-89010	11.0	NULL	64BdFi2c15JM5X17	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-927796109	324212994	11.0	NULL	ASm1a20I155Y	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-978898374	-277483031	11.0	NULL	ShA4jlmOwF8u7kjN	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-970640948	-935612665	11.0	NULL	frhe0	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	317280702	916313223	11.0	NULL	7Jg216IPQ2H7	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-941753533	707480272	11.0	NULL	033ffm5082ng0V	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-421483499	-1772476736	11.0	NULL	0uu4FunxNR7iOvw7NyH7mo	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	934047572	1633949456	11.0	NULL	KnmtSR55J731b	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	1024119187	-1455293478	11.0	NULL	qlspyY30jeWkAcB1ptQ4co0	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-426394849	-1901545814	11.0	NULL	JUm3vwG65q33	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-376052893	964715336	11.0	NULL	cd6Xc861fDCGe	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-940778067	2062765364	11.0	NULL	vjtW5U2e1	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	893038213	539637874	11.0	NULL	jU6BuS50j	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	795692336	1601223554	11.0	NULL	743510L4r5Npy	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	922411755	2060629480	11.0	NULL	juAf7RsFm7v5rx87	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	4972984	-483828108	11.0	NULL	Sf45K8ueb68jp6s8	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-64615982	1803053750	11.0	NULL	8J5OB7K26PEV7kdbeHr3	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	1026014842	1442500743	11.0	NULL	15cWEp2JVNf8	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	752323412	-961194727	11.0	NULL	P4shXtBlvn	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	NULL	67958552	11.0	NULL	nlVvHbKNkU5I04XtkP6	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-429107590	-1665467639	11.0	NULL	6X5JRqA20OBFr	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	491005660	-395304704	11.0	NULL	5VVjy5IoG2Cu2GcdHEU72qsu	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	158416501	255898954	11.0	NULL	716Tk0iWs7Y	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	56	-7196	NULL	-2145481991	56.0	-7196.0	NULL	1969-12-31 15:59:55.667
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-592237581	-46848452	11.0	NULL	auGhMXSG3mUqnh	1969-12-31 16:00:02.351
ch2  	var2	2000.000	1967-02-02	NULL	38	-200	NULL	-1090414113	38.0	-200.0	NULL	1969-12-31 16:00:05.478
ch1  	var1	1000.340	1947-12-12	true	11	NULL	326833678	-477260848	11.0	NULL	7D436RM5BwJ2ykbsgu	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-62	-7196	NULL	-840223244	-62.0	-7196.0	NULL	1969-12-31 16:00:09.025
ch1  	var1	1000.340	1947-12-12	NULL	-13	-7196	NULL	-390869916	-13.0	-7196.0	NULL	1969-12-31 15:59:52.976
ch1  	var1	1000.340	1947-12-12	NULL	3	-7196	NULL	918951834	3.0	-7196.0	NULL	1969-12-31 16:00:06.624
ch1  	var1	1000.340	1947-12-12	NULL	-15	-7196	NULL	-943224537	-15.0	-7196.0	NULL	1969-12-31 15:59:58.668
ch1  	var1	1000.340	1947-12-12	NULL	48	-7196	NULL	1639854261	48.0	-7196.0	NULL	1969-12-31 16:00:07.257
ch1  	var1	1000.340	1947-12-12	NULL	12	-7196	NULL	159910702	12.0	-7196.0	NULL	1969-12-31 15:59:57.98
ch1  	var1	1000.340	1947-12-12	NULL	52	-7196	NULL	1735974184	52.0	-7196.0	NULL	1969-12-31 15:59:58.309
ch1  	var1	1000.340	1947-12-12	NULL	-2	-7196	NULL	-1268340526	-2.0	-7196.0	NULL	1969-12-31 15:59:48.389
ch1  	var1	1000.340	1947-12-12	NULL	-8	-7196	NULL	994075198	-8.0	-7196.0	NULL	1969-12-31 15:59:56.367
ch1  	var1	1000.340	1947-12-12	NULL	-34	-7196	NULL	1591827313	-34.0	-7196.0	NULL	1969-12-31 15:59:50.263
ch1  	var1	1000.340	1947-12-12	NULL	44	-7196	NULL	1723777074	44.0	-7196.0	NULL	1969-12-31 15:59:55.798
ch1  	var1	1000.340	1947-12-12	NULL	-17	-7196	NULL	-509557318	-17.0	-7196.0	NULL	1969-12-31 15:59:56.135
ch1  	var1	1000.340	1947-12-12	NULL	29	-7196	NULL	1918451926	29.0	-7196.0	NULL	1969-12-31 15:59:47.097
ch1  	var1	1000.340	1947-12-12	NULL	-62	-7196	NULL	-642836823	-62.0	-7196.0	NULL	1969-12-31 16:00:03.85
ch1  	var1	1000.340	1947-12-12	NULL	8	-7196	NULL	599224705	8.0	-7196.0	NULL	1969-12-31 16:00:00.613
ch1  	var1	1000.340	1947-12-12	NULL	-45	-7196	NULL	1306133727	-45.0	-7196.0	NULL	1969-12-31 15:59:52.164
ch1  	var1	1000.340	1947-12-12	NULL	1	-7196	NULL	-860168842	1.0	-7196.0	NULL	1969-12-31 15:59:55.524
ch1  	var1	1000.340	1947-12-12	NULL	-48	-7196	NULL	-1035336927	-48.0	-7196.0	NULL	1969-12-31 16:00:01.813
ch1  	var1	1000.340	1947-12-12	NULL	34	-7196	NULL	221369308	34.0	-7196.0	NULL	1969-12-31 16:00:00.82
ch1  	var1	1000.340	1947-12-12	NULL	-35	-7196	NULL	668477655	-35.0	-7196.0	NULL	1969-12-31 16:00:12.959
ch1  	var1	1000.340	1947-12-12	NULL	-51	-7196	NULL	-1339164819	-51.0	-7196.0	NULL	1969-12-31 15:59:43.64
ch1  	var1	1000.340	1947-12-12	NULL	-31	-7196	NULL	-1024257790	-31.0	-7196.0	NULL	1969-12-31 15:59:54.845
ch1  	var1	1000.340	1947-12-12	NULL	-36	-7196	NULL	756475174	-36.0	-7196.0	NULL	1969-12-31 16:00:08.615
ch1  	var1	1000.340	1947-12-12	NULL	61	-7196	NULL	-322878567	61.0	-7196.0	NULL	1969-12-31 15:59:44.081
ch1  	var1	1000.340	1947-12-12	NULL	-13	-7196	NULL	-1633774587	-13.0	-7196.0	NULL	1969-12-31 15:59:48.703
ch1  	var1	1000.340	1947-12-12	NULL	-50	-7196	NULL	1294693950	-50.0	-7196.0	NULL	1969-12-31 15:59:53.689
ch1  	var1	1000.340	1947-12-12	NULL	42	-7196	NULL	1644841467	42.0	-7196.0	NULL	1969-12-31 16:00:00.992
ch1  	var1	1000.340	1947-12-12	NULL	6	-7196	NULL	-95453964	6.0	-7196.0	NULL	1969-12-31 15:59:58.692
ch1  	var1	1000.340	1947-12-12	NULL	-18	-7196	NULL	-1501501535	-18.0	-7196.0	NULL	1969-12-31 15:59:53.782
ch1  	var1	1000.340	1947-12-12	NULL	-11	-7196	NULL	-1261670420	-11.0	-7196.0	NULL	1969-12-31 15:59:57.148
ch1  	var1	1000.340	1947-12-12	NULL	-54	-7196	NULL	1476582815	-54.0	-7196.0	NULL	1969-12-31 15:59:53.657
ch1  	var1	1000.340	1947-12-12	NULL	-28	-7196	NULL	-444000127	-28.0	-7196.0	NULL	1969-12-31 15:59:51.637
ch1  	var1	1000.340	1947-12-12	NULL	21	-7196	NULL	1755924724	21.0	-7196.0	NULL	1969-12-31 16:00:10.652
ch1  	var1	1000.340	1947-12-12	NULL	-63	-7196	NULL	-994504916	-63.0	-7196.0	NULL	1969-12-31 16:00:11.946
ch1  	var1	1000.340	1947-12-12	NULL	-52	-7196	NULL	628698169	-52.0	-7196.0	NULL	1969-12-31 15:59:47.15
ch1  	var1	1000.340	1947-12-12	NULL	54	-7196	NULL	381343252	54.0	-7196.0	NULL	1969-12-31 16:00:08.241
ch1  	var1	1000.340	1947-12-12	NULL	34	-7196	NULL	-369187268	34.0	-7196.0	NULL	1969-12-31 15:59:46.881
ch1  	var1	1000.340	1947-12-12	NULL	23	-7196	NULL	-1508117731	23.0	-7196.0	NULL	1969-12-31 16:00:11.785
ch1  	var1	1000.340	1947-12-12	NULL	46	-7196	NULL	-1064883361	46.0	-7196.0	NULL	1969-12-31 15:59:47.842
ch1  	var1	1000.340	1947-12-12	NULL	-57	-7196	NULL	2042351711	-57.0	-7196.0	NULL	1969-12-31 16:00:05.5
ch1  	var1	1000.340	1947-12-12	true	11	NULL	1009598106	-223630925	11.0	NULL	Nh3E7W0Cb1	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-43	-7196	NULL	-798982337	-43.0	-7196.0	NULL	1969-12-31 16:00:08.967
ch1  	var1	1000.340	1947-12-12	NULL	15	-7196	NULL	1104752029	15.0	-7196.0	NULL	1969-12-31 15:59:49.051
ch1  	var1	1000.340	1947-12-12	NULL	-64	-7196	NULL	-1639157869	-64.0	-7196.0	NULL	1969-12-31 16:00:01.785
ch1  	var1	1000.340	1947-12-12	NULL	-58	-7196	NULL	1257970504	-58.0	-7196.0	NULL	1969-12-31 16:00:12.065
ch1  	var1	1000.340	1947-12-12	NULL	-15	-7196	NULL	-364742164	-15.0	-7196.0	NULL	1969-12-31 16:00:11.257
ch1  	var1	1000.340	1947-12-12	NULL	57	-7196	NULL	-1058636150	57.0	-7196.0	NULL	1969-12-31 15:59:55.521
ch1  	var1	1000.340	1947-12-12	NULL	14	-7196	NULL	-1660510440	14.0	-7196.0	NULL	1969-12-31 16:00:00.394
ch1  	var1	1000.340	1947-12-12	NULL	36	-7196	NULL	1613629130	36.0	-7196.0	NULL	1969-12-31 16:00:00.865
ch1  	var1	1000.340	1947-12-12	NULL	-14	-7196	NULL	87724305	-14.0	-7196.0	NULL	1969-12-31 16:00:04.574
ch1  	var1	1000.340	1947-12-12	NULL	41	-7196	NULL	791540035	41.0	-7196.0	NULL	1969-12-31 16:00:08.418
ch1  	var1	1000.340	1947-12-12	NULL	-61	-7196	NULL	NULL	-61.0	-7196.0	NULL	1969-12-31 15:59:44.823
ch1  	var1	1000.340	1947-12-12	NULL	62	-7196	NULL	1034824629	62.0	-7196.0	NULL	1969-12-31 16:00:12.762
ch1  	var1	1000.340	1947-12-12	NULL	-39	-7196	NULL	1320376751	-39.0	-7196.0	NULL	1969-12-31 15:59:49.331
ch1  	var1	1000.340	1947-12-12	NULL	-39	-7196	NULL	-1161932838	-39.0	-7196.0	NULL	1969-12-31 15:59:53.686
ch1  	var1	1000.340	1947-12-12	NULL	47	-7196	NULL	58767695	47.0	-7196.0	NULL	1969-12-31 16:00:01.694
ch1  	var1	1000.340	1947-12-12	NULL	20	-7196	NULL	-1587089429	20.0	-7196.0	NULL	1969-12-31 16:00:01.267
ch1  	var1	1000.340	1947-12-12	NULL	2	-7196	NULL	-580663229	2.0	-7196.0	NULL	1969-12-31 15:59:49.021
ch1  	var1	1000.340	1947-12-12	NULL	41	-7196	NULL	649072626	41.0	-7196.0	NULL	1969-12-31 15:59:44.57
ch1  	var1	1000.340	1947-12-12	NULL	25	-7196	NULL	1957235821	25.0	-7196.0	NULL	1969-12-31 16:00:11.749
ch1  	var1	1000.340	1947-12-12	true	11	NULL	574366935	1114814575	11.0	NULL	u66PB1Uh	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-10	-7196	NULL	-2010228069	-10.0	-7196.0	NULL	1969-12-31 16:00:13.684
ch1  	var1	1000.340	1947-12-12	NULL	15	-7196	NULL	-2123641234	15.0	-7196.0	NULL	1969-12-31 16:00:03.256
ch1  	var1	1000.340	1947-12-12	NULL	4	-7196	NULL	-514465592	4.0	-7196.0	NULL	1969-12-31 15:59:45.595
ch1  	var1	1000.340	1947-12-12	NULL	-13	-7196	NULL	-111469961	-13.0	-7196.0	NULL	1969-12-31 15:59:53.746
ch1  	var1	1000.340	1947-12-12	NULL	-19	-7196	NULL	NULL	-19.0	-7196.0	NULL	1969-12-31 16:00:10.814
ch1  	var1	1000.340	1947-12-12	NULL	54	-7196	NULL	-2133897574	54.0	-7196.0	NULL	1969-12-31 16:00:00.546
ch1  	var1	1000.340	1947-12-12	NULL	13	-7196	NULL	1626425715	13.0	-7196.0	NULL	1969-12-31 16:00:05.368
ch1  	var1	1000.340	1947-12-12	NULL	0	-7196	NULL	1907356119	0.0	-7196.0	NULL	1969-12-31 16:00:11.089
ch1  	var1	1000.340	1947-12-12	NULL	-35	-7196	NULL	1199675481	-35.0	-7196.0	NULL	1969-12-31 15:59:48.408
ch1  	var1	1000.340	1947-12-12	NULL	-35	-7196	NULL	-990632641	-35.0	-7196.0	NULL	1969-12-31 15:59:46.585
ch1  	var1	1000.340	1947-12-12	NULL	-44	-7196	NULL	524734261	-44.0	-7196.0	NULL	1969-12-31 16:00:00.289
ch1  	var1	1000.340	1947-12-12	NULL	3	-7196	NULL	-2140316424	3.0	-7196.0	NULL	1969-12-31 16:00:05.162
ch1  	var1	1000.340	1947-12-12	NULL	-6	-7196	NULL	687081709	-6.0	-7196.0	NULL	1969-12-31 16:00:06.4
ch1  	var1	1000.340	1947-12-12	NULL	29	-7196	NULL	1811651302	29.0	-7196.0	NULL	1969-12-31 16:00:16.19
ch1  	var1	1000.340	1947-12-12	NULL	61	-7196	NULL	1652808422	61.0	-7196.0	NULL	1969-12-31 16:00:11.132
ch1  	var1	1000.340	1947-12-12	NULL	-2	-7196	NULL	128320480	-2.0	-7196.0	NULL	1969-12-31 16:00:07.711
ch1  	var1	1000.340	1947-12-12	NULL	8	-7196	NULL	-1759441703	8.0	-7196.0	NULL	1969-12-31 16:00:09.961
ch1  	var1	1000.340	1947-12-12	NULL	-49	-7196	NULL	-1715657876	-49.0	-7196.0	NULL	1969-12-31 15:59:54.686
ch1  	var1	1000.340	1947-12-12	NULL	-24	-7196	NULL	-1199756482	-24.0	-7196.0	NULL	1969-12-31 16:00:07.857
ch1  	var1	1000.340	1947-12-12	NULL	-14	-7196	NULL	818794014	-14.0	-7196.0	NULL	1969-12-31 16:00:07.6
ch1  	var1	1000.340	1947-12-12	NULL	32	-7196	NULL	-1337167441	32.0	-7196.0	NULL	1969-12-31 15:59:45.572
ch1  	var1	1000.340	1947-12-12	NULL	-52	-7196	NULL	-1379694191	-52.0	-7196.0	NULL	1969-12-31 15:59:58.479
ch1  	var1	1000.340	1947-12-12	NULL	-53	-7196	NULL	-1560660031	-53.0	-7196.0	NULL	1969-12-31 15:59:48.882
ch1  	var1	1000.340	1947-12-12	NULL	49	-7196	NULL	1839707228	49.0	-7196.0	NULL	1969-12-31 16:00:00.148
ch1  	var1	1000.340	1947-12-12	NULL	30	-7196	NULL	1053149934	30.0	-7196.0	NULL	1969-12-31 15:59:48.038
ch1  	var1	1000.340	1947-12-12	NULL	-4	-7196	NULL	1577367122	-4.0	-7196.0	NULL	1969-12-31 15:59:52.956
ch1  	var1	1000.340	1947-12-12	NULL	-49	-7196	NULL	NULL	-49.0	-7196.0	NULL	1969-12-31 15:59:51.009
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-325530724	472500296	11.0	NULL	l8S5nFITuHXS5347	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	51	-7196	NULL	-1607347015	51.0	-7196.0	NULL	1969-12-31 15:59:43.782
ch1  	var1	1000.340	1947-12-12	NULL	-40	-7196	NULL	1510874931	-40.0	-7196.0	NULL	1969-12-31 15:59:58.544
ch1  	var1	1000.340	1947-12-12	NULL	-23	-7196	NULL	-1967465307	-26.28	-7196.0	NULL	1969-12-31 16:00:03.695
ch1  	var1	1000.340	1947-12-12	false	11	NULL	783410209	-1378672595	11.0	NULL	lE7AE0Cm	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-29	-7196	NULL	-862213799	-29.0	-7196.0	NULL	1969-12-31 15:59:49.913
ch1  	var1	1000.340	1947-12-12	NULL	59	-7196	NULL	-1137754500	59.0	-7196.0	NULL	1969-12-31 16:00:10.956
ch1  	var1	1000.340	1947-12-12	NULL	-44	-7196	NULL	1100294255	-44.0	-7196.0	NULL	1969-12-31 15:59:43.637
ch1  	var1	1000.340	1947-12-12	NULL	7	-7196	NULL	-2036800429	7.0	-7196.0	NULL	1969-12-31 15:59:56.024
ch1  	var1	1000.340	1947-12-12	NULL	-60	-7196	NULL	1775867066	-60.0	-7196.0	NULL	1969-12-31 15:59:45.385
ch1  	var1	1000.340	1947-12-12	NULL	36	-7196	NULL	1141844958	36.0	-7196.0	NULL	1969-12-31 16:00:06.51
ch1  	var1	1000.340	1947-12-12	NULL	40	-7196	NULL	-1201471894	40.0	-7196.0	NULL	1969-12-31 16:00:01.103
ch1  	var1	1000.340	1947-12-12	false	11	NULL	200917620	-460208590	11.0	NULL	cre3m4OHF4H4x7nM	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	37	-7196	NULL	-522619659	37.0	-7196.0	NULL	1969-12-31 16:00:00.051
ch1  	var1	1000.340	1947-12-12	NULL	17	-7196	NULL	1128808489	17.0	-7196.0	NULL	1969-12-31 16:00:01.235
ch1  	var1	1000.340	1947-12-12	NULL	-40	-7196	NULL	-1047006196	-40.0	-7196.0	NULL	1969-12-31 16:00:10.027
ch1  	var1	1000.340	1947-12-12	NULL	54	-7196	NULL	324834827	54.0	-7196.0	NULL	1969-12-31 15:59:44.646
ch1  	var1	1000.340	1947-12-12	NULL	-48	-7196	NULL	-1232188884	-48.0	-7196.0	NULL	1969-12-31 16:00:03.188
ch1  	var1	1000.340	1947-12-12	NULL	34	-7196	NULL	1539208529	34.0	-7196.0	NULL	1969-12-31 16:00:12.502
ch1  	var1	1000.340	1947-12-12	NULL	-47	-7196	NULL	-1982329364	-47.0	-7196.0	NULL	1969-12-31 16:00:00.555
ch1  	var1	1000.340	1947-12-12	false	11	NULL	155829109	235384477	11.0	NULL	J3HnM2C4sNnO	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-477593990	1017612353	11.0	NULL	24jbgb42dtP	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-51	-7196	NULL	1693400306	-51.0	-7196.0	NULL	1969-12-31 15:59:52.092
ch1  	var1	1000.340	1947-12-12	NULL	8	-7196	NULL	2117650702	8.0	-7196.0	NULL	1969-12-31 16:00:09.519
ch1  	var1	1000.340	1947-12-12	NULL	-42	-7196	NULL	-1235289105	-42.0	-7196.0	NULL	1969-12-31 15:59:45.244
ch1  	var1	1000.340	1947-12-12	NULL	-58	-7196	NULL	-825174557	-58.0	-7196.0	NULL	1969-12-31 15:59:55.857
ch1  	var1	1000.340	1947-12-12	NULL	44	-7196	NULL	-846262106	44.0	-7196.0	NULL	1969-12-31 15:59:51.992
ch1  	var1	1000.340	1947-12-12	NULL	7	-7196	NULL	772100395	7.0	-7196.0	NULL	1969-12-31 16:00:13.807
ch1  	var1	1000.340	1947-12-12	NULL	42	-7196	NULL	-1981638429	42.0	-7196.0	NULL	1969-12-31 16:00:16.251
ch1  	var1	1000.340	1947-12-12	NULL	-18	-7196	NULL	1088538866	-18.0	-7196.0	NULL	1969-12-31 15:59:51.453
ch1  	var1	1000.340	1947-12-12	NULL	57	-7196	NULL	-1653550667	57.0	-7196.0	NULL	1969-12-31 15:59:46.891
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-459860378	-1705053387	11.0	NULL	5BO6u6	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	33	-7196	NULL	514550698	79.553	-7196.0	NULL	1969-12-31 16:00:00.761
ch1  	var1	1000.340	1947-12-12	NULL	-19	-7196	NULL	733482783	-19.0	-7196.0	NULL	1969-12-31 16:00:03.381
ch1  	var1	1000.340	1947-12-12	NULL	26	-7196	NULL	-607051573	26.0	-7196.0	NULL	1969-12-31 16:00:04.233
ch1  	var1	1000.340	1947-12-12	NULL	37	-7196	NULL	-1880066724	37.0	-7196.0	NULL	1969-12-31 15:59:53.876
ch1  	var1	1000.340	1947-12-12	NULL	48	-7196	NULL	624835112	48.0	-7196.0	NULL	1969-12-31 16:00:16.19
ch1  	var1	1000.340	1947-12-12	NULL	51	-7196	NULL	2091591361	51.0	-7196.0	NULL	1969-12-31 16:00:15.668
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-610644732	-1048579471	11.0	NULL	FKDPbFp241	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-482257270	-1191629675	11.0	NULL	3p6nJWFNC6	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	1003037288	378966185	11.0	NULL	6DH2dA4	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-342367569	1406247418	11.0	NULL	bq7qevqgOC	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-757031735	-59385430	11.0	NULL	6AmfdSoTPmVvXdgM8CP20sx	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-901621628	-1327915225	11.0	NULL	6i3yr5yS8g5fm8I	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	1	-7196	NULL	NULL	1.0	-7196.0	NULL	1969-12-31 15:59:48.361
ch1  	var1	1000.340	1947-12-12	NULL	19	-7196	NULL	-1885659257	19.0	-7196.0	NULL	1969-12-31 16:00:01.375
ch1  	var1	1000.340	1947-12-12	NULL	-1	-7196	NULL	2011635522	-1.0	-7196.0	NULL	1969-12-31 16:00:09.511
ch1  	var1	1000.340	1947-12-12	false	11	NULL	715853433	-1924864912	11.0	NULL	I12pYjar	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-1023165277	-1004780673	11.0	NULL	438Lxo541TwY5ID80cnR5	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-16	-7196	NULL	469226089	-16.0	-7196.0	NULL	1969-12-31 16:00:01.088
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-774129472	-129228119	11.0	NULL	jeOFkUX5u5flcN5hCr4	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	983234564	1564007066	11.0	NULL	jctXbMJ5l4ypSx0SMGFSQtF	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-900044062	1511476330	11.0	NULL	YwV7DVLB0kut0S5p	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-267385302	570801690	11.0	NULL	El5RUByTr1xve1tM	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	532235866	1472997600	11.0	NULL	DTJuXU1T0G13S0d18Al7XcR1	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-629475503	-1958498664	11.0	NULL	X1cNlHRHJ5h6H8qs832	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	440971485	1307117602	11.0	NULL	R4H6pBoQyT2m6jMgObct1s1	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	35	-7196	NULL	1667895530	35.0	-7196.0	NULL	1969-12-31 15:59:51.86
ch1  	var1	1000.340	1947-12-12	true	11	NULL	643895532	2142582079	11.0	NULL	bg6X4a4R5F6E	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	25	-7196	NULL	888822373	25.0	-7196.0	NULL	1969-12-31 16:00:07.331
ch1  	var1	1000.340	1947-12-12	false	11	NULL	662668452	1072734489	11.0	NULL	Y6net7wDJ2TVjq2u7H8aRCyA	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-29	-7196	NULL	1279487251	-29.0	-7196.0	NULL	1969-12-31 15:59:53.679
ch1  	var1	1000.340	1947-12-12	NULL	62	-7196	NULL	524247756	62.0	-7196.0	NULL	1969-12-31 15:59:54.256
ch1  	var1	1000.340	1947-12-12	NULL	-50	-7196	NULL	-1283226068	-50.0	-7196.0	NULL	1969-12-31 16:00:08.161
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-139136637	-389126242	11.0	NULL	X2NWPju6MGJ	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-64	-7196	NULL	1805860756	-64.0	-7196.0	NULL	1969-12-31 16:00:12.339
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-594835352	-2124580670	11.0	NULL	kCa0r7b43Pa	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-604409214	-1777059584	11.0	NULL	oa1p31X62jj14cJ4	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-1009581584	-1938300840	11.0	NULL	I884R85q1kn	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-45	-7196	NULL	988888	-45.0	-7196.0	NULL	1969-12-31 16:00:01.592
ch1  	var1	1000.340	1947-12-12	true	11	NULL	205298668	-2059679207	11.0	NULL	6t557nSSrg1s0Q	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	545201240	-2109755175	11.0	NULL	6AGBVrkVMspguq568DHw8r5	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-282335546	-579037190	11.0	NULL	lb51aPvl6DbQ3xUpY1ce58	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	11	-7196	NULL	444257258	11.0	-7196.0	NULL	1969-12-31 16:00:06.603
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-323362404	-84799501	11.0	NULL	2h2qsp14cr	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-405122882	21536763	11.0	NULL	54GiCgon04NXfnms6b5WRj3W	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	851741760	-1988497615	11.0	NULL	xr0YG03b6xG3oypsSFLkIS2	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-63	-7196	NULL	-1711796768	-63.0	-7196.0	NULL	1969-12-31 16:00:07.375
ch1  	var1	1000.340	1947-12-12	false	11	NULL	130057843	1800302713	11.0	NULL	M07G7IO4gFx1o	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	1040916490	-1306999389	11.0	NULL	8tVuiCkFtGW5KX	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-514165397	1057627332	11.0	NULL	PNk062	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	61	-7196	NULL	-1144874988	61.0	-7196.0	NULL	1969-12-31 16:00:01.11
ch1  	var1	1000.340	1947-12-12	NULL	-2	-7196	NULL	-787580432	-2.0	-7196.0	NULL	1969-12-31 15:59:47.95
ch1  	var1	1000.340	1947-12-12	NULL	47	-7196	NULL	-983326369	47.0	-7196.0	NULL	1969-12-31 16:00:00.351
ch1  	var1	1000.340	1947-12-12	NULL	50	-7196	NULL	-1800692361	50.0	-7196.0	NULL	1969-12-31 16:00:11.048
ch1  	var1	1000.340	1947-12-12	false	11	NULL	968239444	-1374311670	11.0	NULL	E4ekAO	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-875527384	-332869795	11.0	NULL	3W0GorVd6GStPF5S43	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	57	-7196	NULL	418917539	57.0	-7196.0	NULL	1969-12-31 16:00:07.361
ch1  	var1	1000.340	1947-12-12	NULL	-31	-7196	NULL	-548962072	-31.0	-7196.0	NULL	1969-12-31 15:59:49.226
ch1  	var1	1000.340	1947-12-12	NULL	-23	-7196	NULL	291891431	-26.28	-7196.0	NULL	1969-12-31 16:00:10.192
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-36340646	-463964091	11.0	NULL	ie83eEmqsGF834r4COpw7j	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-1014275037	1738980606	11.0	NULL	PrKs7TD0B7kj847u56pce	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-691793383	-322200600	11.0	NULL	40i6Qf07	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	317206112	80267547	11.0	NULL	7TSXOfbQHsNGLE	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	47	-7196	NULL	265927514	47.0	-7196.0	NULL	1969-12-31 15:59:54.438
ch1  	var1	1000.340	1947-12-12	false	11	NULL	232350587	-192641915	11.0	NULL	PTl81NEYpvuKFBbxAOVh	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	30	-7196	NULL	-478323335	30.0	-7196.0	NULL	1969-12-31 15:59:47.701
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-240222599	1316930258	11.0	NULL	8qhEui604mB8	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	49	-7196	NULL	796009413	49.0	-7196.0	NULL	1969-12-31 16:00:13.879
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-547166857	1693322521	11.0	NULL	Rf6HFx81J7abMFkh5l	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-22	-7196	NULL	313391588	-22.0	-7196.0	NULL	1969-12-31 16:00:15.409
ch1  	var1	1000.340	1947-12-12	false	11	NULL	670353992	234715200	11.0	NULL	n2d32Et	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	57	-7196	NULL	-1265540677	57.0	-7196.0	NULL	1969-12-31 16:00:06.997
ch1  	var1	1000.340	1947-12-12	false	11	NULL	890520231	1306562630	11.0	NULL	GHU6et8f3CY	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	1018667816	-418044473	11.0	NULL	w7rU1B5g1v1Nkit7A2ruWT	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	36	-7196	NULL	-95344418	36.0	-7196.0	NULL	1969-12-31 15:59:47.825
ch1  	var1	1000.340	1947-12-12	NULL	-57	-7196	NULL	-1579093262	-57.0	-7196.0	NULL	1969-12-31 16:00:04.659
ch1  	var1	1000.340	1947-12-12	NULL	3	-7196	NULL	991147780	3.0	-7196.0	NULL	1969-12-31 15:59:46.387
ch1  	var1	1000.340	1947-12-12	NULL	-22	-7196	NULL	1402100915	-22.0	-7196.0	NULL	1969-12-31 15:59:50.196
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-381420136	-570640640	11.0	NULL	3G0hB0J4W5	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-28	-7196	NULL	-83883851	-28.0	-7196.0	NULL	1969-12-31 16:00:00.003
ch1  	var1	1000.340	1947-12-12	false	11	NULL	792585953	1712426457	11.0	NULL	tIyd6H2oamr52OU50	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	148746074	-525528155	11.0	NULL	dDf3se3j	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	409323262	1702219634	11.0	NULL	G2s1ly	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-64	-7196	NULL	406535485	-64.0	-7196.0	NULL	1969-12-31 15:59:56.048
ch1  	var1	1000.340	1947-12-12	true	11	NULL	934968496	-149430572	11.0	NULL	16L335OgyOKH4565	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-22	-7196	NULL	772541706	-22.0	-7196.0	NULL	1969-12-31 15:59:58.93
ch1  	var1	1000.340	1947-12-12	NULL	-60	-7196	NULL	-1802243330	-60.0	-7196.0	NULL	1969-12-31 15:59:55.806
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-629330638	2107240591	11.0	NULL	hhb12d5EV7	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-994526450	-1384806123	11.0	NULL	Y55ytQtGRN8l58131e	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-1021742369	184481112	11.0	NULL	yOnsF4mFp	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	832566985	1776230785	11.0	NULL	3H10xyM3GNP1	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-1012011232	-806973080	11.0	NULL	7q0iMi2GDq0Q	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-102085569	-2116015527	11.0	NULL	h6pSh1A3WMOI3eY4IxD	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	731209683	-754819397	11.0	NULL	fQUFR672Q0R0G2b6NVqx2m	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	51466765	2087566604	11.0	NULL	X53h8r5nuFYOY3vop381283	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	16655750	940819191	11.0	NULL	6D8Kub2t61I80E6Qe8VkYW	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	633097881	1787935833	11.0	NULL	014ILGhXxNY7g02hl0Xw	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-63	-7196	NULL	-1224023895	-63.0	-7196.0	NULL	1969-12-31 16:00:03.552
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-614043298	41007494	11.0	NULL	e035q4Ba4721NL1l	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	758144640	-1321833896	11.0	NULL	xuX0OPw	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-727471145	-1111057394	11.0	NULL	MgMjEMssUEN1	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	40	-7196	NULL	437984126	40.0	-7196.0	NULL	1969-12-31 15:59:49.23
ch1  	var1	1000.340	1947-12-12	NULL	-23	-7196	NULL	1970376680	-23.0	-7196.0	NULL	1969-12-31 16:00:00.885
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-1060990068	960036652	11.0	NULL	EQT56g5A73m3j	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-185808291	2041038612	11.0	NULL	68ri6	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	634769777	1160170995	11.0	NULL	R4MT4f5U	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	11	NULL	-949587513	1910458609	11.0	NULL	NULL	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	617421916	887749304	11.0	NULL	B0As0723A520pE	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	1050536468	-1647603770	11.0	NULL	7SND06C	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-436171992	1841085291	11.0	NULL	1I0750N5l6vsLXoySV	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-172458795	-876402516	11.0	NULL	0M6LCA6u038J33jdFuHfF0AS	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	753378818	2142478722	11.0	NULL	0IX8xRUO	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-713284555	-921132223	11.0	NULL	ladcLQv2Hj7mc	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-36	-7196	NULL	394687129	-36.0	-7196.0	NULL	1969-12-31 16:00:06.661
ch1  	var1	1000.340	1947-12-12	true	11	NULL	609354125	-1834550849	11.0	NULL	0fjN1U4ogbI	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-434867359	-45980161	11.0	NULL	IorWR	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-44	-7196	NULL	1216900640	-44.0	-7196.0	NULL	1969-12-31 16:00:03.002
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-127134731	1273025856	11.0	NULL	WYv3r54T7Ct4h607XnR	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-252110062	2061460087	11.0	NULL	0OD14f5eu	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-785399865	-1317921739	11.0	NULL	cWKyPK	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-857251816	447873222	11.0	NULL	II1600yobW7p	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-1008498471	1465560897	11.0	NULL	8uc06Qq7RP2P1RAf	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	605522438	1892815205	11.0	NULL	Xr1Lmw7g3730qA0N6n	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	253421315	-795637107	11.0	NULL	57vi3IQLIES0Q16OTuiC4Hf7	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	341206817	-234515655	11.0	NULL	S1Oect6pTauCf8OiYQTgQG0	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-312922774	1563658048	11.0	NULL	myW247hI5iQQ4U37x5hK	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-854749761	-336553394	11.0	NULL	pL11U1oq48Oj202Wy2W7B	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-325931647	-1605000232	11.0	NULL	2a7V63IL7jK3o	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-1072910839	2048385991	11.0	NULL	0iqrc5	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-1007815487	-2036753667	11.0	NULL	IpyrlcegF4443KoFVNX	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	545003476	-186194982	11.0	NULL	6lqfp6xy7uLrK1oqee	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	851753840	1622023408	11.0	NULL	tPeYs504rtx4YRkf4MDyFg	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-911324411	-971086433	11.0	NULL	0dtVL5IFPf	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	457647382	1873936979	11.0	NULL	kceopv25c788XruGTA	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	46	-7196	NULL	-203349963	46.0	-7196.0	NULL	1969-12-31 16:00:07.743
ch1  	var1	1000.340	1947-12-12	NULL	-50	-7196	NULL	1740563590	-50.0	-7196.0	NULL	1969-12-31 16:00:14.134
ch1  	var1	1000.340	1947-12-12	true	11	NULL	115179804	1253666129	11.0	NULL	hbHr0AGhP30hRfpMbI	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	28	-7196	NULL	-1831759028	28.0	-7196.0	NULL	1969-12-31 16:00:11.858
ch1  	var1	1000.340	1947-12-12	NULL	39	-7196	NULL	-1835825430	39.0	-7196.0	NULL	1969-12-31 16:00:06.206
ch1  	var1	1000.340	1947-12-12	false	11	NULL	613893586	-766925642	11.0	NULL	181O0OJ0P36g7g37vM2M6	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-304137560	1578113423	11.0	NULL	5WnxPBNK2ltE8V25WkKgr71	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	51	-7196	NULL	1289268469	51.0	-7196.0	NULL	1969-12-31 15:59:58.171
ch1  	var1	1000.340	1947-12-12	false	11	NULL	677734004	-1069123598	11.0	NULL	68k8JcLTRwf8X2P7nE4X	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	732760022	-266585856	11.0	NULL	Pr48bUEafA4584KN30RanD6q	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-62918432	1373718973	11.0	NULL	rKJRy0v1t2MRedVl	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	4	-7196	NULL	-1173921590	4.0	-7196.0	NULL	1969-12-31 15:59:54.905
ch1  	var1	1000.340	1947-12-12	true	11	NULL	920874502	2057394971	11.0	NULL	5UakrIuHrVadic8Y4C	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-21	-7196	NULL	926194185	-21.0	-7196.0	NULL	1969-12-31 15:59:55.317
ch1  	var1	1000.340	1947-12-12	NULL	-10	-7196	NULL	-1750160608	-10.0	-7196.0	NULL	1969-12-31 16:00:13.743
ch1  	var1	1000.340	1947-12-12	NULL	-20	-7196	NULL	1073150417	-20.0	-7196.0	NULL	1969-12-31 15:59:44.907
ch1  	var1	1000.340	1947-12-12	true	11	NULL	233600895	1683670963	11.0	NULL	OLq35YO3U	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	672052315	1581312961	11.0	NULL	r75N0s4g8i2Nk3Olcl0sD	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	243486604	1945127696	11.0	NULL	o8v1574KSnXlsC	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-657225349	-432068801	11.0	NULL	U1aid52v	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-817390578	404025559	11.0	NULL	t18Qu	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	324332290	-685860111	11.0	NULL	bYcrtRvKkf28m64rY3q43	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	523172866	-1928034601	11.0	NULL	a	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	307128082	-1451266136	11.0	NULL	2H8VG2l5e4H	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	6981	-1908387379	11.0	NULL	a3EhVU6Wuy7ycJ7wY7h2gv	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-52	-7196	NULL	-2128720310	-52.0	-7196.0	NULL	1969-12-31 15:59:45.978
ch1  	var1	1000.340	1947-12-12	NULL	-52	-7196	NULL	-1658319459	-52.0	-7196.0	NULL	1969-12-31 16:00:04.518
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-617025388	-1865925657	11.0	NULL	PLFB86o84end3tdsS2hVL	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	49	-7196	NULL	-1687110423	49.0	-7196.0	NULL	1969-12-31 16:00:12.977
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-474680993	872513505	11.0	NULL	5p73w4mBKifB5	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	324627255	-1650196627	11.0	NULL	A1g358aWFHPT06lWjso8OeQ	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-1033128942	1147070641	11.0	NULL	467PTEoVhqi3kdYqdl6uT	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-23	-7196	NULL	-88860257	-23.0	-7196.0	NULL	1969-12-31 16:00:06.243
ch1  	var1	1000.340	1947-12-12	true	11	NULL	565938074	-192330283	11.0	NULL	6fRvRXCD7GeBiEK2qfQC2Yf	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-31	-7196	NULL	1337237884	-31.0	-7196.0	NULL	1969-12-31 16:00:13.868
ch1  	var1	1000.340	1947-12-12	NULL	-41	-7196	NULL	-1887367961	-41.0	-7196.0	NULL	1969-12-31 15:59:58.578
ch1  	var1	1000.340	1947-12-12	NULL	57	-7196	NULL	1371995065	57.0	-7196.0	NULL	1969-12-31 16:00:01.811
ch1  	var1	1000.340	1947-12-12	true	11	NULL	422546834	427331042	11.0	NULL	MxIVt	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	82922609	-1609333127	11.0	NULL	8yLnMOGxRK4e0Nff	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-39	-7196	NULL	396428880	-39.0	-7196.0	NULL	1969-12-31 15:59:43.749
ch1  	var1	1000.340	1947-12-12	false	11	NULL	775924374	-1565938617	11.0	NULL	2Wn3m7QhneidkMX1q	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	892090197	1695839387	11.0	NULL	38TsU	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	35	-7196	NULL	-854036780	35.0	-7196.0	NULL	1969-12-31 16:00:07.763
ch1  	var1	1000.340	1947-12-12	NULL	47	-7196	NULL	-1354302203	47.0	-7196.0	NULL	1969-12-31 16:00:02.32
ch1  	var1	1000.340	1947-12-12	NULL	-41	-7196	NULL	1667038451	-41.0	-7196.0	NULL	1969-12-31 16:00:04.827
ch1  	var1	1000.340	1947-12-12	false	11	NULL	NULL	-178615857	11.0	NULL	64Vxl8QS	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-13156992	1713849422	11.0	NULL	b17XPAx6pbQ7	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-749367136	-1965026583	11.0	NULL	vu46n3nUvv7ls2K4k18tvw	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-996912892	100520800	11.0	NULL	3FhN0p4lstJDMEtXC1005J0Y	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	336055239	-634317991	11.0	NULL	taaQ17IeHeH4rk2s0HeTKn	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	73020444	-1156316655	11.0	NULL	0HxgXxO8E4kP4pBLH8qH	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-231833850	132823230	11.0	NULL	Ub176WlT6f78Y5s	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	22	-7196	NULL	1904598029	22.0	-7196.0	NULL	1969-12-31 16:00:06.688
ch1  	var1	1000.340	1947-12-12	false	11	NULL	761697056	1582701201	11.0	NULL	8iX3Lj03	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	764496353	1189821988	11.0	NULL	64eh17n32TkR5g5bvt4p	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	11	NULL	239253913	-1015539677	11.0	NULL	NULL	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-707000433	-1608665300	11.0	NULL	316t3Sw	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-219322221	-331497895	11.0	NULL	RS1Ec5u4hvD	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-1016704824	-1244588598	11.0	NULL	3KB27MO3K1u5o	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	280197109	-1055749868	11.0	NULL	jfAN1XBVi5miU31	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	25	-7196	NULL	-1370314889	25.0	-7196.0	NULL	1969-12-31 16:00:01.111
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-1047036113	-240113848	11.0	NULL	Js07yFa2qnrfVU1j2e3	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-757292921	1853245670	11.0	NULL	FMVqyn08R5kuEv8	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	133708462	1908258282	11.0	NULL	bM34sI6W5h	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	54	-7196	NULL	1483839864	54.0	-7196.0	NULL	1969-12-31 15:59:52.405
ch1  	var1	1000.340	1947-12-12	false	11	NULL	536773167	-1885902072	11.0	NULL	4yAo7t54rr50u6Vci3p	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	256439603	-1995486683	11.0	NULL	3tnGS05xI820jmhlJES	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-37	-7196	NULL	1943312510	-37.0	-7196.0	NULL	1969-12-31 15:59:51.357
ch1  	var1	1000.340	1947-12-12	NULL	-35	-7196	NULL	1853093959	-35.0	-7196.0	NULL	1969-12-31 16:00:14.819
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-1022326946	1803965811	11.0	NULL	C1E8E3vVL16j	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	798748141	1412015889	11.0	NULL	MA2MxDjC0g1fxA0671	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-19	-7196	NULL	1794526031	-19.0	-7196.0	NULL	1969-12-31 15:59:55.885
ch1  	var1	1000.340	1947-12-12	NULL	50	-7196	NULL	-1770006773	50.0	-7196.0	NULL	1969-12-31 15:59:54.196
ch1  	var1	1000.340	1947-12-12	NULL	-28	-7196	NULL	-1946174975	-28.0	-7196.0	NULL	1969-12-31 15:59:57.835
ch1  	var1	1000.340	1947-12-12	NULL	38	-7196	NULL	-978843371	38.0	-7196.0	NULL	1969-12-31 16:00:16.322
ch1  	var1	1000.340	1947-12-12	false	11	NULL	921515446	168441534	11.0	NULL	HfAollgq3EG6	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-153191589	1201943619	11.0	NULL	E8O8814lE4JkJc52Ure	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-289221373	-1730567969	11.0	NULL	vRRg2BqTsJEV	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-302527324	-1539608536	11.0	NULL	woeLEb	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	23816414	-923483328	11.0	NULL	XWx44KOWat	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-160284270	-1378704741	11.0	NULL	5308t82fc4	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	821737256	1404299315	11.0	NULL	8jE8SDSLqc	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-475707077	-1525168433	11.0	NULL	qPiV0J6QDu	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-809338218	5717507	11.0	NULL	OLGDak48jmju2r2v26LQIlx6	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	25	-7196	NULL	-705285559	25.0	-7196.0	NULL	1969-12-31 15:59:50.544
ch1  	var1	1000.340	1947-12-12	true	11	NULL	697280921	1548413626	11.0	NULL	YQb5VlQtDsThbG3YoBfy	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	250905493	1355255860	11.0	NULL	1j80NSLbNMdIc2H3R01D703	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-203460029	2093426502	11.0	NULL	72F3g4s43q208a2	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	271296824	1132412547	11.0	NULL	10pO8p1LNx4Y	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-244295604	1313164934	11.0	NULL	m80sprxq3O4J4YC6gh	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	NULL	-63678271	11.0	NULL	4R0XI865tG1o	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-892924454	348639195	11.0	NULL	akfWVGu2g0io	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-586687086	1373368164	11.0	NULL	pr5tSeG7X	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-248449790	-214114609	11.0	NULL	ce6C1MhLw	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	1059244002	-879842977	11.0	NULL	YY7Ji0cFe7R1	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-383319539	718973068	11.0	NULL	0m6YOPivJ0VtmA4R6	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	208717378	-537326580	11.0	NULL	70070HP7Kb8Lrj	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	774625059	-1905847803	11.0	NULL	2T5u0u67tRE3Mm4Tvqdb8eL7	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-62	-7196	NULL	NULL	-62.0	-7196.0	NULL	1969-12-31 16:00:12.388
ch1  	var1	1000.340	1947-12-12	NULL	-22	-7196	NULL	-1680281858	-22.0	-7196.0	NULL	1969-12-31 16:00:02.221
ch1  	var1	1000.340	1947-12-12	NULL	42	-7196	NULL	-803379017	42.0	-7196.0	NULL	1969-12-31 15:59:50.19
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-571605313	541409081	11.0	NULL	20ub5m0Qgh	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	919385985	-1629105368	11.0	NULL	KJeFD8m6cR26L	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-61	-7196	NULL	-2175533	-61.0	-7196.0	NULL	1969-12-31 16:00:12.454
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-443739510	-1433780970	11.0	NULL	357GvGhVK0325aU	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	1060587179	1611312172	11.0	NULL	k08gD2etHEq	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-37	-7196	NULL	-1105725122	-37.0	-7196.0	NULL	1969-12-31 15:59:49.304
ch1  	var1	1000.340	1947-12-12	true	11	NULL	278168220	-1739245577	11.0	NULL	g4Gl6D	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-352430030	-1545699792	11.0	NULL	8k6Lo3U	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-37953195	1051795338	11.0	NULL	JPh1g4nGHIT0	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-276841727	143392143	11.0	NULL	Y5ls7N3Qy30h43866R3cL53	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	NULL	-39	-7196	NULL	-595634900	-39.0	-7196.0	NULL	1969-12-31 15:59:45.811
ch1  	var1	1000.340	1947-12-12	NULL	-26	-7196	NULL	-71373423	-26.0	-7196.0	NULL	1969-12-31 15:59:46.847
ch1  	var1	1000.340	1947-12-12	false	11	NULL	801961334	726846373	11.0	NULL	K55mHG1D07	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-455238863	664617413	11.0	NULL	pcnq40qUNuY54	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	233432368	-618716026	11.0	NULL	RsDHrL27QLW	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	true	11	NULL	-701668855	264316999	11.0	NULL	f527p7MLm6Griq41TA8cR4	1969-12-31 16:00:02.351
ch1  	var1	1000.340	1947-12-12	false	11	NULL	-756025241	1881100982	11.0	NULL	7jtP3C204M33	1969-12-31 16:00:02.351
PREHOOK: query: explain prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: explain prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: ((c > CAST( $1 AS CHAR(5))) or (v > CAST( $2 AS varchar(10))) or (d > CAST( $3 AS decimal(10,3))) or (dt > CAST( $4 AS DATE)) or (ctinyint > UDFToByte($5)) or (csmallint > UDFToShort($6)) or (cint > UDFToInteger($7)) or (cfloat > UDFToFloat($8)) or (cdouble > UDFToDouble($9)) or (cstring1 > CAST( $10 AS STRING)) or (ctimestamp1 > CAST( $11 AS TIMESTAMP)) or (cbigint > UDFToLong($12))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c > CAST( $1 AS CHAR(5))) or (v > CAST( $2 AS varchar(10))) or (d > CAST( $3 AS decimal(10,3))) or (dt > CAST( $4 AS DATE)) or (ctinyint > UDFToByte($5)) or (csmallint > UDFToShort($6)) or (cint > UDFToInteger($7)) or (cfloat > UDFToFloat($8)) or (cdouble > UDFToDouble($9)) or (cstring1 > CAST( $10 AS STRING)) or (ctimestamp1 > CAST( $11 AS TIMESTAMP)) or (cbigint > UDFToLong($12))) (type: boolean)
                    Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
                                 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
                                 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: ((c > CAST( 'a' AS CHAR(5))) or (v > CAST( 'v' AS varchar(10))) or (d > CAST( 1000 AS decimal(10,3))) or (dt > CAST( '1954-12-12' AS DATE)) or (ctinyint > UDFToByte(0)) or (csmallint > UDFToShort(7476)) or (cint > UDFToInteger(528534766)) or (cfloat > UDFToFloat(24)) or (cdouble > UDFToDouble(5780.3)) or (cstring1 > CAST( 'cvLH6Eat2yFsyy' AS STRING)) or (ctimestamp1 > CAST( '1968-12-31 15:59:46.674' AS TIMESTAMP)) or (cbigint > UDFToLong(0))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c > CAST( 'a' AS CHAR(5))) or (v > CAST( 'v' AS varchar(10))) or (d > CAST( 1000 AS decimal(10,3))) or (dt > CAST( '1954-12-12' AS DATE)) or (ctinyint > UDFToByte(0)) or (csmallint > UDFToShort(7476)) or (cint > UDFToInteger(528534766)) or (cfloat > UDFToFloat(24)) or (cdouble > UDFToDouble(5780.3)) or (cstring1 > CAST( 'cvLH6Eat2yFsyy' AS STRING)) or (ctimestamp1 > CAST( '1968-12-31 15:59:46.674' AS TIMESTAMP)) or (cbigint > UDFToLong(0))) (type: boolean)
                    Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
                                 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
                                 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
500
PREHOOK: query: explain prepare palltypesLess from
select count(*) from alltypes where c < ? OR v < ? OR d < ? OR dt < ? OR ctinyint < ? OR csmallint < ? OR cint < ?
                                 OR cfloat < ? OR cdouble < ? OR cstring1 < ? OR ctimestamp1 < ? OR cbigint < ?
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: explain prepare palltypesLess from
select count(*) from alltypes where c < ? OR v < ? OR d < ? OR dt < ? OR ctinyint < ? OR csmallint < ? OR cint < ?
                                 OR cfloat < ? OR cdouble < ? OR cstring1 < ? OR ctimestamp1 < ? OR cbigint < ?
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: ((c < CAST( $1 AS CHAR(5))) or (v < CAST( $2 AS varchar(10))) or (d < CAST( $3 AS decimal(10,3))) or (dt < CAST( $4 AS DATE)) or (ctinyint < UDFToByte($5)) or (csmallint < UDFToShort($6)) or (cint < UDFToInteger($7)) or (cfloat < UDFToFloat($8)) or (cdouble < UDFToDouble($9)) or (cstring1 < CAST( $10 AS STRING)) or (ctimestamp1 < CAST( $11 AS TIMESTAMP)) or (cbigint < UDFToLong($12))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c < CAST( $1 AS CHAR(5))) or (v < CAST( $2 AS varchar(10))) or (d < CAST( $3 AS decimal(10,3))) or (dt < CAST( $4 AS DATE)) or (ctinyint < UDFToByte($5)) or (csmallint < UDFToShort($6)) or (cint < UDFToInteger($7)) or (cfloat < UDFToFloat($8)) or (cdouble < UDFToDouble($9)) or (cstring1 < CAST( $10 AS STRING)) or (ctimestamp1 < CAST( $11 AS TIMESTAMP)) or (cbigint < UDFToLong($12))) (type: boolean)
                    Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
                                 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
                                 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: ((c > CAST( 'd' AS CHAR(5))) or (v > CAST( 'z' AS varchar(10))) or (d > CAST( 10000 AS decimal(10,3))) or (dt > CAST( '1995-12-12' AS DATE)) or (ctinyint > UDFToByte(0)) or (csmallint > UDFToShort(7476)) or (cint > UDFToInteger(528534766)) or (cfloat > UDFToFloat(24)) or (cdouble > UDFToDouble(5780.3)) or (cstring1 > CAST( 'cvLH6Eat2yFsyy' AS STRING)) or (ctimestamp1 > CAST( '1968-12-31 15:59:46.674' AS TIMESTAMP)) or (cbigint > UDFToLong(0))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c > CAST( 'd' AS CHAR(5))) or (v > CAST( 'z' AS varchar(10))) or (d > CAST( 10000 AS decimal(10,3))) or (dt > CAST( '1995-12-12' AS DATE)) or (ctinyint > UDFToByte(0)) or (csmallint > UDFToShort(7476)) or (cint > UDFToInteger(528534766)) or (cfloat > UDFToFloat(24)) or (cdouble > UDFToDouble(5780.3)) or (cstring1 > CAST( 'cvLH6Eat2yFsyy' AS STRING)) or (ctimestamp1 > CAST( '1968-12-31 15:59:46.674' AS TIMESTAMP)) or (cbigint > UDFToLong(0))) (type: boolean)
                    Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
                                 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare palltypesGreater from
select count(*) from alltypes where c > ? OR v > ? OR d > ? OR dt > ? OR ctinyint > ? OR csmallint > ? OR cint > ?
                                 OR cfloat > ? OR cdouble > ? OR cstring1 > ? OR ctimestamp1 > ? OR cbigint > ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
500
PREHOOK: query: explain prepare pequal from
select count(*) from alltypes where c = ? OR v = ? OR d = ? OR dt = ? OR ctinyint = ? OR csmallint = ? OR cint = ?
                                 OR cfloat = ? OR cdouble = ? OR cstring1 = ? OR ctimestamp1 = ? OR cbigint = ?
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: explain prepare pequal from
select count(*) from alltypes where c = ? OR v = ? OR d = ? OR dt = ? OR ctinyint = ? OR csmallint = ? OR cint = ?
                                 OR cfloat = ? OR cdouble = ? OR cstring1 = ? OR ctimestamp1 = ? OR cbigint = ?
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: ((c = CAST( $1 AS CHAR(5))) or (v = CAST( $2 AS varchar(10))) or (d = CAST( $3 AS decimal(10,3))) or (dt = CAST( $4 AS DATE)) or (ctinyint = UDFToByte($5)) or (csmallint = UDFToShort($6)) or (cint = UDFToInteger($7)) or (cfloat = UDFToFloat($8)) or (cdouble = UDFToDouble($9)) or (cstring1 = CAST( $10 AS STRING)) or (ctimestamp1 = CAST( $11 AS TIMESTAMP)) or (cbigint = UDFToLong($12))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c = CAST( $1 AS CHAR(5))) or (v = CAST( $2 AS varchar(10))) or (d = CAST( $3 AS decimal(10,3))) or (dt = CAST( $4 AS DATE)) or (ctinyint = UDFToByte($5)) or (csmallint = UDFToShort($6)) or (cint = UDFToInteger($7)) or (cfloat = UDFToFloat($8)) or (cdouble = UDFToDouble($9)) or (cstring1 = CAST( $10 AS STRING)) or (ctimestamp1 = CAST( $11 AS TIMESTAMP)) or (cbigint = UDFToLong($12))) (type: boolean)
                    Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pequal from
select count(*) from alltypes where c = ? OR v = ? OR d = ? OR dt = ? OR ctinyint = ? OR csmallint = ? OR cint = ?
                                 OR cfloat = ? OR cdouble = ? OR cstring1 = ? OR ctimestamp1 = ? OR cbigint = ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare pequal from
select count(*) from alltypes where c = ? OR v = ? OR d = ? OR dt = ? OR ctinyint = ? OR csmallint = ? OR cint = ?
                                 OR cfloat = ? OR cdouble = ? OR cstring1 = ? OR ctimestamp1 = ? OR cbigint = ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: ((c = CAST( 'ch1' AS CHAR(5))) or (v = CAST( 'var1' AS varchar(10))) or (d = CAST( 1000.34 AS decimal(10,3))) or (dt = CAST( '1947-12-12' AS DATE)) or (ctinyint = UDFToByte(11)) or (csmallint = UDFToShort(0)) or (cint = UDFToInteger(529436599)) or (cfloat = UDFToFloat(1)) or (cdouble = UDFToDouble(1.4)) or (cstring1 = CAST( 'xTlDv24JYv4s' AS STRING)) or (ctimestamp1 = CAST( '1969-12-31 16:00:02.351' AS TIMESTAMP)) or (cbigint = UDFToLong(133))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c = CAST( 'ch1' AS CHAR(5))) or (v = CAST( 'var1' AS varchar(10))) or (d = CAST( 1000.34 AS decimal(10,3))) or (dt = CAST( '1947-12-12' AS DATE)) or (ctinyint = UDFToByte(11)) or (csmallint = UDFToShort(0)) or (cint = UDFToInteger(529436599)) or (cfloat = UDFToFloat(1)) or (cdouble = UDFToDouble(1.4)) or (cstring1 = CAST( 'xTlDv24JYv4s' AS STRING)) or (ctimestamp1 = CAST( '1969-12-31 16:00:02.351' AS TIMESTAMP)) or (cbigint = UDFToLong(133))) (type: boolean)
                    Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pequal from
select count(*) from alltypes where c = ? OR v = ? OR d = ? OR dt = ? OR ctinyint = ? OR csmallint = ? OR cint = ?
                                 OR cfloat = ? OR cdouble = ? OR cstring1 = ? OR ctimestamp1 = ? OR cbigint = ?
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare pequal from
select count(*) from alltypes where c = ? OR v = ? OR d = ? OR dt = ? OR ctinyint = ? OR csmallint = ? OR cint = ?
                                 OR cfloat = ? OR cdouble = ? OR cstring1 = ? OR ctimestamp1 = ? OR cbigint = ?
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
496
PREHOOK: query: explain prepare pin from
select count(*) from alltypes where c IN(?,?) AND  v IN(?, ?) AND d IN (?,?) AND dt IN (?) OR ctinyint IN (?) AND csmallint IN(?,?,?) AND cint IN(?,?,?)
    AND cfloat IN(?,?) AND cdouble IN(?,?,?) OR cstring1 IN (?,?,?)  AND ctimestamp1 IN (?) OR cbigint IN (?)
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: explain prepare pin from
select count(*) from alltypes where c IN(?,?) AND  v IN(?, ?) AND d IN (?,?) AND dt IN (?) OR ctinyint IN (?) AND csmallint IN(?,?,?) AND cint IN(?,?,?)
    AND cfloat IN(?,?) AND cdouble IN(?,?,?) OR cstring1 IN (?,?,?)  AND ctimestamp1 IN (?) OR cbigint IN (?)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: (((c) IN (CAST( $1 AS CHAR(5)), CAST( $2 AS CHAR(5))) and (v) IN (CAST( $3 AS varchar(10)), CAST( $4 AS varchar(10))) and (d) IN (CAST( $5 AS decimal(10,3)), CAST( $6 AS decimal(10,3))) and (dt = CAST( $7 AS DATE))) or ((ctinyint = UDFToByte($8)) and (csmallint) IN (UDFToShort($9), UDFToShort($10), UDFToShort($11)) and (cint) IN (UDFToInteger($12), UDFToInteger($13), UDFToInteger($14)) and (cfloat) IN (UDFToFloat($15), UDFToFloat($16)) and (cdouble) IN (UDFToDouble($17), UDFToDouble($18), UDFToDouble($19))) or ((cstring1) IN (CAST( $20 AS STRING), CAST( $21 AS STRING), CAST( $22 AS STRING)) and (ctimestamp1 = CAST( $23 AS TIMESTAMP))) or (cbigint = UDFToLong($24))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (((c) IN (CAST( $1 AS CHAR(5)), CAST( $2 AS CHAR(5))) and (v) IN (CAST( $3 AS varchar(10)), CAST( $4 AS varchar(10))) and (d) IN (CAST( $5 AS decimal(10,3)), CAST( $6 AS decimal(10,3))) and (dt = CAST( $7 AS DATE))) or ((ctinyint = UDFToByte($8)) and (csmallint) IN (UDFToShort($9), UDFToShort($10), UDFToShort($11)) and (cint) IN (UDFToInteger($12), UDFToInteger($13), UDFToInteger($14)) and (cfloat) IN (UDFToFloat($15), UDFToFloat($16)) and (cdouble) IN (UDFToDouble($17), UDFToDouble($18), UDFToDouble($19))) or ((cstring1) IN (CAST( $20 AS STRING), CAST( $21 AS STRING), CAST( $22 AS STRING)) and (ctimestamp1 = CAST( $23 AS TIMESTAMP))) or (cbigint = UDFToLong($24))) (type: boolean)
                    Statistics: Num rows: 421 Data size: 191567 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 421 Data size: 191567 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pin from
select count(*) from alltypes where c IN(?,?) AND  v IN(?, ?) AND d IN (?,?) AND dt IN (?) OR ctinyint IN (?) AND csmallint IN(?,?,?) AND cint IN(?,?,?)
    AND cfloat IN(?,?) AND cdouble IN(?,?,?) OR cstring1 IN (?,?,?)  AND ctimestamp1 IN (?) OR cbigint IN (?)
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare pin from
select count(*) from alltypes where c IN(?,?) AND  v IN(?, ?) AND d IN (?,?) AND dt IN (?) OR ctinyint IN (?) AND csmallint IN(?,?,?) AND cint IN(?,?,?)
    AND cfloat IN(?,?) AND cdouble IN(?,?,?) OR cstring1 IN (?,?,?)  AND ctimestamp1 IN (?) OR cbigint IN (?)
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: (((c) IN (CAST( 'ch1' AS CHAR(5)), CAST( 'ch2' AS CHAR(5))) and (v) IN (CAST( 'var1' AS varchar(10)), CAST( 'var2' AS varchar(10))) and (d) IN (CAST( 1000.34 AS decimal(10,3)), CAST( 2000 AS decimal(10,3))) and (dt = CAST( '1947-12-12' AS DATE))) or ((ctinyint = UDFToByte(11)) and (csmallint) IN (UDFToShort(15601), UDFToShort(0), UDFToShort(1)) and (cint) IN (UDFToInteger(788564623), UDFToInteger(78856), UDFToInteger(23)) and (cfloat) IN (UDFToFloat(1), UDFToFloat(18)) and (cdouble) IN (UDFToDouble(0), UDFToDouble(15601), UDFToDouble(23.1))) or ((cstring1) IN (CAST( 'xTlDv24JYv4s' AS STRING), CAST( 'str1' AS STRING), CAST( 'stre' AS STRING)) and (ctimestamp1 = CAST( '1969-12-31 16:00:02.351' AS TIMESTAMP))) or (cbigint = UDFToLong(133))) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (((c) IN (CAST( 'ch1' AS CHAR(5)), CAST( 'ch2' AS CHAR(5))) and (v) IN (CAST( 'var1' AS varchar(10)), CAST( 'var2' AS varchar(10))) and (d) IN (CAST( 1000.34 AS decimal(10,3)), CAST( 2000 AS decimal(10,3))) and (dt = CAST( '1947-12-12' AS DATE))) or ((ctinyint = UDFToByte(11)) and (csmallint) IN (UDFToShort(15601), UDFToShort(0), UDFToShort(1)) and (cint) IN (UDFToInteger(788564623), UDFToInteger(78856), UDFToInteger(23)) and (cfloat) IN (UDFToFloat(1), UDFToFloat(18)) and (cdouble) IN (UDFToDouble(0), UDFToDouble(15601), UDFToDouble(23.1))) or ((cstring1) IN (CAST( 'xTlDv24JYv4s' AS STRING), CAST( 'str1' AS STRING), CAST( 'stre' AS STRING)) and (ctimestamp1 = CAST( '1969-12-31 16:00:02.351' AS TIMESTAMP))) or (cbigint = UDFToLong(133))) (type: boolean)
                    Statistics: Num rows: 421 Data size: 191567 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 421 Data size: 191567 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pin from
select count(*) from alltypes where c IN(?,?) AND  v IN(?, ?) AND d IN (?,?) AND dt IN (?) OR ctinyint IN (?) AND csmallint IN(?,?,?) AND cint IN(?,?,?)
    AND cfloat IN(?,?) AND cdouble IN(?,?,?) OR cstring1 IN (?,?,?)  AND ctimestamp1 IN (?) OR cbigint IN (?)
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare pin from
select count(*) from alltypes where c IN(?,?) AND  v IN(?, ?) AND d IN (?,?) AND dt IN (?) OR ctinyint IN (?) AND csmallint IN(?,?,?) AND cint IN(?,?,?)
    AND cfloat IN(?,?) AND cdouble IN(?,?,?) OR cstring1 IN (?,?,?)  AND ctimestamp1 IN (?) OR cbigint IN (?)
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
496
PREHOOK: query: explain prepare pbetween from
    select count(*) from alltypes where (c BETWEEN ? AND ?) AND (v BETWEEN ? AND ?) AND (d BETWEEN ? AND ?) AND (dt BETWEEN ? AND ?) OR (ctinyint BETWEEN ? AND ?) AND (csmallint BETWEEN ? AND ?) AND (cint BETWEEN ? AND ?)
    AND (cfloat BETWEEN ? AND ?) AND (cdouble BETWEEN ? AND ?) OR (cstring1 BETWEEN ? AND ?)  AND (ctimestamp1 BETWEEN ? AND ?) OR (cbigint BETWEEN ? AND ?)
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: explain prepare pbetween from
    select count(*) from alltypes where (c BETWEEN ? AND ?) AND (v BETWEEN ? AND ?) AND (d BETWEEN ? AND ?) AND (dt BETWEEN ? AND ?) OR (ctinyint BETWEEN ? AND ?) AND (csmallint BETWEEN ? AND ?) AND (cint BETWEEN ? AND ?)
    AND (cfloat BETWEEN ? AND ?) AND (cdouble BETWEEN ? AND ?) OR (cstring1 BETWEEN ? AND ?)  AND (ctimestamp1 BETWEEN ? AND ?) OR (cbigint BETWEEN ? AND ?)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: ((c BETWEEN CAST( $1 AS CHAR(5)) AND CAST( $2 AS CHAR(5)) and v BETWEEN CAST( $3 AS varchar(10)) AND CAST( $4 AS varchar(10)) and d BETWEEN CAST( $5 AS decimal(10,3)) AND CAST( $6 AS decimal(10,3)) and dt BETWEEN CAST( $7 AS DATE) AND CAST( $8 AS DATE)) or (ctinyint BETWEEN UDFToByte($9) AND UDFToByte($10) and csmallint BETWEEN UDFToShort($11) AND UDFToShort($12) and cint BETWEEN UDFToInteger($13) AND UDFToInteger($14) and cfloat BETWEEN UDFToFloat($15) AND UDFToFloat($16) and cdouble BETWEEN UDFToDouble($17) AND UDFToDouble($18)) or (cstring1 BETWEEN CAST( $19 AS STRING) AND CAST( $20 AS STRING) and ctimestamp1 BETWEEN CAST( $21 AS TIMESTAMP) AND CAST( $22 AS TIMESTAMP)) or cbigint BETWEEN UDFToLong($23) AND UDFToLong($24)) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c BETWEEN CAST( $1 AS CHAR(5)) AND CAST( $2 AS CHAR(5)) and v BETWEEN CAST( $3 AS varchar(10)) AND CAST( $4 AS varchar(10)) and d BETWEEN CAST( $5 AS decimal(10,3)) AND CAST( $6 AS decimal(10,3)) and dt BETWEEN CAST( $7 AS DATE) AND CAST( $8 AS DATE)) or (ctinyint BETWEEN UDFToByte($9) AND UDFToByte($10) and csmallint BETWEEN UDFToShort($11) AND UDFToShort($12) and cint BETWEEN UDFToInteger($13) AND UDFToInteger($14) and cfloat BETWEEN UDFToFloat($15) AND UDFToFloat($16) and cdouble BETWEEN UDFToDouble($17) AND UDFToDouble($18)) or (cstring1 BETWEEN CAST( $19 AS STRING) AND CAST( $20 AS STRING) and ctimestamp1 BETWEEN CAST( $21 AS TIMESTAMP) AND CAST( $22 AS TIMESTAMP)) or cbigint BETWEEN UDFToLong($23) AND UDFToLong($24)) (type: boolean)
                    Statistics: Num rows: 63 Data size: 28773 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 63 Data size: 28773 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.984127
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pbetween from
select count(*) from alltypes where (c BETWEEN ? AND ?) AND (v BETWEEN ? AND ?) AND (d BETWEEN ? AND ?) AND (dt BETWEEN ? AND ?) OR (ctinyint BETWEEN ? AND ?) AND (csmallint BETWEEN ? AND ?) AND (cint BETWEEN ? AND ?)
    AND (cfloat BETWEEN ? AND ?) AND (cdouble BETWEEN ? AND ?) OR (cstring1 BETWEEN ? AND ?)  AND (ctimestamp1 BETWEEN ? AND ?) OR (cbigint BETWEEN ? AND ?)
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare pbetween from
select count(*) from alltypes where (c BETWEEN ? AND ?) AND (v BETWEEN ? AND ?) AND (d BETWEEN ? AND ?) AND (dt BETWEEN ? AND ?) OR (ctinyint BETWEEN ? AND ?) AND (csmallint BETWEEN ? AND ?) AND (cint BETWEEN ? AND ?)
    AND (cfloat BETWEEN ? AND ?) AND (cdouble BETWEEN ? AND ?) OR (cstring1 BETWEEN ? AND ?)  AND (ctimestamp1 BETWEEN ? AND ?) OR (cbigint BETWEEN ? AND ?)
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypes
                  filterExpr: ((c BETWEEN CAST( 'ch1' AS CHAR(5)) AND CAST( 'ch2' AS CHAR(5)) and v BETWEEN CAST( 'var1' AS varchar(10)) AND CAST( 'var2' AS varchar(10)) and d BETWEEN CAST( 1000.34 AS decimal(10,3)) AND CAST( 2000 AS decimal(10,3)) and dt BETWEEN CAST( '1947-12-12' AS DATE) AND CAST( '1968-12-31' AS DATE)) or (ctinyint BETWEEN UDFToByte(11) AND UDFToByte(1000) and csmallint BETWEEN UDFToShort(15601) AND UDFToShort(1) and cint BETWEEN UDFToInteger(788564623) AND UDFToInteger(23) and cfloat BETWEEN UDFToFloat(1) AND UDFToFloat(18) and cdouble BETWEEN UDFToDouble(0) AND UDFToDouble(15601)) or (cstring1 BETWEEN CAST( 'xTlDv24JYv4s' AS STRING) AND CAST( 'str1' AS STRING) and ctimestamp1 BETWEEN CAST( '1969-12-31 16:00:02.351' AS TIMESTAMP) AND CAST( '2020-12-31 16:00:01' AS TIMESTAMP)) or cbigint BETWEEN UDFToLong(0) AND UDFToLong(133)) (type: boolean)
                  Statistics: Num rows: 500 Data size: 227460 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c BETWEEN CAST( 'ch1' AS CHAR(5)) AND CAST( 'ch2' AS CHAR(5)) and v BETWEEN CAST( 'var1' AS varchar(10)) AND CAST( 'var2' AS varchar(10)) and d BETWEEN CAST( 1000.34 AS decimal(10,3)) AND CAST( 2000 AS decimal(10,3)) and dt BETWEEN CAST( '1947-12-12' AS DATE) AND CAST( '1968-12-31' AS DATE)) or (ctinyint BETWEEN UDFToByte(11) AND UDFToByte(1000) and csmallint BETWEEN UDFToShort(15601) AND UDFToShort(1) and cint BETWEEN UDFToInteger(788564623) AND UDFToInteger(23) and cfloat BETWEEN UDFToFloat(1) AND UDFToFloat(18) and cdouble BETWEEN UDFToDouble(0) AND UDFToDouble(15601)) or (cstring1 BETWEEN CAST( 'xTlDv24JYv4s' AS STRING) AND CAST( 'str1' AS STRING) and ctimestamp1 BETWEEN CAST( '1969-12-31 16:00:02.351' AS TIMESTAMP) AND CAST( '2020-12-31 16:00:01' AS TIMESTAMP)) or cbigint BETWEEN UDFToLong(0) AND UDFToLong(133)) (type: boolean)
                    Statistics: Num rows: 63 Data size: 28773 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      Statistics: Num rows: 63 Data size: 28773 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count()
                        minReductionHashAggr: 0.984127
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint)
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: prepare pbetween from
select count(*) from alltypes where (c BETWEEN ? AND ?) AND (v BETWEEN ? AND ?) AND (d BETWEEN ? AND ?) AND (dt BETWEEN ? AND ?) OR (ctinyint BETWEEN ? AND ?) AND (csmallint BETWEEN ? AND ?) AND (cint BETWEEN ? AND ?)
    AND (cfloat BETWEEN ? AND ?) AND (cdouble BETWEEN ? AND ?) OR (cstring1 BETWEEN ? AND ?)  AND (ctimestamp1 BETWEEN ? AND ?) OR (cbigint BETWEEN ? AND ?)
PREHOOK: type: EXECUTE QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: prepare pbetween from
select count(*) from alltypes where (c BETWEEN ? AND ?) AND (v BETWEEN ? AND ?) AND (d BETWEEN ? AND ?) AND (dt BETWEEN ? AND ?) OR (ctinyint BETWEEN ? AND ?) AND (csmallint BETWEEN ? AND ?) AND (cint BETWEEN ? AND ?)
    AND (cfloat BETWEEN ? AND ?) AND (cdouble BETWEEN ? AND ?) OR (cstring1 BETWEEN ? AND ?)  AND (ctimestamp1 BETWEEN ? AND ?) OR (cbigint BETWEEN ? AND ?)
POSTHOOK: type: EXECUTE QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
500
PREHOOK: query: DROP TABLE testParam
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@testparam
PREHOOK: Output: default@testparam
POSTHOOK: query: DROP TABLE testParam
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@testparam
POSTHOOK: Output: default@testparam
PREHOOK: query: DROP TABLE alltypes
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@alltypes
PREHOOK: Output: default@alltypes
POSTHOOK: query: DROP TABLE alltypes
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@alltypes
POSTHOOK: Output: default@alltypes
