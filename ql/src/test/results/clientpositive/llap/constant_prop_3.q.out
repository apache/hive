PREHOOK: query: drop table part_hive
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table part_hive
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table partsupp_hive
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table partsupp_hive
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table supplier_hive
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table supplier_hive
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table part_hive (P_PARTKEY INT, P_NAME STRING, P_MFGR STRING, P_BRAND STRING, P_TYPE STRING, 
P_SIZE INT, P_CONTAINER STRING, P_RETAILPRICE DOUBLE, P_COMMENT STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@part_hive
POSTHOOK: query: create table part_hive (P_PARTKEY INT, P_NAME STRING, P_MFGR STRING, P_BRAND STRING, P_TYPE STRING, 
P_SIZE INT, P_CONTAINER STRING, P_RETAILPRICE DOUBLE, P_COMMENT STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@part_hive
PREHOOK: query: create table partsupp_hive (PS_PARTKEY INT, PS_SUPPKEY INT, PS_AVAILQTY INT, PS_SUPPLYCOST DOUBLE, 
PS_COMMENT STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@partsupp_hive
POSTHOOK: query: create table partsupp_hive (PS_PARTKEY INT, PS_SUPPKEY INT, PS_AVAILQTY INT, PS_SUPPLYCOST DOUBLE, 
PS_COMMENT STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@partsupp_hive
PREHOOK: query: create table supplier_hive (S_SUPPKEY INT, S_NAME STRING, S_ADDRESS STRING, S_NATIONKEY INT, 
S_PHONE STRING, S_ACCTBAL DOUBLE, S_COMMENT STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@supplier_hive
POSTHOOK: query: create table supplier_hive (S_SUPPKEY INT, S_NAME STRING, S_ADDRESS STRING, S_NATIONKEY INT, 
S_PHONE STRING, S_ACCTBAL DOUBLE, S_COMMENT STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@supplier_hive
PREHOOK: query: analyze table part_hive compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@part_hive
PREHOOK: Output: default@part_hive
POSTHOOK: query: analyze table part_hive compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part_hive
POSTHOOK: Output: default@part_hive
PREHOOK: query: analyze table part_hive compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@part_hive
PREHOOK: Output: default@part_hive
#### A masked pattern was here ####
POSTHOOK: query: analyze table part_hive compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@part_hive
POSTHOOK: Output: default@part_hive
#### A masked pattern was here ####
PREHOOK: query: analyze table partsupp_hive compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@partsupp_hive
PREHOOK: Output: default@partsupp_hive
POSTHOOK: query: analyze table partsupp_hive compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partsupp_hive
POSTHOOK: Output: default@partsupp_hive
PREHOOK: query: analyze table partsupp_hive compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@partsupp_hive
PREHOOK: Output: default@partsupp_hive
#### A masked pattern was here ####
POSTHOOK: query: analyze table partsupp_hive compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@partsupp_hive
POSTHOOK: Output: default@partsupp_hive
#### A masked pattern was here ####
PREHOOK: query: analyze table supplier_hive compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@supplier_hive
PREHOOK: Output: default@supplier_hive
POSTHOOK: query: analyze table supplier_hive compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@supplier_hive
POSTHOOK: Output: default@supplier_hive
PREHOOK: query: analyze table supplier_hive compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@supplier_hive
PREHOOK: Output: default@supplier_hive
#### A masked pattern was here ####
POSTHOOK: query: analyze table supplier_hive compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@supplier_hive
POSTHOOK: Output: default@supplier_hive
#### A masked pattern was here ####
Warning: Shuffle Join MERGEJOIN[69][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain select
	p_brand,
	p_type,
	p_size,
	count(distinct ps_suppkey) as supplier_cnt
from
	partsupp_hive,
	part_hive
where
	p_partkey = ps_partkey
	and p_brand <> 'Brand#34'
	and p_type not like 'ECONOMY BRUSHED%'
	and p_size in (22, 14, 27, 49, 21, 33, 35, 28)
	and partsupp_hive.ps_suppkey not in (
		select
			s_suppkey
		from
			supplier_hive
		where
			s_comment like '%Customer%Complaints%'
	)
group by
	p_brand,
	p_type,
	p_size
order by
	supplier_cnt desc,
	p_brand,
	p_type,
	p_size
PREHOOK: type: QUERY
PREHOOK: Input: default@part_hive
PREHOOK: Input: default@partsupp_hive
PREHOOK: Input: default@supplier_hive
#### A masked pattern was here ####
POSTHOOK: query: explain select
	p_brand,
	p_type,
	p_size,
	count(distinct ps_suppkey) as supplier_cnt
from
	partsupp_hive,
	part_hive
where
	p_partkey = ps_partkey
	and p_brand <> 'Brand#34'
	and p_type not like 'ECONOMY BRUSHED%'
	and p_size in (22, 14, 27, 49, 21, 33, 35, 28)
	and partsupp_hive.ps_suppkey not in (
		select
			s_suppkey
		from
			supplier_hive
		where
			s_comment like '%Customer%Complaints%'
	)
group by
	p_brand,
	p_type,
	p_size
order by
	supplier_cnt desc,
	p_brand,
	p_type,
	p_size
POSTHOOK: type: QUERY
POSTHOOK: Input: default@part_hive
POSTHOOK: Input: default@partsupp_hive
POSTHOOK: Input: default@supplier_hive
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 10 <- Map 8 (CUSTOM_SIMPLE_EDGE)
        Reducer 2 <- Map 1 (XPROD_EDGE), Reducer 10 (XPROD_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
        Reducer 7 <- Map 6 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
        Reducer 9 <- Map 8 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: part_hive
                  filterExpr: ((p_size) IN (22, 14, 27, 49, 21, 33, 35, 28) and (p_brand <> 'Brand#34') and p_partkey is not null and (not (p_type like 'ECONOMY BRUSHED%'))) (type: boolean)
                  Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((p_size) IN (22, 14, 27, 49, 21, 33, 35, 28) and (p_brand <> 'Brand#34') and p_partkey is not null and (not (p_type like 'ECONOMY BRUSHED%'))) (type: boolean)
                    Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: p_partkey (type: int), p_brand (type: string), p_type (type: string), p_size (type: int)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        null sort order: 
                        sort order: 
                        Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: partsupp_hive
                  filterExpr: ps_partkey is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ps_partkey is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ps_partkey (type: int), ps_suppkey (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: int)
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: supplier_hive
                  filterExpr: (((s_comment like '%Customer%Complaints%') and s_suppkey is not null) or (s_comment like '%Customer%Complaints%')) (type: boolean)
                  Statistics: Num rows: 1 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((s_comment like '%Customer%Complaints%') and s_suppkey is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: s_suppkey (type: int)
                      outputColumnNames: s_suppkey
                      Statistics: Num rows: 1 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: s_suppkey (type: int)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (s_comment like '%Customer%Complaints%') (type: boolean)
                    Statistics: Num rows: 1 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: s_suppkey (type: int)
                      outputColumnNames: s_suppkey
                      Statistics: Num rows: 1 Data size: 88 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: count(), count(s_suppkey)
                        minReductionHashAggr: 0.4
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col0 (type: bigint), _col1 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs
        Reducer 10 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0), count(VALUE._col1)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: bigint), _col1 (type: bigint)
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 1 Data size: 192 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 1 Data size: 192 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: int), _col4 (type: bigint), _col5 (type: bigint)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col1, _col2, _col3, _col4, _col5, _col7, _col9
                Statistics: Num rows: 1 Data size: 196 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col7 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: int), _col4 (type: bigint), _col5 (type: bigint), _col9 (type: boolean)
                  outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col9
                  Statistics: Num rows: 1 Data size: 196 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((_col6 = 0L) or (_col9 is null and (_col7 >= _col6) and _col1 is not null)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 196 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: _col1 (type: int), _col3 (type: string), _col4 (type: string), _col5 (type: int)
                      outputColumnNames: _col1, _col3, _col4, _col5
                      Statistics: Num rows: 1 Data size: 196 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: _col3 (type: string), _col4 (type: string), _col5 (type: int), _col1 (type: int)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: int), _col3 (type: int)
                          null sort order: zzzz
                          sort order: ++++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: int)
                          Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: int), KEY._col3 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col3 (type: int), _col0 (type: string), _col1 (type: string), _col2 (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 176 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: count(_col0)
                    keys: _col1 (type: string), _col2 (type: string), _col3 (type: int)
                    mode: complete
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 1 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col3 (type: bigint), _col0 (type: string), _col1 (type: string), _col2 (type: int)
                      null sort order: azzz
                      sort order: -+++
                      Statistics: Num rows: 1 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey3 (type: int), KEY.reducesinkkey0 (type: bigint)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 7 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Outer Join 0 to 1
                keys:
                  0 _col1 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col3
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: int), _col3 (type: boolean)
        Reducer 9 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: int), true (type: boolean)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: int)
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: boolean)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

