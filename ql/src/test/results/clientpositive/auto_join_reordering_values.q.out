PREHOOK: query: create table testsrc ( `key` int,`val` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@testsrc
POSTHOOK: query: create table testsrc ( `key` int,`val` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@testsrc
PREHOOK: query: load data local inpath '../../data/files/kv1.txt' overwrite into table testsrc
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@testsrc
POSTHOOK: query: load data local inpath '../../data/files/kv1.txt' overwrite into table testsrc
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@testsrc
PREHOOK: query: drop table if exists orderpayment_small
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists orderpayment_small
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table orderpayment_small (`dealid` int,`date` string,`time` string, `cityid` int, `userid` int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@orderpayment_small
POSTHOOK: query: create table orderpayment_small (`dealid` int,`date` string,`time` string, `cityid` int, `userid` int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orderpayment_small
PREHOOK: query: insert overwrite table orderpayment_small select 748, '2011-03-24', '2011-03-24', 55 ,5372613 from testsrc tablesample (1 rows)
PREHOOK: type: QUERY
PREHOOK: Input: default@testsrc
PREHOOK: Output: default@orderpayment_small
POSTHOOK: query: insert overwrite table orderpayment_small select 748, '2011-03-24', '2011-03-24', 55 ,5372613 from testsrc tablesample (1 rows)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@testsrc
POSTHOOK: Output: default@orderpayment_small
POSTHOOK: Lineage: orderpayment_small.cityid SIMPLE []
POSTHOOK: Lineage: orderpayment_small.date SIMPLE []
POSTHOOK: Lineage: orderpayment_small.dealid SIMPLE []
POSTHOOK: Lineage: orderpayment_small.time SIMPLE []
POSTHOOK: Lineage: orderpayment_small.userid SIMPLE []
PREHOOK: query: drop table if exists user_small
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists user_small
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table user_small( userid int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@user_small
POSTHOOK: query: create table user_small( userid int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@user_small
PREHOOK: query: insert overwrite table user_small select key from testsrc tablesample (100 rows)
PREHOOK: type: QUERY
PREHOOK: Input: default@testsrc
PREHOOK: Output: default@user_small
POSTHOOK: query: insert overwrite table user_small select key from testsrc tablesample (100 rows)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@testsrc
POSTHOOK: Output: default@user_small
POSTHOOK: Lineage: user_small.userid SIMPLE [(testsrc)testsrc.FieldSchema(name:key, type:int, comment:null), ]
PREHOOK: query: explain extended SELECT
     `dim_pay_date`.`date`
    , `deal`.`dealid`
FROM `orderpayment_small` `orderpayment`
JOIN `orderpayment_small` `dim_pay_date` ON `dim_pay_date`.`date` = `orderpayment`.`date`
JOIN `orderpayment_small` `deal` ON `deal`.`dealid` = `orderpayment`.`dealid`
JOIN `orderpayment_small` `order_city` ON `order_city`.`cityid` = `orderpayment`.`cityid`
JOIN `user_small` `user` ON `user`.`userid` = `orderpayment`.`userid`
limit 5
PREHOOK: type: QUERY
POSTHOOK: query: explain extended SELECT
     `dim_pay_date`.`date`
    , `deal`.`dealid`
FROM `orderpayment_small` `orderpayment`
JOIN `orderpayment_small` `dim_pay_date` ON `dim_pay_date`.`date` = `orderpayment`.`date`
JOIN `orderpayment_small` `deal` ON `deal`.`dealid` = `orderpayment`.`dealid`
JOIN `orderpayment_small` `order_city` ON `order_city`.`cityid` = `orderpayment`.`cityid`
JOIN `user_small` `user` ON `user`.`userid` = `orderpayment`.`userid`
limit 5
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-3 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-3
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: orderpayment
            Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (date is not null and dealid is not null and cityid is not null and userid is not null) (type: boolean)
              Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: dealid (type: int), date (type: string), cityid (type: int), userid (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col1 (type: string)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col1 (type: string)
                  Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
                  tag: 0
                  value expressions: _col0 (type: int), _col2 (type: int), _col3 (type: int)
                  auto parallelism: false
          TableScan
            alias: dim_pay_date
            Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: date is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: date (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
                  tag: 1
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: orderpayment_small
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
              bucket_count -1
              column.name.delimiter ,
              columns dealid,date,time,cityid,userid
              columns.comments 
              columns.types int:string:string:int:int
#### A masked pattern was here ####
              name default.orderpayment_small
              numFiles 1
              numRows 1
              rawDataSize 36
              serialization.ddl struct orderpayment_small { i32 dealid, string date, string time, i32 cityid, i32 userid}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 37
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                column.name.delimiter ,
                columns dealid,date,time,cityid,userid
                columns.comments 
                columns.types int:string:string:int:int
#### A masked pattern was here ####
                name default.orderpayment_small
                numFiles 1
                numRows 1
                rawDataSize 36
                serialization.ddl struct orderpayment_small { i32 dealid, string date, string time, i32 cityid, i32 userid}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 37
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.orderpayment_small
            name: default.orderpayment_small
      Truncated Path -> Alias:
        /orderpayment_small [$hdt$_0:orderpayment, $hdt$_1:dim_pay_date]
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col1 (type: string)
            1 _col0 (type: string)
          outputColumnNames: _col0, _col2, _col3, _col4
          Statistics: Num rows: 1 Data size: 39 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  column.name.delimiter ,
                  columns _col0,_col2,_col3,_col4
                  columns.types int,int,int,string
                  escape.delim \
                  serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col0 (type: int)
              null sort order: a
              sort order: +
              Map-reduce partition columns: _col0 (type: int)
              Statistics: Num rows: 1 Data size: 39 Basic stats: COMPLETE Column stats: NONE
              tag: 0
              value expressions: _col2 (type: int), _col3 (type: int), _col4 (type: string)
              auto parallelism: false
          TableScan
            alias: deal
            Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: dealid is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: dealid (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
                  tag: 1
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10004
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col2,_col3,_col4
              columns.types int,int,int,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col2,_col3,_col4
                columns.types int,int,int,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: orderpayment_small
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
              bucket_count -1
              column.name.delimiter ,
              columns dealid,date,time,cityid,userid
              columns.comments 
              columns.types int:string:string:int:int
#### A masked pattern was here ####
              name default.orderpayment_small
              numFiles 1
              numRows 1
              rawDataSize 36
              serialization.ddl struct orderpayment_small { i32 dealid, string date, string time, i32 cityid, i32 userid}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 37
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                column.name.delimiter ,
                columns dealid,date,time,cityid,userid
                columns.comments 
                columns.types int:string:string:int:int
#### A masked pattern was here ####
                name default.orderpayment_small
                numFiles 1
                numRows 1
                rawDataSize 36
                serialization.ddl struct orderpayment_small { i32 dealid, string date, string time, i32 cityid, i32 userid}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 37
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.orderpayment_small
            name: default.orderpayment_small
      Truncated Path -> Alias:
        /orderpayment_small [$hdt$_2:deal]
#### A masked pattern was here ####
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col2, _col3, _col4, _col5
          Statistics: Num rows: 1 Data size: 42 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  column.name.delimiter ,
                  columns _col2,_col3,_col4,_col5
                  columns.types int,int,string,int
                  escape.delim \
                  serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col2 (type: int)
              null sort order: a
              sort order: +
              Map-reduce partition columns: _col2 (type: int)
              Statistics: Num rows: 1 Data size: 42 Basic stats: COMPLETE Column stats: NONE
              tag: 0
              value expressions: _col3 (type: int), _col4 (type: string), _col5 (type: int)
              auto parallelism: false
          TableScan
            alias: order_city
            Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: cityid is not null (type: boolean)
              Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: cityid (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 1 Data size: 36 Basic stats: COMPLETE Column stats: NONE
                  tag: 1
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10005
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col2,_col3,_col4,_col5
              columns.types int,int,string,int
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col2,_col3,_col4,_col5
                columns.types int,int,string,int
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: orderpayment_small
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
              bucket_count -1
              column.name.delimiter ,
              columns dealid,date,time,cityid,userid
              columns.comments 
              columns.types int:string:string:int:int
#### A masked pattern was here ####
              name default.orderpayment_small
              numFiles 1
              numRows 1
              rawDataSize 36
              serialization.ddl struct orderpayment_small { i32 dealid, string date, string time, i32 cityid, i32 userid}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 37
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                column.name.delimiter ,
                columns dealid,date,time,cityid,userid
                columns.comments 
                columns.types int:string:string:int:int
#### A masked pattern was here ####
                name default.orderpayment_small
                numFiles 1
                numRows 1
                rawDataSize 36
                serialization.ddl struct orderpayment_small { i32 dealid, string date, string time, i32 cityid, i32 userid}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 37
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.orderpayment_small
            name: default.orderpayment_small
      Truncated Path -> Alias:
        /orderpayment_small [$hdt$_3:order_city]
#### A masked pattern was here ####
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col2 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col3, _col4, _col5
          Statistics: Num rows: 1 Data size: 46 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  column.name.delimiter ,
                  columns _col3,_col4,_col5
                  columns.types int,string,int
                  escape.delim \
                  serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col3 (type: int)
              null sort order: a
              sort order: +
              Map-reduce partition columns: _col3 (type: int)
              Statistics: Num rows: 1 Data size: 46 Basic stats: COMPLETE Column stats: NONE
              tag: 0
              value expressions: _col4 (type: string), _col5 (type: int)
              auto parallelism: false
          TableScan
            alias: user
            Statistics: Num rows: 100 Data size: 288 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: userid is not null (type: boolean)
              Statistics: Num rows: 100 Data size: 288 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: userid (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 100 Data size: 288 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 100 Data size: 288 Basic stats: COMPLETE Column stats: NONE
                  tag: 1
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10006
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col3,_col4,_col5
              columns.types int,string,int
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col3,_col4,_col5
                columns.types int,string,int
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: user_small
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
              bucket_count -1
              column.name.delimiter ,
              columns userid
              columns.comments 
              columns.types int
#### A masked pattern was here ####
              name default.user_small
              numFiles 1
              numRows 100
              rawDataSize 288
              serialization.ddl struct user_small { i32 userid}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 388
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                column.name.delimiter ,
                columns userid
                columns.comments 
                columns.types int
#### A masked pattern was here ####
                name default.user_small
                numFiles 1
                numRows 100
                rawDataSize 288
                serialization.ddl struct user_small { i32 userid}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 388
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.user_small
            name: default.user_small
      Truncated Path -> Alias:
        /user_small [$hdt$_4:user]
#### A masked pattern was here ####
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col3 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col4, _col5
          Statistics: Num rows: 110 Data size: 316 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col4 (type: string), _col5 (type: int)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 110 Data size: 316 Basic stats: COMPLETE Column stats: NONE
            Limit
              Number of rows: 5
              Statistics: Num rows: 5 Data size: 10 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                Statistics: Num rows: 5 Data size: 10 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      columns _col0,_col1
                      columns.types string:int
                      escape.delim \
                      hive.serialization.extend.additional.nesting.levels true
                      serialization.escape.crlf true
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: 5
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
     `dim_pay_date`.`date`
    , `deal`.`dealid`
FROM `orderpayment_small` `orderpayment`
JOIN `orderpayment_small` `dim_pay_date` ON `dim_pay_date`.`date` = `orderpayment`.`date`
JOIN `orderpayment_small` `deal` ON `deal`.`dealid` = `orderpayment`.`dealid`
JOIN `orderpayment_small` `order_city` ON `order_city`.`cityid` = `orderpayment`.`cityid`
JOIN `user_small` `user` ON `user`.`userid` = `orderpayment`.`userid`
limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@orderpayment_small
PREHOOK: Input: default@user_small
#### A masked pattern was here ####
POSTHOOK: query: SELECT
     `dim_pay_date`.`date`
    , `deal`.`dealid`
FROM `orderpayment_small` `orderpayment`
JOIN `orderpayment_small` `dim_pay_date` ON `dim_pay_date`.`date` = `orderpayment`.`date`
JOIN `orderpayment_small` `deal` ON `deal`.`dealid` = `orderpayment`.`dealid`
JOIN `orderpayment_small` `order_city` ON `order_city`.`cityid` = `orderpayment`.`cityid`
JOIN `user_small` `user` ON `user`.`userid` = `orderpayment`.`userid`
limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orderpayment_small
POSTHOOK: Input: default@user_small
#### A masked pattern was here ####
