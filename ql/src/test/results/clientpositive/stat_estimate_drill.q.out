PREHOOK: query: drop table if exists t1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists t1
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists t8
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists t8
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table t1 (a integer)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1
POSTHOOK: query: create table t1 (a integer)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1
PREHOOK: query: create table t3 (a integer,b integer,c integer)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t3
POSTHOOK: query: create table t3 (a integer,b integer,c integer)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t3
PREHOOK: query: insert into t1 values (1),(2),(3),(4),(5),(6),(7),(8),(9),(0)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@t1
POSTHOOK: query: insert into t1 values (1),(2),(3),(4),(5),(6),(7),(8),(9),(0)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@t1
POSTHOOK: Lineage: t1.a SCRIPT []
Warning: Shuffle Join JOIN[9][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Stage-1:MAPRED' is a cross product
PREHOOK: query: insert into t3
	select x1.a as a,x2.a as b,x3.a as c from
		t1 x1
		join t1 x2
		join t1 x3
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: default@t3
POSTHOOK: query: insert into t3
	select x1.a as a,x2.a as b,x3.a as c from
		t1 x1
		join t1 x2
		join t1 x3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: default@t3
POSTHOOK: Lineage: t3.a SIMPLE [(t1)x1.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: t3.b SIMPLE [(t1)x2.FieldSchema(name:a, type:int, comment:null), ]
POSTHOOK: Lineage: t3.c SIMPLE [(t1)x3.FieldSchema(name:a, type:int, comment:null), ]
PREHOOK: query: analyze table t3 compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@t3
PREHOOK: Output: default@t3
#### A masked pattern was here ####
POSTHOOK: query: analyze table t3 compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@t3
POSTHOOK: Output: default@t3
#### A masked pattern was here ####
PREHOOK: query: select sum(a) from t3 where b in (2,3) group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t3 where b in (2,3) group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t3 where b in (2,3) group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: explain analyze select sum(a) from t3 where b in (2,3) group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t3
            filterExpr: (b) IN (2, 3) (type: boolean)
            Statistics: Num rows: 1000/1 Data size: 8000 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (b) IN (2, 3) (type: boolean)
              Statistics: Num rows: 200/1 Data size: 1600 Basic stats: COMPLETE Column stats: COMPLETE
              Group By Operator
                aggregations: sum(a)
                keys: b (type: int)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 2/1 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 2/2 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 2/2 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col1 (type: bigint)
            outputColumnNames: _col0
            Statistics: Num rows: 2/2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              Statistics: Num rows: 2/2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(a) from t3 where a=1 or a=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t3 where a=1 or a=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t3 where a=1 or a=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: explain analyze select sum(a) from t3 where a=1 or a=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t3
            filterExpr: (a) IN (1, 2) (type: boolean)
            Statistics: Num rows: 1000/1 Data size: 8000 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (a) IN (1, 2) (type: boolean)
              Statistics: Num rows: 200/1 Data size: 1600 Basic stats: COMPLETE Column stats: COMPLETE
              Group By Operator
                aggregations: sum(a)
                keys: b (type: int)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10/1 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 10/10 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 10/10 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col1 (type: bigint)
            outputColumnNames: _col0
            Statistics: Num rows: 10/10 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              Statistics: Num rows: 10/10 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(a) from t3 where a=1 or (a=2  and b=3) group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t3 where a=1 or (a=2  and b=3) group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t3 where a=1 or (a=2  and b=3) group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: explain analyze select sum(a) from t3 where a=1 or (a=2  and b=3) group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t3
            filterExpr: ((a = 1) or ((a = 2) and (b = 3))) (type: boolean)
            Statistics: Num rows: 1000/1 Data size: 8000 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (((a = 2) and (b = 3)) or (a = 1)) (type: boolean)
              Statistics: Num rows: 110/1 Data size: 880 Basic stats: COMPLETE Column stats: COMPLETE
              Group By Operator
                aggregations: sum(a)
                keys: b (type: int)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10/1 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 10/10 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 10/10 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col1 (type: bigint)
            outputColumnNames: _col0
            Statistics: Num rows: 10/10 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              Statistics: Num rows: 10/10 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(a) from t3 where a=1 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t3 where a=1 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t3 where a=1 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: explain analyze select sum(a) from t3 where a=1 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t3
            filterExpr: (a = 1) (type: boolean)
            Statistics: Num rows: 1000/1 Data size: 8000 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (a = 1) (type: boolean)
              Statistics: Num rows: 100/1 Data size: 800 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: b (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 100/1 Data size: 800 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(1)
                  keys: _col0 (type: int)
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 10/1 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: int)
                    Statistics: Num rows: 10/10 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 10/10 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col1 (type: bigint)
            outputColumnNames: _col0
            Statistics: Num rows: 10/10 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              Statistics: Num rows: 10/10 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(a) from t3 where a=1 and b=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t3 where a=1 and b=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t3 where a=1 and b=2 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: explain analyze select sum(a) from t3 where a=1 and b=2 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t3
            filterExpr: ((a = 1) and (b = 2)) (type: boolean)
            Statistics: Num rows: 1000/1 Data size: 8000 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: ((a = 1) and (b = 2)) (type: boolean)
              Statistics: Num rows: 10/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                Statistics: Num rows: 10/1 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(1)
                  keys: true (type: boolean)
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1/1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: boolean)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: boolean)
                    Statistics: Num rows: 1/1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: boolean)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1/1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col1 (type: bigint)
            outputColumnNames: _col0
            Statistics: Num rows: 1/1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1/1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(a) from t3 where a=1 and b=2 and c=3 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t3 where a=1 and b=2 and c=3 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t3 where a=1 and b=2 and c=3 group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: explain analyze select sum(a) from t3 where a=1 and b=2 and c=3 group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t3
            filterExpr: ((a = 1) and (b = 2) and (c = 3)) (type: boolean)
            Statistics: Num rows: 1000/1 Data size: 12000 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: ((a = 1) and (b = 2) and (c = 3)) (type: boolean)
              Statistics: Num rows: 1/1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                Statistics: Num rows: 1/1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(1)
                  keys: true (type: boolean)
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1/1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: boolean)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: boolean)
                    Statistics: Num rows: 1/1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: boolean)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1/1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col1 (type: bigint)
            outputColumnNames: _col0
            Statistics: Num rows: 1/1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1/1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(a) from t3 where (a=1 and b=2) or (a=2 and b=3) or (a=3 and b=4) group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: select sum(a) from t3 where (a=1 and b=2) or (a=2 and b=3) or (a=3 and b=4) group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
PREHOOK: query: explain analyze select sum(a) from t3 where (a=1 and b=2) or (a=2 and b=3) or (a=3 and b=4) group by b
PREHOOK: type: QUERY
PREHOOK: Input: default@t3
#### A masked pattern was here ####
POSTHOOK: query: explain analyze select sum(a) from t3 where (a=1 and b=2) or (a=2 and b=3) or (a=3 and b=4) group by b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t3
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t3
            filterExpr: (struct(a,b)) IN (const struct(1,2), const struct(2,3), const struct(3,4)) (type: boolean)
            Statistics: Num rows: 1000/1 Data size: 8000 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (struct(a,b)) IN (const struct(1,2), const struct(2,3), const struct(3,4)) (type: boolean)
              Statistics: Num rows: 30/1 Data size: 240 Basic stats: COMPLETE Column stats: COMPLETE
              Group By Operator
                aggregations: sum(a)
                keys: b (type: int)
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10/1 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 10/3 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0)
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 10/3 Data size: 120 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col1 (type: bigint)
            outputColumnNames: _col0
            Statistics: Num rows: 10/3 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              Statistics: Num rows: 10/3 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

