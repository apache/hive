PREHOOK: query: drop table IF EXISTS encryptedTable PURGE
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table IF EXISTS encryptedTable PURGE
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table IF EXISTS unencryptedTable PURGE
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table IF EXISTS unencryptedTable PURGE
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table encryptedTable(value string)
    partitioned by (key string) clustered by (value) into 2 buckets stored as orc
#### A masked pattern was here ####
PREHOOK: type: CREATETABLE
#### A masked pattern was here ####
PREHOOK: Output: database:default
PREHOOK: Output: default@encryptedTable
POSTHOOK: query: create table encryptedTable(value string)
    partitioned by (key string) clustered by (value) into 2 buckets stored as orc
#### A masked pattern was here ####
POSTHOOK: type: CREATETABLE
#### A masked pattern was here ####
POSTHOOK: Output: database:default
POSTHOOK: Output: default@encryptedTable
Encryption key created: 'key_1'
Encryption zone created: '/build/ql/test/data/warehouse/encryptedTable' using key: 'key_1'
PREHOOK: query: create table unencryptedTable(value string)
    partitioned by (key string) clustered by (value) into 2 buckets stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@unencryptedTable
POSTHOOK: query: create table unencryptedTable(value string)
    partitioned by (key string) clustered by (value) into 2 buckets stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@unencryptedTable
PREHOOK: query: insert into table encryptedTable partition (key) values
    ('val_501', '501'),
    ('val_502', '502')
PREHOOK: type: QUERY
PREHOOK: Output: default@encryptedtable
POSTHOOK: query: insert into table encryptedTable partition (key) values
    ('val_501', '501'),
    ('val_502', '502')
POSTHOOK: type: QUERY
POSTHOOK: Output: default@encryptedtable@key=501
POSTHOOK: Output: default@encryptedtable@key=502
POSTHOOK: Lineage: encryptedtable PARTITION(key=501).value SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: encryptedtable PARTITION(key=502).value SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: select * from encryptedTable order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@encryptedtable
PREHOOK: Input: default@encryptedtable@key=501
PREHOOK: Input: default@encryptedtable@key=502
#### A PARTIAL masked pattern was here #### data/warehouse/encryptedTable/.hive-staging
POSTHOOK: query: select * from encryptedTable order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@encryptedtable
POSTHOOK: Input: default@encryptedtable@key=501
POSTHOOK: Input: default@encryptedtable@key=502
#### A PARTIAL masked pattern was here #### data/warehouse/encryptedTable/.hive-staging
val_501	501
val_502	502
PREHOOK: query: from src
insert into table encryptedTable partition (key)
    select value, key limit 2
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@encryptedtable
POSTHOOK: query: from src
insert into table encryptedTable partition (key)
    select value, key limit 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@encryptedtable@key=238
POSTHOOK: Output: default@encryptedtable@key=86
POSTHOOK: Lineage: encryptedtable PARTITION(key=238).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: encryptedtable PARTITION(key=86).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from encryptedTable order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@encryptedtable
PREHOOK: Input: default@encryptedtable@key=238
PREHOOK: Input: default@encryptedtable@key=501
PREHOOK: Input: default@encryptedtable@key=502
PREHOOK: Input: default@encryptedtable@key=86
#### A PARTIAL masked pattern was here #### data/warehouse/encryptedTable/.hive-staging
POSTHOOK: query: select * from encryptedTable order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@encryptedtable
POSTHOOK: Input: default@encryptedtable@key=238
POSTHOOK: Input: default@encryptedtable@key=501
POSTHOOK: Input: default@encryptedtable@key=502
POSTHOOK: Input: default@encryptedtable@key=86
#### A PARTIAL masked pattern was here #### data/warehouse/encryptedTable/.hive-staging
val_238	238
val_501	501
val_502	502
val_86	86
PREHOOK: query: from encryptedTable
insert into table unencryptedTable partition (key)
    select value, key
PREHOOK: type: QUERY
PREHOOK: Input: default@encryptedtable
PREHOOK: Input: default@encryptedtable@key=238
PREHOOK: Input: default@encryptedtable@key=501
PREHOOK: Input: default@encryptedtable@key=502
PREHOOK: Input: default@encryptedtable@key=86
PREHOOK: Output: default@unencryptedtable
POSTHOOK: query: from encryptedTable
insert into table unencryptedTable partition (key)
    select value, key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@encryptedtable
POSTHOOK: Input: default@encryptedtable@key=238
POSTHOOK: Input: default@encryptedtable@key=501
POSTHOOK: Input: default@encryptedtable@key=502
POSTHOOK: Input: default@encryptedtable@key=86
POSTHOOK: Output: default@unencryptedtable@key=238
POSTHOOK: Output: default@unencryptedtable@key=501
POSTHOOK: Output: default@unencryptedtable@key=502
POSTHOOK: Output: default@unencryptedtable@key=86
POSTHOOK: Lineage: unencryptedtable PARTITION(key=238).value SIMPLE [(encryptedtable)encryptedtable.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: unencryptedtable PARTITION(key=501).value SIMPLE [(encryptedtable)encryptedtable.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: unencryptedtable PARTITION(key=502).value SIMPLE [(encryptedtable)encryptedtable.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: unencryptedtable PARTITION(key=86).value SIMPLE [(encryptedtable)encryptedtable.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select * from unencryptedTable order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@unencryptedtable
PREHOOK: Input: default@unencryptedtable@key=238
PREHOOK: Input: default@unencryptedtable@key=501
PREHOOK: Input: default@unencryptedtable@key=502
PREHOOK: Input: default@unencryptedtable@key=86
#### A masked pattern was here ####
POSTHOOK: query: select * from unencryptedTable order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@unencryptedtable
POSTHOOK: Input: default@unencryptedtable@key=238
POSTHOOK: Input: default@unencryptedtable@key=501
POSTHOOK: Input: default@unencryptedtable@key=502
POSTHOOK: Input: default@unencryptedtable@key=86
#### A masked pattern was here ####
val_238	238
val_501	501
val_502	502
val_86	86
PREHOOK: query: drop table encryptedTable PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@encryptedtable
PREHOOK: Output: default@encryptedtable
POSTHOOK: query: drop table encryptedTable PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@encryptedtable
POSTHOOK: Output: default@encryptedtable
Encryption key deleted: 'key_1'
PREHOOK: query: drop table unencryptedTable PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@unencryptedtable
PREHOOK: Output: default@unencryptedtable
POSTHOOK: query: drop table unencryptedTable PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@unencryptedtable
POSTHOOK: Output: default@unencryptedtable
