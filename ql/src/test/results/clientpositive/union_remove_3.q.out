PREHOOK: query: -- This is to test the union->remove->filesink optimization
-- Union of 3 subqueries is performed (all of which are map-only queries)
-- followed by select star and a file sink.
-- There is no need for any optimization, since the whole query can be processed in
-- a single map-only job
-- It does not matter, whether the output is merged or not. In this case, merging is turned
-- off
-- INCLUDE_HADOOP_MAJOR_VERSIONS(0.23)
-- Since this test creates sub-directories for the output table outputTbl1, it might be easier
-- to run the test only on hadoop 23

create table inputTbl1(key string, val string) stored as textfile
PREHOOK: type: CREATETABLE
POSTHOOK: query: -- This is to test the union->remove->filesink optimization
-- Union of 3 subqueries is performed (all of which are map-only queries)
-- followed by select star and a file sink.
-- There is no need for any optimization, since the whole query can be processed in
-- a single map-only job
-- It does not matter, whether the output is merged or not. In this case, merging is turned
-- off
-- INCLUDE_HADOOP_MAJOR_VERSIONS(0.23)
-- Since this test creates sub-directories for the output table outputTbl1, it might be easier
-- to run the test only on hadoop 23

create table inputTbl1(key string, val string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@inputTbl1
PREHOOK: query: create table outputTbl1(key string, values bigint) stored as textfile
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table outputTbl1(key string, values bigint) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@outputTbl1
PREHOOK: query: load data local inpath '../data/files/T1.txt' into table inputTbl1
PREHOOK: type: LOAD
PREHOOK: Output: default@inputtbl1
POSTHOOK: query: load data local inpath '../data/files/T1.txt' into table inputTbl1
POSTHOOK: type: LOAD
POSTHOOK: Output: default@inputtbl1
PREHOOK: query: explain
insert overwrite table outputTbl1
SELECT *
FROM (
  SELECT key, 1 as values from inputTbl1
  UNION ALL
  SELECT key, 2 as values from inputTbl1
  UNION ALL
  SELECT key, 3 as values from inputTbl1
) a
PREHOOK: type: QUERY
POSTHOOK: query: explain
insert overwrite table outputTbl1
SELECT *
FROM (
  SELECT key, 1 as values from inputTbl1
  UNION ALL
  SELECT key, 2 as values from inputTbl1
  UNION ALL
  SELECT key, 3 as values from inputTbl1
) a
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME inputTbl1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR 1 values)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME inputTbl1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR 2 values))))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME inputTbl1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR 3 values))))) a)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME outputTbl1))) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        null-subquery1-subquery1:a-subquery1-subquery1:inputtbl1 
          TableScan
            alias: inputtbl1
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: 1
                    type: int
              outputColumnNames: _col0, _col1
              Union
                Select Operator
                  expressions:
                        expr: _col0
                        type: string
                        expr: UDFToLong(_col1)
                        type: bigint
                  outputColumnNames: _col0, _col1
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1
        null-subquery1-subquery2:a-subquery1-subquery2:inputtbl1 
          TableScan
            alias: inputtbl1
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: 2
                    type: int
              outputColumnNames: _col0, _col1
              Union
                Select Operator
                  expressions:
                        expr: _col0
                        type: string
                        expr: UDFToLong(_col1)
                        type: bigint
                  outputColumnNames: _col0, _col1
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1
        null-subquery2:a-subquery2:inputtbl1 
          TableScan
            alias: inputtbl1
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: 3
                    type: int
              outputColumnNames: _col0, _col1
              Union
                Select Operator
                  expressions:
                        expr: _col0
                        type: string
                        expr: UDFToLong(_col1)
                        type: bigint
                  outputColumnNames: _col0, _col1
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1

PREHOOK: query: insert overwrite table outputTbl1
SELECT *
FROM (
  SELECT key, 1 as values from inputTbl1
  UNION ALL
  SELECT key, 2 as values from inputTbl1
  UNION ALL
  SELECT key, 3 as values from inputTbl1
) a
PREHOOK: type: QUERY
PREHOOK: Input: default@inputtbl1
PREHOOK: Output: default@outputtbl1
POSTHOOK: query: insert overwrite table outputTbl1
SELECT *
FROM (
  SELECT key, 1 as values from inputTbl1
  UNION ALL
  SELECT key, 2 as values from inputTbl1
  UNION ALL
  SELECT key, 3 as values from inputTbl1
) a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@inputtbl1
POSTHOOK: Output: default@outputtbl1
POSTHOOK: Lineage: outputtbl1.key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), (inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), (inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1.values EXPRESSION []
PREHOOK: query: desc formatted outputTbl1
PREHOOK: type: DESCTABLE
POSTHOOK: query: desc formatted outputTbl1
POSTHOOK: type: DESCTABLE
POSTHOOK: Lineage: outputtbl1.key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), (inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), (inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1.values EXPRESSION []
# col_name            	data_type           	comment             
	 	 
key                 	string              	None                
values              	bigint              	None                
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Protect Mode:       	None                	 
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: select * from outputTbl1 order by key, values
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1
#### A masked pattern was here ####
POSTHOOK: query: select * from outputTbl1 order by key, values
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1
#### A masked pattern was here ####
POSTHOOK: Lineage: outputtbl1.key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), (inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), (inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1.values EXPRESSION []
1	1
1	2
1	3
2	1
2	2
2	3
3	1
3	2
3	3
7	1
7	2
7	3
8	1
8	1
8	2
8	2
8	3
8	3
