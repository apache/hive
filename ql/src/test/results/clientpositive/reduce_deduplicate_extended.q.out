PREHOOK: query: explain select key, sum(key) from (select * from src distribute by key sort by key, value) Q1 group by key
PREHOOK: type: QUERY
POSTHOOK: query: explain select key, sum(key) from (select * from src distribute by key sort by key, value) Q1 group by key
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_DISTRIBUTEBY (TOK_TABLE_OR_COL key)) (TOK_SORTBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL value))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL key)))) (TOK_GROUPBY (TOK_TABLE_OR_COL key))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
              outputColumnNames: _col0, _col1
              Reduce Output Operator
                key expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: string
                sort order: ++
                Map-reduce partition columns:
                      expr: _col0
                      type: string
                tag: -1
                value expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: string
      Reduce Operator Tree:
        Extract
          Select Operator
            expressions:
                  expr: _col0
                  type: string
            outputColumnNames: _col0
            Group By Operator
              aggregations:
                    expr: sum(_col0)
              bucketGroup: false
              keys:
                    expr: _col0
                    type: string
              mode: complete
              outputColumnNames: _col0, _col1
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: double
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select key, sum(key), lower(value) from (select * from src order by key) Q1 group by key, lower(value)
PREHOOK: type: QUERY
POSTHOOK: query: explain select key, sum(key), lower(value) from (select * from src order by key) Q1 group by key, lower(value)
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL key))) (TOK_SELEXPR (TOK_FUNCTION lower (TOK_TABLE_OR_COL value)))) (TOK_GROUPBY (TOK_TABLE_OR_COL key) (TOK_FUNCTION lower (TOK_TABLE_OR_COL value)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
              outputColumnNames: _col0, _col1
              Reduce Output Operator
                key expressions:
                      expr: _col0
                      type: string
                      expr: lower(_col1)
                      type: string
                sort order: ++
                Map-reduce partition columns:
                      expr: _col0
                      type: string
                      expr: lower(_col1)
                      type: string
                tag: -1
                value expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: string
      Reduce Operator Tree:
        Extract
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
            outputColumnNames: _col0, _col1
            Group By Operator
              aggregations:
                    expr: sum(_col0)
              bucketGroup: false
              keys:
                    expr: _col0
                    type: string
                    expr: lower(_col1)
                    type: string
              mode: complete
              outputColumnNames: _col0, _col1, _col2
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col2
                      type: double
                      expr: _col1
                      type: string
                outputColumnNames: _col0, _col1, _col2
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select key, sum(key), (X + 1) from (select key, (value + 1) as X from src order by key) Q1 group by key, (X + 1)
PREHOOK: type: QUERY
POSTHOOK: query: explain select key, sum(key), (X + 1) from (select key, (value + 1) as X from src order by key) Q1 group by key, (X + 1)
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (+ (TOK_TABLE_OR_COL value) 1) X)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL key))) (TOK_SELEXPR (+ (TOK_TABLE_OR_COL X) 1))) (TOK_GROUPBY (TOK_TABLE_OR_COL key) (+ (TOK_TABLE_OR_COL X) 1))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: (value + 1)
                    type: double
              outputColumnNames: _col0, _col1
              Reduce Output Operator
                key expressions:
                      expr: _col0
                      type: string
                      expr: (_col1 + 1)
                      type: double
                sort order: ++
                Map-reduce partition columns:
                      expr: _col0
                      type: string
                      expr: (_col1 + 1)
                      type: double
                tag: -1
                value expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: double
      Reduce Operator Tree:
        Extract
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: double
            outputColumnNames: _col0, _col1
            Group By Operator
              aggregations:
                    expr: sum(_col0)
              bucketGroup: false
              keys:
                    expr: _col0
                    type: string
                    expr: (_col1 + 1)
                    type: double
              mode: complete
              outputColumnNames: _col0, _col1, _col2
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col2
                      type: double
                      expr: _col1
                      type: double
                outputColumnNames: _col0, _col1, _col2
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select key, sum(key) as value from src group by key order by key, value
PREHOOK: type: QUERY
POSTHOOK: query: explain select key, sum(key) as value from src group by key order by key, value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL key)) value)) (TOK_GROUPBY (TOK_TABLE_OR_COL key)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL value)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
              outputColumnNames: key
              Group By Operator
                aggregations:
                      expr: sum(key)
                bucketGroup: false
                keys:
                      expr: key
                      type: string
                mode: hash
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: string
                        expr: _col1
                        type: double
                  sort order: ++
                  Map-reduce partition columns:
                        expr: _col0
                        type: string
                  tag: -1
                  value expressions:
                        expr: _col1
                        type: double
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: double
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select src.key, sum(src.key) FROM src JOIN src1 ON src.key = src1.key group by src.key, src.value
PREHOOK: type: QUERY
POSTHOOK: query: explain select src.key, sum(src.key) FROM src JOIN src1 ON src.key = src1.key group by src.key, src.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src)) (TOK_TABREF (TOK_TABNAME src1)) (= (. (TOK_TABLE_OR_COL src) key) (. (TOK_TABLE_OR_COL src1) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL src) key)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src) key) (. (TOK_TABLE_OR_COL src) value))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        src 
          TableScan
            alias: src
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 0
              value expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
        src1 
          TableScan
            alias: src1
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 1
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 
          handleSkewJoin: false
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
            outputColumnNames: _col0, _col1
            Group By Operator
              aggregations:
                    expr: sum(_col0)
              bucketGroup: false
              keys:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
              mode: hash
              outputColumnNames: _col0, _col1, _col2
              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
            Reduce Output Operator
              key expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
              sort order: ++
              Map-reduce partition columns:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
              tag: -1
              value expressions:
                    expr: _col2
                    type: double
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
                expr: KEY._col1
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col2
                  type: double
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select src.key, src.value FROM src JOIN src1 ON src.key = src1.key order by src.key, src.value
PREHOOK: type: QUERY
POSTHOOK: query: explain select src.key, src.value FROM src JOIN src1 ON src.key = src1.key order by src.key, src.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src)) (TOK_TABREF (TOK_TABNAME src1)) (= (. (TOK_TABLE_OR_COL src) key) (. (TOK_TABLE_OR_COL src1) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src) value)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        src 
          TableScan
            alias: src
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 0
              value expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
        src1 
          TableScan
            alias: src1
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 1
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 
          handleSkewJoin: false
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
            Reduce Output Operator
              key expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
              sort order: ++
              tag: -1
              value expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
      Reduce Operator Tree:
        Extract
          File Output Operator
            compressed: false
            GlobalTableId: 0
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain from (select key, value from src group by key, value) s select s.key group by s.key
PREHOOK: type: QUERY
POSTHOOK: query: explain from (select key, value from src group by key, value) s select s.key group by s.key
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL value))) (TOK_GROUPBY (TOK_TABLE_OR_COL key) (TOK_TABLE_OR_COL value)))) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) key))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL s) key))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        s:src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
              outputColumnNames: key, value
              Group By Operator
                bucketGroup: false
                keys:
                      expr: key
                      type: string
                      expr: value
                      type: string
                mode: hash
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: string
                        expr: _col1
                        type: string
                  sort order: ++
                  Map-reduce partition columns:
                        expr: _col0
                        type: string
                        expr: _col1
                        type: string
                  tag: -1
      Reduce Operator Tree:
        Group By Operator
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
                expr: KEY._col1
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
            outputColumnNames: _col0
            Group By Operator
              bucketGroup: false
              keys:
                    expr: _col0
                    type: string
              mode: complete
              outputColumnNames: _col0
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                outputColumnNames: _col0
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select key, sum(key) from (select * from src distribute by key sort by key, value) Q1 group by key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, sum(key) from (select * from src distribute by key sort by key, value) Q1 group by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	0.0
10	10.0
100	200.0
103	206.0
104	208.0
105	105.0
11	11.0
111	111.0
113	226.0
114	114.0
116	116.0
118	236.0
119	357.0
12	24.0
120	240.0
125	250.0
126	126.0
128	384.0
129	258.0
131	131.0
133	133.0
134	268.0
136	136.0
137	274.0
138	552.0
143	143.0
145	145.0
146	292.0
149	298.0
15	30.0
150	150.0
152	304.0
153	153.0
155	155.0
156	156.0
157	157.0
158	158.0
160	160.0
162	162.0
163	163.0
164	328.0
165	330.0
166	166.0
167	501.0
168	168.0
169	676.0
17	17.0
170	170.0
172	344.0
174	348.0
175	350.0
176	352.0
177	177.0
178	178.0
179	358.0
18	36.0
180	180.0
181	181.0
183	183.0
186	186.0
187	561.0
189	189.0
19	19.0
190	190.0
191	382.0
192	192.0
193	579.0
194	194.0
195	390.0
196	196.0
197	394.0
199	597.0
2	2.0
20	20.0
200	400.0
201	201.0
202	202.0
203	406.0
205	410.0
207	414.0
208	624.0
209	418.0
213	426.0
214	214.0
216	432.0
217	434.0
218	218.0
219	438.0
221	442.0
222	222.0
223	446.0
224	448.0
226	226.0
228	228.0
229	458.0
230	1150.0
233	466.0
235	235.0
237	474.0
238	476.0
239	478.0
24	48.0
241	241.0
242	484.0
244	244.0
247	247.0
248	248.0
249	249.0
252	252.0
255	510.0
256	512.0
257	257.0
258	258.0
26	52.0
260	260.0
262	262.0
263	263.0
265	530.0
266	266.0
27	27.0
272	544.0
273	819.0
274	274.0
275	275.0
277	1108.0
278	556.0
28	28.0
280	560.0
281	562.0
282	564.0
283	283.0
284	284.0
285	285.0
286	286.0
287	287.0
288	576.0
289	289.0
291	291.0
292	292.0
296	296.0
298	894.0
30	30.0
302	302.0
305	305.0
306	306.0
307	614.0
308	308.0
309	618.0
310	310.0
311	933.0
315	315.0
316	948.0
317	634.0
318	954.0
321	642.0
322	644.0
323	323.0
325	650.0
327	981.0
33	33.0
331	662.0
332	332.0
333	666.0
335	335.0
336	336.0
338	338.0
339	339.0
34	34.0
341	341.0
342	684.0
344	688.0
345	345.0
348	1740.0
35	105.0
351	351.0
353	706.0
356	356.0
360	360.0
362	362.0
364	364.0
365	365.0
366	366.0
367	734.0
368	368.0
369	1107.0
37	74.0
373	373.0
374	374.0
375	375.0
377	377.0
378	378.0
379	379.0
382	764.0
384	1152.0
386	386.0
389	389.0
392	392.0
393	393.0
394	394.0
395	790.0
396	1188.0
397	794.0
399	798.0
4	4.0
400	400.0
401	2005.0
402	402.0
403	1209.0
404	808.0
406	1624.0
407	407.0
409	1227.0
41	41.0
411	411.0
413	826.0
414	828.0
417	1251.0
418	418.0
419	419.0
42	84.0
421	421.0
424	848.0
427	427.0
429	858.0
43	43.0
430	1290.0
431	1293.0
432	432.0
435	435.0
436	436.0
437	437.0
438	1314.0
439	878.0
44	44.0
443	443.0
444	444.0
446	446.0
448	448.0
449	449.0
452	452.0
453	453.0
454	1362.0
455	455.0
457	457.0
458	916.0
459	918.0
460	460.0
462	924.0
463	926.0
466	1398.0
467	467.0
468	1872.0
469	2345.0
47	47.0
470	470.0
472	472.0
475	475.0
477	477.0
478	956.0
479	479.0
480	1440.0
481	481.0
482	482.0
483	483.0
484	484.0
485	485.0
487	487.0
489	1956.0
490	490.0
491	491.0
492	984.0
493	493.0
494	494.0
495	495.0
496	496.0
497	497.0
498	1494.0
5	15.0
51	102.0
53	53.0
54	54.0
57	57.0
58	116.0
64	64.0
65	65.0
66	66.0
67	134.0
69	69.0
70	210.0
72	144.0
74	74.0
76	152.0
77	77.0
78	78.0
8	8.0
80	80.0
82	82.0
83	166.0
84	168.0
85	85.0
86	86.0
87	87.0
9	9.0
90	270.0
92	92.0
95	190.0
96	96.0
97	194.0
98	196.0
PREHOOK: query: select key, sum(key), lower(value) from (select * from src order by key) Q1 group by key, lower(value)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, sum(key), lower(value) from (select * from src order by key) Q1 group by key, lower(value)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	0.0	val_0
10	10.0	val_10
100	200.0	val_100
103	206.0	val_103
104	208.0	val_104
105	105.0	val_105
11	11.0	val_11
111	111.0	val_111
113	226.0	val_113
114	114.0	val_114
116	116.0	val_116
118	236.0	val_118
119	357.0	val_119
12	24.0	val_12
120	240.0	val_120
125	250.0	val_125
126	126.0	val_126
128	384.0	val_128
129	258.0	val_129
131	131.0	val_131
133	133.0	val_133
134	268.0	val_134
136	136.0	val_136
137	274.0	val_137
138	552.0	val_138
143	143.0	val_143
145	145.0	val_145
146	292.0	val_146
149	298.0	val_149
15	30.0	val_15
150	150.0	val_150
152	304.0	val_152
153	153.0	val_153
155	155.0	val_155
156	156.0	val_156
157	157.0	val_157
158	158.0	val_158
160	160.0	val_160
162	162.0	val_162
163	163.0	val_163
164	328.0	val_164
165	330.0	val_165
166	166.0	val_166
167	501.0	val_167
168	168.0	val_168
169	676.0	val_169
17	17.0	val_17
170	170.0	val_170
172	344.0	val_172
174	348.0	val_174
175	350.0	val_175
176	352.0	val_176
177	177.0	val_177
178	178.0	val_178
179	358.0	val_179
18	36.0	val_18
180	180.0	val_180
181	181.0	val_181
183	183.0	val_183
186	186.0	val_186
187	561.0	val_187
189	189.0	val_189
19	19.0	val_19
190	190.0	val_190
191	382.0	val_191
192	192.0	val_192
193	579.0	val_193
194	194.0	val_194
195	390.0	val_195
196	196.0	val_196
197	394.0	val_197
199	597.0	val_199
2	2.0	val_2
20	20.0	val_20
200	400.0	val_200
201	201.0	val_201
202	202.0	val_202
203	406.0	val_203
205	410.0	val_205
207	414.0	val_207
208	624.0	val_208
209	418.0	val_209
213	426.0	val_213
214	214.0	val_214
216	432.0	val_216
217	434.0	val_217
218	218.0	val_218
219	438.0	val_219
221	442.0	val_221
222	222.0	val_222
223	446.0	val_223
224	448.0	val_224
226	226.0	val_226
228	228.0	val_228
229	458.0	val_229
230	1150.0	val_230
233	466.0	val_233
235	235.0	val_235
237	474.0	val_237
238	476.0	val_238
239	478.0	val_239
24	48.0	val_24
241	241.0	val_241
242	484.0	val_242
244	244.0	val_244
247	247.0	val_247
248	248.0	val_248
249	249.0	val_249
252	252.0	val_252
255	510.0	val_255
256	512.0	val_256
257	257.0	val_257
258	258.0	val_258
26	52.0	val_26
260	260.0	val_260
262	262.0	val_262
263	263.0	val_263
265	530.0	val_265
266	266.0	val_266
27	27.0	val_27
272	544.0	val_272
273	819.0	val_273
274	274.0	val_274
275	275.0	val_275
277	1108.0	val_277
278	556.0	val_278
28	28.0	val_28
280	560.0	val_280
281	562.0	val_281
282	564.0	val_282
283	283.0	val_283
284	284.0	val_284
285	285.0	val_285
286	286.0	val_286
287	287.0	val_287
288	576.0	val_288
289	289.0	val_289
291	291.0	val_291
292	292.0	val_292
296	296.0	val_296
298	894.0	val_298
30	30.0	val_30
302	302.0	val_302
305	305.0	val_305
306	306.0	val_306
307	614.0	val_307
308	308.0	val_308
309	618.0	val_309
310	310.0	val_310
311	933.0	val_311
315	315.0	val_315
316	948.0	val_316
317	634.0	val_317
318	954.0	val_318
321	642.0	val_321
322	644.0	val_322
323	323.0	val_323
325	650.0	val_325
327	981.0	val_327
33	33.0	val_33
331	662.0	val_331
332	332.0	val_332
333	666.0	val_333
335	335.0	val_335
336	336.0	val_336
338	338.0	val_338
339	339.0	val_339
34	34.0	val_34
341	341.0	val_341
342	684.0	val_342
344	688.0	val_344
345	345.0	val_345
348	1740.0	val_348
35	105.0	val_35
351	351.0	val_351
353	706.0	val_353
356	356.0	val_356
360	360.0	val_360
362	362.0	val_362
364	364.0	val_364
365	365.0	val_365
366	366.0	val_366
367	734.0	val_367
368	368.0	val_368
369	1107.0	val_369
37	74.0	val_37
373	373.0	val_373
374	374.0	val_374
375	375.0	val_375
377	377.0	val_377
378	378.0	val_378
379	379.0	val_379
382	764.0	val_382
384	1152.0	val_384
386	386.0	val_386
389	389.0	val_389
392	392.0	val_392
393	393.0	val_393
394	394.0	val_394
395	790.0	val_395
396	1188.0	val_396
397	794.0	val_397
399	798.0	val_399
4	4.0	val_4
400	400.0	val_400
401	2005.0	val_401
402	402.0	val_402
403	1209.0	val_403
404	808.0	val_404
406	1624.0	val_406
407	407.0	val_407
409	1227.0	val_409
41	41.0	val_41
411	411.0	val_411
413	826.0	val_413
414	828.0	val_414
417	1251.0	val_417
418	418.0	val_418
419	419.0	val_419
42	84.0	val_42
421	421.0	val_421
424	848.0	val_424
427	427.0	val_427
429	858.0	val_429
43	43.0	val_43
430	1290.0	val_430
431	1293.0	val_431
432	432.0	val_432
435	435.0	val_435
436	436.0	val_436
437	437.0	val_437
438	1314.0	val_438
439	878.0	val_439
44	44.0	val_44
443	443.0	val_443
444	444.0	val_444
446	446.0	val_446
448	448.0	val_448
449	449.0	val_449
452	452.0	val_452
453	453.0	val_453
454	1362.0	val_454
455	455.0	val_455
457	457.0	val_457
458	916.0	val_458
459	918.0	val_459
460	460.0	val_460
462	924.0	val_462
463	926.0	val_463
466	1398.0	val_466
467	467.0	val_467
468	1872.0	val_468
469	2345.0	val_469
47	47.0	val_47
470	470.0	val_470
472	472.0	val_472
475	475.0	val_475
477	477.0	val_477
478	956.0	val_478
479	479.0	val_479
480	1440.0	val_480
481	481.0	val_481
482	482.0	val_482
483	483.0	val_483
484	484.0	val_484
485	485.0	val_485
487	487.0	val_487
489	1956.0	val_489
490	490.0	val_490
491	491.0	val_491
492	984.0	val_492
493	493.0	val_493
494	494.0	val_494
495	495.0	val_495
496	496.0	val_496
497	497.0	val_497
498	1494.0	val_498
5	15.0	val_5
51	102.0	val_51
53	53.0	val_53
54	54.0	val_54
57	57.0	val_57
58	116.0	val_58
64	64.0	val_64
65	65.0	val_65
66	66.0	val_66
67	134.0	val_67
69	69.0	val_69
70	210.0	val_70
72	144.0	val_72
74	74.0	val_74
76	152.0	val_76
77	77.0	val_77
78	78.0	val_78
8	8.0	val_8
80	80.0	val_80
82	82.0	val_82
83	166.0	val_83
84	168.0	val_84
85	85.0	val_85
86	86.0	val_86
87	87.0	val_87
9	9.0	val_9
90	270.0	val_90
92	92.0	val_92
95	190.0	val_95
96	96.0	val_96
97	194.0	val_97
98	196.0	val_98
PREHOOK: query: select key, sum(key), (X + 1) from (select key, (value + 1) as X from src order by key) Q1 group by key, (X + 1)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, sum(key), (X + 1) from (select key, (value + 1) as X from src order by key) Q1 group by key, (X + 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	0.0	NULL
10	10.0	NULL
100	200.0	NULL
103	206.0	NULL
104	208.0	NULL
105	105.0	NULL
11	11.0	NULL
111	111.0	NULL
113	226.0	NULL
114	114.0	NULL
116	116.0	NULL
118	236.0	NULL
119	357.0	NULL
12	24.0	NULL
120	240.0	NULL
125	250.0	NULL
126	126.0	NULL
128	384.0	NULL
129	258.0	NULL
131	131.0	NULL
133	133.0	NULL
134	268.0	NULL
136	136.0	NULL
137	274.0	NULL
138	552.0	NULL
143	143.0	NULL
145	145.0	NULL
146	292.0	NULL
149	298.0	NULL
15	30.0	NULL
150	150.0	NULL
152	304.0	NULL
153	153.0	NULL
155	155.0	NULL
156	156.0	NULL
157	157.0	NULL
158	158.0	NULL
160	160.0	NULL
162	162.0	NULL
163	163.0	NULL
164	328.0	NULL
165	330.0	NULL
166	166.0	NULL
167	501.0	NULL
168	168.0	NULL
169	676.0	NULL
17	17.0	NULL
170	170.0	NULL
172	344.0	NULL
174	348.0	NULL
175	350.0	NULL
176	352.0	NULL
177	177.0	NULL
178	178.0	NULL
179	358.0	NULL
18	36.0	NULL
180	180.0	NULL
181	181.0	NULL
183	183.0	NULL
186	186.0	NULL
187	561.0	NULL
189	189.0	NULL
19	19.0	NULL
190	190.0	NULL
191	382.0	NULL
192	192.0	NULL
193	579.0	NULL
194	194.0	NULL
195	390.0	NULL
196	196.0	NULL
197	394.0	NULL
199	597.0	NULL
2	2.0	NULL
20	20.0	NULL
200	400.0	NULL
201	201.0	NULL
202	202.0	NULL
203	406.0	NULL
205	410.0	NULL
207	414.0	NULL
208	624.0	NULL
209	418.0	NULL
213	426.0	NULL
214	214.0	NULL
216	432.0	NULL
217	434.0	NULL
218	218.0	NULL
219	438.0	NULL
221	442.0	NULL
222	222.0	NULL
223	446.0	NULL
224	448.0	NULL
226	226.0	NULL
228	228.0	NULL
229	458.0	NULL
230	1150.0	NULL
233	466.0	NULL
235	235.0	NULL
237	474.0	NULL
238	476.0	NULL
239	478.0	NULL
24	48.0	NULL
241	241.0	NULL
242	484.0	NULL
244	244.0	NULL
247	247.0	NULL
248	248.0	NULL
249	249.0	NULL
252	252.0	NULL
255	510.0	NULL
256	512.0	NULL
257	257.0	NULL
258	258.0	NULL
26	52.0	NULL
260	260.0	NULL
262	262.0	NULL
263	263.0	NULL
265	530.0	NULL
266	266.0	NULL
27	27.0	NULL
272	544.0	NULL
273	819.0	NULL
274	274.0	NULL
275	275.0	NULL
277	1108.0	NULL
278	556.0	NULL
28	28.0	NULL
280	560.0	NULL
281	562.0	NULL
282	564.0	NULL
283	283.0	NULL
284	284.0	NULL
285	285.0	NULL
286	286.0	NULL
287	287.0	NULL
288	576.0	NULL
289	289.0	NULL
291	291.0	NULL
292	292.0	NULL
296	296.0	NULL
298	894.0	NULL
30	30.0	NULL
302	302.0	NULL
305	305.0	NULL
306	306.0	NULL
307	614.0	NULL
308	308.0	NULL
309	618.0	NULL
310	310.0	NULL
311	933.0	NULL
315	315.0	NULL
316	948.0	NULL
317	634.0	NULL
318	954.0	NULL
321	642.0	NULL
322	644.0	NULL
323	323.0	NULL
325	650.0	NULL
327	981.0	NULL
33	33.0	NULL
331	662.0	NULL
332	332.0	NULL
333	666.0	NULL
335	335.0	NULL
336	336.0	NULL
338	338.0	NULL
339	339.0	NULL
34	34.0	NULL
341	341.0	NULL
342	684.0	NULL
344	688.0	NULL
345	345.0	NULL
348	1740.0	NULL
35	105.0	NULL
351	351.0	NULL
353	706.0	NULL
356	356.0	NULL
360	360.0	NULL
362	362.0	NULL
364	364.0	NULL
365	365.0	NULL
366	366.0	NULL
367	734.0	NULL
368	368.0	NULL
369	1107.0	NULL
37	74.0	NULL
373	373.0	NULL
374	374.0	NULL
375	375.0	NULL
377	377.0	NULL
378	378.0	NULL
379	379.0	NULL
382	764.0	NULL
384	1152.0	NULL
386	386.0	NULL
389	389.0	NULL
392	392.0	NULL
393	393.0	NULL
394	394.0	NULL
395	790.0	NULL
396	1188.0	NULL
397	794.0	NULL
399	798.0	NULL
4	4.0	NULL
400	400.0	NULL
401	2005.0	NULL
402	402.0	NULL
403	1209.0	NULL
404	808.0	NULL
406	1624.0	NULL
407	407.0	NULL
409	1227.0	NULL
41	41.0	NULL
411	411.0	NULL
413	826.0	NULL
414	828.0	NULL
417	1251.0	NULL
418	418.0	NULL
419	419.0	NULL
42	84.0	NULL
421	421.0	NULL
424	848.0	NULL
427	427.0	NULL
429	858.0	NULL
43	43.0	NULL
430	1290.0	NULL
431	1293.0	NULL
432	432.0	NULL
435	435.0	NULL
436	436.0	NULL
437	437.0	NULL
438	1314.0	NULL
439	878.0	NULL
44	44.0	NULL
443	443.0	NULL
444	444.0	NULL
446	446.0	NULL
448	448.0	NULL
449	449.0	NULL
452	452.0	NULL
453	453.0	NULL
454	1362.0	NULL
455	455.0	NULL
457	457.0	NULL
458	916.0	NULL
459	918.0	NULL
460	460.0	NULL
462	924.0	NULL
463	926.0	NULL
466	1398.0	NULL
467	467.0	NULL
468	1872.0	NULL
469	2345.0	NULL
47	47.0	NULL
470	470.0	NULL
472	472.0	NULL
475	475.0	NULL
477	477.0	NULL
478	956.0	NULL
479	479.0	NULL
480	1440.0	NULL
481	481.0	NULL
482	482.0	NULL
483	483.0	NULL
484	484.0	NULL
485	485.0	NULL
487	487.0	NULL
489	1956.0	NULL
490	490.0	NULL
491	491.0	NULL
492	984.0	NULL
493	493.0	NULL
494	494.0	NULL
495	495.0	NULL
496	496.0	NULL
497	497.0	NULL
498	1494.0	NULL
5	15.0	NULL
51	102.0	NULL
53	53.0	NULL
54	54.0	NULL
57	57.0	NULL
58	116.0	NULL
64	64.0	NULL
65	65.0	NULL
66	66.0	NULL
67	134.0	NULL
69	69.0	NULL
70	210.0	NULL
72	144.0	NULL
74	74.0	NULL
76	152.0	NULL
77	77.0	NULL
78	78.0	NULL
8	8.0	NULL
80	80.0	NULL
82	82.0	NULL
83	166.0	NULL
84	168.0	NULL
85	85.0	NULL
86	86.0	NULL
87	87.0	NULL
9	9.0	NULL
90	270.0	NULL
92	92.0	NULL
95	190.0	NULL
96	96.0	NULL
97	194.0	NULL
98	196.0	NULL
PREHOOK: query: select key, sum(key) as value from src group by key order by key, value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, sum(key) as value from src group by key order by key, value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	0.0
10	10.0
100	200.0
103	206.0
104	208.0
105	105.0
11	11.0
111	111.0
113	226.0
114	114.0
116	116.0
118	236.0
119	357.0
12	24.0
120	240.0
125	250.0
126	126.0
128	384.0
129	258.0
131	131.0
133	133.0
134	268.0
136	136.0
137	274.0
138	552.0
143	143.0
145	145.0
146	292.0
149	298.0
15	30.0
150	150.0
152	304.0
153	153.0
155	155.0
156	156.0
157	157.0
158	158.0
160	160.0
162	162.0
163	163.0
164	328.0
165	330.0
166	166.0
167	501.0
168	168.0
169	676.0
17	17.0
170	170.0
172	344.0
174	348.0
175	350.0
176	352.0
177	177.0
178	178.0
179	358.0
18	36.0
180	180.0
181	181.0
183	183.0
186	186.0
187	561.0
189	189.0
19	19.0
190	190.0
191	382.0
192	192.0
193	579.0
194	194.0
195	390.0
196	196.0
197	394.0
199	597.0
2	2.0
20	20.0
200	400.0
201	201.0
202	202.0
203	406.0
205	410.0
207	414.0
208	624.0
209	418.0
213	426.0
214	214.0
216	432.0
217	434.0
218	218.0
219	438.0
221	442.0
222	222.0
223	446.0
224	448.0
226	226.0
228	228.0
229	458.0
230	1150.0
233	466.0
235	235.0
237	474.0
238	476.0
239	478.0
24	48.0
241	241.0
242	484.0
244	244.0
247	247.0
248	248.0
249	249.0
252	252.0
255	510.0
256	512.0
257	257.0
258	258.0
26	52.0
260	260.0
262	262.0
263	263.0
265	530.0
266	266.0
27	27.0
272	544.0
273	819.0
274	274.0
275	275.0
277	1108.0
278	556.0
28	28.0
280	560.0
281	562.0
282	564.0
283	283.0
284	284.0
285	285.0
286	286.0
287	287.0
288	576.0
289	289.0
291	291.0
292	292.0
296	296.0
298	894.0
30	30.0
302	302.0
305	305.0
306	306.0
307	614.0
308	308.0
309	618.0
310	310.0
311	933.0
315	315.0
316	948.0
317	634.0
318	954.0
321	642.0
322	644.0
323	323.0
325	650.0
327	981.0
33	33.0
331	662.0
332	332.0
333	666.0
335	335.0
336	336.0
338	338.0
339	339.0
34	34.0
341	341.0
342	684.0
344	688.0
345	345.0
348	1740.0
35	105.0
351	351.0
353	706.0
356	356.0
360	360.0
362	362.0
364	364.0
365	365.0
366	366.0
367	734.0
368	368.0
369	1107.0
37	74.0
373	373.0
374	374.0
375	375.0
377	377.0
378	378.0
379	379.0
382	764.0
384	1152.0
386	386.0
389	389.0
392	392.0
393	393.0
394	394.0
395	790.0
396	1188.0
397	794.0
399	798.0
4	4.0
400	400.0
401	2005.0
402	402.0
403	1209.0
404	808.0
406	1624.0
407	407.0
409	1227.0
41	41.0
411	411.0
413	826.0
414	828.0
417	1251.0
418	418.0
419	419.0
42	84.0
421	421.0
424	848.0
427	427.0
429	858.0
43	43.0
430	1290.0
431	1293.0
432	432.0
435	435.0
436	436.0
437	437.0
438	1314.0
439	878.0
44	44.0
443	443.0
444	444.0
446	446.0
448	448.0
449	449.0
452	452.0
453	453.0
454	1362.0
455	455.0
457	457.0
458	916.0
459	918.0
460	460.0
462	924.0
463	926.0
466	1398.0
467	467.0
468	1872.0
469	2345.0
47	47.0
470	470.0
472	472.0
475	475.0
477	477.0
478	956.0
479	479.0
480	1440.0
481	481.0
482	482.0
483	483.0
484	484.0
485	485.0
487	487.0
489	1956.0
490	490.0
491	491.0
492	984.0
493	493.0
494	494.0
495	495.0
496	496.0
497	497.0
498	1494.0
5	15.0
51	102.0
53	53.0
54	54.0
57	57.0
58	116.0
64	64.0
65	65.0
66	66.0
67	134.0
69	69.0
70	210.0
72	144.0
74	74.0
76	152.0
77	77.0
78	78.0
8	8.0
80	80.0
82	82.0
83	166.0
84	168.0
85	85.0
86	86.0
87	87.0
9	9.0
90	270.0
92	92.0
95	190.0
96	96.0
97	194.0
98	196.0
PREHOOK: query: select src.key, sum(src.key) FROM src JOIN src1 ON src.key = src1.key group by src.key, src.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
#### A masked pattern was here ####
POSTHOOK: query: select src.key, sum(src.key) FROM src JOIN src1 ON src.key = src1.key group by src.key, src.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
#### A masked pattern was here ####
128	384.0
146	292.0
150	150.0
213	426.0
224	448.0
238	476.0
255	510.0
273	819.0
278	556.0
311	933.0
369	1107.0
401	2005.0
406	1624.0
66	66.0
98	196.0
PREHOOK: query: select src.key, src.value FROM src JOIN src1 ON src.key = src1.key order by src.key, src.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
#### A masked pattern was here ####
POSTHOOK: query: select src.key, src.value FROM src JOIN src1 ON src.key = src1.key order by src.key, src.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
#### A masked pattern was here ####
128	val_128
128	val_128
128	val_128
146	val_146
146	val_146
150	val_150
213	val_213
213	val_213
224	val_224
224	val_224
238	val_238
238	val_238
255	val_255
255	val_255
273	val_273
273	val_273
273	val_273
278	val_278
278	val_278
311	val_311
311	val_311
311	val_311
369	val_369
369	val_369
369	val_369
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
406	val_406
406	val_406
406	val_406
406	val_406
66	val_66
98	val_98
98	val_98
PREHOOK: query: from (select key, value from src group by key, value) s select s.key group by s.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: from (select key, value from src group by key, value) s select s.key group by s.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0
10
100
103
104
105
11
111
113
114
116
118
119
12
120
125
126
128
129
131
133
134
136
137
138
143
145
146
149
15
150
152
153
155
156
157
158
160
162
163
164
165
166
167
168
169
17
170
172
174
175
176
177
178
179
18
180
181
183
186
187
189
19
190
191
192
193
194
195
196
197
199
2
20
200
201
202
203
205
207
208
209
213
214
216
217
218
219
221
222
223
224
226
228
229
230
233
235
237
238
239
24
241
242
244
247
248
249
252
255
256
257
258
26
260
262
263
265
266
27
272
273
274
275
277
278
28
280
281
282
283
284
285
286
287
288
289
291
292
296
298
30
302
305
306
307
308
309
310
311
315
316
317
318
321
322
323
325
327
33
331
332
333
335
336
338
339
34
341
342
344
345
348
35
351
353
356
360
362
364
365
366
367
368
369
37
373
374
375
377
378
379
382
384
386
389
392
393
394
395
396
397
399
4
400
401
402
403
404
406
407
409
41
411
413
414
417
418
419
42
421
424
427
429
43
430
431
432
435
436
437
438
439
44
443
444
446
448
449
452
453
454
455
457
458
459
460
462
463
466
467
468
469
47
470
472
475
477
478
479
480
481
482
483
484
485
487
489
490
491
492
493
494
495
496
497
498
5
51
53
54
57
58
64
65
66
67
69
70
72
74
76
77
78
8
80
82
83
84
85
86
87
9
90
92
95
96
97
98
PREHOOK: query: explain select key, sum(key) from (select * from src distribute by key sort by key, value) Q1 group by key
PREHOOK: type: QUERY
POSTHOOK: query: explain select key, sum(key) from (select * from src distribute by key sort by key, value) Q1 group by key
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_DISTRIBUTEBY (TOK_TABLE_OR_COL key)) (TOK_SORTBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL value))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL key)))) (TOK_GROUPBY (TOK_TABLE_OR_COL key))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
              outputColumnNames: _col0, _col1
              Reduce Output Operator
                key expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: string
                sort order: ++
                Map-reduce partition columns:
                      expr: _col0
                      type: string
                tag: -1
                value expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: string
      Reduce Operator Tree:
        Extract
          Select Operator
            expressions:
                  expr: _col0
                  type: string
            outputColumnNames: _col0
            Group By Operator
              aggregations:
                    expr: sum(_col0)
              bucketGroup: false
              keys:
                    expr: _col0
                    type: string
              mode: complete
              outputColumnNames: _col0, _col1
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: double
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select key, sum(key), lower(value) from (select * from src order by key) Q1 group by key, lower(value)
PREHOOK: type: QUERY
POSTHOOK: query: explain select key, sum(key), lower(value) from (select * from src order by key) Q1 group by key, lower(value)
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL key))) (TOK_SELEXPR (TOK_FUNCTION lower (TOK_TABLE_OR_COL value)))) (TOK_GROUPBY (TOK_TABLE_OR_COL key) (TOK_FUNCTION lower (TOK_TABLE_OR_COL value)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
              outputColumnNames: _col0, _col1
              Reduce Output Operator
                key expressions:
                      expr: _col0
                      type: string
                      expr: lower(_col1)
                      type: string
                sort order: ++
                Map-reduce partition columns:
                      expr: _col0
                      type: string
                      expr: lower(_col1)
                      type: string
                tag: -1
                value expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: string
      Reduce Operator Tree:
        Extract
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
            outputColumnNames: _col0, _col1
            Group By Operator
              aggregations:
                    expr: sum(_col0)
              bucketGroup: false
              keys:
                    expr: _col0
                    type: string
                    expr: lower(_col1)
                    type: string
              mode: complete
              outputColumnNames: _col0, _col1, _col2
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col2
                      type: double
                      expr: _col1
                      type: string
                outputColumnNames: _col0, _col1, _col2
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select key, sum(key), (X + 1) from (select key, (value + 1) as X from src order by key) Q1 group by key, (X + 1)
PREHOOK: type: QUERY
POSTHOOK: query: explain select key, sum(key), (X + 1) from (select key, (value + 1) as X from src order by key) Q1 group by key, (X + 1)
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (+ (TOK_TABLE_OR_COL value) 1) X)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL key))) (TOK_SELEXPR (+ (TOK_TABLE_OR_COL X) 1))) (TOK_GROUPBY (TOK_TABLE_OR_COL key) (+ (TOK_TABLE_OR_COL X) 1))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: (value + 1)
                    type: double
              outputColumnNames: _col0, _col1
              Reduce Output Operator
                key expressions:
                      expr: _col0
                      type: string
                      expr: (_col1 + 1)
                      type: double
                sort order: ++
                Map-reduce partition columns:
                      expr: _col0
                      type: string
                      expr: (_col1 + 1)
                      type: double
                tag: -1
                value expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: double
      Reduce Operator Tree:
        Extract
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: double
            outputColumnNames: _col0, _col1
            Group By Operator
              aggregations:
                    expr: sum(_col0)
              bucketGroup: false
              keys:
                    expr: _col0
                    type: string
                    expr: (_col1 + 1)
                    type: double
              mode: complete
              outputColumnNames: _col0, _col1, _col2
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col2
                      type: double
                      expr: _col1
                      type: double
                outputColumnNames: _col0, _col1, _col2
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select key, sum(key) as value from src group by key order by key, value
PREHOOK: type: QUERY
POSTHOOK: query: explain select key, sum(key) as value from src group by key order by key, value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL key)) value)) (TOK_GROUPBY (TOK_TABLE_OR_COL key)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL value)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
              outputColumnNames: key
              Reduce Output Operator
                key expressions:
                      expr: key
                      type: string
                      expr: _col1
                      type: double
                sort order: ++
                Map-reduce partition columns:
                      expr: key
                      type: string
                tag: -1
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(KEY._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
          mode: complete
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: double
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select src.key, sum(src.key) FROM src JOIN src1 ON src.key = src1.key group by src.key, src.value
PREHOOK: type: QUERY
POSTHOOK: query: explain select src.key, sum(src.key) FROM src JOIN src1 ON src.key = src1.key group by src.key, src.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src)) (TOK_TABREF (TOK_TABNAME src1)) (= (. (TOK_TABLE_OR_COL src) key) (. (TOK_TABLE_OR_COL src1) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL src) key)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src) key) (. (TOK_TABLE_OR_COL src) value))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        src 
          TableScan
            alias: src
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 0
              value expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
        src1 
          TableScan
            alias: src1
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 1
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 
          handleSkewJoin: false
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
            Reduce Output Operator
              key expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
              sort order: ++
              Map-reduce partition columns:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
              tag: -1
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(KEY._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
                expr: KEY._col1
                type: string
          mode: complete
          outputColumnNames: _col0, _col1, _col2
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col2
                  type: double
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select src.key, src.value FROM src JOIN src1 ON src.key = src1.key order by src.key, src.value
PREHOOK: type: QUERY
POSTHOOK: query: explain select src.key, src.value FROM src JOIN src1 ON src.key = src1.key order by src.key, src.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src)) (TOK_TABREF (TOK_TABNAME src1)) (= (. (TOK_TABLE_OR_COL src) key) (. (TOK_TABLE_OR_COL src1) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src) value)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        src 
          TableScan
            alias: src
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 0
              value expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
        src1 
          TableScan
            alias: src1
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 1
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 
          handleSkewJoin: false
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
            Reduce Output Operator
              key expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
              sort order: ++
              tag: -1
              value expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
      Reduce Operator Tree:
        Extract
          File Output Operator
            compressed: false
            GlobalTableId: 0
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain from (select key, value from src group by key, value) s select s.key group by s.key
PREHOOK: type: QUERY
POSTHOOK: query: explain from (select key, value from src group by key, value) s select s.key group by s.key
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL value))) (TOK_GROUPBY (TOK_TABLE_OR_COL key) (TOK_TABLE_OR_COL value)))) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) key))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL s) key))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        s:src 
          TableScan
            alias: src
            Select Operator
              expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
              outputColumnNames: key, value
              Reduce Output Operator
                key expressions:
                      expr: key
                      type: string
                      expr: value
                      type: string
                sort order: ++
                Map-reduce partition columns:
                      expr: key
                      type: string
                      expr: value
                      type: string
                tag: -1
      Reduce Operator Tree:
        Group By Operator
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: string
                expr: KEY._col1
                type: string
          mode: complete
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
            outputColumnNames: _col0
            Group By Operator
              bucketGroup: false
              keys:
                    expr: _col0
                    type: string
              mode: complete
              outputColumnNames: _col0
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                outputColumnNames: _col0
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select key, sum(key) from (select * from src distribute by key sort by key, value) Q1 group by key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, sum(key) from (select * from src distribute by key sort by key, value) Q1 group by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	0.0
10	10.0
100	200.0
103	206.0
104	208.0
105	105.0
11	11.0
111	111.0
113	226.0
114	114.0
116	116.0
118	236.0
119	357.0
12	24.0
120	240.0
125	250.0
126	126.0
128	384.0
129	258.0
131	131.0
133	133.0
134	268.0
136	136.0
137	274.0
138	552.0
143	143.0
145	145.0
146	292.0
149	298.0
15	30.0
150	150.0
152	304.0
153	153.0
155	155.0
156	156.0
157	157.0
158	158.0
160	160.0
162	162.0
163	163.0
164	328.0
165	330.0
166	166.0
167	501.0
168	168.0
169	676.0
17	17.0
170	170.0
172	344.0
174	348.0
175	350.0
176	352.0
177	177.0
178	178.0
179	358.0
18	36.0
180	180.0
181	181.0
183	183.0
186	186.0
187	561.0
189	189.0
19	19.0
190	190.0
191	382.0
192	192.0
193	579.0
194	194.0
195	390.0
196	196.0
197	394.0
199	597.0
2	2.0
20	20.0
200	400.0
201	201.0
202	202.0
203	406.0
205	410.0
207	414.0
208	624.0
209	418.0
213	426.0
214	214.0
216	432.0
217	434.0
218	218.0
219	438.0
221	442.0
222	222.0
223	446.0
224	448.0
226	226.0
228	228.0
229	458.0
230	1150.0
233	466.0
235	235.0
237	474.0
238	476.0
239	478.0
24	48.0
241	241.0
242	484.0
244	244.0
247	247.0
248	248.0
249	249.0
252	252.0
255	510.0
256	512.0
257	257.0
258	258.0
26	52.0
260	260.0
262	262.0
263	263.0
265	530.0
266	266.0
27	27.0
272	544.0
273	819.0
274	274.0
275	275.0
277	1108.0
278	556.0
28	28.0
280	560.0
281	562.0
282	564.0
283	283.0
284	284.0
285	285.0
286	286.0
287	287.0
288	576.0
289	289.0
291	291.0
292	292.0
296	296.0
298	894.0
30	30.0
302	302.0
305	305.0
306	306.0
307	614.0
308	308.0
309	618.0
310	310.0
311	933.0
315	315.0
316	948.0
317	634.0
318	954.0
321	642.0
322	644.0
323	323.0
325	650.0
327	981.0
33	33.0
331	662.0
332	332.0
333	666.0
335	335.0
336	336.0
338	338.0
339	339.0
34	34.0
341	341.0
342	684.0
344	688.0
345	345.0
348	1740.0
35	105.0
351	351.0
353	706.0
356	356.0
360	360.0
362	362.0
364	364.0
365	365.0
366	366.0
367	734.0
368	368.0
369	1107.0
37	74.0
373	373.0
374	374.0
375	375.0
377	377.0
378	378.0
379	379.0
382	764.0
384	1152.0
386	386.0
389	389.0
392	392.0
393	393.0
394	394.0
395	790.0
396	1188.0
397	794.0
399	798.0
4	4.0
400	400.0
401	2005.0
402	402.0
403	1209.0
404	808.0
406	1624.0
407	407.0
409	1227.0
41	41.0
411	411.0
413	826.0
414	828.0
417	1251.0
418	418.0
419	419.0
42	84.0
421	421.0
424	848.0
427	427.0
429	858.0
43	43.0
430	1290.0
431	1293.0
432	432.0
435	435.0
436	436.0
437	437.0
438	1314.0
439	878.0
44	44.0
443	443.0
444	444.0
446	446.0
448	448.0
449	449.0
452	452.0
453	453.0
454	1362.0
455	455.0
457	457.0
458	916.0
459	918.0
460	460.0
462	924.0
463	926.0
466	1398.0
467	467.0
468	1872.0
469	2345.0
47	47.0
470	470.0
472	472.0
475	475.0
477	477.0
478	956.0
479	479.0
480	1440.0
481	481.0
482	482.0
483	483.0
484	484.0
485	485.0
487	487.0
489	1956.0
490	490.0
491	491.0
492	984.0
493	493.0
494	494.0
495	495.0
496	496.0
497	497.0
498	1494.0
5	15.0
51	102.0
53	53.0
54	54.0
57	57.0
58	116.0
64	64.0
65	65.0
66	66.0
67	134.0
69	69.0
70	210.0
72	144.0
74	74.0
76	152.0
77	77.0
78	78.0
8	8.0
80	80.0
82	82.0
83	166.0
84	168.0
85	85.0
86	86.0
87	87.0
9	9.0
90	270.0
92	92.0
95	190.0
96	96.0
97	194.0
98	196.0
PREHOOK: query: select key, sum(key), lower(value) from (select * from src order by key) Q1 group by key, lower(value)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, sum(key), lower(value) from (select * from src order by key) Q1 group by key, lower(value)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	0.0	val_0
10	10.0	val_10
100	200.0	val_100
103	206.0	val_103
104	208.0	val_104
105	105.0	val_105
11	11.0	val_11
111	111.0	val_111
113	226.0	val_113
114	114.0	val_114
116	116.0	val_116
118	236.0	val_118
119	357.0	val_119
12	24.0	val_12
120	240.0	val_120
125	250.0	val_125
126	126.0	val_126
128	384.0	val_128
129	258.0	val_129
131	131.0	val_131
133	133.0	val_133
134	268.0	val_134
136	136.0	val_136
137	274.0	val_137
138	552.0	val_138
143	143.0	val_143
145	145.0	val_145
146	292.0	val_146
149	298.0	val_149
15	30.0	val_15
150	150.0	val_150
152	304.0	val_152
153	153.0	val_153
155	155.0	val_155
156	156.0	val_156
157	157.0	val_157
158	158.0	val_158
160	160.0	val_160
162	162.0	val_162
163	163.0	val_163
164	328.0	val_164
165	330.0	val_165
166	166.0	val_166
167	501.0	val_167
168	168.0	val_168
169	676.0	val_169
17	17.0	val_17
170	170.0	val_170
172	344.0	val_172
174	348.0	val_174
175	350.0	val_175
176	352.0	val_176
177	177.0	val_177
178	178.0	val_178
179	358.0	val_179
18	36.0	val_18
180	180.0	val_180
181	181.0	val_181
183	183.0	val_183
186	186.0	val_186
187	561.0	val_187
189	189.0	val_189
19	19.0	val_19
190	190.0	val_190
191	382.0	val_191
192	192.0	val_192
193	579.0	val_193
194	194.0	val_194
195	390.0	val_195
196	196.0	val_196
197	394.0	val_197
199	597.0	val_199
2	2.0	val_2
20	20.0	val_20
200	400.0	val_200
201	201.0	val_201
202	202.0	val_202
203	406.0	val_203
205	410.0	val_205
207	414.0	val_207
208	624.0	val_208
209	418.0	val_209
213	426.0	val_213
214	214.0	val_214
216	432.0	val_216
217	434.0	val_217
218	218.0	val_218
219	438.0	val_219
221	442.0	val_221
222	222.0	val_222
223	446.0	val_223
224	448.0	val_224
226	226.0	val_226
228	228.0	val_228
229	458.0	val_229
230	1150.0	val_230
233	466.0	val_233
235	235.0	val_235
237	474.0	val_237
238	476.0	val_238
239	478.0	val_239
24	48.0	val_24
241	241.0	val_241
242	484.0	val_242
244	244.0	val_244
247	247.0	val_247
248	248.0	val_248
249	249.0	val_249
252	252.0	val_252
255	510.0	val_255
256	512.0	val_256
257	257.0	val_257
258	258.0	val_258
26	52.0	val_26
260	260.0	val_260
262	262.0	val_262
263	263.0	val_263
265	530.0	val_265
266	266.0	val_266
27	27.0	val_27
272	544.0	val_272
273	819.0	val_273
274	274.0	val_274
275	275.0	val_275
277	1108.0	val_277
278	556.0	val_278
28	28.0	val_28
280	560.0	val_280
281	562.0	val_281
282	564.0	val_282
283	283.0	val_283
284	284.0	val_284
285	285.0	val_285
286	286.0	val_286
287	287.0	val_287
288	576.0	val_288
289	289.0	val_289
291	291.0	val_291
292	292.0	val_292
296	296.0	val_296
298	894.0	val_298
30	30.0	val_30
302	302.0	val_302
305	305.0	val_305
306	306.0	val_306
307	614.0	val_307
308	308.0	val_308
309	618.0	val_309
310	310.0	val_310
311	933.0	val_311
315	315.0	val_315
316	948.0	val_316
317	634.0	val_317
318	954.0	val_318
321	642.0	val_321
322	644.0	val_322
323	323.0	val_323
325	650.0	val_325
327	981.0	val_327
33	33.0	val_33
331	662.0	val_331
332	332.0	val_332
333	666.0	val_333
335	335.0	val_335
336	336.0	val_336
338	338.0	val_338
339	339.0	val_339
34	34.0	val_34
341	341.0	val_341
342	684.0	val_342
344	688.0	val_344
345	345.0	val_345
348	1740.0	val_348
35	105.0	val_35
351	351.0	val_351
353	706.0	val_353
356	356.0	val_356
360	360.0	val_360
362	362.0	val_362
364	364.0	val_364
365	365.0	val_365
366	366.0	val_366
367	734.0	val_367
368	368.0	val_368
369	1107.0	val_369
37	74.0	val_37
373	373.0	val_373
374	374.0	val_374
375	375.0	val_375
377	377.0	val_377
378	378.0	val_378
379	379.0	val_379
382	764.0	val_382
384	1152.0	val_384
386	386.0	val_386
389	389.0	val_389
392	392.0	val_392
393	393.0	val_393
394	394.0	val_394
395	790.0	val_395
396	1188.0	val_396
397	794.0	val_397
399	798.0	val_399
4	4.0	val_4
400	400.0	val_400
401	2005.0	val_401
402	402.0	val_402
403	1209.0	val_403
404	808.0	val_404
406	1624.0	val_406
407	407.0	val_407
409	1227.0	val_409
41	41.0	val_41
411	411.0	val_411
413	826.0	val_413
414	828.0	val_414
417	1251.0	val_417
418	418.0	val_418
419	419.0	val_419
42	84.0	val_42
421	421.0	val_421
424	848.0	val_424
427	427.0	val_427
429	858.0	val_429
43	43.0	val_43
430	1290.0	val_430
431	1293.0	val_431
432	432.0	val_432
435	435.0	val_435
436	436.0	val_436
437	437.0	val_437
438	1314.0	val_438
439	878.0	val_439
44	44.0	val_44
443	443.0	val_443
444	444.0	val_444
446	446.0	val_446
448	448.0	val_448
449	449.0	val_449
452	452.0	val_452
453	453.0	val_453
454	1362.0	val_454
455	455.0	val_455
457	457.0	val_457
458	916.0	val_458
459	918.0	val_459
460	460.0	val_460
462	924.0	val_462
463	926.0	val_463
466	1398.0	val_466
467	467.0	val_467
468	1872.0	val_468
469	2345.0	val_469
47	47.0	val_47
470	470.0	val_470
472	472.0	val_472
475	475.0	val_475
477	477.0	val_477
478	956.0	val_478
479	479.0	val_479
480	1440.0	val_480
481	481.0	val_481
482	482.0	val_482
483	483.0	val_483
484	484.0	val_484
485	485.0	val_485
487	487.0	val_487
489	1956.0	val_489
490	490.0	val_490
491	491.0	val_491
492	984.0	val_492
493	493.0	val_493
494	494.0	val_494
495	495.0	val_495
496	496.0	val_496
497	497.0	val_497
498	1494.0	val_498
5	15.0	val_5
51	102.0	val_51
53	53.0	val_53
54	54.0	val_54
57	57.0	val_57
58	116.0	val_58
64	64.0	val_64
65	65.0	val_65
66	66.0	val_66
67	134.0	val_67
69	69.0	val_69
70	210.0	val_70
72	144.0	val_72
74	74.0	val_74
76	152.0	val_76
77	77.0	val_77
78	78.0	val_78
8	8.0	val_8
80	80.0	val_80
82	82.0	val_82
83	166.0	val_83
84	168.0	val_84
85	85.0	val_85
86	86.0	val_86
87	87.0	val_87
9	9.0	val_9
90	270.0	val_90
92	92.0	val_92
95	190.0	val_95
96	96.0	val_96
97	194.0	val_97
98	196.0	val_98
PREHOOK: query: select key, sum(key), (X + 1) from (select key, (value + 1) as X from src order by key) Q1 group by key, (X + 1)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, sum(key), (X + 1) from (select key, (value + 1) as X from src order by key) Q1 group by key, (X + 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	0.0	NULL
10	10.0	NULL
100	200.0	NULL
103	206.0	NULL
104	208.0	NULL
105	105.0	NULL
11	11.0	NULL
111	111.0	NULL
113	226.0	NULL
114	114.0	NULL
116	116.0	NULL
118	236.0	NULL
119	357.0	NULL
12	24.0	NULL
120	240.0	NULL
125	250.0	NULL
126	126.0	NULL
128	384.0	NULL
129	258.0	NULL
131	131.0	NULL
133	133.0	NULL
134	268.0	NULL
136	136.0	NULL
137	274.0	NULL
138	552.0	NULL
143	143.0	NULL
145	145.0	NULL
146	292.0	NULL
149	298.0	NULL
15	30.0	NULL
150	150.0	NULL
152	304.0	NULL
153	153.0	NULL
155	155.0	NULL
156	156.0	NULL
157	157.0	NULL
158	158.0	NULL
160	160.0	NULL
162	162.0	NULL
163	163.0	NULL
164	328.0	NULL
165	330.0	NULL
166	166.0	NULL
167	501.0	NULL
168	168.0	NULL
169	676.0	NULL
17	17.0	NULL
170	170.0	NULL
172	344.0	NULL
174	348.0	NULL
175	350.0	NULL
176	352.0	NULL
177	177.0	NULL
178	178.0	NULL
179	358.0	NULL
18	36.0	NULL
180	180.0	NULL
181	181.0	NULL
183	183.0	NULL
186	186.0	NULL
187	561.0	NULL
189	189.0	NULL
19	19.0	NULL
190	190.0	NULL
191	382.0	NULL
192	192.0	NULL
193	579.0	NULL
194	194.0	NULL
195	390.0	NULL
196	196.0	NULL
197	394.0	NULL
199	597.0	NULL
2	2.0	NULL
20	20.0	NULL
200	400.0	NULL
201	201.0	NULL
202	202.0	NULL
203	406.0	NULL
205	410.0	NULL
207	414.0	NULL
208	624.0	NULL
209	418.0	NULL
213	426.0	NULL
214	214.0	NULL
216	432.0	NULL
217	434.0	NULL
218	218.0	NULL
219	438.0	NULL
221	442.0	NULL
222	222.0	NULL
223	446.0	NULL
224	448.0	NULL
226	226.0	NULL
228	228.0	NULL
229	458.0	NULL
230	1150.0	NULL
233	466.0	NULL
235	235.0	NULL
237	474.0	NULL
238	476.0	NULL
239	478.0	NULL
24	48.0	NULL
241	241.0	NULL
242	484.0	NULL
244	244.0	NULL
247	247.0	NULL
248	248.0	NULL
249	249.0	NULL
252	252.0	NULL
255	510.0	NULL
256	512.0	NULL
257	257.0	NULL
258	258.0	NULL
26	52.0	NULL
260	260.0	NULL
262	262.0	NULL
263	263.0	NULL
265	530.0	NULL
266	266.0	NULL
27	27.0	NULL
272	544.0	NULL
273	819.0	NULL
274	274.0	NULL
275	275.0	NULL
277	1108.0	NULL
278	556.0	NULL
28	28.0	NULL
280	560.0	NULL
281	562.0	NULL
282	564.0	NULL
283	283.0	NULL
284	284.0	NULL
285	285.0	NULL
286	286.0	NULL
287	287.0	NULL
288	576.0	NULL
289	289.0	NULL
291	291.0	NULL
292	292.0	NULL
296	296.0	NULL
298	894.0	NULL
30	30.0	NULL
302	302.0	NULL
305	305.0	NULL
306	306.0	NULL
307	614.0	NULL
308	308.0	NULL
309	618.0	NULL
310	310.0	NULL
311	933.0	NULL
315	315.0	NULL
316	948.0	NULL
317	634.0	NULL
318	954.0	NULL
321	642.0	NULL
322	644.0	NULL
323	323.0	NULL
325	650.0	NULL
327	981.0	NULL
33	33.0	NULL
331	662.0	NULL
332	332.0	NULL
333	666.0	NULL
335	335.0	NULL
336	336.0	NULL
338	338.0	NULL
339	339.0	NULL
34	34.0	NULL
341	341.0	NULL
342	684.0	NULL
344	688.0	NULL
345	345.0	NULL
348	1740.0	NULL
35	105.0	NULL
351	351.0	NULL
353	706.0	NULL
356	356.0	NULL
360	360.0	NULL
362	362.0	NULL
364	364.0	NULL
365	365.0	NULL
366	366.0	NULL
367	734.0	NULL
368	368.0	NULL
369	1107.0	NULL
37	74.0	NULL
373	373.0	NULL
374	374.0	NULL
375	375.0	NULL
377	377.0	NULL
378	378.0	NULL
379	379.0	NULL
382	764.0	NULL
384	1152.0	NULL
386	386.0	NULL
389	389.0	NULL
392	392.0	NULL
393	393.0	NULL
394	394.0	NULL
395	790.0	NULL
396	1188.0	NULL
397	794.0	NULL
399	798.0	NULL
4	4.0	NULL
400	400.0	NULL
401	2005.0	NULL
402	402.0	NULL
403	1209.0	NULL
404	808.0	NULL
406	1624.0	NULL
407	407.0	NULL
409	1227.0	NULL
41	41.0	NULL
411	411.0	NULL
413	826.0	NULL
414	828.0	NULL
417	1251.0	NULL
418	418.0	NULL
419	419.0	NULL
42	84.0	NULL
421	421.0	NULL
424	848.0	NULL
427	427.0	NULL
429	858.0	NULL
43	43.0	NULL
430	1290.0	NULL
431	1293.0	NULL
432	432.0	NULL
435	435.0	NULL
436	436.0	NULL
437	437.0	NULL
438	1314.0	NULL
439	878.0	NULL
44	44.0	NULL
443	443.0	NULL
444	444.0	NULL
446	446.0	NULL
448	448.0	NULL
449	449.0	NULL
452	452.0	NULL
453	453.0	NULL
454	1362.0	NULL
455	455.0	NULL
457	457.0	NULL
458	916.0	NULL
459	918.0	NULL
460	460.0	NULL
462	924.0	NULL
463	926.0	NULL
466	1398.0	NULL
467	467.0	NULL
468	1872.0	NULL
469	2345.0	NULL
47	47.0	NULL
470	470.0	NULL
472	472.0	NULL
475	475.0	NULL
477	477.0	NULL
478	956.0	NULL
479	479.0	NULL
480	1440.0	NULL
481	481.0	NULL
482	482.0	NULL
483	483.0	NULL
484	484.0	NULL
485	485.0	NULL
487	487.0	NULL
489	1956.0	NULL
490	490.0	NULL
491	491.0	NULL
492	984.0	NULL
493	493.0	NULL
494	494.0	NULL
495	495.0	NULL
496	496.0	NULL
497	497.0	NULL
498	1494.0	NULL
5	15.0	NULL
51	102.0	NULL
53	53.0	NULL
54	54.0	NULL
57	57.0	NULL
58	116.0	NULL
64	64.0	NULL
65	65.0	NULL
66	66.0	NULL
67	134.0	NULL
69	69.0	NULL
70	210.0	NULL
72	144.0	NULL
74	74.0	NULL
76	152.0	NULL
77	77.0	NULL
78	78.0	NULL
8	8.0	NULL
80	80.0	NULL
82	82.0	NULL
83	166.0	NULL
84	168.0	NULL
85	85.0	NULL
86	86.0	NULL
87	87.0	NULL
9	9.0	NULL
90	270.0	NULL
92	92.0	NULL
95	190.0	NULL
96	96.0	NULL
97	194.0	NULL
98	196.0	NULL
PREHOOK: query: select key, sum(key) as value from src group by key order by key, value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select key, sum(key) as value from src group by key order by key, value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0	0.0
10	10.0
100	200.0
103	206.0
104	208.0
105	105.0
11	11.0
111	111.0
113	226.0
114	114.0
116	116.0
118	236.0
119	357.0
12	24.0
120	240.0
125	250.0
126	126.0
128	384.0
129	258.0
131	131.0
133	133.0
134	268.0
136	136.0
137	274.0
138	552.0
143	143.0
145	145.0
146	292.0
149	298.0
15	30.0
150	150.0
152	304.0
153	153.0
155	155.0
156	156.0
157	157.0
158	158.0
160	160.0
162	162.0
163	163.0
164	328.0
165	330.0
166	166.0
167	501.0
168	168.0
169	676.0
17	17.0
170	170.0
172	344.0
174	348.0
175	350.0
176	352.0
177	177.0
178	178.0
179	358.0
18	36.0
180	180.0
181	181.0
183	183.0
186	186.0
187	561.0
189	189.0
19	19.0
190	190.0
191	382.0
192	192.0
193	579.0
194	194.0
195	390.0
196	196.0
197	394.0
199	597.0
2	2.0
20	20.0
200	400.0
201	201.0
202	202.0
203	406.0
205	410.0
207	414.0
208	624.0
209	418.0
213	426.0
214	214.0
216	432.0
217	434.0
218	218.0
219	438.0
221	442.0
222	222.0
223	446.0
224	448.0
226	226.0
228	228.0
229	458.0
230	1150.0
233	466.0
235	235.0
237	474.0
238	476.0
239	478.0
24	48.0
241	241.0
242	484.0
244	244.0
247	247.0
248	248.0
249	249.0
252	252.0
255	510.0
256	512.0
257	257.0
258	258.0
26	52.0
260	260.0
262	262.0
263	263.0
265	530.0
266	266.0
27	27.0
272	544.0
273	819.0
274	274.0
275	275.0
277	1108.0
278	556.0
28	28.0
280	560.0
281	562.0
282	564.0
283	283.0
284	284.0
285	285.0
286	286.0
287	287.0
288	576.0
289	289.0
291	291.0
292	292.0
296	296.0
298	894.0
30	30.0
302	302.0
305	305.0
306	306.0
307	614.0
308	308.0
309	618.0
310	310.0
311	933.0
315	315.0
316	948.0
317	634.0
318	954.0
321	642.0
322	644.0
323	323.0
325	650.0
327	981.0
33	33.0
331	662.0
332	332.0
333	666.0
335	335.0
336	336.0
338	338.0
339	339.0
34	34.0
341	341.0
342	684.0
344	688.0
345	345.0
348	1740.0
35	105.0
351	351.0
353	706.0
356	356.0
360	360.0
362	362.0
364	364.0
365	365.0
366	366.0
367	734.0
368	368.0
369	1107.0
37	74.0
373	373.0
374	374.0
375	375.0
377	377.0
378	378.0
379	379.0
382	764.0
384	1152.0
386	386.0
389	389.0
392	392.0
393	393.0
394	394.0
395	790.0
396	1188.0
397	794.0
399	798.0
4	4.0
400	400.0
401	2005.0
402	402.0
403	1209.0
404	808.0
406	1624.0
407	407.0
409	1227.0
41	41.0
411	411.0
413	826.0
414	828.0
417	1251.0
418	418.0
419	419.0
42	84.0
421	421.0
424	848.0
427	427.0
429	858.0
43	43.0
430	1290.0
431	1293.0
432	432.0
435	435.0
436	436.0
437	437.0
438	1314.0
439	878.0
44	44.0
443	443.0
444	444.0
446	446.0
448	448.0
449	449.0
452	452.0
453	453.0
454	1362.0
455	455.0
457	457.0
458	916.0
459	918.0
460	460.0
462	924.0
463	926.0
466	1398.0
467	467.0
468	1872.0
469	2345.0
47	47.0
470	470.0
472	472.0
475	475.0
477	477.0
478	956.0
479	479.0
480	1440.0
481	481.0
482	482.0
483	483.0
484	484.0
485	485.0
487	487.0
489	1956.0
490	490.0
491	491.0
492	984.0
493	493.0
494	494.0
495	495.0
496	496.0
497	497.0
498	1494.0
5	15.0
51	102.0
53	53.0
54	54.0
57	57.0
58	116.0
64	64.0
65	65.0
66	66.0
67	134.0
69	69.0
70	210.0
72	144.0
74	74.0
76	152.0
77	77.0
78	78.0
8	8.0
80	80.0
82	82.0
83	166.0
84	168.0
85	85.0
86	86.0
87	87.0
9	9.0
90	270.0
92	92.0
95	190.0
96	96.0
97	194.0
98	196.0
PREHOOK: query: select src.key, sum(src.key) FROM src JOIN src1 ON src.key = src1.key group by src.key, src.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
#### A masked pattern was here ####
POSTHOOK: query: select src.key, sum(src.key) FROM src JOIN src1 ON src.key = src1.key group by src.key, src.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
#### A masked pattern was here ####
128	384.0
146	292.0
150	150.0
213	426.0
224	448.0
238	476.0
255	510.0
273	819.0
278	556.0
311	933.0
369	1107.0
401	2005.0
406	1624.0
66	66.0
98	196.0
PREHOOK: query: select src.key, src.value FROM src JOIN src1 ON src.key = src1.key order by src.key, src.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
#### A masked pattern was here ####
POSTHOOK: query: select src.key, src.value FROM src JOIN src1 ON src.key = src1.key order by src.key, src.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
#### A masked pattern was here ####
128	val_128
128	val_128
128	val_128
146	val_146
146	val_146
150	val_150
213	val_213
213	val_213
224	val_224
224	val_224
238	val_238
238	val_238
255	val_255
255	val_255
273	val_273
273	val_273
273	val_273
278	val_278
278	val_278
311	val_311
311	val_311
311	val_311
369	val_369
369	val_369
369	val_369
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
406	val_406
406	val_406
406	val_406
406	val_406
66	val_66
98	val_98
98	val_98
PREHOOK: query: from (select key, value from src group by key, value) s select s.key group by s.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: from (select key, value from src group by key, value) s select s.key group by s.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0
10
100
103
104
105
11
111
113
114
116
118
119
12
120
125
126
128
129
131
133
134
136
137
138
143
145
146
149
15
150
152
153
155
156
157
158
160
162
163
164
165
166
167
168
169
17
170
172
174
175
176
177
178
179
18
180
181
183
186
187
189
19
190
191
192
193
194
195
196
197
199
2
20
200
201
202
203
205
207
208
209
213
214
216
217
218
219
221
222
223
224
226
228
229
230
233
235
237
238
239
24
241
242
244
247
248
249
252
255
256
257
258
26
260
262
263
265
266
27
272
273
274
275
277
278
28
280
281
282
283
284
285
286
287
288
289
291
292
296
298
30
302
305
306
307
308
309
310
311
315
316
317
318
321
322
323
325
327
33
331
332
333
335
336
338
339
34
341
342
344
345
348
35
351
353
356
360
362
364
365
366
367
368
369
37
373
374
375
377
378
379
382
384
386
389
392
393
394
395
396
397
399
4
400
401
402
403
404
406
407
409
41
411
413
414
417
418
419
42
421
424
427
429
43
430
431
432
435
436
437
438
439
44
443
444
446
448
449
452
453
454
455
457
458
459
460
462
463
466
467
468
469
47
470
472
475
477
478
479
480
481
482
483
484
485
487
489
490
491
492
493
494
495
496
497
498
5
51
53
54
57
58
64
65
66
67
69
70
72
74
76
77
78
8
80
82
83
84
85
86
87
9
90
92
95
96
97
98
