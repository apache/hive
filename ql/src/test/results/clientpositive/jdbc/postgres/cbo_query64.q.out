CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
  JdbcProject(sr_item_sk=[$2], sr_ticket_number=[$9])
    JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2))])
  JdbcProject(s_store_sk=[$0], s_store_name=[$5], s_zip=[$25])
    JdbcHiveTableScan(table=[[default, store]], table:alias=[store])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($8), IS NOT NULL($0), IS NOT NULL($6), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($7), IS NOT NULL($4), IS NOT NULL($5))])
  JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_customer_sk=[$3], ss_cdemo_sk=[$4], ss_hdemo_sk=[$5], ss_addr_sk=[$6], ss_store_sk=[$7], ss_promo_sk=[$8], ss_ticket_number=[$9], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19])
    JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])

CTE Suggestion:
JdbcFilter(condition=[IS NOT NULL($0)])
  JdbcProject(ca_address_sk=[$0], ca_street_number=[$2], ca_street_name=[$3], ca_city=[$6], ca_zip=[$9])
    JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[ad1])

CTE Suggestion:
JdbcFilter(condition=[IS NOT NULL($0)])
  JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$2])
    JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[cd1])

CTE Suggestion:
JdbcFilter(condition=[IS NOT NULL($0)])
  JdbcProject(p_promo_sk=[$0])
    JdbcHiveTableScan(table=[[default, promotion]], table:alias=[promotion])

CTE Suggestion:
JdbcJoin(condition=[=($1, $2)], joinType=[inner])
  JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
    JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
      JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[hd1])
  JdbcFilter(condition=[IS NOT NULL($0)])
    JdbcProject(ib_income_band_sk=[$0])
      JdbcHiveTableScan(table=[[default, income_band]], table:alias=[ib1])

CTE Suggestion:
JdbcJoin(condition=[=($3, $15)], joinType=[inner])
  JdbcJoin(condition=[=($2, $12)], joinType=[inner])
    JdbcJoin(condition=[=($4, $10)], joinType=[inner])
      JdbcJoin(condition=[=($5, $8)], joinType=[inner])
        JdbcJoin(condition=[=($1, $6)], joinType=[inner])
          JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($5), IS NOT NULL($4), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3))])
            JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$2], c_current_hdemo_sk=[$3], c_current_addr_sk=[$4], c_first_shipto_date_sk=[$5], c_first_sales_date_sk=[$6])
              JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
          JdbcFilter(condition=[IS NOT NULL($0)])
            JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$2])
              JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[cd2])
        JdbcFilter(condition=[IS NOT NULL($0)])
          JdbcProject(d_date_sk=[$0], d_year=[$6])
            JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d2])
      JdbcFilter(condition=[IS NOT NULL($0)])
        JdbcProject(d_date_sk=[$0], d_year=[$6])
          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d3])
    JdbcJoin(condition=[=($1, $2)], joinType=[inner])
      JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
        JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
          JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[hd2])
      JdbcFilter(condition=[IS NOT NULL($0)])
        JdbcProject(ib_income_band_sk=[$0])
          JdbcHiveTableScan(table=[[default, income_band]], table:alias=[ib2])
  JdbcFilter(condition=[IS NOT NULL($0)])
    JdbcProject(ca_address_sk=[$0], ca_street_number=[$2], ca_street_name=[$3], ca_city=[$6], ca_zip=[$9])
      JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[ad2])

CTE Suggestion:
JdbcProject($f0=[$0])
  JdbcFilter(condition=[>($1, *(2:DECIMAL(10, 0), $2))])
    JdbcAggregate(group=[{0}], agg#0=[sum($2)], agg#1=[sum($5)])
      JdbcJoin(condition=[AND(=($0, $3), =($1, $4))], joinType=[inner])
        JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
          JdbcProject(cs_item_sk=[$15], cs_order_number=[$17], cs_ext_list_price=[$25])
            JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
        JdbcProject(cr_item_sk=[$0], cr_order_number=[$1], +=[+(+($2, $3), $4)])
          JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
            JdbcProject(cr_item_sk=[$2], cr_order_number=[$16], cr_refunded_cash=[$23], cr_reversed_charge=[$24], cr_store_credit=[$25])
              JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])

CTE Suggestion:
JdbcProject(i_item_sk=[$0], i_product_name=[$3])
  JdbcFilter(condition=[AND(IN($2, _UTF-16LE'maroon':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'burnished':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'dim':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'steel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'navajo':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'chocolate':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), BETWEEN(false, $1, 36:DECIMAL(12, 2), 45:DECIMAL(12, 2)), IS NOT NULL($0))])
    JdbcProject(i_item_sk=[$0], i_current_price=[$5], i_color=[$17], i_product_name=[$21])
      JdbcHiveTableScan(table=[[default, item]], table:alias=[item])

PREHOOK: query: explain cbo
with cs_ui as
 (select cs_item_sk
        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund
  from catalog_sales
      ,catalog_returns
  where cs_item_sk = cr_item_sk
    and cs_order_number = cr_order_number
  group by cs_item_sk
  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)),
cross_sales as
 (select i_product_name product_name
     ,i_item_sk item_sk
     ,s_store_name store_name
     ,s_zip store_zip
     ,ad1.ca_street_number b_street_number
     ,ad1.ca_street_name b_streen_name
     ,ad1.ca_city b_city
     ,ad1.ca_zip b_zip
     ,ad2.ca_street_number c_street_number
     ,ad2.ca_street_name c_street_name
     ,ad2.ca_city c_city
     ,ad2.ca_zip c_zip
     ,d1.d_year as syear
     ,d2.d_year as fsyear
     ,d3.d_year s2year
     ,count(*) cnt
     ,sum(ss_wholesale_cost) s1
     ,sum(ss_list_price) s2
     ,sum(ss_coupon_amt) s3
  FROM   store_sales
        ,store_returns
        ,cs_ui
        ,date_dim d1
        ,date_dim d2
        ,date_dim d3
        ,store
        ,customer
        ,customer_demographics cd1
        ,customer_demographics cd2
        ,promotion
        ,household_demographics hd1
        ,household_demographics hd2
        ,customer_address ad1
        ,customer_address ad2
        ,income_band ib1
        ,income_band ib2
        ,item
  WHERE  ss_store_sk = s_store_sk AND
         ss_sold_date_sk = d1.d_date_sk AND
         ss_customer_sk = c_customer_sk AND
         ss_cdemo_sk= cd1.cd_demo_sk AND
         ss_hdemo_sk = hd1.hd_demo_sk AND
         ss_addr_sk = ad1.ca_address_sk and
         ss_item_sk = i_item_sk and
         ss_item_sk = sr_item_sk and
         ss_ticket_number = sr_ticket_number and
         ss_item_sk = cs_ui.cs_item_sk and
         c_current_cdemo_sk = cd2.cd_demo_sk AND
         c_current_hdemo_sk = hd2.hd_demo_sk AND
         c_current_addr_sk = ad2.ca_address_sk and
         c_first_sales_date_sk = d2.d_date_sk and
         c_first_shipto_date_sk = d3.d_date_sk and
         ss_promo_sk = p_promo_sk and
         hd1.hd_income_band_sk = ib1.ib_income_band_sk and
         hd2.hd_income_band_sk = ib2.ib_income_band_sk and
         cd1.cd_marital_status <> cd2.cd_marital_status and
         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and
         i_current_price between 35 and 35 + 10 and
         i_current_price between 35 + 1 and 35 + 15
group by i_product_name
       ,i_item_sk
       ,s_store_name
       ,s_zip
       ,ad1.ca_street_number
       ,ad1.ca_street_name
       ,ad1.ca_city
       ,ad1.ca_zip
       ,ad2.ca_street_number
       ,ad2.ca_street_name
       ,ad2.ca_city
       ,ad2.ca_zip
       ,d1.d_year
       ,d2.d_year
       ,d3.d_year
)
select cs1.product_name
     ,cs1.store_name
     ,cs1.store_zip
     ,cs1.b_street_number
     ,cs1.b_streen_name
     ,cs1.b_city
     ,cs1.b_zip
     ,cs1.c_street_number
     ,cs1.c_street_name
     ,cs1.c_city
     ,cs1.c_zip
     ,cs1.syear
     ,cs1.cnt
     ,cs1.s1
     ,cs1.s2
     ,cs1.s3
     ,cs2.s1
     ,cs2.s2
     ,cs2.s3
     ,cs2.syear
     ,cs2.cnt
from cross_sales cs1,cross_sales cs2
where cs1.item_sk=cs2.item_sk and
     cs1.syear = 2000 and
     cs2.syear = 2000 + 1 and
     cs2.cnt <= cs1.cnt and
     cs1.store_name = cs2.store_name and
     cs1.store_zip = cs2.store_zip
order by cs1.product_name
       ,cs1.store_name
       ,cs2.cnt
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@income_band
PREHOOK: Input: default@item
PREHOOK: Input: default@promotion
PREHOOK: Input: default@store
PREHOOK: Input: default@store_returns
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
with cs_ui as
 (select cs_item_sk
        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund
  from catalog_sales
      ,catalog_returns
  where cs_item_sk = cr_item_sk
    and cs_order_number = cr_order_number
  group by cs_item_sk
  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)),
cross_sales as
 (select i_product_name product_name
     ,i_item_sk item_sk
     ,s_store_name store_name
     ,s_zip store_zip
     ,ad1.ca_street_number b_street_number
     ,ad1.ca_street_name b_streen_name
     ,ad1.ca_city b_city
     ,ad1.ca_zip b_zip
     ,ad2.ca_street_number c_street_number
     ,ad2.ca_street_name c_street_name
     ,ad2.ca_city c_city
     ,ad2.ca_zip c_zip
     ,d1.d_year as syear
     ,d2.d_year as fsyear
     ,d3.d_year s2year
     ,count(*) cnt
     ,sum(ss_wholesale_cost) s1
     ,sum(ss_list_price) s2
     ,sum(ss_coupon_amt) s3
  FROM   store_sales
        ,store_returns
        ,cs_ui
        ,date_dim d1
        ,date_dim d2
        ,date_dim d3
        ,store
        ,customer
        ,customer_demographics cd1
        ,customer_demographics cd2
        ,promotion
        ,household_demographics hd1
        ,household_demographics hd2
        ,customer_address ad1
        ,customer_address ad2
        ,income_band ib1
        ,income_band ib2
        ,item
  WHERE  ss_store_sk = s_store_sk AND
         ss_sold_date_sk = d1.d_date_sk AND
         ss_customer_sk = c_customer_sk AND
         ss_cdemo_sk= cd1.cd_demo_sk AND
         ss_hdemo_sk = hd1.hd_demo_sk AND
         ss_addr_sk = ad1.ca_address_sk and
         ss_item_sk = i_item_sk and
         ss_item_sk = sr_item_sk and
         ss_ticket_number = sr_ticket_number and
         ss_item_sk = cs_ui.cs_item_sk and
         c_current_cdemo_sk = cd2.cd_demo_sk AND
         c_current_hdemo_sk = hd2.hd_demo_sk AND
         c_current_addr_sk = ad2.ca_address_sk and
         c_first_sales_date_sk = d2.d_date_sk and
         c_first_shipto_date_sk = d3.d_date_sk and
         ss_promo_sk = p_promo_sk and
         hd1.hd_income_band_sk = ib1.ib_income_band_sk and
         hd2.hd_income_band_sk = ib2.ib_income_band_sk and
         cd1.cd_marital_status <> cd2.cd_marital_status and
         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and
         i_current_price between 35 and 35 + 10 and
         i_current_price between 35 + 1 and 35 + 15
group by i_product_name
       ,i_item_sk
       ,s_store_name
       ,s_zip
       ,ad1.ca_street_number
       ,ad1.ca_street_name
       ,ad1.ca_city
       ,ad1.ca_zip
       ,ad2.ca_street_number
       ,ad2.ca_street_name
       ,ad2.ca_city
       ,ad2.ca_zip
       ,d1.d_year
       ,d2.d_year
       ,d3.d_year
)
select cs1.product_name
     ,cs1.store_name
     ,cs1.store_zip
     ,cs1.b_street_number
     ,cs1.b_streen_name
     ,cs1.b_city
     ,cs1.b_zip
     ,cs1.c_street_number
     ,cs1.c_street_name
     ,cs1.c_city
     ,cs1.c_zip
     ,cs1.syear
     ,cs1.cnt
     ,cs1.s1
     ,cs1.s2
     ,cs1.s3
     ,cs2.s1
     ,cs2.s2
     ,cs2.s3
     ,cs2.syear
     ,cs2.cnt
from cross_sales cs1,cross_sales cs2
where cs1.item_sk=cs2.item_sk and
     cs1.syear = 2000 and
     cs2.syear = 2000 + 1 and
     cs2.cnt <= cs1.cnt and
     cs1.store_name = cs2.store_name and
     cs1.store_zip = cs2.store_zip
order by cs1.product_name
       ,cs1.store_name
       ,cs2.cnt
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@income_band
POSTHOOK: Input: default@item
POSTHOOK: Input: default@promotion
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_returns
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcProject(product_name=[$0], store_name=[$1], store_zip=[$2], b_street_number=[$3], b_streen_name=[$4], b_city=[$5], b_zip=[$6], c_street_number=[$7], c_street_name=[$8], c_city=[$9], c_zip=[$10], syear=[CAST(2000):INTEGER], cnt=[$11], s1=[$12], s2=[$13], s3=[$14], s11=[$15], s21=[$16], s31=[$17], syear1=[CAST(2001):INTEGER], cnt1=[$18])
    JdbcSort(sort0=[$0], sort1=[$1], sort2=[$18], dir0=[ASC], dir1=[ASC], dir2=[ASC])
      JdbcProject(product_name=[$0], store_name=[$2], store_zip=[$3], b_street_number=[$4], b_streen_name=[$5], b_city=[$6], b_zip=[$7], c_street_number=[$8], c_street_name=[$9], c_city=[$10], c_zip=[$11], cnt=[$12], s1=[$13], s2=[$14], s3=[$15], s11=[$20], s21=[$21], s31=[$22], cnt1=[$19])
        JdbcJoin(condition=[AND(=($1, $16), <=($19, $12), =($2, $17), =($3, $18))], joinType=[inner])
          JdbcProject($f0=[$0], $f1=[$1], $f2=[$2], $f3=[$3], $f4=[$4], $f5=[$5], $f6=[$6], $f7=[$7], $f8=[$8], $f9=[$9], $f10=[$10], $f11=[$11], $f15=[$14], $f16=[$15], $f17=[$16], $f18=[$17])
            JdbcFilter(condition=[IS NOT NULL($14)])
              JdbcProject(i_product_name=[$1], i_item_sk=[$0], s_store_name=[$2], s_zip=[$3], ca_street_number=[$4], ca_street_name=[$5], ca_city=[$6], ca_zip=[$7], ca_street_number0=[$10], ca_street_name0=[$11], ca_city0=[$12], ca_zip0=[$13], d_year=[$8], d_year0=[$9], $f14=[$14], $f15=[$15], $f16=[$16], $f17=[$17])
                JdbcAggregate(group=[{17, 18, 23, 24, 26, 27, 28, 29, 39, 41, 46, 47, 48, 49}], agg#0=[count()], agg#1=[sum($9)], agg#2=[sum($10)], agg#3=[sum($11)])
                  JdbcJoin(condition=[AND(<>($51, $37), =($3, $50))], joinType=[inner])
                    JdbcJoin(condition=[=($2, $30)], joinType=[inner])
                      JdbcJoin(condition=[=($5, $25)], joinType=[inner])
                        JdbcJoin(condition=[=($6, $22)], joinType=[inner])
                          JdbcJoin(condition=[=($4, $19)], joinType=[inner])
                            JdbcJoin(condition=[=($1, $17)], joinType=[inner])
                              JdbcJoin(condition=[=($1, $16)], joinType=[inner])
                                JdbcJoin(condition=[AND(=($1, $14), =($8, $15))], joinType=[inner])
                                  JdbcJoin(condition=[=($7, $13)], joinType=[inner])
                                    JdbcJoin(condition=[=($0, $12)], joinType=[inner])
                                      JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_customer_sk=[$2], ss_cdemo_sk=[$3], ss_hdemo_sk=[$4], ss_addr_sk=[$5], ss_store_sk=[$6], ss_promo_sk=[$7], ss_ticket_number=[$8], ss_wholesale_cost=[$9], ss_list_price=[$10], ss_coupon_amt=[$11])
                                        JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($8), IS NOT NULL($0), IS NOT NULL($6), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($7), IS NOT NULL($4), IS NOT NULL($5))])
                                          JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_customer_sk=[$3], ss_cdemo_sk=[$4], ss_hdemo_sk=[$5], ss_addr_sk=[$6], ss_store_sk=[$7], ss_promo_sk=[$8], ss_ticket_number=[$9], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19])
                                            JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                                      JdbcProject(d_date_sk=[$0])
                                        JdbcFilter(condition=[AND(=($1, 2000), IS NOT NULL($0))])
                                          JdbcProject(d_date_sk=[$0], d_year=[$6])
                                            JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d1])
                                    JdbcProject(p_promo_sk=[$0])
                                      JdbcFilter(condition=[IS NOT NULL($0)])
                                        JdbcProject(p_promo_sk=[$0])
                                          JdbcHiveTableScan(table=[[default, promotion]], table:alias=[promotion])
                                  JdbcProject(sr_item_sk=[$0], sr_ticket_number=[$1])
                                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                      JdbcProject(sr_item_sk=[$2], sr_ticket_number=[$9])
                                        JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                                JdbcProject($f0=[$0])
                                  JdbcFilter(condition=[>($1, *(2:DECIMAL(10, 0), $2))])
                                    JdbcAggregate(group=[{0}], agg#0=[sum($2)], agg#1=[sum($5)])
                                      JdbcJoin(condition=[AND(=($0, $3), =($1, $4))], joinType=[inner])
                                        JdbcProject(cs_item_sk=[$0], cs_order_number=[$1], cs_ext_list_price=[$2])
                                          JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                            JdbcProject(cs_item_sk=[$15], cs_order_number=[$17], cs_ext_list_price=[$25])
                                              JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                                        JdbcProject(cr_item_sk=[$0], cr_order_number=[$1], +=[+(+($2, $3), $4)])
                                          JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                            JdbcProject(cr_item_sk=[$2], cr_order_number=[$16], cr_refunded_cash=[$23], cr_reversed_charge=[$24], cr_store_credit=[$25])
                                              JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])
                              JdbcProject(i_item_sk=[$0], i_product_name=[$3])
                                JdbcFilter(condition=[AND(IN($2, _UTF-16LE'maroon':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'burnished':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'dim':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'steel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'navajo':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'chocolate':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), BETWEEN(false, $1, 36:DECIMAL(12, 2), 45:DECIMAL(12, 2)), IS NOT NULL($0))])
                                  JdbcProject(i_item_sk=[$0], i_current_price=[$5], i_color=[$17], i_product_name=[$21])
                                    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                            JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1], ib_income_band_sk=[$2])
                              JdbcJoin(condition=[=($1, $2)], joinType=[inner])
                                JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
                                  JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                    JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
                                      JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[hd1])
                                JdbcProject(ib_income_band_sk=[$0])
                                  JdbcFilter(condition=[IS NOT NULL($0)])
                                    JdbcProject(ib_income_band_sk=[$0])
                                      JdbcHiveTableScan(table=[[default, income_band]], table:alias=[ib1])
                          JdbcProject(s_store_sk=[$0], s_store_name=[$1], s_zip=[$2])
                            JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2))])
                              JdbcProject(s_store_sk=[$0], s_store_name=[$5], s_zip=[$25])
                                JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
                        JdbcProject(ca_address_sk=[$0], ca_street_number=[$1], ca_street_name=[$2], ca_city=[$3], ca_zip=[$4])
                          JdbcFilter(condition=[IS NOT NULL($0)])
                            JdbcProject(ca_address_sk=[$0], ca_street_number=[$2], ca_street_name=[$3], ca_city=[$6], ca_zip=[$9])
                              JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[ad1])
                      JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_hdemo_sk=[$2], c_current_addr_sk=[$3], c_first_shipto_date_sk=[$4], c_first_sales_date_sk=[$5], cd_demo_sk=[$6], cd_marital_status=[$7], d_date_sk=[$8], d_year=[$9], d_date_sk0=[$10], d_year0=[$11], hd_demo_sk=[$12], hd_income_band_sk=[$13], ib_income_band_sk=[$14], ca_address_sk=[$15], ca_street_number=[$16], ca_street_name=[$17], ca_city=[$18], ca_zip=[$19])
                        JdbcJoin(condition=[=($3, $15)], joinType=[inner])
                          JdbcJoin(condition=[=($2, $12)], joinType=[inner])
                            JdbcJoin(condition=[=($4, $10)], joinType=[inner])
                              JdbcJoin(condition=[=($5, $8)], joinType=[inner])
                                JdbcJoin(condition=[=($1, $6)], joinType=[inner])
                                  JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_hdemo_sk=[$2], c_current_addr_sk=[$3], c_first_shipto_date_sk=[$4], c_first_sales_date_sk=[$5])
                                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($5), IS NOT NULL($4), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3))])
                                      JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$2], c_current_hdemo_sk=[$3], c_current_addr_sk=[$4], c_first_shipto_date_sk=[$5], c_first_sales_date_sk=[$6])
                                        JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                                  JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$1])
                                    JdbcFilter(condition=[IS NOT NULL($0)])
                                      JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$2])
                                        JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[cd2])
                                JdbcProject(d_date_sk=[$0], d_year=[$1])
                                  JdbcFilter(condition=[IS NOT NULL($0)])
                                    JdbcProject(d_date_sk=[$0], d_year=[$6])
                                      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d2])
                              JdbcProject(d_date_sk=[$0], d_year=[$1])
                                JdbcFilter(condition=[IS NOT NULL($0)])
                                  JdbcProject(d_date_sk=[$0], d_year=[$6])
                                    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d3])
                            JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1], ib_income_band_sk=[$2])
                              JdbcJoin(condition=[=($1, $2)], joinType=[inner])
                                JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
                                  JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                    JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
                                      JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[hd2])
                                JdbcProject(ib_income_band_sk=[$0])
                                  JdbcFilter(condition=[IS NOT NULL($0)])
                                    JdbcProject(ib_income_band_sk=[$0])
                                      JdbcHiveTableScan(table=[[default, income_band]], table:alias=[ib2])
                          JdbcProject(ca_address_sk=[$0], ca_street_number=[$1], ca_street_name=[$2], ca_city=[$3], ca_zip=[$4])
                            JdbcFilter(condition=[IS NOT NULL($0)])
                              JdbcProject(ca_address_sk=[$0], ca_street_number=[$2], ca_street_name=[$3], ca_city=[$6], ca_zip=[$9])
                                JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[ad2])
                    JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$1])
                      JdbcFilter(condition=[IS NOT NULL($0)])
                        JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$2])
                          JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[cd1])
          JdbcProject($f1=[$1], $f2=[$2], $f3=[$3], $f15=[$14], $f16=[$15], $f17=[$16], $f18=[$17])
            JdbcFilter(condition=[IS NOT NULL($14)])
              JdbcProject(i_product_name=[$1], i_item_sk=[$0], s_store_name=[$2], s_zip=[$3], ca_street_number=[$4], ca_street_name=[$5], ca_city=[$6], ca_zip=[$7], ca_street_number0=[$10], ca_street_name0=[$11], ca_city0=[$12], ca_zip0=[$13], d_year=[$8], d_year0=[$9], $f14=[$14], $f15=[$15], $f16=[$16], $f17=[$17])
                JdbcAggregate(group=[{17, 18, 23, 24, 26, 27, 28, 29, 39, 41, 46, 47, 48, 49}], agg#0=[count()], agg#1=[sum($9)], agg#2=[sum($10)], agg#3=[sum($11)])
                  JdbcJoin(condition=[AND(<>($51, $37), =($3, $50))], joinType=[inner])
                    JdbcJoin(condition=[=($2, $30)], joinType=[inner])
                      JdbcJoin(condition=[=($5, $25)], joinType=[inner])
                        JdbcJoin(condition=[=($6, $22)], joinType=[inner])
                          JdbcJoin(condition=[=($4, $19)], joinType=[inner])
                            JdbcJoin(condition=[=($1, $17)], joinType=[inner])
                              JdbcJoin(condition=[=($1, $16)], joinType=[inner])
                                JdbcJoin(condition=[AND(=($1, $14), =($8, $15))], joinType=[inner])
                                  JdbcJoin(condition=[=($7, $13)], joinType=[inner])
                                    JdbcJoin(condition=[=($0, $12)], joinType=[inner])
                                      JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_customer_sk=[$2], ss_cdemo_sk=[$3], ss_hdemo_sk=[$4], ss_addr_sk=[$5], ss_store_sk=[$6], ss_promo_sk=[$7], ss_ticket_number=[$8], ss_wholesale_cost=[$9], ss_list_price=[$10], ss_coupon_amt=[$11])
                                        JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($8), IS NOT NULL($0), IS NOT NULL($6), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($7), IS NOT NULL($4), IS NOT NULL($5))])
                                          JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_customer_sk=[$3], ss_cdemo_sk=[$4], ss_hdemo_sk=[$5], ss_addr_sk=[$6], ss_store_sk=[$7], ss_promo_sk=[$8], ss_ticket_number=[$9], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19])
                                            JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                                      JdbcProject(d_date_sk=[$0])
                                        JdbcFilter(condition=[AND(=($1, 2001), IS NOT NULL($0))])
                                          JdbcProject(d_date_sk=[$0], d_year=[$6])
                                            JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d1])
                                    JdbcProject(p_promo_sk=[$0])
                                      JdbcFilter(condition=[IS NOT NULL($0)])
                                        JdbcProject(p_promo_sk=[$0])
                                          JdbcHiveTableScan(table=[[default, promotion]], table:alias=[promotion])
                                  JdbcProject(sr_item_sk=[$0], sr_ticket_number=[$1])
                                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                      JdbcProject(sr_item_sk=[$2], sr_ticket_number=[$9])
                                        JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                                JdbcProject($f0=[$0])
                                  JdbcFilter(condition=[>($1, *(2:DECIMAL(10, 0), $2))])
                                    JdbcAggregate(group=[{0}], agg#0=[sum($2)], agg#1=[sum($5)])
                                      JdbcJoin(condition=[AND(=($0, $3), =($1, $4))], joinType=[inner])
                                        JdbcProject(cs_item_sk=[$0], cs_order_number=[$1], cs_ext_list_price=[$2])
                                          JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                            JdbcProject(cs_item_sk=[$15], cs_order_number=[$17], cs_ext_list_price=[$25])
                                              JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                                        JdbcProject(cr_item_sk=[$0], cr_order_number=[$1], +=[+(+($2, $3), $4)])
                                          JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                            JdbcProject(cr_item_sk=[$2], cr_order_number=[$16], cr_refunded_cash=[$23], cr_reversed_charge=[$24], cr_store_credit=[$25])
                                              JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])
                              JdbcProject(i_item_sk=[$0], i_product_name=[$3])
                                JdbcFilter(condition=[AND(IN($2, _UTF-16LE'maroon':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'burnished':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'dim':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'steel':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'navajo':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'chocolate':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), BETWEEN(false, $1, 36:DECIMAL(12, 2), 45:DECIMAL(12, 2)), IS NOT NULL($0))])
                                  JdbcProject(i_item_sk=[$0], i_current_price=[$5], i_color=[$17], i_product_name=[$21])
                                    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                            JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1], ib_income_band_sk=[$2])
                              JdbcJoin(condition=[=($1, $2)], joinType=[inner])
                                JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
                                  JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                    JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
                                      JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[hd1])
                                JdbcProject(ib_income_band_sk=[$0])
                                  JdbcFilter(condition=[IS NOT NULL($0)])
                                    JdbcProject(ib_income_band_sk=[$0])
                                      JdbcHiveTableScan(table=[[default, income_band]], table:alias=[ib1])
                          JdbcProject(s_store_sk=[$0], s_store_name=[$1], s_zip=[$2])
                            JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2))])
                              JdbcProject(s_store_sk=[$0], s_store_name=[$5], s_zip=[$25])
                                JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
                        JdbcProject(ca_address_sk=[$0], ca_street_number=[$1], ca_street_name=[$2], ca_city=[$3], ca_zip=[$4])
                          JdbcFilter(condition=[IS NOT NULL($0)])
                            JdbcProject(ca_address_sk=[$0], ca_street_number=[$2], ca_street_name=[$3], ca_city=[$6], ca_zip=[$9])
                              JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[ad1])
                      JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_hdemo_sk=[$2], c_current_addr_sk=[$3], c_first_shipto_date_sk=[$4], c_first_sales_date_sk=[$5], cd_demo_sk=[$6], cd_marital_status=[$7], d_date_sk=[$8], d_year=[$9], d_date_sk0=[$10], d_year0=[$11], hd_demo_sk=[$12], hd_income_band_sk=[$13], ib_income_band_sk=[$14], ca_address_sk=[$15], ca_street_number=[$16], ca_street_name=[$17], ca_city=[$18], ca_zip=[$19])
                        JdbcJoin(condition=[=($3, $15)], joinType=[inner])
                          JdbcJoin(condition=[=($2, $12)], joinType=[inner])
                            JdbcJoin(condition=[=($4, $10)], joinType=[inner])
                              JdbcJoin(condition=[=($5, $8)], joinType=[inner])
                                JdbcJoin(condition=[=($1, $6)], joinType=[inner])
                                  JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_hdemo_sk=[$2], c_current_addr_sk=[$3], c_first_shipto_date_sk=[$4], c_first_sales_date_sk=[$5])
                                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($5), IS NOT NULL($4), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3))])
                                      JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$2], c_current_hdemo_sk=[$3], c_current_addr_sk=[$4], c_first_shipto_date_sk=[$5], c_first_sales_date_sk=[$6])
                                        JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                                  JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$1])
                                    JdbcFilter(condition=[IS NOT NULL($0)])
                                      JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$2])
                                        JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[cd2])
                                JdbcProject(d_date_sk=[$0], d_year=[$1])
                                  JdbcFilter(condition=[IS NOT NULL($0)])
                                    JdbcProject(d_date_sk=[$0], d_year=[$6])
                                      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d2])
                              JdbcProject(d_date_sk=[$0], d_year=[$1])
                                JdbcFilter(condition=[IS NOT NULL($0)])
                                  JdbcProject(d_date_sk=[$0], d_year=[$6])
                                    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d3])
                            JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1], ib_income_band_sk=[$2])
                              JdbcJoin(condition=[=($1, $2)], joinType=[inner])
                                JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
                                  JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                    JdbcProject(hd_demo_sk=[$0], hd_income_band_sk=[$1])
                                      JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[hd2])
                                JdbcProject(ib_income_band_sk=[$0])
                                  JdbcFilter(condition=[IS NOT NULL($0)])
                                    JdbcProject(ib_income_band_sk=[$0])
                                      JdbcHiveTableScan(table=[[default, income_band]], table:alias=[ib2])
                          JdbcProject(ca_address_sk=[$0], ca_street_number=[$1], ca_street_name=[$2], ca_city=[$3], ca_zip=[$4])
                            JdbcFilter(condition=[IS NOT NULL($0)])
                              JdbcProject(ca_address_sk=[$0], ca_street_number=[$2], ca_street_name=[$3], ca_city=[$6], ca_zip=[$9])
                                JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[ad2])
                    JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$1])
                      JdbcFilter(condition=[IS NOT NULL($0)])
                        JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$2])
                          JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[cd1])

