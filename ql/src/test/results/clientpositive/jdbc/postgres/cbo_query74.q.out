CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
  JdbcProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
    JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3], ss_net_paid=[$20])
    JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], ws_net_paid=[$29])
    JdbcHiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])

CTE Suggestion:
JdbcProject(d_date_sk=[$0])
  JdbcFilter(condition=[AND(=($1, 1998), IS NOT NULL($0))])
    JdbcProject(d_date_sk=[$0], d_year=[$6])
      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

CTE Suggestion:
JdbcProject(d_date_sk=[$0])
  JdbcFilter(condition=[AND(=($1, 1999), IS NOT NULL($0))])
    JdbcProject(d_date_sk=[$0], d_year=[$6])
      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

PREHOOK: query: explain cbo
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcSort(sort0=[$2], sort1=[$0], sort2=[$1], dir0=[ASC], dir1=[ASC], dir2=[ASC], fetch=[100])
    JdbcProject(customer_id=[$8], customer_first_name=[$9], customer_last_name=[$10])
      JdbcJoin(condition=[AND(=($8, $0), CASE($2, CASE($7, >(/($4, $6), /($11, $1)), false), false))], joinType=[inner])
        JdbcJoin(condition=[=($0, $5)], joinType=[inner])
          JdbcJoin(condition=[=($0, $3)], joinType=[inner])
            JdbcProject(customer_id=[$0], year_total=[$3], >=[>($3, 0:DECIMAL(1, 0))])
              JdbcFilter(condition=[>($3, 0:DECIMAL(1, 0))])
                JdbcAggregate(group=[{5, 6, 7}], agg#0=[sum($2)])
                  JdbcJoin(condition=[=($4, $1)], joinType=[inner])
                    JdbcJoin(condition=[=($0, $3)], joinType=[inner])
                      JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$1], ss_net_paid=[$2])
                        JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                          JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3], ss_net_paid=[$20])
                            JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                      JdbcProject(d_date_sk=[$0])
                        JdbcFilter(condition=[AND(=($1, 1998), IS NOT NULL($0))])
                          JdbcProject(d_date_sk=[$0], d_year=[$6])
                            JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                    JdbcProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$2], c_last_name=[$3])
                      JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                        JdbcProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                          JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
            JdbcProject(customer_id=[$0], year_total=[$3])
              JdbcAggregate(group=[{5, 6, 7}], agg#0=[sum($2)])
                JdbcJoin(condition=[=($4, $1)], joinType=[inner])
                  JdbcJoin(condition=[=($0, $3)], joinType=[inner])
                    JdbcProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$1], ws_net_paid=[$2])
                      JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                        JdbcProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], ws_net_paid=[$29])
                          JdbcHiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                    JdbcProject(d_date_sk=[$0])
                      JdbcFilter(condition=[AND(=($1, 1999), IS NOT NULL($0))])
                        JdbcProject(d_date_sk=[$0], d_year=[$6])
                          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                  JdbcProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$2], c_last_name=[$3])
                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                      JdbcProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                        JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
          JdbcProject(customer_id=[$0], year_total=[$3], >=[>($3, 0:DECIMAL(1, 0))])
            JdbcFilter(condition=[>($3, 0:DECIMAL(1, 0))])
              JdbcAggregate(group=[{5, 6, 7}], agg#0=[sum($2)])
                JdbcJoin(condition=[=($4, $1)], joinType=[inner])
                  JdbcJoin(condition=[=($0, $3)], joinType=[inner])
                    JdbcProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$1], ws_net_paid=[$2])
                      JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                        JdbcProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], ws_net_paid=[$29])
                          JdbcHiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                    JdbcProject(d_date_sk=[$0])
                      JdbcFilter(condition=[AND(=($1, 1998), IS NOT NULL($0))])
                        JdbcProject(d_date_sk=[$0], d_year=[$6])
                          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                  JdbcProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$2], c_last_name=[$3])
                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                      JdbcProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                        JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
        JdbcAggregate(group=[{5, 6, 7}], agg#0=[sum($2)])
          JdbcJoin(condition=[=($4, $1)], joinType=[inner])
            JdbcJoin(condition=[=($0, $3)], joinType=[inner])
              JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$1], ss_net_paid=[$2])
                JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                  JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3], ss_net_paid=[$20])
                    JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
              JdbcProject(d_date_sk=[$0])
                JdbcFilter(condition=[AND(=($1, 1999), IS NOT NULL($0))])
                  JdbcProject(d_date_sk=[$0], d_year=[$6])
                    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
            JdbcProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$2], c_last_name=[$3])
              JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                JdbcProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                  JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])

