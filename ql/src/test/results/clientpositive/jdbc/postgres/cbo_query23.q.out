CTE Suggestion:
HiveProject($f1=[$1])
  HiveFilter(condition=[>($3, 4)])
    HiveProject(substr=[$2], i_item_sk=[$1], d_date=[$0], $f3=[$3])
      HiveAggregate(group=[{3, 4, 5}], agg#0=[count()])
        HiveJoin(condition=[=($1, $4)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJdbcConverter(convention=[JDBC.POSTGRES])
            JdbcJoin(condition=[=($0, $2)], joinType=[inner])
              JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2])
                  JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
              JdbcProject(d_date_sk=[$0], d_date=[$1])
                JdbcFilter(condition=[AND(IN($2, 1999, 2000, 2001, 2002), IS NOT NULL($0))])
                  JdbcProject(d_date_sk=[$0], d_date=[$2], d_year=[$6])
                    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
          HiveProject(i_item_sk=[$0], substr=[substr($1, 1, 30)])
            HiveJdbcConverter(convention=[JDBC.POSTGRES])
              JdbcFilter(condition=[IS NOT NULL($0)])
                JdbcProject(i_item_sk=[$0], i_item_desc=[$4])
                  JdbcHiveTableScan(table=[[default, item]], table:alias=[item])

CTE Suggestion:
JdbcFilter(condition=[AND(=($1, 1999), =($2, 1), IS NOT NULL($0))])
  JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

CTE Suggestion:
JdbcFilter(condition=[IS NOT NULL($0)])
  JdbcProject(c_customer_sk=[$0])
    JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])

PREHOOK: query: explain cbo
with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim 
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (1999,1999+1,1999+2,1999+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (1999,1999+1,1999+2,1999+3) 
        group by c_customer_sk) x),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from ((select cs_quantity*cs_list_price sales
       from catalog_sales
           ,date_dim 
       where d_year = 1999 
         and d_moy = 1 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer))
      union all
      (select ws_quantity*ws_list_price sales
       from web_sales 
           ,date_dim 
       where d_year = 1999 
         and d_moy = 1 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer))) y
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim 
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (1999,1999+1,1999+2,1999+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (1999,1999+1,1999+2,1999+3) 
        group by c_customer_sk) x),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from ((select cs_quantity*cs_list_price sales
       from catalog_sales
           ,date_dim 
       where d_year = 1999 
         and d_moy = 1 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer))
      union all
      (select ws_quantity*ws_list_price sales
       from web_sales 
           ,date_dim 
       where d_year = 1999 
         and d_moy = 1 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer))) y
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
#### A masked pattern was here ####
CBO PLAN:
HiveAggregate(group=[{}], agg#0=[sum($0)])
  HiveProject(sales=[$0])
    HiveUnion(all=[true])
      HiveProject(sales=[*(CAST($3):DECIMAL(10, 0), $4)])
        HiveSemiJoin(condition=[=($1, $8)], joinType=[semi])
          HiveSemiJoin(condition=[=($2, $8)], joinType=[semi])
            HiveProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$1], cs_item_sk=[$2], cs_quantity=[$3], cs_list_price=[$4], d_date_sk=[$5], d_year=[$6], d_moy=[$7])
              HiveJdbcConverter(convention=[JDBC.POSTGRES])
                JdbcJoin(condition=[=($0, $5)], joinType=[inner])
                  JdbcProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$1], cs_item_sk=[$2], cs_quantity=[$3], cs_list_price=[$4])
                    JdbcFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($1), IS NOT NULL($0))])
                      JdbcProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$3], cs_item_sk=[$15], cs_quantity=[$18], cs_list_price=[$20])
                        JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                  JdbcProject(d_date_sk=[$0], d_year=[$1], d_moy=[$2])
                    JdbcFilter(condition=[AND(=($1, 1999), =($2, 1), IS NOT NULL($0))])
                      JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
            HiveProject($f1=[$1])
              HiveFilter(condition=[>($3, 4)])
                HiveProject(substr=[$2], i_item_sk=[$1], d_date=[$0], $f3=[$3])
                  HiveAggregate(group=[{3, 4, 5}], agg#0=[count()])
                    HiveJoin(condition=[=($1, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], d_date_sk=[$2], d_date=[$3])
                        HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], d_date_sk=[$2], d_date=[$3])
                          HiveJdbcConverter(convention=[JDBC.POSTGRES])
                            JdbcJoin(condition=[=($0, $2)], joinType=[inner])
                              JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1])
                                JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                  JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2])
                                    JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                              JdbcProject(d_date_sk=[$0], d_date=[$1])
                                JdbcFilter(condition=[AND(IN($2, 1999, 2000, 2001, 2002), IS NOT NULL($0))])
                                  JdbcProject(d_date_sk=[$0], d_date=[$2], d_year=[$6])
                                    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                      HiveProject(i_item_sk=[$0], substr=[substr($1, 1, 30)])
                        HiveProject(i_item_sk=[$0], i_item_desc=[$1])
                          HiveProject(i_item_sk=[$0], i_item_desc=[$1])
                            HiveJdbcConverter(convention=[JDBC.POSTGRES])
                              JdbcFilter(condition=[IS NOT NULL($0)])
                                JdbcProject(i_item_sk=[$0], i_item_desc=[$4])
                                  JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
          HiveProject(c_customer_sk=[$0])
            HiveJdbcConverter(convention=[JDBC.POSTGRES])
              JdbcProject(c_customer_sk=[$0])
                JdbcJoin(condition=[>($1, $2)], joinType=[inner])
                  JdbcProject(c_customer_sk=[$0], $f1=[$1])
                    JdbcFilter(condition=[IS NOT NULL($1)])
                      JdbcAggregate(group=[{2}], agg#0=[sum($1)])
                        JdbcJoin(condition=[=($0, $2)], joinType=[inner])
                          JdbcProject(ss_customer_sk=[$0], *=[*(CAST($1):DECIMAL(10, 0), $2)])
                            JdbcFilter(condition=[IS NOT NULL($0)])
                              JdbcProject(ss_customer_sk=[$3], ss_quantity=[$10], ss_sales_price=[$13])
                                JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                          JdbcProject(c_customer_sk=[$0])
                            JdbcFilter(condition=[IS NOT NULL($0)])
                              JdbcProject(c_customer_sk=[$0])
                                JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                  JdbcProject(*=[*(0.95:DECIMAL(16, 6), $0)])
                    JdbcFilter(condition=[IS NOT NULL($0)])
                      JdbcAggregate(group=[{}], agg#0=[max($1)])
                        JdbcAggregate(group=[{3}], agg#0=[sum($2)])
                          JdbcJoin(condition=[=($0, $4)], joinType=[inner])
                            JdbcJoin(condition=[=($1, $3)], joinType=[inner])
                              JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$1], *=[*(CAST($2):DECIMAL(10, 0), $3)])
                                JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                  JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3], ss_quantity=[$10], ss_sales_price=[$13])
                                    JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                              JdbcProject(c_customer_sk=[$0])
                                JdbcFilter(condition=[IS NOT NULL($0)])
                                  JdbcProject(c_customer_sk=[$0])
                                    JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                            JdbcProject(d_date_sk=[$0])
                              JdbcFilter(condition=[AND(IN($1, 1999, 2000, 2001, 2002), IS NOT NULL($0))])
                                JdbcProject(d_date_sk=[$0], d_year=[$6])
                                  JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
      HiveProject(sales=[*(CAST($3):DECIMAL(10, 0), $4)])
        HiveSemiJoin(condition=[=($2, $8)], joinType=[semi])
          HiveSemiJoin(condition=[=($1, $8)], joinType=[semi])
            HiveProject(ws_sold_date_sk=[$0], ws_item_sk=[$1], ws_bill_customer_sk=[$2], ws_quantity=[$3], ws_list_price=[$4], d_date_sk=[$5], d_year=[$6], d_moy=[$7])
              HiveJdbcConverter(convention=[JDBC.POSTGRES])
                JdbcJoin(condition=[=($0, $5)], joinType=[inner])
                  JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$1], ws_bill_customer_sk=[$2], ws_quantity=[$3], ws_list_price=[$4])
                    JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($0))])
                      JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_bill_customer_sk=[$4], ws_quantity=[$18], ws_list_price=[$20])
                        JdbcHiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                  JdbcProject(d_date_sk=[$0], d_year=[$1], d_moy=[$2])
                    JdbcFilter(condition=[AND(=($1, 1999), =($2, 1), IS NOT NULL($0))])
                      JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
            HiveProject($f1=[$1])
              HiveFilter(condition=[>($3, 4)])
                HiveProject(substr=[$2], i_item_sk=[$1], d_date=[$0], $f3=[$3])
                  HiveAggregate(group=[{3, 4, 5}], agg#0=[count()])
                    HiveJoin(condition=[=($1, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], d_date_sk=[$2], d_date=[$3])
                        HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], d_date_sk=[$2], d_date=[$3])
                          HiveJdbcConverter(convention=[JDBC.POSTGRES])
                            JdbcJoin(condition=[=($0, $2)], joinType=[inner])
                              JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1])
                                JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                                  JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2])
                                    JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                              JdbcProject(d_date_sk=[$0], d_date=[$1])
                                JdbcFilter(condition=[AND(IN($2, 1999, 2000, 2001, 2002), IS NOT NULL($0))])
                                  JdbcProject(d_date_sk=[$0], d_date=[$2], d_year=[$6])
                                    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                      HiveProject(i_item_sk=[$0], substr=[substr($1, 1, 30)])
                        HiveProject(i_item_sk=[$0], i_item_desc=[$1])
                          HiveProject(i_item_sk=[$0], i_item_desc=[$1])
                            HiveJdbcConverter(convention=[JDBC.POSTGRES])
                              JdbcFilter(condition=[IS NOT NULL($0)])
                                JdbcProject(i_item_sk=[$0], i_item_desc=[$4])
                                  JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
          HiveProject(c_customer_sk=[$0])
            HiveJdbcConverter(convention=[JDBC.POSTGRES])
              JdbcProject(c_customer_sk=[$0])
                JdbcJoin(condition=[>($1, $2)], joinType=[inner])
                  JdbcProject(c_customer_sk=[$0], $f1=[$1])
                    JdbcFilter(condition=[IS NOT NULL($1)])
                      JdbcAggregate(group=[{2}], agg#0=[sum($1)])
                        JdbcJoin(condition=[=($0, $2)], joinType=[inner])
                          JdbcProject(ss_customer_sk=[$0], *=[*(CAST($1):DECIMAL(10, 0), $2)])
                            JdbcFilter(condition=[IS NOT NULL($0)])
                              JdbcProject(ss_customer_sk=[$3], ss_quantity=[$10], ss_sales_price=[$13])
                                JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                          JdbcProject(c_customer_sk=[$0])
                            JdbcFilter(condition=[IS NOT NULL($0)])
                              JdbcProject(c_customer_sk=[$0])
                                JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                  JdbcProject(*=[*(0.95:DECIMAL(16, 6), $0)])
                    JdbcFilter(condition=[IS NOT NULL($0)])
                      JdbcAggregate(group=[{}], agg#0=[max($1)])
                        JdbcAggregate(group=[{3}], agg#0=[sum($2)])
                          JdbcJoin(condition=[=($0, $4)], joinType=[inner])
                            JdbcJoin(condition=[=($1, $3)], joinType=[inner])
                              JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$1], *=[*(CAST($2):DECIMAL(10, 0), $3)])
                                JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                  JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3], ss_quantity=[$10], ss_sales_price=[$13])
                                    JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                              JdbcProject(c_customer_sk=[$0])
                                JdbcFilter(condition=[IS NOT NULL($0)])
                                  JdbcProject(c_customer_sk=[$0])
                                    JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                            JdbcProject(d_date_sk=[$0])
                              JdbcFilter(condition=[AND(IN($1, 1999, 2000, 2001, 2002), IS NOT NULL($0))])
                                JdbcProject(d_date_sk=[$0], d_year=[$6])
                                  JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

