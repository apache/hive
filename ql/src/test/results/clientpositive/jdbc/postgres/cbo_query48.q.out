PREHOOK: query: explain cbo
select sum (ss_quantity)
 from store_sales, store, customer_demographics, customer_address, date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 1998
 and  
 (
  (
   cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 100.00 and 150.00  
   )
 or
  (
  cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 50.00 and 100.00   
  )
 or 
 (
  cd_demo_sk = ss_cdemo_sk
  and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 150.00 and 200.00  
 )
 )
 and
 (
  (
  ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('KY', 'GA', 'NM')
  and ss_net_profit between 0 and 2000  
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('MT', 'OR', 'IN')
  and ss_net_profit between 150 and 3000 
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('WI', 'MO', 'WV')
  and ss_net_profit between 50 and 25000 
  )
 )
PREHOOK: type: QUERY
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select sum (ss_quantity)
 from store_sales, store, customer_demographics, customer_address, date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 1998
 and  
 (
  (
   cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 100.00 and 150.00  
   )
 or
  (
  cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 50.00 and 100.00   
  )
 or 
 (
  cd_demo_sk = ss_cdemo_sk
  and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 150.00 and 200.00  
 )
 )
 and
 (
  (
  ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('KY', 'GA', 'NM')
  and ss_net_profit between 0 and 2000  
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('MT', 'OR', 'IN')
  and ss_net_profit between 150 and 3000 
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('WI', 'MO', 'WV')
  and ss_net_profit between 50 and 25000 
  )
 )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcAggregate(group=[{}], agg#0=[sum($4)])
    JdbcJoin(condition=[AND(=($2, $11), OR(AND($12, $5), AND($13, $6), AND($14, $7)))], joinType=[inner])
      JdbcJoin(condition=[=($0, $10)], joinType=[inner])
        JdbcJoin(condition=[=($9, $1)], joinType=[inner])
          JdbcJoin(condition=[=($8, $3)], joinType=[inner])
            JdbcProject(ss_sold_date_sk=[$0], ss_cdemo_sk=[$1], ss_addr_sk=[$2], ss_store_sk=[$3], ss_quantity=[$4], BETWEEN=[BETWEEN(false, $6, 0:DECIMAL(12, 2), 2000:DECIMAL(12, 2))], BETWEEN6=[BETWEEN(false, $6, 150:DECIMAL(12, 2), 3000:DECIMAL(12, 2))], BETWEEN7=[BETWEEN(false, $6, 50:DECIMAL(12, 2), 25000:DECIMAL(12, 2))])
              JdbcFilter(condition=[AND(OR(BETWEEN(false, $5, 100:DECIMAL(3, 0), 150:DECIMAL(3, 0)), BETWEEN(false, $5, 50:DECIMAL(2, 0), 100:DECIMAL(3, 0)), BETWEEN(false, $5, 150:DECIMAL(3, 0), 200:DECIMAL(3, 0))), OR(<=(100:DECIMAL(3, 0), $5), <=($5, 150:DECIMAL(3, 0)), <=(50:DECIMAL(2, 0), $5), <=($5, 100:DECIMAL(3, 0)), <=(150:DECIMAL(3, 0), $5), <=($5, 200:DECIMAL(3, 0))), OR(<=(0:DECIMAL(12, 2), $6), <=($6, 2000:DECIMAL(12, 2)), <=(150:DECIMAL(12, 2), $6), <=($6, 3000:DECIMAL(12, 2)), <=(50:DECIMAL(12, 2), $6), <=($6, 25000:DECIMAL(12, 2))), IS NOT NULL($3), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($0))])
                JdbcProject(ss_sold_date_sk=[$0], ss_cdemo_sk=[$4], ss_addr_sk=[$6], ss_store_sk=[$7], ss_quantity=[$10], ss_sales_price=[$13], ss_net_profit=[$22])
                  JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
            JdbcProject(s_store_sk=[$0])
              JdbcFilter(condition=[IS NOT NULL($0)])
                JdbcProject(s_store_sk=[$0])
                  JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
          JdbcProject(cd_demo_sk=[$0])
            JdbcFilter(condition=[AND(=($2, _UTF-16LE'4 yr Degree'), =($1, _UTF-16LE'M'), IS NOT NULL($0))])
              JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$2], cd_education_status=[$3])
                JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[customer_demographics])
        JdbcProject(d_date_sk=[$0])
          JdbcFilter(condition=[AND(=($1, 1998), IS NOT NULL($0))])
            JdbcProject(d_date_sk=[$0], d_year=[$6])
              JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
      JdbcProject(ca_address_sk=[$0], IN=[IN($1, _UTF-16LE'KY':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'GA':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'NM':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")], IN2=[IN($1, _UTF-16LE'MT':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'OR':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'IN':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")], IN3=[IN($1, _UTF-16LE'WI':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'MO':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'WV':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")])
        JdbcFilter(condition=[AND(IN($1, _UTF-16LE'KY':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'GA':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'NM':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'MT':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'OR':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'IN':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'WI':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'MO':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'WV':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), =($2, _UTF-16LE'United States'), IS NOT NULL($0))])
          JdbcProject(ca_address_sk=[$0], ca_state=[$8], ca_country=[$10])
            JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])

