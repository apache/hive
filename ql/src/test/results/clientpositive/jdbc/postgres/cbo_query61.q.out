CTE Suggestion:
JdbcJoin(condition=[=($2, $1)], joinType=[inner])
  JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
    JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$4])
      JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
  JdbcProject(ca_address_sk=[$0])
    JdbcFilter(condition=[AND(=($1, -7:DECIMAL(1, 0)), IS NOT NULL($0))])
      JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$11])
        JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])

CTE Suggestion:
JdbcProject(d_date_sk=[$0])
  JdbcFilter(condition=[AND(=($1, 1999), =($2, 11), IS NOT NULL($0))])
    JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

CTE Suggestion:
JdbcProject(i_item_sk=[$0])
  JdbcFilter(condition=[AND(=($1, _UTF-16LE'Electronics'), IS NOT NULL($0))])
    JdbcProject(i_item_sk=[$0], i_category=[$12])
      JdbcHiveTableScan(table=[[default, item]], table:alias=[item])

CTE Suggestion:
JdbcProject(s_store_sk=[$0])
  JdbcFilter(condition=[AND(=($1, -7:DECIMAL(1, 0)), IS NOT NULL($0))])
    JdbcProject(s_store_sk=[$0], s_gmt_offset=[$27])
      JdbcHiveTableScan(table=[[default, store]], table:alias=[store])

Warning: Shuffle Join MERGEJOIN[10][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain cbo
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@promotion
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@promotion
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveProject(promotions=[$0], total=[$1], _o__c2=[*(/(CAST($0):DECIMAL(15, 4), CAST($1):DECIMAL(15, 4)), 100:DECIMAL(10, 0))])
  HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject($f0=[$0])
      HiveProject($f0=[$0])
        HiveJdbcConverter(convention=[JDBC.POSTGRES])
          JdbcAggregate(group=[{}], agg#0=[sum($5)])
            JdbcJoin(condition=[=($2, $10)], joinType=[inner])
              JdbcJoin(condition=[=($1, $9)], joinType=[inner])
                JdbcJoin(condition=[=($0, $8)], joinType=[inner])
                  JdbcJoin(condition=[=($4, $7)], joinType=[inner])
                    JdbcJoin(condition=[=($3, $6)], joinType=[inner])
                      JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$3], ss_promo_sk=[$4], ss_ext_sales_price=[$5])
                        JdbcFilter(condition=[AND(IS NOT NULL($3), IS NOT NULL($4), IS NOT NULL($0), IS NOT NULL($2), IS NOT NULL($1))])
                          JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_customer_sk=[$3], ss_store_sk=[$7], ss_promo_sk=[$8], ss_ext_sales_price=[$15])
                            JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                      JdbcProject(s_store_sk=[$0])
                        JdbcFilter(condition=[AND(=($1, -7:DECIMAL(1, 0)), IS NOT NULL($0))])
                          JdbcProject(s_store_sk=[$0], s_gmt_offset=[$27])
                            JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
                    JdbcProject(p_promo_sk=[$0])
                      JdbcFilter(condition=[AND(OR(=($1, _UTF-16LE'Y'), =($2, _UTF-16LE'Y'), =($3, _UTF-16LE'Y')), IS NOT NULL($0))])
                        JdbcProject(p_promo_sk=[$0], p_channel_dmail=[$8], p_channel_email=[$9], p_channel_tv=[$11])
                          JdbcHiveTableScan(table=[[default, promotion]], table:alias=[promotion])
                  JdbcProject(d_date_sk=[$0])
                    JdbcFilter(condition=[AND(=($1, 1999), =($2, 11), IS NOT NULL($0))])
                      JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                JdbcProject(i_item_sk=[$0])
                  JdbcFilter(condition=[AND(=($1, _UTF-16LE'Electronics'), IS NOT NULL($0))])
                    JdbcProject(i_item_sk=[$0], i_category=[$12])
                      JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
              JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$1], ca_address_sk=[$2])
                JdbcJoin(condition=[=($2, $1)], joinType=[inner])
                  JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$1])
                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                      JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$4])
                        JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                  JdbcProject(ca_address_sk=[$0])
                    JdbcFilter(condition=[AND(=($1, -7:DECIMAL(1, 0)), IS NOT NULL($0))])
                      JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$11])
                        JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
    HiveProject($f0=[$0])
      HiveJdbcConverter(convention=[JDBC.POSTGRES])
        JdbcAggregate(group=[{}], agg#0=[sum($4)])
          JdbcJoin(condition=[=($2, $8)], joinType=[inner])
            JdbcJoin(condition=[=($1, $7)], joinType=[inner])
              JdbcJoin(condition=[=($0, $6)], joinType=[inner])
                JdbcJoin(condition=[=($3, $5)], joinType=[inner])
                  JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$3], ss_ext_sales_price=[$4])
                    JdbcFilter(condition=[AND(IS NOT NULL($3), IS NOT NULL($0), IS NOT NULL($2), IS NOT NULL($1))])
                      JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_customer_sk=[$3], ss_store_sk=[$7], ss_ext_sales_price=[$15])
                        JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                  JdbcProject(s_store_sk=[$0])
                    JdbcFilter(condition=[AND(=($1, -7:DECIMAL(1, 0)), IS NOT NULL($0))])
                      JdbcProject(s_store_sk=[$0], s_gmt_offset=[$27])
                        JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
                JdbcProject(d_date_sk=[$0])
                  JdbcFilter(condition=[AND(=($1, 1999), =($2, 11), IS NOT NULL($0))])
                    JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
              JdbcProject(i_item_sk=[$0])
                JdbcFilter(condition=[AND(=($1, _UTF-16LE'Electronics'), IS NOT NULL($0))])
                  JdbcProject(i_item_sk=[$0], i_category=[$12])
                    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
            JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$1], ca_address_sk=[$2])
              JdbcJoin(condition=[=($2, $1)], joinType=[inner])
                JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$1])
                  JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                    JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$4])
                      JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                JdbcProject(ca_address_sk=[$0])
                  JdbcFilter(condition=[AND(=($1, -7:DECIMAL(1, 0)), IS NOT NULL($0))])
                    JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$11])
                      JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])

