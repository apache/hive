PREHOOK: query: explain
select  substr(r_reason_desc,1,20)
       ,avg(ws_quantity)
       ,avg(wr_refunded_cash)
       ,avg(wr_fee)
 from web_sales, web_returns, web_page, customer_demographics cd1,
      customer_demographics cd2, customer_address, date_dim, reason 
 where ws_web_page_sk = wp_web_page_sk
   and ws_item_sk = wr_item_sk
   and ws_order_number = wr_order_number
   and ws_sold_date_sk = d_date_sk and d_year = 1998
   and cd1.cd_demo_sk = wr_refunded_cdemo_sk 
   and cd2.cd_demo_sk = wr_returning_cdemo_sk
   and ca_address_sk = wr_refunded_addr_sk
   and r_reason_sk = wr_reason_sk
   and
   (
    (
     cd1.cd_marital_status = 'M'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = '4 yr Degree'
     and 
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 100.00 and 150.00
    )
   or
    (
     cd1.cd_marital_status = 'D'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Primary' 
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 50.00 and 100.00
    )
   or
    (
     cd1.cd_marital_status = 'U'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Advanced Degree'
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 150.00 and 200.00
    )
   )
   and
   (
    (
     ca_country = 'United States'
     and
     ca_state in ('KY', 'GA', 'NM')
     and ws_net_profit between 100 and 200  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('MT', 'OR', 'IN')
     and ws_net_profit between 150 and 300  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('WI', 'MO', 'WV')
     and ws_net_profit between 50 and 250  
    )
   )
group by r_reason_desc
order by substr(r_reason_desc,1,20)
        ,avg(ws_quantity)
        ,avg(wr_refunded_cash)
        ,avg(wr_fee)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@reason
PREHOOK: Input: default@web_page
PREHOOK: Input: default@web_returns
PREHOOK: Input: default@web_sales
#### A masked pattern was here ####
POSTHOOK: query: explain
select  substr(r_reason_desc,1,20)
       ,avg(ws_quantity)
       ,avg(wr_refunded_cash)
       ,avg(wr_fee)
 from web_sales, web_returns, web_page, customer_demographics cd1,
      customer_demographics cd2, customer_address, date_dim, reason 
 where ws_web_page_sk = wp_web_page_sk
   and ws_item_sk = wr_item_sk
   and ws_order_number = wr_order_number
   and ws_sold_date_sk = d_date_sk and d_year = 1998
   and cd1.cd_demo_sk = wr_refunded_cdemo_sk 
   and cd2.cd_demo_sk = wr_returning_cdemo_sk
   and ca_address_sk = wr_refunded_addr_sk
   and r_reason_sk = wr_reason_sk
   and
   (
    (
     cd1.cd_marital_status = 'M'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = '4 yr Degree'
     and 
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 100.00 and 150.00
    )
   or
    (
     cd1.cd_marital_status = 'D'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Primary' 
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 50.00 and 100.00
    )
   or
    (
     cd1.cd_marital_status = 'U'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Advanced Degree'
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 150.00 and 200.00
    )
   )
   and
   (
    (
     ca_country = 'United States'
     and
     ca_state in ('KY', 'GA', 'NM')
     and ws_net_profit between 100 and 200  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('MT', 'OR', 'IN')
     and ws_net_profit between 150 and 300  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('WI', 'MO', 'WV')
     and ws_net_profit between 50 and 250  
    )
   )
group by r_reason_desc
order by substr(r_reason_desc,1,20)
        ,avg(ws_quantity)
        ,avg(wr_refunded_cash)
        ,avg(wr_fee)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@reason
POSTHOOK: Input: default@web_page
POSTHOOK: Input: default@web_returns
POSTHOOK: Input: default@web_sales
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: web_returns
                  properties:
                    hive.sql.query SELECT "t4"."r_reason_desc", SUM("t23"."ws_quantity") AS "$f1", COUNT("t23"."ws_quantity") AS "$f2", SUM("t1"."wr_refunded_cash") AS "$f3", COUNT("t1"."wr_refunded_cash") AS "$f4", SUM("t1"."wr_fee") AS "$f5", COUNT("t1"."wr_fee") AS "$f6"
FROM (SELECT "wr_item_sk", "wr_refunded_cdemo_sk", "wr_refunded_addr_sk", "wr_returning_cdemo_sk", "wr_reason_sk", "wr_order_number", "wr_fee", "wr_refunded_cash"
FROM (SELECT "wr_item_sk", "wr_refunded_cdemo_sk", "wr_refunded_addr_sk", "wr_returning_cdemo_sk", "wr_reason_sk", "wr_order_number", "wr_fee", "wr_refunded_cash"
FROM "web_returns") AS "t"
WHERE "wr_item_sk" IS NOT NULL AND ("wr_order_number" IS NOT NULL AND "wr_refunded_cdemo_sk" IS NOT NULL) AND ("wr_returning_cdemo_sk" IS NOT NULL AND ("wr_refunded_addr_sk" IS NOT NULL AND "wr_reason_sk" IS NOT NULL))) AS "t1"
INNER JOIN (SELECT "r_reason_sk", "r_reason_desc"
FROM (SELECT "r_reason_sk", "r_reason_desc"
FROM "reason") AS "t2"
WHERE "r_reason_sk" IS NOT NULL) AS "t4" ON "t1"."wr_reason_sk" = "t4"."r_reason_sk"
INNER JOIN (SELECT "ca_address_sk", "ca_state" IN ('KY', 'GA', 'NM') AS "IN", "ca_state" IN ('MT', 'OR', 'IN') AS "IN2", "ca_state" IN ('WI', 'MO', 'WV') AS "IN3"
FROM (SELECT "ca_address_sk", "ca_state", "ca_country"
FROM "customer_address") AS "t5"
WHERE "ca_state" IN ('KY', 'GA', 'NM', 'MT', 'OR', 'IN', 'WI', 'MO', 'WV') AND ("ca_country" = 'United States' AND "ca_address_sk" IS NOT NULL)) AS "t7" ON "t1"."wr_refunded_addr_sk" = "t7"."ca_address_sk"
INNER JOIN (SELECT "cd_demo_sk", "cd_marital_status", "cd_education_status", "cd_marital_status" = 'M' AS "=", "cd_education_status" = '4 yr Degree' AS "=4", "cd_marital_status" = 'D' AS "=5", "cd_education_status" = 'Primary' AS "=6", "cd_marital_status" = 'U' AS "=7", "cd_education_status" = 'Advanced Degree' AS "=8"
FROM (SELECT "cd_demo_sk", "cd_marital_status", "cd_education_status"
FROM "customer_demographics") AS "t8"
WHERE "cd_marital_status" IN ('M', 'D', 'U') AND ("cd_education_status" IN ('4 yr Degree', 'Primary', 'Advanced Degree') AND "cd_demo_sk" IS NOT NULL)) AS "t10" ON "t1"."wr_refunded_cdemo_sk" = "t10"."cd_demo_sk"
INNER JOIN (SELECT "cd_demo_sk", "cd_marital_status", "cd_education_status"
FROM (SELECT "cd_demo_sk", "cd_marital_status", "cd_education_status"
FROM "customer_demographics") AS "t11"
WHERE "cd_marital_status" IN ('M', 'D', 'U') AND ("cd_education_status" IN ('4 yr Degree', 'Primary', 'Advanced Degree') AND "cd_demo_sk" IS NOT NULL)) AS "t13" ON "t1"."wr_returning_cdemo_sk" = "t13"."cd_demo_sk" AND "t10"."cd_marital_status" = "t13"."cd_marital_status" AND "t10"."cd_education_status" = "t13"."cd_education_status"
INNER JOIN (SELECT "t16"."ws_sold_date_sk", "t16"."ws_item_sk", "t16"."ws_web_page_sk", "t16"."ws_order_number", "t16"."ws_quantity", "t16"."BETWEEN", "t16"."BETWEEN6", "t16"."BETWEEN7", "t16"."BETWEEN8", "t16"."BETWEEN9", "t16"."BETWEEN10", "t19"."wp_web_page_sk", "t22"."d_date_sk"
FROM (SELECT "ws_sold_date_sk", "ws_item_sk", "ws_web_page_sk", "ws_order_number", "ws_quantity", "ws_net_profit" BETWEEN 100 AND 200 AS "BETWEEN", "ws_net_profit" BETWEEN 150 AND 300 AS "BETWEEN6", "ws_net_profit" BETWEEN 50 AND 250 AS "BETWEEN7", "ws_sales_price" BETWEEN 100 AND 150 AS "BETWEEN8", "ws_sales_price" BETWEEN 50 AND 100 AS "BETWEEN9", "ws_sales_price" BETWEEN 150 AND 200 AS "BETWEEN10"
FROM (SELECT "ws_sold_date_sk", "ws_item_sk", "ws_web_page_sk", "ws_order_number", "ws_quantity", "ws_sales_price", "ws_net_profit"
FROM "web_sales") AS "t14"
WHERE (100 <= "ws_sales_price" OR ("ws_sales_price" <= 150 OR 50 <= "ws_sales_price") OR ("ws_sales_price" <= 100 OR (150 <= "ws_sales_price" OR "ws_sales_price" <= 200))) AND ((100 <= "ws_net_profit" OR ("ws_net_profit" <= 200 OR 150 <= "ws_net_profit") OR ("ws_net_profit" <= 300 OR (50 <= "ws_net_profit" OR "ws_net_profit" <= 250))) AND "ws_item_sk" IS NOT NULL) AND ("ws_order_number" IS NOT NULL AND ("ws_web_page_sk" IS NOT NULL AND "ws_sold_date_sk" IS NOT NULL))) AS "t16"
INNER JOIN (SELECT "wp_web_page_sk"
FROM (SELECT "wp_web_page_sk"
FROM "web_page") AS "t17"
WHERE "wp_web_page_sk" IS NOT NULL) AS "t19" ON "t16"."ws_web_page_sk" = "t19"."wp_web_page_sk"
INNER JOIN (SELECT "d_date_sk"
FROM (SELECT "d_date_sk", "d_year"
FROM "date_dim") AS "t20"
WHERE "d_year" = 1998 AND "d_date_sk" IS NOT NULL) AS "t22" ON "t16"."ws_sold_date_sk" = "t22"."d_date_sk") AS "t23" ON "t1"."wr_item_sk" = "t23"."ws_item_sk" AND "t1"."wr_order_number" = "t23"."ws_order_number" AND ("t10"."=" AND "t10"."=4" AND "t23"."BETWEEN8" OR "t10"."=5" AND "t10"."=6" AND "t23"."BETWEEN9" OR "t10"."=7" AND "t10"."=8" AND "t23"."BETWEEN10") AND ("t7"."IN" AND "t23"."BETWEEN" OR "t7"."IN2" AND "t23"."BETWEEN6" OR "t7"."IN3" AND "t23"."BETWEEN7")
GROUP BY "t4"."r_reason_desc"
                    hive.sql.query.fieldNames r_reason_desc,$f1,$f2,$f3,$f4,$f5,$f6
                    hive.sql.query.fieldTypes string,bigint,bigint,decimal(17,2),bigint,decimal(17,2),bigint
                    hive.sql.query.split false
                  Statistics: Num rows: 1 Data size: 440 Basic stats: COMPLETE Column stats: NONE
                  Top N Key Operator
                    sort order: ++++
                    keys: substr(r_reason_desc, 1, 20) (type: string), (UDFToDouble($f1) / $f2) (type: double), CAST( ($f3 / $f4) AS decimal(11,6)) (type: decimal(11,6)), CAST( ($f5 / $f6) AS decimal(11,6)) (type: decimal(11,6))
                    null sort order: zzzz
                    Statistics: Num rows: 1 Data size: 440 Basic stats: COMPLETE Column stats: NONE
                    top n: 100
                    Select Operator
                      expressions: (UDFToDouble($f1) / $f2) (type: double), CAST( ($f3 / $f4) AS decimal(11,6)) (type: decimal(11,6)), CAST( ($f5 / $f6) AS decimal(11,6)) (type: decimal(11,6)), substr(r_reason_desc, 1, 20) (type: string)
                      outputColumnNames: _col4, _col5, _col6, _col7
                      Statistics: Num rows: 1 Data size: 440 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col7 (type: string), _col4 (type: double), _col5 (type: decimal(11,6)), _col6 (type: decimal(11,6))
                        null sort order: zzzz
                        sort order: ++++
                        Statistics: Num rows: 1 Data size: 440 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: double), KEY.reducesinkkey2 (type: decimal(11,6)), KEY.reducesinkkey3 (type: decimal(11,6))
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 440 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 1 Data size: 440 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 440 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

