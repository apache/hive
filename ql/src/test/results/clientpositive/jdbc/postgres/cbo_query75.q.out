CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(cr_item_sk=[$2], cr_order_number=[$16], cr_return_quantity=[$17], cr_return_amount=[$18])
    JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(cs_sold_date_sk=[$0], cs_item_sk=[$15], cs_order_number=[$17], cs_quantity=[$18], cs_ext_sales_price=[$23])
    JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(sr_item_sk=[$2], sr_ticket_number=[$9], sr_return_quantity=[$10], sr_return_amt=[$11])
    JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_ticket_number=[$9], ss_quantity=[$10], ss_ext_sales_price=[$15])
    JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(wr_item_sk=[$2], wr_order_number=[$13], wr_return_quantity=[$14], wr_return_amt=[$15])
    JdbcHiveTableScan(table=[[default, web_returns]], table:alias=[web_returns])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_order_number=[$17], ws_quantity=[$18], ws_ext_sales_price=[$23])
    JdbcHiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])

CTE Suggestion:
JdbcProject(d_date_sk=[$0])
  JdbcFilter(condition=[AND(=($1, 2001), IS NOT NULL($0))])
    JdbcProject(d_date_sk=[$0], d_year=[$6])
      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

CTE Suggestion:
JdbcProject(d_date_sk=[$0])
  JdbcFilter(condition=[AND(=($1, 2002), IS NOT NULL($0))])
    JdbcProject(d_date_sk=[$0], d_year=[$6])
      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

CTE Suggestion:
JdbcProject(i_item_sk=[$0], i_brand_id=[$1], i_class_id=[$2], i_category_id=[$3], i_manufact_id=[$5])
  JdbcFilter(condition=[AND(=($4, _UTF-16LE'Sports'), IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($5))])
    JdbcProject(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11], i_category=[$12], i_manufact_id=[$13])
      JdbcHiveTableScan(table=[[default, item]], table:alias=[item])

PREHOOK: query: explain cbo
WITH all_sales AS (
 SELECT d_year
       ,i_brand_id
       ,i_class_id
       ,i_category_id
       ,i_manufact_id
       ,SUM(sales_cnt) AS sales_cnt
       ,SUM(sales_amt) AS sales_amt
 FROM (SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt
             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt
       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk
                          JOIN date_dim ON d_date_sk=cs_sold_date_sk
                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number 
                                                    AND cs_item_sk=cr_item_sk)
       WHERE i_category='Sports'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt
             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt
       FROM store_sales JOIN item ON i_item_sk=ss_item_sk
                        JOIN date_dim ON d_date_sk=ss_sold_date_sk
                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number 
                                                AND ss_item_sk=sr_item_sk)
       WHERE i_category='Sports'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt
             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt
       FROM web_sales JOIN item ON i_item_sk=ws_item_sk
                      JOIN date_dim ON d_date_sk=ws_sold_date_sk
                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number 
                                            AND ws_item_sk=wr_item_sk)
       WHERE i_category='Sports') sales_detail
 GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)
 SELECT  prev_yr.d_year AS prev_year
                          ,curr_yr.d_year AS year
                          ,curr_yr.i_brand_id
                          ,curr_yr.i_class_id
                          ,curr_yr.i_category_id
                          ,curr_yr.i_manufact_id
                          ,prev_yr.sales_cnt AS prev_yr_cnt
                          ,curr_yr.sales_cnt AS curr_yr_cnt
                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff
                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff
 FROM all_sales curr_yr, all_sales prev_yr
 WHERE curr_yr.i_brand_id=prev_yr.i_brand_id
   AND curr_yr.i_class_id=prev_yr.i_class_id
   AND curr_yr.i_category_id=prev_yr.i_category_id
   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id
   AND curr_yr.d_year=2002
   AND prev_yr.d_year=2002-1
   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9
 ORDER BY sales_cnt_diff
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_returns
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_returns
PREHOOK: Input: default@web_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
WITH all_sales AS (
 SELECT d_year
       ,i_brand_id
       ,i_class_id
       ,i_category_id
       ,i_manufact_id
       ,SUM(sales_cnt) AS sales_cnt
       ,SUM(sales_amt) AS sales_amt
 FROM (SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt
             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt
       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk
                          JOIN date_dim ON d_date_sk=cs_sold_date_sk
                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number 
                                                    AND cs_item_sk=cr_item_sk)
       WHERE i_category='Sports'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt
             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt
       FROM store_sales JOIN item ON i_item_sk=ss_item_sk
                        JOIN date_dim ON d_date_sk=ss_sold_date_sk
                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number 
                                                AND ss_item_sk=sr_item_sk)
       WHERE i_category='Sports'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt
             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt
       FROM web_sales JOIN item ON i_item_sk=ws_item_sk
                      JOIN date_dim ON d_date_sk=ws_sold_date_sk
                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number 
                                            AND ws_item_sk=wr_item_sk)
       WHERE i_category='Sports') sales_detail
 GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)
 SELECT  prev_yr.d_year AS prev_year
                          ,curr_yr.d_year AS year
                          ,curr_yr.i_brand_id
                          ,curr_yr.i_class_id
                          ,curr_yr.i_category_id
                          ,curr_yr.i_manufact_id
                          ,prev_yr.sales_cnt AS prev_yr_cnt
                          ,curr_yr.sales_cnt AS curr_yr_cnt
                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff
                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff
 FROM all_sales curr_yr, all_sales prev_yr
 WHERE curr_yr.i_brand_id=prev_yr.i_brand_id
   AND curr_yr.i_class_id=prev_yr.i_class_id
   AND curr_yr.i_category_id=prev_yr.i_category_id
   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id
   AND curr_yr.d_year=2002
   AND prev_yr.d_year=2002-1
   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9
 ORDER BY sales_cnt_diff
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_returns
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_returns
POSTHOOK: Input: default@web_sales
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcProject(prev_year=[CAST(2001):INTEGER], year=[CAST(2002):INTEGER], i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], i_manufact_id=[$3], prev_yr_cnt=[$4], curr_yr_cnt=[$5], sales_cnt_diff=[$6], sales_amt_diff=[$7])
    JdbcSort(sort0=[$6], dir0=[ASC], fetch=[100])
      JdbcProject(i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], i_manufact_id=[$3], prev_yr_cnt=[$10], curr_yr_cnt=[$4], sales_cnt_diff=[-($4, $10)], sales_amt_diff=[-($5, $11)])
        JdbcJoin(condition=[AND(=($0, $6), =($1, $7), =($2, $8), =($3, $9), <(/(CAST($4):DECIMAL(17, 2), CAST($10):DECIMAL(17, 2)), 0.9:DECIMAL(1, 1)))], joinType=[inner])
          JdbcAggregate(group=[{0, 1, 2, 3}], agg#0=[sum($4)], agg#1=[sum($5)])
            JdbcAggregate(group=[{0, 1, 2, 3, 4, 5}])
              JdbcProject(i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], i_manufact_id=[$3], sales_cnt=[$4], sales_amt=[$5])
                JdbcUnion(all=[true])
                  JdbcProject(i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], i_manufact_id=[$3], sales_cnt=[$4], sales_amt=[$5])
                    JdbcAggregate(group=[{0, 1, 2, 3, 4, 5}])
                      JdbcProject(i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], i_manufact_id=[$3], sales_cnt=[$4], sales_amt=[$5])
                        JdbcUnion(all=[true])
                          JdbcProject(i_brand_id=[$11], i_class_id=[$12], i_category_id=[$13], i_manufact_id=[$14], sales_cnt=[-($3, CASE(IS NOT NULL($8), $8, 0))], sales_amt=[-($4, CASE(IS NOT NULL($9), $9, 0:DECIMAL(1, 0)))])
                            JdbcJoin(condition=[=($10, $1)], joinType=[inner])
                              JdbcJoin(condition=[AND(=($2, $7), =($1, $6))], joinType=[left])
                                JdbcJoin(condition=[=($5, $0)], joinType=[inner])
                                  JdbcProject(cs_sold_date_sk=[$0], cs_item_sk=[$1], cs_order_number=[$2], cs_quantity=[$3], cs_ext_sales_price=[$4])
                                    JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                      JdbcProject(cs_sold_date_sk=[$0], cs_item_sk=[$15], cs_order_number=[$17], cs_quantity=[$18], cs_ext_sales_price=[$23])
                                        JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                                  JdbcProject(d_date_sk=[$0])
                                    JdbcFilter(condition=[AND(=($1, 2002), IS NOT NULL($0))])
                                      JdbcProject(d_date_sk=[$0], d_year=[$6])
                                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                                JdbcProject(cr_item_sk=[$0], cr_order_number=[$1], cr_return_quantity=[$2], cr_return_amount=[$3])
                                  JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                    JdbcProject(cr_item_sk=[$2], cr_order_number=[$16], cr_return_quantity=[$17], cr_return_amount=[$18])
                                      JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])
                              JdbcProject(i_item_sk=[$0], i_brand_id=[$1], i_class_id=[$2], i_category_id=[$3], i_manufact_id=[$5])
                                JdbcFilter(condition=[AND(=($4, _UTF-16LE'Sports'), IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($5))])
                                  JdbcProject(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11], i_category=[$12], i_manufact_id=[$13])
                                    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                          JdbcProject(i_brand_id=[$11], i_class_id=[$12], i_category_id=[$13], i_manufact_id=[$14], sales_cnt=[-($3, CASE(IS NOT NULL($8), $8, 0))], sales_amt=[-($4, CASE(IS NOT NULL($9), $9, 0:DECIMAL(1, 0)))])
                            JdbcJoin(condition=[=($10, $1)], joinType=[inner])
                              JdbcJoin(condition=[AND(=($2, $7), =($1, $6))], joinType=[left])
                                JdbcJoin(condition=[=($5, $0)], joinType=[inner])
                                  JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_ticket_number=[$2], ss_quantity=[$3], ss_ext_sales_price=[$4])
                                    JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                      JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_ticket_number=[$9], ss_quantity=[$10], ss_ext_sales_price=[$15])
                                        JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                                  JdbcProject(d_date_sk=[$0])
                                    JdbcFilter(condition=[AND(=($1, 2002), IS NOT NULL($0))])
                                      JdbcProject(d_date_sk=[$0], d_year=[$6])
                                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                                JdbcProject(sr_item_sk=[$0], sr_ticket_number=[$1], sr_return_quantity=[$2], sr_return_amt=[$3])
                                  JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                    JdbcProject(sr_item_sk=[$2], sr_ticket_number=[$9], sr_return_quantity=[$10], sr_return_amt=[$11])
                                      JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                              JdbcProject(i_item_sk=[$0], i_brand_id=[$1], i_class_id=[$2], i_category_id=[$3], i_manufact_id=[$5])
                                JdbcFilter(condition=[AND(=($4, _UTF-16LE'Sports'), IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($5))])
                                  JdbcProject(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11], i_category=[$12], i_manufact_id=[$13])
                                    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                  JdbcProject(i_brand_id=[$11], i_class_id=[$12], i_category_id=[$13], i_manufact_id=[$14], sales_cnt=[-($3, CASE(IS NOT NULL($8), $8, 0))], sales_amt=[-($4, CASE(IS NOT NULL($9), $9, 0:DECIMAL(1, 0)))])
                    JdbcJoin(condition=[=($10, $1)], joinType=[inner])
                      JdbcJoin(condition=[AND(=($2, $7), =($1, $6))], joinType=[left])
                        JdbcJoin(condition=[=($5, $0)], joinType=[inner])
                          JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$1], ws_order_number=[$2], ws_quantity=[$3], ws_ext_sales_price=[$4])
                            JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                              JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_order_number=[$17], ws_quantity=[$18], ws_ext_sales_price=[$23])
                                JdbcHiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                          JdbcProject(d_date_sk=[$0])
                            JdbcFilter(condition=[AND(=($1, 2002), IS NOT NULL($0))])
                              JdbcProject(d_date_sk=[$0], d_year=[$6])
                                JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                        JdbcProject(wr_item_sk=[$0], wr_order_number=[$1], wr_return_quantity=[$2], wr_return_amt=[$3])
                          JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                            JdbcProject(wr_item_sk=[$2], wr_order_number=[$13], wr_return_quantity=[$14], wr_return_amt=[$15])
                              JdbcHiveTableScan(table=[[default, web_returns]], table:alias=[web_returns])
                      JdbcProject(i_item_sk=[$0], i_brand_id=[$1], i_class_id=[$2], i_category_id=[$3], i_manufact_id=[$5])
                        JdbcFilter(condition=[AND(=($4, _UTF-16LE'Sports'), IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($5))])
                          JdbcProject(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11], i_category=[$12], i_manufact_id=[$13])
                            JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
          JdbcAggregate(group=[{0, 1, 2, 3}], agg#0=[sum($4)], agg#1=[sum($5)])
            JdbcAggregate(group=[{0, 1, 2, 3, 4, 5}])
              JdbcProject(i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], i_manufact_id=[$3], sales_cnt=[$4], sales_amt=[$5])
                JdbcUnion(all=[true])
                  JdbcProject(i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], i_manufact_id=[$3], sales_cnt=[$4], sales_amt=[$5])
                    JdbcAggregate(group=[{0, 1, 2, 3, 4, 5}])
                      JdbcProject(i_brand_id=[$0], i_class_id=[$1], i_category_id=[$2], i_manufact_id=[$3], sales_cnt=[$4], sales_amt=[$5])
                        JdbcUnion(all=[true])
                          JdbcProject(i_brand_id=[$11], i_class_id=[$12], i_category_id=[$13], i_manufact_id=[$14], sales_cnt=[-($3, CASE(IS NOT NULL($8), $8, 0))], sales_amt=[-($4, CASE(IS NOT NULL($9), $9, 0:DECIMAL(1, 0)))])
                            JdbcJoin(condition=[=($10, $1)], joinType=[inner])
                              JdbcJoin(condition=[AND(=($2, $7), =($1, $6))], joinType=[left])
                                JdbcJoin(condition=[=($5, $0)], joinType=[inner])
                                  JdbcProject(cs_sold_date_sk=[$0], cs_item_sk=[$1], cs_order_number=[$2], cs_quantity=[$3], cs_ext_sales_price=[$4])
                                    JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                      JdbcProject(cs_sold_date_sk=[$0], cs_item_sk=[$15], cs_order_number=[$17], cs_quantity=[$18], cs_ext_sales_price=[$23])
                                        JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                                  JdbcProject(d_date_sk=[$0])
                                    JdbcFilter(condition=[AND(=($1, 2001), IS NOT NULL($0))])
                                      JdbcProject(d_date_sk=[$0], d_year=[$6])
                                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                                JdbcProject(cr_item_sk=[$0], cr_order_number=[$1], cr_return_quantity=[$2], cr_return_amount=[$3])
                                  JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                    JdbcProject(cr_item_sk=[$2], cr_order_number=[$16], cr_return_quantity=[$17], cr_return_amount=[$18])
                                      JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])
                              JdbcProject(i_item_sk=[$0], i_brand_id=[$1], i_class_id=[$2], i_category_id=[$3], i_manufact_id=[$5])
                                JdbcFilter(condition=[AND(=($4, _UTF-16LE'Sports'), IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($5))])
                                  JdbcProject(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11], i_category=[$12], i_manufact_id=[$13])
                                    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                          JdbcProject(i_brand_id=[$11], i_class_id=[$12], i_category_id=[$13], i_manufact_id=[$14], sales_cnt=[-($3, CASE(IS NOT NULL($8), $8, 0))], sales_amt=[-($4, CASE(IS NOT NULL($9), $9, 0:DECIMAL(1, 0)))])
                            JdbcJoin(condition=[=($10, $1)], joinType=[inner])
                              JdbcJoin(condition=[AND(=($2, $7), =($1, $6))], joinType=[left])
                                JdbcJoin(condition=[=($5, $0)], joinType=[inner])
                                  JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_ticket_number=[$2], ss_quantity=[$3], ss_ext_sales_price=[$4])
                                    JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                      JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_ticket_number=[$9], ss_quantity=[$10], ss_ext_sales_price=[$15])
                                        JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                                  JdbcProject(d_date_sk=[$0])
                                    JdbcFilter(condition=[AND(=($1, 2001), IS NOT NULL($0))])
                                      JdbcProject(d_date_sk=[$0], d_year=[$6])
                                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                                JdbcProject(sr_item_sk=[$0], sr_ticket_number=[$1], sr_return_quantity=[$2], sr_return_amt=[$3])
                                  JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                                    JdbcProject(sr_item_sk=[$2], sr_ticket_number=[$9], sr_return_quantity=[$10], sr_return_amt=[$11])
                                      JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                              JdbcProject(i_item_sk=[$0], i_brand_id=[$1], i_class_id=[$2], i_category_id=[$3], i_manufact_id=[$5])
                                JdbcFilter(condition=[AND(=($4, _UTF-16LE'Sports'), IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($5))])
                                  JdbcProject(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11], i_category=[$12], i_manufact_id=[$13])
                                    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                  JdbcProject(i_brand_id=[$11], i_class_id=[$12], i_category_id=[$13], i_manufact_id=[$14], sales_cnt=[-($3, CASE(IS NOT NULL($8), $8, 0))], sales_amt=[-($4, CASE(IS NOT NULL($9), $9, 0:DECIMAL(1, 0)))])
                    JdbcJoin(condition=[=($10, $1)], joinType=[inner])
                      JdbcJoin(condition=[AND(=($2, $7), =($1, $6))], joinType=[left])
                        JdbcJoin(condition=[=($5, $0)], joinType=[inner])
                          JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$1], ws_order_number=[$2], ws_quantity=[$3], ws_ext_sales_price=[$4])
                            JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                              JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_order_number=[$17], ws_quantity=[$18], ws_ext_sales_price=[$23])
                                JdbcHiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                          JdbcProject(d_date_sk=[$0])
                            JdbcFilter(condition=[AND(=($1, 2001), IS NOT NULL($0))])
                              JdbcProject(d_date_sk=[$0], d_year=[$6])
                                JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                        JdbcProject(wr_item_sk=[$0], wr_order_number=[$1], wr_return_quantity=[$2], wr_return_amt=[$3])
                          JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                            JdbcProject(wr_item_sk=[$2], wr_order_number=[$13], wr_return_quantity=[$14], wr_return_amt=[$15])
                              JdbcHiveTableScan(table=[[default, web_returns]], table:alias=[web_returns])
                      JdbcProject(i_item_sk=[$0], i_brand_id=[$1], i_class_id=[$2], i_category_id=[$3], i_manufact_id=[$5])
                        JdbcFilter(condition=[AND(=($4, _UTF-16LE'Sports'), IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($5))])
                          JdbcProject(i_item_sk=[$0], i_brand_id=[$7], i_class_id=[$9], i_category_id=[$11], i_category=[$12], i_manufact_id=[$13])
                            JdbcHiveTableScan(table=[[default, item]], table:alias=[item])

