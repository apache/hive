PREHOOK: query: explain
with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from web_sales) x
        union all
       (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@web_sales
#### A masked pattern was here ####
POSTHOOK: query: explain
with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from web_sales) x
        union all
       (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@web_sales
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: web_sales
                  properties:
                    hive.sql.query SELECT "t11"."$f0", "t11"."$f1", "t11"."$f2", "t11"."$f3", "t11"."$f4", "t11"."$f5", "t11"."$f6", "t11"."$f7", "t14"."d_week_seq", "t31"."$f0" AS "$f00", "t31"."$f1" AS "$f10", "t31"."$f2" AS "$f20", "t31"."$f3" AS "$f30", "t31"."$f4" AS "$f40", "t31"."$f5" AS "$f50", "t31"."$f6" AS "$f60", "t31"."$f7" AS "$f70", "t31"."d_week_seq" AS "d_week_seq0"
FROM (SELECT "t9"."d_week_seq" AS "$f0", SUM(CASE WHEN "t9"."=" THEN "t6"."ws_ext_sales_price" ELSE NULL END) AS "$f1", SUM(CASE WHEN "t9"."=3" THEN "t6"."ws_ext_sales_price" ELSE NULL END) AS "$f2", SUM(CASE WHEN "t9"."=4" THEN "t6"."ws_ext_sales_price" ELSE NULL END) AS "$f3", SUM(CASE WHEN "t9"."=5" THEN "t6"."ws_ext_sales_price" ELSE NULL END) AS "$f4", SUM(CASE WHEN "t9"."=6" THEN "t6"."ws_ext_sales_price" ELSE NULL END) AS "$f5", SUM(CASE WHEN "t9"."=7" THEN "t6"."ws_ext_sales_price" ELSE NULL END) AS "$f6", SUM(CASE WHEN "t9"."=8" THEN "t6"."ws_ext_sales_price" ELSE NULL END) AS "$f7"
FROM (SELECT "ws_sold_date_sk", "ws_ext_sales_price"
FROM (SELECT "ws_sold_date_sk", "ws_ext_sales_price"
FROM (SELECT "ws_sold_date_sk", "ws_ext_sales_price"
FROM "web_sales") AS "t"
WHERE "ws_sold_date_sk" IS NOT NULL
UNION ALL
SELECT "cs_sold_date_sk", "cs_ext_sales_price"
FROM (SELECT "cs_sold_date_sk", "cs_ext_sales_price"
FROM "catalog_sales") AS "t2"
WHERE "cs_sold_date_sk" IS NOT NULL) AS "t5") AS "t6"
INNER JOIN (SELECT "d_date_sk", "d_week_seq", "d_day_name" = 'Sunday' AS "=", "d_day_name" = 'Monday' AS "=3", "d_day_name" = 'Tuesday' AS "=4", "d_day_name" = 'Wednesday' AS "=5", "d_day_name" = 'Thursday' AS "=6", "d_day_name" = 'Friday' AS "=7", "d_day_name" = 'Saturday' AS "=8"
FROM (SELECT "d_date_sk", "d_week_seq", "d_day_name"
FROM "date_dim") AS "t7"
WHERE "d_date_sk" IS NOT NULL AND "d_week_seq" IS NOT NULL) AS "t9" ON "t6"."ws_sold_date_sk" = "t9"."d_date_sk"
GROUP BY "t9"."d_week_seq") AS "t11"
INNER JOIN (SELECT "d_week_seq"
FROM (SELECT "d_week_seq", "d_year"
FROM "date_dim") AS "t12"
WHERE "d_year" = 2001 AND "d_week_seq" IS NOT NULL) AS "t14" ON "t11"."$f0" = "t14"."d_week_seq"
INNER JOIN (SELECT "t27"."$f0", "t27"."$f1", "t27"."$f2", "t27"."$f3", "t27"."$f4", "t27"."$f5", "t27"."$f6", "t27"."$f7", "t30"."d_week_seq"
FROM (SELECT "t25"."d_week_seq" AS "$f0", SUM(CASE WHEN "t25"."=" THEN "t22"."ws_ext_sales_price" ELSE NULL END) AS "$f1", SUM(CASE WHEN "t25"."=3" THEN "t22"."ws_ext_sales_price" ELSE NULL END) AS "$f2", SUM(CASE WHEN "t25"."=4" THEN "t22"."ws_ext_sales_price" ELSE NULL END) AS "$f3", SUM(CASE WHEN "t25"."=5" THEN "t22"."ws_ext_sales_price" ELSE NULL END) AS "$f4", SUM(CASE WHEN "t25"."=6" THEN "t22"."ws_ext_sales_price" ELSE NULL END) AS "$f5", SUM(CASE WHEN "t25"."=7" THEN "t22"."ws_ext_sales_price" ELSE NULL END) AS "$f6", SUM(CASE WHEN "t25"."=8" THEN "t22"."ws_ext_sales_price" ELSE NULL END) AS "$f7"
FROM (SELECT "ws_sold_date_sk", "ws_ext_sales_price"
FROM (SELECT "ws_sold_date_sk", "ws_ext_sales_price"
FROM (SELECT "ws_sold_date_sk", "ws_ext_sales_price"
FROM "web_sales") AS "t15"
WHERE "ws_sold_date_sk" IS NOT NULL
UNION ALL
SELECT "cs_sold_date_sk", "cs_ext_sales_price"
FROM (SELECT "cs_sold_date_sk", "cs_ext_sales_price"
FROM "catalog_sales") AS "t18"
WHERE "cs_sold_date_sk" IS NOT NULL) AS "t21") AS "t22"
INNER JOIN (SELECT "d_date_sk", "d_week_seq", "d_day_name" = 'Sunday' AS "=", "d_day_name" = 'Monday' AS "=3", "d_day_name" = 'Tuesday' AS "=4", "d_day_name" = 'Wednesday' AS "=5", "d_day_name" = 'Thursday' AS "=6", "d_day_name" = 'Friday' AS "=7", "d_day_name" = 'Saturday' AS "=8"
FROM (SELECT "d_date_sk", "d_week_seq", "d_day_name"
FROM "date_dim") AS "t23"
WHERE "d_date_sk" IS NOT NULL AND "d_week_seq" IS NOT NULL) AS "t25" ON "t22"."ws_sold_date_sk" = "t25"."d_date_sk"
GROUP BY "t25"."d_week_seq") AS "t27"
INNER JOIN (SELECT "d_week_seq"
FROM (SELECT "d_week_seq", "d_year"
FROM "date_dim") AS "t28"
WHERE "d_year" = 2002 AND "d_week_seq" IS NOT NULL) AS "t30" ON "t27"."$f0" = "t30"."d_week_seq") AS "t31" ON "t11"."$f0" = "t31"."$f0" - 53
                    hive.sql.query.fieldNames $f0,$f1,$f2,$f3,$f4,$f5,$f6,$f7,d_week_seq,$f00,$f10,$f20,$f30,$f40,$f50,$f60,$f70,d_week_seq0
                    hive.sql.query.fieldTypes int,decimal(17,2),decimal(17,2),decimal(17,2),decimal(17,2),decimal(17,2),decimal(17,2),decimal(17,2),int,int,decimal(17,2),decimal(17,2),decimal(17,2),decimal(17,2),decimal(17,2),decimal(17,2),decimal(17,2),int
                    hive.sql.query.split false
                  Statistics: Num rows: 1 Data size: 1572 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: $f0 (type: int), round(($f1 / $f10), 2) (type: decimal(20,2)), round(($f2 / $f20), 2) (type: decimal(20,2)), round(($f3 / $f30), 2) (type: decimal(20,2)), round(($f4 / $f40), 2) (type: decimal(20,2)), round(($f5 / $f50), 2) (type: decimal(20,2)), round(($f6 / $f60), 2) (type: decimal(20,2)), round(($f7 / $f70), 2) (type: decimal(20,2))
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                    Statistics: Num rows: 1 Data size: 1572 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Statistics: Num rows: 1 Data size: 1572 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: decimal(20,2)), _col2 (type: decimal(20,2)), _col3 (type: decimal(20,2)), _col4 (type: decimal(20,2)), _col5 (type: decimal(20,2)), _col6 (type: decimal(20,2)), _col7 (type: decimal(20,2))
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: decimal(20,2)), VALUE._col1 (type: decimal(20,2)), VALUE._col2 (type: decimal(20,2)), VALUE._col3 (type: decimal(20,2)), VALUE._col4 (type: decimal(20,2)), VALUE._col5 (type: decimal(20,2)), VALUE._col6 (type: decimal(20,2))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                Statistics: Num rows: 1 Data size: 1572 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 1572 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

