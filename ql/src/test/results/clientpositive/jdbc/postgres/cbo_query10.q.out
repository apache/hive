CTE Suggestion:
JdbcProject(d_date_sk=[$0])
  JdbcFilter(condition=[AND(=($1, 2002), BETWEEN(false, $2, 4, 7), IS NOT NULL($0))])
    JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

PREHOOK: query: explain cbo
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3,
  cd_dep_count,
  count(*) cnt4,
  cd_dep_employed_count,
  count(*) cnt5,
  cd_dep_college_count,
  count(*) cnt6
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_county in ('Walker County','Richland County','Gaines County','Douglas County','Dona Ana County') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2002 and
                d_moy between 4 and 4+3) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 ANd 4+3) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 and 4+3))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3,
  cd_dep_count,
  count(*) cnt4,
  cd_dep_employed_count,
  count(*) cnt5,
  cd_dep_college_count,
  count(*) cnt6
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_county in ('Walker County','Richland County','Gaines County','Douglas County','Dona Ana County') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2002 and
                d_moy between 4 and 4+3) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 ANd 4+3) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_moy between 4 and 4+3))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
#### A masked pattern was here ####
CBO PLAN:
HiveSortLimit(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$4], sort4=[$6], sort5=[$8], sort6=[$10], sort7=[$12], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], dir4=[ASC], dir5=[ASC], dir6=[ASC], dir7=[ASC], fetch=[100])
  HiveProject(cd_gender=[$0], cd_marital_status=[$1], cd_education_status=[$2], cnt1=[$8], cd_purchase_estimate=[$3], cnt2=[$8], cd_credit_rating=[$4], cnt3=[$8], cd_dep_count=[$5], cnt4=[$8], cd_dep_employed_count=[$6], cnt5=[$8], cd_dep_college_count=[$7], cnt6=[$8])
    HiveAggregate(group=[{6, 7, 8, 9, 10, 11, 12, 13}], agg#0=[count()])
      HiveFilter(condition=[OR(IS NOT NULL($14), IS NOT NULL($16))])
        HiveJoin(condition=[=($0, $17)], joinType=[left], algorithm=[none], cost=[not available])
          HiveJoin(condition=[=($0, $15)], joinType=[left], algorithm=[none], cost=[not available])
            HiveSemiJoin(condition=[=($0, $14)], joinType=[semi])
              HiveProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_addr_sk=[$2], ca_address_sk=[$3], ca_county=[$4], cd_demo_sk=[$5], cd_gender=[$6], cd_marital_status=[$7], cd_education_status=[$8], cd_purchase_estimate=[$9], cd_credit_rating=[$10], cd_dep_count=[$11], cd_dep_employed_count=[$12], cd_dep_college_count=[$13])
                HiveJdbcConverter(convention=[JDBC.POSTGRES])
                  JdbcJoin(condition=[=($5, $1)], joinType=[inner])
                    JdbcJoin(condition=[=($2, $3)], joinType=[inner])
                      JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_addr_sk=[$2])
                        JdbcFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($1), IS NOT NULL($0))])
                          JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$2], c_current_addr_sk=[$4])
                            JdbcHiveTableScan(table=[[default, customer]], table:alias=[c])
                      JdbcProject(ca_address_sk=[$0], ca_county=[$1])
                        JdbcFilter(condition=[AND(IN($1, _UTF-16LE'Walker County':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Richland County':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Gaines County':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Douglas County':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Dona Ana County':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])
                          JdbcProject(ca_address_sk=[$0], ca_county=[$7])
                            JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[ca])
                    JdbcProject(cd_demo_sk=[$0], cd_gender=[$1], cd_marital_status=[$2], cd_education_status=[$3], cd_purchase_estimate=[$4], cd_credit_rating=[$5], cd_dep_count=[$6], cd_dep_employed_count=[$7], cd_dep_college_count=[$8])
                      JdbcFilter(condition=[IS NOT NULL($0)])
                        JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[customer_demographics])
              HiveProject(ss_customer_sk=[$0])
                HiveJdbcConverter(convention=[JDBC.POSTGRES])
                  JdbcProject(ss_customer_sk=[$1])
                    JdbcJoin(condition=[=($0, $2)], joinType=[inner])
                      JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$1])
                        JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                          JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3])
                            JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                      JdbcProject(d_date_sk=[$0])
                        JdbcFilter(condition=[AND(=($1, 2002), BETWEEN(false, $2, 4, 7), IS NOT NULL($0))])
                          JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                            JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
            HiveProject(literalTrue=[$0], ws_bill_customer_sk=[$1])
              HiveJdbcConverter(convention=[JDBC.POSTGRES])
                JdbcProject(literalTrue=[true], ws_bill_customer_sk=[$0])
                  JdbcAggregate(group=[{1}])
                    JdbcJoin(condition=[=($0, $2)], joinType=[inner])
                      JdbcProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$1])
                        JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                          JdbcProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4])
                            JdbcHiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                      JdbcProject(d_date_sk=[$0])
                        JdbcFilter(condition=[AND(=($1, 2002), BETWEEN(false, $2, 4, 7), IS NOT NULL($0))])
                          JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                            JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
          HiveProject(literalTrue=[$0], cs_ship_customer_sk=[$1])
            HiveJdbcConverter(convention=[JDBC.POSTGRES])
              JdbcProject(literalTrue=[true], cs_ship_customer_sk=[$0])
                JdbcAggregate(group=[{1}])
                  JdbcJoin(condition=[=($0, $2)], joinType=[inner])
                    JdbcProject(cs_sold_date_sk=[$0], cs_ship_customer_sk=[$1])
                      JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                        JdbcProject(cs_sold_date_sk=[$0], cs_ship_customer_sk=[$7])
                          JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                    JdbcProject(d_date_sk=[$0])
                      JdbcFilter(condition=[AND(=($1, 2002), BETWEEN(false, $2, 4, 7), IS NOT NULL($0))])
                        JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

