PREHOOK: query: explain cbo
select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as numeric(12,2))) agg1,
        avg( cast(cs_list_price as numeric(12,2))) agg2,
        avg( cast(cs_coupon_amt as numeric(12,2))) agg3,
        avg( cast(cs_sales_price as numeric(12,2))) agg4,
        avg( cast(cs_net_profit as numeric(12,2))) agg5,
        avg( cast(c_birth_year as numeric(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
 from catalog_sales, customer_demographics cd1, 
      customer_demographics cd2, customer, customer_address, date_dim, item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'College' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (9,5,12,4,1,10) and
       d_year = 2001 and
       ca_state in ('ND','WI','AL'
                   ,'NC','OK','MS','TN')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
	i_item_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as numeric(12,2))) agg1,
        avg( cast(cs_list_price as numeric(12,2))) agg2,
        avg( cast(cs_coupon_amt as numeric(12,2))) agg3,
        avg( cast(cs_sales_price as numeric(12,2))) agg4,
        avg( cast(cs_net_profit as numeric(12,2))) agg5,
        avg( cast(c_birth_year as numeric(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
 from catalog_sales, customer_demographics cd1, 
      customer_demographics cd2, customer, customer_address, date_dim, item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'College' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (9,5,12,4,1,10) and
       d_year = 2001 and
       ca_state in ('ND','WI','AL'
                   ,'NC','OK','MS','TN')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
	i_item_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
#### A masked pattern was here ####
CBO PLAN:
HiveSortLimit(sort0=[$1], sort1=[$2], sort2=[$3], sort3=[$0], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
  HiveProject(i_item_id=[$0], ca_country=[$3], ca_state=[$2], ca_county=[$1], agg1=[CAST(/($4, $5)):DECIMAL(16, 6)], agg2=[CAST(/($6, $7)):DECIMAL(16, 6)], agg3=[CAST(/($8, $9)):DECIMAL(16, 6)], agg4=[CAST(/($10, $11)):DECIMAL(16, 6)], agg5=[CAST(/($12, $13)):DECIMAL(16, 6)], agg6=[CAST(/($14, $15)):DECIMAL(16, 6)], agg7=[CAST(/($16, $17)):DECIMAL(16, 6)])
    HiveAggregate(group=[{13, 20, 21, 22}], groups=[[{13, 20, 21, 22}, {13, 21, 22}, {13, 22}, {13}, {}]], agg#0=[sum($4)], agg#1=[count($4)], agg#2=[sum($5)], agg#3=[count($5)], agg#4=[sum($6)], agg#5=[count($6)], agg#6=[sum($7)], agg#7=[count($7)], agg#8=[sum($8)], agg#9=[count($8)], agg#10=[sum($17)], agg#11=[count($17)], agg#12=[sum($11)], agg#13=[count($11)])
      HiveProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$1], cs_bill_cdemo_sk=[$2], cs_item_sk=[$3], CAST=[$4], CAST5=[$5], CAST6=[$6], CAST7=[$7], CAST8=[$8], d_date_sk=[$9], cd_demo_sk=[$10], CAST0=[$11], i_item_sk=[$12], i_item_id=[$13], c_customer_sk=[$14], c_current_cdemo_sk=[$15], c_current_addr_sk=[$16], CAST1=[$17], cd_demo_sk0=[$18], ca_address_sk=[$19], ca_county=[$20], ca_state=[$21], ca_country=[$22])
        HiveJdbcConverter(convention=[JDBC.POSTGRES])
          JdbcJoin(condition=[=($1, $14)], joinType=[inner])
            JdbcJoin(condition=[=($3, $12)], joinType=[inner])
              JdbcJoin(condition=[=($2, $10)], joinType=[inner])
                JdbcJoin(condition=[=($0, $9)], joinType=[inner])
                  JdbcProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$1], cs_bill_cdemo_sk=[$2], cs_item_sk=[$3], CAST=[CAST($4):DECIMAL(12, 2)], CAST5=[CAST($5):DECIMAL(12, 2)], CAST6=[CAST($7):DECIMAL(12, 2)], CAST7=[CAST($6):DECIMAL(12, 2)], CAST8=[CAST($8):DECIMAL(12, 2)])
                    JdbcFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($1), IS NOT NULL($0), IS NOT NULL($3))])
                      JdbcProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$3], cs_bill_cdemo_sk=[$4], cs_item_sk=[$15], cs_quantity=[$18], cs_list_price=[$20], cs_sales_price=[$21], cs_coupon_amt=[$27], cs_net_profit=[$33])
                        JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                  JdbcProject(d_date_sk=[$0])
                    JdbcFilter(condition=[AND(=($1, 2001), IS NOT NULL($0))])
                      JdbcProject(d_date_sk=[$0], d_year=[$6])
                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                JdbcProject(cd_demo_sk=[$0], CAST=[CAST($3):DECIMAL(12, 2)])
                  JdbcFilter(condition=[AND(=($1, _UTF-16LE'M'), =($2, _UTF-16LE'College'), IS NOT NULL($0))])
                    JdbcProject(cd_demo_sk=[$0], cd_gender=[$1], cd_education_status=[$3], cd_dep_count=[$6])
                      JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[cd1])
              JdbcProject(i_item_sk=[$0], i_item_id=[$1])
                JdbcFilter(condition=[IS NOT NULL($0)])
                  JdbcProject(i_item_sk=[$0], i_item_id=[$1])
                    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
            JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_addr_sk=[$2], CAST=[$3], cd_demo_sk=[$4], ca_address_sk=[$5], ca_county=[$6], ca_state=[$7], ca_country=[$8])
              JdbcJoin(condition=[=($2, $5)], joinType=[inner])
                JdbcJoin(condition=[=($1, $4)], joinType=[inner])
                  JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_addr_sk=[$2], CAST=[CAST($4):DECIMAL(12, 2)])
                    JdbcFilter(condition=[AND(IN($3, 9, 5, 12, 4, 1, 10), IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2))])
                      JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$2], c_current_addr_sk=[$4], c_birth_month=[$12], c_birth_year=[$13])
                        JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                  JdbcProject(cd_demo_sk=[$0])
                    JdbcFilter(condition=[IS NOT NULL($0)])
                      JdbcProject(cd_demo_sk=[$0])
                        JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[cd2])
                JdbcProject(ca_address_sk=[$0], ca_county=[$1], ca_state=[$2], ca_country=[$3])
                  JdbcFilter(condition=[AND(IN($2, _UTF-16LE'ND':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'WI':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'AL':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'NC':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'OK':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'MS':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'TN':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])
                    JdbcProject(ca_address_sk=[$0], ca_county=[$7], ca_state=[$8], ca_country=[$10])
                      JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])

