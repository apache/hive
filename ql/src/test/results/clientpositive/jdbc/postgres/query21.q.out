PREHOOK: query: explain
select  *
 from(select w_warehouse_name
            ,i_item_id
            ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date))
	                then inv_quantity_on_hand 
                      else 0 end) as inv_before
            ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date))
                      then inv_quantity_on_hand 
                      else 0 end) as inv_after
   from inventory
       ,warehouse
       ,item
       ,date_dim
   where i_current_price between 0.99 and 1.49
     and i_item_sk          = inv_item_sk
     and inv_warehouse_sk   = w_warehouse_sk
     and inv_date_sk    = d_date_sk
     and d_date between (cast ('1998-04-08' as date) - 30 days)
                    and (cast ('1998-04-08' as date) + 30 days)
   group by w_warehouse_name, i_item_id) x
 where (case when inv_before > 0 
             then inv_after / inv_before 
             else null
             end) between 2.0/3.0 and 3.0/2.0
 order by w_warehouse_name
         ,i_item_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@inventory
PREHOOK: Input: default@item
PREHOOK: Input: default@warehouse
#### A masked pattern was here ####
POSTHOOK: query: explain
select  *
 from(select w_warehouse_name
            ,i_item_id
            ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date))
	                then inv_quantity_on_hand 
                      else 0 end) as inv_before
            ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date))
                      then inv_quantity_on_hand 
                      else 0 end) as inv_after
   from inventory
       ,warehouse
       ,item
       ,date_dim
   where i_current_price between 0.99 and 1.49
     and i_item_sk          = inv_item_sk
     and inv_warehouse_sk   = w_warehouse_sk
     and inv_date_sk    = d_date_sk
     and d_date between (cast ('1998-04-08' as date) - 30 days)
                    and (cast ('1998-04-08' as date) + 30 days)
   group by w_warehouse_name, i_item_id) x
 where (case when inv_before > 0 
             then inv_after / inv_before 
             else null
             end) between 2.0/3.0 and 3.0/2.0
 order by w_warehouse_name
         ,i_item_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@inventory
POSTHOOK: Input: default@item
POSTHOOK: Input: default@warehouse
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: inventory
          properties:
            hive.sql.query SELECT "t13"."$f0", "t13"."$f1", "t13"."$f2", "t13"."$f3"
FROM (SELECT "t3"."w_warehouse_name" AS "$f0", "t6"."i_item_id" AS "$f1", SUM(CASE WHEN "t9"."<" THEN "t0"."inv_quantity_on_hand" ELSE 0 END) AS "$f2", SUM(CASE WHEN "t9".">=" THEN "t0"."inv_quantity_on_hand" ELSE 0 END) AS "$f3"
FROM (SELECT "inv_date_sk", "inv_item_sk", "inv_warehouse_sk", "inv_quantity_on_hand"
FROM "inventory"
WHERE "inv_warehouse_sk" IS NOT NULL AND ("inv_item_sk" IS NOT NULL AND "inv_date_sk" IS NOT NULL)) AS "t0"
INNER JOIN (SELECT "w_warehouse_sk", "w_warehouse_name"
FROM (SELECT "w_warehouse_sk", "w_warehouse_name"
FROM "warehouse") AS "t1"
WHERE "w_warehouse_sk" IS NOT NULL) AS "t3" ON "t0"."inv_warehouse_sk" = "t3"."w_warehouse_sk"
INNER JOIN (SELECT "i_item_sk", "i_item_id"
FROM (SELECT "i_item_sk", "i_item_id", "i_current_price"
FROM "item") AS "t4"
WHERE "i_current_price" BETWEEN 0.99 AND 1.49 AND "i_item_sk" IS NOT NULL) AS "t6" ON "t0"."inv_item_sk" = "t6"."i_item_sk"
INNER JOIN (SELECT "d_date_sk", "d_date" < DATE '1998-04-08' AS "<", "d_date" >= DATE '1998-04-08' AS ">="
FROM (SELECT "d_date_sk", "d_date"
FROM "date_dim") AS "t7"
WHERE CAST("d_date" AS TIMESTAMP(9)) BETWEEN TIMESTAMP '1998-03-09 00:00:00.000000000' AND TIMESTAMP '1998-05-08 00:00:00.000000000' AND "d_date_sk" IS NOT NULL) AS "t9" ON "t0"."inv_date_sk" = "t9"."d_date_sk"
GROUP BY "t3"."w_warehouse_name", "t6"."i_item_id"
HAVING CASE WHEN SUM(CASE WHEN "t9"."<" THEN "t0"."inv_quantity_on_hand" ELSE 0 END) > 0 THEN 0.666667 <= CAST(SUM(CASE WHEN "t9".">=" THEN "t0"."inv_quantity_on_hand" ELSE 0 END) AS DOUBLE PRECISION) / CAST(SUM(CASE WHEN "t9"."<" THEN "t0"."inv_quantity_on_hand" ELSE 0 END) AS DOUBLE PRECISION) ELSE FALSE END AND CASE WHEN SUM(CASE WHEN "t9"."<" THEN "t0"."inv_quantity_on_hand" ELSE 0 END) > 0 THEN CAST(SUM(CASE WHEN "t9".">=" THEN "t0"."inv_quantity_on_hand" ELSE 0 END) AS DOUBLE PRECISION) / CAST(SUM(CASE WHEN "t9"."<" THEN "t0"."inv_quantity_on_hand" ELSE 0 END) AS DOUBLE PRECISION) <= 1.5 ELSE FALSE END
ORDER BY "t3"."w_warehouse_name", "t6"."i_item_id"
FETCH NEXT 100 ROWS ONLY) AS "t13"
            hive.sql.query.fieldNames $f0,$f1,$f2,$f3
            hive.sql.query.fieldTypes string,string,bigint,bigint
            hive.sql.query.split false
          Select Operator
            expressions: $f0 (type: string), $f1 (type: string), $f2 (type: bigint), $f3 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            ListSink

