PREHOOK: query: explain cbo
select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,extended_price
       ,extended_tax
       ,list_price
 from (select ss_ticket_number
             ,ss_customer_sk
             ,ca_city bought_city
             ,sum(ss_ext_sales_price) extended_price 
             ,sum(ss_ext_list_price) list_price
             ,sum(ss_ext_tax) extended_tax 
       from store_sales
           ,date_dim
           ,store
           ,household_demographics
           ,customer_address 
       where store_sales.ss_sold_date_sk = date_dim.d_date_sk
         and store_sales.ss_store_sk = store.s_store_sk  
        and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
        and store_sales.ss_addr_sk = customer_address.ca_address_sk
        and date_dim.d_dom between 1 and 2 
        and (household_demographics.hd_dep_count = 2 or
             household_demographics.hd_vehicle_count= 1)
        and date_dim.d_year in (1998,1998+1,1998+2)
        and store.s_city in ('Cedar Grove','Wildwood')
       group by ss_ticket_number
               ,ss_customer_sk
               ,ss_addr_sk,ca_city) dn
      ,customer
      ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
   and customer.c_current_addr_sk = current_addr.ca_address_sk
   and current_addr.ca_city <> bought_city
 order by c_last_name
         ,ss_ticket_number
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,extended_price
       ,extended_tax
       ,list_price
 from (select ss_ticket_number
             ,ss_customer_sk
             ,ca_city bought_city
             ,sum(ss_ext_sales_price) extended_price 
             ,sum(ss_ext_list_price) list_price
             ,sum(ss_ext_tax) extended_tax 
       from store_sales
           ,date_dim
           ,store
           ,household_demographics
           ,customer_address 
       where store_sales.ss_sold_date_sk = date_dim.d_date_sk
         and store_sales.ss_store_sk = store.s_store_sk  
        and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
        and store_sales.ss_addr_sk = customer_address.ca_address_sk
        and date_dim.d_dom between 1 and 2 
        and (household_demographics.hd_dep_count = 2 or
             household_demographics.hd_vehicle_count= 1)
        and date_dim.d_year in (1998,1998+1,1998+2)
        and store.s_city in ('Cedar Grove','Wildwood')
       group by ss_ticket_number
               ,ss_customer_sk
               ,ss_addr_sk,ca_city) dn
      ,customer
      ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
   and customer.c_current_addr_sk = current_addr.ca_address_sk
   and current_addr.ca_city <> bought_city
 order by c_last_name
         ,ss_ticket_number
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcSort(sort0=[$0], sort1=[$4], dir0=[ASC], dir1=[ASC], fetch=[100])
    JdbcProject(c_last_name=[$3], c_first_name=[$2], ca_city=[$5], bought_city=[$8], ss_ticket_number=[$6], extended_price=[$9], extended_tax=[$11], list_price=[$10])
      JdbcJoin(condition=[AND(<>($5, $8), =($7, $0))], joinType=[inner])
        JdbcJoin(condition=[=($1, $4)], joinType=[inner])
          JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$1], c_first_name=[$2], c_last_name=[$3])
            JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
              JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$4], c_first_name=[$8], c_last_name=[$9])
                JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
          JdbcProject(ca_address_sk=[$0], ca_city=[$1])
            JdbcFilter(condition=[IS NOT NULL($0)])
              JdbcProject(ca_address_sk=[$0], ca_city=[$6])
                JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[current_addr])
        JdbcProject(ss_ticket_number=[$2], ss_customer_sk=[$0], bought_city=[$3], extended_price=[$4], list_price=[$5], extended_tax=[$6])
          JdbcAggregate(group=[{1, 3, 5, 13}], agg#0=[sum($6)], agg#1=[sum($7)], agg#2=[sum($8)])
            JdbcJoin(condition=[=($3, $12)], joinType=[inner])
              JdbcJoin(condition=[=($2, $11)], joinType=[inner])
                JdbcJoin(condition=[=($4, $10)], joinType=[inner])
                  JdbcJoin(condition=[=($0, $9)], joinType=[inner])
                    JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$1], ss_hdemo_sk=[$2], ss_addr_sk=[$3], ss_store_sk=[$4], ss_ticket_number=[$5], ss_ext_sales_price=[$6], ss_ext_list_price=[$7], ss_ext_tax=[$8])
                      JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($4), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($1))])
                        JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3], ss_hdemo_sk=[$5], ss_addr_sk=[$6], ss_store_sk=[$7], ss_ticket_number=[$9], ss_ext_sales_price=[$15], ss_ext_list_price=[$17], ss_ext_tax=[$18])
                          JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                    JdbcProject(d_date_sk=[$0])
                      JdbcFilter(condition=[AND(IN($1, 1998, 1999, 2000), BETWEEN(false, $2, 1, 2), IS NOT NULL($0))])
                        JdbcProject(d_date_sk=[$0], d_year=[$6], d_dom=[$9])
                          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                  JdbcProject(s_store_sk=[$0])
                    JdbcFilter(condition=[AND(IN($1, _UTF-16LE'Cedar Grove':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Wildwood':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])
                      JdbcProject(s_store_sk=[$0], s_city=[$22])
                        JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
                JdbcProject(hd_demo_sk=[$0])
                  JdbcFilter(condition=[AND(OR(=($1, 2), =($2, 1)), IS NOT NULL($0))])
                    JdbcProject(hd_demo_sk=[$0], hd_dep_count=[$3], hd_vehicle_count=[$4])
                      JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[household_demographics])
              JdbcProject(ca_address_sk=[$0], ca_city=[$1])
                JdbcFilter(condition=[IS NOT NULL($0)])
                  JdbcProject(ca_address_sk=[$0], ca_city=[$6])
                    JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])

