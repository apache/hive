PREHOOK: query: explain
with customer_total_return as
 (select cr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(cr_return_amt_inc_tax) as ctr_total_return
 from catalog_returns
     ,date_dim
     ,customer_address
 where cr_returned_date_sk = d_date_sk 
   and d_year =1998
   and cr_returning_addr_sk = ca_address_sk 
 group by cr_returning_customer_sk
         ,ca_state )
  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'IL'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
#### A masked pattern was here ####
POSTHOOK: query: explain
with customer_total_return as
 (select cr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(cr_return_amt_inc_tax) as ctr_total_return
 from catalog_returns
     ,date_dim
     ,customer_address
 where cr_returned_date_sk = d_date_sk 
   and d_year =1998
   and cr_returning_addr_sk = ca_address_sk 
 group by cr_returning_customer_sk
         ,ca_state )
  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'IL'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: customer_address
          properties:
            hive.sql.query SELECT "t32"."c_customer_id", "t32"."c_salutation", "t32"."c_first_name", "t32"."c_last_name", "t32"."ca_street_number", "t32"."ca_street_name", "t32"."ca_street_type", "t32"."ca_suite_number", "t32"."ca_city", "t32"."ca_county", CAST('IL' AS VARCHAR(10485760)) AS "ca_state", "t32"."ca_zip", "t32"."ca_country", "t32"."ca_gmt_offset", "t32"."ca_location_type", "t32"."ctr_total_return"
FROM (SELECT "t4"."c_customer_id", "t4"."c_salutation", "t4"."c_first_name", "t4"."c_last_name", "t1"."ca_street_number", "t1"."ca_street_name", "t1"."ca_street_type", "t1"."ca_suite_number", "t1"."ca_city", "t1"."ca_county", "t1"."ca_zip", "t1"."ca_country", "t1"."ca_gmt_offset", "t1"."ca_location_type", "t30"."$f2" AS "ctr_total_return"
FROM (SELECT "ca_address_sk", "ca_street_number", "ca_street_name", "ca_street_type", "ca_suite_number", "ca_city", "ca_county", "ca_zip", "ca_country", "ca_gmt_offset", "ca_location_type"
FROM (SELECT "ca_address_sk", "ca_street_number", "ca_street_name", "ca_street_type", "ca_suite_number", "ca_city", "ca_county", "ca_state", "ca_zip", "ca_country", "ca_gmt_offset", "ca_location_type"
FROM "customer_address") AS "t"
WHERE "ca_state" = 'IL' AND "ca_address_sk" IS NOT NULL) AS "t1"
INNER JOIN (SELECT "c_customer_sk", "c_customer_id", "c_current_addr_sk", "c_salutation", "c_first_name", "c_last_name"
FROM (SELECT "c_customer_sk", "c_customer_id", "c_current_addr_sk", "c_salutation", "c_first_name", "c_last_name"
FROM "customer") AS "t2"
WHERE "c_current_addr_sk" IS NOT NULL AND "c_customer_sk" IS NOT NULL) AS "t4" ON "t1"."ca_address_sk" = "t4"."c_current_addr_sk"
INNER JOIN (SELECT "t16"."cr_returning_customer_sk", "t16"."ca_state", "t16"."$f2", "t29"."_o__c0", "t29"."ctr_state"
FROM (SELECT "t7"."cr_returning_customer_sk", "t13"."ca_state", SUM("t7"."cr_return_amt_inc_tax") AS "$f2"
FROM (SELECT "cr_returned_date_sk", "cr_returning_customer_sk", "cr_returning_addr_sk", "cr_return_amt_inc_tax"
FROM (SELECT "cr_returned_date_sk", "cr_returning_customer_sk", "cr_returning_addr_sk", "cr_return_amt_inc_tax"
FROM "catalog_returns") AS "t5"
WHERE "cr_returned_date_sk" IS NOT NULL AND ("cr_returning_addr_sk" IS NOT NULL AND "cr_returning_customer_sk" IS NOT NULL)) AS "t7"
INNER JOIN (SELECT "d_date_sk"
FROM (SELECT "d_date_sk", "d_year"
FROM "date_dim") AS "t8"
WHERE "d_year" = 1998 AND "d_date_sk" IS NOT NULL) AS "t10" ON "t7"."cr_returned_date_sk" = "t10"."d_date_sk"
INNER JOIN (SELECT "ca_address_sk", "ca_state"
FROM (SELECT "ca_address_sk", "ca_state"
FROM "customer_address") AS "t11"
WHERE "ca_address_sk" IS NOT NULL AND "ca_state" IS NOT NULL) AS "t13" ON "t7"."cr_returning_addr_sk" = "t13"."ca_address_sk"
GROUP BY "t7"."cr_returning_customer_sk", "t13"."ca_state"
HAVING SUM("t7"."cr_return_amt_inc_tax") IS NOT NULL) AS "t16"
INNER JOIN (SELECT CAST(SUM("t26"."$f2") / COUNT("t26"."$f2") AS DECIMAL(21, 6)) * 1.2 AS "_o__c0", "t26"."ca_state" AS "ctr_state"
FROM (SELECT "t19"."cr_returning_customer_sk", "t25"."ca_state", SUM("t19"."cr_return_amt_inc_tax") AS "$f2"
FROM (SELECT "cr_returned_date_sk", "cr_returning_customer_sk", "cr_returning_addr_sk", "cr_return_amt_inc_tax"
FROM (SELECT "cr_returned_date_sk", "cr_returning_customer_sk", "cr_returning_addr_sk", "cr_return_amt_inc_tax"
FROM "catalog_returns") AS "t17"
WHERE "cr_returned_date_sk" IS NOT NULL AND "cr_returning_addr_sk" IS NOT NULL) AS "t19"
INNER JOIN (SELECT "d_date_sk"
FROM (SELECT "d_date_sk", "d_year"
FROM "date_dim") AS "t20"
WHERE "d_year" = 1998 AND "d_date_sk" IS NOT NULL) AS "t22" ON "t19"."cr_returned_date_sk" = "t22"."d_date_sk"
INNER JOIN (SELECT "ca_address_sk", "ca_state"
FROM (SELECT "ca_address_sk", "ca_state"
FROM "customer_address") AS "t23"
WHERE "ca_address_sk" IS NOT NULL AND "ca_state" IS NOT NULL) AS "t25" ON "t19"."cr_returning_addr_sk" = "t25"."ca_address_sk"
GROUP BY "t19"."cr_returning_customer_sk", "t25"."ca_state") AS "t26"
GROUP BY "t26"."ca_state"
HAVING CAST(SUM("t26"."$f2") / COUNT("t26"."$f2") AS DECIMAL(21, 6)) IS NOT NULL) AS "t29" ON "t16"."ca_state" = "t29"."ctr_state" AND "t16"."$f2" > "t29"."_o__c0") AS "t30" ON "t4"."c_customer_sk" = "t30"."cr_returning_customer_sk"
ORDER BY "t4"."c_customer_id", "t4"."c_salutation", "t4"."c_first_name", "t4"."c_last_name", "t1"."ca_street_number", "t1"."ca_street_name", "t1"."ca_street_type", "t1"."ca_suite_number", "t1"."ca_city", "t1"."ca_county", "t1"."ca_zip", "t1"."ca_country", "t1"."ca_gmt_offset", "t1"."ca_location_type", "t30"."$f2"
FETCH NEXT 100 ROWS ONLY) AS "t32"
            hive.sql.query.fieldNames c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset,ca_location_type,ctr_total_return
            hive.sql.query.fieldTypes string,string,string,string,string,string,string,string,string,string,string,string,string,decimal(5,2),string,decimal(17,2)
            hive.sql.query.split false
          Select Operator
            expressions: c_customer_id (type: string), c_salutation (type: string), c_first_name (type: string), c_last_name (type: string), ca_street_number (type: string), ca_street_name (type: string), ca_street_type (type: string), ca_suite_number (type: string), ca_city (type: string), ca_county (type: string), ca_state (type: string), ca_zip (type: string), ca_country (type: string), ca_gmt_offset (type: decimal(5,2)), ca_location_type (type: string), ctr_total_return (type: decimal(17,2))
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15
            ListSink

