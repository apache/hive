PREHOOK: query: explain cbo
select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('1998-04-08' as date) - 30 days)
                and (cast ('1998-04-08' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@warehouse
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('1998-04-08' as date) - 30 days)
                and (cast ('1998-04-08' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@warehouse
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[100])
    JdbcAggregate(group=[{0, 1}], agg#0=[sum($2)], agg#1=[sum($3)])
      JdbcProject($f0=[$9], $f1=[$11], $f2=[CASE($13, -($4, CASE(IS NOT NULL($7), $7, 0:DECIMAL(12, 2))), 0:DECIMAL(13, 2))], $f3=[CASE($14, -($4, CASE(IS NOT NULL($7), $7, 0:DECIMAL(12, 2))), 0:DECIMAL(13, 2))])
        JdbcJoin(condition=[=($0, $12)], joinType=[inner])
          JdbcJoin(condition=[=($10, $2)], joinType=[inner])
            JdbcJoin(condition=[=($1, $8)], joinType=[inner])
              JdbcJoin(condition=[AND(=($3, $6), =($2, $5))], joinType=[left])
                JdbcProject(cs_sold_date_sk=[$0], cs_warehouse_sk=[$1], cs_item_sk=[$2], cs_order_number=[$3], cs_sales_price=[$4])
                  JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($0))])
                    JdbcProject(cs_sold_date_sk=[$0], cs_warehouse_sk=[$14], cs_item_sk=[$15], cs_order_number=[$17], cs_sales_price=[$21])
                      JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                JdbcProject(cr_item_sk=[$0], cr_order_number=[$1], cr_refunded_cash=[$2])
                  JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                    JdbcProject(cr_item_sk=[$2], cr_order_number=[$16], cr_refunded_cash=[$23])
                      JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])
              JdbcProject(w_warehouse_sk=[$0], w_state=[$1])
                JdbcFilter(condition=[IS NOT NULL($0)])
                  JdbcProject(w_warehouse_sk=[$0], w_state=[$10])
                    JdbcHiveTableScan(table=[[default, warehouse]], table:alias=[warehouse])
            JdbcProject(i_item_sk=[$0], i_item_id=[$1])
              JdbcFilter(condition=[AND(BETWEEN(false, $2, 0.99:DECIMAL(2, 2), 1.49:DECIMAL(3, 2)), IS NOT NULL($0))])
                JdbcProject(i_item_sk=[$0], i_item_id=[$1], i_current_price=[$5])
                  JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
          JdbcProject(d_date_sk=[$0], <=[<(CAST($1):DATE, 1998-04-08)], >==[>=(CAST($1):DATE, 1998-04-08)])
            JdbcFilter(condition=[AND(BETWEEN(false, CAST($1):TIMESTAMP(9), 1998-03-09 00:00:00:TIMESTAMP(9), 1998-05-08 00:00:00:TIMESTAMP(9)), IS NOT NULL($0))])
              JdbcProject(d_date_sk=[$0], d_date=[$2])
                JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

