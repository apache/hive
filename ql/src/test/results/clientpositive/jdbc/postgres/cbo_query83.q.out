CTE Suggestion:
HiveProject(d_date=[$0])
  HiveSemiJoin(condition=[=($1, $2)], joinType=[semi])
    HiveJdbcConverter(convention=[JDBC.POSTGRES])
      JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
        JdbcProject(d_date=[$2], d_week_seq=[$4])
          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
    HiveJdbcConverter(convention=[JDBC.POSTGRES])
      JdbcProject(d_week_seq=[$1])
        JdbcFilter(condition=[AND(IN($0, _UTF-16LE'1998-01-02':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'1998-10-15':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'1998-11-10':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($1))])
          JdbcProject(d_date=[$2], d_week_seq=[$4])
            JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
  JdbcProject(i_item_sk=[$0], i_item_id=[$1])
    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(d_date_sk=[$0], d_date=[$2])
    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

PREHOOK: query: explain cbo
with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_returns
PREHOOK: Input: default@web_returns
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_returns
POSTHOOK: Input: default@web_returns
#### A masked pattern was here ####
CBO PLAN:
HiveSortLimit(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[100])
  HiveProject(item_id=[$0], sr_item_qty=[$1], sr_dev=[*(/(/($2, CAST(+(+($1, $4), $7)):DOUBLE), 3), 100)], cr_item_qty=[$4], cr_dev=[*(/(/($5, CAST(+(+($1, $4), $7)):DOUBLE), 3), 100)], wr_item_qty=[$7], wr_dev=[*(/(/($8, CAST(+(+($1, $4), $7)):DOUBLE), 3), 100)], average=[/(CAST(+(+($1, $4), $7)):DECIMAL(19, 0), 3:DECIMAL(1, 0))])
    HiveJoin(condition=[=($0, $6)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject($f0=[$0], $f1=[$1], CAST=[CAST($1):DOUBLE])
          HiveAggregate(group=[{4}], agg#0=[sum($2)])
            HiveSemiJoin(condition=[=($6, $7)], joinType=[semi])
              HiveProject(sr_returned_date_sk=[$0], sr_item_sk=[$1], sr_return_quantity=[$2], i_item_sk=[$3], i_item_id=[$4], d_date_sk=[$5], d_date=[$6])
                HiveJdbcConverter(convention=[JDBC.POSTGRES])
                  JdbcJoin(condition=[=($0, $5)], joinType=[inner])
                    JdbcJoin(condition=[=($1, $3)], joinType=[inner])
                      JdbcProject(sr_returned_date_sk=[$0], sr_item_sk=[$1], sr_return_quantity=[$2])
                        JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                          JdbcProject(sr_returned_date_sk=[$0], sr_item_sk=[$2], sr_return_quantity=[$10])
                            JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                      JdbcProject(i_item_sk=[$0], i_item_id=[$1])
                        JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                          JdbcProject(i_item_sk=[$0], i_item_id=[$1])
                            JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                    JdbcProject(d_date_sk=[$0], d_date=[$1])
                      JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                        JdbcProject(d_date_sk=[$0], d_date=[$2])
                          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
              HiveProject(d_date=[$0])
                HiveSemiJoin(condition=[=($1, $2)], joinType=[semi])
                  HiveProject(d_date=[$0], d_week_seq=[$1])
                    HiveProject(d_date=[$0], d_week_seq=[$1])
                      HiveProject(d_date=[$0], d_week_seq=[$1])
                        HiveProject(d_date=[$0], d_week_seq=[$1])
                          HiveJdbcConverter(convention=[JDBC.POSTGRES])
                            JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                              JdbcProject(d_date=[$2], d_week_seq=[$4])
                                JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                  HiveProject(d_week_seq=[$0])
                    HiveProject(d_week_seq=[$0])
                      HiveProject(d_week_seq=[$0])
                        HiveJdbcConverter(convention=[JDBC.POSTGRES])
                          JdbcProject(d_week_seq=[$1])
                            JdbcFilter(condition=[AND(IN($0, _UTF-16LE'1998-01-02':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'1998-10-15':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'1998-11-10':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($1))])
                              JdbcProject(d_date=[$2], d_week_seq=[$4])
                                JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
        HiveProject($f0=[$0], $f1=[$1], CAST=[CAST($1):DOUBLE])
          HiveAggregate(group=[{4}], agg#0=[sum($2)])
            HiveSemiJoin(condition=[=($6, $7)], joinType=[semi])
              HiveProject(cr_returned_date_sk=[$0], cr_item_sk=[$1], cr_return_quantity=[$2], i_item_sk=[$3], i_item_id=[$4], d_date_sk=[$5], d_date=[$6])
                HiveJdbcConverter(convention=[JDBC.POSTGRES])
                  JdbcJoin(condition=[=($0, $5)], joinType=[inner])
                    JdbcJoin(condition=[=($1, $3)], joinType=[inner])
                      JdbcProject(cr_returned_date_sk=[$0], cr_item_sk=[$1], cr_return_quantity=[$2])
                        JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                          JdbcProject(cr_returned_date_sk=[$0], cr_item_sk=[$2], cr_return_quantity=[$17])
                            JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])
                      JdbcProject(i_item_sk=[$0], i_item_id=[$1])
                        JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                          JdbcProject(i_item_sk=[$0], i_item_id=[$1])
                            JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                    JdbcProject(d_date_sk=[$0], d_date=[$1])
                      JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                        JdbcProject(d_date_sk=[$0], d_date=[$2])
                          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
              HiveProject(d_date=[$0])
                HiveSemiJoin(condition=[=($1, $2)], joinType=[semi])
                  HiveProject(d_date=[$0], d_week_seq=[$1])
                    HiveProject(d_date=[$0], d_week_seq=[$1])
                      HiveProject(d_date=[$0], d_week_seq=[$1])
                        HiveProject(d_date=[$0], d_week_seq=[$1])
                          HiveJdbcConverter(convention=[JDBC.POSTGRES])
                            JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                              JdbcProject(d_date=[$2], d_week_seq=[$4])
                                JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                  HiveProject(d_week_seq=[$0])
                    HiveProject(d_week_seq=[$0])
                      HiveProject(d_week_seq=[$0])
                        HiveJdbcConverter(convention=[JDBC.POSTGRES])
                          JdbcProject(d_week_seq=[$1])
                            JdbcFilter(condition=[AND(IN($0, _UTF-16LE'1998-01-02':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'1998-10-15':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'1998-11-10':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($1))])
                              JdbcProject(d_date=[$2], d_week_seq=[$4])
                                JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
      HiveProject($f0=[$0], $f1=[$1], CAST=[CAST($1):DOUBLE])
        HiveAggregate(group=[{4}], agg#0=[sum($2)])
          HiveSemiJoin(condition=[=($6, $7)], joinType=[semi])
            HiveProject(wr_returned_date_sk=[$0], wr_item_sk=[$1], wr_return_quantity=[$2], i_item_sk=[$3], i_item_id=[$4], d_date_sk=[$5], d_date=[$6])
              HiveJdbcConverter(convention=[JDBC.POSTGRES])
                JdbcJoin(condition=[=($0, $5)], joinType=[inner])
                  JdbcJoin(condition=[=($1, $3)], joinType=[inner])
                    JdbcProject(wr_returned_date_sk=[$0], wr_item_sk=[$1], wr_return_quantity=[$2])
                      JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                        JdbcProject(wr_returned_date_sk=[$0], wr_item_sk=[$2], wr_return_quantity=[$14])
                          JdbcHiveTableScan(table=[[default, web_returns]], table:alias=[web_returns])
                    JdbcProject(i_item_sk=[$0], i_item_id=[$1])
                      JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                        JdbcProject(i_item_sk=[$0], i_item_id=[$1])
                          JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                  JdbcProject(d_date_sk=[$0], d_date=[$1])
                    JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                      JdbcProject(d_date_sk=[$0], d_date=[$2])
                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
            HiveProject(d_date=[$0])
              HiveSemiJoin(condition=[=($1, $2)], joinType=[semi])
                HiveProject(d_date=[$0], d_week_seq=[$1])
                  HiveProject(d_date=[$0], d_week_seq=[$1])
                    HiveProject(d_date=[$0], d_week_seq=[$1])
                      HiveProject(d_date=[$0], d_week_seq=[$1])
                        HiveJdbcConverter(convention=[JDBC.POSTGRES])
                          JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                            JdbcProject(d_date=[$2], d_week_seq=[$4])
                              JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                HiveProject(d_week_seq=[$0])
                  HiveProject(d_week_seq=[$0])
                    HiveProject(d_week_seq=[$0])
                      HiveJdbcConverter(convention=[JDBC.POSTGRES])
                        JdbcProject(d_week_seq=[$1])
                          JdbcFilter(condition=[AND(IN($0, _UTF-16LE'1998-01-02':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'1998-10-15':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'1998-11-10':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($1))])
                            JdbcProject(d_date=[$2], d_week_seq=[$4])
                              JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

