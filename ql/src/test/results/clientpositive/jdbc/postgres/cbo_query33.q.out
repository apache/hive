CTE Suggestion:
JdbcFilter(condition=[AND(=($1, -6:DECIMAL(1, 0)), IS NOT NULL($0))])
  JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$11])
    JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])

CTE Suggestion:
JdbcFilter(condition=[AND(=($1, 1999), =($2, 3), IS NOT NULL($0))])
  JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

CTE Suggestion:
JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
  JdbcProject(i_item_sk=[$0], i_manufact_id=[$13])
    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])

PREHOOK: query: explain cbo
with ss as (
 select
          i_manufact_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id in (select
  i_manufact_id
from
 item
where i_category in ('Books'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 3
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_manufact_id),
 cs as (
 select
          i_manufact_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Books'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 3
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_manufact_id),
 ws as (
 select
          i_manufact_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Books'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 3
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6
 group by i_manufact_id)
  select  i_manufact_id ,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_manufact_id
 order by total_sales
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
with ss as (
 select
          i_manufact_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id in (select
  i_manufact_id
from
 item
where i_category in ('Books'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 3
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_manufact_id),
 cs as (
 select
          i_manufact_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Books'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 3
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_manufact_id),
 ws as (
 select
          i_manufact_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Books'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 3
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6
 group by i_manufact_id)
  select  i_manufact_id ,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_manufact_id
 order by total_sales
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
#### A masked pattern was here ####
CBO PLAN:
HiveSortLimit(sort0=[$1], dir0=[ASC], fetch=[100])
  HiveProject($f0=[$0], $f1=[$1])
    HiveAggregate(group=[{0}], agg#0=[sum($1)])
      HiveProject($f0=[$0], $f1=[$1])
        HiveUnion(all=[true])
          HiveProject(i_manufact_id=[$0], $f1=[$1])
            HiveAggregate(group=[{10}], agg#0=[sum($3)])
              HiveSemiJoin(condition=[=($10, $11)], joinType=[semi])
                HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_addr_sk=[$2], ss_ext_sales_price=[$3], d_date_sk=[$4], d_year=[$5], d_moy=[$6], ca_address_sk=[$7], ca_gmt_offset=[$8], i_item_sk=[$9], i_manufact_id=[$10])
                  HiveJdbcConverter(convention=[JDBC.POSTGRES])
                    JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_addr_sk=[$2], ss_ext_sales_price=[$3], d_date_sk=[$8], d_year=[$9], d_moy=[$10], ca_address_sk=[$4], ca_gmt_offset=[$5], i_item_sk=[$6], i_manufact_id=[$7])
                      JdbcJoin(condition=[=($0, $8)], joinType=[inner])
                        JdbcJoin(condition=[=($1, $6)], joinType=[inner])
                          JdbcJoin(condition=[=($2, $4)], joinType=[inner])
                            JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_addr_sk=[$2], ss_ext_sales_price=[$3])
                              JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($2), IS NOT NULL($1))])
                                JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_addr_sk=[$6], ss_ext_sales_price=[$15])
                                  JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                            JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$1])
                              JdbcFilter(condition=[AND(=($1, -6:DECIMAL(1, 0)), IS NOT NULL($0))])
                                JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$11])
                                  JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
                          JdbcProject(i_item_sk=[$0], i_manufact_id=[$1])
                            JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                              JdbcProject(i_item_sk=[$0], i_manufact_id=[$13])
                                JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                        JdbcProject(d_date_sk=[$0], d_year=[$1], d_moy=[$2])
                          JdbcFilter(condition=[AND(=($1, 1999), =($2, 3), IS NOT NULL($0))])
                            JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                              JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                HiveProject(i_manufact_id=[$0])
                  HiveJdbcConverter(convention=[JDBC.POSTGRES])
                    JdbcProject(i_manufact_id=[$1])
                      JdbcFilter(condition=[AND(=($0, _UTF-16LE'Books'), IS NOT NULL($1))])
                        JdbcProject(i_category=[$12], i_manufact_id=[$13])
                          JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
          HiveProject(i_manufact_id=[$0], $f1=[$1])
            HiveAggregate(group=[{10}], agg#0=[sum($3)])
              HiveSemiJoin(condition=[=($10, $11)], joinType=[semi])
                HiveProject(cs_sold_date_sk=[$0], cs_bill_addr_sk=[$1], cs_item_sk=[$2], cs_ext_sales_price=[$3], d_date_sk=[$4], d_year=[$5], d_moy=[$6], ca_address_sk=[$7], ca_gmt_offset=[$8], i_item_sk=[$9], i_manufact_id=[$10])
                  HiveJdbcConverter(convention=[JDBC.POSTGRES])
                    JdbcProject(cs_sold_date_sk=[$0], cs_bill_addr_sk=[$1], cs_item_sk=[$2], cs_ext_sales_price=[$3], d_date_sk=[$8], d_year=[$9], d_moy=[$10], ca_address_sk=[$4], ca_gmt_offset=[$5], i_item_sk=[$6], i_manufact_id=[$7])
                      JdbcJoin(condition=[=($0, $8)], joinType=[inner])
                        JdbcJoin(condition=[=($2, $6)], joinType=[inner])
                          JdbcJoin(condition=[=($1, $4)], joinType=[inner])
                            JdbcProject(cs_sold_date_sk=[$0], cs_bill_addr_sk=[$1], cs_item_sk=[$2], cs_ext_sales_price=[$3])
                              JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2))])
                                JdbcProject(cs_sold_date_sk=[$0], cs_bill_addr_sk=[$6], cs_item_sk=[$15], cs_ext_sales_price=[$23])
                                  JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                            JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$1])
                              JdbcFilter(condition=[AND(=($1, -6:DECIMAL(1, 0)), IS NOT NULL($0))])
                                JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$11])
                                  JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
                          JdbcProject(i_item_sk=[$0], i_manufact_id=[$1])
                            JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                              JdbcProject(i_item_sk=[$0], i_manufact_id=[$13])
                                JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                        JdbcProject(d_date_sk=[$0], d_year=[$1], d_moy=[$2])
                          JdbcFilter(condition=[AND(=($1, 1999), =($2, 3), IS NOT NULL($0))])
                            JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                              JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                HiveProject(i_manufact_id=[$0])
                  HiveJdbcConverter(convention=[JDBC.POSTGRES])
                    JdbcProject(i_manufact_id=[$1])
                      JdbcFilter(condition=[AND(=($0, _UTF-16LE'Books'), IS NOT NULL($1))])
                        JdbcProject(i_category=[$12], i_manufact_id=[$13])
                          JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
          HiveProject(i_manufact_id=[$0], $f1=[$1])
            HiveAggregate(group=[{10}], agg#0=[sum($3)])
              HiveSemiJoin(condition=[=($10, $11)], joinType=[semi])
                HiveProject(ws_sold_date_sk=[$0], ws_item_sk=[$1], ws_bill_addr_sk=[$2], ws_ext_sales_price=[$3], d_date_sk=[$4], d_year=[$5], d_moy=[$6], ca_address_sk=[$7], ca_gmt_offset=[$8], i_item_sk=[$9], i_manufact_id=[$10])
                  HiveJdbcConverter(convention=[JDBC.POSTGRES])
                    JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$1], ws_bill_addr_sk=[$2], ws_ext_sales_price=[$3], d_date_sk=[$8], d_year=[$9], d_moy=[$10], ca_address_sk=[$4], ca_gmt_offset=[$5], i_item_sk=[$6], i_manufact_id=[$7])
                      JdbcJoin(condition=[=($0, $8)], joinType=[inner])
                        JdbcJoin(condition=[=($1, $6)], joinType=[inner])
                          JdbcJoin(condition=[=($2, $4)], joinType=[inner])
                            JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$1], ws_bill_addr_sk=[$2], ws_ext_sales_price=[$3])
                              JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($2), IS NOT NULL($1))])
                                JdbcProject(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_bill_addr_sk=[$7], ws_ext_sales_price=[$23])
                                  JdbcHiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                            JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$1])
                              JdbcFilter(condition=[AND(=($1, -6:DECIMAL(1, 0)), IS NOT NULL($0))])
                                JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$11])
                                  JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
                          JdbcProject(i_item_sk=[$0], i_manufact_id=[$1])
                            JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($0))])
                              JdbcProject(i_item_sk=[$0], i_manufact_id=[$13])
                                JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                        JdbcProject(d_date_sk=[$0], d_year=[$1], d_moy=[$2])
                          JdbcFilter(condition=[AND(=($1, 1999), =($2, 3), IS NOT NULL($0))])
                            JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                              JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                HiveProject(i_manufact_id=[$0])
                  HiveJdbcConverter(convention=[JDBC.POSTGRES])
                    JdbcProject(i_manufact_id=[$1])
                      JdbcFilter(condition=[AND(=($0, _UTF-16LE'Books'), IS NOT NULL($1))])
                        JdbcProject(i_category=[$12], i_manufact_id=[$13])
                          JdbcHiveTableScan(table=[[default, item]], table:alias=[item])

