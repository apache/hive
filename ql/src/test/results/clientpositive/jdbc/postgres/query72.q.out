PREHOOK: query: explain
select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,count(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,count(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2001
  and hd_buy_potential = '1001-5000'
  and cd_marital_status = 'M'
  and d1.d_year = 2001
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@inventory
PREHOOK: Input: default@item
PREHOOK: Input: default@promotion
PREHOOK: Input: default@warehouse
#### A masked pattern was here ####
POSTHOOK: query: explain
select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,count(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,count(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2001
  and hd_buy_potential = '1001-5000'
  and cd_marital_status = 'M'
  and d1.d_year = 2001
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@inventory
POSTHOOK: Input: default@item
POSTHOOK: Input: default@promotion
POSTHOOK: Input: default@warehouse
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: catalog_sales
          properties:
            hive.sql.query SELECT "t35"."$f0", "t35"."$f1", "t35"."$f2", "t35"."$f3", "t35"."$f4", "t35"."$f5"
FROM (SELECT "t29"."i_item_desc" AS "$f0", "t29"."w_warehouse_name" AS "$f1", "t29"."d_week_seq" AS "$f2", COUNT(CASE WHEN "t29"."p_promo_sk" IS NULL THEN 1 ELSE 0 END) AS "$f3", COUNT(CASE WHEN "t29"."p_promo_sk" IS NOT NULL THEN 1 ELSE 0 END) AS "$f4", COUNT(*) AS "$f5"
FROM (SELECT "t1"."cs_sold_date_sk", "t1"."cs_ship_date_sk", "t1"."cs_bill_cdemo_sk", "t1"."cs_bill_hdemo_sk", "t1"."cs_item_sk", "t1"."cs_promo_sk", "t1"."cs_order_number", "t1"."cs_quantity", "t22"."inv_date_sk", "t22"."inv_item_sk", "t22"."inv_warehouse_sk", "t22"."inv_quantity_on_hand", "t22"."w_warehouse_sk", "t22"."w_warehouse_name", "t13"."i_item_sk", "t13"."i_item_desc", "t4"."cd_demo_sk", "t7"."hd_demo_sk", "t25"."d_date_sk", "t25"."d_week_seq", "t25"."+", "t22"."d_date_sk" AS "d_date_sk0", "t22"."d_week_seq" AS "d_week_seq0", "t28"."d_date_sk" AS "d_date_sk1", "t28"."CAST", "t10"."p_promo_sk"
FROM (SELECT "cs_sold_date_sk", "cs_ship_date_sk", "cs_bill_cdemo_sk", "cs_bill_hdemo_sk", "cs_item_sk", "cs_promo_sk", "cs_order_number", "cs_quantity"
FROM (SELECT "cs_sold_date_sk", "cs_ship_date_sk", "cs_bill_cdemo_sk", "cs_bill_hdemo_sk", "cs_item_sk", "cs_promo_sk", "cs_order_number", "cs_quantity"
FROM "catalog_sales") AS "t"
WHERE "cs_item_sk" IS NOT NULL AND ("cs_bill_cdemo_sk" IS NOT NULL AND "cs_bill_hdemo_sk" IS NOT NULL) AND ("cs_sold_date_sk" IS NOT NULL AND ("cs_ship_date_sk" IS NOT NULL AND "cs_quantity" IS NOT NULL))) AS "t1"
INNER JOIN (SELECT "cd_demo_sk"
FROM (SELECT "cd_demo_sk", "cd_marital_status"
FROM "customer_demographics") AS "t2"
WHERE "cd_marital_status" = 'M' AND "cd_demo_sk" IS NOT NULL) AS "t4" ON "t1"."cs_bill_cdemo_sk" = "t4"."cd_demo_sk"
INNER JOIN (SELECT "hd_demo_sk"
FROM (SELECT "hd_demo_sk", "hd_buy_potential"
FROM "household_demographics") AS "t5"
WHERE "hd_buy_potential" = '1001-5000' AND "hd_demo_sk" IS NOT NULL) AS "t7" ON "t1"."cs_bill_hdemo_sk" = "t7"."hd_demo_sk"
LEFT JOIN (SELECT "p_promo_sk"
FROM (SELECT "p_promo_sk"
FROM "promotion") AS "t8"
WHERE "p_promo_sk" IS NOT NULL) AS "t10" ON "t1"."cs_promo_sk" = "t10"."p_promo_sk"
INNER JOIN (SELECT "i_item_sk", "i_item_desc"
FROM (SELECT "i_item_sk", "i_item_desc"
FROM "item") AS "t11"
WHERE "i_item_sk" IS NOT NULL) AS "t13" ON "t1"."cs_item_sk" = "t13"."i_item_sk"
INNER JOIN (SELECT "t15"."inv_date_sk", "t15"."inv_item_sk", "t15"."inv_warehouse_sk", "t15"."inv_quantity_on_hand", "t18"."d_date_sk", "t18"."d_week_seq", "t21"."w_warehouse_sk", "t21"."w_warehouse_name"
FROM (SELECT "inv_date_sk", "inv_item_sk", "inv_warehouse_sk", "inv_quantity_on_hand"
FROM "inventory"
WHERE "inv_item_sk" IS NOT NULL AND "inv_warehouse_sk" IS NOT NULL AND ("inv_date_sk" IS NOT NULL AND "inv_quantity_on_hand" IS NOT NULL)) AS "t15"
INNER JOIN (SELECT "d_date_sk", "d_week_seq"
FROM (SELECT "d_date_sk", "d_week_seq"
FROM "date_dim") AS "t16"
WHERE "d_date_sk" IS NOT NULL AND "d_week_seq" IS NOT NULL) AS "t18" ON "t15"."inv_date_sk" = "t18"."d_date_sk"
INNER JOIN (SELECT "w_warehouse_sk", "w_warehouse_name"
FROM (SELECT "w_warehouse_sk", "w_warehouse_name"
FROM "warehouse") AS "t19"
WHERE "w_warehouse_sk" IS NOT NULL) AS "t21" ON "t15"."inv_warehouse_sk" = "t21"."w_warehouse_sk") AS "t22" ON "t1"."cs_item_sk" = "t22"."inv_item_sk" AND "t1"."cs_quantity" > "t22"."inv_quantity_on_hand"
INNER JOIN (SELECT "d_date_sk", "d_week_seq", CAST("d_date" AS DOUBLE PRECISION) + 5 AS "+"
FROM (SELECT "d_date_sk", "d_date", "d_week_seq", "d_year"
FROM "date_dim") AS "t23"
WHERE "d_year" = 2001 AND "d_date_sk" IS NOT NULL AND ("d_week_seq" IS NOT NULL AND CAST("d_date" AS DOUBLE PRECISION) IS NOT NULL)) AS "t25" ON "t22"."d_week_seq" = "t25"."d_week_seq" AND "t1"."cs_sold_date_sk" = "t25"."d_date_sk"
INNER JOIN (SELECT "d_date_sk", CAST("d_date" AS DOUBLE PRECISION) AS "CAST"
FROM (SELECT "d_date_sk", "d_date"
FROM "date_dim") AS "t26"
WHERE "d_date_sk" IS NOT NULL AND CAST("d_date" AS DOUBLE PRECISION) IS NOT NULL) AS "t28" ON "t1"."cs_ship_date_sk" = "t28"."d_date_sk" AND "t25"."+" < "t28"."CAST") AS "t29"
LEFT JOIN (SELECT "cr_item_sk", "cr_order_number"
FROM (SELECT "cr_item_sk", "cr_order_number"
FROM "catalog_returns") AS "t30"
WHERE "cr_item_sk" IS NOT NULL AND "cr_order_number" IS NOT NULL) AS "t32" ON "t29"."cs_item_sk" = "t32"."cr_item_sk" AND "t29"."cs_order_number" = "t32"."cr_order_number"
GROUP BY "t29"."i_item_desc", "t29"."w_warehouse_name", "t29"."d_week_seq"
ORDER BY COUNT(*) DESC, "t29"."i_item_desc", "t29"."w_warehouse_name", "t29"."d_week_seq"
FETCH NEXT 100 ROWS ONLY) AS "t35"
            hive.sql.query.fieldNames $f0,$f1,$f2,$f3,$f4,$f5
            hive.sql.query.fieldTypes string,string,int,bigint,bigint,bigint
            hive.sql.query.split false
          Select Operator
            expressions: $f0 (type: string), $f1 (type: string), $f2 (type: int), $f3 (type: bigint), $f4 (type: bigint), $f5 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            ListSink

