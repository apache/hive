PREHOOK: query: explain cbo
select 
  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
  from
   (select ss_ticket_number
          ,ss_customer_sk
          ,store.s_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and (household_demographics.hd_dep_count = 8 or household_demographics.hd_vehicle_count > 0)
    and date_dim.d_dow = 1
    and date_dim.d_year in (1998,1998+1,1998+2) 
    and store.s_number_employees between 200 and 295
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
    where ss_customer_sk = c_customer_sk
 order by c_last_name,c_first_name,substr(s_city,1,30), profit
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select 
  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
  from
   (select ss_ticket_number
          ,ss_customer_sk
          ,store.s_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and (household_demographics.hd_dep_count = 8 or household_demographics.hd_vehicle_count > 0)
    and date_dim.d_dow = 1
    and date_dim.d_year in (1998,1998+1,1998+2) 
    and store.s_number_employees between 200 and 295
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
    where ss_customer_sk = c_customer_sk
 order by c_last_name,c_first_name,substr(s_city,1,30), profit
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveProject(c_last_name=[$0], c_first_name=[$1], _o__c2=[$2], ss_ticket_number=[$3], amt=[$4], profit=[$5])
  HiveSortLimit(sort0=[$0], sort1=[$1], sort2=[$6], sort3=[$5], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
    HiveProject(c_last_name=[$7], c_first_name=[$6], _o__c2=[$4], ss_ticket_number=[$0], amt=[$2], profit=[$3], (tok_function substr (tok_table_or_col s_city) 1 30)=[$4])
      HiveJoin(condition=[=($1, $5)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject(ss_ticket_number=[$2], ss_customer_sk=[$0], amt=[$4], profit=[$5], substr=[substr($3, 1, 30)])
          HiveProject(ss_customer_sk=[$0], ss_addr_sk=[$1], ss_ticket_number=[$2], s_city=[$3], $f4=[$4], $f5=[$5])
            HiveJdbcConverter(convention=[JDBC.POSTGRES])
              JdbcAggregate(group=[{1, 3, 5, 11}], agg#0=[sum($6)], agg#1=[sum($7)])
                JdbcJoin(condition=[=($4, $10)], joinType=[inner])
                  JdbcJoin(condition=[=($2, $9)], joinType=[inner])
                    JdbcJoin(condition=[=($0, $8)], joinType=[inner])
                      JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$1], ss_hdemo_sk=[$2], ss_addr_sk=[$3], ss_store_sk=[$4], ss_ticket_number=[$5], ss_coupon_amt=[$6], ss_net_profit=[$7])
                        JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($4), IS NOT NULL($2), IS NOT NULL($1))])
                          JdbcProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3], ss_hdemo_sk=[$5], ss_addr_sk=[$6], ss_store_sk=[$7], ss_ticket_number=[$9], ss_coupon_amt=[$19], ss_net_profit=[$22])
                            JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                      JdbcProject(d_date_sk=[$0])
                        JdbcFilter(condition=[AND(IN($1, 1998, 1999, 2000), =($2, 1), IS NOT NULL($0))])
                          JdbcProject(d_date_sk=[$0], d_year=[$6], d_dow=[$7])
                            JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                    JdbcProject(hd_demo_sk=[$0])
                      JdbcFilter(condition=[AND(OR(=($1, 8), >($2, 0)), IS NOT NULL($0))])
                        JdbcProject(hd_demo_sk=[$0], hd_dep_count=[$3], hd_vehicle_count=[$4])
                          JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[household_demographics])
                  JdbcProject(s_store_sk=[$0], s_city=[$2])
                    JdbcFilter(condition=[AND(BETWEEN(false, $1, 200, 295), IS NOT NULL($0))])
                      JdbcProject(s_store_sk=[$0], s_number_employees=[$6], s_city=[$22])
                        JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
        HiveProject(c_customer_sk=[$0], c_first_name=[$1], c_last_name=[$2])
          HiveJdbcConverter(convention=[JDBC.POSTGRES])
            JdbcFilter(condition=[IS NOT NULL($0)])
              JdbcProject(c_customer_sk=[$0], c_first_name=[$8], c_last_name=[$9])
                JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])

