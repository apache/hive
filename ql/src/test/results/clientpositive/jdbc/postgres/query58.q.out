Warning: Shuffle Join MERGEJOIN[123][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 8' is a cross product
PREHOOK: query: explain
with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '1998-02-19'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
#### A masked pattern was here ####
POSTHOOK: query: explain
with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '1998-02-19'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
        Reducer 11 <- Map 15 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
        Reducer 12 <- Reducer 11 (SIMPLE_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 10 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 12 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
        Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
        Reducer 8 <- Map 13 (XPROD_EDGE), Map 7 (XPROD_EDGE)
        Reducer 9 <- Map 14 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: store_sales
                  properties:
                    hive.sql.query SELECT "t1"."ss_sold_date_sk", "t1"."ss_item_sk", "t1"."ss_ext_sales_price", "t4"."i_item_sk", "t4"."i_item_id", "t7"."d_date_sk", "t7"."d_date"
FROM (SELECT "ss_sold_date_sk", "ss_item_sk", "ss_ext_sales_price"
FROM (SELECT "ss_sold_date_sk", "ss_item_sk", "ss_ext_sales_price"
FROM "store_sales") AS "t"
WHERE "ss_item_sk" IS NOT NULL AND "ss_sold_date_sk" IS NOT NULL) AS "t1"
INNER JOIN (SELECT "i_item_sk", "i_item_id"
FROM (SELECT "i_item_sk", "i_item_id"
FROM "item") AS "t2"
WHERE "i_item_sk" IS NOT NULL AND "i_item_id" IS NOT NULL) AS "t4" ON "t1"."ss_item_sk" = "t4"."i_item_sk"
INNER JOIN (SELECT "d_date_sk", "d_date"
FROM (SELECT "d_date_sk", "d_date"
FROM "date_dim") AS "t5"
WHERE "d_date" IS NOT NULL AND "d_date_sk" IS NOT NULL) AS "t7" ON "t1"."ss_sold_date_sk" = "t7"."d_date_sk"
                    hive.sql.query.fieldNames ss_sold_date_sk,ss_item_sk,ss_ext_sales_price,i_item_sk,i_item_id,d_date_sk,d_date
                    hive.sql.query.fieldTypes int,bigint,decimal(7,2),bigint,string,int,string
                    hive.sql.query.split false
                  Statistics: Num rows: 1 Data size: 480 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ss_ext_sales_price (type: decimal(7,2)), i_item_id (type: string), d_date (type: string)
                    outputColumnNames: _col2, _col4, _col6
                    Statistics: Num rows: 1 Data size: 480 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col6 (type: string)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col6 (type: string)
                      Statistics: Num rows: 1 Data size: 480 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col2 (type: decimal(7,2)), _col4 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 13 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  properties:
                    hive.sql.query SELECT COUNT(*) AS "cnt"
FROM (SELECT "d_date"
FROM "date_dim") AS "t"
WHERE "d_date" = '1998-02-19'
                    hive.sql.query.fieldNames cnt
                    hive.sql.query.fieldTypes bigint
                    hive.sql.query.split false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: cnt (type: bigint)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Filter Operator
                      predicate: sq_count_check(_col0) (type: boolean)
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 14 
            Map Operator Tree:
                TableScan
                  alias: catalog_sales
                  properties:
                    hive.sql.query SELECT "t1"."cs_sold_date_sk", "t1"."cs_item_sk", "t1"."cs_ext_sales_price", "t4"."i_item_sk", "t4"."i_item_id", "t7"."d_date_sk", "t7"."d_date"
FROM (SELECT "cs_sold_date_sk", "cs_item_sk", "cs_ext_sales_price"
FROM (SELECT "cs_sold_date_sk", "cs_item_sk", "cs_ext_sales_price"
FROM "catalog_sales") AS "t"
WHERE "cs_item_sk" IS NOT NULL AND "cs_sold_date_sk" IS NOT NULL) AS "t1"
INNER JOIN (SELECT "i_item_sk", "i_item_id"
FROM (SELECT "i_item_sk", "i_item_id"
FROM "item") AS "t2"
WHERE "i_item_sk" IS NOT NULL AND "i_item_id" IS NOT NULL) AS "t4" ON "t1"."cs_item_sk" = "t4"."i_item_sk"
INNER JOIN (SELECT "d_date_sk", "d_date"
FROM (SELECT "d_date_sk", "d_date"
FROM "date_dim") AS "t5"
WHERE "d_date" IS NOT NULL AND "d_date_sk" IS NOT NULL) AS "t7" ON "t1"."cs_sold_date_sk" = "t7"."d_date_sk"
                    hive.sql.query.fieldNames cs_sold_date_sk,cs_item_sk,cs_ext_sales_price,i_item_sk,i_item_id,d_date_sk,d_date
                    hive.sql.query.fieldTypes int,bigint,decimal(7,2),bigint,string,int,string
                    hive.sql.query.split false
                  Statistics: Num rows: 1 Data size: 480 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: cs_ext_sales_price (type: decimal(7,2)), i_item_id (type: string), d_date (type: string)
                    outputColumnNames: _col2, _col4, _col6
                    Statistics: Num rows: 1 Data size: 480 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col6 (type: string)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col6 (type: string)
                      Statistics: Num rows: 1 Data size: 480 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col2 (type: decimal(7,2)), _col4 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 15 
            Map Operator Tree:
                TableScan
                  alias: web_sales
                  properties:
                    hive.sql.query SELECT "t1"."ws_sold_date_sk", "t1"."ws_item_sk", "t1"."ws_ext_sales_price", "t4"."i_item_sk", "t4"."i_item_id", "t7"."d_date_sk", "t7"."d_date"
FROM (SELECT "ws_sold_date_sk", "ws_item_sk", "ws_ext_sales_price"
FROM (SELECT "ws_sold_date_sk", "ws_item_sk", "ws_ext_sales_price"
FROM "web_sales") AS "t"
WHERE "ws_item_sk" IS NOT NULL AND "ws_sold_date_sk" IS NOT NULL) AS "t1"
INNER JOIN (SELECT "i_item_sk", "i_item_id"
FROM (SELECT "i_item_sk", "i_item_id"
FROM "item") AS "t2"
WHERE "i_item_sk" IS NOT NULL AND "i_item_id" IS NOT NULL) AS "t4" ON "t1"."ws_item_sk" = "t4"."i_item_sk"
INNER JOIN (SELECT "d_date_sk", "d_date"
FROM (SELECT "d_date_sk", "d_date"
FROM "date_dim") AS "t5"
WHERE "d_date" IS NOT NULL AND "d_date_sk" IS NOT NULL) AS "t7" ON "t1"."ws_sold_date_sk" = "t7"."d_date_sk"
                    hive.sql.query.fieldNames ws_sold_date_sk,ws_item_sk,ws_ext_sales_price,i_item_sk,i_item_id,d_date_sk,d_date
                    hive.sql.query.fieldTypes int,bigint,decimal(7,2),bigint,string,int,string
                    hive.sql.query.split false
                  Statistics: Num rows: 1 Data size: 480 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ws_ext_sales_price (type: decimal(7,2)), i_item_id (type: string), d_date (type: string)
                    outputColumnNames: _col2, _col4, _col6
                    Statistics: Num rows: 1 Data size: 480 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col6 (type: string)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col6 (type: string)
                      Statistics: Num rows: 1 Data size: 480 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col2 (type: decimal(7,2)), _col4 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  properties:
                    hive.sql.query SELECT "t1"."d_date", "t1"."d_week_seq", "t4"."d_week_seq" AS "d_week_seq0"
FROM (SELECT "d_date", "d_week_seq"
FROM (SELECT "d_date", "d_week_seq"
FROM "date_dim") AS "t"
WHERE "d_week_seq" IS NOT NULL AND "d_date" IS NOT NULL) AS "t1"
INNER JOIN (SELECT "d_week_seq"
FROM (SELECT "d_date", "d_week_seq"
FROM "date_dim") AS "t2"
WHERE "d_date" = '1998-02-19' AND "d_week_seq" IS NOT NULL) AS "t4" ON "t1"."d_week_seq" = "t4"."d_week_seq"
                    hive.sql.query.fieldNames d_date,d_week_seq,d_week_seq0
                    hive.sql.query.fieldTypes string,int,int
                    hive.sql.query.split false
                  Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: d_date (type: string)
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      null sort order: 
                      sort order: 
                      Statistics: Num rows: 1 Data size: 184 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 10 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: decimal(17,2)), (0.9 * _col1) (type: decimal(19,3)), (1.1 * _col1) (type: decimal(20,3))
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: decimal(17,2)), _col2 (type: decimal(19,3)), _col3 (type: decimal(20,3))
        Reducer 11 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Semi Join 0 to 1
                keys:
                  0 _col6 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col2, _col4
                Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col2)
                  keys: _col4 (type: string)
                  minReductionHashAggr: 0.99
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: decimal(17,2))
        Reducer 12 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: decimal(17,2)), (0.9 * _col1) (type: decimal(19,3)), (1.1 * _col1) (type: decimal(20,3))
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: decimal(17,2)), _col2 (type: decimal(19,3)), _col3 (type: decimal(20,3))
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Semi Join 0 to 1
                keys:
                  0 _col6 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col2, _col4
                Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col2)
                  keys: _col4 (type: string)
                  minReductionHashAggr: 0.99
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: decimal(17,2))
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: decimal(17,2)), (0.9 * _col1) (type: decimal(19,3)), (1.1 * _col1) (type: decimal(20,3))
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: decimal(17,2)), _col2 (type: decimal(19,3)), _col3 (type: decimal(20,3))
        Reducer 4 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col5, _col6, _col7
                residual filter predicates: {_col1 BETWEEN _col6 AND _col7} {_col5 BETWEEN _col2 AND _col3}
                Statistics: Num rows: 1 Data size: 580 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 1 Data size: 580 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: decimal(17,2)), _col2 (type: decimal(19,3)), _col3 (type: decimal(20,3)), _col5 (type: decimal(17,2)), _col6 (type: decimal(19,3)), _col7 (type: decimal(20,3))
        Reducer 5 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col5, _col6, _col7, _col9, _col10, _col11
                residual filter predicates: {_col1 BETWEEN _col10 AND _col11} {_col5 BETWEEN _col10 AND _col11} {_col9 BETWEEN _col2 AND _col3} {_col9 BETWEEN _col6 AND _col7}
                Statistics: Num rows: 1 Data size: 638 Basic stats: COMPLETE Column stats: NONE
                Top N Key Operator
                  sort order: ++
                  keys: _col0 (type: string), _col1 (type: decimal(17,2))
                  null sort order: zz
                  Statistics: Num rows: 1 Data size: 638 Basic stats: COMPLETE Column stats: NONE
                  top n: 100
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: decimal(17,2)), (((_col1 / ((_col1 + _col5) + _col9)) / 3) * 100) (type: decimal(38,17)), _col5 (type: decimal(17,2)), (((_col5 / ((_col1 + _col5) + _col9)) / 3) * 100) (type: decimal(38,17)), _col9 (type: decimal(17,2)), (((_col9 / ((_col1 + _col5) + _col9)) / 3) * 100) (type: decimal(38,17)), (((_col1 + _col5) + _col9) / 3) (type: decimal(23,6))
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                    Statistics: Num rows: 1 Data size: 638 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: decimal(17,2))
                      null sort order: zz
                      sort order: ++
                      Statistics: Num rows: 1 Data size: 638 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col2 (type: decimal(38,17)), _col3 (type: decimal(17,2)), _col4 (type: decimal(38,17)), _col5 (type: decimal(17,2)), _col6 (type: decimal(38,17)), _col7 (type: decimal(23,6))
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: decimal(17,2)), VALUE._col0 (type: decimal(38,17)), VALUE._col1 (type: decimal(17,2)), VALUE._col2 (type: decimal(38,17)), VALUE._col3 (type: decimal(17,2)), VALUE._col4 (type: decimal(38,17)), VALUE._col5 (type: decimal(23,6))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                Statistics: Num rows: 1 Data size: 638 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 1 Data size: 638 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 638 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 8 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 193 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  keys: _col0 (type: string)
                  minReductionHashAggr: 0.99
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 193 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 193 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 193 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 193 Basic stats: COMPLETE Column stats: NONE
        Reducer 9 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Left Semi Join 0 to 1
                keys:
                  0 _col6 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col2, _col4
                Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col2)
                  keys: _col4 (type: string)
                  minReductionHashAggr: 0.99
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: z
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 1 Data size: 528 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: decimal(17,2))

  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        ListSink

