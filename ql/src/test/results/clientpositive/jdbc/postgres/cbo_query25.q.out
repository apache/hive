PREHOOK: query: explain cbo
select  
 i_item_id
 ,i_item_desc
 ,s_store_id
 ,s_store_name
 ,sum(ss_net_profit) as store_sales_profit
 ,sum(sr_net_loss) as store_returns_loss
 ,sum(cs_net_profit) as catalog_sales_profit
 from
 store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where
 d1.d_moy = 4
 and d1.d_year = 2000
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_moy               between 4 and  10
 and d2.d_year              = 2000
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_moy               between 4 and  10 
 and d3.d_year              = 2000
 group by
 i_item_id
 ,i_item_desc
 ,s_store_id
 ,s_store_name
 order by
 i_item_id
 ,i_item_desc
 ,s_store_id
 ,s_store_name
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store
PREHOOK: Input: default@store_returns
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  
 i_item_id
 ,i_item_desc
 ,s_store_id
 ,s_store_name
 ,sum(ss_net_profit) as store_sales_profit
 ,sum(sr_net_loss) as store_returns_loss
 ,sum(cs_net_profit) as catalog_sales_profit
 from
 store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where
 d1.d_moy = 4
 and d1.d_year = 2000
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_moy               between 4 and  10
 and d2.d_year              = 2000
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_moy               between 4 and  10 
 and d3.d_year              = 2000
 group by
 i_item_id
 ,i_item_desc
 ,s_store_id
 ,s_store_name
 order by
 i_item_id
 ,i_item_desc
 ,s_store_id
 ,s_store_name
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_returns
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcSort(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$3], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
    JdbcProject(i_item_id=[$2], i_item_desc=[$3], s_store_id=[$0], s_store_name=[$1], $f4=[$4], $f5=[$5], $f6=[$6])
      JdbcAggregate(group=[{8, 9, 11, 12}], agg#0=[sum($5)], agg#1=[sum($17)], agg#2=[sum($22)])
        JdbcJoin(condition=[AND(=($2, $15), =($1, $14), =($4, $16))], joinType=[inner])
          JdbcJoin(condition=[=($10, $1)], joinType=[inner])
            JdbcJoin(condition=[=($7, $3)], joinType=[inner])
              JdbcJoin(condition=[=($6, $0)], joinType=[inner])
                JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$3], ss_ticket_number=[$4], ss_net_profit=[$5])
                  JdbcFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($1), IS NOT NULL($4), IS NOT NULL($0), IS NOT NULL($3))])
                    JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_customer_sk=[$3], ss_store_sk=[$7], ss_ticket_number=[$9], ss_net_profit=[$22])
                      JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                JdbcProject(d_date_sk=[$0])
                  JdbcFilter(condition=[AND(=($2, 4), =($1, 2000), IS NOT NULL($0))])
                    JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d1])
              JdbcProject(s_store_sk=[$0], s_store_id=[$1], s_store_name=[$2])
                JdbcFilter(condition=[IS NOT NULL($0)])
                  JdbcProject(s_store_sk=[$0], s_store_id=[$1], s_store_name=[$5])
                    JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
            JdbcProject(i_item_sk=[$0], i_item_id=[$1], i_item_desc=[$2])
              JdbcFilter(condition=[IS NOT NULL($0)])
                JdbcProject(i_item_sk=[$0], i_item_id=[$1], i_item_desc=[$4])
                  JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
          JdbcProject(sr_returned_date_sk=[$0], sr_item_sk=[$1], sr_customer_sk=[$2], sr_ticket_number=[$3], sr_net_loss=[$4], d_date_sk=[$5], cs_sold_date_sk=[$6], cs_bill_customer_sk=[$7], cs_item_sk=[$8], cs_net_profit=[$9], d_date_sk0=[$10])
            JdbcJoin(condition=[AND(=($2, $7), =($1, $8))], joinType=[inner])
              JdbcJoin(condition=[=($0, $5)], joinType=[inner])
                JdbcProject(sr_returned_date_sk=[$0], sr_item_sk=[$1], sr_customer_sk=[$2], sr_ticket_number=[$3], sr_net_loss=[$4])
                  JdbcFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($1), IS NOT NULL($3), IS NOT NULL($0))])
                    JdbcProject(sr_returned_date_sk=[$0], sr_item_sk=[$2], sr_customer_sk=[$3], sr_ticket_number=[$9], sr_net_loss=[$19])
                      JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                JdbcProject(d_date_sk=[$0])
                  JdbcFilter(condition=[AND(=($1, 2000), BETWEEN(false, $2, 4, 10), IS NOT NULL($0))])
                    JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d2])
              JdbcProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$1], cs_item_sk=[$2], cs_net_profit=[$3], d_date_sk=[$4])
                JdbcJoin(condition=[=($0, $4)], joinType=[inner])
                  JdbcProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$1], cs_item_sk=[$2], cs_net_profit=[$3])
                    JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($0))])
                      JdbcProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$3], cs_item_sk=[$15], cs_net_profit=[$33])
                        JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                  JdbcProject(d_date_sk=[$0])
                    JdbcFilter(condition=[AND(=($1, 2000), BETWEEN(false, $2, 4, 10), IS NOT NULL($0))])
                      JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d3])

