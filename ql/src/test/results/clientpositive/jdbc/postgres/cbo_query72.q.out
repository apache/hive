PREHOOK: query: explain cbo
select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,count(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,count(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2001
  and hd_buy_potential = '1001-5000'
  and cd_marital_status = 'M'
  and d1.d_year = 2001
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@inventory
PREHOOK: Input: default@item
PREHOOK: Input: default@promotion
PREHOOK: Input: default@warehouse
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,count(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,count(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2001
  and hd_buy_potential = '1001-5000'
  and cd_marital_status = 'M'
  and d1.d_year = 2001
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@inventory
POSTHOOK: Input: default@item
POSTHOOK: Input: default@promotion
POSTHOOK: Input: default@warehouse
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcSort(sort0=[$5], sort1=[$0], sort2=[$1], sort3=[$2], dir0=[DESC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
    JdbcAggregate(group=[{0, 1, 2}], agg#0=[count($3)], agg#1=[count($4)], agg#2=[count()])
      JdbcProject($f0=[$15], $f1=[$13], $f2=[$19], $f3=[CASE(IS NULL($25), 1, 0)], $f4=[CASE(IS NOT NULL($25), 1, 0)])
        JdbcJoin(condition=[AND(=($26, $4), =($27, $6))], joinType=[left])
          JdbcProject(cs_sold_date_sk=[$0], cs_ship_date_sk=[$1], cs_bill_cdemo_sk=[$2], cs_bill_hdemo_sk=[$3], cs_item_sk=[$4], cs_promo_sk=[$5], cs_order_number=[$6], cs_quantity=[$7], inv_date_sk=[$13], inv_item_sk=[$14], inv_warehouse_sk=[$15], inv_quantity_on_hand=[$16], w_warehouse_sk=[$19], w_warehouse_name=[$20], i_item_sk=[$11], i_item_desc=[$12], cd_demo_sk=[$8], hd_demo_sk=[$9], d_date_sk=[$21], d_week_seq=[$22], +=[$23], d_date_sk0=[$17], d_week_seq0=[$18], d_date_sk1=[$24], CAST=[$25], p_promo_sk=[$10])
            JdbcJoin(condition=[AND(=($1, $24), >($25, $23))], joinType=[inner])
              JdbcJoin(condition=[AND(=($22, $18), =($0, $21))], joinType=[inner])
                JdbcJoin(condition=[AND(=($4, $14), <($16, $7))], joinType=[inner])
                  JdbcJoin(condition=[=($11, $4)], joinType=[inner])
                    JdbcJoin(condition=[=($5, $10)], joinType=[left])
                      JdbcJoin(condition=[=($3, $9)], joinType=[inner])
                        JdbcJoin(condition=[=($2, $8)], joinType=[inner])
                          JdbcProject(cs_sold_date_sk=[$0], cs_ship_date_sk=[$1], cs_bill_cdemo_sk=[$2], cs_bill_hdemo_sk=[$3], cs_item_sk=[$4], cs_promo_sk=[$5], cs_order_number=[$6], cs_quantity=[$7])
                            JdbcFilter(condition=[AND(IS NOT NULL($4), IS NOT NULL($2), IS NOT NULL($3), IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($7))])
                              JdbcProject(cs_sold_date_sk=[$0], cs_ship_date_sk=[$2], cs_bill_cdemo_sk=[$4], cs_bill_hdemo_sk=[$5], cs_item_sk=[$15], cs_promo_sk=[$16], cs_order_number=[$17], cs_quantity=[$18])
                                JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                          JdbcProject(cd_demo_sk=[$0])
                            JdbcFilter(condition=[AND(=($1, _UTF-16LE'M'), IS NOT NULL($0))])
                              JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$2])
                                JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[customer_demographics])
                        JdbcProject(hd_demo_sk=[$0])
                          JdbcFilter(condition=[AND(=($1, _UTF-16LE'1001-5000'), IS NOT NULL($0))])
                            JdbcProject(hd_demo_sk=[$0], hd_buy_potential=[$2])
                              JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[household_demographics])
                      JdbcProject(p_promo_sk=[$0])
                        JdbcFilter(condition=[IS NOT NULL($0)])
                          JdbcProject(p_promo_sk=[$0])
                            JdbcHiveTableScan(table=[[default, promotion]], table:alias=[promotion])
                    JdbcProject(i_item_sk=[$0], i_item_desc=[$1])
                      JdbcFilter(condition=[IS NOT NULL($0)])
                        JdbcProject(i_item_sk=[$0], i_item_desc=[$4])
                          JdbcHiveTableScan(table=[[default, item]], table:alias=[item])
                  JdbcProject(inv_date_sk=[$0], inv_item_sk=[$1], inv_warehouse_sk=[$2], inv_quantity_on_hand=[$3], d_date_sk=[$4], d_week_seq=[$5], w_warehouse_sk=[$6], w_warehouse_name=[$7])
                    JdbcJoin(condition=[=($6, $2)], joinType=[inner])
                      JdbcJoin(condition=[=($0, $4)], joinType=[inner])
                        JdbcProject(inv_date_sk=[$0], inv_item_sk=[$1], inv_warehouse_sk=[$2], inv_quantity_on_hand=[$3])
                          JdbcFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($0), IS NOT NULL($3))])
                            JdbcHiveTableScan(table=[[default, inventory]], table:alias=[inventory])
                        JdbcProject(d_date_sk=[$0], d_week_seq=[$1])
                          JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                            JdbcProject(d_date_sk=[$0], d_week_seq=[$4])
                              JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d2])
                      JdbcProject(w_warehouse_sk=[$0], w_warehouse_name=[$1])
                        JdbcFilter(condition=[IS NOT NULL($0)])
                          JdbcProject(w_warehouse_sk=[$0], w_warehouse_name=[$2])
                            JdbcHiveTableScan(table=[[default, warehouse]], table:alias=[warehouse])
                JdbcProject(d_date_sk=[$0], d_week_seq=[$2], +=[+(CAST($1):DOUBLE, 5)])
                  JdbcFilter(condition=[AND(=($3, 2001), IS NOT NULL($0), IS NOT NULL($2), IS NOT NULL(CAST($1):DOUBLE))])
                    JdbcProject(d_date_sk=[$0], d_date=[$2], d_week_seq=[$4], d_year=[$6])
                      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d1])
              JdbcProject(d_date_sk=[$0], CAST=[CAST($1):DOUBLE])
                JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL(CAST($1):DOUBLE))])
                  JdbcProject(d_date_sk=[$0], d_date=[$2])
                    JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[d3])
          JdbcProject(cr_item_sk=[$0], cr_order_number=[$1])
            JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
              JdbcProject(cr_item_sk=[$2], cr_order_number=[$16])
                JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])

