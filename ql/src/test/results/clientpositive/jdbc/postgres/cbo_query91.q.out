PREHOOK: query: explain cbo
select  
        cc_call_center_id Call_Center,
        cc_name Call_Center_Name,
        cc_manager Manager,
        sum(cr_net_loss) Returns_Loss
from
        call_center,
        catalog_returns,
        date_dim,
        customer,
        customer_address,
        customer_demographics,
        household_demographics
where
        cr_call_center_sk       = cc_call_center_sk
and     cr_returned_date_sk     = d_date_sk
and     cr_returning_customer_sk= c_customer_sk
and     cd_demo_sk              = c_current_cdemo_sk
and     hd_demo_sk              = c_current_hdemo_sk
and     ca_address_sk           = c_current_addr_sk
and     d_year                  = 1999 
and     d_moy                   = 11
and     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')
        or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree'))
and     hd_buy_potential like '0-500%'
and     ca_gmt_offset           = -7
group by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status
order by sum(cr_net_loss) desc
PREHOOK: type: QUERY
PREHOOK: Input: default@call_center
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  
        cc_call_center_id Call_Center,
        cc_name Call_Center_Name,
        cc_manager Manager,
        sum(cr_net_loss) Returns_Loss
from
        call_center,
        catalog_returns,
        date_dim,
        customer,
        customer_address,
        customer_demographics,
        household_demographics
where
        cr_call_center_sk       = cc_call_center_sk
and     cr_returned_date_sk     = d_date_sk
and     cr_returning_customer_sk= c_customer_sk
and     cd_demo_sk              = c_current_cdemo_sk
and     hd_demo_sk              = c_current_hdemo_sk
and     ca_address_sk           = c_current_addr_sk
and     d_year                  = 1999 
and     d_moy                   = 11
and     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')
        or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree'))
and     hd_buy_potential like '0-500%'
and     ca_gmt_offset           = -7
group by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status
order by sum(cr_net_loss) desc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@call_center
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcProject(call_center=[$0], call_center_name=[$1], manager=[$2], returns_loss=[$3])
    JdbcSort(sort0=[$4], dir0=[DESC])
      JdbcProject(call_center=[$2], call_center_name=[$3], manager=[$4], returns_loss=[$5], (tok_function sum (tok_table_or_col cr_net_loss))=[$5])
        JdbcAggregate(group=[{7, 8, 15, 16, 17}], agg#0=[sum($12)])
          JdbcJoin(condition=[=($10, $0)], joinType=[inner])
            JdbcJoin(condition=[=($6, $1)], joinType=[inner])
              JdbcJoin(condition=[=($5, $2)], joinType=[inner])
                JdbcJoin(condition=[=($4, $3)], joinType=[inner])
                  JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_hdemo_sk=[$2], c_current_addr_sk=[$3])
                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($3), IS NOT NULL($1), IS NOT NULL($2))])
                      JdbcProject(c_customer_sk=[$0], c_current_cdemo_sk=[$2], c_current_hdemo_sk=[$3], c_current_addr_sk=[$4])
                        JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                  JdbcProject(ca_address_sk=[$0])
                    JdbcFilter(condition=[AND(=($1, -7:DECIMAL(1, 0)), IS NOT NULL($0))])
                      JdbcProject(ca_address_sk=[$0], ca_gmt_offset=[$11])
                        JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
                JdbcProject(hd_demo_sk=[$0])
                  JdbcFilter(condition=[AND(LIKE($1, _UTF-16LE'0-500%':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])
                    JdbcProject(hd_demo_sk=[$0], hd_buy_potential=[$2])
                      JdbcHiveTableScan(table=[[default, household_demographics]], table:alias=[household_demographics])
              JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$1], cd_education_status=[$2])
                JdbcFilter(condition=[AND(OR(AND(=($1, _UTF-16LE'M'), =($2, _UTF-16LE'Unknown')), AND(=($1, _UTF-16LE'W'), =($2, _UTF-16LE'Advanced Degree'))), IN($1, _UTF-16LE'M':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'W':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IN($2, _UTF-16LE'Unknown':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'Advanced Degree':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), IS NOT NULL($0))])
                  JdbcProject(cd_demo_sk=[$0], cd_marital_status=[$2], cd_education_status=[$3])
                    JdbcHiveTableScan(table=[[default, customer_demographics]], table:alias=[customer_demographics])
            JdbcProject(cr_returned_date_sk=[$0], cr_returning_customer_sk=[$1], cr_call_center_sk=[$2], cr_net_loss=[$3], d_date_sk=[$4], cc_call_center_sk=[$5], cc_call_center_id=[$6], cc_name=[$7], cc_manager=[$8])
              JdbcJoin(condition=[=($2, $5)], joinType=[inner])
                JdbcJoin(condition=[=($0, $4)], joinType=[inner])
                  JdbcProject(cr_returned_date_sk=[$0], cr_returning_customer_sk=[$1], cr_call_center_sk=[$2], cr_net_loss=[$3])
                    JdbcFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($0), IS NOT NULL($1))])
                      JdbcProject(cr_returned_date_sk=[$0], cr_returning_customer_sk=[$7], cr_call_center_sk=[$11], cr_net_loss=[$26])
                        JdbcHiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])
                  JdbcProject(d_date_sk=[$0])
                    JdbcFilter(condition=[AND(=($1, 1999), =($2, 11), IS NOT NULL($0))])
                      JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                JdbcProject(cc_call_center_sk=[$0], cc_call_center_id=[$1], cc_name=[$2], cc_manager=[$3])
                  JdbcFilter(condition=[IS NOT NULL($0)])
                    JdbcProject(cc_call_center_sk=[$0], cc_call_center_id=[$1], cc_name=[$6], cc_manager=[$11])
                      JdbcHiveTableScan(table=[[default, call_center]], table:alias=[call_center])

