PREHOOK: query: explain
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(ss_ext_list_price-ss_ext_discount_amt) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(ws_ext_list_price-ws_ext_discount_amt) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select
                  t_s_secyear.customer_id
                 ,t_s_secyear.customer_first_name
                 ,t_s_secyear.customer_last_name
                 ,t_s_secyear.customer_birth_country
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.dyear = 1999
         and t_s_secyear.dyear = 1999+1
         and t_w_firstyear.dyear = 1999
         and t_w_secyear.dyear = 1999+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else 0.0 end
             > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else 0.0 end
 order by t_s_secyear.customer_id
         ,t_s_secyear.customer_first_name
         ,t_s_secyear.customer_last_name
         ,t_s_secyear.customer_birth_country
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
#### A masked pattern was here ####
POSTHOOK: query: explain
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(ss_ext_list_price-ss_ext_discount_amt) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(ws_ext_list_price-ws_ext_discount_amt) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select
                  t_s_secyear.customer_id
                 ,t_s_secyear.customer_first_name
                 ,t_s_secyear.customer_last_name
                 ,t_s_secyear.customer_birth_country
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.dyear = 1999
         and t_s_secyear.dyear = 1999+1
         and t_w_firstyear.dyear = 1999
         and t_w_secyear.dyear = 1999+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else 0.0 end
             > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else 0.0 end
 order by t_s_secyear.customer_id
         ,t_s_secyear.customer_first_name
         ,t_s_secyear.customer_last_name
         ,t_s_secyear.customer_birth_country
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: customer
          properties:
            hive.sql.query SELECT "t46"."customer_id", "t46"."customer_first_name", "t46"."customer_last_name", "t46"."customer_birth_country"
FROM (SELECT "t44"."customer_id", "t44"."customer_first_name", "t44"."customer_last_name", "t44"."customer_birth_country"
FROM (SELECT "t1"."c_customer_id" AS "customer_id", SUM("t4"."-") AS "year_total", SUM("t4"."-") > 0 AS ">"
FROM (SELECT "c_customer_sk", "c_customer_id", "c_first_name", "c_last_name", "c_preferred_cust_flag", "c_birth_country", "c_login", "c_email_address"
FROM (SELECT "c_customer_sk", "c_customer_id", "c_first_name", "c_last_name", "c_preferred_cust_flag", "c_birth_country", "c_login", "c_email_address"
FROM "customer") AS "t"
WHERE "c_customer_sk" IS NOT NULL AND "c_customer_id" IS NOT NULL) AS "t1"
INNER JOIN ((SELECT "ss_sold_date_sk", "ss_customer_sk", "ss_ext_list_price" - "ss_ext_discount_amt" AS "-"
FROM (SELECT "ss_sold_date_sk", "ss_customer_sk", "ss_ext_discount_amt", "ss_ext_list_price"
FROM "store_sales") AS "t2"
WHERE "ss_customer_sk" IS NOT NULL AND "ss_sold_date_sk" IS NOT NULL) AS "t4" INNER JOIN (SELECT "d_date_sk"
FROM (SELECT "d_date_sk", "d_year"
FROM "date_dim") AS "t5"
WHERE "d_year" = 1999 AND "d_date_sk" IS NOT NULL) AS "t7" ON "t4"."ss_sold_date_sk" = "t7"."d_date_sk") ON "t1"."c_customer_sk" = "t4"."ss_customer_sk"
GROUP BY "t1"."c_customer_id", "t1"."c_first_name", "t1"."c_last_name", "t1"."c_preferred_cust_flag", "t1"."c_birth_country", "t1"."c_login", "t1"."c_email_address"
HAVING SUM("t4"."-") > 0) AS "t10"
INNER JOIN (SELECT "t13"."c_customer_id" AS "customer_id", SUM("t16"."-") AS "year_total"
FROM (SELECT "c_customer_sk", "c_customer_id", "c_first_name", "c_last_name", "c_preferred_cust_flag", "c_birth_country", "c_login", "c_email_address"
FROM (SELECT "c_customer_sk", "c_customer_id", "c_first_name", "c_last_name", "c_preferred_cust_flag", "c_birth_country", "c_login", "c_email_address"
FROM "customer") AS "t11"
WHERE "c_customer_sk" IS NOT NULL AND "c_customer_id" IS NOT NULL) AS "t13"
INNER JOIN ((SELECT "ws_sold_date_sk", "ws_bill_customer_sk", "ws_ext_list_price" - "ws_ext_discount_amt" AS "-"
FROM (SELECT "ws_sold_date_sk", "ws_bill_customer_sk", "ws_ext_discount_amt", "ws_ext_list_price"
FROM "web_sales") AS "t14"
WHERE "ws_bill_customer_sk" IS NOT NULL AND "ws_sold_date_sk" IS NOT NULL) AS "t16" INNER JOIN (SELECT "d_date_sk"
FROM (SELECT "d_date_sk", "d_year"
FROM "date_dim") AS "t17"
WHERE "d_year" = 2000 AND "d_date_sk" IS NOT NULL) AS "t19" ON "t16"."ws_sold_date_sk" = "t19"."d_date_sk") ON "t13"."c_customer_sk" = "t16"."ws_bill_customer_sk"
GROUP BY "t13"."c_customer_id", "t13"."c_first_name", "t13"."c_last_name", "t13"."c_preferred_cust_flag", "t13"."c_birth_country", "t13"."c_login", "t13"."c_email_address") AS "t21" ON "t10"."customer_id" = "t21"."customer_id"
INNER JOIN (SELECT "t24"."c_customer_id" AS "customer_id", SUM("t27"."-") AS "year_total", SUM("t27"."-") > 0 AS ">"
FROM (SELECT "c_customer_sk", "c_customer_id", "c_first_name", "c_last_name", "c_preferred_cust_flag", "c_birth_country", "c_login", "c_email_address"
FROM (SELECT "c_customer_sk", "c_customer_id", "c_first_name", "c_last_name", "c_preferred_cust_flag", "c_birth_country", "c_login", "c_email_address"
FROM "customer") AS "t22"
WHERE "c_customer_sk" IS NOT NULL AND "c_customer_id" IS NOT NULL) AS "t24"
INNER JOIN ((SELECT "ws_sold_date_sk", "ws_bill_customer_sk", "ws_ext_list_price" - "ws_ext_discount_amt" AS "-"
FROM (SELECT "ws_sold_date_sk", "ws_bill_customer_sk", "ws_ext_discount_amt", "ws_ext_list_price"
FROM "web_sales") AS "t25"
WHERE "ws_bill_customer_sk" IS NOT NULL AND "ws_sold_date_sk" IS NOT NULL) AS "t27" INNER JOIN (SELECT "d_date_sk"
FROM (SELECT "d_date_sk", "d_year"
FROM "date_dim") AS "t28"
WHERE "d_year" = 1999 AND "d_date_sk" IS NOT NULL) AS "t30" ON "t27"."ws_sold_date_sk" = "t30"."d_date_sk") ON "t24"."c_customer_sk" = "t27"."ws_bill_customer_sk"
GROUP BY "t24"."c_customer_id", "t24"."c_first_name", "t24"."c_last_name", "t24"."c_preferred_cust_flag", "t24"."c_birth_country", "t24"."c_login", "t24"."c_email_address"
HAVING SUM("t27"."-") > 0) AS "t33" ON "t10"."customer_id" = "t33"."customer_id"
INNER JOIN (SELECT "t36"."c_customer_id" AS "customer_id", "t36"."c_first_name" AS "customer_first_name", "t36"."c_last_name" AS "customer_last_name", "t36"."c_birth_country" AS "customer_birth_country", SUM("t39"."-") AS "year_total"
FROM (SELECT "c_customer_sk", "c_customer_id", "c_first_name", "c_last_name", "c_preferred_cust_flag", "c_birth_country", "c_login", "c_email_address"
FROM (SELECT "c_customer_sk", "c_customer_id", "c_first_name", "c_last_name", "c_preferred_cust_flag", "c_birth_country", "c_login", "c_email_address"
FROM "customer") AS "t34"
WHERE "c_customer_sk" IS NOT NULL AND "c_customer_id" IS NOT NULL) AS "t36"
INNER JOIN ((SELECT "ss_sold_date_sk", "ss_customer_sk", "ss_ext_list_price" - "ss_ext_discount_amt" AS "-"
FROM (SELECT "ss_sold_date_sk", "ss_customer_sk", "ss_ext_discount_amt", "ss_ext_list_price"
FROM "store_sales") AS "t37"
WHERE "ss_customer_sk" IS NOT NULL AND "ss_sold_date_sk" IS NOT NULL) AS "t39" INNER JOIN (SELECT "d_date_sk"
FROM (SELECT "d_date_sk", "d_year"
FROM "date_dim") AS "t40"
WHERE "d_year" = 2000 AND "d_date_sk" IS NOT NULL) AS "t42" ON "t39"."ss_sold_date_sk" = "t42"."d_date_sk") ON "t36"."c_customer_sk" = "t39"."ss_customer_sk"
GROUP BY "t36"."c_customer_id", "t36"."c_first_name", "t36"."c_last_name", "t36"."c_preferred_cust_flag", "t36"."c_birth_country", "t36"."c_login", "t36"."c_email_address") AS "t44" ON "t10"."customer_id" = "t44"."customer_id" AND CASE WHEN "t10".">" THEN CASE WHEN "t33".">" THEN "t21"."year_total" / "t33"."year_total" > "t44"."year_total" / "t10"."year_total" ELSE 0 > "t44"."year_total" / "t10"."year_total" END ELSE CASE WHEN "t33".">" THEN "t21"."year_total" / "t33"."year_total" > 0 ELSE FALSE END END
ORDER BY "t44"."customer_id", "t44"."customer_first_name", "t44"."customer_last_name", "t44"."customer_birth_country"
FETCH NEXT 100 ROWS ONLY) AS "t46"
            hive.sql.query.fieldNames customer_id,customer_first_name,customer_last_name,customer_birth_country
            hive.sql.query.fieldTypes string,string,string,string
            hive.sql.query.split false
          Select Operator
            expressions: customer_id (type: string), customer_first_name (type: string), customer_last_name (type: string), customer_birth_country (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3
            ListSink

