Warning: Shuffle Join MERGEJOIN[111][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 5' is a cross product
PREHOOK: query: explain
with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_sales_price) netpaid
from store_sales
    ,store_returns
    ,store
    ,item
    ,customer
    ,customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
and s_market_id=7
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'orchid'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                                 from ssales)
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@item
PREHOOK: Input: default@store
PREHOOK: Input: default@store_returns
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain
with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_sales_price) netpaid
from store_sales
    ,store_returns
    ,store
    ,item
    ,customer
    ,customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
and s_market_id=7
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'orchid'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                                 from ssales)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_returns
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
        Reducer 11 <- Reducer 10 (CUSTOM_SIMPLE_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
        Reducer 3 <- Map 14 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 11 (XPROD_EDGE), Reducer 4 (XPROD_EDGE)
        Reducer 7 <- Map 12 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
        Reducer 8 <- Map 13 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
        Reducer 9 <- Map 14 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: store_sales
                  properties:
                    hive.sql.query SELECT "t1"."ss_item_sk", "t1"."ss_customer_sk", "t1"."ss_store_sk", "t1"."ss_ticket_number", "t1"."ss_sales_price", "t4"."sr_item_sk", "t4"."sr_ticket_number", "t7"."i_item_sk", "t7"."i_current_price", "t7"."i_size", "t7"."i_units", "t7"."i_manager_id"
FROM (SELECT "ss_item_sk", "ss_customer_sk", "ss_store_sk", "ss_ticket_number", "ss_sales_price"
FROM (SELECT "ss_item_sk", "ss_customer_sk", "ss_store_sk", "ss_ticket_number", "ss_sales_price"
FROM "store_sales") AS "t"
WHERE "ss_ticket_number" IS NOT NULL AND "ss_item_sk" IS NOT NULL AND ("ss_store_sk" IS NOT NULL AND "ss_customer_sk" IS NOT NULL)) AS "t1"
INNER JOIN (SELECT "sr_item_sk", "sr_ticket_number"
FROM (SELECT "sr_item_sk", "sr_ticket_number"
FROM "store_returns") AS "t2"
WHERE "sr_ticket_number" IS NOT NULL AND "sr_item_sk" IS NOT NULL) AS "t4" ON "t1"."ss_ticket_number" = "t4"."sr_ticket_number" AND "t1"."ss_item_sk" = "t4"."sr_item_sk"
INNER JOIN (SELECT "i_item_sk", "i_current_price", "i_size", "i_units", "i_manager_id"
FROM (SELECT "i_item_sk", "i_current_price", "i_size", "i_color", "i_units", "i_manager_id"
FROM "item") AS "t5"
WHERE "i_color" = 'orchid' AND "i_item_sk" IS NOT NULL) AS "t7" ON "t1"."ss_item_sk" = "t7"."i_item_sk"
                    hive.sql.query.fieldNames ss_item_sk,ss_customer_sk,ss_store_sk,ss_ticket_number,ss_sales_price,sr_item_sk,sr_ticket_number,i_item_sk,i_current_price,i_size,i_units,i_manager_id
                    hive.sql.query.fieldTypes bigint,int,int,bigint,decimal(7,2),bigint,bigint,bigint,decimal(7,2),string,string,int
                    hive.sql.query.split false
                  Statistics: Num rows: 1 Data size: 604 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ss_customer_sk (type: int), ss_store_sk (type: int), ss_sales_price (type: decimal(7,2)), i_current_price (type: decimal(7,2)), i_size (type: string), i_units (type: string), i_manager_id (type: int)
                    outputColumnNames: _col1, _col2, _col4, _col8, _col9, _col10, _col11
                    Statistics: Num rows: 1 Data size: 604 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col2 (type: int)
                      Statistics: Num rows: 1 Data size: 604 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: int), _col4 (type: decimal(7,2)), _col8 (type: decimal(7,2)), _col9 (type: string), _col10 (type: string), _col11 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 12 
            Map Operator Tree:
                TableScan
                  alias: store
                  properties:
                    hive.sql.query SELECT "s_store_sk", "s_store_name", "s_state", "s_zip"
FROM (SELECT "s_store_sk", "s_store_name", "s_market_id", "s_state", "s_zip"
FROM "store") AS "t"
WHERE "s_market_id" = 7 AND ("s_store_sk" IS NOT NULL AND "s_zip" IS NOT NULL)
                    hive.sql.query.fieldNames s_store_sk,s_store_name,s_state,s_zip
                    hive.sql.query.fieldTypes int,string,string,string
                    hive.sql.query.split true
                  Statistics: Num rows: 1 Data size: 556 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: s_store_sk (type: int), s_store_name (type: string), s_state (type: string), s_zip (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 1 Data size: 556 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col3 (type: string)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col3 (type: string)
                      Statistics: Num rows: 1 Data size: 556 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 13 
            Map Operator Tree:
                TableScan
                  alias: store_sales
                  properties:
                    hive.sql.query SELECT "t1"."ss_item_sk", "t1"."ss_customer_sk", "t1"."ss_store_sk", "t1"."ss_ticket_number", "t1"."ss_sales_price", "t4"."sr_item_sk", "t4"."sr_ticket_number", "t7"."i_item_sk", "t7"."i_current_price", "t7"."i_size", "t7"."i_color", "t7"."i_units", "t7"."i_manager_id"
FROM (SELECT "ss_item_sk", "ss_customer_sk", "ss_store_sk", "ss_ticket_number", "ss_sales_price"
FROM (SELECT "ss_item_sk", "ss_customer_sk", "ss_store_sk", "ss_ticket_number", "ss_sales_price"
FROM "store_sales") AS "t"
WHERE "ss_ticket_number" IS NOT NULL AND "ss_item_sk" IS NOT NULL AND ("ss_store_sk" IS NOT NULL AND "ss_customer_sk" IS NOT NULL)) AS "t1"
INNER JOIN (SELECT "sr_item_sk", "sr_ticket_number"
FROM (SELECT "sr_item_sk", "sr_ticket_number"
FROM "store_returns") AS "t2"
WHERE "sr_ticket_number" IS NOT NULL AND "sr_item_sk" IS NOT NULL) AS "t4" ON "t1"."ss_ticket_number" = "t4"."sr_ticket_number" AND "t1"."ss_item_sk" = "t4"."sr_item_sk"
INNER JOIN (SELECT "i_item_sk", "i_current_price", "i_size", "i_color", "i_units", "i_manager_id"
FROM (SELECT "i_item_sk", "i_current_price", "i_size", "i_color", "i_units", "i_manager_id"
FROM "item") AS "t5"
WHERE "i_item_sk" IS NOT NULL) AS "t7" ON "t1"."ss_item_sk" = "t7"."i_item_sk"
                    hive.sql.query.fieldNames ss_item_sk,ss_customer_sk,ss_store_sk,ss_ticket_number,ss_sales_price,sr_item_sk,sr_ticket_number,i_item_sk,i_current_price,i_size,i_color,i_units,i_manager_id
                    hive.sql.query.fieldTypes bigint,int,int,bigint,decimal(7,2),bigint,bigint,bigint,decimal(7,2),string,string,string,int
                    hive.sql.query.split false
                  Statistics: Num rows: 1 Data size: 788 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ss_customer_sk (type: int), ss_store_sk (type: int), ss_sales_price (type: decimal(7,2)), i_current_price (type: decimal(7,2)), i_size (type: string), i_color (type: string), i_units (type: string), i_manager_id (type: int)
                    outputColumnNames: _col1, _col2, _col4, _col8, _col9, _col10, _col11, _col12
                    Statistics: Num rows: 1 Data size: 788 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col2 (type: int)
                      Statistics: Num rows: 1 Data size: 788 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: int), _col4 (type: decimal(7,2)), _col8 (type: decimal(7,2)), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 14 
            Map Operator Tree:
                TableScan
                  alias: customer
                  properties:
                    hive.sql.query SELECT "c_customer_sk", "c_current_addr_sk", "c_first_name", "c_last_name", "c_birth_country"
FROM (SELECT "c_customer_sk", "c_current_addr_sk", "c_first_name", "c_last_name", "c_birth_country"
FROM "customer") AS "t"
WHERE "c_customer_sk" IS NOT NULL AND "c_current_addr_sk" IS NOT NULL
                    hive.sql.query.fieldNames c_customer_sk,c_current_addr_sk,c_first_name,c_last_name,c_birth_country
                    hive.sql.query.fieldTypes int,int,string,string,string
                    hive.sql.query.split true
                  Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: c_customer_sk (type: int), c_current_addr_sk (type: int), c_first_name (type: string), c_last_name (type: string), c_birth_country (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4
                    Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int), _col1 (type: int)
                      null sort order: zz
                      sort order: ++
                      Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
                      Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col2 (type: string), _col3 (type: string), _col4 (type: string)
                    Reduce Output Operator
                      key expressions: _col0 (type: int), _col1 (type: int)
                      null sort order: zz
                      sort order: ++
                      Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
                      Statistics: Num rows: 1 Data size: 560 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col2 (type: string), _col3 (type: string), _col4 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: customer_address
                  properties:
                    hive.sql.query SELECT "ca_address_sk", "ca_state", "ca_zip", "ca_country"
FROM (SELECT "ca_address_sk", "ca_state", "ca_zip", "ca_country"
FROM "customer_address") AS "t"
WHERE "ca_address_sk" IS NOT NULL AND "ca_zip" IS NOT NULL
                    hive.sql.query.fieldNames ca_address_sk,ca_state,ca_zip,ca_country
                    hive.sql.query.fieldTypes int,string,string,string
                    hive.sql.query.split true
                  Statistics: Num rows: 1 Data size: 556 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: ca_address_sk (type: int), ca_state (type: string), ca_zip (type: string), upper(ca_country) (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 1 Data size: 556 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col2 (type: string)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col2 (type: string)
                      Statistics: Num rows: 1 Data size: 556 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: int), _col1 (type: string), _col3 (type: string)
            Execution mode: vectorized, llap
            LLAP IO: no inputs
        Reducer 10 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: decimal(7,2)), KEY._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: int), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col10 (type: decimal(17,2))
                  outputColumnNames: _col10
                  Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: sum(_col10), count(_col10)
                    minReductionHashAggr: 0.99
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 232 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      null sort order: 
                      sort order: 
                      Statistics: Num rows: 1 Data size: 232 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: decimal(27,2)), _col1 (type: bigint)
        Reducer 11 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 232 Basic stats: COMPLETE Column stats: NONE
                Filter Operator
                  predicate: CAST( (_col0 / _col1) AS decimal(21,6)) is not null (type: boolean)
                  Statistics: Num rows: 1 Data size: 232 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: (0.05 * CAST( (_col0 / _col1) AS decimal(21,6))) (type: decimal(24,8))
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 232 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      null sort order: 
                      sort order: 
                      Statistics: Num rows: 1 Data size: 232 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: decimal(24,8))
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col4 (type: int)
                  1 _col2 (type: int)
                outputColumnNames: _col0, _col1, _col3, _col5, _col6, _col9, _col12, _col16, _col17, _col18, _col19
                Statistics: Num rows: 1 Data size: 672 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col9 (type: int), _col0 (type: int)
                  null sort order: zz
                  sort order: ++
                  Map-reduce partition columns: _col9 (type: int), _col0 (type: int)
                  Statistics: Num rows: 1 Data size: 672 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string), _col3 (type: string), _col5 (type: string), _col6 (type: string), _col12 (type: decimal(7,2)), _col16 (type: decimal(7,2)), _col17 (type: string), _col18 (type: string), _col19 (type: int)
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col9 (type: int), _col0 (type: int)
                  1 _col0 (type: int), _col1 (type: int)
                outputColumnNames: _col1, _col3, _col5, _col6, _col12, _col16, _col17, _col18, _col19, _col22, _col23, _col24
                residual filter predicates: {(_col24 <> _col3)}
                Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col1 (type: string), _col5 (type: string), _col6 (type: string), _col12 (type: decimal(7,2)), _col16 (type: decimal(7,2)), _col17 (type: string), _col18 (type: string), _col19 (type: int), _col22 (type: string), _col23 (type: string)
                  outputColumnNames: _col1, _col5, _col6, _col12, _col16, _col17, _col18, _col19, _col22, _col23
                  Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: sum(_col12)
                    keys: _col5 (type: string), _col22 (type: string), _col23 (type: string), _col16 (type: decimal(7,2)), _col17 (type: string), _col18 (type: string), _col19 (type: int), _col1 (type: string), _col6 (type: string)
                    minReductionHashAggr: 0.99
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                    Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: decimal(7,2)), _col4 (type: string), _col5 (type: string), _col6 (type: int), _col7 (type: string), _col8 (type: string)
                      null sort order: zzzzzzzzz
                      sort order: +++++++++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                      Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col9 (type: decimal(17,2))
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: decimal(7,2)), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: int), KEY._col7 (type: string), KEY._col8 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col9 (type: decimal(17,2))
                  outputColumnNames: _col5, _col7, _col8, _col9
                  Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: sum(_col9)
                    keys: _col5 (type: string), _col7 (type: string), _col8 (type: string)
                    mode: complete
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col2 (type: string), _col1 (type: string), _col0 (type: string), _col3 (type: decimal(27,2))
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                      Filter Operator
                        predicate: _col3 is not null (type: boolean)
                        Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          null sort order: 
                          sort order: 
                          Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: decimal(27,2))
        Reducer 5 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                residual filter predicates: {(_col3 > _col4)}
                Statistics: Num rows: 1 Data size: 972 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: decimal(27,2))
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 1 Data size: 972 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 972 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 7 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col2 (type: string)
                  1 _col3 (type: string)
                outputColumnNames: _col0, _col1, _col3, _col4, _col5, _col6
                Statistics: Num rows: 1 Data size: 611 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col4 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col4 (type: int)
                  Statistics: Num rows: 1 Data size: 611 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: int), _col1 (type: string), _col3 (type: string), _col5 (type: string), _col6 (type: string)
                Reduce Output Operator
                  key expressions: _col4 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col4 (type: int)
                  Statistics: Num rows: 1 Data size: 611 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: int), _col1 (type: string), _col3 (type: string), _col5 (type: string), _col6 (type: string)
        Reducer 8 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col4 (type: int)
                  1 _col2 (type: int)
                outputColumnNames: _col0, _col1, _col3, _col5, _col6, _col9, _col12, _col16, _col17, _col18, _col19, _col20
                Statistics: Num rows: 1 Data size: 672 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col9 (type: int), _col0 (type: int)
                  null sort order: zz
                  sort order: ++
                  Map-reduce partition columns: _col9 (type: int), _col0 (type: int)
                  Statistics: Num rows: 1 Data size: 672 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: string), _col3 (type: string), _col5 (type: string), _col6 (type: string), _col12 (type: decimal(7,2)), _col16 (type: decimal(7,2)), _col17 (type: string), _col18 (type: string), _col19 (type: string), _col20 (type: int)
        Reducer 9 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col9 (type: int), _col0 (type: int)
                  1 _col0 (type: int), _col1 (type: int)
                outputColumnNames: _col1, _col3, _col5, _col6, _col12, _col16, _col17, _col18, _col19, _col20, _col23, _col24, _col25
                residual filter predicates: {(_col25 <> _col3)}
                Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col1 (type: string), _col5 (type: string), _col6 (type: string), _col12 (type: decimal(7,2)), _col16 (type: decimal(7,2)), _col17 (type: string), _col18 (type: string), _col19 (type: string), _col20 (type: int), _col23 (type: string), _col24 (type: string)
                  outputColumnNames: _col1, _col5, _col6, _col12, _col16, _col17, _col18, _col19, _col20, _col23, _col24
                  Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: sum(_col12)
                    keys: _col16 (type: decimal(7,2)), _col17 (type: string), _col18 (type: string), _col19 (type: string), _col20 (type: int), _col1 (type: string), _col5 (type: string), _col6 (type: string), _col23 (type: string), _col24 (type: string)
                    minReductionHashAggr: 0.99
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                    Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: decimal(7,2)), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string)
                      null sort order: zzzzzzzzzz
                      sort order: ++++++++++
                      Map-reduce partition columns: _col0 (type: decimal(7,2)), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string)
                      Statistics: Num rows: 1 Data size: 739 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col10 (type: decimal(17,2))

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

