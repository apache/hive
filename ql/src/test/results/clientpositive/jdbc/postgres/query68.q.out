PREHOOK: query: explain
select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,extended_price
       ,extended_tax
       ,list_price
 from (select ss_ticket_number
             ,ss_customer_sk
             ,ca_city bought_city
             ,sum(ss_ext_sales_price) extended_price 
             ,sum(ss_ext_list_price) list_price
             ,sum(ss_ext_tax) extended_tax 
       from store_sales
           ,date_dim
           ,store
           ,household_demographics
           ,customer_address 
       where store_sales.ss_sold_date_sk = date_dim.d_date_sk
         and store_sales.ss_store_sk = store.s_store_sk  
        and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
        and store_sales.ss_addr_sk = customer_address.ca_address_sk
        and date_dim.d_dom between 1 and 2 
        and (household_demographics.hd_dep_count = 2 or
             household_demographics.hd_vehicle_count= 1)
        and date_dim.d_year in (1998,1998+1,1998+2)
        and store.s_city in ('Cedar Grove','Wildwood')
       group by ss_ticket_number
               ,ss_customer_sk
               ,ss_addr_sk,ca_city) dn
      ,customer
      ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
   and customer.c_current_addr_sk = current_addr.ca_address_sk
   and current_addr.ca_city <> bought_city
 order by c_last_name
         ,ss_ticket_number
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain
select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,extended_price
       ,extended_tax
       ,list_price
 from (select ss_ticket_number
             ,ss_customer_sk
             ,ca_city bought_city
             ,sum(ss_ext_sales_price) extended_price 
             ,sum(ss_ext_list_price) list_price
             ,sum(ss_ext_tax) extended_tax 
       from store_sales
           ,date_dim
           ,store
           ,household_demographics
           ,customer_address 
       where store_sales.ss_sold_date_sk = date_dim.d_date_sk
         and store_sales.ss_store_sk = store.s_store_sk  
        and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
        and store_sales.ss_addr_sk = customer_address.ca_address_sk
        and date_dim.d_dom between 1 and 2 
        and (household_demographics.hd_dep_count = 2 or
             household_demographics.hd_vehicle_count= 1)
        and date_dim.d_year in (1998,1998+1,1998+2)
        and store.s_city in ('Cedar Grove','Wildwood')
       group by ss_ticket_number
               ,ss_customer_sk
               ,ss_addr_sk,ca_city) dn
      ,customer
      ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
   and customer.c_current_addr_sk = current_addr.ca_address_sk
   and current_addr.ca_city <> bought_city
 order by c_last_name
         ,ss_ticket_number
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: customer
          properties:
            hive.sql.query SELECT "t23"."c_last_name", "t23"."c_first_name", "t23"."ca_city", "t23"."bought_city", "t23"."ss_ticket_number", "t23"."extended_price", "t23"."extended_tax", "t23"."list_price"
FROM (SELECT "t1"."c_last_name", "t1"."c_first_name", "t4"."ca_city", "t21"."bought_city", "t21"."ss_ticket_number", "t21"."extended_price", "t21"."extended_tax", "t21"."list_price"
FROM (SELECT "c_customer_sk", "c_current_addr_sk", "c_first_name", "c_last_name"
FROM (SELECT "c_customer_sk", "c_current_addr_sk", "c_first_name", "c_last_name"
FROM "customer") AS "t"
WHERE "c_customer_sk" IS NOT NULL AND "c_current_addr_sk" IS NOT NULL) AS "t1"
INNER JOIN (SELECT "ca_address_sk", "ca_city"
FROM (SELECT "ca_address_sk", "ca_city"
FROM "customer_address") AS "t2"
WHERE "ca_address_sk" IS NOT NULL) AS "t4" ON "t1"."c_current_addr_sk" = "t4"."ca_address_sk"
INNER JOIN (SELECT "t7"."ss_ticket_number", "t7"."ss_customer_sk", "t19"."ca_city" AS "bought_city", SUM("t7"."ss_ext_sales_price") AS "extended_price", SUM("t7"."ss_ext_list_price") AS "list_price", SUM("t7"."ss_ext_tax") AS "extended_tax"
FROM (SELECT "ss_sold_date_sk", "ss_customer_sk", "ss_hdemo_sk", "ss_addr_sk", "ss_store_sk", "ss_ticket_number", "ss_ext_sales_price", "ss_ext_list_price", "ss_ext_tax"
FROM (SELECT "ss_sold_date_sk", "ss_customer_sk", "ss_hdemo_sk", "ss_addr_sk", "ss_store_sk", "ss_ticket_number", "ss_ext_sales_price", "ss_ext_list_price", "ss_ext_tax"
FROM "store_sales") AS "t5"
WHERE "ss_sold_date_sk" IS NOT NULL AND "ss_store_sk" IS NOT NULL AND ("ss_hdemo_sk" IS NOT NULL AND ("ss_addr_sk" IS NOT NULL AND "ss_customer_sk" IS NOT NULL))) AS "t7"
INNER JOIN (SELECT "d_date_sk"
FROM (SELECT "d_date_sk", "d_year", "d_dom"
FROM "date_dim") AS "t8"
WHERE "d_year" IN (1998, 1999, 2000) AND ("d_dom" BETWEEN 1 AND 2 AND "d_date_sk" IS NOT NULL)) AS "t10" ON "t7"."ss_sold_date_sk" = "t10"."d_date_sk"
INNER JOIN (SELECT "s_store_sk"
FROM (SELECT "s_store_sk", "s_city"
FROM "store") AS "t11"
WHERE "s_city" IN ('Cedar Grove', 'Wildwood') AND "s_store_sk" IS NOT NULL) AS "t13" ON "t7"."ss_store_sk" = "t13"."s_store_sk"
INNER JOIN (SELECT "hd_demo_sk"
FROM (SELECT "hd_demo_sk", "hd_dep_count", "hd_vehicle_count"
FROM "household_demographics") AS "t14"
WHERE ("hd_dep_count" = 2 OR "hd_vehicle_count" = 1) AND "hd_demo_sk" IS NOT NULL) AS "t16" ON "t7"."ss_hdemo_sk" = "t16"."hd_demo_sk"
INNER JOIN (SELECT "ca_address_sk", "ca_city"
FROM (SELECT "ca_address_sk", "ca_city"
FROM "customer_address") AS "t17"
WHERE "ca_address_sk" IS NOT NULL) AS "t19" ON "t7"."ss_addr_sk" = "t19"."ca_address_sk"
GROUP BY "t7"."ss_customer_sk", "t7"."ss_addr_sk", "t7"."ss_ticket_number", "t19"."ca_city") AS "t21" ON "t4"."ca_city" <> "t21"."bought_city" AND "t1"."c_customer_sk" = "t21"."ss_customer_sk"
ORDER BY "t1"."c_last_name", "t21"."ss_ticket_number"
FETCH NEXT 100 ROWS ONLY) AS "t23"
            hive.sql.query.fieldNames c_last_name,c_first_name,ca_city,bought_city,ss_ticket_number,extended_price,extended_tax,list_price
            hive.sql.query.fieldTypes string,string,string,string,bigint,decimal(17,2),decimal(17,2),decimal(17,2)
            hive.sql.query.split false
          Select Operator
            expressions: c_last_name (type: string), c_first_name (type: string), ca_city (type: string), bought_city (type: string), ss_ticket_number (type: bigint), extended_price (type: decimal(17,2)), extended_tax (type: decimal(17,2)), list_price (type: decimal(17,2))
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
            ListSink

