PREHOOK: query: explain
select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('1998-04-08' as date) - 30 days)
                and (cast ('1998-04-08' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@warehouse
#### A masked pattern was here ####
POSTHOOK: query: explain
select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('1998-04-08' as date) - 30 days)
                and (cast ('1998-04-08' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@warehouse
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: catalog_sales
          properties:
            hive.sql.query SELECT "t16"."$f0", "t16"."$f1", "t16"."$f2", "t16"."$f3"
FROM (SELECT "t7"."w_state" AS "$f0", "t10"."i_item_id" AS "$f1", SUM(CASE WHEN "t13"."<" THEN "t1"."cs_sales_price" - CASE WHEN "t4"."cr_refunded_cash" IS NOT NULL THEN "t4"."cr_refunded_cash" ELSE 0 END ELSE 0 END) AS "$f2", SUM(CASE WHEN "t13".">=" THEN "t1"."cs_sales_price" - CASE WHEN "t4"."cr_refunded_cash" IS NOT NULL THEN "t4"."cr_refunded_cash" ELSE 0 END ELSE 0 END) AS "$f3"
FROM (SELECT "cs_sold_date_sk", "cs_warehouse_sk", "cs_item_sk", "cs_order_number", "cs_sales_price"
FROM (SELECT "cs_sold_date_sk", "cs_warehouse_sk", "cs_item_sk", "cs_order_number", "cs_sales_price"
FROM "catalog_sales") AS "t"
WHERE "cs_warehouse_sk" IS NOT NULL AND ("cs_item_sk" IS NOT NULL AND "cs_sold_date_sk" IS NOT NULL)) AS "t1"
LEFT JOIN (SELECT "cr_item_sk", "cr_order_number", "cr_refunded_cash"
FROM (SELECT "cr_item_sk", "cr_order_number", "cr_refunded_cash"
FROM "catalog_returns") AS "t2"
WHERE "cr_order_number" IS NOT NULL AND "cr_item_sk" IS NOT NULL) AS "t4" ON "t1"."cs_order_number" = "t4"."cr_order_number" AND "t1"."cs_item_sk" = "t4"."cr_item_sk"
INNER JOIN (SELECT "w_warehouse_sk", "w_state"
FROM (SELECT "w_warehouse_sk", "w_state"
FROM "warehouse") AS "t5"
WHERE "w_warehouse_sk" IS NOT NULL) AS "t7" ON "t1"."cs_warehouse_sk" = "t7"."w_warehouse_sk"
INNER JOIN (SELECT "i_item_sk", "i_item_id"
FROM (SELECT "i_item_sk", "i_item_id", "i_current_price"
FROM "item") AS "t8"
WHERE "i_current_price" BETWEEN 0.99 AND 1.49 AND "i_item_sk" IS NOT NULL) AS "t10" ON "t1"."cs_item_sk" = "t10"."i_item_sk"
INNER JOIN (SELECT "d_date_sk", "d_date" < DATE '1998-04-08' AS "<", "d_date" >= DATE '1998-04-08' AS ">="
FROM (SELECT "d_date_sk", "d_date"
FROM "date_dim") AS "t11"
WHERE CAST("d_date" AS TIMESTAMP(9)) BETWEEN TIMESTAMP '1998-03-09 00:00:00.000000000' AND TIMESTAMP '1998-05-08 00:00:00.000000000' AND "d_date_sk" IS NOT NULL) AS "t13" ON "t1"."cs_sold_date_sk" = "t13"."d_date_sk"
GROUP BY "t7"."w_state", "t10"."i_item_id"
ORDER BY "t7"."w_state", "t10"."i_item_id"
FETCH NEXT 100 ROWS ONLY) AS "t16"
            hive.sql.query.fieldNames $f0,$f1,$f2,$f3
            hive.sql.query.fieldTypes string,string,decimal(23,2),decimal(23,2)
            hive.sql.query.split false
          Select Operator
            expressions: $f0 (type: string), $f1 (type: string), $f2 (type: decimal(23,2)), $f3 (type: decimal(23,2))
            outputColumnNames: _col0, _col1, _col2, _col3
            ListSink

