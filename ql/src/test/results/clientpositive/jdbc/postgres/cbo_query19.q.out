PREHOOK: query: explain cbo
select  i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact,
 	sum(ss_ext_sales_price) ext_price
 from date_dim, store_sales, item,customer,customer_address,store
 where d_date_sk = ss_sold_date_sk
   and ss_item_sk = i_item_sk
   and i_manager_id=7
   and d_moy=11
   and d_year=1999
   and ss_customer_sk = c_customer_sk 
   and c_current_addr_sk = ca_address_sk
   and substr(ca_zip,1,5) <> substr(s_zip,1,5) 
   and ss_store_sk = s_store_sk 
 group by i_brand
      ,i_brand_id
      ,i_manufact_id
      ,i_manufact
 order by ext_price desc
         ,i_brand
         ,i_brand_id
         ,i_manufact_id
         ,i_manufact
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact,
 	sum(ss_ext_sales_price) ext_price
 from date_dim, store_sales, item,customer,customer_address,store
 where d_date_sk = ss_sold_date_sk
   and ss_item_sk = i_item_sk
   and i_manager_id=7
   and d_moy=11
   and d_year=1999
   and ss_customer_sk = c_customer_sk 
   and c_current_addr_sk = ca_address_sk
   and substr(ca_zip,1,5) <> substr(s_zip,1,5) 
   and ss_store_sk = s_store_sk 
 group by i_brand
      ,i_brand_id
      ,i_manufact_id
      ,i_manufact
 order by ext_price desc
         ,i_brand
         ,i_brand_id
         ,i_manufact_id
         ,i_manufact
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveProject(brand_id=[$0], brand=[$1], i_manufact_id=[$2], i_manufact=[$3], ext_price=[$4])
  HiveSortLimit(sort0=[$4], sort1=[$5], sort2=[$6], sort3=[$2], sort4=[$3], dir0=[DESC], dir1=[ASC], dir2=[ASC], dir3=[ASC], dir4=[ASC], fetch=[100])
    HiveProject(brand_id=[$0], brand=[$1], i_manufact_id=[$2], i_manufact=[$3], ext_price=[$4], (tok_table_or_col i_brand)=[$1], (tok_table_or_col i_brand_id)=[$0])
      HiveAggregate(group=[{13, 14, 15, 16}], agg#0=[sum($4)])
        HiveJoin(condition=[=($1, $12)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[AND(<>($9, $11), =($3, $10))], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($2, $6)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$3], ss_ext_sales_price=[$4], d_date_sk=[$5])
                HiveJdbcConverter(convention=[JDBC.POSTGRES])
                  JdbcJoin(condition=[=($5, $0)], joinType=[inner])
                    JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$3], ss_ext_sales_price=[$4])
                      JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($3))])
                        JdbcProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_customer_sk=[$3], ss_store_sk=[$7], ss_ext_sales_price=[$15])
                          JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                    JdbcProject(d_date_sk=[$0])
                      JdbcFilter(condition=[AND(=($2, 11), =($1, 1999), IS NOT NULL($0))])
                        JdbcProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
              HiveJoin(condition=[=($1, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveProject(c_customer_sk=[$0], c_current_addr_sk=[$1])
                  HiveJdbcConverter(convention=[JDBC.POSTGRES])
                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                      JdbcProject(c_customer_sk=[$0], c_current_addr_sk=[$4])
                        JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
                HiveProject(ca_address_sk=[$0], substr=[substr($1, 1, 5)])
                  HiveProject(ca_address_sk=[$0], ca_zip=[$1])
                    HiveJdbcConverter(convention=[JDBC.POSTGRES])
                      JdbcFilter(condition=[IS NOT NULL($0)])
                        JdbcProject(ca_address_sk=[$0], ca_zip=[$9])
                          JdbcHiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
            HiveProject(s_store_sk=[$0], substr=[substr($1, 1, 5)])
              HiveProject(s_store_sk=[$0], s_zip=[$1])
                HiveJdbcConverter(convention=[JDBC.POSTGRES])
                  JdbcFilter(condition=[IS NOT NULL($0)])
                    JdbcProject(s_store_sk=[$0], s_zip=[$25])
                      JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
          HiveProject(i_item_sk=[$0], i_brand_id=[$1], i_brand=[$2], i_manufact_id=[$3], i_manufact=[$4])
            HiveJdbcConverter(convention=[JDBC.POSTGRES])
              JdbcProject(i_item_sk=[$0], i_brand_id=[$1], i_brand=[$2], i_manufact_id=[$3], i_manufact=[$4])
                JdbcFilter(condition=[AND(=($5, 7), IS NOT NULL($0))])
                  JdbcProject(i_item_sk=[$0], i_brand_id=[$7], i_brand=[$8], i_manufact_id=[$13], i_manufact=[$14], i_manager_id=[$20])
                    JdbcHiveTableScan(table=[[default, item]], table:alias=[item])

