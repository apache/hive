Warning: Shuffle Join MERGEJOIN[30][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
Warning: Shuffle Join MERGEJOIN[31][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 3' is a cross product
Warning: Shuffle Join MERGEJOIN[32][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3]] in Stage 'Reducer 4' is a cross product
Warning: Shuffle Join MERGEJOIN[33][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4]] in Stage 'Reducer 5' is a cross product
Warning: Shuffle Join MERGEJOIN[34][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4, $hdt$_5]] in Stage 'Reducer 6' is a cross product
PREHOOK: query: explain cbo
select  *
from (select avg(ss_list_price) B1_LP
            ,count(ss_list_price) B1_CNT
            ,count(distinct ss_list_price) B1_CNTD
      from store_sales
      where ss_quantity between 0 and 5
        and (ss_list_price between 11 and 11+10 
             or ss_coupon_amt between 460 and 460+1000
             or ss_wholesale_cost between 14 and 14+20)) B1,
     (select avg(ss_list_price) B2_LP
            ,count(ss_list_price) B2_CNT
            ,count(distinct ss_list_price) B2_CNTD
      from store_sales
      where ss_quantity between 6 and 10
        and (ss_list_price between 91 and 91+10
          or ss_coupon_amt between 1430 and 1430+1000
          or ss_wholesale_cost between 32 and 32+20)) B2,
     (select avg(ss_list_price) B3_LP
            ,count(ss_list_price) B3_CNT
            ,count(distinct ss_list_price) B3_CNTD
      from store_sales
      where ss_quantity between 11 and 15
        and (ss_list_price between 66 and 66+10
          or ss_coupon_amt between 920 and 920+1000
          or ss_wholesale_cost between 4 and 4+20)) B3,
     (select avg(ss_list_price) B4_LP
            ,count(ss_list_price) B4_CNT
            ,count(distinct ss_list_price) B4_CNTD
      from store_sales
      where ss_quantity between 16 and 20
        and (ss_list_price between 142 and 142+10
          or ss_coupon_amt between 3054 and 3054+1000
          or ss_wholesale_cost between 80 and 80+20)) B4,
     (select avg(ss_list_price) B5_LP
            ,count(ss_list_price) B5_CNT
            ,count(distinct ss_list_price) B5_CNTD
      from store_sales
      where ss_quantity between 21 and 25
        and (ss_list_price between 135 and 135+10
          or ss_coupon_amt between 14180 and 14180+1000
          or ss_wholesale_cost between 38 and 38+20)) B5,
     (select avg(ss_list_price) B6_LP
            ,count(ss_list_price) B6_CNT
            ,count(distinct ss_list_price) B6_CNTD
      from store_sales
      where ss_quantity between 26 and 30
        and (ss_list_price between 28 and 28+10
          or ss_coupon_amt between 2513 and 2513+1000
          or ss_wholesale_cost between 42 and 42+20)) B6
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  *
from (select avg(ss_list_price) B1_LP
            ,count(ss_list_price) B1_CNT
            ,count(distinct ss_list_price) B1_CNTD
      from store_sales
      where ss_quantity between 0 and 5
        and (ss_list_price between 11 and 11+10 
             or ss_coupon_amt between 460 and 460+1000
             or ss_wholesale_cost between 14 and 14+20)) B1,
     (select avg(ss_list_price) B2_LP
            ,count(ss_list_price) B2_CNT
            ,count(distinct ss_list_price) B2_CNTD
      from store_sales
      where ss_quantity between 6 and 10
        and (ss_list_price between 91 and 91+10
          or ss_coupon_amt between 1430 and 1430+1000
          or ss_wholesale_cost between 32 and 32+20)) B2,
     (select avg(ss_list_price) B3_LP
            ,count(ss_list_price) B3_CNT
            ,count(distinct ss_list_price) B3_CNTD
      from store_sales
      where ss_quantity between 11 and 15
        and (ss_list_price between 66 and 66+10
          or ss_coupon_amt between 920 and 920+1000
          or ss_wholesale_cost between 4 and 4+20)) B3,
     (select avg(ss_list_price) B4_LP
            ,count(ss_list_price) B4_CNT
            ,count(distinct ss_list_price) B4_CNTD
      from store_sales
      where ss_quantity between 16 and 20
        and (ss_list_price between 142 and 142+10
          or ss_coupon_amt between 3054 and 3054+1000
          or ss_wholesale_cost between 80 and 80+20)) B4,
     (select avg(ss_list_price) B5_LP
            ,count(ss_list_price) B5_CNT
            ,count(distinct ss_list_price) B5_CNTD
      from store_sales
      where ss_quantity between 21 and 25
        and (ss_list_price between 135 and 135+10
          or ss_coupon_amt between 14180 and 14180+1000
          or ss_wholesale_cost between 38 and 38+20)) B5,
     (select avg(ss_list_price) B6_LP
            ,count(ss_list_price) B6_CNT
            ,count(distinct ss_list_price) B6_CNTD
      from store_sales
      where ss_quantity between 26 and 30
        and (ss_list_price between 28 and 28+10
          or ss_coupon_amt between 2513 and 2513+1000
          or ss_wholesale_cost between 42 and 42+20)) B6
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
CBO PLAN:
HiveProject(b1_lp=[$0], b1_cnt=[$1], b1_cntd=[$2], b2_lp=[$15], b2_cnt=[$16], b2_cntd=[$17], b3_lp=[$12], b3_cnt=[$13], b3_cntd=[$14], b4_lp=[$9], b4_cnt=[$10], b4_cntd=[$11], b5_lp=[$6], b5_cnt=[$7], b5_cntd=[$8], b6_lp=[$3], b6_cnt=[$4], b6_cntd=[$5])
  HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
    HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
      HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
        HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
            HiveProject(b1_lp=[$0], b1_cnt=[$1], b1_cntd=[$2])
              HiveProject(b1_lp=[$0], b1_cnt=[$1], b1_cntd=[$2])
                HiveJdbcConverter(convention=[JDBC.POSTGRES])
                  JdbcProject(b1_lp=[CAST(/($0, $1)):DECIMAL(11, 6)], b1_cnt=[$1], b1_cntd=[$2])
                    JdbcAggregate(group=[{}], agg#0=[sum($2)], agg#1=[count($2)], agg#2=[count(DISTINCT $2)])
                      JdbcFilter(condition=[AND(OR(BETWEEN(false, $2, 11:DECIMAL(12, 2), 21:DECIMAL(12, 2)), BETWEEN(false, $3, 460:DECIMAL(12, 2), 1460:DECIMAL(12, 2)), BETWEEN(false, $1, 14:DECIMAL(12, 2), 34:DECIMAL(12, 2))), BETWEEN(false, $0, 0, 5))])
                        JdbcProject(ss_quantity=[$10], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19])
                          JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
            HiveProject(b6_lp=[$0], b6_cnt=[$1], b6_cntd=[$2])
              HiveJdbcConverter(convention=[JDBC.POSTGRES])
                JdbcProject(b6_lp=[CAST(/($0, $1)):DECIMAL(11, 6)], b6_cnt=[$1], b6_cntd=[$2])
                  JdbcAggregate(group=[{}], agg#0=[sum($2)], agg#1=[count($2)], agg#2=[count(DISTINCT $2)])
                    JdbcFilter(condition=[AND(OR(BETWEEN(false, $2, 28:DECIMAL(12, 2), 38:DECIMAL(12, 2)), BETWEEN(false, $3, 2513:DECIMAL(12, 2), 3513:DECIMAL(12, 2)), BETWEEN(false, $1, 42:DECIMAL(12, 2), 62:DECIMAL(12, 2))), BETWEEN(false, $0, 26, 30))])
                      JdbcProject(ss_quantity=[$10], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19])
                        JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
          HiveProject(b5_lp=[$0], b5_cnt=[$1], b5_cntd=[$2])
            HiveJdbcConverter(convention=[JDBC.POSTGRES])
              JdbcProject(b5_lp=[CAST(/($0, $1)):DECIMAL(11, 6)], b5_cnt=[$1], b5_cntd=[$2])
                JdbcAggregate(group=[{}], agg#0=[sum($2)], agg#1=[count($2)], agg#2=[count(DISTINCT $2)])
                  JdbcFilter(condition=[AND(OR(BETWEEN(false, $2, 135:DECIMAL(12, 2), 145:DECIMAL(12, 2)), BETWEEN(false, $3, 14180:DECIMAL(12, 2), 15180:DECIMAL(12, 2)), BETWEEN(false, $1, 38:DECIMAL(12, 2), 58:DECIMAL(12, 2))), BETWEEN(false, $0, 21, 25))])
                    JdbcProject(ss_quantity=[$10], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19])
                      JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
        HiveProject(b4_lp=[$0], b4_cnt=[$1], b4_cntd=[$2])
          HiveJdbcConverter(convention=[JDBC.POSTGRES])
            JdbcProject(b4_lp=[CAST(/($0, $1)):DECIMAL(11, 6)], b4_cnt=[$1], b4_cntd=[$2])
              JdbcAggregate(group=[{}], agg#0=[sum($2)], agg#1=[count($2)], agg#2=[count(DISTINCT $2)])
                JdbcFilter(condition=[AND(OR(BETWEEN(false, $2, 142:DECIMAL(12, 2), 152:DECIMAL(12, 2)), BETWEEN(false, $3, 3054:DECIMAL(12, 2), 4054:DECIMAL(12, 2)), BETWEEN(false, $1, 80:DECIMAL(12, 2), 100:DECIMAL(12, 2))), BETWEEN(false, $0, 16, 20))])
                  JdbcProject(ss_quantity=[$10], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19])
                    JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
      HiveProject(b3_lp=[$0], b3_cnt=[$1], b3_cntd=[$2])
        HiveJdbcConverter(convention=[JDBC.POSTGRES])
          JdbcProject(b3_lp=[CAST(/($0, $1)):DECIMAL(11, 6)], b3_cnt=[$1], b3_cntd=[$2])
            JdbcAggregate(group=[{}], agg#0=[sum($2)], agg#1=[count($2)], agg#2=[count(DISTINCT $2)])
              JdbcFilter(condition=[AND(OR(BETWEEN(false, $2, 66:DECIMAL(12, 2), 76:DECIMAL(12, 2)), BETWEEN(false, $3, 920:DECIMAL(12, 2), 1920:DECIMAL(12, 2)), BETWEEN(false, $1, 4:DECIMAL(12, 2), 24:DECIMAL(12, 2))), BETWEEN(false, $0, 11, 15))])
                JdbcProject(ss_quantity=[$10], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19])
                  JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
    HiveProject(b2_lp=[$0], b2_cnt=[$1], b2_cntd=[$2])
      HiveJdbcConverter(convention=[JDBC.POSTGRES])
        JdbcProject(b2_lp=[CAST(/($0, $1)):DECIMAL(11, 6)], b2_cnt=[$1], b2_cntd=[$2])
          JdbcAggregate(group=[{}], agg#0=[sum($2)], agg#1=[count($2)], agg#2=[count(DISTINCT $2)])
            JdbcFilter(condition=[AND(OR(BETWEEN(false, $2, 91:DECIMAL(12, 2), 101:DECIMAL(12, 2)), BETWEEN(false, $3, 1430:DECIMAL(12, 2), 2430:DECIMAL(12, 2)), BETWEEN(false, $1, 32:DECIMAL(12, 2), 52:DECIMAL(12, 2))), BETWEEN(false, $0, 6, 10))])
              JdbcProject(ss_quantity=[$10], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19])
                JdbcHiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])

