CTE Suggestion:
JdbcProject(d_date_sk=[$0])
  JdbcFilter(condition=[AND(=($1, 2000), IS NOT NULL($0))])
    JdbcProject(d_date_sk=[$0], d_year=[$6])
      JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

PREHOOK: query: explain cbo
with customer_total_return as
(select sr_customer_sk as ctr_customer_sk
,sr_store_sk as ctr_store_sk
,sum(SR_FEE) as ctr_total_return
from store_returns
,date_dim
where sr_returned_date_sk = d_date_sk
and d_year =2000
group by sr_customer_sk
,sr_store_sk)
 select  c_customer_id
from customer_total_return ctr1
,store
,customer
where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
from customer_total_return ctr2
where ctr1.ctr_store_sk = ctr2.ctr_store_sk)
and s_store_sk = ctr1.ctr_store_sk
and s_state = 'NM'
and ctr1.ctr_customer_sk = c_customer_sk
order by c_customer_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store
PREHOOK: Input: default@store_returns
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
with customer_total_return as
(select sr_customer_sk as ctr_customer_sk
,sr_store_sk as ctr_store_sk
,sum(SR_FEE) as ctr_total_return
from store_returns
,date_dim
where sr_returned_date_sk = d_date_sk
and d_year =2000
group by sr_customer_sk
,sr_store_sk)
 select  c_customer_id
from customer_total_return ctr1
,store
,customer
where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
from customer_total_return ctr2
where ctr1.ctr_store_sk = ctr2.ctr_store_sk)
and s_store_sk = ctr1.ctr_store_sk
and s_state = 'NM'
and ctr1.ctr_customer_sk = c_customer_sk
order by c_customer_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_returns
#### A masked pattern was here ####
CBO PLAN:
HiveJdbcConverter(convention=[JDBC.POSTGRES])
  JdbcSort(sort0=[$0], dir0=[ASC], fetch=[100])
    JdbcProject(c_customer_id=[$5])
      JdbcJoin(condition=[AND(=($1, $7), >($2, $6))], joinType=[inner])
        JdbcJoin(condition=[=($0, $4)], joinType=[inner])
          JdbcJoin(condition=[=($3, $1)], joinType=[inner])
            JdbcProject(sr_customer_sk=[$0], sr_store_sk=[$1], $f2=[$2])
              JdbcFilter(condition=[IS NOT NULL($2)])
                JdbcAggregate(group=[{1, 2}], agg#0=[sum($3)])
                  JdbcJoin(condition=[=($0, $4)], joinType=[inner])
                    JdbcProject(sr_returned_date_sk=[$0], sr_customer_sk=[$1], sr_store_sk=[$2], sr_fee=[$3])
                      JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($2), IS NOT NULL($1))])
                        JdbcProject(sr_returned_date_sk=[$0], sr_customer_sk=[$3], sr_store_sk=[$7], sr_fee=[$14])
                          JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                    JdbcProject(d_date_sk=[$0])
                      JdbcFilter(condition=[AND(=($1, 2000), IS NOT NULL($0))])
                        JdbcProject(d_date_sk=[$0], d_year=[$6])
                          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
            JdbcProject(s_store_sk=[$0])
              JdbcFilter(condition=[AND(=($1, _UTF-16LE'NM'), IS NOT NULL($0))])
                JdbcProject(s_store_sk=[$0], s_state=[$24])
                  JdbcHiveTableScan(table=[[default, store]], table:alias=[store])
          JdbcProject(c_customer_sk=[$0], c_customer_id=[$1])
            JdbcFilter(condition=[IS NOT NULL($0)])
              JdbcProject(c_customer_sk=[$0], c_customer_id=[$1])
                JdbcHiveTableScan(table=[[default, customer]], table:alias=[customer])
        JdbcProject(_o__c0=[*(CAST(/($1, $2)):DECIMAL(21, 6), 1.2:DECIMAL(2, 1))], ctr_store_sk=[$0])
          JdbcFilter(condition=[IS NOT NULL(CAST(/($1, $2)):DECIMAL(21, 6))])
            JdbcAggregate(group=[{1}], agg#0=[sum($2)], agg#1=[count($2)])
              JdbcAggregate(group=[{1, 2}], agg#0=[sum($3)])
                JdbcJoin(condition=[=($0, $4)], joinType=[inner])
                  JdbcProject(sr_returned_date_sk=[$0], sr_customer_sk=[$1], sr_store_sk=[$2], sr_fee=[$3])
                    JdbcFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($2))])
                      JdbcProject(sr_returned_date_sk=[$0], sr_customer_sk=[$3], sr_store_sk=[$7], sr_fee=[$14])
                        JdbcHiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                  JdbcProject(d_date_sk=[$0])
                    JdbcFilter(condition=[AND(=($1, 2000), IS NOT NULL($0))])
                      JdbcProject(d_date_sk=[$0], d_year=[$6])
                        JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

