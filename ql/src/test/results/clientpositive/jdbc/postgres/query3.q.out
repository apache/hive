PREHOOK: query: explain
select  dt.d_year 
       ,item.i_brand_id brand_id 
       ,item.i_brand brand
       ,sum(ss_ext_sales_price) sum_agg
 from  date_dim dt 
      ,store_sales
      ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
   and store_sales.ss_item_sk = item.i_item_sk
   and item.i_manufact_id = 436
   and dt.d_moy=12
 group by dt.d_year
      ,item.i_brand
      ,item.i_brand_id
 order by dt.d_year
         ,sum_agg desc
         ,brand_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain
select  dt.d_year 
       ,item.i_brand_id brand_id 
       ,item.i_brand brand
       ,sum(ss_ext_sales_price) sum_agg
 from  date_dim dt 
      ,store_sales
      ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
   and store_sales.ss_item_sk = item.i_item_sk
   and item.i_manufact_id = 436
   and dt.d_moy=12
 group by dt.d_year
      ,item.i_brand
      ,item.i_brand_id
 order by dt.d_year
         ,sum_agg desc
         ,brand_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: store_sales
          properties:
            hive.sql.query SELECT "t9"."d_year", "t9"."i_brand_id", "t9"."i_brand", "t9"."$f3"
FROM (SELECT "t4"."d_year", "t7"."i_brand_id", "t7"."i_brand", SUM("t1"."ss_ext_sales_price") AS "$f3"
FROM (SELECT "ss_sold_date_sk", "ss_item_sk", "ss_ext_sales_price"
FROM (SELECT "ss_sold_date_sk", "ss_item_sk", "ss_ext_sales_price"
FROM "store_sales") AS "t"
WHERE "ss_sold_date_sk" IS NOT NULL AND "ss_item_sk" IS NOT NULL) AS "t1"
INNER JOIN (SELECT "d_date_sk", "d_year"
FROM (SELECT "d_date_sk", "d_year", "d_moy"
FROM "date_dim") AS "t2"
WHERE "d_moy" = 12 AND "d_date_sk" IS NOT NULL) AS "t4" ON "t1"."ss_sold_date_sk" = "t4"."d_date_sk"
INNER JOIN (SELECT "i_item_sk", "i_brand_id", "i_brand"
FROM (SELECT "i_item_sk", "i_brand_id", "i_brand", "i_manufact_id"
FROM "item") AS "t5"
WHERE "i_manufact_id" = 436 AND "i_item_sk" IS NOT NULL) AS "t7" ON "t1"."ss_item_sk" = "t7"."i_item_sk"
GROUP BY "t4"."d_year", "t7"."i_brand_id", "t7"."i_brand"
ORDER BY "t4"."d_year", SUM("t1"."ss_ext_sales_price") DESC, "t7"."i_brand_id"
FETCH NEXT 100 ROWS ONLY) AS "t9"
            hive.sql.query.fieldNames d_year,i_brand_id,i_brand,$f3
            hive.sql.query.fieldTypes int,int,string,decimal(17,2)
            hive.sql.query.split false
          Select Operator
            expressions: d_year (type: int), i_brand_id (type: int), i_brand (type: string), $f3 (type: decimal(17,2))
            outputColumnNames: _col0, _col1, _col2, _col3
            ListSink

