PREHOOK: query: explain cbo
select  
   substr(w_warehouse_name,1,20)
  ,sm_type
  ,cc_name
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk <= 30 ) then 1 else 0 end)  as `30 days` 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 30) and 
                 (cs_ship_date_sk - cs_sold_date_sk <= 60) then 1 else 0 end )  as `31-60 days` 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 60) and 
                 (cs_ship_date_sk - cs_sold_date_sk <= 90) then 1 else 0 end)  as `61-90 days` 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 90) and
                 (cs_ship_date_sk - cs_sold_date_sk <= 120) then 1 else 0 end)  as `91-120 days` 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk  > 120) then 1 else 0 end)  as `>120 days` 
from
   catalog_sales
  ,warehouse
  ,ship_mode
  ,call_center
  ,date_dim
where
    d_month_seq between 1212 and 1212 + 11
and cs_ship_date_sk   = d_date_sk
and cs_warehouse_sk   = w_warehouse_sk
and cs_ship_mode_sk   = sm_ship_mode_sk
and cs_call_center_sk = cc_call_center_sk
group by
   substr(w_warehouse_name,1,20)
  ,sm_type
  ,cc_name
order by substr(w_warehouse_name,1,20)
        ,sm_type
        ,cc_name
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@call_center
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@ship_mode
PREHOOK: Input: default@warehouse
#### A masked pattern was here ####
POSTHOOK: query: explain cbo
select  
   substr(w_warehouse_name,1,20)
  ,sm_type
  ,cc_name
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk <= 30 ) then 1 else 0 end)  as `30 days` 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 30) and 
                 (cs_ship_date_sk - cs_sold_date_sk <= 60) then 1 else 0 end )  as `31-60 days` 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 60) and 
                 (cs_ship_date_sk - cs_sold_date_sk <= 90) then 1 else 0 end)  as `61-90 days` 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 90) and
                 (cs_ship_date_sk - cs_sold_date_sk <= 120) then 1 else 0 end)  as `91-120 days` 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk  > 120) then 1 else 0 end)  as `>120 days` 
from
   catalog_sales
  ,warehouse
  ,ship_mode
  ,call_center
  ,date_dim
where
    d_month_seq between 1212 and 1212 + 11
and cs_ship_date_sk   = d_date_sk
and cs_warehouse_sk   = w_warehouse_sk
and cs_ship_mode_sk   = sm_ship_mode_sk
and cs_call_center_sk = cc_call_center_sk
group by
   substr(w_warehouse_name,1,20)
  ,sm_type
  ,cc_name
order by substr(w_warehouse_name,1,20)
        ,sm_type
        ,cc_name
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@call_center
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@ship_mode
POSTHOOK: Input: default@warehouse
#### A masked pattern was here ####
CBO PLAN:
HiveProject(_o__c0=[$0], sm_type=[$1], cc_name=[$2], 30 days=[$3], 31-60 days=[$4], 61-90 days=[$5], 91-120 days=[$6], >120 days=[$7])
  HiveSortLimit(sort0=[$8], sort1=[$1], sort2=[$2], dir0=[ASC], dir1=[ASC], dir2=[ASC], fetch=[100])
    HiveProject(_o__c0=[$0], sm_type=[$1], cc_name=[$2], 30 days=[$3], 31-60 days=[$4], 61-90 days=[$5], 91-120 days=[$6], >120 days=[$7], (tok_function substr (tok_table_or_col w_warehouse_name) 1 20)=[$0])
      HiveAggregate(group=[{11, 13, 15}], agg#0=[sum($4)], agg#1=[sum($5)], agg#2=[sum($6)], agg#3=[sum($7)], agg#4=[sum($8)])
        HiveJoin(condition=[=($1, $14)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[=($2, $12)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($3, $10)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveProject(cs_ship_date_sk=[$0], cs_call_center_sk=[$1], cs_ship_mode_sk=[$2], cs_warehouse_sk=[$3], CASE=[$4], CASE5=[$5], CASE6=[$6], CASE7=[$7], CASE8=[$8], d_date_sk=[$9])
                HiveJdbcConverter(convention=[JDBC.POSTGRES])
                  JdbcJoin(condition=[=($0, $9)], joinType=[inner])
                    JdbcProject(cs_ship_date_sk=[$1], cs_call_center_sk=[$2], cs_ship_mode_sk=[$3], cs_warehouse_sk=[$4], CASE=[CASE(<=(-($1, $0), 30), 1, 0)], CASE5=[CASE(AND(>(-($1, $0), 30), <=(-($1, $0), 60)), 1, 0)], CASE6=[CASE(AND(>(-($1, $0), 60), <=(-($1, $0), 90)), 1, 0)], CASE7=[CASE(AND(>(-($1, $0), 90), <=(-($1, $0), 120)), 1, 0)], CASE8=[CASE(>(-($1, $0), 120), 1, 0)])
                      JdbcFilter(condition=[AND(IS NOT NULL($4), IS NOT NULL($3), IS NOT NULL($2), IS NOT NULL($1))])
                        JdbcProject(cs_sold_date_sk=[$0], cs_ship_date_sk=[$2], cs_call_center_sk=[$11], cs_ship_mode_sk=[$13], cs_warehouse_sk=[$14])
                          JdbcHiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                    JdbcProject(d_date_sk=[$0])
                      JdbcFilter(condition=[AND(BETWEEN(false, $1, 1212, 1223), IS NOT NULL($0))])
                        JdbcProject(d_date_sk=[$0], d_month_seq=[$3])
                          JdbcHiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
              HiveProject(w_warehouse_sk=[$0], substr=[substr($1, 1, 20)])
                HiveProject(w_warehouse_sk=[$0], w_warehouse_name=[$1])
                  HiveJdbcConverter(convention=[JDBC.POSTGRES])
                    JdbcFilter(condition=[IS NOT NULL($0)])
                      JdbcProject(w_warehouse_sk=[$0], w_warehouse_name=[$2])
                        JdbcHiveTableScan(table=[[default, warehouse]], table:alias=[warehouse])
            HiveProject(sm_ship_mode_sk=[$0], sm_type=[$1])
              HiveJdbcConverter(convention=[JDBC.POSTGRES])
                JdbcFilter(condition=[IS NOT NULL($0)])
                  JdbcProject(sm_ship_mode_sk=[$0], sm_type=[$2])
                    JdbcHiveTableScan(table=[[default, ship_mode]], table:alias=[ship_mode])
          HiveProject(cc_call_center_sk=[$0], cc_name=[$1])
            HiveJdbcConverter(convention=[JDBC.POSTGRES])
              JdbcFilter(condition=[IS NOT NULL($0)])
                JdbcProject(cc_call_center_sk=[$0], cc_name=[$6])
                  JdbcHiveTableScan(table=[[default, call_center]], table:alias=[call_center])

