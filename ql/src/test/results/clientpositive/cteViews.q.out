PREHOOK: query: with src1 as (select key from src order by key limit 5)
select * from src1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: with src1 as (select key from src order by key limit 5)
select * from src1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
0
0
0
10
100
PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: drop view v
PREHOOK: type: DROPVIEW
POSTHOOK: query: drop view v
POSTHOOK: type: DROPVIEW
PREHOOK: query: create view v as with cte as (select key, value from src order by key limit 5)
select key from cte
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@v
POSTHOOK: query: create view v as with cte as (select key, value from src order by key limit 5)
select key from cte
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v
POSTHOOK: Lineage: v.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: describe extended v
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@v
POSTHOOK: query: describe extended v
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@v
key                 	string              	                    
	 	 
#### A masked pattern was here ####
select key from cte, viewExpandedText:with cte as (select `src`.`key`, `src`.`value` from `default`.`src` order by key limit 5)	 	 
select `cte`.`key` from cte, tableType:VIRTUAL_VIEW, rewriteEnabled:false)		 
PREHOOK: query: create database bug
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:bug
POSTHOOK: query: create database bug
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:bug
PREHOOK: query: use bug
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:bug
POSTHOOK: query: use bug
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:bug
PREHOOK: query: select * from default.v
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@v
#### A masked pattern was here ####
POSTHOOK: query: select * from default.v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@v
#### A masked pattern was here ####
0
0
0
10
100
PREHOOK: query: drop database bug
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:bug
PREHOOK: Output: database:bug
POSTHOOK: query: drop database bug
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:bug
POSTHOOK: Output: database:bug
PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: drop view v
PREHOOK: type: DROPVIEW
PREHOOK: Input: default@v
PREHOOK: Output: default@v
POSTHOOK: query: drop view v
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: default@v
POSTHOOK: Output: default@v
PREHOOK: query: create view v as with cte as (select * from src  order by key limit 5)
select * from cte
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@v
POSTHOOK: query: create view v as with cte as (select * from src  order by key limit 5)
select * from cte
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v
POSTHOOK: Lineage: v.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: v.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: describe extended v
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@v
POSTHOOK: query: describe extended v
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@v
key                 	string              	                    
value               	string              	                    
	 	 
#### A masked pattern was here ####
select * from cte, viewExpandedText:with cte as (select `src`.`key`, `src`.`value` from `default`.`src`  order by `src`.`key` limit 5)	 	 
select `cte`.`key`, `cte`.`value` from cte, tableType:VIRTUAL_VIEW, rewriteEnabled:false)		 
PREHOOK: query: create database bug
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:bug
POSTHOOK: query: create database bug
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:bug
PREHOOK: query: use bug
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:bug
POSTHOOK: query: use bug
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:bug
PREHOOK: query: select * from default.v
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@v
#### A masked pattern was here ####
POSTHOOK: query: select * from default.v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@v
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
10	val_10
100	val_100
PREHOOK: query: drop database bug
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:bug
PREHOOK: Output: database:bug
POSTHOOK: query: drop database bug
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:bug
POSTHOOK: Output: database:bug
PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: drop view v
PREHOOK: type: DROPVIEW
PREHOOK: Input: default@v
PREHOOK: Output: default@v
POSTHOOK: query: drop view v
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: default@v
POSTHOOK: Output: default@v
PREHOOK: query: create view v as with src1 as (select key from src order by key limit 5)
select * from src1
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@v
POSTHOOK: query: create view v as with src1 as (select key from src order by key limit 5)
select * from src1
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v
POSTHOOK: Lineage: v.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: describe extended v
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@v
POSTHOOK: query: describe extended v
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@v
key                 	string              	                    
	 	 
#### A masked pattern was here ####
select * from src1, viewExpandedText:with src1 as (select `src`.`key` from `default`.`src` order by key limit 5)	 	 
select `src1`.`key` from src1, tableType:VIRTUAL_VIEW, rewriteEnabled:false)		 
PREHOOK: query: create database bug
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:bug
POSTHOOK: query: create database bug
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:bug
PREHOOK: query: use bug
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:bug
POSTHOOK: query: use bug
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:bug
PREHOOK: query: select * from default.v
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@v
#### A masked pattern was here ####
POSTHOOK: query: select * from default.v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@v
#### A masked pattern was here ####
0
0
0
10
100
PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: drop view v
PREHOOK: type: DROPVIEW
PREHOOK: Input: default@v
PREHOOK: Output: default@v
POSTHOOK: query: drop view v
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: default@v
POSTHOOK: Output: default@v
PREHOOK: query: create view v as with src1 as (select key from src order by key limit 5)
select * from src1 a where a.key is not null
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@v
POSTHOOK: query: create view v as with src1 as (select key from src order by key limit 5)
select * from src1 a where a.key is not null
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v
POSTHOOK: Lineage: v.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: describe extended v
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@v
POSTHOOK: query: describe extended v
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@v
key                 	string              	                    
	 	 
#### A masked pattern was here ####
select * from src1 a where a.key is not null, viewExpandedText:with src1 as (select `src`.`key` from `default`.`src` order by key limit 5)	 	 
select `a`.`key` from src1 a where `a`.`key` is not null, tableType:VIRTUAL_VIEW, rewriteEnabled:false)		 
PREHOOK: query: select * from v
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@v
#### A masked pattern was here ####
POSTHOOK: query: select * from v
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@v
#### A masked pattern was here ####
0
0
0
10
100
PREHOOK: query: drop view v
PREHOOK: type: DROPVIEW
PREHOOK: Input: default@v
PREHOOK: Output: default@v
POSTHOOK: query: drop view v
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: default@v
POSTHOOK: Output: default@v
PREHOOK: query: drop database bug
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:bug
PREHOOK: Output: database:bug
POSTHOOK: query: drop database bug
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:bug
POSTHOOK: Output: database:bug
