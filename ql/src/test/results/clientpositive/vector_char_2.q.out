PREHOOK: query: drop table char_2_n0
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table char_2_n0
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table char_2_n0 (
  key char(10),
  value char(20)
) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@char_2_n0
POSTHOOK: query: create table char_2_n0 (
  key char(10),
  value char(20)
) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@char_2_n0
PREHOOK: query: insert overwrite table char_2_n0 select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@char_2_n0
POSTHOOK: query: insert overwrite table char_2_n0 select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@char_2_n0
POSTHOOK: Lineage: char_2_n0.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: char_2_n0.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert into char_2_n0 values (NULL, NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@char_2_n0
POSTHOOK: query: insert into char_2_n0 values (NULL, NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@char_2_n0
POSTHOOK: Lineage: char_2_n0.key EXPRESSION []
POSTHOOK: Lineage: char_2_n0.value EXPRESSION []
PREHOOK: query: select value, sum(cast(key as int)), count(*) numrows
from src
group by value
order by value asc
limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select value, sum(cast(key as int)), count(*) numrows
from src
group by value
order by value asc
limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
val_0	0	3
val_10	10	1
val_100	200	2
val_103	206	2
val_104	208	2
PREHOOK: query: explain vectorization expression select value, sum(cast(key as int)), count(*) numrows
from char_2_n0
group by value
order by value asc
limit 5
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization expression select value, sum(cast(key as int)), count(*) numrows
from char_2_n0
group by value
order by value asc
limit 5
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: char_2_n0
            Statistics: Num rows: 501 Data size: 99168 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
            Select Operator
              expressions: value (type: char(20)), UDFToInteger(key) (type: int)
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [1, 3]
                  selectExpressions: CastStringToLong(col 0:char(10)) -> 3:int
              Statistics: Num rows: 501 Data size: 99168 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(_col1), count()
                Group By Vectorization:
                    aggregators: VectorUDAFSumLong(col 3:int) -> bigint, VectorUDAFCountStar(*) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: HASH
                    keyExpressions: col 1:char(20)
                    native: false
                    vectorProcessingMode: HASH
                    projectedOutputColumnNums: [0, 1]
                keys: _col0 (type: char(20))
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 501 Data size: 99168 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: char(20))
                  sort order: +
                  Map-reduce partition columns: _col0 (type: char(20))
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkOperator
                      native: false
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                  Statistics: Num rows: 501 Data size: 99168 Basic stats: COMPLETE Column stats: NONE
                  TopN Hash Memory Usage: 0.1
                  value expressions: _col1 (type: bigint), _col2 (type: bigint)
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), count(VALUE._col1)
          keys: KEY._col0 (type: char(20))
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 49485 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            TableScan Vectorization:
                native: true
            Reduce Output Operator
              key expressions: _col0 (type: char(20))
              sort order: +
              Reduce Sink Vectorization:
                  className: VectorReduceSinkOperator
                  native: false
                  nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                  nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
              Statistics: Num rows: 250 Data size: 49485 Basic stats: COMPLETE Column stats: NONE
              TopN Hash Memory Usage: 0.1
              value expressions: _col1 (type: bigint), _col2 (type: bigint)
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.mapred.SequenceFileInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: char(20)), VALUE._col0 (type: bigint), VALUE._col1 (type: bigint)
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 49485 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 5
            Statistics: Num rows: 5 Data size: 985 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 5 Data size: 985 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 5
      Processor Tree:
        ListSink

PREHOOK: query: select value, sum(cast(key as int)), count(*) numrows
from char_2_n0
group by value
order by value asc
limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@char_2_n0
#### A masked pattern was here ####
POSTHOOK: query: select value, sum(cast(key as int)), count(*) numrows
from char_2_n0
group by value
order by value asc
limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@char_2_n0
#### A masked pattern was here ####
NULL	NULL	1
val_0               	0	3
val_10              	10	1
val_100             	200	2
val_103             	206	2
PREHOOK: query: select value, sum(cast(key as int)), count(*) numrows
from src
group by value
order by value desc
limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select value, sum(cast(key as int)), count(*) numrows
from src
group by value
order by value desc
limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
val_98	196	2
val_97	194	2
val_96	96	1
val_95	190	2
val_92	92	1
PREHOOK: query: explain vectorization expression select value, sum(cast(key as int)), count(*) numrows
from char_2_n0
group by value
order by value desc
limit 5
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization expression select value, sum(cast(key as int)), count(*) numrows
from char_2_n0
group by value
order by value desc
limit 5
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: char_2_n0
            Statistics: Num rows: 501 Data size: 99168 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
            Select Operator
              expressions: value (type: char(20)), UDFToInteger(key) (type: int)
              outputColumnNames: _col0, _col1
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [1, 3]
                  selectExpressions: CastStringToLong(col 0:char(10)) -> 3:int
              Statistics: Num rows: 501 Data size: 99168 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: sum(_col1), count()
                Group By Vectorization:
                    aggregators: VectorUDAFSumLong(col 3:int) -> bigint, VectorUDAFCountStar(*) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: HASH
                    keyExpressions: col 1:char(20)
                    native: false
                    vectorProcessingMode: HASH
                    projectedOutputColumnNums: [0, 1]
                keys: _col0 (type: char(20))
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 501 Data size: 99168 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: char(20))
                  sort order: -
                  Map-reduce partition columns: _col0 (type: char(20))
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkOperator
                      native: false
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                  Statistics: Num rows: 501 Data size: 99168 Basic stats: COMPLETE Column stats: NONE
                  TopN Hash Memory Usage: 0.1
                  value expressions: _col1 (type: bigint), _col2 (type: bigint)
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), count(VALUE._col1)
          keys: KEY._col0 (type: char(20))
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 49485 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            TableScan Vectorization:
                native: true
            Reduce Output Operator
              key expressions: _col0 (type: char(20))
              sort order: -
              Reduce Sink Vectorization:
                  className: VectorReduceSinkOperator
                  native: false
                  nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                  nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
              Statistics: Num rows: 250 Data size: 49485 Basic stats: COMPLETE Column stats: NONE
              TopN Hash Memory Usage: 0.1
              value expressions: _col1 (type: bigint), _col2 (type: bigint)
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vector.serde.deserialize IS true
          inputFormatFeatureSupport: []
          featureSupportInUse: []
          inputFileFormats: org.apache.hadoop.mapred.SequenceFileInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: char(20)), VALUE._col0 (type: bigint), VALUE._col1 (type: bigint)
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 49485 Basic stats: COMPLETE Column stats: NONE
          Limit
            Number of rows: 5
            Statistics: Num rows: 5 Data size: 985 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 5 Data size: 985 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 5
      Processor Tree:
        ListSink

PREHOOK: query: select value, sum(cast(key as int)), count(*) numrows
from char_2_n0
group by value
order by value desc
limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@char_2_n0
#### A masked pattern was here ####
POSTHOOK: query: select value, sum(cast(key as int)), count(*) numrows
from char_2_n0
group by value
order by value desc
limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@char_2_n0
#### A masked pattern was here ####
val_98              	196	2
val_97              	194	2
val_96              	96	1
val_95              	190	2
val_92              	92	1
PREHOOK: query: drop table char_2_n0
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@char_2_n0
PREHOOK: Output: default@char_2_n0
POSTHOOK: query: drop table char_2_n0
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@char_2_n0
POSTHOOK: Output: default@char_2_n0
