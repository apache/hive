PREHOOK: query: create table small_alltypesorc1a_n1 as select * from alltypesorc where cint is not null and cstring1 is not null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc1a_n1
POSTHOOK: query: create table small_alltypesorc1a_n1 as select * from alltypesorc where cint is not null and cstring1 is not null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc1a_n1
POSTHOOK: Lineage: small_alltypesorc1a_n1.cbigint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.cboolean1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.cboolean2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.cint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.cstring1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.cstring2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.ctimestamp1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.ctimestamp2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc1a_n1.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: create table small_alltypesorc2a_n1 as select * from alltypesorc where cint is null and cstring1 is not null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc2a_n1
POSTHOOK: query: create table small_alltypesorc2a_n1 as select * from alltypesorc where cint is null and cstring1 is not null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc2a_n1
POSTHOOK: Lineage: small_alltypesorc2a_n1.cbigint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.cboolean1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.cboolean2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.cint SIMPLE []
POSTHOOK: Lineage: small_alltypesorc2a_n1.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.cstring1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.cstring2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.ctimestamp1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.ctimestamp2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc2a_n1.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: create table small_alltypesorc3a_n1 as select * from alltypesorc where cint is not null and cstring1 is null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc3a_n1
POSTHOOK: query: create table small_alltypesorc3a_n1 as select * from alltypesorc where cint is not null and cstring1 is null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc3a_n1
POSTHOOK: Lineage: small_alltypesorc3a_n1.cbigint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.cboolean1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.cboolean2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.cint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.cstring1 SIMPLE []
POSTHOOK: Lineage: small_alltypesorc3a_n1.cstring2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.ctimestamp1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.ctimestamp2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc3a_n1.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: create table small_alltypesorc4a_n1 as select * from alltypesorc where cint is null and cstring1 is null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc4a_n1
POSTHOOK: query: create table small_alltypesorc4a_n1 as select * from alltypesorc where cint is null and cstring1 is null order by ctinyint, csmallint, cint, cbigint, cfloat, cdouble, cstring1, cstring2, ctimestamp1, ctimestamp2, cboolean1, cboolean2 limit 5
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc4a_n1
POSTHOOK: Lineage: small_alltypesorc4a_n1.cbigint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n1.cboolean1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n1.cboolean2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n1.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n1.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n1.cint SIMPLE []
POSTHOOK: Lineage: small_alltypesorc4a_n1.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n1.cstring1 SIMPLE []
POSTHOOK: Lineage: small_alltypesorc4a_n1.cstring2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n1.ctimestamp1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n1.ctimestamp2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc4a_n1.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: select * from small_alltypesorc1a_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc1a_n1
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc1a_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc1a_n1
#### A masked pattern was here ####
-64	-10462	626923679	NULL	-64.0	-10462.0	821UdmGbkEf4j	NULL	1969-12-31 16:00:02.496	1969-12-31 16:00:00.164	true	NULL
-64	-15920	528534767	NULL	-64.0	-15920.0	cvLH6Eat2yFsyy7p	NULL	1969-12-31 15:59:51.859	1969-12-31 16:00:14.468	true	NULL
-64	-6907	253665376	NULL	-64.0	-6907.0	1cGVWH7n1QU	NULL	NULL	1969-12-31 15:59:53.66	true	NULL
-64	-8080	528534767	NULL	-64.0	-8080.0	cvLH6Eat2yFsyy7p	NULL	1969-12-31 15:59:58.044	1969-12-31 15:59:48.655	true	NULL
-64	-9842	253665376	NULL	-64.0	-9842.0	1cGVWH7n1QU	NULL	1969-12-31 16:00:00.631	1969-12-31 16:00:01.781	true	NULL
PREHOOK: query: select * from small_alltypesorc2a_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc2a_n1
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc2a_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc2a_n1
#### A masked pattern was here ####
-51	NULL	NULL	-1731061911	-51.0	NULL	Pw53BBJ	yL443x2437PO5Hv1U3lCjq2D	1969-12-31 16:00:08.451	NULL	true	false
-51	NULL	NULL	-1846191223	-51.0	NULL	Ul085f84S33Xd32u	x1JC58g0Ukp	1969-12-31 16:00:08.451	NULL	true	true
-51	NULL	NULL	-1874052220	-51.0	NULL	c61B47I604gymFJ	sjWQS78	1969-12-31 16:00:08.451	NULL	false	false
-51	NULL	NULL	-1927203921	-51.0	NULL	45ja5suO	42S0I0	1969-12-31 16:00:08.451	NULL	true	true
-51	NULL	NULL	-1970551565	-51.0	NULL	r2uhJH3	loXMWyrHjVeK	1969-12-31 16:00:08.451	NULL	false	false
PREHOOK: query: select * from small_alltypesorc3a_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc3a_n1
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc3a_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc3a_n1
#### A masked pattern was here ####
-51	NULL	-31312632	1086455747	-51.0	NULL	NULL	Bc7xt12568c451o64LF5	1969-12-31 16:00:08.451	NULL	NULL	true
-51	NULL	-337975743	608681041	-51.0	NULL	NULL	Ih2r28o6	1969-12-31 16:00:08.451	NULL	NULL	true
-51	NULL	-413196097	-306198070	-51.0	NULL	NULL	F53QcSDPpxYF1Ub	1969-12-31 16:00:08.451	NULL	NULL	false
-51	NULL	-591488718	803603078	-51.0	NULL	NULL	X616UtmmA3FHan	1969-12-31 16:00:08.451	NULL	NULL	true
-51	NULL	-738306196	-460430946	-51.0	NULL	NULL	dBOqv	1969-12-31 16:00:08.451	NULL	NULL	false
PREHOOK: query: select * from small_alltypesorc4a_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc4a_n1
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc4a_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc4a_n1
#### A masked pattern was here ####
-64	-7196	NULL	-1615920595	-64.0	-7196.0	NULL	X5rDjl	1969-12-31 16:00:11.912	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	-1639157869	-64.0	-7196.0	NULL	IJ0Oj7qAiqNGsN7gn	1969-12-31 16:00:01.785	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	-527203677	-64.0	-7196.0	NULL	JBE4H5RoK412Cs260I72	1969-12-31 15:59:50.184	1969-12-31 15:59:58.174	NULL	true
-64	-7196	NULL	406535485	-64.0	-7196.0	NULL	E011i	1969-12-31 15:59:56.048	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	658026952	-64.0	-7196.0	NULL	4tAur	1969-12-31 15:59:53.866	1969-12-31 15:59:58.174	NULL	true
PREHOOK: query: create table small_alltypesorc_a_n1 stored as orc as select * from 
(select * from (select * from small_alltypesorc1a_n1) sq1
 union all
 select * from (select * from small_alltypesorc2a_n1) sq2
 union all
 select * from (select * from small_alltypesorc3a_n1) sq3
 union all
 select * from (select * from small_alltypesorc4a_n1) sq4) q
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@small_alltypesorc1a_n1
PREHOOK: Input: default@small_alltypesorc2a_n1
PREHOOK: Input: default@small_alltypesorc3a_n1
PREHOOK: Input: default@small_alltypesorc4a_n1
PREHOOK: Output: database:default
PREHOOK: Output: default@small_alltypesorc_a_n1
POSTHOOK: query: create table small_alltypesorc_a_n1 stored as orc as select * from 
(select * from (select * from small_alltypesorc1a_n1) sq1
 union all
 select * from (select * from small_alltypesorc2a_n1) sq2
 union all
 select * from (select * from small_alltypesorc3a_n1) sq3
 union all
 select * from (select * from small_alltypesorc4a_n1) sq4) q
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@small_alltypesorc1a_n1
POSTHOOK: Input: default@small_alltypesorc2a_n1
POSTHOOK: Input: default@small_alltypesorc3a_n1
POSTHOOK: Input: default@small_alltypesorc4a_n1
POSTHOOK: Output: database:default
POSTHOOK: Output: default@small_alltypesorc_a_n1
POSTHOOK: Lineage: small_alltypesorc_a_n1.cbigint EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:cbigint, type:bigint, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:cbigint, type:bigint, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:cbigint, type:bigint, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.cboolean1 EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:cboolean1, type:boolean, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:cboolean1, type:boolean, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:cboolean1, type:boolean, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.cboolean2 EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:cboolean2, type:boolean, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:cboolean2, type:boolean, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:cboolean2, type:boolean, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.cdouble EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:cdouble, type:double, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:cdouble, type:double, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:cdouble, type:double, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.cfloat EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:cfloat, type:float, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:cfloat, type:float, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:cfloat, type:float, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.cint EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:cint, type:int, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:cint, type:int, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:cint, type:int, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.csmallint EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:csmallint, type:smallint, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:csmallint, type:smallint, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:csmallint, type:smallint, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.cstring1 EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:cstring1, type:string, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:cstring1, type:string, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:cstring1, type:string, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.cstring2 EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:cstring2, type:string, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:cstring2, type:string, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:cstring2, type:string, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.ctimestamp1 EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:ctimestamp1, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.ctimestamp2 EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: small_alltypesorc_a_n1.ctinyint EXPRESSION [(small_alltypesorc1a_n1)small_alltypesorc1a_n1.FieldSchema(name:ctinyint, type:tinyint, comment:null), (small_alltypesorc2a_n1)small_alltypesorc2a_n1.FieldSchema(name:ctinyint, type:tinyint, comment:null), (small_alltypesorc3a_n1)small_alltypesorc3a_n1.FieldSchema(name:ctinyint, type:tinyint, comment:null), (small_alltypesorc4a_n1)small_alltypesorc4a_n1.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: ANALYZE TABLE small_alltypesorc_a_n1 COMPUTE STATISTICS
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n1
PREHOOK: Output: default@small_alltypesorc_a_n1
POSTHOOK: query: ANALYZE TABLE small_alltypesorc_a_n1 COMPUTE STATISTICS
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n1
POSTHOOK: Output: default@small_alltypesorc_a_n1
PREHOOK: query: ANALYZE TABLE small_alltypesorc_a_n1 COMPUTE STATISTICS FOR COLUMNS
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@small_alltypesorc_a_n1
PREHOOK: Output: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
POSTHOOK: query: ANALYZE TABLE small_alltypesorc_a_n1 COMPUTE STATISTICS FOR COLUMNS
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@small_alltypesorc_a_n1
POSTHOOK: Output: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
PREHOOK: query: select * from small_alltypesorc_a_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
POSTHOOK: query: select * from small_alltypesorc_a_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
-51	NULL	-31312632	1086455747	-51.0	NULL	NULL	Bc7xt12568c451o64LF5	1969-12-31 16:00:08.451	NULL	NULL	true
-51	NULL	-337975743	608681041	-51.0	NULL	NULL	Ih2r28o6	1969-12-31 16:00:08.451	NULL	NULL	true
-51	NULL	-413196097	-306198070	-51.0	NULL	NULL	F53QcSDPpxYF1Ub	1969-12-31 16:00:08.451	NULL	NULL	false
-51	NULL	-591488718	803603078	-51.0	NULL	NULL	X616UtmmA3FHan	1969-12-31 16:00:08.451	NULL	NULL	true
-51	NULL	-738306196	-460430946	-51.0	NULL	NULL	dBOqv	1969-12-31 16:00:08.451	NULL	NULL	false
-51	NULL	NULL	-1731061911	-51.0	NULL	Pw53BBJ	yL443x2437PO5Hv1U3lCjq2D	1969-12-31 16:00:08.451	NULL	true	false
-51	NULL	NULL	-1846191223	-51.0	NULL	Ul085f84S33Xd32u	x1JC58g0Ukp	1969-12-31 16:00:08.451	NULL	true	true
-51	NULL	NULL	-1874052220	-51.0	NULL	c61B47I604gymFJ	sjWQS78	1969-12-31 16:00:08.451	NULL	false	false
-51	NULL	NULL	-1927203921	-51.0	NULL	45ja5suO	42S0I0	1969-12-31 16:00:08.451	NULL	true	true
-51	NULL	NULL	-1970551565	-51.0	NULL	r2uhJH3	loXMWyrHjVeK	1969-12-31 16:00:08.451	NULL	false	false
-64	-10462	626923679	NULL	-64.0	-10462.0	821UdmGbkEf4j	NULL	1969-12-31 16:00:02.496	1969-12-31 16:00:00.164	true	NULL
-64	-15920	528534767	NULL	-64.0	-15920.0	cvLH6Eat2yFsyy7p	NULL	1969-12-31 15:59:51.859	1969-12-31 16:00:14.468	true	NULL
-64	-6907	253665376	NULL	-64.0	-6907.0	1cGVWH7n1QU	NULL	NULL	1969-12-31 15:59:53.66	true	NULL
-64	-7196	NULL	-1615920595	-64.0	-7196.0	NULL	X5rDjl	1969-12-31 16:00:11.912	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	-1639157869	-64.0	-7196.0	NULL	IJ0Oj7qAiqNGsN7gn	1969-12-31 16:00:01.785	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	-527203677	-64.0	-7196.0	NULL	JBE4H5RoK412Cs260I72	1969-12-31 15:59:50.184	1969-12-31 15:59:58.174	NULL	true
-64	-7196	NULL	406535485	-64.0	-7196.0	NULL	E011i	1969-12-31 15:59:56.048	1969-12-31 15:59:58.174	NULL	false
-64	-7196	NULL	658026952	-64.0	-7196.0	NULL	4tAur	1969-12-31 15:59:53.866	1969-12-31 15:59:58.174	NULL	true
-64	-8080	528534767	NULL	-64.0	-8080.0	cvLH6Eat2yFsyy7p	NULL	1969-12-31 15:59:58.044	1969-12-31 15:59:48.655	true	NULL
-64	-9842	253665376	NULL	-64.0	-9842.0	1cGVWH7n1QU	NULL	1969-12-31 16:00:00.631	1969-12-31 16:00:01.781	true	NULL
PREHOOK: query: explain vectorization detail formatted
select count(*) from (select c.cstring1 
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cint = c.cint 
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1
) t1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail formatted
select count(*) from (select c.cstring1 
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cint = c.cint 
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1
) t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
{"CBOPlan":"{\n  \"rels\": [\n    {\n      \"id\": \"0\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveTableScan\",\n      \"table\": [\n        \"default\",\n        \"small_alltypesorc_a_n1\"\n      ],\n      \"table:alias\": \"c\",\n      \"inputs\": [],\n      \"rowCount\": 20.0,\n      \"avgRowSize\": 10.0,\n      \"rowType\": [\n        {\n          \"type\": \"TINYINT\",\n          \"nullable\": true,\n          \"name\": \"ctinyint\"\n        },\n        {\n          \"type\": \"SMALLINT\",\n          \"nullable\": true,\n          \"name\": \"csmallint\"\n        },\n        {\n          \"type\": \"INTEGER\",\n          \"nullable\": true,\n          \"name\": \"cint\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"cbigint\"\n        },\n        {\n          \"type\": \"FLOAT\",\n          \"nullable\": true,\n          \"name\": \"cfloat\"\n        },\n        {\n          \"type\": \"DOUBLE\",\n          \"nullable\": true,\n          \"name\": \"cdouble\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring1\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring2\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp1\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp2\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean1\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean2\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"BLOCK__OFFSET__INSIDE__FILE\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"INPUT__FILE__NAME\"\n        },\n        {\n          \"fields\": [\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"writeid\"\n            },\n            {\n              \"type\": \"INTEGER\",\n              \"nullable\": true,\n              \"name\": \"bucketid\"\n            },\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"rowid\"\n            }\n          ],\n          \"name\": \"ROW__ID\"\n        }\n      ],\n      \"colStats\": [\n        {\n          \"name\": \"cint\",\n          \"ndv\": 8,\n          \"minValue\": -738306196,\n          \"maxValue\": 626923679\n        },\n        {\n          \"name\": \"cstring1\",\n          \"ndv\": 8\n        },\n        {\n          \"name\": \"ctinyint\",\n          \"ndv\": 2,\n          \"minValue\": -64,\n          \"maxValue\": -51\n        },\n        {\n          \"name\": \"csmallint\",\n          \"ndv\": 6,\n          \"minValue\": -15920,\n          \"maxValue\": -6907\n        },\n        {\n          \"name\": \"cbigint\",\n          \"ndv\": 15,\n          \"minValue\": -1970551565,\n          \"maxValue\": 1086455747\n        },\n        {\n          \"name\": \"cfloat\",\n          \"ndv\": 2,\n          \"minValue\": -64.0,\n          \"maxValue\": -51.0\n        },\n        {\n          \"name\": \"cdouble\",\n          \"ndv\": 6,\n          \"minValue\": -15920.0,\n          \"maxValue\": -6907.0\n        },\n        {\n          \"name\": \"cstring2\",\n          \"ndv\": 15\n        },\n        {\n          \"name\": \"ctimestamp1\",\n          \"ndv\": 0,\n          \"minValue\": -28810,\n          \"maxValue\": -28789\n        },\n        {\n          \"name\": \"ctimestamp2\",\n          \"ndv\": 0,\n          \"minValue\": -28812,\n          \"maxValue\": -28786\n        },\n        {\n          \"name\": \"cboolean1\",\n          \"ndv\": 2\n        },\n        {\n          \"name\": \"cboolean2\",\n          \"ndv\": 2\n        }\n      ]\n    },\n    {\n      \"id\": \"1\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveProject\",\n      \"fields\": [\n        \"cint\",\n        \"cstring1\"\n      ],\n      \"exprs\": [\n        {\n          \"input\": 2,\n          \"name\": \"$2\"\n        },\n        {\n          \"input\": 6,\n          \"name\": \"$6\"\n        }\n      ],\n      \"rowCount\": 20.0\n    },\n    {\n      \"id\": \"2\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveTableScan\",\n      \"table\": [\n        \"default\",\n        \"small_alltypesorc_a_n1\"\n      ],\n      \"table:alias\": \"cd\",\n      \"inputs\": [],\n      \"rowCount\": 20.0,\n      \"avgRowSize\": 4.0,\n      \"rowType\": [\n        {\n          \"type\": \"TINYINT\",\n          \"nullable\": true,\n          \"name\": \"ctinyint\"\n        },\n        {\n          \"type\": \"SMALLINT\",\n          \"nullable\": true,\n          \"name\": \"csmallint\"\n        },\n        {\n          \"type\": \"INTEGER\",\n          \"nullable\": true,\n          \"name\": \"cint\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"cbigint\"\n        },\n        {\n          \"type\": \"FLOAT\",\n          \"nullable\": true,\n          \"name\": \"cfloat\"\n        },\n        {\n          \"type\": \"DOUBLE\",\n          \"nullable\": true,\n          \"name\": \"cdouble\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring1\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring2\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp1\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp2\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean1\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean2\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"BLOCK__OFFSET__INSIDE__FILE\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"INPUT__FILE__NAME\"\n        },\n        {\n          \"fields\": [\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"writeid\"\n            },\n            {\n              \"type\": \"INTEGER\",\n              \"nullable\": true,\n              \"name\": \"bucketid\"\n            },\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"rowid\"\n            }\n          ],\n          \"name\": \"ROW__ID\"\n        }\n      ],\n      \"colStats\": [\n        {\n          \"name\": \"cint\",\n          \"ndv\": 8,\n          \"minValue\": -738306196,\n          \"maxValue\": 626923679\n        },\n        {\n          \"name\": \"ctinyint\",\n          \"ndv\": 2,\n          \"minValue\": -64,\n          \"maxValue\": -51\n        },\n        {\n          \"name\": \"csmallint\",\n          \"ndv\": 6,\n          \"minValue\": -15920,\n          \"maxValue\": -6907\n        },\n        {\n          \"name\": \"cbigint\",\n          \"ndv\": 15,\n          \"minValue\": -1970551565,\n          \"maxValue\": 1086455747\n        },\n        {\n          \"name\": \"cfloat\",\n          \"ndv\": 2,\n          \"minValue\": -64.0,\n          \"maxValue\": -51.0\n        },\n        {\n          \"name\": \"cdouble\",\n          \"ndv\": 6,\n          \"minValue\": -15920.0,\n          \"maxValue\": -6907.0\n        },\n        {\n          \"name\": \"cstring1\",\n          \"ndv\": 8\n        },\n        {\n          \"name\": \"cstring2\",\n          \"ndv\": 15\n        },\n        {\n          \"name\": \"ctimestamp1\",\n          \"ndv\": 0,\n          \"minValue\": -28810,\n          \"maxValue\": -28789\n        },\n        {\n          \"name\": \"ctimestamp2\",\n          \"ndv\": 0,\n          \"minValue\": -28812,\n          \"maxValue\": -28786\n        },\n        {\n          \"name\": \"cboolean1\",\n          \"ndv\": 2\n        },\n        {\n          \"name\": \"cboolean2\",\n          \"ndv\": 2\n        }\n      ]\n    },\n    {\n      \"id\": \"3\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveFilter\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"IS NOT NULL\",\n          \"kind\": \"IS_NOT_NULL\",\n          \"syntax\": \"POSTFIX\"\n        },\n        \"operands\": [\n          {\n            \"input\": 2,\n            \"name\": \"$2\"\n          }\n        ]\n      },\n      \"rowCount\": 10.0\n    },\n    {\n      \"id\": \"4\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveProject\",\n      \"fields\": [\n        \"cint\"\n      ],\n      \"exprs\": [\n        {\n          \"input\": 2,\n          \"name\": \"$2\"\n        }\n      ],\n      \"rowCount\": 10.0\n    },\n    {\n      \"id\": \"5\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveJoin\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"=\",\n          \"kind\": \"EQUALS\",\n          \"syntax\": \"BINARY\"\n        },\n        \"operands\": [\n          {\n            \"input\": 2,\n            \"name\": \"$2\"\n          },\n          {\n            \"input\": 0,\n            \"name\": \"$0\"\n          }\n        ]\n      },\n      \"joinType\": \"left\",\n      \"algorithm\": \"none\",\n      \"cost\": \"not available\",\n      \"inputs\": [\n        \"1\",\n        \"4\"\n      ],\n      \"rowCount\": 25.0\n    },\n    {\n      \"id\": \"6\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveTableScan\",\n      \"table\": [\n        \"default\",\n        \"small_alltypesorc_a_n1\"\n      ],\n      \"table:alias\": \"hd\",\n      \"inputs\": [],\n      \"rowCount\": 20.0,\n      \"avgRowSize\": 6.0,\n      \"rowType\": [\n        {\n          \"type\": \"TINYINT\",\n          \"nullable\": true,\n          \"name\": \"ctinyint\"\n        },\n        {\n          \"type\": \"SMALLINT\",\n          \"nullable\": true,\n          \"name\": \"csmallint\"\n        },\n        {\n          \"type\": \"INTEGER\",\n          \"nullable\": true,\n          \"name\": \"cint\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"cbigint\"\n        },\n        {\n          \"type\": \"FLOAT\",\n          \"nullable\": true,\n          \"name\": \"cfloat\"\n        },\n        {\n          \"type\": \"DOUBLE\",\n          \"nullable\": true,\n          \"name\": \"cdouble\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring1\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring2\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp1\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp2\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean1\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean2\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"BLOCK__OFFSET__INSIDE__FILE\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"INPUT__FILE__NAME\"\n        },\n        {\n          \"fields\": [\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"writeid\"\n            },\n            {\n              \"type\": \"INTEGER\",\n              \"nullable\": true,\n              \"name\": \"bucketid\"\n            },\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"rowid\"\n            }\n          ],\n          \"name\": \"ROW__ID\"\n        }\n      ],\n      \"colStats\": [\n        {\n          \"name\": \"cstring1\",\n          \"ndv\": 8\n        },\n        {\n          \"name\": \"ctinyint\",\n          \"ndv\": 2,\n          \"minValue\": -64,\n          \"maxValue\": -51\n        },\n        {\n          \"name\": \"csmallint\",\n          \"ndv\": 6,\n          \"minValue\": -15920,\n          \"maxValue\": -6907\n        },\n        {\n          \"name\": \"cint\",\n          \"ndv\": 8,\n          \"minValue\": -738306196,\n          \"maxValue\": 626923679\n        },\n        {\n          \"name\": \"cbigint\",\n          \"ndv\": 15,\n          \"minValue\": -1970551565,\n          \"maxValue\": 1086455747\n        },\n        {\n          \"name\": \"cfloat\",\n          \"ndv\": 2,\n          \"minValue\": -64.0,\n          \"maxValue\": -51.0\n        },\n        {\n          \"name\": \"cdouble\",\n          \"ndv\": 6,\n          \"minValue\": -15920.0,\n          \"maxValue\": -6907.0\n        },\n        {\n          \"name\": \"cstring2\",\n          \"ndv\": 15\n        },\n        {\n          \"name\": \"ctimestamp1\",\n          \"ndv\": 0,\n          \"minValue\": -28810,\n          \"maxValue\": -28789\n        },\n        {\n          \"name\": \"ctimestamp2\",\n          \"ndv\": 0,\n          \"minValue\": -28812,\n          \"maxValue\": -28786\n        },\n        {\n          \"name\": \"cboolean1\",\n          \"ndv\": 2\n        },\n        {\n          \"name\": \"cboolean2\",\n          \"ndv\": 2\n        }\n      ]\n    },\n    {\n      \"id\": \"7\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveFilter\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"IS NOT NULL\",\n          \"kind\": \"IS_NOT_NULL\",\n          \"syntax\": \"POSTFIX\"\n        },\n        \"operands\": [\n          {\n            \"input\": 6,\n            \"name\": \"$6\"\n          }\n        ]\n      },\n      \"rowCount\": 10.0\n    },\n    {\n      \"id\": \"8\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveProject\",\n      \"fields\": [\n        \"cstring1\"\n      ],\n      \"exprs\": [\n        {\n          \"input\": 6,\n          \"name\": \"$6\"\n        }\n      ],\n      \"rowCount\": 10.0\n    },\n    {\n      \"id\": \"9\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveJoin\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"=\",\n          \"kind\": \"EQUALS\",\n          \"syntax\": \"BINARY\"\n        },\n        \"operands\": [\n          {\n            \"input\": 3,\n            \"name\": \"$3\"\n          },\n          {\n            \"input\": 1,\n            \"name\": \"$1\"\n          }\n        ]\n      },\n      \"joinType\": \"left\",\n      \"algorithm\": \"none\",\n      \"cost\": \"not available\",\n      \"inputs\": [\n        \"5\",\n        \"8\"\n      ],\n      \"rowCount\": 31.25\n    },\n    {\n      \"id\": \"10\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveAggregate\",\n      \"group\": [],\n      \"aggs\": [\n        {\n          \"agg\": {\n            \"name\": \"count\",\n            \"kind\": \"COUNT\",\n            \"syntax\": \"FUNCTION_STAR\"\n          },\n          \"type\": {\n            \"type\": \"BIGINT\",\n            \"nullable\": true\n          },\n          \"distinct\": false,\n          \"operands\": [],\n          \"name\": null\n        }\n      ],\n      \"rowCount\": 1.0\n    }\n  ]\n}","optimizedSQL":"SELECT COUNT(*) AS `$f0`\nFROM (SELECT `cint`, `cstring1`\nFROM `default`.`small_alltypesorc_a_n1`) AS `t`\nLEFT JOIN (SELECT `cint`\nFROM `default`.`small_alltypesorc_a_n1`\nWHERE `cint` IS NOT NULL) AS `t1` ON `t`.`cint` = `t1`.`cint`\nLEFT JOIN (SELECT `cstring1`\nFROM `default`.`small_alltypesorc_a_n1`\nWHERE `cstring1` IS NOT NULL) AS `t3` ON `t`.`cstring1` = `t3`.`cstring1`","PLAN VECTORIZATION":{"enabled":true,"enabledConditionsMet":["hive.vectorized.execution.enabled IS true"]},"cboInfo":"Plan optimized by CBO.","STAGE DEPENDENCIES":{"Stage-8":{"ROOT STAGE":"TRUE"},"Stage-3":{"DEPENDENT STAGES":"Stage-8"},"Stage-0":{"DEPENDENT STAGES":"Stage-3"}},"STAGE PLANS":{"Stage-8":{"Map Reduce Local Work":{"Alias -> Map Local Tables:":{"$hdt$_1:cd":{"Fetch Operator":{"limit:":"-1"}},"$hdt$_2:hd":{"Fetch Operator":{"limit:":"-1"}}},"Alias -> Map Local Operator Tree:":{"$hdt$_1:cd":{"TableScan":{"alias:":"cd","columns:":["cint"],"database:":"default","filterExpr:":"cint is not null (type: boolean)","Statistics:":"Num rows: 20 Data size: 44 Basic stats: COMPLETE Column stats: COMPLETE","table:":"small_alltypesorc_a_n1","isTempTable:":"false","OperatorId:":"TS_2","children":{"Filter Operator":{"predicate:":"cint is not null (type: boolean)","Statistics:":"Num rows: 10 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_20","children":{"Select Operator":{"expressions:":"cint (type: int)","columnExprMap:":{"_col0":"cint"},"outputColumnNames:":["_col0"],"Statistics:":"Num rows: 10 Data size: 24 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_4","children":{"HashTable Sink Operator":{"keys:":{"0":"_col0 (type: int)","1":"_col0 (type: int)"},"OperatorId:":"HASHTABLESINK_30"}}}}}}}},"$hdt$_2:hd":{"TableScan":{"alias:":"hd","columns:":["cstring1"],"database:":"default","filterExpr:":"cstring1 is not null (type: boolean)","Statistics:":"Num rows: 20 Data size: 990 Basic stats: COMPLETE Column stats: COMPLETE","table:":"small_alltypesorc_a_n1","isTempTable:":"false","OperatorId:":"TS_5","children":{"Filter Operator":{"predicate:":"cstring1 is not null (type: boolean)","Statistics:":"Num rows: 10 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_21","children":{"Select Operator":{"expressions:":"cstring1 (type: string)","columnExprMap:":{"_col0":"cstring1"},"outputColumnNames:":["_col0"],"Statistics:":"Num rows: 10 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_7","children":{"HashTable Sink Operator":{"keys:":{"0":"_col1 (type: string)","1":"_col0 (type: string)"},"OperatorId:":"HASHTABLESINK_28"}}}}}}}}}}},"Stage-3":{"Map Reduce":{"Map Operator Tree:":[{"TableScan":{"alias:":"c","columns:":["cint","cstring1"],"database:":"default","Statistics:":"Num rows: 20 Data size: 1034 Basic stats: COMPLETE Column stats: COMPLETE","table:":"small_alltypesorc_a_n1","TableScan Vectorization:":{"native:":"true","vectorizationSchemaColumns:":"[0:ctinyint:tinyint, 1:csmallint:smallint, 2:cint:int, 3:cbigint:bigint, 4:cfloat:float, 5:cdouble:double, 6:cstring1:string, 7:cstring2:string, 8:ctimestamp1:timestamp, 9:ctimestamp2:timestamp, 10:cboolean1:boolean, 11:cboolean2:boolean, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]"},"isTempTable:":"false","OperatorId:":"TS_0","children":{"Select Operator":{"expressions:":"cint (type: int), cstring1 (type: string)","columnExprMap:":{"_col0":"cint","_col1":"cstring1"},"outputColumnNames:":["_col0","_col1"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[2, 6]"},"Statistics:":"Num rows: 20 Data size: 1034 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_32","children":{"Map Join Operator":{"columnExprMap:":{"_col1":"0:_col1"},"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col0 (type: int)","1":"_col0 (type: int)"},"Map Join Vectorization:":{"bigTableKeyExpressions:":["col 2:int"],"bigTableValueExpressions:":["col 6:string"],"className:":"VectorMapJoinOperator","native:":"false","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"nativeConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"outputColumnNames:":["_col1"],"Statistics:":"Num rows: 45 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_33","children":{"Map Join Operator":{"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col1 (type: string)","1":"_col0 (type: string)"},"Map Join Vectorization:":{"bigTableKeyExpressions:":["col 0:string"],"className:":"VectorMapJoinOperator","native:":"false","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"nativeConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"Statistics:":"Num rows: 101 Data size: 808 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_34","children":{"Group By Operator":{"aggregations:":["count()"],"Group By Vectorization:":{"aggregators:":["VectorUDAFCountStar(*) -> bigint"],"className:":"VectorGroupByOperator","groupByMode:":"HASH","native:":"false","vectorProcessingMode:":"HASH","projectedOutputColumnNums:":"[0]"},"minReductionHashAggr:":"0.99","mode:":"hash","outputColumnNames:":["_col0"],"Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"GBY_35","children":{"Reduce Output Operator":{"columnExprMap:":{"VALUE._col0":"_col0"},"null sort order:":"","sort order:":"","Reduce Sink Vectorization:":{"className:":"VectorReduceSinkOperator","native:":"false","nativeConditionsMet:":["hive.vectorized.execution.reducesink.new.enabled IS true","No PTF TopN IS true","No DISTINCT columns IS true","BinarySortableSerDe for keys IS true","LazyBinarySerDe for values IS true"],"nativeConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","value expressions:":"_col0 (type: bigint)","OperatorId:":"RS_36"}}}}}}}}}}}}],"Execution mode:":"vectorized","Map Vectorization:":{"enabled:":"true","enabledConditionsMet:":["hive.vectorized.use.vectorized.input.format IS true"],"inputFormatFeatureSupport:":"[DECIMAL_64]","featureSupportInUse:":"[DECIMAL_64]","inputFileFormats:":["org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"],"allNative:":"false","usesVectorUDFAdaptor:":"false","vectorized:":"true","rowBatchContext:":{"dataColumnCount:":"12","includeColumns:":"[2, 6]","dataColumns:":["ctinyint:tinyint","csmallint:smallint","cint:int","cbigint:bigint","cfloat:float","cdouble:double","cstring1:string","cstring2:string","ctimestamp1:timestamp","ctimestamp2:timestamp","cboolean1:boolean","cboolean2:boolean"],"partitionColumnCount:":"0","scratchColumnTypeNames:":"[]"}},"Local Work:":{"Map Reduce Local Work":{}},"Reduce Vectorization:":{"enabled:":"false","enableConditionsMet:":["hive.vectorized.execution.reduce.enabled IS true"],"enableConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"Reduce Operator Tree:":{"Group By Operator":{"aggregations:":["count(VALUE._col0)"],"mode:":"mergepartial","outputColumnNames:":["_col0"],"Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"GBY_17","children":{"File Output Operator":{"compressed:":"false","Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","table:":{"input format:":"org.apache.hadoop.mapred.SequenceFileInputFormat","output format:":"org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat","serde:":"org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"},"OperatorId:":"FS_19"}}}}}},"Stage-0":{"Fetch Operator":{"limit:":"-1","Processor Tree:":{"ListSink":{"OperatorId:":"LIST_SINK_37"}}}}}}
PREHOOK: query: select count(*) from (select c.cstring1
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cint = c.cint 
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1
) t1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from (select c.cstring1
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cint = c.cint 
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1
) t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
32
PREHOOK: query: explain vectorization detail formatted
select count(*) from (select c.cstring1 
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cstring2 = c.cstring2 
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1
) t1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail formatted
select count(*) from (select c.cstring1 
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cstring2 = c.cstring2 
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1
) t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
{"CBOPlan":"{\n  \"rels\": [\n    {\n      \"id\": \"0\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveTableScan\",\n      \"table\": [\n        \"default\",\n        \"small_alltypesorc_a_n1\"\n      ],\n      \"table:alias\": \"c\",\n      \"inputs\": [],\n      \"rowCount\": 20.0,\n      \"avgRowSize\": 14.75,\n      \"rowType\": [\n        {\n          \"type\": \"TINYINT\",\n          \"nullable\": true,\n          \"name\": \"ctinyint\"\n        },\n        {\n          \"type\": \"SMALLINT\",\n          \"nullable\": true,\n          \"name\": \"csmallint\"\n        },\n        {\n          \"type\": \"INTEGER\",\n          \"nullable\": true,\n          \"name\": \"cint\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"cbigint\"\n        },\n        {\n          \"type\": \"FLOAT\",\n          \"nullable\": true,\n          \"name\": \"cfloat\"\n        },\n        {\n          \"type\": \"DOUBLE\",\n          \"nullable\": true,\n          \"name\": \"cdouble\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring1\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring2\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp1\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp2\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean1\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean2\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"BLOCK__OFFSET__INSIDE__FILE\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"INPUT__FILE__NAME\"\n        },\n        {\n          \"fields\": [\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"writeid\"\n            },\n            {\n              \"type\": \"INTEGER\",\n              \"nullable\": true,\n              \"name\": \"bucketid\"\n            },\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"rowid\"\n            }\n          ],\n          \"name\": \"ROW__ID\"\n        }\n      ],\n      \"colStats\": [\n        {\n          \"name\": \"cstring1\",\n          \"ndv\": 8\n        },\n        {\n          \"name\": \"cstring2\",\n          \"ndv\": 15\n        },\n        {\n          \"name\": \"ctinyint\",\n          \"ndv\": 2,\n          \"minValue\": -64,\n          \"maxValue\": -51\n        },\n        {\n          \"name\": \"csmallint\",\n          \"ndv\": 6,\n          \"minValue\": -15920,\n          \"maxValue\": -6907\n        },\n        {\n          \"name\": \"cint\",\n          \"ndv\": 8,\n          \"minValue\": -738306196,\n          \"maxValue\": 626923679\n        },\n        {\n          \"name\": \"cbigint\",\n          \"ndv\": 15,\n          \"minValue\": -1970551565,\n          \"maxValue\": 1086455747\n        },\n        {\n          \"name\": \"cfloat\",\n          \"ndv\": 2,\n          \"minValue\": -64.0,\n          \"maxValue\": -51.0\n        },\n        {\n          \"name\": \"cdouble\",\n          \"ndv\": 6,\n          \"minValue\": -15920.0,\n          \"maxValue\": -6907.0\n        },\n        {\n          \"name\": \"ctimestamp1\",\n          \"ndv\": 0,\n          \"minValue\": -28810,\n          \"maxValue\": -28789\n        },\n        {\n          \"name\": \"ctimestamp2\",\n          \"ndv\": 0,\n          \"minValue\": -28812,\n          \"maxValue\": -28786\n        },\n        {\n          \"name\": \"cboolean1\",\n          \"ndv\": 2\n        },\n        {\n          \"name\": \"cboolean2\",\n          \"ndv\": 2\n        }\n      ]\n    },\n    {\n      \"id\": \"1\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveProject\",\n      \"fields\": [\n        \"cstring1\",\n        \"cstring2\"\n      ],\n      \"exprs\": [\n        {\n          \"input\": 6,\n          \"name\": \"$6\"\n        },\n        {\n          \"input\": 7,\n          \"name\": \"$7\"\n        }\n      ],\n      \"rowCount\": 20.0\n    },\n    {\n      \"id\": \"2\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveTableScan\",\n      \"table\": [\n        \"default\",\n        \"small_alltypesorc_a_n1\"\n      ],\n      \"table:alias\": \"cd\",\n      \"inputs\": [],\n      \"rowCount\": 20.0,\n      \"avgRowSize\": 8.75,\n      \"rowType\": [\n        {\n          \"type\": \"TINYINT\",\n          \"nullable\": true,\n          \"name\": \"ctinyint\"\n        },\n        {\n          \"type\": \"SMALLINT\",\n          \"nullable\": true,\n          \"name\": \"csmallint\"\n        },\n        {\n          \"type\": \"INTEGER\",\n          \"nullable\": true,\n          \"name\": \"cint\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"cbigint\"\n        },\n        {\n          \"type\": \"FLOAT\",\n          \"nullable\": true,\n          \"name\": \"cfloat\"\n        },\n        {\n          \"type\": \"DOUBLE\",\n          \"nullable\": true,\n          \"name\": \"cdouble\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring1\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring2\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp1\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp2\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean1\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean2\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"BLOCK__OFFSET__INSIDE__FILE\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"INPUT__FILE__NAME\"\n        },\n        {\n          \"fields\": [\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"writeid\"\n            },\n            {\n              \"type\": \"INTEGER\",\n              \"nullable\": true,\n              \"name\": \"bucketid\"\n            },\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"rowid\"\n            }\n          ],\n          \"name\": \"ROW__ID\"\n        }\n      ],\n      \"colStats\": [\n        {\n          \"name\": \"cstring2\",\n          \"ndv\": 15\n        },\n        {\n          \"name\": \"ctinyint\",\n          \"ndv\": 2,\n          \"minValue\": -64,\n          \"maxValue\": -51\n        },\n        {\n          \"name\": \"csmallint\",\n          \"ndv\": 6,\n          \"minValue\": -15920,\n          \"maxValue\": -6907\n        },\n        {\n          \"name\": \"cint\",\n          \"ndv\": 8,\n          \"minValue\": -738306196,\n          \"maxValue\": 626923679\n        },\n        {\n          \"name\": \"cbigint\",\n          \"ndv\": 15,\n          \"minValue\": -1970551565,\n          \"maxValue\": 1086455747\n        },\n        {\n          \"name\": \"cfloat\",\n          \"ndv\": 2,\n          \"minValue\": -64.0,\n          \"maxValue\": -51.0\n        },\n        {\n          \"name\": \"cdouble\",\n          \"ndv\": 6,\n          \"minValue\": -15920.0,\n          \"maxValue\": -6907.0\n        },\n        {\n          \"name\": \"cstring1\",\n          \"ndv\": 8\n        },\n        {\n          \"name\": \"ctimestamp1\",\n          \"ndv\": 0,\n          \"minValue\": -28810,\n          \"maxValue\": -28789\n        },\n        {\n          \"name\": \"ctimestamp2\",\n          \"ndv\": 0,\n          \"minValue\": -28812,\n          \"maxValue\": -28786\n        },\n        {\n          \"name\": \"cboolean1\",\n          \"ndv\": 2\n        },\n        {\n          \"name\": \"cboolean2\",\n          \"ndv\": 2\n        }\n      ]\n    },\n    {\n      \"id\": \"3\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveFilter\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"IS NOT NULL\",\n          \"kind\": \"IS_NOT_NULL\",\n          \"syntax\": \"POSTFIX\"\n        },\n        \"operands\": [\n          {\n            \"input\": 7,\n            \"name\": \"$7\"\n          }\n        ]\n      },\n      \"rowCount\": 15.0\n    },\n    {\n      \"id\": \"4\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveProject\",\n      \"fields\": [\n        \"cstring2\"\n      ],\n      \"exprs\": [\n        {\n          \"input\": 7,\n          \"name\": \"$7\"\n        }\n      ],\n      \"rowCount\": 15.0\n    },\n    {\n      \"id\": \"5\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveJoin\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"=\",\n          \"kind\": \"EQUALS\",\n          \"syntax\": \"BINARY\"\n        },\n        \"operands\": [\n          {\n            \"input\": 2,\n            \"name\": \"$2\"\n          },\n          {\n            \"input\": 1,\n            \"name\": \"$1\"\n          }\n        ]\n      },\n      \"joinType\": \"left\",\n      \"algorithm\": \"none\",\n      \"cost\": \"not available\",\n      \"inputs\": [\n        \"1\",\n        \"4\"\n      ],\n      \"rowCount\": 20.0\n    },\n    {\n      \"id\": \"6\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveTableScan\",\n      \"table\": [\n        \"default\",\n        \"small_alltypesorc_a_n1\"\n      ],\n      \"table:alias\": \"hd\",\n      \"inputs\": [],\n      \"rowCount\": 20.0,\n      \"avgRowSize\": 6.0,\n      \"rowType\": [\n        {\n          \"type\": \"TINYINT\",\n          \"nullable\": true,\n          \"name\": \"ctinyint\"\n        },\n        {\n          \"type\": \"SMALLINT\",\n          \"nullable\": true,\n          \"name\": \"csmallint\"\n        },\n        {\n          \"type\": \"INTEGER\",\n          \"nullable\": true,\n          \"name\": \"cint\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"cbigint\"\n        },\n        {\n          \"type\": \"FLOAT\",\n          \"nullable\": true,\n          \"name\": \"cfloat\"\n        },\n        {\n          \"type\": \"DOUBLE\",\n          \"nullable\": true,\n          \"name\": \"cdouble\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring1\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring2\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp1\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp2\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean1\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean2\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"BLOCK__OFFSET__INSIDE__FILE\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"INPUT__FILE__NAME\"\n        },\n        {\n          \"fields\": [\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"writeid\"\n            },\n            {\n              \"type\": \"INTEGER\",\n              \"nullable\": true,\n              \"name\": \"bucketid\"\n            },\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"rowid\"\n            }\n          ],\n          \"name\": \"ROW__ID\"\n        }\n      ],\n      \"colStats\": [\n        {\n          \"name\": \"cstring1\",\n          \"ndv\": 8\n        },\n        {\n          \"name\": \"ctinyint\",\n          \"ndv\": 2,\n          \"minValue\": -64,\n          \"maxValue\": -51\n        },\n        {\n          \"name\": \"csmallint\",\n          \"ndv\": 6,\n          \"minValue\": -15920,\n          \"maxValue\": -6907\n        },\n        {\n          \"name\": \"cint\",\n          \"ndv\": 8,\n          \"minValue\": -738306196,\n          \"maxValue\": 626923679\n        },\n        {\n          \"name\": \"cbigint\",\n          \"ndv\": 15,\n          \"minValue\": -1970551565,\n          \"maxValue\": 1086455747\n        },\n        {\n          \"name\": \"cfloat\",\n          \"ndv\": 2,\n          \"minValue\": -64.0,\n          \"maxValue\": -51.0\n        },\n        {\n          \"name\": \"cdouble\",\n          \"ndv\": 6,\n          \"minValue\": -15920.0,\n          \"maxValue\": -6907.0\n        },\n        {\n          \"name\": \"cstring2\",\n          \"ndv\": 15\n        },\n        {\n          \"name\": \"ctimestamp1\",\n          \"ndv\": 0,\n          \"minValue\": -28810,\n          \"maxValue\": -28789\n        },\n        {\n          \"name\": \"ctimestamp2\",\n          \"ndv\": 0,\n          \"minValue\": -28812,\n          \"maxValue\": -28786\n        },\n        {\n          \"name\": \"cboolean1\",\n          \"ndv\": 2\n        },\n        {\n          \"name\": \"cboolean2\",\n          \"ndv\": 2\n        }\n      ]\n    },\n    {\n      \"id\": \"7\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveFilter\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"IS NOT NULL\",\n          \"kind\": \"IS_NOT_NULL\",\n          \"syntax\": \"POSTFIX\"\n        },\n        \"operands\": [\n          {\n            \"input\": 6,\n            \"name\": \"$6\"\n          }\n        ]\n      },\n      \"rowCount\": 10.0\n    },\n    {\n      \"id\": \"8\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveProject\",\n      \"fields\": [\n        \"cstring1\"\n      ],\n      \"exprs\": [\n        {\n          \"input\": 6,\n          \"name\": \"$6\"\n        }\n      ],\n      \"rowCount\": 10.0\n    },\n    {\n      \"id\": \"9\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveJoin\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"=\",\n          \"kind\": \"EQUALS\",\n          \"syntax\": \"BINARY\"\n        },\n        \"operands\": [\n          {\n            \"input\": 3,\n            \"name\": \"$3\"\n          },\n          {\n            \"input\": 0,\n            \"name\": \"$0\"\n          }\n        ]\n      },\n      \"joinType\": \"left\",\n      \"algorithm\": \"none\",\n      \"cost\": \"not available\",\n      \"inputs\": [\n        \"5\",\n        \"8\"\n      ],\n      \"rowCount\": 25.0\n    },\n    {\n      \"id\": \"10\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveAggregate\",\n      \"group\": [],\n      \"aggs\": [\n        {\n          \"agg\": {\n            \"name\": \"count\",\n            \"kind\": \"COUNT\",\n            \"syntax\": \"FUNCTION_STAR\"\n          },\n          \"type\": {\n            \"type\": \"BIGINT\",\n            \"nullable\": true\n          },\n          \"distinct\": false,\n          \"operands\": [],\n          \"name\": null\n        }\n      ],\n      \"rowCount\": 1.0\n    }\n  ]\n}","optimizedSQL":"SELECT COUNT(*) AS `$f0`\nFROM (SELECT `cstring1`, `cstring2`\nFROM `default`.`small_alltypesorc_a_n1`) AS `t`\nLEFT JOIN (SELECT `cstring2`\nFROM `default`.`small_alltypesorc_a_n1`\nWHERE `cstring2` IS NOT NULL) AS `t1` ON `t`.`cstring2` = `t1`.`cstring2`\nLEFT JOIN (SELECT `cstring1`\nFROM `default`.`small_alltypesorc_a_n1`\nWHERE `cstring1` IS NOT NULL) AS `t3` ON `t`.`cstring1` = `t3`.`cstring1`","PLAN VECTORIZATION":{"enabled":true,"enabledConditionsMet":["hive.vectorized.execution.enabled IS true"]},"cboInfo":"Plan optimized by CBO.","STAGE DEPENDENCIES":{"Stage-8":{"ROOT STAGE":"TRUE"},"Stage-3":{"DEPENDENT STAGES":"Stage-8"},"Stage-0":{"DEPENDENT STAGES":"Stage-3"}},"STAGE PLANS":{"Stage-8":{"Map Reduce Local Work":{"Alias -> Map Local Tables:":{"$hdt$_1:cd":{"Fetch Operator":{"limit:":"-1"}},"$hdt$_2:hd":{"Fetch Operator":{"limit:":"-1"}}},"Alias -> Map Local Operator Tree:":{"$hdt$_1:cd":{"TableScan":{"alias:":"cd","columns:":["cstring2"],"database:":"default","filterExpr:":"cstring2 is not null (type: boolean)","Statistics:":"Num rows: 20 Data size: 1488 Basic stats: COMPLETE Column stats: COMPLETE","table:":"small_alltypesorc_a_n1","isTempTable:":"false","OperatorId:":"TS_2","children":{"Filter Operator":{"predicate:":"cstring2 is not null (type: boolean)","Statistics:":"Num rows: 15 Data size: 1116 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_20","children":{"Select Operator":{"expressions:":"cstring2 (type: string)","columnExprMap:":{"_col0":"cstring2"},"outputColumnNames:":["_col0"],"Statistics:":"Num rows: 15 Data size: 1116 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_4","children":{"HashTable Sink Operator":{"keys:":{"0":"_col1 (type: string)","1":"_col0 (type: string)"},"OperatorId:":"HASHTABLESINK_30"}}}}}}}},"$hdt$_2:hd":{"TableScan":{"alias:":"hd","columns:":["cstring1"],"database:":"default","filterExpr:":"cstring1 is not null (type: boolean)","Statistics:":"Num rows: 20 Data size: 990 Basic stats: COMPLETE Column stats: COMPLETE","table:":"small_alltypesorc_a_n1","isTempTable:":"false","OperatorId:":"TS_5","children":{"Filter Operator":{"predicate:":"cstring1 is not null (type: boolean)","Statistics:":"Num rows: 10 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_21","children":{"Select Operator":{"expressions:":"cstring1 (type: string)","columnExprMap:":{"_col0":"cstring1"},"outputColumnNames:":["_col0"],"Statistics:":"Num rows: 10 Data size: 540 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_7","children":{"HashTable Sink Operator":{"keys:":{"0":"_col0 (type: string)","1":"_col0 (type: string)"},"OperatorId:":"HASHTABLESINK_28"}}}}}}}}}}},"Stage-3":{"Map Reduce":{"Map Operator Tree:":[{"TableScan":{"alias:":"c","columns:":["cstring1","cstring2"],"database:":"default","Statistics:":"Num rows: 20 Data size: 2478 Basic stats: COMPLETE Column stats: COMPLETE","table:":"small_alltypesorc_a_n1","TableScan Vectorization:":{"native:":"true","vectorizationSchemaColumns:":"[0:ctinyint:tinyint, 1:csmallint:smallint, 2:cint:int, 3:cbigint:bigint, 4:cfloat:float, 5:cdouble:double, 6:cstring1:string, 7:cstring2:string, 8:ctimestamp1:timestamp, 9:ctimestamp2:timestamp, 10:cboolean1:boolean, 11:cboolean2:boolean, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]"},"isTempTable:":"false","OperatorId:":"TS_0","children":{"Select Operator":{"expressions:":"cstring1 (type: string), cstring2 (type: string)","columnExprMap:":{"_col0":"cstring1","_col1":"cstring2"},"outputColumnNames:":["_col0","_col1"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[6, 7]"},"Statistics:":"Num rows: 20 Data size: 2478 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_32","children":{"Map Join Operator":{"columnExprMap:":{"_col0":"0:_col0"},"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col1 (type: string)","1":"_col0 (type: string)"},"Map Join Vectorization:":{"bigTableKeyExpressions:":["col 7:string"],"bigTableValueExpressions:":["col 6:string"],"className:":"VectorMapJoinOperator","native:":"false","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"nativeConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"outputColumnNames:":["_col0"],"Statistics:":"Num rows: 23 Data size: 1260 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_33","children":{"Map Join Operator":{"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col0 (type: string)","1":"_col0 (type: string)"},"Map Join Vectorization:":{"bigTableKeyExpressions:":["col 0:string"],"className:":"VectorMapJoinOperator","native:":"false","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"nativeConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"Statistics:":"Num rows: 51 Data size: 408 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_34","children":{"Group By Operator":{"aggregations:":["count()"],"Group By Vectorization:":{"aggregators:":["VectorUDAFCountStar(*) -> bigint"],"className:":"VectorGroupByOperator","groupByMode:":"HASH","native:":"false","vectorProcessingMode:":"HASH","projectedOutputColumnNums:":"[0]"},"minReductionHashAggr:":"0.99","mode:":"hash","outputColumnNames:":["_col0"],"Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"GBY_35","children":{"Reduce Output Operator":{"columnExprMap:":{"VALUE._col0":"_col0"},"null sort order:":"","sort order:":"","Reduce Sink Vectorization:":{"className:":"VectorReduceSinkOperator","native:":"false","nativeConditionsMet:":["hive.vectorized.execution.reducesink.new.enabled IS true","No PTF TopN IS true","No DISTINCT columns IS true","BinarySortableSerDe for keys IS true","LazyBinarySerDe for values IS true"],"nativeConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","value expressions:":"_col0 (type: bigint)","OperatorId:":"RS_36"}}}}}}}}}}}}],"Execution mode:":"vectorized","Map Vectorization:":{"enabled:":"true","enabledConditionsMet:":["hive.vectorized.use.vectorized.input.format IS true"],"inputFormatFeatureSupport:":"[DECIMAL_64]","featureSupportInUse:":"[DECIMAL_64]","inputFileFormats:":["org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"],"allNative:":"false","usesVectorUDFAdaptor:":"false","vectorized:":"true","rowBatchContext:":{"dataColumnCount:":"12","includeColumns:":"[6, 7]","dataColumns:":["ctinyint:tinyint","csmallint:smallint","cint:int","cbigint:bigint","cfloat:float","cdouble:double","cstring1:string","cstring2:string","ctimestamp1:timestamp","ctimestamp2:timestamp","cboolean1:boolean","cboolean2:boolean"],"partitionColumnCount:":"0","scratchColumnTypeNames:":"[]"}},"Local Work:":{"Map Reduce Local Work":{}},"Reduce Vectorization:":{"enabled:":"false","enableConditionsMet:":["hive.vectorized.execution.reduce.enabled IS true"],"enableConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"Reduce Operator Tree:":{"Group By Operator":{"aggregations:":["count(VALUE._col0)"],"mode:":"mergepartial","outputColumnNames:":["_col0"],"Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"GBY_17","children":{"File Output Operator":{"compressed:":"false","Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","table:":{"input format:":"org.apache.hadoop.mapred.SequenceFileInputFormat","output format:":"org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat","serde:":"org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"},"OperatorId:":"FS_19"}}}}}},"Stage-0":{"Fetch Operator":{"limit:":"-1","Processor Tree:":{"ListSink":{"OperatorId:":"LIST_SINK_37"}}}}}}
PREHOOK: query: select count(*) from (select c.cstring1
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cstring2 = c.cstring2 
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1
) t1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from (select c.cstring1
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cstring2 = c.cstring2 
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1
) t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
24
PREHOOK: query: explain vectorization detail formatted
select count(*) from (select c.cstring1 
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cstring2 = c.cstring2 and cd.cbigint = c.cbigint
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1 and hd.cint = c.cint
) t1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
POSTHOOK: query: explain vectorization detail formatted
select count(*) from (select c.cstring1 
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cstring2 = c.cstring2 and cd.cbigint = c.cbigint
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1 and hd.cint = c.cint
) t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
{"CBOPlan":"{\n  \"rels\": [\n    {\n      \"id\": \"0\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveTableScan\",\n      \"table\": [\n        \"default\",\n        \"small_alltypesorc_a_n1\"\n      ],\n      \"table:alias\": \"c\",\n      \"inputs\": [],\n      \"rowCount\": 20.0,\n      \"avgRowSize\": 26.75,\n      \"rowType\": [\n        {\n          \"type\": \"TINYINT\",\n          \"nullable\": true,\n          \"name\": \"ctinyint\"\n        },\n        {\n          \"type\": \"SMALLINT\",\n          \"nullable\": true,\n          \"name\": \"csmallint\"\n        },\n        {\n          \"type\": \"INTEGER\",\n          \"nullable\": true,\n          \"name\": \"cint\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"cbigint\"\n        },\n        {\n          \"type\": \"FLOAT\",\n          \"nullable\": true,\n          \"name\": \"cfloat\"\n        },\n        {\n          \"type\": \"DOUBLE\",\n          \"nullable\": true,\n          \"name\": \"cdouble\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring1\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring2\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp1\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp2\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean1\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean2\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"BLOCK__OFFSET__INSIDE__FILE\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"INPUT__FILE__NAME\"\n        },\n        {\n          \"fields\": [\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"writeid\"\n            },\n            {\n              \"type\": \"INTEGER\",\n              \"nullable\": true,\n              \"name\": \"bucketid\"\n            },\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"rowid\"\n            }\n          ],\n          \"name\": \"ROW__ID\"\n        }\n      ],\n      \"colStats\": [\n        {\n          \"name\": \"cint\",\n          \"ndv\": 8,\n          \"minValue\": -738306196,\n          \"maxValue\": 626923679\n        },\n        {\n          \"name\": \"cbigint\",\n          \"ndv\": 15,\n          \"minValue\": -1970551565,\n          \"maxValue\": 1086455747\n        },\n        {\n          \"name\": \"cstring1\",\n          \"ndv\": 8\n        },\n        {\n          \"name\": \"cstring2\",\n          \"ndv\": 15\n        },\n        {\n          \"name\": \"ctinyint\",\n          \"ndv\": 2,\n          \"minValue\": -64,\n          \"maxValue\": -51\n        },\n        {\n          \"name\": \"csmallint\",\n          \"ndv\": 6,\n          \"minValue\": -15920,\n          \"maxValue\": -6907\n        },\n        {\n          \"name\": \"cfloat\",\n          \"ndv\": 2,\n          \"minValue\": -64.0,\n          \"maxValue\": -51.0\n        },\n        {\n          \"name\": \"cdouble\",\n          \"ndv\": 6,\n          \"minValue\": -15920.0,\n          \"maxValue\": -6907.0\n        },\n        {\n          \"name\": \"ctimestamp1\",\n          \"ndv\": 0,\n          \"minValue\": -28810,\n          \"maxValue\": -28789\n        },\n        {\n          \"name\": \"ctimestamp2\",\n          \"ndv\": 0,\n          \"minValue\": -28812,\n          \"maxValue\": -28786\n        },\n        {\n          \"name\": \"cboolean1\",\n          \"ndv\": 2\n        },\n        {\n          \"name\": \"cboolean2\",\n          \"ndv\": 2\n        }\n      ]\n    },\n    {\n      \"id\": \"1\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveProject\",\n      \"fields\": [\n        \"cint\",\n        \"cbigint\",\n        \"cstring1\",\n        \"cstring2\"\n      ],\n      \"exprs\": [\n        {\n          \"input\": 2,\n          \"name\": \"$2\"\n        },\n        {\n          \"input\": 3,\n          \"name\": \"$3\"\n        },\n        {\n          \"input\": 6,\n          \"name\": \"$6\"\n        },\n        {\n          \"input\": 7,\n          \"name\": \"$7\"\n        }\n      ],\n      \"rowCount\": 20.0\n    },\n    {\n      \"id\": \"2\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveTableScan\",\n      \"table\": [\n        \"default\",\n        \"small_alltypesorc_a_n1\"\n      ],\n      \"table:alias\": \"cd\",\n      \"inputs\": [],\n      \"rowCount\": 20.0,\n      \"avgRowSize\": 16.75,\n      \"rowType\": [\n        {\n          \"type\": \"TINYINT\",\n          \"nullable\": true,\n          \"name\": \"ctinyint\"\n        },\n        {\n          \"type\": \"SMALLINT\",\n          \"nullable\": true,\n          \"name\": \"csmallint\"\n        },\n        {\n          \"type\": \"INTEGER\",\n          \"nullable\": true,\n          \"name\": \"cint\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"cbigint\"\n        },\n        {\n          \"type\": \"FLOAT\",\n          \"nullable\": true,\n          \"name\": \"cfloat\"\n        },\n        {\n          \"type\": \"DOUBLE\",\n          \"nullable\": true,\n          \"name\": \"cdouble\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring1\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring2\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp1\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp2\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean1\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean2\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"BLOCK__OFFSET__INSIDE__FILE\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"INPUT__FILE__NAME\"\n        },\n        {\n          \"fields\": [\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"writeid\"\n            },\n            {\n              \"type\": \"INTEGER\",\n              \"nullable\": true,\n              \"name\": \"bucketid\"\n            },\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"rowid\"\n            }\n          ],\n          \"name\": \"ROW__ID\"\n        }\n      ],\n      \"colStats\": [\n        {\n          \"name\": \"cbigint\",\n          \"ndv\": 15,\n          \"minValue\": -1970551565,\n          \"maxValue\": 1086455747\n        },\n        {\n          \"name\": \"cstring2\",\n          \"ndv\": 15\n        },\n        {\n          \"name\": \"ctinyint\",\n          \"ndv\": 2,\n          \"minValue\": -64,\n          \"maxValue\": -51\n        },\n        {\n          \"name\": \"csmallint\",\n          \"ndv\": 6,\n          \"minValue\": -15920,\n          \"maxValue\": -6907\n        },\n        {\n          \"name\": \"cint\",\n          \"ndv\": 8,\n          \"minValue\": -738306196,\n          \"maxValue\": 626923679\n        },\n        {\n          \"name\": \"cfloat\",\n          \"ndv\": 2,\n          \"minValue\": -64.0,\n          \"maxValue\": -51.0\n        },\n        {\n          \"name\": \"cdouble\",\n          \"ndv\": 6,\n          \"minValue\": -15920.0,\n          \"maxValue\": -6907.0\n        },\n        {\n          \"name\": \"cstring1\",\n          \"ndv\": 8\n        },\n        {\n          \"name\": \"ctimestamp1\",\n          \"ndv\": 0,\n          \"minValue\": -28810,\n          \"maxValue\": -28789\n        },\n        {\n          \"name\": \"ctimestamp2\",\n          \"ndv\": 0,\n          \"minValue\": -28812,\n          \"maxValue\": -28786\n        },\n        {\n          \"name\": \"cboolean1\",\n          \"ndv\": 2\n        },\n        {\n          \"name\": \"cboolean2\",\n          \"ndv\": 2\n        }\n      ]\n    },\n    {\n      \"id\": \"3\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveFilter\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"AND\",\n          \"kind\": \"AND\",\n          \"syntax\": \"BINARY\"\n        },\n        \"operands\": [\n          {\n            \"op\": {\n              \"name\": \"IS NOT NULL\",\n              \"kind\": \"IS_NOT_NULL\",\n              \"syntax\": \"POSTFIX\"\n            },\n            \"operands\": [\n              {\n                \"input\": 3,\n                \"name\": \"$3\"\n              }\n            ]\n          },\n          {\n            \"op\": {\n              \"name\": \"IS NOT NULL\",\n              \"kind\": \"IS_NOT_NULL\",\n              \"syntax\": \"POSTFIX\"\n            },\n            \"operands\": [\n              {\n                \"input\": 7,\n                \"name\": \"$7\"\n              }\n            ]\n          }\n        ]\n      },\n      \"rowCount\": 11.25\n    },\n    {\n      \"id\": \"4\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveProject\",\n      \"fields\": [\n        \"cbigint\",\n        \"cstring2\"\n      ],\n      \"exprs\": [\n        {\n          \"input\": 3,\n          \"name\": \"$3\"\n        },\n        {\n          \"input\": 7,\n          \"name\": \"$7\"\n        }\n      ],\n      \"rowCount\": 11.25\n    },\n    {\n      \"id\": \"5\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveJoin\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"AND\",\n          \"kind\": \"AND\",\n          \"syntax\": \"BINARY\"\n        },\n        \"operands\": [\n          {\n            \"op\": {\n              \"name\": \"=\",\n              \"kind\": \"EQUALS\",\n              \"syntax\": \"BINARY\"\n            },\n            \"operands\": [\n              {\n                \"input\": 5,\n                \"name\": \"$5\"\n              },\n              {\n                \"input\": 3,\n                \"name\": \"$3\"\n              }\n            ]\n          },\n          {\n            \"op\": {\n              \"name\": \"=\",\n              \"kind\": \"EQUALS\",\n              \"syntax\": \"BINARY\"\n            },\n            \"operands\": [\n              {\n                \"input\": 4,\n                \"name\": \"$4\"\n              },\n              {\n                \"input\": 1,\n                \"name\": \"$1\"\n              }\n            ]\n          }\n        ]\n      },\n      \"joinType\": \"left\",\n      \"algorithm\": \"none\",\n      \"cost\": \"not available\",\n      \"inputs\": [\n        \"1\",\n        \"4\"\n      ],\n      \"rowCount\": 20.0\n    },\n    {\n      \"id\": \"6\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveTableScan\",\n      \"table\": [\n        \"default\",\n        \"small_alltypesorc_a_n1\"\n      ],\n      \"table:alias\": \"hd\",\n      \"inputs\": [],\n      \"rowCount\": 20.0,\n      \"avgRowSize\": 10.0,\n      \"rowType\": [\n        {\n          \"type\": \"TINYINT\",\n          \"nullable\": true,\n          \"name\": \"ctinyint\"\n        },\n        {\n          \"type\": \"SMALLINT\",\n          \"nullable\": true,\n          \"name\": \"csmallint\"\n        },\n        {\n          \"type\": \"INTEGER\",\n          \"nullable\": true,\n          \"name\": \"cint\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"cbigint\"\n        },\n        {\n          \"type\": \"FLOAT\",\n          \"nullable\": true,\n          \"name\": \"cfloat\"\n        },\n        {\n          \"type\": \"DOUBLE\",\n          \"nullable\": true,\n          \"name\": \"cdouble\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring1\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"cstring2\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp1\"\n        },\n        {\n          \"type\": \"TIMESTAMP\",\n          \"nullable\": true,\n          \"precision\": 9,\n          \"name\": \"ctimestamp2\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean1\"\n        },\n        {\n          \"type\": \"BOOLEAN\",\n          \"nullable\": true,\n          \"name\": \"cboolean2\"\n        },\n        {\n          \"type\": \"BIGINT\",\n          \"nullable\": true,\n          \"name\": \"BLOCK__OFFSET__INSIDE__FILE\"\n        },\n        {\n          \"type\": \"VARCHAR\",\n          \"nullable\": true,\n          \"precision\": 2147483647,\n          \"name\": \"INPUT__FILE__NAME\"\n        },\n        {\n          \"fields\": [\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"writeid\"\n            },\n            {\n              \"type\": \"INTEGER\",\n              \"nullable\": true,\n              \"name\": \"bucketid\"\n            },\n            {\n              \"type\": \"BIGINT\",\n              \"nullable\": true,\n              \"name\": \"rowid\"\n            }\n          ],\n          \"name\": \"ROW__ID\"\n        }\n      ],\n      \"colStats\": [\n        {\n          \"name\": \"cint\",\n          \"ndv\": 8,\n          \"minValue\": -738306196,\n          \"maxValue\": 626923679\n        },\n        {\n          \"name\": \"cstring1\",\n          \"ndv\": 8\n        },\n        {\n          \"name\": \"ctinyint\",\n          \"ndv\": 2,\n          \"minValue\": -64,\n          \"maxValue\": -51\n        },\n        {\n          \"name\": \"csmallint\",\n          \"ndv\": 6,\n          \"minValue\": -15920,\n          \"maxValue\": -6907\n        },\n        {\n          \"name\": \"cbigint\",\n          \"ndv\": 15,\n          \"minValue\": -1970551565,\n          \"maxValue\": 1086455747\n        },\n        {\n          \"name\": \"cfloat\",\n          \"ndv\": 2,\n          \"minValue\": -64.0,\n          \"maxValue\": -51.0\n        },\n        {\n          \"name\": \"cdouble\",\n          \"ndv\": 6,\n          \"minValue\": -15920.0,\n          \"maxValue\": -6907.0\n        },\n        {\n          \"name\": \"cstring2\",\n          \"ndv\": 15\n        },\n        {\n          \"name\": \"ctimestamp1\",\n          \"ndv\": 0,\n          \"minValue\": -28810,\n          \"maxValue\": -28789\n        },\n        {\n          \"name\": \"ctimestamp2\",\n          \"ndv\": 0,\n          \"minValue\": -28812,\n          \"maxValue\": -28786\n        },\n        {\n          \"name\": \"cboolean1\",\n          \"ndv\": 2\n        },\n        {\n          \"name\": \"cboolean2\",\n          \"ndv\": 2\n        }\n      ]\n    },\n    {\n      \"id\": \"7\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveFilter\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"AND\",\n          \"kind\": \"AND\",\n          \"syntax\": \"BINARY\"\n        },\n        \"operands\": [\n          {\n            \"op\": {\n              \"name\": \"IS NOT NULL\",\n              \"kind\": \"IS_NOT_NULL\",\n              \"syntax\": \"POSTFIX\"\n            },\n            \"operands\": [\n              {\n                \"input\": 2,\n                \"name\": \"$2\"\n              }\n            ]\n          },\n          {\n            \"op\": {\n              \"name\": \"IS NOT NULL\",\n              \"kind\": \"IS_NOT_NULL\",\n              \"syntax\": \"POSTFIX\"\n            },\n            \"operands\": [\n              {\n                \"input\": 6,\n                \"name\": \"$6\"\n              }\n            ]\n          }\n        ]\n      },\n      \"rowCount\": 5.0\n    },\n    {\n      \"id\": \"8\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveProject\",\n      \"fields\": [\n        \"cint\",\n        \"cstring1\"\n      ],\n      \"exprs\": [\n        {\n          \"input\": 2,\n          \"name\": \"$2\"\n        },\n        {\n          \"input\": 6,\n          \"name\": \"$6\"\n        }\n      ],\n      \"rowCount\": 5.0\n    },\n    {\n      \"id\": \"9\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveJoin\",\n      \"condition\": {\n        \"op\": {\n          \"name\": \"AND\",\n          \"kind\": \"AND\",\n          \"syntax\": \"BINARY\"\n        },\n        \"operands\": [\n          {\n            \"op\": {\n              \"name\": \"=\",\n              \"kind\": \"EQUALS\",\n              \"syntax\": \"BINARY\"\n            },\n            \"operands\": [\n              {\n                \"input\": 7,\n                \"name\": \"$7\"\n              },\n              {\n                \"input\": 2,\n                \"name\": \"$2\"\n              }\n            ]\n          },\n          {\n            \"op\": {\n              \"name\": \"=\",\n              \"kind\": \"EQUALS\",\n              \"syntax\": \"BINARY\"\n            },\n            \"operands\": [\n              {\n                \"input\": 6,\n                \"name\": \"$6\"\n              },\n              {\n                \"input\": 0,\n                \"name\": \"$0\"\n              }\n            ]\n          }\n        ]\n      },\n      \"joinType\": \"left\",\n      \"algorithm\": \"none\",\n      \"cost\": \"not available\",\n      \"inputs\": [\n        \"5\",\n        \"8\"\n      ],\n      \"rowCount\": 20.0\n    },\n    {\n      \"id\": \"10\",\n      \"relOp\": \"org.apache.hadoop.hive.ql.optimizer.calcite.reloperators.HiveAggregate\",\n      \"group\": [],\n      \"aggs\": [\n        {\n          \"agg\": {\n            \"name\": \"count\",\n            \"kind\": \"COUNT\",\n            \"syntax\": \"FUNCTION_STAR\"\n          },\n          \"type\": {\n            \"type\": \"BIGINT\",\n            \"nullable\": true\n          },\n          \"distinct\": false,\n          \"operands\": [],\n          \"name\": null\n        }\n      ],\n      \"rowCount\": 1.0\n    }\n  ]\n}","optimizedSQL":"SELECT COUNT(*) AS `$f0`\nFROM (SELECT `cint`, `cbigint`, `cstring1`, `cstring2`\nFROM `default`.`small_alltypesorc_a_n1`) AS `t`\nLEFT JOIN (SELECT `cbigint`, `cstring2`\nFROM `default`.`small_alltypesorc_a_n1`\nWHERE `cbigint` IS NOT NULL AND `cstring2` IS NOT NULL) AS `t1` ON `t`.`cstring2` = `t1`.`cstring2` AND `t`.`cbigint` = `t1`.`cbigint`\nLEFT JOIN (SELECT `cint`, `cstring1`\nFROM `default`.`small_alltypesorc_a_n1`\nWHERE `cint` IS NOT NULL AND `cstring1` IS NOT NULL) AS `t3` ON `t`.`cstring1` = `t3`.`cstring1` AND `t`.`cint` = `t3`.`cint`","PLAN VECTORIZATION":{"enabled":true,"enabledConditionsMet":["hive.vectorized.execution.enabled IS true"]},"cboInfo":"Plan optimized by CBO.","STAGE DEPENDENCIES":{"Stage-8":{"ROOT STAGE":"TRUE"},"Stage-3":{"DEPENDENT STAGES":"Stage-8"},"Stage-0":{"DEPENDENT STAGES":"Stage-3"}},"STAGE PLANS":{"Stage-8":{"Map Reduce Local Work":{"Alias -> Map Local Tables:":{"$hdt$_1:cd":{"Fetch Operator":{"limit:":"-1"}},"$hdt$_2:hd":{"Fetch Operator":{"limit:":"-1"}}},"Alias -> Map Local Operator Tree:":{"$hdt$_1:cd":{"TableScan":{"alias:":"cd","columns:":["cbigint","cstring2"],"database:":"default","filterExpr:":"(cbigint is not null and cstring2 is not null) (type: boolean)","Statistics:":"Num rows: 20 Data size: 1616 Basic stats: COMPLETE Column stats: COMPLETE","table:":"small_alltypesorc_a_n1","isTempTable:":"false","OperatorId:":"TS_2","children":{"Filter Operator":{"predicate:":"(cbigint is not null and cstring2 is not null) (type: boolean)","Statistics:":"Num rows: 11 Data size: 909 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_20","children":{"Select Operator":{"expressions:":"cbigint (type: bigint), cstring2 (type: string)","columnExprMap:":{"_col0":"cbigint","_col1":"cstring2"},"outputColumnNames:":["_col0","_col1"],"Statistics:":"Num rows: 11 Data size: 909 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_4","children":{"HashTable Sink Operator":{"keys:":{"0":"_col1 (type: bigint), _col3 (type: string)","1":"_col0 (type: bigint), _col1 (type: string)"},"OperatorId:":"HASHTABLESINK_30"}}}}}}}},"$hdt$_2:hd":{"TableScan":{"alias:":"hd","columns:":["cint","cstring1"],"database:":"default","filterExpr:":"(cint is not null and cstring1 is not null) (type: boolean)","Statistics:":"Num rows: 20 Data size: 1034 Basic stats: COMPLETE Column stats: COMPLETE","table:":"small_alltypesorc_a_n1","isTempTable:":"false","OperatorId:":"TS_5","children":{"Filter Operator":{"predicate:":"(cint is not null and cstring1 is not null) (type: boolean)","Statistics:":"Num rows: 5 Data size: 282 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"FIL_21","children":{"Select Operator":{"expressions:":"cint (type: int), cstring1 (type: string)","columnExprMap:":{"_col0":"cint","_col1":"cstring1"},"outputColumnNames:":["_col0","_col1"],"Statistics:":"Num rows: 5 Data size: 282 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_7","children":{"HashTable Sink Operator":{"keys:":{"0":"_col0 (type: int), _col2 (type: string)","1":"_col0 (type: int), _col1 (type: string)"},"OperatorId:":"HASHTABLESINK_28"}}}}}}}}}}},"Stage-3":{"Map Reduce":{"Map Operator Tree:":[{"TableScan":{"alias:":"c","columns:":["cint","cbigint","cstring1","cstring2"],"database:":"default","Statistics:":"Num rows: 20 Data size: 2650 Basic stats: COMPLETE Column stats: COMPLETE","table:":"small_alltypesorc_a_n1","TableScan Vectorization:":{"native:":"true","vectorizationSchemaColumns:":"[0:ctinyint:tinyint, 1:csmallint:smallint, 2:cint:int, 3:cbigint:bigint, 4:cfloat:float, 5:cdouble:double, 6:cstring1:string, 7:cstring2:string, 8:ctimestamp1:timestamp, 9:ctimestamp2:timestamp, 10:cboolean1:boolean, 11:cboolean2:boolean, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]"},"isTempTable:":"false","OperatorId:":"TS_0","children":{"Select Operator":{"expressions:":"cint (type: int), cbigint (type: bigint), cstring1 (type: string), cstring2 (type: string)","columnExprMap:":{"_col0":"cint","_col1":"cbigint","_col2":"cstring1","_col3":"cstring2"},"outputColumnNames:":["_col0","_col1","_col2","_col3"],"Select Vectorization:":{"className:":"VectorSelectOperator","native:":"true","projectedOutputColumnNums:":"[2, 3, 6, 7]"},"Statistics:":"Num rows: 20 Data size: 2650 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"SEL_32","children":{"Map Join Operator":{"columnExprMap:":{"_col0":"0:_col0","_col2":"0:_col2"},"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col1 (type: bigint), _col3 (type: string)","1":"_col0 (type: bigint), _col1 (type: string)"},"Map Join Vectorization:":{"bigTableKeyExpressions:":["col 3:bigint","col 7:string"],"bigTableValueExpressions:":["col 2:int","col 6:string"],"className:":"VectorMapJoinOperator","native:":"false","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"nativeConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"outputColumnNames:":["_col0","_col2"],"Statistics:":"Num rows: 26 Data size: 1598 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_33","children":{"Map Join Operator":{"condition map:":[{"":"Left Outer Join 0 to 1"}],"keys:":{"0":"_col0 (type: int), _col2 (type: string)","1":"_col0 (type: int), _col1 (type: string)"},"Map Join Vectorization:":{"bigTableKeyExpressions:":["col 0:int","col 1:string"],"className:":"VectorMapJoinOperator","native:":"false","nativeConditionsMet:":["hive.mapjoin.optimized.hashtable IS true","hive.vectorized.execution.mapjoin.native.enabled IS true","One MapJoin Condition IS true","No nullsafe IS true","Small table vectorizes IS true","Outer Join has keys IS true","Optimized Table and Supports Key Types IS true"],"nativeConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"Statistics:":"Num rows: 42 Data size: 336 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"MAPJOIN_34","children":{"Group By Operator":{"aggregations:":["count()"],"Group By Vectorization:":{"aggregators:":["VectorUDAFCountStar(*) -> bigint"],"className:":"VectorGroupByOperator","groupByMode:":"HASH","native:":"false","vectorProcessingMode:":"HASH","projectedOutputColumnNums:":"[0]"},"minReductionHashAggr:":"0.99","mode:":"hash","outputColumnNames:":["_col0"],"Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"GBY_35","children":{"Reduce Output Operator":{"columnExprMap:":{"VALUE._col0":"_col0"},"null sort order:":"","sort order:":"","Reduce Sink Vectorization:":{"className:":"VectorReduceSinkOperator","native:":"false","nativeConditionsMet:":["hive.vectorized.execution.reducesink.new.enabled IS true","No PTF TopN IS true","No DISTINCT columns IS true","BinarySortableSerDe for keys IS true","LazyBinarySerDe for values IS true"],"nativeConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","value expressions:":"_col0 (type: bigint)","OperatorId:":"RS_36"}}}}}}}}}}}}],"Execution mode:":"vectorized","Map Vectorization:":{"enabled:":"true","enabledConditionsMet:":["hive.vectorized.use.vectorized.input.format IS true"],"inputFormatFeatureSupport:":"[DECIMAL_64]","featureSupportInUse:":"[DECIMAL_64]","inputFileFormats:":["org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"],"allNative:":"false","usesVectorUDFAdaptor:":"false","vectorized:":"true","rowBatchContext:":{"dataColumnCount:":"12","includeColumns:":"[2, 3, 6, 7]","dataColumns:":["ctinyint:tinyint","csmallint:smallint","cint:int","cbigint:bigint","cfloat:float","cdouble:double","cstring1:string","cstring2:string","ctimestamp1:timestamp","ctimestamp2:timestamp","cboolean1:boolean","cboolean2:boolean"],"partitionColumnCount:":"0","scratchColumnTypeNames:":"[]"}},"Local Work:":{"Map Reduce Local Work":{}},"Reduce Vectorization:":{"enabled:":"false","enableConditionsMet:":["hive.vectorized.execution.reduce.enabled IS true"],"enableConditionsNotMet:":["hive.execution.engine mr IN [tez, spark] IS false"]},"Reduce Operator Tree:":{"Group By Operator":{"aggregations:":["count(VALUE._col0)"],"mode:":"mergepartial","outputColumnNames:":["_col0"],"Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","OperatorId:":"GBY_17","children":{"File Output Operator":{"compressed:":"false","Statistics:":"Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE","table:":{"input format:":"org.apache.hadoop.mapred.SequenceFileInputFormat","output format:":"org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat","serde:":"org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"},"OperatorId:":"FS_19"}}}}}},"Stage-0":{"Fetch Operator":{"limit:":"-1","Processor Tree:":{"ListSink":{"OperatorId:":"LIST_SINK_37"}}}}}}
PREHOOK: query: select count(*) from (select c.cstring1
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cstring2 = c.cstring2 and cd.cbigint = c.cbigint
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1 and hd.cint = c.cint
) t1
PREHOOK: type: QUERY
PREHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from (select c.cstring1
from small_alltypesorc_a_n1 c
left outer join small_alltypesorc_a_n1 cd
  on cd.cstring2 = c.cstring2 and cd.cbigint = c.cbigint
left outer join small_alltypesorc_a_n1 hd
  on hd.cstring1 = c.cstring1 and hd.cint = c.cint
) t1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@small_alltypesorc_a_n1
#### A masked pattern was here ####
24
