PREHOOK: query: create database escape_comments_db comment 'a\nb'
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:escape_comments_db
POSTHOOK: query: create database escape_comments_db comment 'a\nb'
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:escape_comments_db
PREHOOK: query: use escape_comments_db
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:escape_comments_db
POSTHOOK: query: use escape_comments_db
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:escape_comments_db
PREHOOK: query: create table escape_comments_tbl1
(col1 string comment 'a\nb\'\;') comment 'a\nb'
partitioned by (p1 string comment 'a\nb')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:escape_comments_db
PREHOOK: Output: escape_comments_db@escape_comments_tbl1
POSTHOOK: query: create table escape_comments_tbl1
(col1 string comment 'a\nb\'\;') comment 'a\nb'
partitioned by (p1 string comment 'a\nb')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:escape_comments_db
POSTHOOK: Output: escape_comments_db@escape_comments_tbl1
PREHOOK: query: create view escape_comments_view1 (col1 comment 'a\nb') comment 'a\nb'
as select col1 from escape_comments_tbl1
PREHOOK: type: CREATEVIEW
PREHOOK: Input: escape_comments_db@escape_comments_tbl1
PREHOOK: Output: database:escape_comments_db
PREHOOK: Output: escape_comments_db@escape_comments_view1
POSTHOOK: query: create view escape_comments_view1 (col1 comment 'a\nb') comment 'a\nb'
as select col1 from escape_comments_tbl1
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: escape_comments_db@escape_comments_tbl1
POSTHOOK: Output: database:escape_comments_db
POSTHOOK: Output: escape_comments_db@escape_comments_view1
POSTHOOK: Lineage: escape_comments_view1.col1 SIMPLE [(escape_comments_tbl1)escape_comments_tbl1.FieldSchema(name:col1, type:string, comment:a
b';), ]
PREHOOK: query: describe database extended escape_comments_db
PREHOOK: type: DESCDATABASE
PREHOOK: Input: database:escape_comments_db
POSTHOOK: query: describe database extended escape_comments_db
POSTHOOK: type: DESCDATABASE
POSTHOOK: Input: database:escape_comments_db
escape_comments_db	a\nb	location/in/test	hive_test_user	USER	
PREHOOK: query: describe database escape_comments_db
PREHOOK: type: DESCDATABASE
PREHOOK: Input: database:escape_comments_db
POSTHOOK: query: describe database escape_comments_db
POSTHOOK: type: DESCDATABASE
POSTHOOK: Input: database:escape_comments_db
escape_comments_db	a\nb	location/in/test	hive_test_user	USER	
PREHOOK: query: show create table escape_comments_tbl1
PREHOOK: type: SHOW_CREATETABLE
PREHOOK: Input: escape_comments_db@escape_comments_tbl1
POSTHOOK: query: show create table escape_comments_tbl1
POSTHOOK: type: SHOW_CREATETABLE
POSTHOOK: Input: escape_comments_db@escape_comments_tbl1
CREATE TABLE `escape_comments_tbl1`(
  `col1` string COMMENT 'a\nb\'\;')
COMMENT 'a\nb'
PARTITIONED BY ( 
  `p1` string COMMENT 'a\nb')
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
PREHOOK: query: describe formatted escape_comments_tbl1
PREHOOK: type: DESCTABLE
PREHOOK: Input: escape_comments_db@escape_comments_tbl1
POSTHOOK: query: describe formatted escape_comments_tbl1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: escape_comments_db@escape_comments_tbl1
# col_name            	data_type           	comment             
col1                	string              	a                   
                    	                    	b';                 
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
p1                  	string              	a                   
                    	                    	b                   
	 	 
# Detailed Table Information	 	 
Database:           	escape_comments_db  	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\"}
	bucketing_version   	2                   
	comment             	a                   
	                    	b                   
	numFiles            	0                   
	numPartitions       	0                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	0                   
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: describe escape_comments_tbl1
PREHOOK: type: DESCTABLE
PREHOOK: Input: escape_comments_db@escape_comments_tbl1
POSTHOOK: query: describe escape_comments_tbl1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: escape_comments_db@escape_comments_tbl1
col1                	string              	a                   
                    	                    	b';                 
p1                  	string              	a                   
                    	                    	b                   
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
p1                  	string              	a                   
                    	                    	b                   
PREHOOK: query: show create table escape_comments_view1
PREHOOK: type: SHOW_CREATETABLE
PREHOOK: Input: escape_comments_db@escape_comments_view1
POSTHOOK: query: show create table escape_comments_view1
POSTHOOK: type: SHOW_CREATETABLE
POSTHOOK: Input: escape_comments_db@escape_comments_view1
CREATE VIEW `escape_comments_view1` AS SELECT `col1` AS `col1` FROM (select `escape_comments_tbl1`.`col1` from `escape_comments_db`.`escape_comments_tbl1`) `escape_comments_db.escape_comments_view1`
PREHOOK: query: describe formatted escape_comments_view1
PREHOOK: type: DESCTABLE
PREHOOK: Input: escape_comments_db@escape_comments_view1
POSTHOOK: query: describe formatted escape_comments_view1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: escape_comments_db@escape_comments_view1
# col_name            	data_type           	comment             
col1                	string              	a                   
                    	                    	b                   
	 	 
# Detailed Table Information	 	 
Database:           	escape_comments_db  	 
#### A masked pattern was here ####
Retention:          	0                   	 
Table Type:         	VIRTUAL_VIEW        	 
Table Parameters:	 	 
	bucketing_version   	2                   
	comment             	a                   
	                    	b                   
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	null                	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
	 	 
# View Information	 	 
View Original Text: 	select col1 from escape_comments_tbl1	 
View Expanded Text: 	SELECT `col1` AS `col1` FROM (select `escape_comments_tbl1`.`col1` from `escape_comments_db`.`escape_comments_tbl1`) `escape_comments_db.escape_comments_view1`	 
View Rewrite Enabled:	No                  	 
PREHOOK: query: drop database escape_comments_db cascade
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:escape_comments_db
PREHOOK: Output: database:escape_comments_db
PREHOOK: Output: escape_comments_db@escape_comments_tbl1
PREHOOK: Output: escape_comments_db@escape_comments_view1
POSTHOOK: query: drop database escape_comments_db cascade
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:escape_comments_db
POSTHOOK: Output: database:escape_comments_db
POSTHOOK: Output: escape_comments_db@escape_comments_tbl1
POSTHOOK: Output: escape_comments_db@escape_comments_view1
