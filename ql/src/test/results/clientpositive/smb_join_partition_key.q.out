PREHOOK: query: CREATE TABLE data_table (key INT, value STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@data_table
POSTHOOK: query: CREATE TABLE data_table (key INT, value STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@data_table
PREHOOK: query: insert into table data_table values(1, 'one')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@data_table
POSTHOOK: query: insert into table data_table values(1, 'one')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@data_table
POSTHOOK: Lineage: data_table.key SCRIPT []
POSTHOOK: Lineage: data_table.value SCRIPT []
PREHOOK: query: insert into table data_table values(2, 'two')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@data_table
POSTHOOK: query: insert into table data_table values(2, 'two')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@data_table
POSTHOOK: Lineage: data_table.key SCRIPT []
POSTHOOK: Lineage: data_table.value SCRIPT []
PREHOOK: query: CREATE TABLE smb_table (key INT, value STRING) CLUSTERED BY (key) 
SORTED BY (key) INTO 1 BUCKETS STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_table
POSTHOOK: query: CREATE TABLE smb_table (key INT, value STRING) CLUSTERED BY (key) 
SORTED BY (key) INTO 1 BUCKETS STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_table
PREHOOK: query: CREATE TABLE smb_table_part (key INT, value STRING) PARTITIONED BY (p1 DECIMAL) 
CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS 
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_table_part
POSTHOOK: query: CREATE TABLE smb_table_part (key INT, value STRING) PARTITIONED BY (p1 DECIMAL) 
CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS 
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_table_part
PREHOOK: query: INSERT OVERWRITE TABLE smb_table SELECT * FROM data_table
PREHOOK: type: QUERY
PREHOOK: Input: default@data_table
PREHOOK: Output: default@smb_table
POSTHOOK: query: INSERT OVERWRITE TABLE smb_table SELECT * FROM data_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@data_table
POSTHOOK: Output: default@smb_table
POSTHOOK: Lineage: smb_table.key SIMPLE [(data_table)data_table.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: smb_table.value SIMPLE [(data_table)data_table.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: INSERT OVERWRITE TABLE smb_table_part PARTITION (p1) SELECT key, value, 100 as p1 FROM data_table
PREHOOK: type: QUERY
PREHOOK: Input: default@data_table
PREHOOK: Output: default@smb_table_part
POSTHOOK: query: INSERT OVERWRITE TABLE smb_table_part PARTITION (p1) SELECT key, value, 100 as p1 FROM data_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@data_table
POSTHOOK: Output: default@smb_table_part@p1=100
POSTHOOK: Lineage: smb_table_part PARTITION(p1=100).key SIMPLE [(data_table)data_table.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: smb_table_part PARTITION(p1=100).value SIMPLE [(data_table)data_table.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT s1.key, s2.p1 FROM smb_table s1 INNER JOIN smb_table_part s2 ON s1.key = s2.key ORDER BY s1.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_table
PREHOOK: Input: default@smb_table_part
PREHOOK: Input: default@smb_table_part@p1=100
#### A masked pattern was here ####
POSTHOOK: query: SELECT s1.key, s2.p1 FROM smb_table s1 INNER JOIN smb_table_part s2 ON s1.key = s2.key ORDER BY s1.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_table
POSTHOOK: Input: default@smb_table_part
POSTHOOK: Input: default@smb_table_part@p1=100
#### A masked pattern was here ####
1	100
2	100
PREHOOK: query: drop table smb_table_part
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@smb_table_part
PREHOOK: Output: default@smb_table_part
POSTHOOK: query: drop table smb_table_part
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@smb_table_part
POSTHOOK: Output: default@smb_table_part
PREHOOK: query: CREATE TABLE smb_table_part (key INT, value STRING) PARTITIONED BY (p1 double) 
CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS 
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_table_part
POSTHOOK: query: CREATE TABLE smb_table_part (key INT, value STRING) PARTITIONED BY (p1 double) 
CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS 
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_table_part
PREHOOK: query: INSERT OVERWRITE TABLE smb_table_part PARTITION (p1) SELECT key, value, 100 as p1 FROM data_table
PREHOOK: type: QUERY
PREHOOK: Input: default@data_table
PREHOOK: Output: default@smb_table_part
POSTHOOK: query: INSERT OVERWRITE TABLE smb_table_part PARTITION (p1) SELECT key, value, 100 as p1 FROM data_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@data_table
POSTHOOK: Output: default@smb_table_part@p1=100
POSTHOOK: Lineage: smb_table_part PARTITION(p1=100).key SIMPLE [(data_table)data_table.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: smb_table_part PARTITION(p1=100).value SIMPLE [(data_table)data_table.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT s1.key, s2.p1 FROM smb_table s1 INNER JOIN smb_table_part s2 ON s1.key = s2.key ORDER BY s1.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_table
PREHOOK: Input: default@smb_table_part
PREHOOK: Input: default@smb_table_part@p1=100
#### A masked pattern was here ####
POSTHOOK: query: SELECT s1.key, s2.p1 FROM smb_table s1 INNER JOIN smb_table_part s2 ON s1.key = s2.key ORDER BY s1.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_table
POSTHOOK: Input: default@smb_table_part
POSTHOOK: Input: default@smb_table_part@p1=100
#### A masked pattern was here ####
1	100.0
2	100.0
