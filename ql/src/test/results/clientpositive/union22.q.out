PREHOOK: query: create table dst_union22(k1 string, k2 string, k3 string, k4 string) partitioned by (ds string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dst_union22
POSTHOOK: query: create table dst_union22(k1 string, k2 string, k3 string, k4 string) partitioned by (ds string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dst_union22
PREHOOK: query: create table dst_union22_delta(k0 string, k1 string, k2 string, k3 string, k4 string, k5 string) partitioned by (ds string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dst_union22_delta
POSTHOOK: query: create table dst_union22_delta(k0 string, k1 string, k2 string, k3 string, k4 string, k5 string) partitioned by (ds string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dst_union22_delta
PREHOOK: query: insert overwrite table dst_union22 partition (ds='1')
select key, value, key , value from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@dst_union22@ds=1
POSTHOOK: query: insert overwrite table dst_union22 partition (ds='1')
select key, value, key , value from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@dst_union22@ds=1
POSTHOOK: Lineage: dst_union22 PARTITION(ds=1).k1 SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dst_union22 PARTITION(ds=1).k2 SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dst_union22 PARTITION(ds=1).k3 SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dst_union22 PARTITION(ds=1).k4 SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table dst_union22_delta partition (ds='1')
select key, key, value, key, value, value from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@dst_union22_delta@ds=1
POSTHOOK: query: insert overwrite table dst_union22_delta partition (ds='1')
select key, key, value, key, value, value from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@dst_union22_delta@ds=1
POSTHOOK: Lineage: dst_union22_delta PARTITION(ds=1).k0 SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dst_union22_delta PARTITION(ds=1).k1 SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dst_union22_delta PARTITION(ds=1).k2 SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dst_union22_delta PARTITION(ds=1).k3 SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dst_union22_delta PARTITION(ds=1).k4 SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dst_union22_delta PARTITION(ds=1).k5 SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: explain extended
insert overwrite table dst_union22 partition (ds='2')
select * from
(
select k1 as k1, k2 as k2, k3 as k3, k4 as k4 from dst_union22_delta where ds = '1' and k0 <= 50
union all
select a.k1 as k1, a.k2 as k2, b.k3 as k3, b.k4 as k4
from dst_union22 a left outer join (select * from dst_union22_delta where ds = '1' and k0 > 50) b on
a.k1 = b.k1 and a.ds='1'
where a.k1 > 20
)
subq
PREHOOK: type: QUERY
POSTHOOK: query: explain extended
insert overwrite table dst_union22 partition (ds='2')
select * from
(
select k1 as k1, k2 as k2, k3 as k3, k4 as k4 from dst_union22_delta where ds = '1' and k0 <= 50
union all
select a.k1 as k1, a.k2 as k2, b.k3 as k3, b.k4 as k4
from dst_union22 a left outer join (select * from dst_union22_delta where ds = '1' and k0 > 50) b on
a.k1 = b.k1 and a.ds='1'
where a.k1 > 20
)
subq
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-7 is a root stage , consists of Stage-8, Stage-4
  Stage-8 has a backup stage: Stage-4
  Stage-6 depends on stages: Stage-8
  Stage-2 depends on stages: Stage-4, Stage-6
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-4

STAGE PLANS:
  Stage: Stage-7
    Conditional Operator

  Stage: Stage-8
    Map Reduce Local Work
      Alias -> Map Local Tables:
        null-subquery2:$hdt$_0-subquery2:$hdt$_1:dst_union22_delta 
          Fetch Operator
            limit: -1
            Partition Description:
                Partition
                  base file name: ds=1
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 1
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"k0":"true","k1":"true","k2":"true","k3":"true","k4":"true","k5":"true"}}
                    bucket_count -1
                    column.name.delimiter ,
                    columns k0,k1,k2,k3,k4,k5
                    columns.comments 
                    columns.types string:string:string:string:string:string
#### A masked pattern was here ####
                    name default.dst_union22_delta
                    numFiles 1
                    numRows 500
                    partition_columns ds
                    partition_columns.types string
                    rawDataSize 16936
                    serialization.ddl struct dst_union22_delta { string k0, string k1, string k2, string k3, string k4, string k5}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 17436
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count -1
                      column.name.delimiter ,
                      columns k0,k1,k2,k3,k4,k5
                      columns.comments 
                      columns.types string:string:string:string:string:string
#### A masked pattern was here ####
                      name default.dst_union22_delta
                      partition_columns ds
                      partition_columns.types string
                      serialization.ddl struct dst_union22_delta { string k0, string k1, string k2, string k3, string k4, string k5}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.dst_union22_delta
                  name: default.dst_union22_delta
      Alias -> Map Local Operator Tree:
        null-subquery2:$hdt$_0-subquery2:$hdt$_1:dst_union22_delta 
          TableScan
            alias: dst_union22_delta
            Statistics: Num rows: 500 Data size: 16936 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: ((UDFToDouble(k0) > 50.0D) and (UDFToDouble(k1) > 20.0D)) (type: boolean)
              Statistics: Num rows: 55 Data size: 1862 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: k1 (type: string), k3 (type: string), k4 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 55 Data size: 1862 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  filter mappings:
                    0 [1, 1]
                  filter predicates:
                    0 {(_col2 = '1')}
                    1 
                  keys:
                    0 _col0 (type: string)
                    1 _col0 (type: string)
                  Position of Big Table: 0

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 500 Data size: 11124 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (UDFToDouble(k1) > 20.0D) (type: boolean)
              Statistics: Num rows: 166 Data size: 3693 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: k1 (type: string), k2 (type: string), ds (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 166 Data size: 3693 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Left Outer Join 0 to 1
                  filter mappings:
                    0 [1, 1]
                  filter predicates:
                    0 {(_col2 = '1')}
                    1 
                  keys:
                    0 _col0 (type: string)
                    1 _col0 (type: string)
                  outputColumnNames: _col0, _col1, _col4, _col5
                  Position of Big Table: 0
                  Statistics: Num rows: 182 Data size: 4062 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string), _col4 (type: string), _col5 (type: string)
                    outputColumnNames: _col0, _col1, _col2, _col3
                    Statistics: Num rows: 182 Data size: 4062 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      GlobalTableId: 0
#### A masked pattern was here ####
                      NumFilesPerFileSink: 1
                      table:
                          input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                          properties:
                            column.name.delimiter ,
                            columns _col0,_col1,_col2,_col3
                            columns.types string,string,string,string
                            escape.delim \
                            serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                          serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                      TotalFiles: 1
                      GatherStats: false
                      MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds=1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 1
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"k1":"true","k2":"true","k3":"true","k4":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns k1,k2,k3,k4
              columns.comments 
              columns.types string:string:string:string
#### A masked pattern was here ####
              name default.dst_union22
              numFiles 1
              numRows 500
              partition_columns ds
              partition_columns.types string
              rawDataSize 11124
              serialization.ddl struct dst_union22 { string k1, string k2, string k3, string k4}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 11624
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                column.name.delimiter ,
                columns k1,k2,k3,k4
                columns.comments 
                columns.types string:string:string:string
#### A masked pattern was here ####
                name default.dst_union22
                partition_columns ds
                partition_columns.types string
                serialization.ddl struct dst_union22 { string k1, string k2, string k3, string k4}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dst_union22
            name: default.dst_union22
#### A masked pattern was here ####
          Partition
            base file name: ds=1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 1
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"k0":"true","k1":"true","k2":"true","k3":"true","k4":"true","k5":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns k0,k1,k2,k3,k4,k5
              columns.comments 
              columns.types string:string:string:string:string:string
#### A masked pattern was here ####
              name default.dst_union22_delta
              numFiles 1
              numRows 500
              partition_columns ds
              partition_columns.types string
              rawDataSize 16936
              serialization.ddl struct dst_union22_delta { string k0, string k1, string k2, string k3, string k4, string k5}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 17436
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                column.name.delimiter ,
                columns k0,k1,k2,k3,k4,k5
                columns.comments 
                columns.types string:string:string:string:string:string
#### A masked pattern was here ####
                name default.dst_union22_delta
                partition_columns ds
                partition_columns.types string
                serialization.ddl struct dst_union22_delta { string k0, string k1, string k2, string k3, string k4, string k5}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dst_union22_delta
            name: default.dst_union22_delta
      Truncated Path -> Alias:
        /dst_union22/ds=1 [null-subquery2:$hdt$_0-subquery2:$hdt$_0:a]

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: dst_union22_delta
            Statistics: Num rows: 500 Data size: 16936 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (UDFToDouble(k0) <= 50.0D) (type: boolean)
              Statistics: Num rows: 166 Data size: 5622 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: k1 (type: string), k2 (type: string), k3 (type: string), k4 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 166 Data size: 5622 Basic stats: COMPLETE Column stats: NONE
                Union
                  Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Static Partition Specification: ds=2/
                    Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          bucket_count -1
                          column.name.delimiter ,
                          columns k1,k2,k3,k4
                          columns.comments 
                          columns.types string:string:string:string
#### A masked pattern was here ####
                          name default.dst_union22
                          partition_columns ds
                          partition_columns.types string
                          serialization.ddl struct dst_union22 { string k1, string k2, string k3, string k4}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.dst_union22
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), '2' (type: string)
                    outputColumnNames: k1, k2, k3, k4, ds
                    Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: compute_stats(k1, 'hll'), compute_stats(k2, 'hll'), compute_stats(k3, 'hll'), compute_stats(k4, 'hll')
                      keys: ds (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
                      Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col3 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col4 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
                        auto parallelism: false
          TableScan
            GatherStats: false
            Union
              Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                GlobalTableId: 1
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                Static Partition Specification: ds=2/
                Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count -1
                      column.name.delimiter ,
                      columns k1,k2,k3,k4
                      columns.comments 
                      columns.types string:string:string:string
#### A masked pattern was here ####
                      name default.dst_union22
                      partition_columns ds
                      partition_columns.types string
                      serialization.ddl struct dst_union22 { string k1, string k2, string k3, string k4}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.dst_union22
                TotalFiles: 1
                GatherStats: true
                MultiFileSpray: false
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), '2' (type: string)
                outputColumnNames: k1, k2, k3, k4, ds
                Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: compute_stats(k1, 'hll'), compute_stats(k2, 'hll'), compute_stats(k3, 'hll'), compute_stats(k4, 'hll')
                  keys: ds (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4
                  Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    null sort order: a
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 348 Data size: 9684 Basic stats: COMPLETE Column stats: NONE
                    tag: -1
                    value expressions: _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col3 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>), _col4 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
                    auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10002
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3
              columns.types string,string,string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3
                columns.types string,string,string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
#### A masked pattern was here ####
          Partition
            base file name: ds=1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 1
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"k0":"true","k1":"true","k2":"true","k3":"true","k4":"true","k5":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns k0,k1,k2,k3,k4,k5
              columns.comments 
              columns.types string:string:string:string:string:string
#### A masked pattern was here ####
              name default.dst_union22_delta
              numFiles 1
              numRows 500
              partition_columns ds
              partition_columns.types string
              rawDataSize 16936
              serialization.ddl struct dst_union22_delta { string k0, string k1, string k2, string k3, string k4, string k5}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 17436
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                column.name.delimiter ,
                columns k0,k1,k2,k3,k4,k5
                columns.comments 
                columns.types string:string:string:string:string:string
#### A masked pattern was here ####
                name default.dst_union22_delta
                partition_columns ds
                partition_columns.types string
                serialization.ddl struct dst_union22_delta { string k0, string k1, string k2, string k3, string k4, string k5}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dst_union22_delta
            name: default.dst_union22_delta
      Truncated Path -> Alias:
        /dst_union22_delta/ds=1 [null-subquery1:$hdt$_0-subquery1:dst_union22_delta]
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1), compute_stats(VALUE._col2), compute_stats(VALUE._col3)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3, _col4
          Statistics: Num rows: 174 Data size: 4842 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col1 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col3 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col4 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col0 (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4
            Statistics: Num rows: 174 Data size: 4842 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              Statistics: Num rows: 174 Data size: 4842 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  properties:
                    columns _col0,_col1,_col2,_col3,_col4
                    columns.types struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>:string
                    escape.delim \
                    hive.serialization.extend.additional.nesting.levels true
                    serialization.escape.crlf true
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 2
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                column.name.delimiter ,
                columns k1,k2,k3,k4
                columns.comments 
                columns.types string:string:string:string
#### A masked pattern was here ####
                name default.dst_union22
                partition_columns ds
                partition_columns.types string
                serialization.ddl struct dst_union22 { string k1, string k2, string k3, string k4}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dst_union22

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: k1, k2, k3, k4
          Column Types: string, string, string, string
          Table: default.dst_union22
          Is Table Level Stats: false

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 500 Data size: 11124 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (UDFToDouble(k1) > 20.0D) (type: boolean)
              Statistics: Num rows: 166 Data size: 3693 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: k1 (type: string), k2 (type: string), ds (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 166 Data size: 3693 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 166 Data size: 3693 Basic stats: COMPLETE Column stats: NONE
                  tag: 0
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
          TableScan
            alias: dst_union22_delta
            Statistics: Num rows: 500 Data size: 16936 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: ((UDFToDouble(k0) > 50.0D) and (UDFToDouble(k1) > 20.0D)) (type: boolean)
              Statistics: Num rows: 55 Data size: 1862 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: k1 (type: string), k3 (type: string), k4 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 55 Data size: 1862 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 55 Data size: 1862 Basic stats: COMPLETE Column stats: NONE
                  tag: 1
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds=1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 1
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"k1":"true","k2":"true","k3":"true","k4":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns k1,k2,k3,k4
              columns.comments 
              columns.types string:string:string:string
#### A masked pattern was here ####
              name default.dst_union22
              numFiles 1
              numRows 500
              partition_columns ds
              partition_columns.types string
              rawDataSize 11124
              serialization.ddl struct dst_union22 { string k1, string k2, string k3, string k4}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 11624
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                column.name.delimiter ,
                columns k1,k2,k3,k4
                columns.comments 
                columns.types string:string:string:string
#### A masked pattern was here ####
                name default.dst_union22
                partition_columns ds
                partition_columns.types string
                serialization.ddl struct dst_union22 { string k1, string k2, string k3, string k4}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dst_union22
            name: default.dst_union22
#### A masked pattern was here ####
          Partition
            base file name: ds=1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 1
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"k0":"true","k1":"true","k2":"true","k3":"true","k4":"true","k5":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns k0,k1,k2,k3,k4,k5
              columns.comments 
              columns.types string:string:string:string:string:string
#### A masked pattern was here ####
              name default.dst_union22_delta
              numFiles 1
              numRows 500
              partition_columns ds
              partition_columns.types string
              rawDataSize 16936
              serialization.ddl struct dst_union22_delta { string k0, string k1, string k2, string k3, string k4, string k5}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 17436
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                column.name.delimiter ,
                columns k0,k1,k2,k3,k4,k5
                columns.comments 
                columns.types string:string:string:string:string:string
#### A masked pattern was here ####
                name default.dst_union22_delta
                partition_columns ds
                partition_columns.types string
                serialization.ddl struct dst_union22_delta { string k0, string k1, string k2, string k3, string k4, string k5}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dst_union22_delta
            name: default.dst_union22_delta
      Truncated Path -> Alias:
        /dst_union22/ds=1 [null-subquery2:$hdt$_0-subquery2:$hdt$_0:a]
        /dst_union22_delta/ds=1 [null-subquery2:$hdt$_0-subquery2:$hdt$_1:dst_union22_delta]
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join 0 to 1
          filter mappings:
            0 [1, 1]
          filter predicates:
            0 {(VALUE._col1 = '1')}
            1 
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
          outputColumnNames: _col0, _col1, _col4, _col5
          Statistics: Num rows: 182 Data size: 4062 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), _col4 (type: string), _col5 (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 182 Data size: 4062 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  properties:
                    column.name.delimiter ,
                    columns _col0,_col1,_col2,_col3
                    columns.types string,string,string,string
                    escape.delim \
                    serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

PREHOOK: query: insert overwrite table dst_union22 partition (ds='2')
select * from
(
select k1 as k1, k2 as k2, k3 as k3, k4 as k4 from dst_union22_delta where ds = '1' and k0 <= 50
union all
select a.k1 as k1, a.k2 as k2, b.k3 as k3, b.k4 as k4
from dst_union22 a left outer join (select * from dst_union22_delta where ds = '1' and k0 > 50) b on
a.k1 = b.k1 and a.ds='1'
where a.k1 > 20
)
subq
PREHOOK: type: QUERY
PREHOOK: Input: default@dst_union22
PREHOOK: Input: default@dst_union22@ds=1
PREHOOK: Input: default@dst_union22_delta
PREHOOK: Input: default@dst_union22_delta@ds=1
PREHOOK: Output: default@dst_union22@ds=2
POSTHOOK: query: insert overwrite table dst_union22 partition (ds='2')
select * from
(
select k1 as k1, k2 as k2, k3 as k3, k4 as k4 from dst_union22_delta where ds = '1' and k0 <= 50
union all
select a.k1 as k1, a.k2 as k2, b.k3 as k3, b.k4 as k4
from dst_union22 a left outer join (select * from dst_union22_delta where ds = '1' and k0 > 50) b on
a.k1 = b.k1 and a.ds='1'
where a.k1 > 20
)
subq
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dst_union22
POSTHOOK: Input: default@dst_union22@ds=1
POSTHOOK: Input: default@dst_union22_delta
POSTHOOK: Input: default@dst_union22_delta@ds=1
POSTHOOK: Output: default@dst_union22@ds=2
POSTHOOK: Lineage: dst_union22 PARTITION(ds=2).k1 EXPRESSION [(dst_union22_delta)dst_union22_delta.FieldSchema(name:k1, type:string, comment:null), (dst_union22)a.FieldSchema(name:k1, type:string, comment:null), ]
POSTHOOK: Lineage: dst_union22 PARTITION(ds=2).k2 EXPRESSION [(dst_union22_delta)dst_union22_delta.FieldSchema(name:k2, type:string, comment:null), (dst_union22)a.FieldSchema(name:k2, type:string, comment:null), ]
POSTHOOK: Lineage: dst_union22 PARTITION(ds=2).k3 EXPRESSION [(dst_union22_delta)dst_union22_delta.FieldSchema(name:k3, type:string, comment:null), ]
POSTHOOK: Lineage: dst_union22 PARTITION(ds=2).k4 EXPRESSION [(dst_union22_delta)dst_union22_delta.FieldSchema(name:k4, type:string, comment:null), ]
PREHOOK: query: select * from dst_union22 where ds = '2'
PREHOOK: type: QUERY
PREHOOK: Input: default@dst_union22
PREHOOK: Input: default@dst_union22@ds=2
#### A masked pattern was here ####
POSTHOOK: query: select * from dst_union22 where ds = '2'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dst_union22
POSTHOOK: Input: default@dst_union22@ds=2
#### A masked pattern was here ####
0	val_0	0	val_0	2
0	val_0	0	val_0	2
0	val_0	0	val_0	2
10	val_10	10	val_10	2
100	val_100	100	val_100	2
100	val_100	100	val_100	2
100	val_100	100	val_100	2
100	val_100	100	val_100	2
103	val_103	103	val_103	2
103	val_103	103	val_103	2
103	val_103	103	val_103	2
103	val_103	103	val_103	2
104	val_104	104	val_104	2
104	val_104	104	val_104	2
104	val_104	104	val_104	2
104	val_104	104	val_104	2
105	val_105	105	val_105	2
11	val_11	11	val_11	2
111	val_111	111	val_111	2
113	val_113	113	val_113	2
113	val_113	113	val_113	2
113	val_113	113	val_113	2
113	val_113	113	val_113	2
114	val_114	114	val_114	2
116	val_116	116	val_116	2
118	val_118	118	val_118	2
118	val_118	118	val_118	2
118	val_118	118	val_118	2
118	val_118	118	val_118	2
119	val_119	119	val_119	2
119	val_119	119	val_119	2
119	val_119	119	val_119	2
119	val_119	119	val_119	2
119	val_119	119	val_119	2
119	val_119	119	val_119	2
119	val_119	119	val_119	2
119	val_119	119	val_119	2
119	val_119	119	val_119	2
12	val_12	12	val_12	2
12	val_12	12	val_12	2
120	val_120	120	val_120	2
120	val_120	120	val_120	2
120	val_120	120	val_120	2
120	val_120	120	val_120	2
125	val_125	125	val_125	2
125	val_125	125	val_125	2
125	val_125	125	val_125	2
125	val_125	125	val_125	2
126	val_126	126	val_126	2
128	val_128	128	val_128	2
128	val_128	128	val_128	2
128	val_128	128	val_128	2
128	val_128	128	val_128	2
128	val_128	128	val_128	2
128	val_128	128	val_128	2
128	val_128	128	val_128	2
128	val_128	128	val_128	2
128	val_128	128	val_128	2
129	val_129	129	val_129	2
129	val_129	129	val_129	2
129	val_129	129	val_129	2
129	val_129	129	val_129	2
131	val_131	131	val_131	2
133	val_133	133	val_133	2
134	val_134	134	val_134	2
134	val_134	134	val_134	2
134	val_134	134	val_134	2
134	val_134	134	val_134	2
136	val_136	136	val_136	2
137	val_137	137	val_137	2
137	val_137	137	val_137	2
137	val_137	137	val_137	2
137	val_137	137	val_137	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
138	val_138	138	val_138	2
143	val_143	143	val_143	2
145	val_145	145	val_145	2
146	val_146	146	val_146	2
146	val_146	146	val_146	2
146	val_146	146	val_146	2
146	val_146	146	val_146	2
149	val_149	149	val_149	2
149	val_149	149	val_149	2
149	val_149	149	val_149	2
149	val_149	149	val_149	2
15	val_15	15	val_15	2
15	val_15	15	val_15	2
150	val_150	150	val_150	2
152	val_152	152	val_152	2
152	val_152	152	val_152	2
152	val_152	152	val_152	2
152	val_152	152	val_152	2
153	val_153	153	val_153	2
155	val_155	155	val_155	2
156	val_156	156	val_156	2
157	val_157	157	val_157	2
158	val_158	158	val_158	2
160	val_160	160	val_160	2
162	val_162	162	val_162	2
163	val_163	163	val_163	2
164	val_164	164	val_164	2
164	val_164	164	val_164	2
164	val_164	164	val_164	2
164	val_164	164	val_164	2
165	val_165	165	val_165	2
165	val_165	165	val_165	2
165	val_165	165	val_165	2
165	val_165	165	val_165	2
166	val_166	166	val_166	2
167	val_167	167	val_167	2
167	val_167	167	val_167	2
167	val_167	167	val_167	2
167	val_167	167	val_167	2
167	val_167	167	val_167	2
167	val_167	167	val_167	2
167	val_167	167	val_167	2
167	val_167	167	val_167	2
167	val_167	167	val_167	2
168	val_168	168	val_168	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
169	val_169	169	val_169	2
17	val_17	17	val_17	2
170	val_170	170	val_170	2
172	val_172	172	val_172	2
172	val_172	172	val_172	2
172	val_172	172	val_172	2
172	val_172	172	val_172	2
174	val_174	174	val_174	2
174	val_174	174	val_174	2
174	val_174	174	val_174	2
174	val_174	174	val_174	2
175	val_175	175	val_175	2
175	val_175	175	val_175	2
175	val_175	175	val_175	2
175	val_175	175	val_175	2
176	val_176	176	val_176	2
176	val_176	176	val_176	2
176	val_176	176	val_176	2
176	val_176	176	val_176	2
177	val_177	177	val_177	2
178	val_178	178	val_178	2
179	val_179	179	val_179	2
179	val_179	179	val_179	2
179	val_179	179	val_179	2
179	val_179	179	val_179	2
18	val_18	18	val_18	2
18	val_18	18	val_18	2
180	val_180	180	val_180	2
181	val_181	181	val_181	2
183	val_183	183	val_183	2
186	val_186	186	val_186	2
187	val_187	187	val_187	2
187	val_187	187	val_187	2
187	val_187	187	val_187	2
187	val_187	187	val_187	2
187	val_187	187	val_187	2
187	val_187	187	val_187	2
187	val_187	187	val_187	2
187	val_187	187	val_187	2
187	val_187	187	val_187	2
189	val_189	189	val_189	2
19	val_19	19	val_19	2
190	val_190	190	val_190	2
191	val_191	191	val_191	2
191	val_191	191	val_191	2
191	val_191	191	val_191	2
191	val_191	191	val_191	2
192	val_192	192	val_192	2
193	val_193	193	val_193	2
193	val_193	193	val_193	2
193	val_193	193	val_193	2
193	val_193	193	val_193	2
193	val_193	193	val_193	2
193	val_193	193	val_193	2
193	val_193	193	val_193	2
193	val_193	193	val_193	2
193	val_193	193	val_193	2
194	val_194	194	val_194	2
195	val_195	195	val_195	2
195	val_195	195	val_195	2
195	val_195	195	val_195	2
195	val_195	195	val_195	2
196	val_196	196	val_196	2
197	val_197	197	val_197	2
197	val_197	197	val_197	2
197	val_197	197	val_197	2
197	val_197	197	val_197	2
199	val_199	199	val_199	2
199	val_199	199	val_199	2
199	val_199	199	val_199	2
199	val_199	199	val_199	2
199	val_199	199	val_199	2
199	val_199	199	val_199	2
199	val_199	199	val_199	2
199	val_199	199	val_199	2
199	val_199	199	val_199	2
2	val_2	2	val_2	2
20	val_20	20	val_20	2
200	val_200	200	val_200	2
200	val_200	200	val_200	2
200	val_200	200	val_200	2
200	val_200	200	val_200	2
201	val_201	201	val_201	2
202	val_202	202	val_202	2
203	val_203	203	val_203	2
203	val_203	203	val_203	2
203	val_203	203	val_203	2
203	val_203	203	val_203	2
205	val_205	205	val_205	2
205	val_205	205	val_205	2
205	val_205	205	val_205	2
205	val_205	205	val_205	2
207	val_207	207	val_207	2
207	val_207	207	val_207	2
207	val_207	207	val_207	2
207	val_207	207	val_207	2
208	val_208	208	val_208	2
208	val_208	208	val_208	2
208	val_208	208	val_208	2
208	val_208	208	val_208	2
208	val_208	208	val_208	2
208	val_208	208	val_208	2
208	val_208	208	val_208	2
208	val_208	208	val_208	2
208	val_208	208	val_208	2
209	val_209	209	val_209	2
209	val_209	209	val_209	2
209	val_209	209	val_209	2
209	val_209	209	val_209	2
213	val_213	213	val_213	2
213	val_213	213	val_213	2
213	val_213	213	val_213	2
213	val_213	213	val_213	2
214	val_214	214	val_214	2
216	val_216	216	val_216	2
216	val_216	216	val_216	2
216	val_216	216	val_216	2
216	val_216	216	val_216	2
217	val_217	217	val_217	2
217	val_217	217	val_217	2
217	val_217	217	val_217	2
217	val_217	217	val_217	2
218	val_218	218	val_218	2
219	val_219	219	val_219	2
219	val_219	219	val_219	2
219	val_219	219	val_219	2
219	val_219	219	val_219	2
221	val_221	221	val_221	2
221	val_221	221	val_221	2
221	val_221	221	val_221	2
221	val_221	221	val_221	2
222	val_222	222	val_222	2
223	val_223	223	val_223	2
223	val_223	223	val_223	2
223	val_223	223	val_223	2
223	val_223	223	val_223	2
224	val_224	224	val_224	2
224	val_224	224	val_224	2
224	val_224	224	val_224	2
224	val_224	224	val_224	2
226	val_226	226	val_226	2
228	val_228	228	val_228	2
229	val_229	229	val_229	2
229	val_229	229	val_229	2
229	val_229	229	val_229	2
229	val_229	229	val_229	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
230	val_230	230	val_230	2
233	val_233	233	val_233	2
233	val_233	233	val_233	2
233	val_233	233	val_233	2
233	val_233	233	val_233	2
235	val_235	235	val_235	2
237	val_237	237	val_237	2
237	val_237	237	val_237	2
237	val_237	237	val_237	2
237	val_237	237	val_237	2
238	val_238	238	val_238	2
238	val_238	238	val_238	2
238	val_238	238	val_238	2
238	val_238	238	val_238	2
239	val_239	239	val_239	2
239	val_239	239	val_239	2
239	val_239	239	val_239	2
239	val_239	239	val_239	2
24	val_24	24	val_24	2
24	val_24	24	val_24	2
24	val_24	NULL	NULL	2
24	val_24	NULL	NULL	2
241	val_241	241	val_241	2
242	val_242	242	val_242	2
242	val_242	242	val_242	2
242	val_242	242	val_242	2
242	val_242	242	val_242	2
244	val_244	244	val_244	2
247	val_247	247	val_247	2
248	val_248	248	val_248	2
249	val_249	249	val_249	2
252	val_252	252	val_252	2
255	val_255	255	val_255	2
255	val_255	255	val_255	2
255	val_255	255	val_255	2
255	val_255	255	val_255	2
256	val_256	256	val_256	2
256	val_256	256	val_256	2
256	val_256	256	val_256	2
256	val_256	256	val_256	2
257	val_257	257	val_257	2
258	val_258	258	val_258	2
26	val_26	26	val_26	2
26	val_26	26	val_26	2
26	val_26	NULL	NULL	2
26	val_26	NULL	NULL	2
260	val_260	260	val_260	2
262	val_262	262	val_262	2
263	val_263	263	val_263	2
265	val_265	265	val_265	2
265	val_265	265	val_265	2
265	val_265	265	val_265	2
265	val_265	265	val_265	2
266	val_266	266	val_266	2
27	val_27	27	val_27	2
27	val_27	NULL	NULL	2
272	val_272	272	val_272	2
272	val_272	272	val_272	2
272	val_272	272	val_272	2
272	val_272	272	val_272	2
273	val_273	273	val_273	2
273	val_273	273	val_273	2
273	val_273	273	val_273	2
273	val_273	273	val_273	2
273	val_273	273	val_273	2
273	val_273	273	val_273	2
273	val_273	273	val_273	2
273	val_273	273	val_273	2
273	val_273	273	val_273	2
274	val_274	274	val_274	2
275	val_275	275	val_275	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
277	val_277	277	val_277	2
278	val_278	278	val_278	2
278	val_278	278	val_278	2
278	val_278	278	val_278	2
278	val_278	278	val_278	2
28	val_28	28	val_28	2
28	val_28	NULL	NULL	2
280	val_280	280	val_280	2
280	val_280	280	val_280	2
280	val_280	280	val_280	2
280	val_280	280	val_280	2
281	val_281	281	val_281	2
281	val_281	281	val_281	2
281	val_281	281	val_281	2
281	val_281	281	val_281	2
282	val_282	282	val_282	2
282	val_282	282	val_282	2
282	val_282	282	val_282	2
282	val_282	282	val_282	2
283	val_283	283	val_283	2
284	val_284	284	val_284	2
285	val_285	285	val_285	2
286	val_286	286	val_286	2
287	val_287	287	val_287	2
288	val_288	288	val_288	2
288	val_288	288	val_288	2
288	val_288	288	val_288	2
288	val_288	288	val_288	2
289	val_289	289	val_289	2
291	val_291	291	val_291	2
292	val_292	292	val_292	2
296	val_296	296	val_296	2
298	val_298	298	val_298	2
298	val_298	298	val_298	2
298	val_298	298	val_298	2
298	val_298	298	val_298	2
298	val_298	298	val_298	2
298	val_298	298	val_298	2
298	val_298	298	val_298	2
298	val_298	298	val_298	2
298	val_298	298	val_298	2
30	val_30	30	val_30	2
30	val_30	NULL	NULL	2
302	val_302	302	val_302	2
305	val_305	305	val_305	2
306	val_306	306	val_306	2
307	val_307	307	val_307	2
307	val_307	307	val_307	2
307	val_307	307	val_307	2
307	val_307	307	val_307	2
308	val_308	308	val_308	2
309	val_309	309	val_309	2
309	val_309	309	val_309	2
309	val_309	309	val_309	2
309	val_309	309	val_309	2
310	val_310	310	val_310	2
311	val_311	311	val_311	2
311	val_311	311	val_311	2
311	val_311	311	val_311	2
311	val_311	311	val_311	2
311	val_311	311	val_311	2
311	val_311	311	val_311	2
311	val_311	311	val_311	2
311	val_311	311	val_311	2
311	val_311	311	val_311	2
315	val_315	315	val_315	2
316	val_316	316	val_316	2
316	val_316	316	val_316	2
316	val_316	316	val_316	2
316	val_316	316	val_316	2
316	val_316	316	val_316	2
316	val_316	316	val_316	2
316	val_316	316	val_316	2
316	val_316	316	val_316	2
316	val_316	316	val_316	2
317	val_317	317	val_317	2
317	val_317	317	val_317	2
317	val_317	317	val_317	2
317	val_317	317	val_317	2
318	val_318	318	val_318	2
318	val_318	318	val_318	2
318	val_318	318	val_318	2
318	val_318	318	val_318	2
318	val_318	318	val_318	2
318	val_318	318	val_318	2
318	val_318	318	val_318	2
318	val_318	318	val_318	2
318	val_318	318	val_318	2
321	val_321	321	val_321	2
321	val_321	321	val_321	2
321	val_321	321	val_321	2
321	val_321	321	val_321	2
322	val_322	322	val_322	2
322	val_322	322	val_322	2
322	val_322	322	val_322	2
322	val_322	322	val_322	2
323	val_323	323	val_323	2
325	val_325	325	val_325	2
325	val_325	325	val_325	2
325	val_325	325	val_325	2
325	val_325	325	val_325	2
327	val_327	327	val_327	2
327	val_327	327	val_327	2
327	val_327	327	val_327	2
327	val_327	327	val_327	2
327	val_327	327	val_327	2
327	val_327	327	val_327	2
327	val_327	327	val_327	2
327	val_327	327	val_327	2
327	val_327	327	val_327	2
33	val_33	33	val_33	2
33	val_33	NULL	NULL	2
331	val_331	331	val_331	2
331	val_331	331	val_331	2
331	val_331	331	val_331	2
331	val_331	331	val_331	2
332	val_332	332	val_332	2
333	val_333	333	val_333	2
333	val_333	333	val_333	2
333	val_333	333	val_333	2
333	val_333	333	val_333	2
335	val_335	335	val_335	2
336	val_336	336	val_336	2
338	val_338	338	val_338	2
339	val_339	339	val_339	2
34	val_34	34	val_34	2
34	val_34	NULL	NULL	2
341	val_341	341	val_341	2
342	val_342	342	val_342	2
342	val_342	342	val_342	2
342	val_342	342	val_342	2
342	val_342	342	val_342	2
344	val_344	344	val_344	2
344	val_344	344	val_344	2
344	val_344	344	val_344	2
344	val_344	344	val_344	2
345	val_345	345	val_345	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
348	val_348	348	val_348	2
35	val_35	35	val_35	2
35	val_35	35	val_35	2
35	val_35	35	val_35	2
35	val_35	NULL	NULL	2
35	val_35	NULL	NULL	2
35	val_35	NULL	NULL	2
351	val_351	351	val_351	2
353	val_353	353	val_353	2
353	val_353	353	val_353	2
353	val_353	353	val_353	2
353	val_353	353	val_353	2
356	val_356	356	val_356	2
360	val_360	360	val_360	2
362	val_362	362	val_362	2
364	val_364	364	val_364	2
365	val_365	365	val_365	2
366	val_366	366	val_366	2
367	val_367	367	val_367	2
367	val_367	367	val_367	2
367	val_367	367	val_367	2
367	val_367	367	val_367	2
368	val_368	368	val_368	2
369	val_369	369	val_369	2
369	val_369	369	val_369	2
369	val_369	369	val_369	2
369	val_369	369	val_369	2
369	val_369	369	val_369	2
369	val_369	369	val_369	2
369	val_369	369	val_369	2
369	val_369	369	val_369	2
369	val_369	369	val_369	2
37	val_37	37	val_37	2
37	val_37	37	val_37	2
37	val_37	NULL	NULL	2
37	val_37	NULL	NULL	2
373	val_373	373	val_373	2
374	val_374	374	val_374	2
375	val_375	375	val_375	2
377	val_377	377	val_377	2
378	val_378	378	val_378	2
379	val_379	379	val_379	2
382	val_382	382	val_382	2
382	val_382	382	val_382	2
382	val_382	382	val_382	2
382	val_382	382	val_382	2
384	val_384	384	val_384	2
384	val_384	384	val_384	2
384	val_384	384	val_384	2
384	val_384	384	val_384	2
384	val_384	384	val_384	2
384	val_384	384	val_384	2
384	val_384	384	val_384	2
384	val_384	384	val_384	2
384	val_384	384	val_384	2
386	val_386	386	val_386	2
389	val_389	389	val_389	2
392	val_392	392	val_392	2
393	val_393	393	val_393	2
394	val_394	394	val_394	2
395	val_395	395	val_395	2
395	val_395	395	val_395	2
395	val_395	395	val_395	2
395	val_395	395	val_395	2
396	val_396	396	val_396	2
396	val_396	396	val_396	2
396	val_396	396	val_396	2
396	val_396	396	val_396	2
396	val_396	396	val_396	2
396	val_396	396	val_396	2
396	val_396	396	val_396	2
396	val_396	396	val_396	2
396	val_396	396	val_396	2
397	val_397	397	val_397	2
397	val_397	397	val_397	2
397	val_397	397	val_397	2
397	val_397	397	val_397	2
399	val_399	399	val_399	2
399	val_399	399	val_399	2
399	val_399	399	val_399	2
399	val_399	399	val_399	2
4	val_4	4	val_4	2
400	val_400	400	val_400	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
401	val_401	401	val_401	2
402	val_402	402	val_402	2
403	val_403	403	val_403	2
403	val_403	403	val_403	2
403	val_403	403	val_403	2
403	val_403	403	val_403	2
403	val_403	403	val_403	2
403	val_403	403	val_403	2
403	val_403	403	val_403	2
403	val_403	403	val_403	2
403	val_403	403	val_403	2
404	val_404	404	val_404	2
404	val_404	404	val_404	2
404	val_404	404	val_404	2
404	val_404	404	val_404	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
406	val_406	406	val_406	2
407	val_407	407	val_407	2
409	val_409	409	val_409	2
409	val_409	409	val_409	2
409	val_409	409	val_409	2
409	val_409	409	val_409	2
409	val_409	409	val_409	2
409	val_409	409	val_409	2
409	val_409	409	val_409	2
409	val_409	409	val_409	2
409	val_409	409	val_409	2
41	val_41	41	val_41	2
41	val_41	NULL	NULL	2
411	val_411	411	val_411	2
413	val_413	413	val_413	2
413	val_413	413	val_413	2
413	val_413	413	val_413	2
413	val_413	413	val_413	2
414	val_414	414	val_414	2
414	val_414	414	val_414	2
414	val_414	414	val_414	2
414	val_414	414	val_414	2
417	val_417	417	val_417	2
417	val_417	417	val_417	2
417	val_417	417	val_417	2
417	val_417	417	val_417	2
417	val_417	417	val_417	2
417	val_417	417	val_417	2
417	val_417	417	val_417	2
417	val_417	417	val_417	2
417	val_417	417	val_417	2
418	val_418	418	val_418	2
419	val_419	419	val_419	2
42	val_42	42	val_42	2
42	val_42	42	val_42	2
42	val_42	NULL	NULL	2
42	val_42	NULL	NULL	2
421	val_421	421	val_421	2
424	val_424	424	val_424	2
424	val_424	424	val_424	2
424	val_424	424	val_424	2
424	val_424	424	val_424	2
427	val_427	427	val_427	2
429	val_429	429	val_429	2
429	val_429	429	val_429	2
429	val_429	429	val_429	2
429	val_429	429	val_429	2
43	val_43	43	val_43	2
43	val_43	NULL	NULL	2
430	val_430	430	val_430	2
430	val_430	430	val_430	2
430	val_430	430	val_430	2
430	val_430	430	val_430	2
430	val_430	430	val_430	2
430	val_430	430	val_430	2
430	val_430	430	val_430	2
430	val_430	430	val_430	2
430	val_430	430	val_430	2
431	val_431	431	val_431	2
431	val_431	431	val_431	2
431	val_431	431	val_431	2
431	val_431	431	val_431	2
431	val_431	431	val_431	2
431	val_431	431	val_431	2
431	val_431	431	val_431	2
431	val_431	431	val_431	2
431	val_431	431	val_431	2
432	val_432	432	val_432	2
435	val_435	435	val_435	2
436	val_436	436	val_436	2
437	val_437	437	val_437	2
438	val_438	438	val_438	2
438	val_438	438	val_438	2
438	val_438	438	val_438	2
438	val_438	438	val_438	2
438	val_438	438	val_438	2
438	val_438	438	val_438	2
438	val_438	438	val_438	2
438	val_438	438	val_438	2
438	val_438	438	val_438	2
439	val_439	439	val_439	2
439	val_439	439	val_439	2
439	val_439	439	val_439	2
439	val_439	439	val_439	2
44	val_44	44	val_44	2
44	val_44	NULL	NULL	2
443	val_443	443	val_443	2
444	val_444	444	val_444	2
446	val_446	446	val_446	2
448	val_448	448	val_448	2
449	val_449	449	val_449	2
452	val_452	452	val_452	2
453	val_453	453	val_453	2
454	val_454	454	val_454	2
454	val_454	454	val_454	2
454	val_454	454	val_454	2
454	val_454	454	val_454	2
454	val_454	454	val_454	2
454	val_454	454	val_454	2
454	val_454	454	val_454	2
454	val_454	454	val_454	2
454	val_454	454	val_454	2
455	val_455	455	val_455	2
457	val_457	457	val_457	2
458	val_458	458	val_458	2
458	val_458	458	val_458	2
458	val_458	458	val_458	2
458	val_458	458	val_458	2
459	val_459	459	val_459	2
459	val_459	459	val_459	2
459	val_459	459	val_459	2
459	val_459	459	val_459	2
460	val_460	460	val_460	2
462	val_462	462	val_462	2
462	val_462	462	val_462	2
462	val_462	462	val_462	2
462	val_462	462	val_462	2
463	val_463	463	val_463	2
463	val_463	463	val_463	2
463	val_463	463	val_463	2
463	val_463	463	val_463	2
466	val_466	466	val_466	2
466	val_466	466	val_466	2
466	val_466	466	val_466	2
466	val_466	466	val_466	2
466	val_466	466	val_466	2
466	val_466	466	val_466	2
466	val_466	466	val_466	2
466	val_466	466	val_466	2
466	val_466	466	val_466	2
467	val_467	467	val_467	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
468	val_468	468	val_468	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
469	val_469	469	val_469	2
47	val_47	47	val_47	2
47	val_47	NULL	NULL	2
470	val_470	470	val_470	2
472	val_472	472	val_472	2
475	val_475	475	val_475	2
477	val_477	477	val_477	2
478	val_478	478	val_478	2
478	val_478	478	val_478	2
478	val_478	478	val_478	2
478	val_478	478	val_478	2
479	val_479	479	val_479	2
480	val_480	480	val_480	2
480	val_480	480	val_480	2
480	val_480	480	val_480	2
480	val_480	480	val_480	2
480	val_480	480	val_480	2
480	val_480	480	val_480	2
480	val_480	480	val_480	2
480	val_480	480	val_480	2
480	val_480	480	val_480	2
481	val_481	481	val_481	2
482	val_482	482	val_482	2
483	val_483	483	val_483	2
484	val_484	484	val_484	2
485	val_485	485	val_485	2
487	val_487	487	val_487	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
489	val_489	489	val_489	2
490	val_490	490	val_490	2
491	val_491	491	val_491	2
492	val_492	492	val_492	2
492	val_492	492	val_492	2
492	val_492	492	val_492	2
492	val_492	492	val_492	2
493	val_493	493	val_493	2
494	val_494	494	val_494	2
495	val_495	495	val_495	2
496	val_496	496	val_496	2
497	val_497	497	val_497	2
498	val_498	498	val_498	2
498	val_498	498	val_498	2
498	val_498	498	val_498	2
498	val_498	498	val_498	2
498	val_498	498	val_498	2
498	val_498	498	val_498	2
498	val_498	498	val_498	2
498	val_498	498	val_498	2
498	val_498	498	val_498	2
5	val_5	5	val_5	2
5	val_5	5	val_5	2
5	val_5	5	val_5	2
51	val_51	51	val_51	2
51	val_51	51	val_51	2
51	val_51	51	val_51	2
51	val_51	51	val_51	2
53	val_53	53	val_53	2
54	val_54	54	val_54	2
57	val_57	57	val_57	2
58	val_58	58	val_58	2
58	val_58	58	val_58	2
58	val_58	58	val_58	2
58	val_58	58	val_58	2
64	val_64	64	val_64	2
65	val_65	65	val_65	2
66	val_66	66	val_66	2
67	val_67	67	val_67	2
67	val_67	67	val_67	2
67	val_67	67	val_67	2
67	val_67	67	val_67	2
69	val_69	69	val_69	2
70	val_70	70	val_70	2
70	val_70	70	val_70	2
70	val_70	70	val_70	2
70	val_70	70	val_70	2
70	val_70	70	val_70	2
70	val_70	70	val_70	2
70	val_70	70	val_70	2
70	val_70	70	val_70	2
70	val_70	70	val_70	2
72	val_72	72	val_72	2
72	val_72	72	val_72	2
72	val_72	72	val_72	2
72	val_72	72	val_72	2
74	val_74	74	val_74	2
76	val_76	76	val_76	2
76	val_76	76	val_76	2
76	val_76	76	val_76	2
76	val_76	76	val_76	2
77	val_77	77	val_77	2
78	val_78	78	val_78	2
8	val_8	8	val_8	2
80	val_80	80	val_80	2
82	val_82	82	val_82	2
83	val_83	83	val_83	2
83	val_83	83	val_83	2
83	val_83	83	val_83	2
83	val_83	83	val_83	2
84	val_84	84	val_84	2
84	val_84	84	val_84	2
84	val_84	84	val_84	2
84	val_84	84	val_84	2
85	val_85	85	val_85	2
86	val_86	86	val_86	2
87	val_87	87	val_87	2
9	val_9	9	val_9	2
90	val_90	90	val_90	2
90	val_90	90	val_90	2
90	val_90	90	val_90	2
90	val_90	90	val_90	2
90	val_90	90	val_90	2
90	val_90	90	val_90	2
90	val_90	90	val_90	2
90	val_90	90	val_90	2
90	val_90	90	val_90	2
92	val_92	92	val_92	2
95	val_95	95	val_95	2
95	val_95	95	val_95	2
95	val_95	95	val_95	2
95	val_95	95	val_95	2
96	val_96	96	val_96	2
97	val_97	97	val_97	2
97	val_97	97	val_97	2
97	val_97	97	val_97	2
97	val_97	97	val_97	2
98	val_98	98	val_98	2
98	val_98	98	val_98	2
98	val_98	98	val_98	2
98	val_98	98	val_98	2
