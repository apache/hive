PREHOOK: query: DROP TABLE IF EXISTS user_web_events
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS user_web_events
POSTHOOK: type: DROPTABLE
PREHOOK: query: create temporary table user_web_events(`user id` bigint, `user name` string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@user_web_events
POSTHOOK: query: create temporary table user_web_events(`user id` bigint, `user name` string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@user_web_events
PREHOOK: query: explain analyze table user_web_events compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
POSTHOOK: query: explain analyze table user_web_events compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: user_web_events
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Select Operator
              expressions: user id (type: bigint), user name (type: string)
              outputColumnNames: user id, user name
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Group By Operator
                aggregations: compute_stats(user id, 'hll'), compute_stats(user name, 'hll')
                mode: hash
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 864 Basic stats: PARTIAL Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1 Data size: 864 Basic stats: PARTIAL Column stats: NONE
                  value expressions: _col0 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>), _col1 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 880 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 880 Basic stats: PARTIAL Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-1
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: user id, user name
          Column Types: bigint, string
          Table: default.user_web_events

PREHOOK: query: analyze table user_web_events compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@user_web_events
PREHOOK: Output: default@user_web_events
#### A masked pattern was here ####
POSTHOOK: query: analyze table user_web_events compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@user_web_events
POSTHOOK: Output: default@user_web_events
#### A masked pattern was here ####
PREHOOK: query: explain analyze table user_web_events compute statistics for columns `user id`
PREHOOK: type: ANALYZE_TABLE
POSTHOOK: query: explain analyze table user_web_events compute statistics for columns `user id`
POSTHOOK: type: ANALYZE_TABLE
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: user_web_events
            Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
            Select Operator
              expressions: user id (type: bigint)
              outputColumnNames: user id
              Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
              Group By Operator
                aggregations: compute_stats(user id, 'hll')
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 424 Basic stats: PARTIAL Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1 Data size: 424 Basic stats: PARTIAL Column stats: NONE
                  value expressions: _col0 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 440 Basic stats: PARTIAL Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 440 Basic stats: PARTIAL Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-1
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: user id
          Column Types: bigint
          Table: default.user_web_events

PREHOOK: query: analyze table user_web_events compute statistics for columns `user id`
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@user_web_events
PREHOOK: Output: default@user_web_events
#### A masked pattern was here ####
POSTHOOK: query: analyze table user_web_events compute statistics for columns `user id`
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@user_web_events
POSTHOOK: Output: default@user_web_events
#### A masked pattern was here ####
