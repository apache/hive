PREHOOK: query: create database unicode_comments_db comment '数据库'
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:unicode_comments_db
POSTHOOK: query: create database unicode_comments_db comment '数据库'
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:unicode_comments_db
PREHOOK: query: use unicode_comments_db
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:unicode_comments_db
POSTHOOK: query: use unicode_comments_db
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:unicode_comments_db
PREHOOK: query: create table unicode_comments_tbl1
(col1 string comment '第一列') comment '表格'
partitioned by (p1 string comment '分割')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:unicode_comments_db
PREHOOK: Output: unicode_comments_db@unicode_comments_tbl1
POSTHOOK: query: create table unicode_comments_tbl1
(col1 string comment '第一列') comment '表格'
partitioned by (p1 string comment '分割')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:unicode_comments_db
POSTHOOK: Output: unicode_comments_db@unicode_comments_tbl1
PREHOOK: query: create view unicode_comments_view1 (col1 comment '第一列') comment '视图'
as select col1 from unicode_comments_tbl1
PREHOOK: type: CREATEVIEW
PREHOOK: Input: unicode_comments_db@unicode_comments_tbl1
PREHOOK: Output: database:unicode_comments_db
PREHOOK: Output: unicode_comments_db@unicode_comments_view1
POSTHOOK: query: create view unicode_comments_view1 (col1 comment '第一列') comment '视图'
as select col1 from unicode_comments_tbl1
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: unicode_comments_db@unicode_comments_tbl1
POSTHOOK: Output: database:unicode_comments_db
POSTHOOK: Output: unicode_comments_db@unicode_comments_view1
POSTHOOK: Lineage: unicode_comments_view1.col1 SIMPLE [(unicode_comments_tbl1)unicode_comments_tbl1.FieldSchema(name:col1, type:string, comment:第一列), ]
PREHOOK: query: describe database extended unicode_comments_db
PREHOOK: type: DESCDATABASE
PREHOOK: Input: database:unicode_comments_db
POSTHOOK: query: describe database extended unicode_comments_db
POSTHOOK: type: DESCDATABASE
POSTHOOK: Input: database:unicode_comments_db
unicode_comments_db	数据库	location/in/test	hive_test_user	USER	
PREHOOK: query: show create table unicode_comments_tbl1
PREHOOK: type: SHOW_CREATETABLE
PREHOOK: Input: unicode_comments_db@unicode_comments_tbl1
POSTHOOK: query: show create table unicode_comments_tbl1
POSTHOOK: type: SHOW_CREATETABLE
POSTHOOK: Input: unicode_comments_db@unicode_comments_tbl1
CREATE TABLE `unicode_comments_tbl1`(
  `col1` string COMMENT '第一列')
COMMENT '表格'
PARTITIONED BY ( 
  `p1` string COMMENT '分割')
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
#### A masked pattern was here ####
TBLPROPERTIES (
  'bucketing_version'='2', 
#### A masked pattern was here ####
PREHOOK: query: describe formatted unicode_comments_tbl1
PREHOOK: type: DESCTABLE
PREHOOK: Input: unicode_comments_db@unicode_comments_tbl1
POSTHOOK: query: describe formatted unicode_comments_tbl1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: unicode_comments_db@unicode_comments_tbl1
# col_name            	data_type           	comment             
col1                	string              	第一列                 
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
p1                  	string              	分割                  
	 	 
# Detailed Table Information	 	 
Database:           	unicode_comments_db 	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\"}
	bucketing_version   	2                   
	comment             	表格                  
	numFiles            	0                   
	numPartitions       	0                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	0                   
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: show create table unicode_comments_view1
PREHOOK: type: SHOW_CREATETABLE
PREHOOK: Input: unicode_comments_db@unicode_comments_view1
POSTHOOK: query: show create table unicode_comments_view1
POSTHOOK: type: SHOW_CREATETABLE
POSTHOOK: Input: unicode_comments_db@unicode_comments_view1
CREATE VIEW `unicode_comments_view1` AS SELECT `col1` AS `col1` FROM (select `unicode_comments_tbl1`.`col1` from `unicode_comments_db`.`unicode_comments_tbl1`) `unicode_comments_db.unicode_comments_view1`
PREHOOK: query: describe formatted unicode_comments_view1
PREHOOK: type: DESCTABLE
PREHOOK: Input: unicode_comments_db@unicode_comments_view1
POSTHOOK: query: describe formatted unicode_comments_view1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: unicode_comments_db@unicode_comments_view1
# col_name            	data_type           	comment             
col1                	string              	第一列                 
	 	 
# Detailed Table Information	 	 
Database:           	unicode_comments_db 	 
#### A masked pattern was here ####
Retention:          	0                   	 
Table Type:         	VIRTUAL_VIEW        	 
Table Parameters:	 	 
	bucketing_version   	2                   
	comment             	视图                  
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	null                	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
	 	 
# View Information	 	 
Original Query:     	select col1 from unicode_comments_tbl1	 
Expanded Query:     	SELECT `col1` AS `col1` FROM (select `unicode_comments_tbl1`.`col1` from `unicode_comments_db`.`unicode_comments_tbl1`) `unicode_comments_db.unicode_comments_view1`	 
PREHOOK: query: drop database unicode_comments_db cascade
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:unicode_comments_db
PREHOOK: Output: database:unicode_comments_db
PREHOOK: Output: unicode_comments_db@unicode_comments_tbl1
PREHOOK: Output: unicode_comments_db@unicode_comments_view1
POSTHOOK: query: drop database unicode_comments_db cascade
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:unicode_comments_db
POSTHOOK: Output: database:unicode_comments_db
POSTHOOK: Output: unicode_comments_db@unicode_comments_tbl1
POSTHOOK: Output: unicode_comments_db@unicode_comments_view1
