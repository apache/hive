PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part_n4 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_part_n4
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part_n4 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part_n4
PREHOOK: query: load data local inpath '../../data/files/bmj2/000000_0' INTO TABLE srcbucket_mapjoin_part_n4 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n4
POSTHOOK: query: load data local inpath '../../data/files/bmj2/000000_0' INTO TABLE srcbucket_mapjoin_part_n4 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n4
POSTHOOK: Output: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj2/000001_0' INTO TABLE srcbucket_mapjoin_part_n4 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj2/000001_0' INTO TABLE srcbucket_mapjoin_part_n4 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part_2_n3 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n3
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part_2_n3 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n3
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_2_n3 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n3
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_2_n3 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n3
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_2_n3 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_2_n3 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part_2_n3 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part_2_n3 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part_2_n3 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part_2_n3 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
PREHOOK: query: create table bucketmapjoin_hash_result_1_n1 (key bigint , value1 bigint, value2 bigint)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketmapjoin_hash_result_1_n1
POSTHOOK: query: create table bucketmapjoin_hash_result_1_n1 (key bigint , value1 bigint, value2 bigint)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketmapjoin_hash_result_1_n1
PREHOOK: query: create table bucketmapjoin_hash_result_2_n1 (key bigint , value1 bigint, value2 bigint)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketmapjoin_hash_result_2_n1
POSTHOOK: query: create table bucketmapjoin_hash_result_2_n1 (key bigint , value1 bigint, value2 bigint)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketmapjoin_hash_result_2_n1
PREHOOK: query: create table bucketmapjoin_tmp_result_n1 (key string , value1 string, value2 string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucketmapjoin_tmp_result_n1
POSTHOOK: query: create table bucketmapjoin_tmp_result_n1 (key string , value1 string, value2 string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n1
PREHOOK: query: explain extended
insert overwrite table bucketmapjoin_tmp_result_n1
select a.key, a.value, b.value
from srcbucket_mapjoin_part_n4 a join srcbucket_mapjoin_part_2_n3 b
on a.key=b.key and b.ds="2008-04-08"
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n3
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
PREHOOK: Input: default@srcbucket_mapjoin_part_n4
PREHOOK: Input: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
PREHOOK: Output: default@bucketmapjoin_tmp_result_n1
POSTHOOK: query: explain extended
insert overwrite table bucketmapjoin_tmp_result_n1
select a.key, a.value, b.value
from srcbucket_mapjoin_part_n4 a join srcbucket_mapjoin_part_2_n3 b
on a.key=b.key and b.ds="2008-04-08"
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n3
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
POSTHOOK: Input: default@srcbucket_mapjoin_part_n4
POSTHOOK: Input: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n1
OPTIMIZED SQL: SELECT `t0`.`key`, `t0`.`value`, `t2`.`value` AS `value1`
FROM (SELECT `key`, `value`
FROM `default`.`srcbucket_mapjoin_part_n4`
WHERE `key` IS NOT NULL) AS `t0`
INNER JOIN (SELECT `key`, `value`
FROM `default`.`srcbucket_mapjoin_part_2_n3`
WHERE `key` IS NOT NULL AND `ds` = '2008-04-08') AS `t2` ON `t0`.`key` = `t2`.`key`
STAGE DEPENDENCIES:
  Stage-6 is a root stage
  Stage-5 depends on stages: Stage-6
  Stage-0 depends on stages: Stage-5
  Stage-2 depends on stages: Stage-0, Stage-3
  Stage-3 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-6
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_0:a 
          Fetch Operator
            limit: -1
            Partition Description:
                Partition
                  base file name: ds=2008-04-08
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                  properties:
                    bucket_count 2
                    bucket_field_name key
                    column.name.delimiter ,
                    columns key,value
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket_mapjoin_part_n4
                    partition_columns ds
                    partition_columns.types string
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket_mapjoin_part_n4
                      partition_columns ds
                      partition_columns.types string
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin_part_n4
                  name: default.srcbucket_mapjoin_part_n4
      Alias -> Map Local Operator Tree:
        $hdt$_0:a 
          TableScan
            alias: a
            filterExpr: key is not null (type: boolean)
            Statistics: Num rows: 78 Data size: 12220 Basic stats: PARTIAL Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 64 Data size: 10026 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                expressions: key (type: int), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 64 Data size: 10026 Basic stats: PARTIAL Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  Position of Big Table: 1

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            filterExpr: (key is not null and (ds = '2008-04-08')) (type: boolean)
            Statistics: Num rows: 149 Data size: 23124 Basic stats: PARTIAL Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 122 Data size: 18933 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                expressions: key (type: int), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 122 Data size: 18933 Basic stats: PARTIAL Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  outputColumnNames: _col0, _col1, _col3
                  Position of Big Table: 1
                  Statistics: Num rows: 134 Data size: 20826 Basic stats: PARTIAL Column stats: NONE
                  Select Operator
                    expressions: CAST( _col0 AS STRING) (type: string), _col1 (type: string), _col3 (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 134 Data size: 20826 Basic stats: PARTIAL Column stats: NONE
                    File Output Operator
                      bucketingVersion: 2
                      compressed: false
                      GlobalTableId: 1
#### A masked pattern was here ####
                      NumFilesPerFileSink: 1
                      Statistics: Num rows: 134 Data size: 20826 Basic stats: PARTIAL Column stats: NONE
#### A masked pattern was here ####
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          properties:
                            bucketing_version 2
                            column.name.delimiter ,
                            columns key,value1,value2
                            columns.comments 
                            columns.types string:string:string
#### A masked pattern was here ####
                            name default.bucketmapjoin_tmp_result_n1
                            serialization.format 1
                            serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.bucketmapjoin_tmp_result_n1
                      TotalFiles: 1
                      GatherStats: true
                      MultiFileSpray: false
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                      outputColumnNames: key, value1, value2
                      Statistics: Num rows: 134 Data size: 20826 Basic stats: PARTIAL Column stats: NONE
                      Group By Operator
                        aggregations: max(length(key)), avg(COALESCE(length(key),0)), count(1), count(key), compute_bit_vector_hll(key), max(length(value1)), avg(COALESCE(length(value1),0)), count(value1), compute_bit_vector_hll(value1), max(length(value2)), avg(COALESCE(length(value2),0)), count(value2), compute_bit_vector_hll(value2)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                        Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
                        File Output Operator
                          bucketingVersion: 1
                          compressed: false
                          GlobalTableId: 0
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              properties:
                                column.name.delimiter ,
                                columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12
                                columns.types int,struct<count:bigint,sum:double,input:int>,bigint,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary
                                escape.delim \
                                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                          TotalFiles: 1
                          GatherStats: false
                          MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds=2008-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 2008-04-08
            properties:
              bucket_count 4
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.srcbucket_mapjoin_part_2_n3
              partition_columns ds
              partition_columns.types string
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count 4
                bucket_field_name key
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.srcbucket_mapjoin_part_2_n3
                partition_columns ds
                partition_columns.types string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_part_2_n3
            name: default.srcbucket_mapjoin_part_2_n3
#### A masked pattern was here ####
          Partition
            base file name: ds=2008-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 2008-04-08
            properties:
              bucket_count 2
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.srcbucket_mapjoin_part_n4
              partition_columns ds
              partition_columns.types string
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count 2
                bucket_field_name key
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.srcbucket_mapjoin_part_n4
                partition_columns ds
                partition_columns.types string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_part_n4
            name: default.srcbucket_mapjoin_part_n4
      Truncated Path -> Alias:
        /srcbucket_mapjoin_part_2_n3/ds=2008-04-08 [$hdt$_1:b]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,value1,value2
                columns.comments 
                columns.types string:string:string
#### A masked pattern was here ####
                name default.bucketmapjoin_tmp_result_n1
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.bucketmapjoin_tmp_result_n1

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value1, value2
          Column Types: string, string, string
          Table: default.bucketmapjoin_tmp_result_n1
          Is Table Level Stats: true

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              bucketingVersion: 2
              null sort order: 
              numBuckets: -1
              sort order: 
              Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
              tag: -1
              value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary)
              auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10002
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12
              columns.types int,struct<count:bigint,sum:double,input:int>,bigint,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12
                columns.types int,struct<count:bigint,sum:double,input:int>,bigint,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Truncated Path -> Alias:
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
          Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
          Select Operator
            expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
            Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
            File Output Operator
              bucketingVersion: 2
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  properties:
                    bucketing_version -1
                    columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17
                    columns.types string:bigint:double:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary
                    escape.delim \
                    hive.serialization.extend.additional.nesting.levels true
                    serialization.escape.crlf true
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

PREHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n1
select a.key, a.value, b.value
from srcbucket_mapjoin_part_n4 a join srcbucket_mapjoin_part_2_n3 b
on a.key=b.key and b.ds="2008-04-08"
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n3
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
PREHOOK: Input: default@srcbucket_mapjoin_part_n4
PREHOOK: Input: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
PREHOOK: Output: default@bucketmapjoin_tmp_result_n1
POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n1
select a.key, a.value, b.value
from srcbucket_mapjoin_part_n4 a join srcbucket_mapjoin_part_2_n3 b
on a.key=b.key and b.ds="2008-04-08"
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n3
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
POSTHOOK: Input: default@srcbucket_mapjoin_part_n4
POSTHOOK: Input: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n1
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n1.key EXPRESSION [(srcbucket_mapjoin_part_n4)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n1.value1 SIMPLE [(srcbucket_mapjoin_part_n4)a.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n1.value2 SIMPLE [(srcbucket_mapjoin_part_2_n3)b.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select count(1) from bucketmapjoin_tmp_result_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n1
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from bucketmapjoin_tmp_result_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n1
#### A masked pattern was here ####
564
PREHOOK: query: insert overwrite table bucketmapjoin_hash_result_1_n1
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n1
PREHOOK: Output: default@bucketmapjoin_hash_result_1_n1
POSTHOOK: query: insert overwrite table bucketmapjoin_hash_result_1_n1
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n1
POSTHOOK: Output: default@bucketmapjoin_hash_result_1_n1
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n1.key EXPRESSION [(bucketmapjoin_tmp_result_n1)bucketmapjoin_tmp_result_n1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n1.value1 EXPRESSION [(bucketmapjoin_tmp_result_n1)bucketmapjoin_tmp_result_n1.FieldSchema(name:value1, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n1.value2 EXPRESSION [(bucketmapjoin_tmp_result_n1)bucketmapjoin_tmp_result_n1.FieldSchema(name:value2, type:string, comment:null), ]
PREHOOK: query: explain extended
insert overwrite table bucketmapjoin_tmp_result_n1
select a.key, a.value, b.value
from srcbucket_mapjoin_part_n4 a join srcbucket_mapjoin_part_2_n3 b
on a.key=b.key and b.ds="2008-04-08"
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n3
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
PREHOOK: Input: default@srcbucket_mapjoin_part_n4
PREHOOK: Input: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
PREHOOK: Output: default@bucketmapjoin_tmp_result_n1
POSTHOOK: query: explain extended
insert overwrite table bucketmapjoin_tmp_result_n1
select a.key, a.value, b.value
from srcbucket_mapjoin_part_n4 a join srcbucket_mapjoin_part_2_n3 b
on a.key=b.key and b.ds="2008-04-08"
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n3
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
POSTHOOK: Input: default@srcbucket_mapjoin_part_n4
POSTHOOK: Input: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n1
OPTIMIZED SQL: SELECT `t0`.`key`, `t0`.`value`, `t2`.`value` AS `value1`
FROM (SELECT `key`, `value`
FROM `default`.`srcbucket_mapjoin_part_n4`
WHERE `key` IS NOT NULL) AS `t0`
INNER JOIN (SELECT `key`, `value`
FROM `default`.`srcbucket_mapjoin_part_2_n3`
WHERE `key` IS NOT NULL AND `ds` = '2008-04-08') AS `t2` ON `t0`.`key` = `t2`.`key`
STAGE DEPENDENCIES:
  Stage-6 is a root stage
  Stage-5 depends on stages: Stage-6
  Stage-0 depends on stages: Stage-5
  Stage-2 depends on stages: Stage-0, Stage-3
  Stage-3 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-6
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_0:a 
          Fetch Operator
            limit: -1
            Partition Description:
                Partition
                  base file name: ds=2008-04-08
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                  properties:
                    bucket_count 2
                    bucket_field_name key
                    column.name.delimiter ,
                    columns key,value
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket_mapjoin_part_n4
                    partition_columns ds
                    partition_columns.types string
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket_mapjoin_part_n4
                      partition_columns ds
                      partition_columns.types string
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin_part_n4
                  name: default.srcbucket_mapjoin_part_n4
      Alias -> Map Local Operator Tree:
        $hdt$_0:a 
          TableScan
            alias: a
            filterExpr: key is not null (type: boolean)
            Statistics: Num rows: 78 Data size: 12220 Basic stats: PARTIAL Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 64 Data size: 10026 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                expressions: key (type: int), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 64 Data size: 10026 Basic stats: PARTIAL Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  Position of Big Table: 1

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            filterExpr: (key is not null and (ds = '2008-04-08')) (type: boolean)
            Statistics: Num rows: 149 Data size: 23124 Basic stats: PARTIAL Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 122 Data size: 18933 Basic stats: PARTIAL Column stats: NONE
              Select Operator
                expressions: key (type: int), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 122 Data size: 18933 Basic stats: PARTIAL Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  outputColumnNames: _col0, _col1, _col3
                  Position of Big Table: 1
                  Statistics: Num rows: 134 Data size: 20826 Basic stats: PARTIAL Column stats: NONE
                  Select Operator
                    expressions: CAST( _col0 AS STRING) (type: string), _col1 (type: string), _col3 (type: string)
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 134 Data size: 20826 Basic stats: PARTIAL Column stats: NONE
                    File Output Operator
                      bucketingVersion: 2
                      compressed: false
                      GlobalTableId: 1
#### A masked pattern was here ####
                      NumFilesPerFileSink: 1
                      Statistics: Num rows: 134 Data size: 20826 Basic stats: PARTIAL Column stats: NONE
#### A masked pattern was here ####
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          properties:
                            bucketing_version 2
                            column.name.delimiter ,
                            columns key,value1,value2
                            columns.comments 
                            columns.types string:string:string
#### A masked pattern was here ####
                            name default.bucketmapjoin_tmp_result_n1
                            serialization.format 1
                            serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.bucketmapjoin_tmp_result_n1
                      TotalFiles: 1
                      GatherStats: true
                      MultiFileSpray: false
                    Select Operator
                      expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                      outputColumnNames: key, value1, value2
                      Statistics: Num rows: 134 Data size: 20826 Basic stats: PARTIAL Column stats: NONE
                      Group By Operator
                        aggregations: max(length(key)), avg(COALESCE(length(key),0)), count(1), count(key), compute_bit_vector_hll(key), max(length(value1)), avg(COALESCE(length(value1),0)), count(value1), compute_bit_vector_hll(value1), max(length(value2)), avg(COALESCE(length(value2),0)), count(value2), compute_bit_vector_hll(value2)
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                        Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
                        File Output Operator
                          bucketingVersion: 1
                          compressed: false
                          GlobalTableId: 0
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          table:
                              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                              properties:
                                column.name.delimiter ,
                                columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12
                                columns.types int,struct<count:bigint,sum:double,input:int>,bigint,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary
                                escape.delim \
                                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                          TotalFiles: 1
                          GatherStats: false
                          MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds=2008-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 2008-04-08
            properties:
              bucket_count 4
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.srcbucket_mapjoin_part_2_n3
              partition_columns ds
              partition_columns.types string
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count 4
                bucket_field_name key
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.srcbucket_mapjoin_part_2_n3
                partition_columns ds
                partition_columns.types string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_part_2_n3
            name: default.srcbucket_mapjoin_part_2_n3
#### A masked pattern was here ####
          Partition
            base file name: ds=2008-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 2008-04-08
            properties:
              bucket_count 2
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.srcbucket_mapjoin_part_n4
              partition_columns ds
              partition_columns.types string
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count 2
                bucket_field_name key
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.srcbucket_mapjoin_part_n4
                partition_columns ds
                partition_columns.types string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.srcbucket_mapjoin_part_n4
            name: default.srcbucket_mapjoin_part_n4
      Truncated Path -> Alias:
        /srcbucket_mapjoin_part_2_n3/ds=2008-04-08 [$hdt$_1:b]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucketing_version 2
                column.name.delimiter ,
                columns key,value1,value2
                columns.comments 
                columns.types string:string:string
#### A masked pattern was here ####
                name default.bucketmapjoin_tmp_result_n1
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.bucketmapjoin_tmp_result_n1

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value1, value2
          Column Types: string, string, string
          Table: default.bucketmapjoin_tmp_result_n1
          Is Table Level Stats: true

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              bucketingVersion: 2
              null sort order: 
              numBuckets: -1
              sort order: 
              Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
              tag: -1
              value expressions: _col0 (type: int), _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary), _col9 (type: int), _col10 (type: struct<count:bigint,sum:double,input:int>), _col11 (type: bigint), _col12 (type: binary)
              auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10002
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12
              columns.types int,struct<count:bigint,sum:double,input:int>,bigint,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12
                columns.types int,struct<count:bigint,sum:double,input:int>,bigint,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Truncated Path -> Alias:
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: max(VALUE._col0), avg(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8), max(VALUE._col9), avg(VALUE._col10), count(VALUE._col11), compute_bit_vector_hll(VALUE._col12)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
          Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
          Select Operator
            expressions: 'STRING' (type: string), UDFToLong(COALESCE(_col0,0)) (type: bigint), COALESCE(_col1,0) (type: double), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col9,0)) (type: bigint), COALESCE(_col10,0) (type: double), (_col2 - _col11) (type: bigint), COALESCE(ndv_compute_bit_vector(_col12),0) (type: bigint), _col12 (type: binary)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
            Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
            File Output Operator
              bucketingVersion: 2
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              Statistics: Num rows: 1 Data size: 704 Basic stats: PARTIAL Column stats: NONE
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  properties:
                    bucketing_version -1
                    columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12,_col13,_col14,_col15,_col16,_col17
                    columns.types string:bigint:double:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary
                    escape.delim \
                    hive.serialization.extend.additional.nesting.levels true
                    serialization.escape.crlf true
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

PREHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n1
select a.key, a.value, b.value
from srcbucket_mapjoin_part_n4 a join srcbucket_mapjoin_part_2_n3 b
on a.key=b.key and b.ds="2008-04-08"
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n3
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
PREHOOK: Input: default@srcbucket_mapjoin_part_n4
PREHOOK: Input: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
PREHOOK: Output: default@bucketmapjoin_tmp_result_n1
POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result_n1
select a.key, a.value, b.value
from srcbucket_mapjoin_part_n4 a join srcbucket_mapjoin_part_2_n3 b
on a.key=b.key and b.ds="2008-04-08"
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n3
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n3@ds=2008-04-08
POSTHOOK: Input: default@srcbucket_mapjoin_part_n4
POSTHOOK: Input: default@srcbucket_mapjoin_part_n4@ds=2008-04-08
POSTHOOK: Output: default@bucketmapjoin_tmp_result_n1
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n1.key EXPRESSION [(srcbucket_mapjoin_part_n4)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n1.value1 SIMPLE [(srcbucket_mapjoin_part_n4)a.FieldSchema(name:value, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_tmp_result_n1.value2 SIMPLE [(srcbucket_mapjoin_part_2_n3)b.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select count(1) from bucketmapjoin_tmp_result_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n1
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from bucketmapjoin_tmp_result_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n1
#### A masked pattern was here ####
564
PREHOOK: query: insert overwrite table bucketmapjoin_hash_result_1_n1
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n1
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketmapjoin_tmp_result_n1
PREHOOK: Output: default@bucketmapjoin_hash_result_1_n1
POSTHOOK: query: insert overwrite table bucketmapjoin_hash_result_1_n1
select sum(hash(key)), sum(hash(value1)), sum(hash(value2)) from bucketmapjoin_tmp_result_n1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketmapjoin_tmp_result_n1
POSTHOOK: Output: default@bucketmapjoin_hash_result_1_n1
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n1.key EXPRESSION [(bucketmapjoin_tmp_result_n1)bucketmapjoin_tmp_result_n1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n1.value1 EXPRESSION [(bucketmapjoin_tmp_result_n1)bucketmapjoin_tmp_result_n1.FieldSchema(name:value1, type:string, comment:null), ]
POSTHOOK: Lineage: bucketmapjoin_hash_result_1_n1.value2 EXPRESSION [(bucketmapjoin_tmp_result_n1)bucketmapjoin_tmp_result_n1.FieldSchema(name:value2, type:string, comment:null), ]
