PREHOOK: query: drop table if exists tez_self_join1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists tez_self_join1
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists tez_self_join2
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists tez_self_join2
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table tez_self_join1(id1 int, id2 string, id3 string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tez_self_join1
POSTHOOK: query: create table tez_self_join1(id1 int, id2 string, id3 string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tez_self_join1
PREHOOK: query: insert into table tez_self_join1 values(1, 'aa','bb'), (2, 'ab','ab'), (3,'ba','ba')
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__1
PREHOOK: Output: default@tez_self_join1
POSTHOOK: query: insert into table tez_self_join1 values(1, 'aa','bb'), (2, 'ab','ab'), (3,'ba','ba')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__1
POSTHOOK: Output: default@tez_self_join1
POSTHOOK: Lineage: tez_self_join1.id1 EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: tez_self_join1.id2 SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: tez_self_join1.id3 SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: create table tez_self_join2(id1 int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tez_self_join2
POSTHOOK: query: create table tez_self_join2(id1 int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tez_self_join2
PREHOOK: query: insert into table tez_self_join2 values(1),(2),(3)
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__2
PREHOOK: Output: default@tez_self_join2
POSTHOOK: query: insert into table tez_self_join2 values(1),(2),(3)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__2
POSTHOOK: Output: default@tez_self_join2
POSTHOOK: Lineage: tez_self_join2.id1 EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: explain
select s.id2, s.id3
from  
(
 select self1.id1, self1.id2, self1.id3
 from tez_self_join1 self1 join tez_self_join1 self2
 on self1.id2=self2.id3 ) s
join tez_self_join2
on s.id1=tez_self_join2.id1
where s.id2='ab'
PREHOOK: type: QUERY
POSTHOOK: query: explain
select s.id2, s.id3
from  
(
 select self1.id1, self1.id2, self1.id3
 from tez_self_join1 self1 join tez_self_join1 self2
 on self1.id2=self2.id3 ) s
join tez_self_join2
on s.id1=tez_self_join2.id1
where s.id2='ab'
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
        Reducer 3 <- Map 5 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: self1
                  Statistics: Num rows: 3 Data size: 21 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((id2 = 'ab') and id1 is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 7 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id1 (type: int), id3 (type: string)
                      outputColumnNames: _col0, _col2
                      Statistics: Num rows: 1 Data size: 7 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: 'ab' (type: string)
                        sort order: +
                        Map-reduce partition columns: 'ab' (type: string)
                        Statistics: Num rows: 1 Data size: 7 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: int), _col2 (type: string)
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: self1
                  Statistics: Num rows: 3 Data size: 21 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (id3 = 'ab') (type: boolean)
                    Statistics: Num rows: 1 Data size: 7 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      Statistics: Num rows: 1 Data size: 7 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: 'ab' (type: string)
                        sort order: +
                        Map-reduce partition columns: 'ab' (type: string)
                        Statistics: Num rows: 1 Data size: 7 Basic stats: COMPLETE Column stats: NONE
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: tez_self_join2
                  Statistics: Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: id1 is not null (type: boolean)
                    Statistics: Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: id1 (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
        Reducer 2 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 'ab' (type: string)
                  1 'ab' (type: string)
                outputColumnNames: _col0, _col2
                Statistics: Num rows: 1 Data size: 7 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 1 Data size: 7 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: string)
        Reducer 3 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col2
                Statistics: Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 'ab' (type: string), _col2 (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 3 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select s.id2, s.id3
from  
(
 select self1.id1, self1.id2, self1.id3
 from tez_self_join1 self1 join tez_self_join1 self2
 on self1.id2=self2.id3 ) s
join tez_self_join2
on s.id1=tez_self_join2.id1
where s.id2='ab'
PREHOOK: type: QUERY
PREHOOK: Input: default@tez_self_join1
PREHOOK: Input: default@tez_self_join2
#### A masked pattern was here ####
POSTHOOK: query: select s.id2, s.id3
from  
(
 select self1.id1, self1.id2, self1.id3
 from tez_self_join1 self1 join tez_self_join1 self2
 on self1.id2=self2.id3 ) s
join tez_self_join2
on s.id1=tez_self_join2.id1
where s.id2='ab'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tez_self_join1
POSTHOOK: Input: default@tez_self_join2
#### A masked pattern was here ####
ab	ab
PREHOOK: query: drop table tez_self_join1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tez_self_join1
PREHOOK: Output: default@tez_self_join1
POSTHOOK: query: drop table tez_self_join1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tez_self_join1
POSTHOOK: Output: default@tez_self_join1
PREHOOK: query: drop table tez_self_join2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tez_self_join2
PREHOOK: Output: default@tez_self_join2
POSTHOOK: query: drop table tez_self_join2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tez_self_join2
POSTHOOK: Output: default@tez_self_join2
