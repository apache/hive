PREHOOK: query: -- SORT_QUERY_RESULTS

-- 2 Strings
create table test_1 (`id` string, `lineid` string) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_1
POSTHOOK: query: -- SORT_QUERY_RESULTS

-- 2 Strings
create table test_1 (`id` string, `lineid` string) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_1
PREHOOK: query: insert into table test_1 values ('one','1'), ('seven','1')
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__1
PREHOOK: Output: default@test_1
POSTHOOK: query: insert into table test_1 values ('one','1'), ('seven','1')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__1
POSTHOOK: Output: default@test_1
POSTHOOK: Lineage: test_1.id SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: test_1.lineid SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: explain
select * from test_1 where struct(`id`, `lineid`)
IN (
struct('two','3'),
struct('three','1'),
struct('one','1'),
struct('five','2'),
struct('six','1'),
struct('eight','1'),
struct('seven','1'),
struct('nine','1'),
struct('ten','1')
)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from test_1 where struct(`id`, `lineid`)
IN (
struct('two','3'),
struct('three','1'),
struct('one','1'),
struct('five','2'),
struct('six','1'),
struct('eight','1'),
struct('seven','1'),
struct('nine','1'),
struct('ten','1')
)
POSTHOOK: type: QUERY
Stage-0
   Fetch Operator
      limit:-1
      Select Operator [SEL_2]
         outputColumnNames:["_col0","_col1"]
         Filter Operator [FIL_4]
            predicate:(struct(id,lineid)) IN (const struct('two','3'), const struct('three','1'), const struct('one','1'), const struct('five','2'), const struct('six','1'), const struct('eight','1'), const struct('seven','1'), const struct('nine','1'), const struct('ten','1')) (type: boolean)
            TableScan [TS_0]
               alias:test_1

PREHOOK: query: select * from test_1 where struct(`id`, `lineid`)
IN (
struct('two','3'),
struct('three','1'),
struct('one','1'),
struct('five','2'),
struct('six','1'),
struct('eight','1'),
struct('seven','1'),
struct('nine','1'),
struct('ten','1')
)
PREHOOK: type: QUERY
PREHOOK: Input: default@test_1
#### A masked pattern was here ####
POSTHOOK: query: select * from test_1 where struct(`id`, `lineid`)
IN (
struct('two','3'),
struct('three','1'),
struct('one','1'),
struct('five','2'),
struct('six','1'),
struct('eight','1'),
struct('seven','1'),
struct('nine','1'),
struct('ten','1')
)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_1
#### A masked pattern was here ####
one	1
seven	1
PREHOOK: query: explain
select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct('two','3'),
struct('three','1'),
struct('one','1'),
struct('five','2'),
struct('six','1'),
struct('eight','1'),
struct('seven','1'),
struct('nine','1'),
struct('ten','1')
) as b from test_1
PREHOOK: type: QUERY
POSTHOOK: query: explain
select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct('two','3'),
struct('three','1'),
struct('one','1'),
struct('five','2'),
struct('six','1'),
struct('eight','1'),
struct('seven','1'),
struct('nine','1'),
struct('ten','1')
) as b from test_1
POSTHOOK: type: QUERY
Stage-0
   Fetch Operator
      limit:-1
      Select Operator [SEL_1]
         outputColumnNames:["_col0","_col1","_col2"]
         TableScan [TS_0]
            alias:test_1

PREHOOK: query: select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct('two','3'),
struct('three','1'),
struct('one','1'),
struct('five','2'),
struct('six','1'),
struct('eight','1'),
struct('seven','1'),
struct('nine','1'),
struct('ten','1')
) as b from test_1
PREHOOK: type: QUERY
PREHOOK: Input: default@test_1
#### A masked pattern was here ####
POSTHOOK: query: select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct('two','3'),
struct('three','1'),
struct('one','1'),
struct('five','2'),
struct('six','1'),
struct('eight','1'),
struct('seven','1'),
struct('nine','1'),
struct('ten','1')
) as b from test_1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_1
#### A masked pattern was here ####
one	1	true
seven	1	true
PREHOOK: query: -- 2 Integers
create table test_2 (`id` int, `lineid` int) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_2
POSTHOOK: query: -- 2 Integers
create table test_2 (`id` int, `lineid` int) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_2
PREHOOK: query: insert into table test_2 values (1,1), (7,1)
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__2
PREHOOK: Output: default@test_2
POSTHOOK: query: insert into table test_2 values (1,1), (7,1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__2
POSTHOOK: Output: default@test_2
POSTHOOK: Lineage: test_2.id EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: test_2.lineid EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: explain
select * from test_2 where struct(`id`, `lineid`)
IN (
struct(2,3),
struct(3,1),
struct(1,1),
struct(5,2),
struct(6,1),
struct(8,1),
struct(7,1),
struct(9,1),
struct(10,1)
)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from test_2 where struct(`id`, `lineid`)
IN (
struct(2,3),
struct(3,1),
struct(1,1),
struct(5,2),
struct(6,1),
struct(8,1),
struct(7,1),
struct(9,1),
struct(10,1)
)
POSTHOOK: type: QUERY
Stage-0
   Fetch Operator
      limit:-1
      Select Operator [SEL_2]
         outputColumnNames:["_col0","_col1"]
         Filter Operator [FIL_4]
            predicate:(struct(id,lineid)) IN (const struct(2,3), const struct(3,1), const struct(1,1), const struct(5,2), const struct(6,1), const struct(8,1), const struct(7,1), const struct(9,1), const struct(10,1)) (type: boolean)
            TableScan [TS_0]
               alias:test_2

PREHOOK: query: select * from test_2 where struct(`id`, `lineid`)
IN (
struct(2,3),
struct(3,1),
struct(1,1),
struct(5,2),
struct(6,1),
struct(8,1),
struct(7,1),
struct(9,1),
struct(10,1)
)
PREHOOK: type: QUERY
PREHOOK: Input: default@test_2
#### A masked pattern was here ####
POSTHOOK: query: select * from test_2 where struct(`id`, `lineid`)
IN (
struct(2,3),
struct(3,1),
struct(1,1),
struct(5,2),
struct(6,1),
struct(8,1),
struct(7,1),
struct(9,1),
struct(10,1)
)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_2
#### A masked pattern was here ####
1	1
7	1
PREHOOK: query: explain
select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct(2,3),
struct(3,1),
struct(1,1),
struct(5,2),
struct(6,1),
struct(8,1),
struct(7,1),
struct(9,1),
struct(10,1)
) as b from test_2
PREHOOK: type: QUERY
POSTHOOK: query: explain
select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct(2,3),
struct(3,1),
struct(1,1),
struct(5,2),
struct(6,1),
struct(8,1),
struct(7,1),
struct(9,1),
struct(10,1)
) as b from test_2
POSTHOOK: type: QUERY
Stage-0
   Fetch Operator
      limit:-1
      Select Operator [SEL_1]
         outputColumnNames:["_col0","_col1","_col2"]
         TableScan [TS_0]
            alias:test_2

PREHOOK: query: select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct(2,3),
struct(3,1),
struct(1,1),
struct(5,2),
struct(6,1),
struct(8,1),
struct(7,1),
struct(9,1),
struct(10,1)
) as b from test_2
PREHOOK: type: QUERY
PREHOOK: Input: default@test_2
#### A masked pattern was here ####
POSTHOOK: query: select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct(2,3),
struct(3,1),
struct(1,1),
struct(5,2),
struct(6,1),
struct(8,1),
struct(7,1),
struct(9,1),
struct(10,1)
) as b from test_2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_2
#### A masked pattern was here ####
1	1	true
7	1	true
PREHOOK: query: -- 1 String and 1 Integer
create table test_3 (`id` string, `lineid` int) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_3
POSTHOOK: query: -- 1 String and 1 Integer
create table test_3 (`id` string, `lineid` int) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_3
PREHOOK: query: insert into table test_3 values ('one',1), ('seven',1)
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__3
PREHOOK: Output: default@test_3
POSTHOOK: query: insert into table test_3 values ('one',1), ('seven',1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__3
POSTHOOK: Output: default@test_3
POSTHOOK: Lineage: test_3.id SIMPLE [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: test_3.lineid EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: explain
select * from test_3 where struct(`id`, `lineid`)
IN (
struct('two',3),
struct('three',1),
struct('one',1),
struct('five',2),
struct('six',1),
struct('eight',1),
struct('seven',1),
struct('nine',1),
struct('ten',1)
)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from test_3 where struct(`id`, `lineid`)
IN (
struct('two',3),
struct('three',1),
struct('one',1),
struct('five',2),
struct('six',1),
struct('eight',1),
struct('seven',1),
struct('nine',1),
struct('ten',1)
)
POSTHOOK: type: QUERY
Stage-0
   Fetch Operator
      limit:-1
      Select Operator [SEL_2]
         outputColumnNames:["_col0","_col1"]
         Filter Operator [FIL_4]
            predicate:(struct(id,lineid)) IN (const struct('two',3), const struct('three',1), const struct('one',1), const struct('five',2), const struct('six',1), const struct('eight',1), const struct('seven',1), const struct('nine',1), const struct('ten',1)) (type: boolean)
            TableScan [TS_0]
               alias:test_3

PREHOOK: query: select * from test_3 where struct(`id`, `lineid`)
IN (
struct('two',3),
struct('three',1),
struct('one',1),
struct('five',2),
struct('six',1),
struct('eight',1),
struct('seven',1),
struct('nine',1),
struct('ten',1)
)
PREHOOK: type: QUERY
PREHOOK: Input: default@test_3
#### A masked pattern was here ####
POSTHOOK: query: select * from test_3 where struct(`id`, `lineid`)
IN (
struct('two',3),
struct('three',1),
struct('one',1),
struct('five',2),
struct('six',1),
struct('eight',1),
struct('seven',1),
struct('nine',1),
struct('ten',1)
)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_3
#### A masked pattern was here ####
one	1
seven	1
PREHOOK: query: explain
select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct('two',3),
struct('three',1),
struct('one',1),
struct('five',2),
struct('six',1),
struct('eight',1),
struct('seven',1),
struct('nine',1),
struct('ten',1)
) as b from test_3
PREHOOK: type: QUERY
POSTHOOK: query: explain
select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct('two',3),
struct('three',1),
struct('one',1),
struct('five',2),
struct('six',1),
struct('eight',1),
struct('seven',1),
struct('nine',1),
struct('ten',1)
) as b from test_3
POSTHOOK: type: QUERY
Stage-0
   Fetch Operator
      limit:-1
      Select Operator [SEL_1]
         outputColumnNames:["_col0","_col1","_col2"]
         TableScan [TS_0]
            alias:test_3

PREHOOK: query: select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct('two',3),
struct('three',1),
struct('one',1),
struct('five',2),
struct('six',1),
struct('eight',1),
struct('seven',1),
struct('nine',1),
struct('ten',1)
) as b from test_3
PREHOOK: type: QUERY
PREHOOK: Input: default@test_3
#### A masked pattern was here ####
POSTHOOK: query: select `id`, `lineid`, struct(`id`, `lineid`)
IN (
struct('two',3),
struct('three',1),
struct('one',1),
struct('five',2),
struct('six',1),
struct('eight',1),
struct('seven',1),
struct('nine',1),
struct('ten',1)
) as b from test_3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_3
#### A masked pattern was here ####
one	1	true
seven	1	true
PREHOOK: query: -- 1 Integer and 1 String and 1 Double
create table test_4 (`my_bigint` bigint, `my_string` string, `my_double` double) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_4
POSTHOOK: query: -- 1 Integer and 1 String and 1 Double
create table test_4 (`my_bigint` bigint, `my_string` string, `my_double` double) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_4
PREHOOK: query: insert into table test_4 values (1, "b", 1.5), (1, "a", 0.5), (2, "b", 1.5)
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__4
PREHOOK: Output: default@test_4
POSTHOOK: query: insert into table test_4 values (1, "b", 1.5), (1, "a", 0.5), (2, "b", 1.5)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__4
POSTHOOK: Output: default@test_4
POSTHOOK: Lineage: test_4.my_bigint EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: test_4.my_double EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
POSTHOOK: Lineage: test_4.my_string SIMPLE [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: explain
select * from test_4 where struct(`my_bigint`, `my_string`, `my_double`)
IN (
struct(1L, "a", 1.5),
struct(1L, "b", -0.5),
struct(3L, "b", 1.5),
struct(1L, "d", 1.5),
struct(1L, "c", 1.5),
struct(1L, "b", 2.5),
struct(1L, "b", 0.5),
struct(5L, "b", 1.5),
struct(1L, "a", 0.5),
struct(3L, "b", 1.5)
)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from test_4 where struct(`my_bigint`, `my_string`, `my_double`)
IN (
struct(1L, "a", 1.5),
struct(1L, "b", -0.5),
struct(3L, "b", 1.5),
struct(1L, "d", 1.5),
struct(1L, "c", 1.5),
struct(1L, "b", 2.5),
struct(1L, "b", 0.5),
struct(5L, "b", 1.5),
struct(1L, "a", 0.5),
struct(3L, "b", 1.5)
)
POSTHOOK: type: QUERY
Stage-0
   Fetch Operator
      limit:-1
      Select Operator [SEL_2]
         outputColumnNames:["_col0","_col1","_col2"]
         Filter Operator [FIL_4]
            predicate:(struct(my_bigint,my_string,my_double)) IN (const struct(1,'a',1.5), const struct(1,'b',-0.5), const struct(3,'b',1.5), const struct(1,'d',1.5), const struct(1,'c',1.5), const struct(1,'b',2.5), const struct(1,'b',0.5), const struct(5,'b',1.5), const struct(1,'a',0.5), const struct(3,'b',1.5)) (type: boolean)
            TableScan [TS_0]
               alias:test_4

PREHOOK: query: select * from test_4 where struct(`my_bigint`, `my_string`, `my_double`)
IN (
struct(1L, "a", 1.5),
struct(1L, "b", -0.5),
struct(3L, "b", 1.5),
struct(1L, "d", 1.5),
struct(1L, "c", 1.5),
struct(1L, "b", 2.5),
struct(1L, "b", 0.5),
struct(5L, "b", 1.5),
struct(1L, "a", 0.5),
struct(3L, "b", 1.5)
)
PREHOOK: type: QUERY
PREHOOK: Input: default@test_4
#### A masked pattern was here ####
POSTHOOK: query: select * from test_4 where struct(`my_bigint`, `my_string`, `my_double`)
IN (
struct(1L, "a", 1.5),
struct(1L, "b", -0.5),
struct(3L, "b", 1.5),
struct(1L, "d", 1.5),
struct(1L, "c", 1.5),
struct(1L, "b", 2.5),
struct(1L, "b", 0.5),
struct(5L, "b", 1.5),
struct(1L, "a", 0.5),
struct(3L, "b", 1.5)
)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_4
#### A masked pattern was here ####
1	a	0.5
PREHOOK: query: explain
select `my_bigint`, `my_string`, `my_double`, struct(`my_bigint`, `my_string`, `my_double`)
IN (
struct(1L, "a", 1.5),
struct(1L, "b", -0.5),
struct(3L, "b", 1.5),
struct(1L, "d", 1.5),
struct(1L, "c", 1.5),
struct(1L, "b", 2.5),
struct(1L, "b", 0.5),
struct(5L, "b", 1.5),
struct(1L, "a", 0.5),
struct(3L, "b", 1.5)
) as b from test_4
PREHOOK: type: QUERY
POSTHOOK: query: explain
select `my_bigint`, `my_string`, `my_double`, struct(`my_bigint`, `my_string`, `my_double`)
IN (
struct(1L, "a", 1.5),
struct(1L, "b", -0.5),
struct(3L, "b", 1.5),
struct(1L, "d", 1.5),
struct(1L, "c", 1.5),
struct(1L, "b", 2.5),
struct(1L, "b", 0.5),
struct(5L, "b", 1.5),
struct(1L, "a", 0.5),
struct(3L, "b", 1.5)
) as b from test_4
POSTHOOK: type: QUERY
Stage-0
   Fetch Operator
      limit:-1
      Select Operator [SEL_1]
         outputColumnNames:["_col0","_col1","_col2","_col3"]
         TableScan [TS_0]
            alias:test_4

PREHOOK: query: select `my_bigint`, `my_string`, `my_double`, struct(`my_bigint`, `my_string`, `my_double`)
IN (
struct(1L, "a", 1.5),
struct(1L, "b", -0.5),
struct(3L, "b", 1.5),
struct(1L, "d", 1.5),
struct(1L, "c", 1.5),
struct(1L, "b", 2.5),
struct(1L, "b", 0.5),
struct(5L, "b", 1.5),
struct(1L, "a", 0.5),
struct(3L, "b", 1.5)
) as b from test_4
PREHOOK: type: QUERY
PREHOOK: Input: default@test_4
#### A masked pattern was here ####
POSTHOOK: query: select `my_bigint`, `my_string`, `my_double`, struct(`my_bigint`, `my_string`, `my_double`)
IN (
struct(1L, "a", 1.5),
struct(1L, "b", -0.5),
struct(3L, "b", 1.5),
struct(1L, "d", 1.5),
struct(1L, "c", 1.5),
struct(1L, "b", 2.5),
struct(1L, "b", 0.5),
struct(5L, "b", 1.5),
struct(1L, "a", 0.5),
struct(3L, "b", 1.5)
) as b from test_4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_4
#### A masked pattern was here ####
1	a	0.5	true
1	b	1.5	false
2	b	1.5	false
