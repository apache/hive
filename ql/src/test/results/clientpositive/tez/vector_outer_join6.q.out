PREHOOK: query: -- SORT_QUERY_RESULTS

create table TJOIN1_txt (RNUM int , C1 int, C2 int)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN1_txt
POSTHOOK: query: -- SORT_QUERY_RESULTS

create table TJOIN1_txt (RNUM int , C1 int, C2 int)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN1_txt
PREHOOK: query: create table TJOIN2_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN2_txt
POSTHOOK: query: create table TJOIN2_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN2_txt
PREHOOK: query: create table if not exists TJOIN3_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN3_txt
POSTHOOK: query: create table if not exists TJOIN3_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN3_txt
PREHOOK: query: create table TJOIN4_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN4_txt
POSTHOOK: query: create table TJOIN4_txt (RNUM int , C1 int, C2 char(2))
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' LINES TERMINATED BY '\n'
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN4_txt
PREHOOK: query: load data local inpath '../../data/files/TJOIN1' into table TJOIN1_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tjoin1_txt
POSTHOOK: query: load data local inpath '../../data/files/TJOIN1' into table TJOIN1_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tjoin1_txt
PREHOOK: query: load data local inpath '../../data/files/TJOIN2' into table TJOIN2_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tjoin2_txt
POSTHOOK: query: load data local inpath '../../data/files/TJOIN2' into table TJOIN2_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tjoin2_txt
PREHOOK: query: load data local inpath '../../data/files/TJOIN3' into table TJOIN3_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tjoin3_txt
POSTHOOK: query: load data local inpath '../../data/files/TJOIN3' into table TJOIN3_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tjoin3_txt
PREHOOK: query: load data local inpath '../../data/files/TJOIN4' into table TJOIN4_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tjoin4_txt
POSTHOOK: query: load data local inpath '../../data/files/TJOIN4' into table TJOIN4_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tjoin4_txt
PREHOOK: query: create table TJOIN1 stored as orc AS SELECT * FROM TJOIN1_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tjoin1_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN1
POSTHOOK: query: create table TJOIN1 stored as orc AS SELECT * FROM TJOIN1_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tjoin1_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN1
PREHOOK: query: create table TJOIN2 stored as orc AS SELECT * FROM TJOIN2_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tjoin2_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN2
POSTHOOK: query: create table TJOIN2 stored as orc AS SELECT * FROM TJOIN2_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tjoin2_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN2
PREHOOK: query: create table TJOIN3 stored as orc AS SELECT * FROM TJOIN3_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tjoin3_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN3
POSTHOOK: query: create table TJOIN3 stored as orc AS SELECT * FROM TJOIN3_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tjoin3_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN3
PREHOOK: query: create table TJOIN4 stored as orc AS SELECT * FROM TJOIN4_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@tjoin4_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@TJOIN4
POSTHOOK: query: create table TJOIN4 stored as orc AS SELECT * FROM TJOIN4_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@tjoin4_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@TJOIN4
PREHOOK: query: explain
select tj1rnum, tj2rnum, tjoin3.rnum as rnumt3 from
   (select tjoin1.rnum tj1rnum, tjoin2.rnum tj2rnum, tjoin2.c1 tj2c1 from tjoin1 left outer join tjoin2 on tjoin1.c1 = tjoin2.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
PREHOOK: type: QUERY
POSTHOOK: query: explain
select tj1rnum, tj2rnum, tjoin3.rnum as rnumt3 from
   (select tjoin1.rnum tj1rnum, tjoin2.rnum tj2rnum, tjoin2.c1 tj2c1 from tjoin1 left outer join tjoin2 on tjoin1.c1 = tjoin2.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tjoin1
                  Statistics: Num rows: 3 Data size: 32 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: rnum (type: int), c1 (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 3 Data size: 32 Basic stats: COMPLETE Column stats: NONE
                    Map Join Operator
                      condition map:
                           Left Outer Join0 to 1
                      keys:
                        0 _col1 (type: int)
                        1 _col1 (type: int)
                      outputColumnNames: _col0, _col2, _col3
                      input vertices:
                        1 Map 2
                      Statistics: Num rows: 4 Data size: 409 Basic stats: COMPLETE Column stats: NONE
                      HybridGraceHashJoin: true
                      Select Operator
                        expressions: _col0 (type: int), _col2 (type: int), _col3 (type: int)
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 4 Data size: 409 Basic stats: COMPLETE Column stats: NONE
                        Map Join Operator
                          condition map:
                               Left Outer Join0 to 1
                          keys:
                            0 _col2 (type: int)
                            1 _col1 (type: int)
                          outputColumnNames: _col0, _col1, _col3
                          input vertices:
                            1 Map 3
                          Statistics: Num rows: 4 Data size: 449 Basic stats: COMPLETE Column stats: NONE
                          HybridGraceHashJoin: true
                          Select Operator
                            expressions: _col0 (type: int), _col1 (type: int), _col3 (type: int)
                            outputColumnNames: _col0, _col1, _col2
                            Statistics: Num rows: 4 Data size: 449 Basic stats: COMPLETE Column stats: NONE
                            File Output Operator
                              compressed: false
                              Statistics: Num rows: 4 Data size: 449 Basic stats: COMPLETE Column stats: NONE
                              table:
                                  input format: org.apache.hadoop.mapred.TextInputFormat
                                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: tjoin2
                  Statistics: Num rows: 4 Data size: 372 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: rnum (type: int), c1 (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 4 Data size: 372 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col1 (type: int)
                      Statistics: Num rows: 4 Data size: 372 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: int)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: tjoin3
                  Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: rnum (type: int), c1 (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col1 (type: int)
                      Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: int)
            Execution mode: vectorized

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select tj1rnum, tj2rnum, tjoin3.rnum as rnumt3 from
   (select tjoin1.rnum tj1rnum, tjoin2.rnum tj2rnum, tjoin2.c1 tj2c1 from tjoin1 left outer join tjoin2 on tjoin1.c1 = tjoin2.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@tjoin1
PREHOOK: Input: default@tjoin2
PREHOOK: Input: default@tjoin3
#### A masked pattern was here ####
POSTHOOK: query: select tj1rnum, tj2rnum, tjoin3.rnum as rnumt3 from
   (select tjoin1.rnum tj1rnum, tjoin2.rnum tj2rnum, tjoin2.c1 tj2c1 from tjoin1 left outer join tjoin2 on tjoin1.c1 = tjoin2.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tjoin1
POSTHOOK: Input: default@tjoin2
POSTHOOK: Input: default@tjoin3
#### A masked pattern was here ####
0	0	0
0	3	0
1	NULL	NULL
2	NULL	NULL
PREHOOK: query: explain
select tj1rnum, tj2rnum as rnumt3 from
   (select tjoin1.rnum tj1rnum, tjoin2.rnum tj2rnum, tjoin2.c1 tj2c1 from tjoin1 left outer join tjoin2 on tjoin1.c1 = tjoin2.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
PREHOOK: type: QUERY
POSTHOOK: query: explain
select tj1rnum, tj2rnum as rnumt3 from
   (select tjoin1.rnum tj1rnum, tjoin2.rnum tj2rnum, tjoin2.c1 tj2c1 from tjoin1 left outer join tjoin2 on tjoin1.c1 = tjoin2.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Map 1 <- Map 2 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tjoin1
                  Statistics: Num rows: 3 Data size: 32 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: rnum (type: int), c1 (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 3 Data size: 32 Basic stats: COMPLETE Column stats: NONE
                    Map Join Operator
                      condition map:
                           Left Outer Join0 to 1
                      keys:
                        0 _col1 (type: int)
                        1 _col1 (type: int)
                      outputColumnNames: _col0, _col2, _col3
                      input vertices:
                        1 Map 2
                      Statistics: Num rows: 4 Data size: 409 Basic stats: COMPLETE Column stats: NONE
                      HybridGraceHashJoin: true
                      Select Operator
                        expressions: _col0 (type: int), _col2 (type: int), _col3 (type: int)
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 4 Data size: 409 Basic stats: COMPLETE Column stats: NONE
                        Map Join Operator
                          condition map:
                               Left Outer Join0 to 1
                          keys:
                            0 _col2 (type: int)
                            1 _col0 (type: int)
                          outputColumnNames: _col0, _col1
                          input vertices:
                            1 Map 3
                          Statistics: Num rows: 4 Data size: 449 Basic stats: COMPLETE Column stats: NONE
                          HybridGraceHashJoin: true
                          File Output Operator
                            compressed: false
                            Statistics: Num rows: 4 Data size: 449 Basic stats: COMPLETE Column stats: NONE
                            table:
                                input format: org.apache.hadoop.mapred.TextInputFormat
                                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: tjoin2
                  Statistics: Num rows: 4 Data size: 372 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: rnum (type: int), c1 (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 4 Data size: 372 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col1 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col1 (type: int)
                      Statistics: Num rows: 4 Data size: 372 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: int)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: tjoin3
                  Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: c1 (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 2 Data size: 188 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select tj1rnum, tj2rnum as rnumt3 from
   (select tjoin1.rnum tj1rnum, tjoin2.rnum tj2rnum, tjoin2.c1 tj2c1 from tjoin1 left outer join tjoin2 on tjoin1.c1 = tjoin2.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
PREHOOK: type: QUERY
PREHOOK: Input: default@tjoin1
PREHOOK: Input: default@tjoin2
PREHOOK: Input: default@tjoin3
#### A masked pattern was here ####
POSTHOOK: query: select tj1rnum, tj2rnum as rnumt3 from
   (select tjoin1.rnum tj1rnum, tjoin2.rnum tj2rnum, tjoin2.c1 tj2c1 from tjoin1 left outer join tjoin2 on tjoin1.c1 = tjoin2.c1 ) tj left outer join tjoin3 on tj2c1 = tjoin3.c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tjoin1
POSTHOOK: Input: default@tjoin2
POSTHOOK: Input: default@tjoin3
#### A masked pattern was here ####
0	0
0	3
1	NULL
2	NULL
