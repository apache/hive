PREHOOK: query: create table test1 (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test1
POSTHOOK: query: create table test1 (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test1
PREHOOK: query: insert into test1 partition (dt='20230817') values ("val1"), ("val2")
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@test1@dt=20230817
POSTHOOK: query: insert into test1 partition (dt='20230817') values ("val1"), ("val2")
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@test1@dt=20230817
POSTHOOK: Lineage: test1 PARTITION(dt=20230817).val SCRIPT []
PREHOOK: query: create table union_target_nonacid_directinsert_flattened (val string) partitioned by (dt string) stored as avro
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@union_target_nonacid_directinsert_flattened
POSTHOOK: query: create table union_target_nonacid_directinsert_flattened (val string) partitioned by (dt string) stored as avro
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_target_nonacid_directinsert_flattened
PREHOOK: query: explain insert overwrite table union_target_nonacid_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_nonacid_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_nonacid_directinsert_flattened
PREHOOK: Output: default@union_target_nonacid_directinsert_flattened@dt=20230817
POSTHOOK: query: explain insert overwrite table union_target_nonacid_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_nonacid_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_nonacid_directinsert_flattened
POSTHOOK: Output: default@union_target_nonacid_directinsert_flattened@dt=20230817
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 5 <- Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.union_target_nonacid_directinsert_flattened"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_63]
                Select Operator [SEL_62] (rows=1 width=358)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                  Group By Operator [GBY_61] (rows=1 width=264)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(VALUE._col0)","avg(VALUE._col1)","count(VALUE._col2)","count(VALUE._col3)","compute_bit_vector_hll(VALUE._col4)"],keys:KEY._col0
                  <-Union 2 [SIMPLE_EDGE]
                    <-Map 1 [CONTAINS] vectorized
                      File Output Operator [FS_57]
                        table:{"name:":"default.union_target_nonacid_directinsert_flattened"}
                        Map Join Operator [MAPJOIN_56] (rows=2 width=84)
                          Conds:SEL_55._col0=RS_53._col0(Left Outer),Output:["_col0"]
                        <-Map 4 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_53]
                            PartitionCols:_col0
                            Select Operator [SEL_52] (rows=2 width=88)
                              Output:["_col0"]
                              Filter Operator [FIL_51] (rows=2 width=88)
                                predicate:val is not null
                                TableScan [TS_3] (rows=2 width=88)
                                  default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                        <-Select Operator [SEL_55] (rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_54] (rows=1 width=268)
                              predicate:(dt = '20230816')
                              TableScan [TS_34] (rows=1 width=268)
                                default@union_target_nonacid_directinsert_flattened,union_target_nonacid_directinsert_flattened,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_60]
                        PartitionCols:_col0
                        Group By Operator [GBY_59] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_58] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Map Join Operator [MAPJOIN_56]
                    <-Map 5 [CONTAINS] vectorized
                      File Output Operator [FS_65]
                        table:{"name:":"default.union_target_nonacid_directinsert_flattened"}
                        Select Operator [SEL_64] (rows=2 width=88)
                          Output:["_col0"]
                          TableScan [TS_44] (rows=2 width=88)
                            default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_68]
                        PartitionCols:_col0
                        Group By Operator [GBY_67] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_66] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Select Operator [SEL_64]

PREHOOK: query: insert overwrite table union_target_nonacid_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_nonacid_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_nonacid_directinsert_flattened
PREHOOK: Output: default@union_target_nonacid_directinsert_flattened@dt=20230817
POSTHOOK: query: insert overwrite table union_target_nonacid_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_nonacid_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_nonacid_directinsert_flattened
POSTHOOK: Output: default@union_target_nonacid_directinsert_flattened@dt=20230817
POSTHOOK: Lineage: union_target_nonacid_directinsert_flattened PARTITION(dt=20230817).val EXPRESSION [(union_target_nonacid_directinsert_flattened)union_target_nonacid_directinsert_flattened.FieldSchema(name:val, type:string, comment:), (test1)test1.FieldSchema(name:val, type:string, comment:), ]
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###        311 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: select * from union_target_nonacid_directinsert_flattened
PREHOOK: type: QUERY
PREHOOK: Input: default@union_target_nonacid_directinsert_flattened
PREHOOK: Input: default@union_target_nonacid_directinsert_flattened@dt=20230817
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from union_target_nonacid_directinsert_flattened
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_target_nonacid_directinsert_flattened
POSTHOOK: Input: default@union_target_nonacid_directinsert_flattened@dt=20230817
POSTHOOK: Output: hdfs://### HDFS PATH ###
val1	20230817
val2	20230817
PREHOOK: query: create table union_target_mm_directinsert_flattened (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@union_target_mm_directinsert_flattened
POSTHOOK: query: create table union_target_mm_directinsert_flattened (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_target_mm_directinsert_flattened
PREHOOK: query: explain insert overwrite table union_target_mm_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_mm_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_mm_directinsert_flattened
PREHOOK: Output: default@union_target_mm_directinsert_flattened@dt=20230817
POSTHOOK: query: explain insert overwrite table union_target_mm_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_mm_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_mm_directinsert_flattened
POSTHOOK: Output: default@union_target_mm_directinsert_flattened@dt=20230817
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 5 <- Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.union_target_mm_directinsert_flattened"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_63]
                Select Operator [SEL_62] (rows=1 width=358)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                  Group By Operator [GBY_61] (rows=1 width=264)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(VALUE._col0)","avg(VALUE._col1)","count(VALUE._col2)","count(VALUE._col3)","compute_bit_vector_hll(VALUE._col4)"],keys:KEY._col0
                  <-Union 2 [SIMPLE_EDGE]
                    <-Map 1 [CONTAINS] vectorized
                      File Output Operator [FS_57]
                        table:{"name:":"default.union_target_mm_directinsert_flattened"}
                        Map Join Operator [MAPJOIN_56] (rows=2 width=84)
                          Conds:SEL_55._col0=RS_53._col0(Left Outer),Output:["_col0"]
                        <-Map 4 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_53]
                            PartitionCols:_col0
                            Select Operator [SEL_52] (rows=2 width=88)
                              Output:["_col0"]
                              Filter Operator [FIL_51] (rows=2 width=88)
                                predicate:val is not null
                                TableScan [TS_3] (rows=2 width=88)
                                  default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                        <-Select Operator [SEL_55] (rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_54] (rows=1 width=268)
                              predicate:(dt = '20230816')
                              TableScan [TS_34] (rows=1 width=268)
                                default@union_target_mm_directinsert_flattened,union_target_mm_directinsert_flattened, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_60]
                        PartitionCols:_col0
                        Group By Operator [GBY_59] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_58] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Map Join Operator [MAPJOIN_56]
                    <-Map 5 [CONTAINS] vectorized
                      File Output Operator [FS_65]
                        table:{"name:":"default.union_target_mm_directinsert_flattened"}
                        Select Operator [SEL_64] (rows=2 width=88)
                          Output:["_col0"]
                          TableScan [TS_44] (rows=2 width=88)
                            default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_68]
                        PartitionCols:_col0
                        Group By Operator [GBY_67] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_66] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Select Operator [SEL_64]

PREHOOK: query: insert overwrite table union_target_mm_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_mm_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_mm_directinsert_flattened
PREHOOK: Output: default@union_target_mm_directinsert_flattened@dt=20230817
POSTHOOK: query: insert overwrite table union_target_mm_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_mm_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_mm_directinsert_flattened
POSTHOOK: Output: default@union_target_mm_directinsert_flattened@dt=20230817
POSTHOOK: Lineage: union_target_mm_directinsert_flattened PARTITION(dt=20230817).val EXPRESSION [(union_target_mm_directinsert_flattened)union_target_mm_directinsert_flattened.FieldSchema(name:val, type:string, comment:), (test1)test1.FieldSchema(name:val, type:string, comment:), ]
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxrwxrwx   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###        306 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: select * from union_target_mm_directinsert_flattened
PREHOOK: type: QUERY
PREHOOK: Input: default@union_target_mm_directinsert_flattened
PREHOOK: Input: default@union_target_mm_directinsert_flattened@dt=20230817
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from union_target_mm_directinsert_flattened
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_target_mm_directinsert_flattened
POSTHOOK: Input: default@union_target_mm_directinsert_flattened@dt=20230817
POSTHOOK: Output: hdfs://### HDFS PATH ###
val1	20230817
val2	20230817
PREHOOK: query: create table union_target_acid_directinsert_flattened (val string) partitioned by (dt string) stored as ORC TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@union_target_acid_directinsert_flattened
POSTHOOK: query: create table union_target_acid_directinsert_flattened (val string) partitioned by (dt string) stored as ORC TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_target_acid_directinsert_flattened
PREHOOK: query: explain insert into table union_target_acid_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_acid_directinsert_flattened
PREHOOK: Output: default@union_target_acid_directinsert_flattened@dt=20230817
POSTHOOK: query: explain insert into table union_target_acid_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_acid_directinsert_flattened
POSTHOOK: Output: default@union_target_acid_directinsert_flattened@dt=20230817
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 5 <- Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.union_target_acid_directinsert_flattened"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_63]
                Select Operator [SEL_62] (rows=1 width=358)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                  Group By Operator [GBY_61] (rows=1 width=264)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(VALUE._col0)","avg(VALUE._col1)","count(VALUE._col2)","count(VALUE._col3)","compute_bit_vector_hll(VALUE._col4)"],keys:KEY._col0
                  <-Union 2 [SIMPLE_EDGE]
                    <-Map 1 [CONTAINS] vectorized
                      File Output Operator [FS_57]
                        table:{"name:":"default.union_target_acid_directinsert_flattened"}
                        Map Join Operator [MAPJOIN_56] (rows=2 width=84)
                          Conds:SEL_55._col0=RS_53._col0(Left Outer),Output:["_col0"]
                        <-Map 4 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_53]
                            PartitionCols:_col0
                            Select Operator [SEL_52] (rows=2 width=88)
                              Output:["_col0"]
                              Filter Operator [FIL_51] (rows=2 width=88)
                                predicate:val is not null
                                TableScan [TS_3] (rows=2 width=88)
                                  default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                        <-Select Operator [SEL_55] (rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_54] (rows=1 width=268)
                              predicate:(dt = '20230816')
                              TableScan [TS_34] (rows=1 width=268)
                                default@union_target_acid_directinsert_flattened,union_target_acid_directinsert_flattened, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_60]
                        PartitionCols:_col0
                        Group By Operator [GBY_59] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_58] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Map Join Operator [MAPJOIN_56]
                    <-Map 5 [CONTAINS] vectorized
                      File Output Operator [FS_65]
                        table:{"name:":"default.union_target_acid_directinsert_flattened"}
                        Select Operator [SEL_64] (rows=2 width=88)
                          Output:["_col0"]
                          TableScan [TS_44] (rows=2 width=88)
                            default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_68]
                        PartitionCols:_col0
                        Group By Operator [GBY_67] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_66] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Select Operator [SEL_64]

PREHOOK: query: insert into table union_target_acid_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_acid_directinsert_flattened
PREHOOK: Output: default@union_target_acid_directinsert_flattened@dt=20230817
POSTHOOK: query: insert into table union_target_acid_directinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_directinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_acid_directinsert_flattened
POSTHOOK: Output: default@union_target_acid_directinsert_flattened@dt=20230817
POSTHOOK: Lineage: union_target_acid_directinsert_flattened PARTITION(dt=20230817).val EXPRESSION [(union_target_acid_directinsert_flattened)union_target_acid_directinsert_flattened.FieldSchema(name:val, type:string, comment:null), (test1)test1.FieldSchema(name:val, type:string, comment:), ]
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###          1 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###        699 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: select * from union_target_acid_directinsert_flattened
PREHOOK: type: QUERY
PREHOOK: Input: default@union_target_acid_directinsert_flattened
PREHOOK: Input: default@union_target_acid_directinsert_flattened@dt=20230817
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from union_target_acid_directinsert_flattened
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_target_acid_directinsert_flattened
POSTHOOK: Input: default@union_target_acid_directinsert_flattened@dt=20230817
POSTHOOK: Output: hdfs://### HDFS PATH ###
val1	20230817
val2	20230817
PREHOOK: query: create table union_target_mm_flattened (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@union_target_mm_flattened
POSTHOOK: query: create table union_target_mm_flattened (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_target_mm_flattened
PREHOOK: query: explain insert overwrite table union_target_mm_flattened partition (dt='20230817') select ful.* from (select val from union_target_mm_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_mm_flattened
PREHOOK: Output: default@union_target_mm_flattened@dt=20230817
POSTHOOK: query: explain insert overwrite table union_target_mm_flattened partition (dt='20230817') select ful.* from (select val from union_target_mm_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_mm_flattened
POSTHOOK: Output: default@union_target_mm_flattened@dt=20230817
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 5 <- Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.union_target_mm_flattened"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_63]
                Select Operator [SEL_62] (rows=1 width=358)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                  Group By Operator [GBY_61] (rows=1 width=264)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(VALUE._col0)","avg(VALUE._col1)","count(VALUE._col2)","count(VALUE._col3)","compute_bit_vector_hll(VALUE._col4)"],keys:KEY._col0
                  <-Union 2 [SIMPLE_EDGE]
                    <-Map 1 [CONTAINS] vectorized
                      File Output Operator [FS_57]
                        table:{"name:":"default.union_target_mm_flattened"}
                        Map Join Operator [MAPJOIN_56] (rows=2 width=84)
                          Conds:SEL_55._col0=RS_53._col0(Left Outer),Output:["_col0"]
                        <-Map 4 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_53]
                            PartitionCols:_col0
                            Select Operator [SEL_52] (rows=2 width=88)
                              Output:["_col0"]
                              Filter Operator [FIL_51] (rows=2 width=88)
                                predicate:val is not null
                                TableScan [TS_3] (rows=2 width=88)
                                  default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                        <-Select Operator [SEL_55] (rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_54] (rows=1 width=268)
                              predicate:(dt = '20230816')
                              TableScan [TS_34] (rows=1 width=268)
                                default@union_target_mm_flattened,union_target_mm_flattened, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_60]
                        PartitionCols:_col0
                        Group By Operator [GBY_59] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_58] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Map Join Operator [MAPJOIN_56]
                    <-Map 5 [CONTAINS] vectorized
                      File Output Operator [FS_65]
                        table:{"name:":"default.union_target_mm_flattened"}
                        Select Operator [SEL_64] (rows=2 width=88)
                          Output:["_col0"]
                          TableScan [TS_44] (rows=2 width=88)
                            default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_68]
                        PartitionCols:_col0
                        Group By Operator [GBY_67] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_66] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Select Operator [SEL_64]

PREHOOK: query: insert overwrite table union_target_mm_flattened partition (dt='20230817') select ful.* from (select val from union_target_mm_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_mm_flattened
PREHOOK: Output: default@union_target_mm_flattened@dt=20230817
POSTHOOK: query: insert overwrite table union_target_mm_flattened partition (dt='20230817') select ful.* from (select val from union_target_mm_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_mm_flattened
POSTHOOK: Output: default@union_target_mm_flattened@dt=20230817
POSTHOOK: Lineage: union_target_mm_flattened PARTITION(dt=20230817).val EXPRESSION [(union_target_mm_flattened)union_target_mm_flattened.FieldSchema(name:val, type:string, comment:), (test1)test1.FieldSchema(name:val, type:string, comment:), ]
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxrwxrwx   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###        293 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: select * from union_target_mm_flattened
PREHOOK: type: QUERY
PREHOOK: Input: default@union_target_mm_flattened
PREHOOK: Input: default@union_target_mm_flattened@dt=20230817
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from union_target_mm_flattened
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_target_mm_flattened
POSTHOOK: Input: default@union_target_mm_flattened@dt=20230817
POSTHOOK: Output: hdfs://### HDFS PATH ###
val1	20230817
val2	20230817
PREHOOK: query: create table union_target_acid_flattened (val string) partitioned by (dt string) stored as ORC TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@union_target_acid_flattened
POSTHOOK: query: create table union_target_acid_flattened (val string) partitioned by (dt string) stored as ORC TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_target_acid_flattened
PREHOOK: query: explain insert into table union_target_acid_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_acid_flattened
PREHOOK: Output: default@union_target_acid_flattened@dt=20230817
POSTHOOK: query: explain insert into table union_target_acid_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_acid_flattened
POSTHOOK: Output: default@union_target_acid_flattened@dt=20230817
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 5 <- Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.union_target_acid_flattened"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_63]
                Select Operator [SEL_62] (rows=1 width=358)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                  Group By Operator [GBY_61] (rows=1 width=264)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(VALUE._col0)","avg(VALUE._col1)","count(VALUE._col2)","count(VALUE._col3)","compute_bit_vector_hll(VALUE._col4)"],keys:KEY._col0
                  <-Union 2 [SIMPLE_EDGE]
                    <-Map 1 [CONTAINS] vectorized
                      File Output Operator [FS_57]
                        table:{"name:":"default.union_target_acid_flattened"}
                        Map Join Operator [MAPJOIN_56] (rows=2 width=84)
                          Conds:SEL_55._col0=RS_53._col0(Left Outer),Output:["_col0"]
                        <-Map 4 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_53]
                            PartitionCols:_col0
                            Select Operator [SEL_52] (rows=2 width=88)
                              Output:["_col0"]
                              Filter Operator [FIL_51] (rows=2 width=88)
                                predicate:val is not null
                                TableScan [TS_3] (rows=2 width=88)
                                  default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                        <-Select Operator [SEL_55] (rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_54] (rows=1 width=268)
                              predicate:(dt = '20230816')
                              TableScan [TS_34] (rows=1 width=268)
                                default@union_target_acid_flattened,union_target_acid_flattened, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_60]
                        PartitionCols:_col0
                        Group By Operator [GBY_59] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_58] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Map Join Operator [MAPJOIN_56]
                    <-Map 5 [CONTAINS] vectorized
                      File Output Operator [FS_65]
                        table:{"name:":"default.union_target_acid_flattened"}
                        Select Operator [SEL_64] (rows=2 width=88)
                          Output:["_col0"]
                          TableScan [TS_44] (rows=2 width=88)
                            default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_68]
                        PartitionCols:_col0
                        Group By Operator [GBY_67] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_66] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Select Operator [SEL_64]

PREHOOK: query: insert into table union_target_acid_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_acid_flattened
PREHOOK: Output: default@union_target_acid_flattened@dt=20230817
POSTHOOK: query: insert into table union_target_acid_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_acid_flattened
POSTHOOK: Output: default@union_target_acid_flattened@dt=20230817
POSTHOOK: Lineage: union_target_acid_flattened PARTITION(dt=20230817).val EXPRESSION [(union_target_acid_flattened)union_target_acid_flattened.FieldSchema(name:val, type:string, comment:null), (test1)test1.FieldSchema(name:val, type:string, comment:), ]
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###          1 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###        699 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: select * from union_target_acid_flattened
PREHOOK: type: QUERY
PREHOOK: Input: default@union_target_acid_flattened
PREHOOK: Input: default@union_target_acid_flattened@dt=20230817
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from union_target_acid_flattened
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_target_acid_flattened
POSTHOOK: Input: default@union_target_acid_flattened@dt=20230817
POSTHOOK: Output: hdfs://### HDFS PATH ###
val1	20230817
val2	20230817
PREHOOK: query: create table union_target_mm_unflattened (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@union_target_mm_unflattened
POSTHOOK: query: create table union_target_mm_unflattened (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_target_mm_unflattened
PREHOOK: query: explain insert overwrite table union_target_mm_unflattened partition (dt='20230817') select ful.* from (select val from union_target_mm_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_mm_unflattened
PREHOOK: Output: default@union_target_mm_unflattened@dt=20230817
POSTHOOK: query: explain insert overwrite table union_target_mm_unflattened partition (dt='20230817') select ful.* from (select val from union_target_mm_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_mm_unflattened
POSTHOOK: Output: default@union_target_mm_unflattened@dt=20230817
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 5 <- Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.union_target_mm_unflattened"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_63]
                Select Operator [SEL_62] (rows=1 width=358)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                  Group By Operator [GBY_61] (rows=1 width=264)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(VALUE._col0)","avg(VALUE._col1)","count(VALUE._col2)","count(VALUE._col3)","compute_bit_vector_hll(VALUE._col4)"],keys:KEY._col0
                  <-Union 2 [SIMPLE_EDGE]
                    <-Map 1 [CONTAINS] vectorized
                      File Output Operator [FS_57]
                        table:{"name:":"default.union_target_mm_unflattened"}
                        Map Join Operator [MAPJOIN_56] (rows=2 width=84)
                          Conds:SEL_55._col0=RS_53._col0(Left Outer),Output:["_col0"]
                        <-Map 4 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_53]
                            PartitionCols:_col0
                            Select Operator [SEL_52] (rows=2 width=88)
                              Output:["_col0"]
                              Filter Operator [FIL_51] (rows=2 width=88)
                                predicate:val is not null
                                TableScan [TS_3] (rows=2 width=88)
                                  default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                        <-Select Operator [SEL_55] (rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_54] (rows=1 width=268)
                              predicate:(dt = '20230816')
                              TableScan [TS_34] (rows=1 width=268)
                                default@union_target_mm_unflattened,union_target_mm_unflattened, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_60]
                        PartitionCols:_col0
                        Group By Operator [GBY_59] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_58] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Map Join Operator [MAPJOIN_56]
                    <-Map 5 [CONTAINS] vectorized
                      File Output Operator [FS_65]
                        table:{"name:":"default.union_target_mm_unflattened"}
                        Select Operator [SEL_64] (rows=2 width=88)
                          Output:["_col0"]
                          TableScan [TS_44] (rows=2 width=88)
                            default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_68]
                        PartitionCols:_col0
                        Group By Operator [GBY_67] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_66] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Select Operator [SEL_64]

PREHOOK: query: insert overwrite table union_target_mm_unflattened partition (dt='20230817') select ful.* from (select val from union_target_mm_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_mm_unflattened
PREHOOK: Output: default@union_target_mm_unflattened@dt=20230817
POSTHOOK: query: insert overwrite table union_target_mm_unflattened partition (dt='20230817') select ful.* from (select val from union_target_mm_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_mm_unflattened
POSTHOOK: Output: default@union_target_mm_unflattened@dt=20230817
POSTHOOK: Lineage: union_target_mm_unflattened PARTITION(dt=20230817).val EXPRESSION [(union_target_mm_unflattened)union_target_mm_unflattened.FieldSchema(name:val, type:string, comment:), (test1)test1.FieldSchema(name:val, type:string, comment:), ]
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxrwxrwx   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxrwxrwx   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###        295 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: select * from union_target_mm_unflattened
PREHOOK: type: QUERY
PREHOOK: Input: default@union_target_mm_unflattened
PREHOOK: Input: default@union_target_mm_unflattened@dt=20230817
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from union_target_mm_unflattened
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_target_mm_unflattened
POSTHOOK: Input: default@union_target_mm_unflattened@dt=20230817
POSTHOOK: Output: hdfs://### HDFS PATH ###
val1	20230817
val2	20230817
PREHOOK: query: create table union_target_acid_unflattened (val string) partitioned by (dt string) stored as ORC TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@union_target_acid_unflattened
POSTHOOK: query: create table union_target_acid_unflattened (val string) partitioned by (dt string) stored as ORC TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_target_acid_unflattened
PREHOOK: query: explain insert into table union_target_acid_unflattened partition (dt='20230817') select ful.* from (select val from union_target_acid_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_acid_unflattened
PREHOOK: Output: default@union_target_acid_unflattened@dt=20230817
POSTHOOK: query: explain insert into table union_target_acid_unflattened partition (dt='20230817') select ful.* from (select val from union_target_acid_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_acid_unflattened
POSTHOOK: Output: default@union_target_acid_unflattened@dt=20230817
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 5 <- Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.union_target_acid_unflattened"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_63]
                Select Operator [SEL_62] (rows=1 width=358)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                  Group By Operator [GBY_61] (rows=1 width=264)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(VALUE._col0)","avg(VALUE._col1)","count(VALUE._col2)","count(VALUE._col3)","compute_bit_vector_hll(VALUE._col4)"],keys:KEY._col0
                  <-Union 2 [SIMPLE_EDGE]
                    <-Map 1 [CONTAINS] vectorized
                      File Output Operator [FS_57]
                        table:{"name:":"default.union_target_acid_unflattened"}
                        Map Join Operator [MAPJOIN_56] (rows=2 width=84)
                          Conds:SEL_55._col0=RS_53._col0(Left Outer),Output:["_col0"]
                        <-Map 4 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_53]
                            PartitionCols:_col0
                            Select Operator [SEL_52] (rows=2 width=88)
                              Output:["_col0"]
                              Filter Operator [FIL_51] (rows=2 width=88)
                                predicate:val is not null
                                TableScan [TS_3] (rows=2 width=88)
                                  default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                        <-Select Operator [SEL_55] (rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_54] (rows=1 width=268)
                              predicate:(dt = '20230816')
                              TableScan [TS_34] (rows=1 width=268)
                                default@union_target_acid_unflattened,union_target_acid_unflattened, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_60]
                        PartitionCols:_col0
                        Group By Operator [GBY_59] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_58] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Map Join Operator [MAPJOIN_56]
                    <-Map 5 [CONTAINS] vectorized
                      File Output Operator [FS_65]
                        table:{"name:":"default.union_target_acid_unflattened"}
                        Select Operator [SEL_64] (rows=2 width=88)
                          Output:["_col0"]
                          TableScan [TS_44] (rows=2 width=88)
                            default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_68]
                        PartitionCols:_col0
                        Group By Operator [GBY_67] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_66] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Select Operator [SEL_64]

PREHOOK: query: insert into table union_target_acid_unflattened partition (dt='20230817') select ful.* from (select val from union_target_acid_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_acid_unflattened
PREHOOK: Output: default@union_target_acid_unflattened@dt=20230817
POSTHOOK: query: insert into table union_target_acid_unflattened partition (dt='20230817') select ful.* from (select val from union_target_acid_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_acid_unflattened
POSTHOOK: Output: default@union_target_acid_unflattened@dt=20230817
POSTHOOK: Lineage: union_target_acid_unflattened PARTITION(dt=20230817).val EXPRESSION [(union_target_acid_unflattened)union_target_acid_unflattened.FieldSchema(name:val, type:string, comment:null), (test1)test1.FieldSchema(name:val, type:string, comment:), ]
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###          1 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###        699 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: select * from union_target_acid_unflattened
PREHOOK: type: QUERY
PREHOOK: Input: default@union_target_acid_unflattened
PREHOOK: Input: default@union_target_acid_unflattened@dt=20230817
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from union_target_acid_unflattened
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_target_acid_unflattened
POSTHOOK: Input: default@union_target_acid_unflattened@dt=20230817
POSTHOOK: Output: hdfs://### HDFS PATH ###
val1	20230817
val2	20230817
PREHOOK: query: create table union_target_mm_directinsert_unflattened (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@union_target_mm_directinsert_unflattened
POSTHOOK: query: create table union_target_mm_directinsert_unflattened (val string) partitioned by (dt string) stored as avro TBLPROPERTIES ('transactional'='true', 'transactional_properties'='insert_only')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_target_mm_directinsert_unflattened
PREHOOK: query: explain insert overwrite table union_target_mm_directinsert_unflattened partition (dt='20230817') select ful.* from (select val from union_target_mm_directinsert_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_mm_directinsert_unflattened
PREHOOK: Output: default@union_target_mm_directinsert_unflattened@dt=20230817
POSTHOOK: query: explain insert overwrite table union_target_mm_directinsert_unflattened partition (dt='20230817') select ful.* from (select val from union_target_mm_directinsert_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_mm_directinsert_unflattened
POSTHOOK: Output: default@union_target_mm_directinsert_unflattened@dt=20230817
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 5 <- Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.union_target_mm_directinsert_unflattened"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_63]
                Select Operator [SEL_62] (rows=1 width=358)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                  Group By Operator [GBY_61] (rows=1 width=264)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(VALUE._col0)","avg(VALUE._col1)","count(VALUE._col2)","count(VALUE._col3)","compute_bit_vector_hll(VALUE._col4)"],keys:KEY._col0
                  <-Union 2 [SIMPLE_EDGE]
                    <-Map 1 [CONTAINS] vectorized
                      File Output Operator [FS_57]
                        table:{"name:":"default.union_target_mm_directinsert_unflattened"}
                        Map Join Operator [MAPJOIN_56] (rows=2 width=84)
                          Conds:SEL_55._col0=RS_53._col0(Left Outer),Output:["_col0"]
                        <-Map 4 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_53]
                            PartitionCols:_col0
                            Select Operator [SEL_52] (rows=2 width=88)
                              Output:["_col0"]
                              Filter Operator [FIL_51] (rows=2 width=88)
                                predicate:val is not null
                                TableScan [TS_3] (rows=2 width=88)
                                  default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                        <-Select Operator [SEL_55] (rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_54] (rows=1 width=268)
                              predicate:(dt = '20230816')
                              TableScan [TS_34] (rows=1 width=268)
                                default@union_target_mm_directinsert_unflattened,union_target_mm_directinsert_unflattened, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_60]
                        PartitionCols:_col0
                        Group By Operator [GBY_59] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_58] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Map Join Operator [MAPJOIN_56]
                    <-Map 5 [CONTAINS] vectorized
                      File Output Operator [FS_65]
                        table:{"name:":"default.union_target_mm_directinsert_unflattened"}
                        Select Operator [SEL_64] (rows=2 width=88)
                          Output:["_col0"]
                          TableScan [TS_44] (rows=2 width=88)
                            default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_68]
                        PartitionCols:_col0
                        Group By Operator [GBY_67] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_66] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Select Operator [SEL_64]

PREHOOK: query: insert overwrite table union_target_mm_directinsert_unflattened partition (dt='20230817') select ful.* from (select val from union_target_mm_directinsert_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_mm_directinsert_unflattened
PREHOOK: Output: default@union_target_mm_directinsert_unflattened@dt=20230817
POSTHOOK: query: insert overwrite table union_target_mm_directinsert_unflattened partition (dt='20230817') select ful.* from (select val from union_target_mm_directinsert_unflattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_mm_directinsert_unflattened
POSTHOOK: Output: default@union_target_mm_directinsert_unflattened@dt=20230817
POSTHOOK: Lineage: union_target_mm_directinsert_unflattened PARTITION(dt=20230817).val EXPRESSION [(union_target_mm_directinsert_unflattened)union_target_mm_directinsert_unflattened.FieldSchema(name:val, type:string, comment:), (test1)test1.FieldSchema(name:val, type:string, comment:), ]
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxrwxrwx   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxrwxrwx   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###        308 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: select * from union_target_mm_directinsert_unflattened
PREHOOK: type: QUERY
PREHOOK: Input: default@union_target_mm_directinsert_unflattened
PREHOOK: Input: default@union_target_mm_directinsert_unflattened@dt=20230817
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from union_target_mm_directinsert_unflattened
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_target_mm_directinsert_unflattened
POSTHOOK: Input: default@union_target_mm_directinsert_unflattened@dt=20230817
POSTHOOK: Output: hdfs://### HDFS PATH ###
val1	20230817
val2	20230817
PREHOOK: query: create table union_target_acid_nondirectinsert_flattened (val string) partitioned by (dt string) stored as ORC TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@union_target_acid_nondirectinsert_flattened
POSTHOOK: query: create table union_target_acid_nondirectinsert_flattened (val string) partitioned by (dt string) stored as ORC TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_target_acid_nondirectinsert_flattened
PREHOOK: query: explain insert into table union_target_acid_nondirectinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_nondirectinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_acid_nondirectinsert_flattened
PREHOOK: Output: default@union_target_acid_nondirectinsert_flattened@dt=20230817
POSTHOOK: query: explain insert into table union_target_acid_nondirectinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_nondirectinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_acid_nondirectinsert_flattened
POSTHOOK: Output: default@union_target_acid_nondirectinsert_flattened@dt=20230817
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 5 <- Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.union_target_acid_nondirectinsert_flattened"}
        Stage-2
          Dependency Collection{}
            Stage-1
              Reducer 3 vectorized
              File Output Operator [FS_63]
                Select Operator [SEL_62] (rows=1 width=358)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                  Group By Operator [GBY_61] (rows=1 width=264)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(VALUE._col0)","avg(VALUE._col1)","count(VALUE._col2)","count(VALUE._col3)","compute_bit_vector_hll(VALUE._col4)"],keys:KEY._col0
                  <-Union 2 [SIMPLE_EDGE]
                    <-Map 1 [CONTAINS] vectorized
                      File Output Operator [FS_57]
                        table:{"name:":"default.union_target_acid_nondirectinsert_flattened"}
                        Map Join Operator [MAPJOIN_56] (rows=2 width=84)
                          Conds:SEL_55._col0=RS_53._col0(Left Outer),Output:["_col0"]
                        <-Map 4 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_53]
                            PartitionCols:_col0
                            Select Operator [SEL_52] (rows=2 width=88)
                              Output:["_col0"]
                              Filter Operator [FIL_51] (rows=2 width=88)
                                predicate:val is not null
                                TableScan [TS_3] (rows=2 width=88)
                                  default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                        <-Select Operator [SEL_55] (rows=1 width=84)
                            Output:["_col0"]
                            Filter Operator [FIL_54] (rows=1 width=268)
                              predicate:(dt = '20230816')
                              TableScan [TS_34] (rows=1 width=268)
                                default@union_target_acid_nondirectinsert_flattened,union_target_acid_nondirectinsert_flattened, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_60]
                        PartitionCols:_col0
                        Group By Operator [GBY_59] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_58] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Map Join Operator [MAPJOIN_56]
                    <-Map 5 [CONTAINS] vectorized
                      File Output Operator [FS_65]
                        table:{"name:":"default.union_target_acid_nondirectinsert_flattened"}
                        Select Operator [SEL_64] (rows=2 width=88)
                          Output:["_col0"]
                          TableScan [TS_44] (rows=2 width=88)
                            default@test1,test1, transactional table,Tbl:COMPLETE,Col:COMPLETE,Output:["val"]
                      Reduce Output Operator [RS_68]
                        PartitionCols:_col0
                        Group By Operator [GBY_67] (rows=1 width=332)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["max(length(val))","avg(COALESCE(length(val),0))","count(1)","count(val)","compute_bit_vector_hll(val)"],keys:dt
                          Select Operator [SEL_66] (rows=4 width=180)
                            Output:["val","dt"]
                             Please refer to the previous Select Operator [SEL_64]

PREHOOK: query: insert into table union_target_acid_nondirectinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_nondirectinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test1@dt=20230817
PREHOOK: Input: default@union_target_acid_nondirectinsert_flattened
PREHOOK: Output: default@union_target_acid_nondirectinsert_flattened@dt=20230817
POSTHOOK: query: insert into table union_target_acid_nondirectinsert_flattened partition (dt='20230817') select ful.* from (select val from union_target_acid_nondirectinsert_flattened where dt='20230816') ful left join (select val from test1 where dt='20230817') inc on ful.val=inc.val union all select test1.val from test1 where dt='20230817'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test1@dt=20230817
POSTHOOK: Input: default@union_target_acid_nondirectinsert_flattened
POSTHOOK: Output: default@union_target_acid_nondirectinsert_flattened@dt=20230817
POSTHOOK: Lineage: union_target_acid_nondirectinsert_flattened PARTITION(dt=20230817).val EXPRESSION [(union_target_acid_nondirectinsert_flattened)union_target_acid_nondirectinsert_flattened.FieldSchema(name:val, type:string, comment:null), (test1)test1.FieldSchema(name:val, type:string, comment:), ]
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
drwxr-xr-x   - ### USER ### ### GROUP ###          0 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###          1 ### HDFS DATE ### hdfs://### HDFS PATH ###
-rw-rw-rw-   3 ### USER ### ### GROUP ###        699 ### HDFS DATE ### hdfs://### HDFS PATH ###
PREHOOK: query: select * from union_target_acid_nondirectinsert_flattened
PREHOOK: type: QUERY
PREHOOK: Input: default@union_target_acid_nondirectinsert_flattened
PREHOOK: Input: default@union_target_acid_nondirectinsert_flattened@dt=20230817
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from union_target_acid_nondirectinsert_flattened
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_target_acid_nondirectinsert_flattened
POSTHOOK: Input: default@union_target_acid_nondirectinsert_flattened@dt=20230817
POSTHOOK: Output: hdfs://### HDFS PATH ###
val1	20230817
val2	20230817
