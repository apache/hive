PREHOOK: query: select key, value
FROM srcpart LATERAL VIEW explode(array(1,2,3)) myTable AS myCol
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select key, value
FROM srcpart LATERAL VIEW explode(array(1,2,3)) myTable AS myCol
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: explain analyze select key, value
FROM srcpart LATERAL VIEW explode(array(1,2,3)) myTable AS myCol
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze select key, value
FROM srcpart LATERAL VIEW explode(array(1,2,3)) myTable AS myCol
POSTHOOK: type: QUERY
Plan not optimized by CBO.

Stage-0
  Fetch Operator
    limit:-1
    Select Operator [SEL_6]
      Output:["_col0","_col1"]
      Lateral View Join Operator [LVJ_5]
        Output:["_col0","_col1","_col7"]
        Select Operator [SEL_2]
          Output:["key","value"]
          Lateral View Forward [LVF_1]
            TableScan [TS_0]
              Output:["key","value"]
    Select Operator [SEL_6]
      Output:["_col0","_col1"]
      Lateral View Join Operator [LVJ_5]
        Output:["_col0","_col1","_col7"]
        UDTF Operator [UDTF_4]
          function name:explode
          Select Operator [SEL_3]
            Output:["_col0"]
             Please refer to the previous Lateral View Forward [LVF_1]

PREHOOK: query: show tables
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: show tables
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
PREHOOK: query: explain analyze show tables
PREHOOK: type: SHOWTABLES
POSTHOOK: query: explain analyze show tables
POSTHOOK: type: SHOWTABLES
Stage-1
  Fetch Operator
    limit:-1
    Stage-0
      Show Table Operator:
        database name:default

#### A masked pattern was here ####
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:newDB
PREHOOK: Output: hdfs://### HDFS PATH ###
#### A masked pattern was here ####
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:newDB
POSTHOOK: Output: hdfs://### HDFS PATH ###
#### A masked pattern was here ####
PREHOOK: type: CREATEDATABASE
#### A masked pattern was here ####
POSTHOOK: type: CREATEDATABASE
Stage-0

#### A masked pattern was here ####
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:newDB
PREHOOK: Output: hdfs://### HDFS PATH ###
#### A masked pattern was here ####
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:newDB
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: describe database extended newDB
PREHOOK: type: DESCDATABASE
PREHOOK: Input: database:newdb
POSTHOOK: query: describe database extended newDB
POSTHOOK: type: DESCDATABASE
POSTHOOK: Input: database:newdb
PREHOOK: query: explain analyze describe database extended newDB
PREHOOK: type: DESCDATABASE
POSTHOOK: query: explain analyze describe database extended newDB
POSTHOOK: type: DESCDATABASE
Stage-1
  Fetch Operator
    limit:-1
    Stage-0

PREHOOK: query: describe database extended newDB
PREHOOK: type: DESCDATABASE
PREHOOK: Input: database:newdb
POSTHOOK: query: describe database extended newDB
POSTHOOK: type: DESCDATABASE
POSTHOOK: Input: database:newdb
newdb		location/in/test	hive_test_user	USER	
PREHOOK: query: use newDB
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:newdb
POSTHOOK: query: use newDB
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:newdb
PREHOOK: query: explain analyze use newDB
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: explain analyze use newDB
POSTHOOK: type: SWITCHDATABASE
Stage-0

PREHOOK: query: use newDB
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:newdb
POSTHOOK: query: use newDB
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:newdb
PREHOOK: query: create table tab_n2 (name string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:newdb
PREHOOK: Output: newDB@tab_n2
POSTHOOK: query: create table tab_n2 (name string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:newdb
POSTHOOK: Output: newDB@tab_n2
PREHOOK: query: alter table tab_n2 rename to newName
PREHOOK: type: ALTERTABLE_RENAME
PREHOOK: Input: newdb@tab_n2
PREHOOK: Output: newdb@tab_n2
POSTHOOK: query: alter table tab_n2 rename to newName
POSTHOOK: type: ALTERTABLE_RENAME
POSTHOOK: Input: newdb@tab_n2
POSTHOOK: Output: newdb@tab_n2
PREHOOK: query: explain analyze alter table tab_n2 rename to newName
PREHOOK: type: ALTERTABLE_RENAME
POSTHOOK: query: explain analyze alter table tab_n2 rename to newName
POSTHOOK: type: ALTERTABLE_RENAME
Stage-0
  Alter Table Operator:
    new name:newDB.newName,old name:newDB.tab_n2,type:rename

PREHOOK: query: drop table tab_n2
PREHOOK: type: DROPTABLE
PREHOOK: Input: newdb@tab_n2
PREHOOK: Output: newdb@tab_n2
POSTHOOK: query: drop table tab_n2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: newdb@tab_n2
POSTHOOK: Output: newdb@tab_n2
PREHOOK: query: explain analyze drop table tab_n2
PREHOOK: type: DROPTABLE
POSTHOOK: query: explain analyze drop table tab_n2
POSTHOOK: type: DROPTABLE
Stage-0
  Drop Table Operator:
    table:tab_n2

PREHOOK: query: drop table tab_n2
PREHOOK: type: DROPTABLE
PREHOOK: Input: newdb@tab_n2
PREHOOK: Output: newdb@tab_n2
POSTHOOK: query: drop table tab_n2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: newdb@tab_n2
POSTHOOK: Output: newdb@tab_n2
PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: explain analyze use default
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: explain analyze use default
POSTHOOK: type: SWITCHDATABASE
Stage-0

PREHOOK: query: use default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: use default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: drop database newDB
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:newdb
PREHOOK: Output: database:newdb
POSTHOOK: query: drop database newDB
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:newdb
POSTHOOK: Output: database:newdb
PREHOOK: query: drop table src_stats
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table src_stats
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table src_stats as select * from src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@src_stats
POSTHOOK: query: create table src_stats as select * from src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@src_stats
POSTHOOK: Lineage: src_stats.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: src_stats.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: analyze table src_stats compute statistics
PREHOOK: type: QUERY
PREHOOK: Input: default@src_stats
PREHOOK: Output: default@src_stats
POSTHOOK: query: analyze table src_stats compute statistics
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src_stats
POSTHOOK: Output: default@src_stats
PREHOOK: query: explain analyze analyze table src_stats compute statistics
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze analyze table src_stats compute statistics
POSTHOOK: type: QUERY
Stage-2
  Stats Work{}
    Stage-0
      Map 1
      TableScan [TS_0] (rows=500/500 width=10)
        default@src_stats,src_stats,Tbl:COMPLETE,Col:COMPLETE

PREHOOK: query: analyze table src_stats compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@src_stats
PREHOOK: Output: default@src_stats
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: analyze table src_stats compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@src_stats
POSTHOOK: Output: default@src_stats
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: explain analyze analyze table src_stats compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
POSTHOOK: query: explain analyze analyze table src_stats compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
Vertex dependency in root stage
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)

Stage-2
  Stats Work{}
    Stage-0
      Reducer 2
      File Output Operator [FS_5]
        Group By Operator [GBY_3] (rows=1/1 width=1248)
          Output:["_col0","_col1"],aggregations:["compute_stats(VALUE._col0, 'hll')","compute_stats(VALUE._col2, 'hll')"]
        <-Map 1 [CUSTOM_SIMPLE_EDGE]
          PARTITION_ONLY_SHUFFLE [RS_2]
            Select Operator [SEL_1] (rows=500/500 width=350)
              Output:["key","value"]
              TableScan [TS_0] (rows=500/500 width=350)
                default@src_stats,src_stats,Tbl:COMPLETE,Col:NONE,Output:["key","value"]

PREHOOK: query: CREATE TEMPORARY MACRO SIGMOID (x DOUBLE) 1.0 / (1.0 + EXP(-x))
PREHOOK: type: CREATEMACRO
PREHOOK: Output: database:default
POSTHOOK: query: CREATE TEMPORARY MACRO SIGMOID (x DOUBLE) 1.0 / (1.0 + EXP(-x))
POSTHOOK: type: CREATEMACRO
POSTHOOK: Output: database:default
PREHOOK: query: explain analyze
CREATE TEMPORARY MACRO SIGMOID (x DOUBLE) 1.0 / (1.0 + EXP(-x))
PREHOOK: type: CREATEMACRO
POSTHOOK: query: explain analyze
CREATE TEMPORARY MACRO SIGMOID (x DOUBLE) 1.0 / (1.0 + EXP(-x))
POSTHOOK: type: CREATEMACRO
Stage-0

PREHOOK: query: CREATE TEMPORARY MACRO SIGMOID (x DOUBLE) 1.0 / (1.0 + EXP(-x))
PREHOOK: type: CREATEMACRO
PREHOOK: Output: database:default
POSTHOOK: query: CREATE TEMPORARY MACRO SIGMOID (x DOUBLE) 1.0 / (1.0 + EXP(-x))
POSTHOOK: type: CREATEMACRO
POSTHOOK: Output: database:default
PREHOOK: query: SELECT SIGMOID(2) FROM src LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT SIGMOID(2) FROM src LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: explain analyze SELECT SIGMOID(2) FROM src LIMIT 1
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze SELECT SIGMOID(2) FROM src LIMIT 1
POSTHOOK: type: QUERY
Plan optimized by CBO.

Stage-0
  Fetch Operator
    limit:1
    Limit [LIM_2]
      Number of rows:1
      Select Operator [SEL_1]
        Output:["_col0"]
        TableScan [TS_0]

PREHOOK: query: DROP TEMPORARY MACRO SIGMOID
PREHOOK: type: DROPMACRO
PREHOOK: Output: database:default
POSTHOOK: query: DROP TEMPORARY MACRO SIGMOID
POSTHOOK: type: DROPMACRO
POSTHOOK: Output: database:default
PREHOOK: query: explain analyze DROP TEMPORARY MACRO SIGMOID
PREHOOK: type: DROPMACRO
POSTHOOK: query: explain analyze DROP TEMPORARY MACRO SIGMOID
POSTHOOK: type: DROPMACRO
Stage-0

PREHOOK: query: DROP TEMPORARY MACRO SIGMOID
PREHOOK: type: DROPMACRO
PREHOOK: Output: database:default
POSTHOOK: query: DROP TEMPORARY MACRO SIGMOID
POSTHOOK: type: DROPMACRO
POSTHOOK: Output: database:default
PREHOOK: query: create table src_autho_test_n4 as select * from src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@src_autho_test_n4
POSTHOOK: query: create table src_autho_test_n4 as select * from src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@src_autho_test_n4
PREHOOK: query: explain analyze create table src_autho_test_n4 as select * from src
PREHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: query: explain analyze create table src_autho_test_n4 as select * from src
POSTHOOK: type: CREATETABLE_AS_SELECT
Plan optimized by CBO.

Stage-3
  Stats Work{}
    Stage-4
      Create Table Operator:
        name:default.src_autho_test_n4
        Stage-2
          Dependency Collection{}
            Stage-1
              Map 1 vectorized
              File Output Operator [FS_4]
                table:{"name:":"default.src_autho_test_n4"}
                Select Operator [SEL_3] (rows=500/500 width=178)
                  Output:["_col0","_col1"]
                  TableScan [TS_0] (rows=500/500 width=178)
                    default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
        Stage-0
          Move Operator
             Please refer to the previous Stage-1

PREHOOK: query: create table src_autho_test_n4 as select * from src
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@src_autho_test_n4
POSTHOOK: query: create table src_autho_test_n4 as select * from src
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@src_autho_test_n4
POSTHOOK: Lineage: src_autho_test_n4.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: src_autho_test_n4.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: grant select on table src_autho_test_n4 to user hive_test_user
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: default@src_autho_test_n4
POSTHOOK: query: grant select on table src_autho_test_n4 to user hive_test_user
POSTHOOK: type: GRANT_PRIVILEGE
POSTHOOK: Output: default@src_autho_test_n4
PREHOOK: query: explain analyze grant select on table src_autho_test_n4 to user hive_test_user
PREHOOK: type: GRANT_PRIVILEGE
POSTHOOK: query: explain analyze grant select on table src_autho_test_n4 to user hive_test_user
POSTHOOK: type: GRANT_PRIVILEGE
Stage-0

PREHOOK: query: grant select on table src_autho_test_n4 to user hive_test_user
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: default@src_autho_test_n4
POSTHOOK: query: grant select on table src_autho_test_n4 to user hive_test_user
POSTHOOK: type: GRANT_PRIVILEGE
POSTHOOK: Output: default@src_autho_test_n4
PREHOOK: query: show grant user hive_test_user on table src_autho_test_n4
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant user hive_test_user on table src_autho_test_n4
POSTHOOK: type: SHOW_GRANT
PREHOOK: query: explain analyze show grant user hive_test_user on table src_autho_test_n4
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: explain analyze show grant user hive_test_user on table src_autho_test_n4
POSTHOOK: type: SHOW_GRANT
Stage-1
  Fetch Operator
    limit:-1
    Stage-0

PREHOOK: query: show grant user hive_test_user on table src_autho_test_n4(key)
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: show grant user hive_test_user on table src_autho_test_n4(key)
POSTHOOK: type: SHOW_GRANT
PREHOOK: query: explain analyze show grant user hive_test_user on table src_autho_test_n4(key)
PREHOOK: type: SHOW_GRANT
POSTHOOK: query: explain analyze show grant user hive_test_user on table src_autho_test_n4(key)
POSTHOOK: type: SHOW_GRANT
Stage-1
  Fetch Operator
    limit:-1
    Stage-0

PREHOOK: query: select key from src_autho_test_n4 order by key limit 20
PREHOOK: type: QUERY
PREHOOK: Input: default@src_autho_test_n4
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select key from src_autho_test_n4 order by key limit 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src_autho_test_n4
POSTHOOK: Output: hdfs://### HDFS PATH ###
0
0
0
10
100
100
103
103
104
104
105
11
111
113
113
114
116
118
118
119
PREHOOK: query: revoke select on table src_autho_test_n4 from user hive_test_user
PREHOOK: type: REVOKE_PRIVILEGE
PREHOOK: Output: default@src_autho_test_n4
POSTHOOK: query: revoke select on table src_autho_test_n4 from user hive_test_user
POSTHOOK: type: REVOKE_PRIVILEGE
POSTHOOK: Output: default@src_autho_test_n4
PREHOOK: query: explain analyze revoke select on table src_autho_test_n4 from user hive_test_user
PREHOOK: type: REVOKE_PRIVILEGE
POSTHOOK: query: explain analyze revoke select on table src_autho_test_n4 from user hive_test_user
POSTHOOK: type: REVOKE_PRIVILEGE
Stage-0

PREHOOK: query: grant select(key) on table src_autho_test_n4 to user hive_test_user
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: default@src_autho_test_n4
POSTHOOK: query: grant select(key) on table src_autho_test_n4 to user hive_test_user
POSTHOOK: type: GRANT_PRIVILEGE
POSTHOOK: Output: default@src_autho_test_n4
PREHOOK: query: explain analyze grant select(key) on table src_autho_test_n4 to user hive_test_user
PREHOOK: type: GRANT_PRIVILEGE
POSTHOOK: query: explain analyze grant select(key) on table src_autho_test_n4 to user hive_test_user
POSTHOOK: type: GRANT_PRIVILEGE
Stage-0

PREHOOK: query: revoke select(key) on table src_autho_test_n4 from user hive_test_user
PREHOOK: type: REVOKE_PRIVILEGE
PREHOOK: Output: default@src_autho_test_n4
POSTHOOK: query: revoke select(key) on table src_autho_test_n4 from user hive_test_user
POSTHOOK: type: REVOKE_PRIVILEGE
POSTHOOK: Output: default@src_autho_test_n4
PREHOOK: query: explain analyze revoke select(key) on table src_autho_test_n4 from user hive_test_user
PREHOOK: type: REVOKE_PRIVILEGE
POSTHOOK: query: explain analyze revoke select(key) on table src_autho_test_n4 from user hive_test_user
POSTHOOK: type: REVOKE_PRIVILEGE
Stage-0

PREHOOK: query: create role sRc_roLE
PREHOOK: type: CREATEROLE
POSTHOOK: query: create role sRc_roLE
POSTHOOK: type: CREATEROLE
PREHOOK: query: explain analyze 
create role sRc_roLE
PREHOOK: type: CREATEROLE
POSTHOOK: query: explain analyze 
create role sRc_roLE
POSTHOOK: type: CREATEROLE
Stage-0

PREHOOK: query: create role sRc_roLE
PREHOOK: type: CREATEROLE
POSTHOOK: query: create role sRc_roLE
POSTHOOK: type: CREATEROLE
PREHOOK: query: grant role sRc_roLE to user hive_test_user
PREHOOK: type: GRANT_ROLE
POSTHOOK: query: grant role sRc_roLE to user hive_test_user
POSTHOOK: type: GRANT_ROLE
PREHOOK: query: explain analyze
grant role sRc_roLE to user hive_test_user
PREHOOK: type: GRANT_ROLE
POSTHOOK: query: explain analyze
grant role sRc_roLE to user hive_test_user
POSTHOOK: type: GRANT_ROLE
Stage-0

PREHOOK: query: grant role sRc_roLE to user hive_test_user
PREHOOK: type: GRANT_ROLE
POSTHOOK: query: grant role sRc_roLE to user hive_test_user
POSTHOOK: type: GRANT_ROLE
PREHOOK: query: show role grant user hive_test_user
PREHOOK: type: SHOW_ROLE_GRANT
POSTHOOK: query: show role grant user hive_test_user
POSTHOOK: type: SHOW_ROLE_GRANT
PREHOOK: query: explain analyze show role grant user hive_test_user
PREHOOK: type: SHOW_ROLE_GRANT
POSTHOOK: query: explain analyze show role grant user hive_test_user
POSTHOOK: type: SHOW_ROLE_GRANT
Stage-1
  Fetch Operator
    limit:-1
    Stage-0

PREHOOK: query: drop role sRc_roLE
PREHOOK: type: DROPROLE
POSTHOOK: query: drop role sRc_roLE
POSTHOOK: type: DROPROLE
PREHOOK: query: explain analyze drop role sRc_roLE
PREHOOK: type: DROPROLE
POSTHOOK: query: explain analyze drop role sRc_roLE
POSTHOOK: type: DROPROLE
Stage-0

PREHOOK: query: drop role sRc_roLE
PREHOOK: type: DROPROLE
POSTHOOK: query: drop role sRc_roLE
POSTHOOK: type: DROPROLE
PREHOOK: query: drop table src_autho_test_n4
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@src_autho_test_n4
PREHOOK: Output: default@src_autho_test_n4
POSTHOOK: query: drop table src_autho_test_n4
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@src_autho_test_n4
POSTHOOK: Output: default@src_autho_test_n4
PREHOOK: query: drop view v_n5
PREHOOK: type: DROPVIEW
POSTHOOK: query: drop view v_n5
POSTHOOK: type: DROPVIEW
PREHOOK: query: explain analyze drop view v_n5
PREHOOK: type: DROPVIEW
POSTHOOK: query: explain analyze drop view v_n5
POSTHOOK: type: DROPVIEW
Stage-0
  Drop Table Operator:
    table:v_n5

PREHOOK: query: create view v_n5 as with cte as (select * from src  order by key limit 5)
select * from cte
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@src
PREHOOK: Output: database:default
PREHOOK: Output: default@v_n5
POSTHOOK: query: create view v_n5 as with cte as (select * from src  order by key limit 5)
select * from cte
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@src
POSTHOOK: Output: database:default
POSTHOOK: Output: default@v_n5
PREHOOK: query: explain analyze create view v_n5 as with cte as (select * from src  order by key limit 5)
select * from cte
PREHOOK: type: CREATEVIEW
POSTHOOK: query: explain analyze create view v_n5 as with cte as (select * from src  order by key limit 5)
select * from cte
POSTHOOK: type: CREATEVIEW
Plan optimized by CBO.

Stage-1
  Create View Operator:
    name:default.v_n5,original text:with cte as (select * from src  order by key limit 5)
select * from cte

PREHOOK: query: with cte as (select * from src  order by key limit 5)
select * from cte
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: with cte as (select * from src  order by key limit 5)
select * from cte
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: explain analyze with cte as (select * from src  order by key limit 5)
select * from cte
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze with cte as (select * from src  order by key limit 5)
select * from cte
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:5
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_10]
        Limit [LIM_9] (rows=5/5 width=178)
          Number of rows:5
          Select Operator [SEL_8] (rows=500/5 width=178)
            Output:["_col0","_col1"]
          <-Map 1 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_7]
              Select Operator [SEL_6] (rows=500/500 width=178)
                Output:["_col0","_col1"]
                TableScan [TS_0] (rows=500/500 width=178)
                  default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]

PREHOOK: query: create table orc_merge5_n1 (userid bigint, string1 string, subtype double, decimal1 decimal, ts timestamp) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@orc_merge5_n1
POSTHOOK: query: create table orc_merge5_n1 (userid bigint, string1 string, subtype double, decimal1 decimal, ts timestamp) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@orc_merge5_n1
PREHOOK: query: load data local inpath '../../data/files/orc_split_elim.orc' into table orc_merge5_n1
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@orc_merge5_n1
POSTHOOK: query: load data local inpath '../../data/files/orc_split_elim.orc' into table orc_merge5_n1
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@orc_merge5_n1
PREHOOK: query: insert overwrite table orc_merge5_n1 select userid,string1,subtype,decimal1,ts from orc_merge5_n1 where userid<=13
PREHOOK: type: QUERY
PREHOOK: Input: default@orc_merge5_n1
PREHOOK: Output: default@orc_merge5_n1
POSTHOOK: query: insert overwrite table orc_merge5_n1 select userid,string1,subtype,decimal1,ts from orc_merge5_n1 where userid<=13
POSTHOOK: type: QUERY
POSTHOOK: Input: default@orc_merge5_n1
POSTHOOK: Output: default@orc_merge5_n1
PREHOOK: query: explain analyze insert overwrite table orc_merge5_n1 select userid,string1,subtype,decimal1,ts from orc_merge5_n1 where userid<=13
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze insert overwrite table orc_merge5_n1 select userid,string1,subtype,decimal1,ts from orc_merge5_n1 where userid<=13
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)

Stage-3
  Stats Work{}
    Stage-0
      Move Operator
        table:{"name:":"default.orc_merge5_n1"}
        Stage-2
          Dependency Collection{}
            Stage-5(CONDITIONAL)
              Move Operator
                Stage-8(CONDITIONAL CHILD TASKS: Stage-5, Stage-4, Stage-6)
                  Conditional Operator
                    Stage-1
                      Reducer 2
                      File Output Operator [FS_9]
                        Group By Operator [GBY_7] (rows=1/1 width=2760)
                          Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["compute_stats(VALUE._col0, 'hll')","compute_stats(VALUE._col2, 'hll')","compute_stats(VALUE._col3, 'hll')","compute_stats(VALUE._col4, 'hll')","compute_stats(VALUE._col5, 'hll')"]
                        <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                          File Output Operator [FS_14]
                            table:{"name:":"default.orc_merge5_n1"}
                            Select Operator [SEL_13] (rows=1/3 width=352)
                              Output:["_col0","_col1","_col2","_col3","_col4"]
                              Filter Operator [FIL_12] (rows=1/3 width=352)
                                predicate:(userid <= 13L)
                                TableScan [TS_0] (rows=1/15000 width=352)
                                  default@orc_merge5_n1,orc_merge5_n1,Tbl:COMPLETE,Col:NONE,Output:["userid","string1","subtype","decimal1","ts"]
                          PARTITION_ONLY_SHUFFLE [RS_16]
                            Select Operator [SEL_15] (rows=1/3 width=352)
                              Output:["userid","string1","subtype","decimal1","ts"]
                               Please refer to the previous Select Operator [SEL_13]
            Stage-4(CONDITIONAL)
              File Merge
                 Please refer to the previous Stage-8(CONDITIONAL CHILD TASKS: Stage-5, Stage-4, Stage-6)
            Stage-7
              Move Operator
                Stage-6(CONDITIONAL)
                  File Merge
                     Please refer to the previous Stage-8(CONDITIONAL CHILD TASKS: Stage-5, Stage-4, Stage-6)

PREHOOK: query: drop table orc_merge5_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@orc_merge5_n1
PREHOOK: Output: default@orc_merge5_n1
POSTHOOK: query: drop table orc_merge5_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@orc_merge5_n1
POSTHOOK: Output: default@orc_merge5_n1
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_n4(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_n4
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_n4(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_n4
PREHOOK: query: CREATE TABLE tab_part_n3 (key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab_part_n3
POSTHOOK: query: CREATE TABLE tab_part_n3 (key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab_part_n3
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part_n5 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_part_n5
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part_n5 (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part_n5
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n4 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n4
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_n4 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n4
POSTHOOK: Output: default@srcbucket_mapjoin_n4@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj1/000001_0' INTO TABLE srcbucket_mapjoin_n4 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_n4@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj1/000001_0' INTO TABLE srcbucket_mapjoin_n4 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_n4@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_n5 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n5
POSTHOOK: query: load data local inpath '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_n5 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n5
POSTHOOK: Output: default@srcbucket_mapjoin_part_n5@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_n5 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n5@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_n5 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n5@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part_n5 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n5@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000002_0' INTO TABLE srcbucket_mapjoin_part_n5 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n5@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part_n5 partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_n5@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/bmj/000003_0' INTO TABLE srcbucket_mapjoin_part_n5 partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_n5@ds=2008-04-08
PREHOOK: query: insert overwrite table tab_part_n3 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_part_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_part_n5
PREHOOK: Input: default@srcbucket_mapjoin_part_n5@ds=2008-04-08
PREHOOK: Output: default@tab_part_n3@ds=2008-04-08
POSTHOOK: query: insert overwrite table tab_part_n3 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_part_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_part_n5
POSTHOOK: Input: default@srcbucket_mapjoin_part_n5@ds=2008-04-08
POSTHOOK: Output: default@tab_part_n3@ds=2008-04-08
POSTHOOK: Lineage: tab_part_n3 PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_part_n5)srcbucket_mapjoin_part_n5.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: tab_part_n3 PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_part_n5)srcbucket_mapjoin_part_n5.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE tab_n2(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tab_n2
POSTHOOK: query: CREATE TABLE tab_n2(key int, value string) PARTITIONED BY(ds STRING) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tab_n2
PREHOOK: query: insert overwrite table tab_n2 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_n4
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_n4
PREHOOK: Input: default@srcbucket_mapjoin_n4@ds=2008-04-08
PREHOOK: Output: default@tab_n2@ds=2008-04-08
POSTHOOK: query: insert overwrite table tab_n2 partition (ds='2008-04-08')
select key,value from srcbucket_mapjoin_n4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_n4
POSTHOOK: Input: default@srcbucket_mapjoin_n4@ds=2008-04-08
POSTHOOK: Output: default@tab_n2@ds=2008-04-08
POSTHOOK: Lineage: tab_n2 PARTITION(ds=2008-04-08).key SIMPLE [(srcbucket_mapjoin_n4)srcbucket_mapjoin_n4.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: tab_n2 PARTITION(ds=2008-04-08).value SIMPLE [(srcbucket_mapjoin_n4)srcbucket_mapjoin_n4.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select a.key, a.value, b.value
from tab_n2 a join tab_part_n3 b on a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tab_n2
PREHOOK: Input: default@tab_n2@ds=2008-04-08
PREHOOK: Input: default@tab_part_n3
PREHOOK: Input: default@tab_part_n3@ds=2008-04-08
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select a.key, a.value, b.value
from tab_n2 a join tab_part_n3 b on a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tab_n2
POSTHOOK: Input: default@tab_n2@ds=2008-04-08
POSTHOOK: Input: default@tab_part_n3
POSTHOOK: Input: default@tab_part_n3@ds=2008-04-08
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: explain analyze
select a.key, a.value, b.value
from tab_n2 a join tab_part_n3 b on a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain analyze
select a.key, a.value, b.value
from tab_n2 a join tab_part_n3 b on a.key = b.key
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 2 <- Map 1 (CUSTOM_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Map 2 vectorized
      File Output Operator [FS_34]
        Select Operator [SEL_33] (rows=399/480 width=186)
          Output:["_col0","_col1","_col2"]
          Map Join Operator [MAPJOIN_32] (rows=399/480 width=186)
            BucketMapJoin:true,Conds:RS_29._col0=SEL_31._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col3"]
          <-Map 1 [CUSTOM_EDGE] vectorized
            MULTICAST [RS_29]
              PartitionCols:_col0
              Select Operator [SEL_28] (rows=242/242 width=95)
                Output:["_col0","_col1"]
                Filter Operator [FIL_27] (rows=242/242 width=95)
                  predicate:key is not null
                  TableScan [TS_0] (rows=242/242 width=95)
                    default@tab_n2,a,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]
          <-Select Operator [SEL_31] (rows=500/500 width=95)
              Output:["_col0","_col1"]
              Filter Operator [FIL_30] (rows=500/500 width=95)
                predicate:key is not null
                TableScan [TS_3] (rows=500/500 width=95)
                  default@tab_part_n3,b,Tbl:COMPLETE,Col:COMPLETE,Output:["key","value"]

