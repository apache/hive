PREHOOK: query: CREATE TABLE tbl1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl1
POSTHOOK: query: CREATE TABLE tbl1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl1
PREHOOK: query: CREATE TABLE tbl2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl2
POSTHOOK: query: CREATE TABLE tbl2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl2
PREHOOK: query: CREATE TABLE tbl3(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl3
POSTHOOK: query: CREATE TABLE tbl3(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl3
PREHOOK: query: insert overwrite table tbl1
select * from src where key < 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tbl1
POSTHOOK: query: insert overwrite table tbl1
select * from src where key < 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tbl1
POSTHOOK: Lineage: tbl1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: tbl1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table tbl2
select * from src where key < 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tbl2
POSTHOOK: query: insert overwrite table tbl2
select * from src where key < 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tbl2
POSTHOOK: Lineage: tbl2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: tbl2.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table tbl3
select * from src where key < 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tbl3
POSTHOOK: query: insert overwrite table tbl3
select * from src where key < 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tbl3
POSTHOOK: Lineage: tbl3.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: tbl3.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: explain extended
select a.key as key, a.value as val1, b.value as val2, c.value as val3
from tbl1 a join tbl2 b on a.key = b.key join tbl3 c on a.value = c.value
PREHOOK: type: QUERY
POSTHOOK: query: explain extended
select a.key as key, a.value as val1, b.value as val2, c.value as val3
from tbl1 a join tbl2 b on a.key = b.key join tbl3 c on a.value = c.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-7 is a root stage
  Stage-5 depends on stages: Stage-7
  Stage-0 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-7
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_0:a 
          Fetch Operator
            limit: -1
        $hdt$_2:c 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_0:a 
          TableScan
            alias: a
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (key is not null and value is not null) (type: boolean)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: int), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  Position of Big Table: 1
        $hdt$_2:c 
          TableScan
            alias: c
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: value is not null (type: boolean)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: value (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col1 (type: string)
                    1 _col0 (type: string)
                  Position of Big Table: 0

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: int), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  outputColumnNames: _col0, _col1, _col3
                  Position of Big Table: 1
                  Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                    keys:
                      0 _col1 (type: string)
                      1 _col0 (type: string)
                    outputColumnNames: _col0, _col1, _col3, _col4
                    Position of Big Table: 0
                    Statistics: Num rows: 12 Data size: 84 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: string), _col3 (type: string), _col4 (type: string)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 12 Data size: 84 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        GlobalTableId: 0
#### A masked pattern was here ####
                        NumFilesPerFileSink: 1
                        Statistics: Num rows: 12 Data size: 84 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            properties:
                              columns _col0,_col1,_col2,_col3
                              columns.types int:string:string:string
                              escape.delim \
                              hive.serialization.extend.additional.nesting.levels true
                              serialization.escape.crlf true
                              serialization.format 1
                              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        TotalFiles: 1
                        GatherStats: false
                        MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: tbl1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              SORTBUCKETCOLSPREFIX TRUE
              bucket_count 2
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.tbl1
              numFiles 2
              numRows 10
              rawDataSize 70
              serialization.ddl struct tbl1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 80
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 2
                bucket_field_name key
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.tbl1
                numFiles 2
                numRows 10
                rawDataSize 70
                serialization.ddl struct tbl1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 80
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.tbl1
            name: default.tbl1
#### A masked pattern was here ####
          Partition
            base file name: tbl2
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              SORTBUCKETCOLSPREFIX TRUE
              bucket_count 2
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.tbl2
              numFiles 2
              numRows 10
              rawDataSize 70
              serialization.ddl struct tbl2 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 80
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 2
                bucket_field_name key
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.tbl2
                numFiles 2
                numRows 10
                rawDataSize 70
                serialization.ddl struct tbl2 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 80
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.tbl2
            name: default.tbl2
#### A masked pattern was here ####
          Partition
            base file name: tbl3
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              SORTBUCKETCOLSPREFIX TRUE
              bucket_count 2
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.tbl3
              numFiles 2
              numRows 10
              rawDataSize 70
              serialization.ddl struct tbl3 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 80
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 2
                bucket_field_name key
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.tbl3
                numFiles 2
                numRows 10
                rawDataSize 70
                serialization.ddl struct tbl3 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 80
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.tbl3
            name: default.tbl3
      Truncated Path -> Alias:
        /tbl2 [$hdt$_1:b]

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select a.key as key, a.value as val1, b.value as val2, c.value as val3
from tbl1 a join tbl2 b on a.key = b.key join tbl3 c on a.value = c.value
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl1
PREHOOK: Input: default@tbl2
PREHOOK: Input: default@tbl3
#### A masked pattern was here ####
POSTHOOK: query: select a.key as key, a.value as val1, b.value as val2, c.value as val3
from tbl1 a join tbl2 b on a.key = b.key join tbl3 c on a.value = c.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl1
POSTHOOK: Input: default@tbl2
POSTHOOK: Input: default@tbl3
#### A masked pattern was here ####
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
2	val_2	val_2	val_2
4	val_4	val_4	val_4
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
8	val_8	val_8	val_8
9	val_9	val_9	val_9
PREHOOK: query: explain extended
select a.key as key, a.value as val1, b.value as val2, c.value as val3
from tbl1 a join tbl2 b on a.key = b.key join tbl3 c on a.value = c.value
PREHOOK: type: QUERY
POSTHOOK: query: explain extended
select a.key as key, a.value as val1, b.value as val2, c.value as val3
from tbl1 a join tbl2 b on a.key = b.key join tbl3 c on a.value = c.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-7 is a root stage
  Stage-5 depends on stages: Stage-7
  Stage-0 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-7
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_0:a 
          Fetch Operator
            limit: -1
        $hdt$_2:c 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_0:a 
          TableScan
            alias: a
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (key is not null and value is not null) (type: boolean)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: int), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  Position of Big Table: 1
        $hdt$_2:c 
          TableScan
            alias: c
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: value is not null (type: boolean)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: value (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 _col1 (type: string)
                    1 _col0 (type: string)
                  Position of Big Table: 0

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: key (type: int), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 10 Data size: 70 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col0 (type: int)
                    1 _col0 (type: int)
                  outputColumnNames: _col0, _col1, _col3
                  Position of Big Table: 1
                  Statistics: Num rows: 11 Data size: 77 Basic stats: COMPLETE Column stats: NONE
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                    keys:
                      0 _col1 (type: string)
                      1 _col0 (type: string)
                    outputColumnNames: _col0, _col1, _col3, _col4
                    Position of Big Table: 0
                    Statistics: Num rows: 12 Data size: 84 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: string), _col3 (type: string), _col4 (type: string)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 12 Data size: 84 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        GlobalTableId: 0
#### A masked pattern was here ####
                        NumFilesPerFileSink: 1
                        Statistics: Num rows: 12 Data size: 84 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            properties:
                              columns _col0,_col1,_col2,_col3
                              columns.types int:string:string:string
                              escape.delim \
                              hive.serialization.extend.additional.nesting.levels true
                              serialization.escape.crlf true
                              serialization.format 1
                              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        TotalFiles: 1
                        GatherStats: false
                        MultiFileSpray: false
      Local Work:
        Map Reduce Local Work
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: tbl1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              SORTBUCKETCOLSPREFIX TRUE
              bucket_count 2
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.tbl1
              numFiles 2
              numRows 10
              rawDataSize 70
              serialization.ddl struct tbl1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 80
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 2
                bucket_field_name key
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.tbl1
                numFiles 2
                numRows 10
                rawDataSize 70
                serialization.ddl struct tbl1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 80
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.tbl1
            name: default.tbl1
#### A masked pattern was here ####
          Partition
            base file name: tbl2
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              SORTBUCKETCOLSPREFIX TRUE
              bucket_count 2
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.tbl2
              numFiles 2
              numRows 10
              rawDataSize 70
              serialization.ddl struct tbl2 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 80
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 2
                bucket_field_name key
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.tbl2
                numFiles 2
                numRows 10
                rawDataSize 70
                serialization.ddl struct tbl2 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 80
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.tbl2
            name: default.tbl2
#### A masked pattern was here ####
          Partition
            base file name: tbl3
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              SORTBUCKETCOLSPREFIX TRUE
              bucket_count 2
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.tbl3
              numFiles 2
              numRows 10
              rawDataSize 70
              serialization.ddl struct tbl3 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 80
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 2
                bucket_field_name key
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.tbl3
                numFiles 2
                numRows 10
                rawDataSize 70
                serialization.ddl struct tbl3 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 80
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.tbl3
            name: default.tbl3
      Truncated Path -> Alias:
        /tbl2 [$hdt$_1:b]

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select a.key as key, a.value as val1, b.value as val2, c.value as val3
from tbl1 a join tbl2 b on a.key = b.key join tbl3 c on a.value = c.value
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl1
PREHOOK: Input: default@tbl2
PREHOOK: Input: default@tbl3
#### A masked pattern was here ####
POSTHOOK: query: select a.key as key, a.value as val1, b.value as val2, c.value as val3
from tbl1 a join tbl2 b on a.key = b.key join tbl3 c on a.value = c.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl1
POSTHOOK: Input: default@tbl2
POSTHOOK: Input: default@tbl3
#### A masked pattern was here ####
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
0	val_0	val_0	val_0
2	val_2	val_2	val_2
4	val_4	val_4	val_4
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
5	val_5	val_5	val_5
8	val_8	val_8	val_8
9	val_9	val_9	val_9
