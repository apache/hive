PREHOOK: query: DROP TABLE IF EXISTS DECIMAL_TRAILING_txt
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS DECIMAL_TRAILING_txt
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS DECIMAL_TRAILING
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS DECIMAL_TRAILING
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE DECIMAL_TRAILING_txt (
  id int,
  a decimal(10,4),
  b decimal(15,8)
  )
ROW FORMAT DELIMITED
   FIELDS TERMINATED BY ','
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DECIMAL_TRAILING_txt
POSTHOOK: query: CREATE TABLE DECIMAL_TRAILING_txt (
  id int,
  a decimal(10,4),
  b decimal(15,8)
  )
ROW FORMAT DELIMITED
   FIELDS TERMINATED BY ','
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DECIMAL_TRAILING_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv10.txt' INTO TABLE DECIMAL_TRAILING_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@decimal_trailing_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/kv10.txt' INTO TABLE DECIMAL_TRAILING_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@decimal_trailing_txt
PREHOOK: query: CREATE TABLE DECIMAL_TRAILING (
  id int,
  a decimal(10,4),
  b decimal(15,8)
  )
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DECIMAL_TRAILING
POSTHOOK: query: CREATE TABLE DECIMAL_TRAILING (
  id int,
  a decimal(10,4),
  b decimal(15,8)
  )
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DECIMAL_TRAILING
PREHOOK: query: INSERT OVERWRITE TABLE DECIMAL_TRAILING SELECT * FROM DECIMAL_TRAILING_txt
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_trailing_txt
PREHOOK: Output: default@decimal_trailing
POSTHOOK: query: INSERT OVERWRITE TABLE DECIMAL_TRAILING SELECT * FROM DECIMAL_TRAILING_txt
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_trailing_txt
POSTHOOK: Output: default@decimal_trailing
POSTHOOK: Lineage: decimal_trailing.a SIMPLE [(decimal_trailing_txt)decimal_trailing_txt.FieldSchema(name:a, type:decimal(10,4), comment:null), ]
POSTHOOK: Lineage: decimal_trailing.b SIMPLE [(decimal_trailing_txt)decimal_trailing_txt.FieldSchema(name:b, type:decimal(15,8), comment:null), ]
POSTHOOK: Lineage: decimal_trailing.id SIMPLE [(decimal_trailing_txt)decimal_trailing_txt.FieldSchema(name:id, type:int, comment:null), ]
PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM DECIMAL_TRAILING ORDER BY id
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT * FROM DECIMAL_TRAILING ORDER BY id
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: decimal_trailing
            Statistics: Num rows: 30 Data size: 4712 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                vectorizationSchemaColumns: [0:id:int, 1:a:decimal(10,4)/DECIMAL_64, 2:b:decimal(15,8)/DECIMAL_64, 3:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
            Select Operator
              expressions: id (type: int), a (type: decimal(10,4)), b (type: decimal(15,8))
              outputColumnNames: _col0, _col1, _col2
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumnNums: [0, 1, 2]
              Statistics: Num rows: 30 Data size: 4712 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: int)
                sort order: +
                Reduce Sink Vectorization:
                    className: VectorReduceSinkOperator
                    native: false
                    nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                    nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
                Statistics: Num rows: 30 Data size: 4712 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: decimal(10,4)), _col2 (type: decimal(15,8))
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          inputFormatFeatureSupport: [DECIMAL_64]
          featureSupportInUse: [DECIMAL_64]
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
          rowBatchContext:
              dataColumnCount: 3
              includeColumns: [0, 1, 2]
              dataColumns: id:int, a:decimal(10,4)/DECIMAL_64, b:decimal(15,8)/DECIMAL_64
              partitionColumnCount: 0
              scratchColumnTypeNames: []
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: decimal(10,4)), VALUE._col1 (type: decimal(15,8))
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 30 Data size: 4712 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 30 Data size: 4712 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT * FROM DECIMAL_TRAILING ORDER BY id
PREHOOK: type: QUERY
PREHOOK: Input: default@decimal_trailing
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM DECIMAL_TRAILING ORDER BY id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@decimal_trailing
#### A masked pattern was here ####
0	0.0000	0.00000000
1	0.0000	0.00000000
2	NULL	NULL
3	1.0000	1.00000000
4	10.0000	10.00000000
5	100.0000	100.00000000
6	1000.0000	1000.00000000
7	10000.0000	10000.00000000
8	100000.0000	100000.00000000
9	NULL	1000000.00000000
10	NULL	NULL
11	NULL	NULL
12	NULL	NULL
13	NULL	NULL
14	NULL	NULL
15	NULL	NULL
16	NULL	NULL
17	NULL	NULL
18	1.0000	1.00000000
19	10.0000	10.00000000
20	100.0000	100.00000000
21	1000.0000	1000.00000000
22	100000.0000	10000.00000000
23	0.0000	0.00000000
24	0.0000	0.00000000
25	0.0000	0.00000000
26	0.0000	0.00000000
27	0.0000	0.00000000
28	12313.2000	134134.31252500
29	99999.9990	134134.31242553
PREHOOK: query: DROP TABLE DECIMAL_TRAILING_txt
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@decimal_trailing_txt
PREHOOK: Output: default@decimal_trailing_txt
POSTHOOK: query: DROP TABLE DECIMAL_TRAILING_txt
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@decimal_trailing_txt
POSTHOOK: Output: default@decimal_trailing_txt
PREHOOK: query: DROP TABLE DECIMAL_TRAILING
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@decimal_trailing
PREHOOK: Output: default@decimal_trailing
POSTHOOK: query: DROP TABLE DECIMAL_TRAILING
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@decimal_trailing
POSTHOOK: Output: default@decimal_trailing
