PREHOOK: query: CREATE TABLE cmv_basetable
STORED AS orc
TBLPROPERTIES ('transactional'='true')
AS
SELECT cast(current_timestamp() AS timestamp) AS t,
       cast(a AS int) AS a,
       cast(b AS varchar(256)) AS b,
       cast(c AS double) AS c,
       cast(d AS int) AS d
FROM TABLE (
  VALUES
    (1, 'alfred', 10.30, 2),
    (2, 'bob', 3.14, 3),
    (2, 'bonnie', 172342.2, 3),
    (3, 'calvin', 978.76, 3),
    (3, 'charlie', 9.8, 1),
    (3, 'charlie', 15.8, 1)) as q (a, b, c, d)
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_basetable
POSTHOOK: query: CREATE TABLE cmv_basetable
STORED AS orc
TBLPROPERTIES ('transactional'='true')
AS
SELECT cast(current_timestamp() AS timestamp) AS t,
       cast(a AS int) AS a,
       cast(b AS varchar(256)) AS b,
       cast(c AS double) AS c,
       cast(d AS int) AS d
FROM TABLE (
  VALUES
    (1, 'alfred', 10.30, 2),
    (2, 'bob', 3.14, 3),
    (2, 'bonnie', 172342.2, 3),
    (3, 'calvin', 978.76, 3),
    (3, 'charlie', 9.8, 1),
    (3, 'charlie', 15.8, 1)) as q (a, b, c, d)
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_basetable
POSTHOOK: Lineage: cmv_basetable.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable.d SCRIPT []
POSTHOOK: Lineage: cmv_basetable.t SIMPLE []
PREHOOK: query: CREATE MATERIALIZED VIEW cmv_mat_view ENABLE REWRITE
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "HOUR")
AS
SELECT cast(t AS timestamp with local time zone) as `__time`, a, b, c
FROM cmv_basetable
WHERE a = 2
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_basetable
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_mat_view
POSTHOOK: query: CREATE MATERIALIZED VIEW cmv_mat_view ENABLE REWRITE
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "HOUR")
AS
SELECT cast(t AS timestamp with local time zone) as `__time`, a, b, c
FROM cmv_basetable
WHERE a = 2
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_basetable
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_mat_view
PREHOOK: query: SELECT a, b, c FROM cmv_mat_view
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_mat_view
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT a, b, c FROM cmv_mat_view
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_mat_view
POSTHOOK: Output: hdfs://### HDFS PATH ###
2	bob	3.140000104904175
2	bonnie	172342.203125
PREHOOK: query: SHOW TBLPROPERTIES cmv_mat_view
PREHOOK: type: SHOW_TBLPROPERTIES
POSTHOOK: query: SHOW TBLPROPERTIES cmv_mat_view
POSTHOOK: type: SHOW_TBLPROPERTIES
COLUMN_STATS_ACCURATE	{"BASIC_STATS":"true"}
druid.datasource	default.cmv_mat_view
druid.segment.granularity	HOUR
numFiles	0
numRows	2
rawDataSize	0
storage_handler	org.apache.hadoop.hive.druid.DruidStorageHandler
totalSize	0
#### A masked pattern was here ####
PREHOOK: query: CREATE MATERIALIZED VIEW IF NOT EXISTS cmv_mat_view2 ENABLE REWRITE
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "HOUR")
AS
SELECT cast(t AS timestamp with local time zone) as `__time`, a, b, c
FROM cmv_basetable
WHERE a = 3
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_basetable
PREHOOK: Output: database:default
PREHOOK: Output: default@cmv_mat_view2
POSTHOOK: query: CREATE MATERIALIZED VIEW IF NOT EXISTS cmv_mat_view2 ENABLE REWRITE
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "HOUR")
AS
SELECT cast(t AS timestamp with local time zone) as `__time`, a, b, c
FROM cmv_basetable
WHERE a = 3
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_basetable
POSTHOOK: Output: database:default
POSTHOOK: Output: default@cmv_mat_view2
PREHOOK: query: SELECT a, c FROM cmv_mat_view2
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_mat_view2
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT a, c FROM cmv_mat_view2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_mat_view2
POSTHOOK: Output: hdfs://### HDFS PATH ###
3	978.760009765625
6	25.600000381469727
PREHOOK: query: SHOW TBLPROPERTIES cmv_mat_view2
PREHOOK: type: SHOW_TBLPROPERTIES
POSTHOOK: query: SHOW TBLPROPERTIES cmv_mat_view2
POSTHOOK: type: SHOW_TBLPROPERTIES
COLUMN_STATS_ACCURATE	{"BASIC_STATS":"true"}
druid.datasource	default.cmv_mat_view2
druid.segment.granularity	HOUR
numFiles	0
numRows	3
rawDataSize	0
storage_handler	org.apache.hadoop.hive.druid.DruidStorageHandler
totalSize	0
#### A masked pattern was here ####
PREHOOK: query: EXPLAIN
SELECT a, c
FROM cmv_basetable
WHERE a = 3
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT a, c
FROM cmv_basetable
WHERE a = 3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: cmv_basetable
          Filter Operator
            predicate: (a = 3) (type: boolean)
            Select Operator
              expressions: 3 (type: int), c (type: double)
              outputColumnNames: _col0, _col1
              ListSink

PREHOOK: query: SELECT a, c
FROM cmv_basetable
WHERE a = 3
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT a, c
FROM cmv_basetable
WHERE a = 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable
POSTHOOK: Output: hdfs://### HDFS PATH ###
3	15.8
3	9.8
3	978.76
Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: EXPLAIN
SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (XPROD_EDGE), Map 3 (XPROD_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable
                  Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (a = 3) (type: boolean)
                    Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: c (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: double)
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable
                  Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((a = 3) and (d = 3)) (type: boolean)
                    Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: c (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: double)
        Reducer 2 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 36 Data size: 1044 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 3 (type: int), _col0 (type: double), 3 (type: int), _col1 (type: double)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 36 Data size: 1044 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 36 Data size: 1044 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable
POSTHOOK: Output: hdfs://### HDFS PATH ###
3	15.8	3	978.76
3	9.8	3	978.76
3	978.76	3	978.76
PREHOOK: query: INSERT INTO cmv_basetable VALUES
 (cast(current_timestamp() AS timestamp), 3, 'charlie', 15.8, 1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@cmv_basetable
POSTHOOK: query: INSERT INTO cmv_basetable VALUES
 (cast(current_timestamp() AS timestamp), 3, 'charlie', 15.8, 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@cmv_basetable
POSTHOOK: Lineage: cmv_basetable.a SCRIPT []
POSTHOOK: Lineage: cmv_basetable.b SCRIPT []
POSTHOOK: Lineage: cmv_basetable.c SCRIPT []
POSTHOOK: Lineage: cmv_basetable.d SCRIPT []
POSTHOOK: Lineage: cmv_basetable.t SCRIPT []
Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: EXPLAIN
SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (XPROD_EDGE), Map 3 (XPROD_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable
                  Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (a = 3) (type: boolean)
                    Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: c (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: double)
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable
                  Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((a = 3) and (d = 3)) (type: boolean)
                    Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: c (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: double)
        Reducer 2 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 36 Data size: 1044 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 3 (type: int), _col0 (type: double), 3 (type: int), _col1 (type: double)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 36 Data size: 1044 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 36 Data size: 1044 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable
POSTHOOK: Output: hdfs://### HDFS PATH ###
3	15.8	3	978.76
3	15.8	3	978.76
3	9.8	3	978.76
3	978.76	3	978.76
PREHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW cmv_mat_view2 REBUILD
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
ALTER MATERIALIZED VIEW cmv_mat_view2 REBUILD
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-2
  Stage-5 depends on stages: Stage-2, Stage-1, Stage-3
  Stage-1 is a root stage
  Stage-3 is a root stage

STAGE PLANS:
  Stage: Stage-0
      Alter Table Operator:
        Alter Table
          type: drop props
          old name: default.cmv_mat_view2
          properties:
            COLUMN_STATS_ACCURATE 

  Stage: Stage-2
      Insert operator:
        Insert

  Stage: Stage-5
    Materialized View Work

  Stage: Stage-1
      Pre Insert operator:
        Pre-Insert task

  Stage: Stage-3
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable
                  Statistics: Num rows: 6 Data size: 2352 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (a = 3) (type: boolean)
                    Statistics: Num rows: 6 Data size: 2352 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: CAST( t AS timestamp with local time zone) (type: timestamp with local time zone), 3 (type: int), b (type: varchar(256)), c (type: double)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 6 Data size: 2352 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: _col0 (type: timestamp with local time zone), _col1 (type: int), _col2 (type: varchar(256)), _col3 (type: double), floor_hour(CAST( GenericUDFEpochMilli(_col0) AS TIMESTAMP)) (type: timestamp)
                        outputColumnNames: _col0, _col1, _col2, _col3, __time_granularity
                        Statistics: Num rows: 6 Data size: 2352 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: __time_granularity (type: timestamp)
                          sort order: +
                          Map-reduce partition columns: __time_granularity (type: timestamp)
                          Statistics: Num rows: 6 Data size: 2352 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col0 (type: timestamp with local time zone), _col1 (type: int), _col2 (type: varchar(256)), _col3 (type: double)
        Reducer 2 
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: timestamp with local time zone), VALUE._col1 (type: int), VALUE._col2 (type: varchar(256)), VALUE._col3 (type: double), KEY.__time_granularity (type: timestamp)
                outputColumnNames: _col0, _col1, _col2, _col3, __time_granularity
                Statistics: Num rows: 6 Data size: 2352 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Dp Sort State: PARTITION_SORTED
                  Statistics: Num rows: 6 Data size: 2352 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.hive.druid.io.DruidQueryBasedInputFormat
                      output format: org.apache.hadoop.hive.druid.io.DruidOutputFormat
                      serde: org.apache.hadoop.hive.druid.serde.DruidSerDe
                      name: default.cmv_mat_view2

PREHOOK: query: ALTER MATERIALIZED VIEW cmv_mat_view2 REBUILD
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable
PREHOOK: Output: default@cmv_mat_view2
POSTHOOK: query: ALTER MATERIALIZED VIEW cmv_mat_view2 REBUILD
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable
POSTHOOK: Output: default@cmv_mat_view2
PREHOOK: query: SHOW TBLPROPERTIES cmv_mat_view2
PREHOOK: type: SHOW_TBLPROPERTIES
POSTHOOK: query: SHOW TBLPROPERTIES cmv_mat_view2
POSTHOOK: type: SHOW_TBLPROPERTIES
druid.datasource	default.cmv_mat_view2
druid.segment.granularity	HOUR
#### A masked pattern was here ####
numFiles	0
numRows	3
rawDataSize	0
storage_handler	org.apache.hadoop.hive.druid.DruidStorageHandler
totalSize	0
#### A masked pattern was here ####
Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: EXPLAIN
SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (XPROD_EDGE), Map 3 (XPROD_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable
                  Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (a = 3) (type: boolean)
                    Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: c (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 6 Data size: 72 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: double)
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: cmv_basetable
                  Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((a = 3) and (d = 3)) (type: boolean)
                    Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: c (type: double)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 6 Data size: 96 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: double)
        Reducer 2 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 
                  1 
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 36 Data size: 1044 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 3 (type: int), _col0 (type: double), 3 (type: int), _col1 (type: double)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 36 Data size: 1044 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 36 Data size: 1044 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join MERGEJOIN[13][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
PREHOOK: type: QUERY
PREHOOK: Input: default@cmv_basetable
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM (
  (SELECT a, c FROM cmv_basetable WHERE a = 3) table1
  JOIN
  (SELECT a, c FROM cmv_basetable WHERE d = 3) table2
  ON table1.a = table2.a)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@cmv_basetable
POSTHOOK: Output: hdfs://### HDFS PATH ###
3	15.8	3	978.76
3	15.8	3	978.76
3	9.8	3	978.76
3	978.76	3	978.76
PREHOOK: query: DROP MATERIALIZED VIEW cmv_mat_view
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_mat_view
PREHOOK: Output: default@cmv_mat_view
POSTHOOK: query: DROP MATERIALIZED VIEW cmv_mat_view
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_mat_view
POSTHOOK: Output: default@cmv_mat_view
PREHOOK: query: DROP MATERIALIZED VIEW cmv_mat_view2
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@cmv_mat_view2
PREHOOK: Output: default@cmv_mat_view2
POSTHOOK: query: DROP MATERIALIZED VIEW cmv_mat_view2
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@cmv_mat_view2
POSTHOOK: Output: default@cmv_mat_view2
PREHOOK: query: DROP TABLE cmv_basetable
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@cmv_basetable
PREHOOK: Output: default@cmv_basetable
POSTHOOK: query: DROP TABLE cmv_basetable
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@cmv_basetable
POSTHOOK: Output: default@cmv_basetable
