PREHOOK: query: CREATE TABLE druid_alltypesorc
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "HOUR", "druid.query.granularity" = "MINUTE")
AS
SELECT cast (`ctimestamp2` as timestamp with local time zone) as `__time`,
  cstring1,
  cstring2,
  cdouble,
  cfloat,
  ctinyint,
  csmallint,
  cint,
  cbigint,
  cboolean1,
  cboolean2
  FROM alltypesorc where ctimestamp2 IS NOT NULL
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: database:default
PREHOOK: Output: default@druid_alltypesorc
POSTHOOK: query: CREATE TABLE druid_alltypesorc
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "HOUR", "druid.query.granularity" = "MINUTE")
AS
SELECT cast (`ctimestamp2` as timestamp with local time zone) as `__time`,
  cstring1,
  cstring2,
  cdouble,
  cfloat,
  ctinyint,
  csmallint,
  cint,
  cbigint,
  cboolean1,
  cboolean2
  FROM alltypesorc where ctimestamp2 IS NOT NULL
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@druid_alltypesorc
POSTHOOK: Lineage: druid_alltypesorc.__time EXPRESSION [(alltypesorc)alltypesorc.FieldSchema(name:ctimestamp2, type:timestamp, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.cbigint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cbigint, type:bigint, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.cboolean1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean1, type:boolean, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.cboolean2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cboolean2, type:boolean, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.cdouble SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cdouble, type:double, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.cfloat SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cfloat, type:float, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.cint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cint, type:int, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.csmallint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:csmallint, type:smallint, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.cstring1 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring1, type:string, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.cstring2 SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:cstring2, type:string, comment:null), ]
POSTHOOK: Lineage: druid_alltypesorc.ctinyint SIMPLE [(alltypesorc)alltypesorc.FieldSchema(name:ctinyint, type:tinyint, comment:null), ]
PREHOOK: query: SELECT COUNT(*) FROM druid_alltypesorc
PREHOOK: type: QUERY
PREHOOK: Input: default@druid_alltypesorc
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT COUNT(*) FROM druid_alltypesorc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@druid_alltypesorc
POSTHOOK: Output: hdfs://### HDFS PATH ###
6057
PREHOOK: query: INSERT INTO TABLE druid_alltypesorc
SELECT cast (`ctimestamp1` as timestamp with local time zone) as `__time`,
  cstring1,
  cstring2,
  cdouble,
  cfloat,
  ctinyint,
  csmallint,
  cint,
  cbigint,
  cboolean1,
  cboolean2
  FROM alltypesorc where ctimestamp1 IS NOT NULL
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: default@druid_alltypesorc
POSTHOOK: query: INSERT INTO TABLE druid_alltypesorc
SELECT cast (`ctimestamp1` as timestamp with local time zone) as `__time`,
  cstring1,
  cstring2,
  cdouble,
  cfloat,
  ctinyint,
  csmallint,
  cint,
  cbigint,
  cboolean1,
  cboolean2
  FROM alltypesorc where ctimestamp1 IS NOT NULL
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: default@druid_alltypesorc
PREHOOK: query: SELECT COUNT(*) FROM druid_alltypesorc
PREHOOK: type: QUERY
PREHOOK: Input: default@druid_alltypesorc
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT COUNT(*) FROM druid_alltypesorc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@druid_alltypesorc
POSTHOOK: Output: hdfs://### HDFS PATH ###
12162
PREHOOK: query: INSERT OVERWRITE TABLE druid_alltypesorc
SELECT cast (`ctimestamp1` as timestamp with local time zone) as `__time`,
  cstring1,
  cstring2,
  cdouble,
  cfloat,
  ctinyint,
  csmallint,
  cint,
  cbigint,
  cboolean1,
  cboolean2
  FROM alltypesorc where ctimestamp1 IS NOT NULL
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: default@druid_alltypesorc
POSTHOOK: query: INSERT OVERWRITE TABLE druid_alltypesorc
SELECT cast (`ctimestamp1` as timestamp with local time zone) as `__time`,
  cstring1,
  cstring2,
  cdouble,
  cfloat,
  ctinyint,
  csmallint,
  cint,
  cbigint,
  cboolean1,
  cboolean2
  FROM alltypesorc where ctimestamp1 IS NOT NULL
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: default@druid_alltypesorc
PREHOOK: query: SELECT COUNT(*) FROM druid_alltypesorc
PREHOOK: type: QUERY
PREHOOK: Input: default@druid_alltypesorc
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT COUNT(*) FROM druid_alltypesorc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@druid_alltypesorc
POSTHOOK: Output: hdfs://### HDFS PATH ###
6105
PREHOOK: query: DROP TABLE druid_alltypesorc
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@druid_alltypesorc
PREHOOK: Output: default@druid_alltypesorc
POSTHOOK: query: DROP TABLE druid_alltypesorc
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@druid_alltypesorc
POSTHOOK: Output: default@druid_alltypesorc
PREHOOK: query: -- Test create then insert
 
 create database druid_test_create_then_insert
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:druid_test_create_then_insert
POSTHOOK: query: -- Test create then insert
 
 create database druid_test_create_then_insert
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:druid_test_create_then_insert
PREHOOK: query: use druid_test_create_then_insert
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:druid_test_create_then_insert
POSTHOOK: query: use druid_test_create_then_insert
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:druid_test_create_then_insert
PREHOOK: query: create table test_table(`timecolumn` timestamp, `userid` string, `num_l` float)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:druid_test_create_then_insert
PREHOOK: Output: druid_test_create_then_insert@test_table
POSTHOOK: query: create table test_table(`timecolumn` timestamp, `userid` string, `num_l` float)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:druid_test_create_then_insert
POSTHOOK: Output: druid_test_create_then_insert@test_table
PREHOOK: query: insert into test_table values ('2015-01-08 00:00:00', 'i1-start', 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: druid_test_create_then_insert@test_table
POSTHOOK: query: insert into test_table values ('2015-01-08 00:00:00', 'i1-start', 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: druid_test_create_then_insert@test_table
POSTHOOK: Lineage: test_table.num_l SCRIPT []
POSTHOOK: Lineage: test_table.timecolumn SCRIPT []
POSTHOOK: Lineage: test_table.userid SCRIPT []
PREHOOK: query: insert into test_table values ('2015-01-08 23:59:59', 'i1-end', 1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: druid_test_create_then_insert@test_table
POSTHOOK: query: insert into test_table values ('2015-01-08 23:59:59', 'i1-end', 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: druid_test_create_then_insert@test_table
POSTHOOK: Lineage: test_table.num_l SCRIPT []
POSTHOOK: Lineage: test_table.timecolumn SCRIPT []
POSTHOOK: Lineage: test_table.userid SCRIPT []
PREHOOK: query: CREATE TABLE druid_table (`__time` timestamp with local time zone, `userid` string, `num_l` float)
 STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
 TBLPROPERTIES ("druid.segment.granularity" = "DAY")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:druid_test_create_then_insert
PREHOOK: Output: druid_test_create_then_insert@druid_table
POSTHOOK: query: CREATE TABLE druid_table (`__time` timestamp with local time zone, `userid` string, `num_l` float)
 STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
 TBLPROPERTIES ("druid.segment.granularity" = "DAY")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:druid_test_create_then_insert
POSTHOOK: Output: druid_test_create_then_insert@druid_table
PREHOOK: query: INSERT INTO TABLE druid_table
 select cast(`timecolumn` as timestamp with local time zone) as `__time`, `userid`, `num_l` FROM test_table
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_create_then_insert@test_table
PREHOOK: Output: druid_test_create_then_insert@druid_table
POSTHOOK: query: INSERT INTO TABLE druid_table
 select cast(`timecolumn` as timestamp with local time zone) as `__time`, `userid`, `num_l` FROM test_table
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_create_then_insert@test_table
POSTHOOK: Output: druid_test_create_then_insert@druid_table
PREHOOK: query: select count(*) FROM druid_table
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_create_then_insert@druid_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) FROM druid_table
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_create_then_insert@druid_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2
PREHOOK: query: DROP TABLE  test_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: druid_test_create_then_insert@test_table
PREHOOK: Output: druid_test_create_then_insert@test_table
POSTHOOK: query: DROP TABLE  test_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: druid_test_create_then_insert@test_table
POSTHOOK: Output: druid_test_create_then_insert@test_table
PREHOOK: query: DROP TABLE druid_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: druid_test_create_then_insert@druid_table
PREHOOK: Output: druid_test_create_then_insert@druid_table
POSTHOOK: query: DROP TABLE druid_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: druid_test_create_then_insert@druid_table
POSTHOOK: Output: druid_test_create_then_insert@druid_table
PREHOOK: query: DROP DATABASE druid_test_create_then_insert
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:druid_test_create_then_insert
PREHOOK: Output: database:druid_test_create_then_insert
POSTHOOK: query: DROP DATABASE druid_test_create_then_insert
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:druid_test_create_then_insert
POSTHOOK: Output: database:druid_test_create_then_insert
PREHOOK: query: create database druid_test_dst
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:druid_test_dst
POSTHOOK: query: create database druid_test_dst
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:druid_test_dst
PREHOOK: query: use druid_test_dst
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:druid_test_dst
POSTHOOK: query: use druid_test_dst
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:druid_test_dst
PREHOOK: query: create table test_base_table(`timecolumn` timestamp, `userid` string, `num_l` float)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:druid_test_dst
PREHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: query: create table test_base_table(`timecolumn` timestamp, `userid` string, `num_l` float)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:druid_test_dst
POSTHOOK: Output: druid_test_dst@test_base_table
PREHOOK: query: insert into test_base_table values ('2015-03-08 00:00:00', 'i1-start', 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: query: insert into test_base_table values ('2015-03-08 00:00:00', 'i1-start', 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: Lineage: test_base_table.num_l SCRIPT []
POSTHOOK: Lineage: test_base_table.timecolumn SCRIPT []
POSTHOOK: Lineage: test_base_table.userid SCRIPT []
PREHOOK: query: insert into test_base_table values ('2015-03-08 23:59:59', 'i1-end', 1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: query: insert into test_base_table values ('2015-03-08 23:59:59', 'i1-end', 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: Lineage: test_base_table.num_l SCRIPT []
POSTHOOK: Lineage: test_base_table.timecolumn SCRIPT []
POSTHOOK: Lineage: test_base_table.userid SCRIPT []
PREHOOK: query: insert into test_base_table values ('2015-03-09 00:00:00', 'i2-start', 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: query: insert into test_base_table values ('2015-03-09 00:00:00', 'i2-start', 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: Lineage: test_base_table.num_l SCRIPT []
POSTHOOK: Lineage: test_base_table.timecolumn SCRIPT []
POSTHOOK: Lineage: test_base_table.userid SCRIPT []
PREHOOK: query: insert into test_base_table values ('2015-03-09 23:59:59', 'i2-end', 1)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: query: insert into test_base_table values ('2015-03-09 23:59:59', 'i2-end', 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: Lineage: test_base_table.num_l SCRIPT []
POSTHOOK: Lineage: test_base_table.timecolumn SCRIPT []
POSTHOOK: Lineage: test_base_table.userid SCRIPT []
PREHOOK: query: insert into test_base_table values ('2015-03-10 00:00:00', 'i3-start', 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: query: insert into test_base_table values ('2015-03-10 00:00:00', 'i3-start', 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: Lineage: test_base_table.num_l SCRIPT []
POSTHOOK: Lineage: test_base_table.timecolumn SCRIPT []
POSTHOOK: Lineage: test_base_table.userid SCRIPT []
PREHOOK: query: insert into test_base_table values ('2015-03-10 23:59:59', 'i3-end', 2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: query: insert into test_base_table values ('2015-03-10 23:59:59', 'i3-end', 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: Lineage: test_base_table.num_l SCRIPT []
POSTHOOK: Lineage: test_base_table.timecolumn SCRIPT []
POSTHOOK: Lineage: test_base_table.userid SCRIPT []
PREHOOK: query: CREATE TABLE druid_test_table
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "DAY")
AS
select cast(`timecolumn` as timestamp with local time zone) as `__time`, `userid`, `num_l` FROM test_base_table
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: druid_test_dst@test_base_table
PREHOOK: Output: database:druid_test_dst
PREHOOK: Output: druid_test_dst@druid_test_table
POSTHOOK: query: CREATE TABLE druid_test_table
STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
TBLPROPERTIES ("druid.segment.granularity" = "DAY")
AS
select cast(`timecolumn` as timestamp with local time zone) as `__time`, `userid`, `num_l` FROM test_base_table
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: druid_test_dst@test_base_table
POSTHOOK: Output: database:druid_test_dst
POSTHOOK: Output: druid_test_dst@druid_test_table
POSTHOOK: Lineage: druid_test_table.__time EXPRESSION [(test_base_table)test_base_table.FieldSchema(name:timecolumn, type:timestamp, comment:null), ]
POSTHOOK: Lineage: druid_test_table.num_l SIMPLE [(test_base_table)test_base_table.FieldSchema(name:num_l, type:float, comment:null), ]
POSTHOOK: Lineage: druid_test_table.userid SIMPLE [(test_base_table)test_base_table.FieldSchema(name:userid, type:string, comment:null), ]
PREHOOK: query: select * FROM druid_test_table
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * FROM druid_test_table
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-08 00:00:00.0 US/Pacific	i1-start	4.0
2015-03-08 23:59:59.0 US/Pacific	i1-end	1.0
2015-03-09 00:00:00.0 US/Pacific	i2-start	4.0
2015-03-09 23:59:59.0 US/Pacific	i2-end	1.0
2015-03-10 00:00:00.0 US/Pacific	i3-start	2.0
2015-03-10 23:59:59.0 US/Pacific	i3-end	2.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-08 00:00:00' as timestamp with local time zone)
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-08 00:00:00' as timestamp with local time zone)
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-08 00:00:00.0 US/Pacific	i1-start	4.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-08 23:59:59' as timestamp with local time zone)
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-08 23:59:59' as timestamp with local time zone)
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-08 23:59:59.0 US/Pacific	i1-end	1.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-09 00:00:00' as timestamp with local time zone)
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-09 00:00:00' as timestamp with local time zone)
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-09 00:00:00.0 US/Pacific	i2-start	4.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-09 23:59:59' as timestamp with local time zone)
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-09 23:59:59' as timestamp with local time zone)
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-09 23:59:59.0 US/Pacific	i2-end	1.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-10 00:00:00' as timestamp with local time zone)
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-10 00:00:00' as timestamp with local time zone)
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-10 00:00:00.0 US/Pacific	i3-start	2.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-10 23:59:59' as timestamp with local time zone)
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-10 23:59:59' as timestamp with local time zone)
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-10 23:59:59.0 US/Pacific	i3-end	2.0
PREHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-08 00:00:00' as timestamp with local time zone)
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-08 00:00:00' as timestamp with local time zone)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-08T08:00:00.000Z/2015-03-08T08:00:00.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-08 00:00:00.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-08 23:59:59' as timestamp with local time zone)
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-08 23:59:59' as timestamp with local time zone)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-09T06:59:59.000Z/2015-03-09T06:59:59.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-08 23:59:59.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-09 00:00:00' as timestamp with local time zone)
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-09 00:00:00' as timestamp with local time zone)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-09T07:00:00.000Z/2015-03-09T07:00:00.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-09 00:00:00.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-09 23:59:59' as timestamp with local time zone)
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-09 23:59:59' as timestamp with local time zone)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-10T06:59:59.000Z/2015-03-10T06:59:59.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-09 23:59:59.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-10 00:00:00' as timestamp with local time zone)
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-10 00:00:00' as timestamp with local time zone)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-10T07:00:00.000Z/2015-03-10T07:00:00.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-10 00:00:00.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-10 23:59:59' as timestamp with local time zone)
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from druid_test_table where `__time` = cast('2015-03-10 23:59:59' as timestamp with local time zone)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-11T06:59:59.000Z/2015-03-11T06:59:59.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-10 23:59:59.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-08 00:00:00' as timestamp )
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-08 00:00:00' as timestamp )
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-08 00:00:00.0 US/Pacific	i1-start	4.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-08 23:59:59' as timestamp )
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-08 23:59:59' as timestamp )
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-08 23:59:59.0 US/Pacific	i1-end	1.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-09 00:00:00' as timestamp )
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-09 00:00:00' as timestamp )
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-09 00:00:00.0 US/Pacific	i2-start	4.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-09 23:59:59' as timestamp )
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-09 23:59:59' as timestamp )
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-09 23:59:59.0 US/Pacific	i2-end	1.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-10 00:00:00' as timestamp )
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-10 00:00:00' as timestamp )
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-10 00:00:00.0 US/Pacific	i3-start	2.0
PREHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-10 23:59:59' as timestamp )
PREHOOK: type: QUERY
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from druid_test_table where `__time` = cast('2015-03-10 23:59:59' as timestamp )
POSTHOOK: type: QUERY
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: hdfs://### HDFS PATH ###
2015-03-10 23:59:59.0 US/Pacific	i3-end	2.0
PREHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-08 00:00:00' as timestamp )
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-08 00:00:00' as timestamp )
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-08T08:00:00.000Z/2015-03-08T08:00:00.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-08 00:00:00.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-08 23:59:59' as timestamp )
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-08 23:59:59' as timestamp )
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-09T06:59:59.000Z/2015-03-09T06:59:59.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-08 23:59:59.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-09 00:00:00' as timestamp )
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-09 00:00:00' as timestamp )
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-09T07:00:00.000Z/2015-03-09T07:00:00.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-09 00:00:00.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-09 23:59:59' as timestamp )
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-09 23:59:59' as timestamp )
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-10T06:59:59.000Z/2015-03-10T06:59:59.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-09 23:59:59.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-10 00:00:00' as timestamp )
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-10 00:00:00' as timestamp )
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-10T07:00:00.000Z/2015-03-10T07:00:00.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-10 00:00:00.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-10 23:59:59' as timestamp )
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN select * from druid_test_table where `__time` = cast('2015-03-10 23:59:59' as timestamp )
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: druid_test_table
          properties:
            druid.fieldNames userid,num_l
            druid.fieldTypes string,float
            druid.query.json {"queryType":"scan","dataSource":"druid_test_dst.druid_test_table","intervals":["2015-03-11T06:59:59.000Z/2015-03-11T06:59:59.001Z"],"columns":["userid","num_l"],"resultFormat":"compactedList"}
            druid.query.type scan
          Select Operator
            expressions: TIMESTAMPLOCALTZ'2015-03-10 23:59:59.0 US/Pacific' (type: timestamp with local time zone), userid (type: string), num_l (type: float)
            outputColumnNames: _col0, _col1, _col2
            ListSink

PREHOOK: query: DROP TABLE test_base_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: druid_test_dst@test_base_table
PREHOOK: Output: druid_test_dst@test_base_table
POSTHOOK: query: DROP TABLE test_base_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: druid_test_dst@test_base_table
POSTHOOK: Output: druid_test_dst@test_base_table
PREHOOK: query: DROP TABLE druid_test_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: druid_test_dst@druid_test_table
PREHOOK: Output: druid_test_dst@druid_test_table
POSTHOOK: query: DROP TABLE druid_test_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: druid_test_dst@druid_test_table
POSTHOOK: Output: druid_test_dst@druid_test_table
PREHOOK: query: drop   database druid_test_dst
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:druid_test_dst
PREHOOK: Output: database:druid_test_dst
POSTHOOK: query: drop   database druid_test_dst
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:druid_test_dst
POSTHOOK: Output: database:druid_test_dst
