PREHOOK: query: CREATE TABLE druid_kafka_test(`__time` timestamp, page string, `user` string, language string, added int, deleted int)
        STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
        TBLPROPERTIES (
        "druid.segment.granularity" = "MONTH",
        "druid.query.granularity" = "MINUTE",
        "kafka.bootstrap.servers" = "localhost:9092",
        "kafka.topic" = "test-topic",
        "druid.kafka.ingestion.useEarliestOffset" = "true",
        "druid.kafka.ingestion.maxRowsInMemory" = "5",
        "druid.kafka.ingestion.startDelay" = "PT1S",
        "druid.kafka.ingestion.taskDuration" = "PT20S",
        "druid.kafka.ingestion.period" = "PT1S"
        )
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@druid_kafka_test
POSTHOOK: query: CREATE TABLE druid_kafka_test(`__time` timestamp, page string, `user` string, language string, added int, deleted int)
        STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
        TBLPROPERTIES (
        "druid.segment.granularity" = "MONTH",
        "druid.query.granularity" = "MINUTE",
        "kafka.bootstrap.servers" = "localhost:9092",
        "kafka.topic" = "test-topic",
        "druid.kafka.ingestion.useEarliestOffset" = "true",
        "druid.kafka.ingestion.maxRowsInMemory" = "5",
        "druid.kafka.ingestion.startDelay" = "PT1S",
        "druid.kafka.ingestion.taskDuration" = "PT20S",
        "druid.kafka.ingestion.period" = "PT1S"
        )
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@druid_kafka_test
PREHOOK: query: ALTER TABLE druid_kafka_test SET TBLPROPERTIES('druid.kafka.ingestion' = 'START')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: default@druid_kafka_test
PREHOOK: Output: default@druid_kafka_test
POSTHOOK: query: ALTER TABLE druid_kafka_test SET TBLPROPERTIES('druid.kafka.ingestion' = 'START')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: default@druid_kafka_test
POSTHOOK: Output: default@druid_kafka_test
["default.druid_kafka_test"]
PREHOOK: query: DESCRIBE druid_kafka_test
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@druid_kafka_test
POSTHOOK: query: DESCRIBE druid_kafka_test
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@druid_kafka_test
__time              	timestamp           	from deserializer   
page                	string              	from deserializer   
user                	string              	from deserializer   
language            	string              	from deserializer   
added               	int                 	from deserializer   
deleted             	int                 	from deserializer   
PREHOOK: query: DESCRIBE EXTENDED druid_kafka_test
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@druid_kafka_test
POSTHOOK: query: DESCRIBE EXTENDED druid_kafka_test
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@druid_kafka_test
__time              	timestamp           	from deserializer   
page                	string              	from deserializer   
user                	string              	from deserializer   
language            	string              	from deserializer   
added               	int                 	from deserializer   
deleted             	int                 	from deserializer   
	 	 
#### A masked pattern was here ####
StorageHandlerInfo	 	 
Druid Storage Handler Runtime Status for default.druid_kafka_test	 	 
kafkaPartitions=1	 	 
activeTasks=[]	 	 
publishingTasks=[]	 	 
latestOffsets={0=10}	 	 
minimumLag={0=0}	 	 
aggregateLag=0	 	 
#### A masked pattern was here ####
PREHOOK: query: Select count(*) FROM druid_kafka_test
PREHOOK: type: QUERY
PREHOOK: Input: default@druid_kafka_test
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: Select count(*) FROM druid_kafka_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@druid_kafka_test
POSTHOOK: Output: hdfs://### HDFS PATH ###
10
PREHOOK: query: Select page FROM druid_kafka_test order by page
PREHOOK: type: QUERY
PREHOOK: Input: default@druid_kafka_test
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: Select page FROM druid_kafka_test order by page
POSTHOOK: type: QUERY
POSTHOOK: Input: default@druid_kafka_test
POSTHOOK: Output: hdfs://### HDFS PATH ###
Cherno Alpha
Cherno Alpha
Coyote Tango
Coyote Tango
Crimson Typhoon
Crimson Typhoon
Gypsy Danger
Gypsy Danger
Striker Eureka
Striker Eureka
PREHOOK: query: ALTER TABLE druid_kafka_test SET TBLPROPERTIES('druid.kafka.ingestion' = 'RESET')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: default@druid_kafka_test
PREHOOK: Output: default@druid_kafka_test
POSTHOOK: query: ALTER TABLE druid_kafka_test SET TBLPROPERTIES('druid.kafka.ingestion' = 'RESET')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: default@druid_kafka_test
POSTHOOK: Output: default@druid_kafka_test
PREHOOK: query: DESCRIBE druid_kafka_test
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@druid_kafka_test
POSTHOOK: query: DESCRIBE druid_kafka_test
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@druid_kafka_test
__time              	timestamp           	from deserializer   
page                	string              	from deserializer   
user                	string              	from deserializer   
language            	string              	from deserializer   
added               	int                 	from deserializer   
deleted             	int                 	from deserializer   
PREHOOK: query: DESCRIBE EXTENDED druid_kafka_test
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@druid_kafka_test
POSTHOOK: query: DESCRIBE EXTENDED druid_kafka_test
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@druid_kafka_test
__time              	timestamp           	from deserializer   
page                	string              	from deserializer   
user                	string              	from deserializer   
language            	string              	from deserializer   
added               	int                 	from deserializer   
deleted             	int                 	from deserializer   
	 	 
#### A masked pattern was here ####
StorageHandlerInfo	 	 
Druid Storage Handler Runtime Status for default.druid_kafka_test	 	 
kafkaPartitions=1	 	 
activeTasks=[]	 	 
publishingTasks=[]	 	 
latestOffsets={0=10}	 	 
minimumLag={}	 	 
aggregateLag=0	 	 
#### A masked pattern was here ####
PREHOOK: query: Select count(*) FROM druid_kafka_test
PREHOOK: type: QUERY
PREHOOK: Input: default@druid_kafka_test
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: Select count(*) FROM druid_kafka_test
POSTHOOK: type: QUERY
POSTHOOK: Input: default@druid_kafka_test
POSTHOOK: Output: hdfs://### HDFS PATH ###
10
PREHOOK: query: Select page FROM druid_kafka_test order by page
PREHOOK: type: QUERY
PREHOOK: Input: default@druid_kafka_test
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: Select page FROM druid_kafka_test order by page
POSTHOOK: type: QUERY
POSTHOOK: Input: default@druid_kafka_test
POSTHOOK: Output: hdfs://### HDFS PATH ###
Cherno Alpha
Cherno Alpha
Coyote Tango
Coyote Tango
Crimson Typhoon
Crimson Typhoon
Gypsy Danger
Gypsy Danger
Striker Eureka
Striker Eureka
PREHOOK: query: CREATE TABLE languages(shortname string, fullname string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@languages
POSTHOOK: query: CREATE TABLE languages(shortname string, fullname string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@languages
PREHOOK: query: INSERT INTO languages values
("en", "english"),
("ru", "russian")
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@languages
POSTHOOK: query: INSERT INTO languages values
("en", "english"),
("ru", "russian")
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@languages
POSTHOOK: Lineage: languages.fullname SCRIPT []
POSTHOOK: Lineage: languages.shortname SCRIPT []
PREHOOK: query: EXPLAIN EXTENDED
SELECT a.fullname, b.`user`
FROM
(
(SELECT fullname, shortname
FROM languages) a
JOIN
(SELECT language, `user`
FROM druid_kafka_test) b
  ON a.shortname = b.language
)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
SELECT a.fullname, b.`user`
FROM
(
(SELECT fullname, shortname
FROM languages) a
JOIN
(SELECT language, `user`
FROM druid_kafka_test) b
  ON a.shortname = b.language
)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: languages
                  Statistics: Num rows: 2 Data size: 354 Basic stats: COMPLETE Column stats: COMPLETE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: shortname is not null (type: boolean)
                    Statistics: Num rows: 2 Data size: 354 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: fullname (type: string), shortname (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 2 Data size: 354 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col1 (type: string)
                        Statistics: Num rows: 2 Data size: 354 Basic stats: COMPLETE Column stats: COMPLETE
                        tag: 0
                        value expressions: _col0 (type: string)
                        auto parallelism: true
            Path -> Alias:
              hdfs://### HDFS PATH ### [languages]
            Path -> Partition:
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: languages
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"fullname":"true","shortname":"true"}}
                    bucket_count -1
                    bucketing_version 2
                    column.name.delimiter ,
                    columns shortname,fullname
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.languages
                    numFiles 1
                    numRows 2
                    rawDataSize 20
                    serialization.ddl struct languages { string shortname, string fullname}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 22
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"fullname":"true","shortname":"true"}}
                      bucket_count -1
                      bucketing_version 2
                      column.name.delimiter ,
                      columns shortname,fullname
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.languages
                      numFiles 1
                      numRows 2
                      rawDataSize 20
                      serialization.ddl struct languages { string shortname, string fullname}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 22
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.languages
                  name: default.languages
            Truncated Path -> Alias:
              /languages [languages]
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: druid_kafka_test
                  properties:
                    druid.fieldNames language,user
                    druid.fieldTypes string,string
                    druid.query.json {"queryType":"scan","dataSource":"default.druid_kafka_test","intervals":["1900-01-01T00:00:00.000Z/3000-01-01T00:00:00.000Z"],"filter":{"type":"not","field":{"type":"selector","dimension":"language","value":null}},"columns":["language","user"],"resultFormat":"compactedList"}
                    druid.query.type scan
                  Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Reduce Output Operator
                    key expressions: language (type: string)
                    null sort order: a
                    sort order: +
                    Map-reduce partition columns: language (type: string)
                    Statistics: Num rows: 1 Data size: 368 Basic stats: COMPLETE Column stats: NONE
                    tag: 1
                    value expressions: user (type: string)
                    auto parallelism: true
            Path -> Alias:
              hdfs://### HDFS PATH ### [druid_kafka_test]
            Path -> Partition:
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: druid_kafka_test
                  input format: org.apache.hadoop.hive.druid.io.DruidQueryBasedInputFormat
                  output format: org.apache.hadoop.hive.druid.io.DruidOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"__time":"true","added":"true","deleted":"true","language":"true","page":"true","user":"true"}}
                    bucket_count -1
                    bucketing_version 2
                    column.name.delimiter ,
                    columns __time,page,user,language,added,deleted
                    columns.comments 
                    columns.types timestamp:string:string:string:int:int
                    druid.datasource default.druid_kafka_test
                    druid.fieldNames language,user
                    druid.fieldTypes string,string
                    druid.kafka.ingestion.maxRowsInMemory 5
                    druid.kafka.ingestion.period PT1S
                    druid.kafka.ingestion.startDelay PT1S
                    druid.kafka.ingestion.taskDuration PT20S
                    druid.kafka.ingestion.useEarliestOffset true
                    druid.query.granularity MINUTE
                    druid.query.json {"queryType":"scan","dataSource":"default.druid_kafka_test","intervals":["1900-01-01T00:00:00.000Z/3000-01-01T00:00:00.000Z"],"filter":{"type":"not","field":{"type":"selector","dimension":"language","value":null}},"columns":["language","user"],"resultFormat":"compactedList"}
                    druid.query.type scan
                    druid.segment.granularity MONTH
#### A masked pattern was here ####
                    kafka.bootstrap.servers localhost:9092
                    kafka.topic test-topic
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.druid_kafka_test
                    numFiles 0
                    numRows 0
                    rawDataSize 0
                    serialization.ddl struct druid_kafka_test { timestamp __time, string page, string user, string language, i32 added, i32 deleted}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.druid.serde.DruidSerDe
                    storage_handler org.apache.hadoop.hive.druid.DruidStorageHandler
                    totalSize 0
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.druid.serde.DruidSerDe
                
                    input format: org.apache.hadoop.hive.druid.io.DruidQueryBasedInputFormat
                    output format: org.apache.hadoop.hive.druid.io.DruidOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"__time":"true","added":"true","deleted":"true","language":"true","page":"true","user":"true"}}
                      bucket_count -1
                      bucketing_version 2
                      column.name.delimiter ,
                      columns __time,page,user,language,added,deleted
                      columns.comments 
                      columns.types timestamp:string:string:string:int:int
                      druid.datasource default.druid_kafka_test
                      druid.fieldNames language,user
                      druid.fieldTypes string,string
                      druid.kafka.ingestion.maxRowsInMemory 5
                      druid.kafka.ingestion.period PT1S
                      druid.kafka.ingestion.startDelay PT1S
                      druid.kafka.ingestion.taskDuration PT20S
                      druid.kafka.ingestion.useEarliestOffset true
                      druid.query.granularity MINUTE
                      druid.query.json {"queryType":"scan","dataSource":"default.druid_kafka_test","intervals":["1900-01-01T00:00:00.000Z/3000-01-01T00:00:00.000Z"],"filter":{"type":"not","field":{"type":"selector","dimension":"language","value":null}},"columns":["language","user"],"resultFormat":"compactedList"}
                      druid.query.type scan
                      druid.segment.granularity MONTH
#### A masked pattern was here ####
                      kafka.bootstrap.servers localhost:9092
                      kafka.topic test-topic
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.druid_kafka_test
                      numFiles 0
                      numRows 0
                      rawDataSize 0
                      serialization.ddl struct druid_kafka_test { timestamp __time, string page, string user, string language, i32 added, i32 deleted}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.druid.serde.DruidSerDe
                      storage_handler org.apache.hadoop.hive.druid.DruidStorageHandler
                      totalSize 0
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.druid.serde.DruidSerDe
                    name: default.druid_kafka_test
                  name: default.druid_kafka_test
            Truncated Path -> Alias:
              /druid_kafka_test [druid_kafka_test]
        Reducer 2 
            Needs Tagging: false
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: string)
                  1 language (type: string)
                outputColumnNames: _col0, _col3
                Position of Big Table: 0
                Statistics: Num rows: 2 Data size: 389 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col3 (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 389 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 0
                    directory: hdfs://### HDFS PATH ###
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 2 Data size: 389 Basic stats: COMPLETE Column stats: NONE
                    Stats Publishing Key Prefix: hdfs://### HDFS PATH ###
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          columns _col0,_col1
                          columns.types string:string
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a.fullname, b.`user`
FROM
(
(SELECT fullname, shortname
FROM languages) a
JOIN
(SELECT language, `user`
FROM druid_kafka_test) b
  ON a.shortname = b.language
) order by b.`user`
PREHOOK: type: QUERY
PREHOOK: Input: default@druid_kafka_test
PREHOOK: Input: default@languages
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT a.fullname, b.`user`
FROM
(
(SELECT fullname, shortname
FROM languages) a
JOIN
(SELECT language, `user`
FROM druid_kafka_test) b
  ON a.shortname = b.language
) order by b.`user`
POSTHOOK: type: QUERY
POSTHOOK: Input: default@druid_kafka_test
POSTHOOK: Input: default@languages
POSTHOOK: Output: hdfs://### HDFS PATH ###
russian	masterYi
russian	masterYi
english	nuclear
english	nuclear
english	speed
english	speed
PREHOOK: query: DROP TABLE druid_kafka_test
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@druid_kafka_test
PREHOOK: Output: default@druid_kafka_test
POSTHOOK: query: DROP TABLE druid_kafka_test
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@druid_kafka_test
POSTHOOK: Output: default@druid_kafka_test
