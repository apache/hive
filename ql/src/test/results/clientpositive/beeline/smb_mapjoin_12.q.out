PREHOOK: query: CREATE TABLE test_table1_n6 (key INT, value STRING) PARTITIONED BY (ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 16 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_table1_n6
POSTHOOK: query: CREATE TABLE test_table1_n6 (key INT, value STRING) PARTITIONED BY (ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 16 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_table1_n6
PREHOOK: query: CREATE TABLE test_table2_n6 (key INT, value STRING) PARTITIONED BY (ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 16 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_table2_n6
POSTHOOK: query: CREATE TABLE test_table2_n6 (key INT, value STRING) PARTITIONED BY (ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 16 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_table2_n6
PREHOOK: query: FROM src
INSERT OVERWRITE TABLE test_table1_n6 PARTITION (ds = '1') SELECT *
INSERT OVERWRITE TABLE test_table2_n6 PARTITION (ds = '1') SELECT *
INSERT OVERWRITE TABLE test_table2_n6 PARTITION (ds = '2') SELECT *
INSERT OVERWRITE TABLE test_table2_n6 PARTITION (ds = '3') SELECT *
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@test_table1_n6@ds=1
PREHOOK: Output: default@test_table2_n6@ds=1
PREHOOK: Output: default@test_table2_n6@ds=2
PREHOOK: Output: default@test_table2_n6@ds=3
POSTHOOK: query: FROM src
INSERT OVERWRITE TABLE test_table1_n6 PARTITION (ds = '1') SELECT *
INSERT OVERWRITE TABLE test_table2_n6 PARTITION (ds = '1') SELECT *
INSERT OVERWRITE TABLE test_table2_n6 PARTITION (ds = '2') SELECT *
INSERT OVERWRITE TABLE test_table2_n6 PARTITION (ds = '3') SELECT *
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@test_table1_n6@ds=1
POSTHOOK: Output: default@test_table2_n6@ds=1
POSTHOOK: Output: default@test_table2_n6@ds=2
POSTHOOK: Output: default@test_table2_n6@ds=3
POSTHOOK: Lineage: test_table1_n6 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table1_n6 PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: test_table2_n6 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table2_n6 PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: test_table2_n6 PARTITION(ds=2).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table2_n6 PARTITION(ds=2).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: test_table2_n6 PARTITION(ds=3).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table2_n6 PARTITION(ds=3).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: CREATE TABLE test_table3_n4 (key INT, value STRING) PARTITIONED BY (ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 16 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_table3_n4
POSTHOOK: query: CREATE TABLE test_table3_n4 (key INT, value STRING) PARTITIONED BY (ds STRING) CLUSTERED BY (key) SORTED BY (key) INTO 16 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_table3_n4
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE test_table3_n4 PARTITION (ds = '1') SELECT /*+ MAPJOIN(b) */ a.key, b.value FROM test_table1_n6 a JOIN test_table2_n6 b ON a.key = b.key AND a.ds = '1' AND b.ds >= '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table1_n6
PREHOOK: Input: default@test_table1_n6@ds=1
PREHOOK: Input: default@test_table2_n6
PREHOOK: Input: default@test_table2_n6@ds=1
PREHOOK: Input: default@test_table2_n6@ds=2
PREHOOK: Input: default@test_table2_n6@ds=3
PREHOOK: Output: default@test_table3_n4@ds=1
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE test_table3_n4 PARTITION (ds = '1') SELECT /*+ MAPJOIN(b) */ a.key, b.value FROM test_table1_n6 a JOIN test_table2_n6 b ON a.key = b.key AND a.ds = '1' AND b.ds >= '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table1_n6
POSTHOOK: Input: default@test_table1_n6@ds=1
POSTHOOK: Input: default@test_table2_n6
POSTHOOK: Input: default@test_table2_n6@ds=1
POSTHOOK: Input: default@test_table2_n6@ds=2
POSTHOOK: Input: default@test_table2_n6@ds=3
POSTHOOK: Output: default@test_table3_n4@ds=1
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            filterExpr: ((ds = '1') and key is not null) (type: boolean)
            Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
              Sorted Merge Bucket Map Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 key (type: int)
                  1 key (type: int)
                outputColumnNames: _col0, _col7
                Position of Big Table: 0
                Statistics: Num rows: 1650 Data size: 156750 Basic stats: COMPLETE Column stats: NONE
                BucketMapJoin: true
                Select Operator
                  expressions: _col0 (type: int), _col7 (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1650 Data size: 156750 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    bucketingVersion: 2
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Static Partition Specification: ds=1/
                    Statistics: Num rows: 1650 Data size: 156750 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          SORTBUCKETCOLSPREFIX TRUE
                          bucket_count 16
                          bucket_field_name key
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,value
                          columns.comments 
                          columns.types int:string
#### A masked pattern was here ####
                          name default.test_table3_n4
                          partition_columns ds
                          partition_columns.types string
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.test_table3_n4
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds=1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 1
            properties:
              bucket_count 16
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.test_table1_n6
              partition_columns ds
              partition_columns.types string
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 16
                bucket_field_name key
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.test_table1_n6
                partition_columns ds
                partition_columns.types string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_table1_n6
            name: default.test_table1_n6
      Truncated Path -> Alias:
        /test_table1_n6/ds=1 [a]

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 1
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 16
                bucket_field_name key
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.test_table3_n4
                partition_columns ds
                partition_columns.types string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_table3_n4

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: test_db_smb_mapjoin_12.test_table3_n4
          Is Table Level Stats: false

PREHOOK: query: INSERT OVERWRITE TABLE test_table3_n4 PARTITION (ds = '1') SELECT /*+ MAPJOIN(b) */ a.key, b.value FROM test_table1_n6 a JOIN test_table2_n6 b ON a.key = b.key AND a.ds = '1' AND b.ds >= '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table1_n6
PREHOOK: Input: default@test_table1_n6@ds=1
PREHOOK: Input: default@test_table2_n6
PREHOOK: Input: default@test_table2_n6@ds=1
PREHOOK: Input: default@test_table2_n6@ds=2
PREHOOK: Input: default@test_table2_n6@ds=3
PREHOOK: Output: default@test_table3_n4@ds=1
POSTHOOK: query: INSERT OVERWRITE TABLE test_table3_n4 PARTITION (ds = '1') SELECT /*+ MAPJOIN(b) */ a.key, b.value FROM test_table1_n6 a JOIN test_table2_n6 b ON a.key = b.key AND a.ds = '1' AND b.ds >= '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table1_n6
POSTHOOK: Input: default@test_table1_n6@ds=1
POSTHOOK: Input: default@test_table2_n6
POSTHOOK: Input: default@test_table2_n6@ds=1
POSTHOOK: Input: default@test_table2_n6@ds=2
POSTHOOK: Input: default@test_table2_n6@ds=3
POSTHOOK: Output: default@test_table3_n4@ds=1
POSTHOOK: Lineage: test_table3_n4 PARTITION(ds=1).key SIMPLE [(test_table1_n6)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: test_table3_n4 PARTITION(ds=1).value SIMPLE [(test_table2_n6)b.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT COUNT(*) FROM test_table3_n4 TABLESAMPLE(BUCKET 2 OUT OF 16) a JOIN test_table1_n6 TABLESAMPLE(BUCKET 2 OUT OF 16) b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table1_n6
PREHOOK: Input: default@test_table1_n6@ds=1
PREHOOK: Input: default@test_table3_n4
PREHOOK: Input: default@test_table3_n4@ds=1
#### A masked pattern was here ####
POSTHOOK: query: SELECT COUNT(*) FROM test_table3_n4 TABLESAMPLE(BUCKET 2 OUT OF 16) a JOIN test_table1_n6 TABLESAMPLE(BUCKET 2 OUT OF 16) b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table1_n6
POSTHOOK: Input: default@test_table1_n6@ds=1
POSTHOOK: Input: default@test_table3_n4
POSTHOOK: Input: default@test_table3_n4@ds=1
#### A masked pattern was here ####
420
PREHOOK: query: explain extended
INSERT OVERWRITE TABLE test_table3_n4 PARTITION (ds = '2') 
SELECT /*+mapjoin(b)*/ a.key, concat(a.value, b.value) FROM test_table3_n4 a JOIN test_table1_n6 b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table1_n6
PREHOOK: Input: default@test_table1_n6@ds=1
PREHOOK: Input: default@test_table3_n4
PREHOOK: Input: default@test_table3_n4@ds=1
PREHOOK: Output: default@test_table3_n4@ds=2
POSTHOOK: query: explain extended
INSERT OVERWRITE TABLE test_table3_n4 PARTITION (ds = '2') 
SELECT /*+mapjoin(b)*/ a.key, concat(a.value, b.value) FROM test_table3_n4 a JOIN test_table1_n6 b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table1_n6
POSTHOOK: Input: default@test_table1_n6@ds=1
POSTHOOK: Input: default@test_table3_n4
POSTHOOK: Input: default@test_table3_n4@ds=1
POSTHOOK: Output: default@test_table3_n4@ds=2
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0, Stage-3
  Stage-3 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            filterExpr: ((ds = '1') and key is not null) (type: boolean)
            Statistics: Num rows: 3084 Data size: 583932 Basic stats: COMPLETE Column stats: NONE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 2930 Data size: 554773 Basic stats: COMPLETE Column stats: NONE
              Sorted Merge Bucket Map Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 key (type: int)
                  1 key (type: int)
                outputColumnNames: _col0, _col1, _col7
                Position of Big Table: 0
                Statistics: Num rows: 3223 Data size: 610250 Basic stats: COMPLETE Column stats: NONE
                BucketMapJoin: true
                Select Operator
                  expressions: _col0 (type: int), concat(_col1, _col7) (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 3223 Data size: 610250 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    bucketingVersion: 2
                    key expressions: _col0 (type: int)
                    null sort order: a
                    numBuckets: -1
                    sort order: +
                    Map-reduce partition columns: _col0 (type: int)
                    Statistics: Num rows: 3223 Data size: 610250 Basic stats: COMPLETE Column stats: NONE
                    tag: -1
                    value expressions: _col1 (type: string)
                    auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds=1
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds 1
            properties:
              bucket_count 16
              bucket_field_name key
              column.name.delimiter ,
              columns key,value
              columns.types int:string
#### A masked pattern was here ####
              name default.test_table3_n4
              partition_columns ds
              partition_columns.types string
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 16
                bucket_field_name key
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.test_table3_n4
                partition_columns ds
                partition_columns.types string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_table3_n4
            name: default.test_table3_n4
      Truncated Path -> Alias:
        /test_table3_n4/ds=1 [a]
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 3223 Data size: 610250 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            bucketingVersion: 2
            compressed: false
            GlobalTableId: 1
#### A masked pattern was here ####
            NumFilesPerFileSink: 16
            Static Partition Specification: ds=2/
            Statistics: Num rows: 3223 Data size: 610250 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                properties:
                  SORTBUCKETCOLSPREFIX TRUE
                  bucket_count 16
                  bucket_field_name key
                  bucketing_version 2
                  column.name.delimiter ,
                  columns key,value
                  columns.comments 
                  columns.types int:string
#### A masked pattern was here ####
                  name default.test_table3_n4
                  partition_columns ds
                  partition_columns.types string
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                name: default.test_table3_n4
            TotalFiles: 16
            GatherStats: true
            MultiFileSpray: true
          Select Operator
            expressions: _col0 (type: int), _col1 (type: string)
            outputColumnNames: key, value
            Statistics: Num rows: 3223 Data size: 610250 Basic stats: COMPLETE Column stats: NONE
            Group By Operator
              aggregations: min(key), max(key), count(1), count(key), compute_bit_vector_hll(key), max(length(value)), avg(COALESCE(length(value),0)), count(value), compute_bit_vector_hll(value)
              keys: '2' (type: string)
              minReductionHashAggr: 0.99
              mode: hash
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
              Statistics: Num rows: 3223 Data size: 610250 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                bucketingVersion: 1
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      column.name.delimiter ,
                      columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9
                      columns.types string,int,int,bigint,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary
                      escape.delim \
                      serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 2
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                SORTBUCKETCOLSPREFIX TRUE
                bucket_count 16
                bucket_field_name key
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.test_table3_n4
                partition_columns ds
                partition_columns.types string
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_table3_n4

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: test_db_smb_mapjoin_12.test_table3_n4
          Is Table Level Stats: false

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              bucketingVersion: 2
              key expressions: '2' (type: string)
              null sort order: z
              numBuckets: -1
              sort order: +
              Map-reduce partition columns: '2' (type: string)
              Statistics: Num rows: 3223 Data size: 610250 Basic stats: COMPLETE Column stats: NONE
              tag: -1
              value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: bigint), _col4 (type: bigint), _col5 (type: binary), _col6 (type: int), _col7 (type: struct<count:bigint,sum:double,input:int>), _col8 (type: bigint), _col9 (type: binary)
              auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10002
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9
              columns.types string,int,int,bigint,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9
                columns.types string,int,int,bigint,bigint,binary,int,struct<count:bigint,sum:double,input:int>,bigint,binary
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Truncated Path -> Alias:
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Group By Operator
          aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
          keys: '2' (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
          Statistics: Num rows: 1611 Data size: 305030 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: 'LONG' (type: string), UDFToLong(_col1) (type: bigint), UDFToLong(_col2) (type: bigint), (_col3 - _col4) (type: bigint), COALESCE(ndv_compute_bit_vector(_col5),0) (type: bigint), _col5 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col6,0)) (type: bigint), COALESCE(_col7,0) (type: double), (_col3 - _col8) (type: bigint), COALESCE(ndv_compute_bit_vector(_col9),0) (type: bigint), _col9 (type: binary), '2' (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
            Statistics: Num rows: 1611 Data size: 305030 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              bucketingVersion: 2
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              Statistics: Num rows: 1611 Data size: 305030 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  properties:
                    bucketing_version -1
                    columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7,_col8,_col9,_col10,_col11,_col12
                    columns.types string:bigint:bigint:bigint:bigint:binary:string:bigint:double:bigint:bigint:binary:string
                    escape.delim \
                    hive.serialization.extend.additional.nesting.levels true
                    serialization.escape.crlf true
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

PREHOOK: query: INSERT OVERWRITE TABLE test_table3_n4 PARTITION (ds = '2') 
SELECT /*+mapjoin(b)*/ a.key, concat(a.value, b.value) FROM test_table3_n4 a JOIN test_table1_n6 b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table1_n6
PREHOOK: Input: default@test_table1_n6@ds=1
PREHOOK: Input: default@test_table3_n4
PREHOOK: Input: default@test_table3_n4@ds=1
PREHOOK: Output: default@test_table3_n4@ds=2
POSTHOOK: query: INSERT OVERWRITE TABLE test_table3_n4 PARTITION (ds = '2') 
SELECT /*+mapjoin(b)*/ a.key, concat(a.value, b.value) FROM test_table3_n4 a JOIN test_table1_n6 b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table1_n6
POSTHOOK: Input: default@test_table1_n6@ds=1
POSTHOOK: Input: default@test_table3_n4
POSTHOOK: Input: default@test_table3_n4@ds=1
POSTHOOK: Output: default@test_table3_n4@ds=2
POSTHOOK: Lineage: test_table3_n4 PARTITION(ds=2).key SIMPLE [(test_table3_n4)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: test_table3_n4 PARTITION(ds=2).value EXPRESSION [(test_table3_n4)a.FieldSchema(name:value, type:string, comment:null), (test_table1_n6)b.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT count(*) from test_table3_n4 tablesample (bucket 2 out of 16) a where ds = '2'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table3_n4
PREHOOK: Input: default@test_table3_n4@ds=2
#### A masked pattern was here ####
POSTHOOK: query: SELECT count(*) from test_table3_n4 tablesample (bucket 2 out of 16) a where ds = '2'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table3_n4
POSTHOOK: Input: default@test_table3_n4@ds=2
#### A masked pattern was here ####
420
