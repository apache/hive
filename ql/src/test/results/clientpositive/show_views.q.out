PREHOOK: query: CREATE DATABASE test1
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:test1
POSTHOOK: query: CREATE DATABASE test1
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:test1
PREHOOK: query: CREATE DATABASE test2
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:test2
POSTHOOK: query: CREATE DATABASE test2
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:test2
PREHOOK: query: USE test1
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test1
POSTHOOK: query: USE test1
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test1
PREHOOK: query: CREATE TABLE shtb_test1(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_test1
POSTHOOK: query: CREATE TABLE shtb_test1(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_test1
PREHOOK: query: CREATE VIEW shtb_test1_view1 AS SELECT * FROM shtb_test1 where KEY > 1000 and KEY < 2000
PREHOOK: type: CREATEVIEW
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_test1_view1
POSTHOOK: query: CREATE VIEW shtb_test1_view1 AS SELECT * FROM shtb_test1 where KEY > 1000 and KEY < 2000
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_test1_view1
POSTHOOK: Lineage: shtb_test1_view1.ds SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view1.key SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view1.value SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE VIEW shtb_test1_view2 AS SELECT * FROM shtb_test1 where KEY > 100 and KEY < 200
PREHOOK: type: CREATEVIEW
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_test1_view2
POSTHOOK: query: CREATE VIEW shtb_test1_view2 AS SELECT * FROM shtb_test1 where KEY > 100 and KEY < 200
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_test1_view2
POSTHOOK: Lineage: shtb_test1_view2.ds SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view2.key SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view2.value SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE VIEW shtb_full_view2 AS SELECT * FROM shtb_test1
PREHOOK: type: CREATEVIEW
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: database:test1
PREHOOK: Output: test1@shtb_full_view2
POSTHOOK: query: CREATE VIEW shtb_full_view2 AS SELECT * FROM shtb_test1
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: database:test1
POSTHOOK: Output: test1@shtb_full_view2
POSTHOOK: Lineage: shtb_full_view2.ds SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_full_view2.key SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_full_view2.value SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: USE test2
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test2
POSTHOOK: query: USE test2
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test2
PREHOOK: query: CREATE TABLE shtb_test1(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:test2
PREHOOK: Output: test2@shtb_test1
POSTHOOK: query: CREATE TABLE shtb_test1(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:test2
POSTHOOK: Output: test2@shtb_test1
PREHOOK: query: CREATE TABLE shtb_test2(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:test2
PREHOOK: Output: test2@shtb_test2
POSTHOOK: query: CREATE TABLE shtb_test2(KEY INT, VALUE STRING) PARTITIONED BY(ds STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:test2
POSTHOOK: Output: test2@shtb_test2
PREHOOK: query: CREATE VIEW shtb_test1_view1 AS SELECT * FROM shtb_test1 where KEY > 1000 and KEY < 2000
PREHOOK: type: CREATEVIEW
PREHOOK: Input: test2@shtb_test1
PREHOOK: Output: database:test2
PREHOOK: Output: test2@shtb_test1_view1
POSTHOOK: query: CREATE VIEW shtb_test1_view1 AS SELECT * FROM shtb_test1 where KEY > 1000 and KEY < 2000
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: test2@shtb_test1
POSTHOOK: Output: database:test2
POSTHOOK: Output: test2@shtb_test1_view1
POSTHOOK: Lineage: shtb_test1_view1.ds SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view1.key SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_test1_view1.value SIMPLE [(shtb_test1)shtb_test1.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: CREATE VIEW shtb_test2_view2 AS SELECT * FROM shtb_test2 where KEY > 100 and KEY < 200
PREHOOK: type: CREATEVIEW
PREHOOK: Input: test2@shtb_test2
PREHOOK: Output: database:test2
PREHOOK: Output: test2@shtb_test2_view2
POSTHOOK: query: CREATE VIEW shtb_test2_view2 AS SELECT * FROM shtb_test2 where KEY > 100 and KEY < 200
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: test2@shtb_test2
POSTHOOK: Output: database:test2
POSTHOOK: Output: test2@shtb_test2_view2
POSTHOOK: Lineage: shtb_test2_view2.ds SIMPLE [(shtb_test2)shtb_test2.FieldSchema(name:ds, type:string, comment:null), ]
POSTHOOK: Lineage: shtb_test2_view2.key SIMPLE [(shtb_test2)shtb_test2.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: shtb_test2_view2.value SIMPLE [(shtb_test2)shtb_test2.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: USE test1
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test1
POSTHOOK: query: USE test1
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test1
PREHOOK: query: SHOW VIEWS
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS
POSTHOOK: type: SHOWVIEWS
shtb_full_view2
shtb_test1_view1
shtb_test1_view2
PREHOOK: query: SHOW VIEWS 'test_*'
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS 'test_*'
POSTHOOK: type: SHOWVIEWS
PREHOOK: query: SHOW VIEWS '*view2'
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS '*view2'
POSTHOOK: type: SHOWVIEWS
shtb_full_view2
shtb_test1_view2
PREHOOK: query: SHOW VIEWS LIKE 'test_view1|test_view2'
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS LIKE 'test_view1|test_view2'
POSTHOOK: type: SHOWVIEWS
PREHOOK: query: USE test2
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test2
POSTHOOK: query: USE test2
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test2
PREHOOK: query: SHOW VIEWS 'shtb_*'
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS 'shtb_*'
POSTHOOK: type: SHOWVIEWS
shtb_test1_view1
shtb_test2_view2
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: SHOW VIEWS FROM test1
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS FROM test1
POSTHOOK: type: SHOWVIEWS
shtb_full_view2
shtb_test1_view1
shtb_test1_view2
PREHOOK: query: SHOW VIEWS FROM test2
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS FROM test2
POSTHOOK: type: SHOWVIEWS
shtb_test1_view1
shtb_test2_view2
PREHOOK: query: SHOW VIEWS IN test1
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS IN test1
POSTHOOK: type: SHOWVIEWS
shtb_full_view2
shtb_test1_view1
shtb_test1_view2
PREHOOK: query: SHOW VIEWS IN default
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS IN default
POSTHOOK: type: SHOWVIEWS
PREHOOK: query: SHOW VIEWS IN test1 "shtb_test_*"
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS IN test1 "shtb_test_*"
POSTHOOK: type: SHOWVIEWS
PREHOOK: query: SHOW VIEWS IN test2 LIKE "nomatch"
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS IN test2 LIKE "nomatch"
POSTHOOK: type: SHOWVIEWS
PREHOOK: query: CREATE DATABASE `database`
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:database
POSTHOOK: query: CREATE DATABASE `database`
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:database
PREHOOK: query: USE `database`
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:database
POSTHOOK: query: USE `database`
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:database
PREHOOK: query: CREATE TABLE foo(a INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:database
PREHOOK: Output: database@foo
POSTHOOK: query: CREATE TABLE foo(a INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:database
POSTHOOK: Output: database@foo
PREHOOK: query: CREATE VIEW fooview AS SELECT * FROM foo
PREHOOK: type: CREATEVIEW
PREHOOK: Input: database@foo
PREHOOK: Output: database:database
PREHOOK: Output: database@fooview
POSTHOOK: query: CREATE VIEW fooview AS SELECT * FROM foo
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: database@foo
POSTHOOK: Output: database:database
POSTHOOK: Output: database@fooview
POSTHOOK: Lineage: fooview.a SIMPLE [(foo)foo.FieldSchema(name:a, type:int, comment:null), ]
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:default
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:default
PREHOOK: query: SHOW VIEWS FROM `database` LIKE "fooview"
PREHOOK: type: SHOWVIEWS
POSTHOOK: query: SHOW VIEWS FROM `database` LIKE "fooview"
POSTHOOK: type: SHOWVIEWS
fooview
PREHOOK: query: DROP VIEW fooview
PREHOOK: type: DROPVIEW
POSTHOOK: query: DROP VIEW fooview
POSTHOOK: type: DROPVIEW
PREHOOK: query: DROP TABLE foo
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE foo
POSTHOOK: type: DROPTABLE
PREHOOK: query: USE test1
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test1
POSTHOOK: query: USE test1
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test1
PREHOOK: query: DROP VIEW shtb_test1_view1
PREHOOK: type: DROPVIEW
PREHOOK: Input: test1@shtb_test1_view1
PREHOOK: Output: test1@shtb_test1_view1
POSTHOOK: query: DROP VIEW shtb_test1_view1
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: test1@shtb_test1_view1
POSTHOOK: Output: test1@shtb_test1_view1
PREHOOK: query: DROP VIEW shtb_test1_view2
PREHOOK: type: DROPVIEW
PREHOOK: Input: test1@shtb_test1_view2
PREHOOK: Output: test1@shtb_test1_view2
POSTHOOK: query: DROP VIEW shtb_test1_view2
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: test1@shtb_test1_view2
POSTHOOK: Output: test1@shtb_test1_view2
PREHOOK: query: DROP VIEW shtb_full_view2
PREHOOK: type: DROPVIEW
PREHOOK: Input: test1@shtb_full_view2
PREHOOK: Output: test1@shtb_full_view2
POSTHOOK: query: DROP VIEW shtb_full_view2
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: test1@shtb_full_view2
POSTHOOK: Output: test1@shtb_full_view2
PREHOOK: query: DROP TABLE shtb_test1
PREHOOK: type: DROPTABLE
PREHOOK: Input: test1@shtb_test1
PREHOOK: Output: test1@shtb_test1
POSTHOOK: query: DROP TABLE shtb_test1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test1@shtb_test1
POSTHOOK: Output: test1@shtb_test1
PREHOOK: query: DROP DATABASE test1
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:test1
PREHOOK: Output: database:test1
POSTHOOK: query: DROP DATABASE test1
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:test1
POSTHOOK: Output: database:test1
PREHOOK: query: USE test2
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:test2
POSTHOOK: query: USE test2
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:test2
PREHOOK: query: DROP VIEW shtb_test1_view1
PREHOOK: type: DROPVIEW
PREHOOK: Input: test2@shtb_test1_view1
PREHOOK: Output: test2@shtb_test1_view1
POSTHOOK: query: DROP VIEW shtb_test1_view1
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: test2@shtb_test1_view1
POSTHOOK: Output: test2@shtb_test1_view1
PREHOOK: query: DROP VIEW shtb_test2_view2
PREHOOK: type: DROPVIEW
PREHOOK: Input: test2@shtb_test2_view2
PREHOOK: Output: test2@shtb_test2_view2
POSTHOOK: query: DROP VIEW shtb_test2_view2
POSTHOOK: type: DROPVIEW
POSTHOOK: Input: test2@shtb_test2_view2
POSTHOOK: Output: test2@shtb_test2_view2
PREHOOK: query: DROP TABLE shtb_test1
PREHOOK: type: DROPTABLE
PREHOOK: Input: test2@shtb_test1
PREHOOK: Output: test2@shtb_test1
POSTHOOK: query: DROP TABLE shtb_test1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test2@shtb_test1
POSTHOOK: Output: test2@shtb_test1
PREHOOK: query: DROP TABLE shtb_test2
PREHOOK: type: DROPTABLE
PREHOOK: Input: test2@shtb_test2
PREHOOK: Output: test2@shtb_test2
POSTHOOK: query: DROP TABLE shtb_test2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test2@shtb_test2
POSTHOOK: Output: test2@shtb_test2
PREHOOK: query: DROP DATABASE test2
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:test2
PREHOOK: Output: database:test2
POSTHOOK: query: DROP DATABASE test2
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:test2
POSTHOOK: Output: database:test2
