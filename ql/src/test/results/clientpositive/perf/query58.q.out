Warning: Shuffle Join MERGEJOIN[265][tables = [$hdt$_4, $hdt$_5]] in Stage 'Reducer 20' is a cross product
Warning: Shuffle Join MERGEJOIN[269][tables = [$hdt$_5, $hdt$_6]] in Stage 'Reducer 24' is a cross product
Warning: Shuffle Join MERGEJOIN[273][tables = [$hdt$_6, $hdt$_7]] in Stage 'Reducer 28' is a cross product
PREHOOK: query: explain
with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '1998-02-19'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '1998-02-19'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Map 33 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (SIMPLE_EDGE), Reducer 17 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE)
Reducer 15 <- Map 14 (SIMPLE_EDGE), Reducer 22 (ONE_TO_ONE_EDGE)
Reducer 16 <- Map 14 (SIMPLE_EDGE), Reducer 26 (ONE_TO_ONE_EDGE)
Reducer 17 <- Map 14 (SIMPLE_EDGE), Reducer 30 (ONE_TO_ONE_EDGE)
Reducer 19 <- Map 18 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 20 <- Map 31 (CUSTOM_SIMPLE_EDGE), Reducer 19 (CUSTOM_SIMPLE_EDGE)
Reducer 21 <- Map 31 (SIMPLE_EDGE), Reducer 20 (SIMPLE_EDGE)
Reducer 22 <- Reducer 21 (SIMPLE_EDGE)
Reducer 23 <- Map 18 (CUSTOM_SIMPLE_EDGE)
Reducer 24 <- Map 31 (CUSTOM_SIMPLE_EDGE), Reducer 23 (CUSTOM_SIMPLE_EDGE)
Reducer 25 <- Map 31 (SIMPLE_EDGE), Reducer 24 (SIMPLE_EDGE)
Reducer 26 <- Reducer 25 (SIMPLE_EDGE)
Reducer 27 <- Map 18 (CUSTOM_SIMPLE_EDGE)
Reducer 28 <- Map 31 (CUSTOM_SIMPLE_EDGE), Reducer 27 (CUSTOM_SIMPLE_EDGE)
Reducer 29 <- Map 31 (SIMPLE_EDGE), Reducer 28 (SIMPLE_EDGE)
Reducer 3 <- Reducer 15 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 30 <- Reducer 29 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 10 (ONE_TO_ONE_EDGE), Reducer 13 (ONE_TO_ONE_EDGE), Reducer 4 (ONE_TO_ONE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 8 <- Map 32 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 16 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6
      File Output Operator [FS_164]
        Limit [LIM_163] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_162] (rows=1442 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_161]
              Select Operator [SEL_160] (rows=1442 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                Filter Operator [FIL_154] (rows=1442 width=88)
                  predicate:(_col5 BETWEEN (0.9 * _col1) AND (1.1 * _col1) and _col5 BETWEEN (0.9 * _col3) AND (1.1 * _col3) and _col1 BETWEEN (0.9 * _col5) AND (1.1 * _col5) and _col3 BETWEEN (0.9 * _col5) AND (1.1 * _col5) and _col1 BETWEEN (0.9 * _col3) AND (1.1 * _col3) and _col3 BETWEEN (0.9 * _col1) AND (1.1 * _col1))
                  Merge Join Operator [MERGEJOIN_279] (rows=766650239 width=88)
                    Conds:RS_150._col0=RS_151._col0(Inner),RS_150._col0=RS_152._col0(Inner),Output:["_col0","_col1","_col3","_col5"]
                  <-Reducer 10 [ONE_TO_ONE_EDGE]
                    FORWARD [RS_151]
                      PartitionCols:_col0
                      Group By Operator [GBY_98] (rows=348477374 width=88)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 9 [SIMPLE_EDGE]
                        SHUFFLE [RS_97]
                          PartitionCols:_col0
                          Group By Operator [GBY_96] (rows=696954748 width=88)
                            Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col4
                            Merge Join Operator [MERGEJOIN_277] (rows=696954748 width=88)
                              Conds:RS_92._col0=RS_93._col0(Inner),Output:["_col2","_col4"]
                            <-Reducer 16 [SIMPLE_EDGE]
                              SHUFFLE [RS_93]
                                PartitionCols:_col0
                                Merge Join Operator [MERGEJOIN_271] (rows=80353 width=1119)
                                  Conds:RS_85._col1=RS_86._col0(Inner),Output:["_col0"]
                                <-Map 14 [SIMPLE_EDGE]
                                  SHUFFLE [RS_85]
                                    PartitionCols:_col1
                                    Select Operator [SEL_8] (rows=73049 width=1119)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_248] (rows=73049 width=1119)
                                        predicate:(d_date is not null and d_date_sk is not null)
                                        TableScan [TS_6] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                                <-Reducer 26 [ONE_TO_ONE_EDGE]
                                  FORWARD [RS_86]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_83] (rows=40176 width=1119)
                                      Output:["_col0"],keys:KEY._col0
                                    <-Reducer 25 [SIMPLE_EDGE]
                                      SHUFFLE [RS_82]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_81] (rows=80353 width=1119)
                                          Output:["_col0"],keys:_col2
                                          Merge Join Operator [MERGEJOIN_270] (rows=80353 width=1119)
                                            Conds:RS_77._col1=RS_78._col1(Inner),Output:["_col2"]
                                          <-Map 31 [SIMPLE_EDGE]
                                            SHUFFLE [RS_78]
                                              PartitionCols:_col1
                                              Select Operator [SEL_73] (rows=73049 width=1119)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_257] (rows=73049 width=1119)
                                                  predicate:(d_week_seq is not null and d_date is not null)
                                                  TableScan [TS_21] (rows=73049 width=1119)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date","d_week_seq"]
                                          <-Reducer 24 [SIMPLE_EDGE]
                                            SHUFFLE [RS_77]
                                              PartitionCols:_col1
                                              Merge Join Operator [MERGEJOIN_269] (rows=36524 width=1128)
                                                Conds:(Inner),Output:["_col1"]
                                              <-Map 31 [CUSTOM_SIMPLE_EDGE]
                                                SHUFFLE [RS_75]
                                                  Select Operator [SEL_70] (rows=36524 width=1119)
                                                    Output:["_col0"]
                                                    Filter Operator [FIL_256] (rows=36524 width=1119)
                                                      predicate:((d_date = '1998-02-19') and d_week_seq is not null)
                                                       Please refer to the previous TableScan [TS_21]
                                              <-Reducer 23 [CUSTOM_SIMPLE_EDGE]
                                                PARTITION_ONLY_SHUFFLE [RS_74]
                                                  Select Operator [SEL_67] (rows=1 width=8)
                                                    Filter Operator [FIL_66] (rows=1 width=8)
                                                      predicate:(sq_count_check(_col0) <= 1)
                                                      Group By Operator [GBY_64] (rows=1 width=8)
                                                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                                      <-Map 18 [CUSTOM_SIMPLE_EDGE]
                                                        PARTITION_ONLY_SHUFFLE [RS_63]
                                                          Group By Operator [GBY_12] (rows=1 width=8)
                                                            Output:["_col0"],aggregations:["count()"]
                                                            Select Operator [SEL_11] (rows=36524 width=1119)
                                                              Filter Operator [FIL_249] (rows=36524 width=1119)
                                                                predicate:(d_date = '1998-02-19')
                                                                TableScan [TS_9] (rows=73049 width=1119)
                                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date"]
                            <-Reducer 8 [SIMPLE_EDGE]
                              SHUFFLE [RS_92]
                                PartitionCols:_col0
                                Merge Join Operator [MERGEJOIN_268] (rows=633595212 width=88)
                                  Conds:RS_89._col1=RS_90._col0(Inner),Output:["_col0","_col2","_col4"]
                                <-Map 7 [SIMPLE_EDGE]
                                  SHUFFLE [RS_90]
                                    PartitionCols:_col0
                                    Select Operator [SEL_5] (rows=462000 width=1436)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_247] (rows=462000 width=1436)
                                        predicate:(i_item_sk is not null and i_item_id is not null)
                                        TableScan [TS_3] (rows=462000 width=1436)
                                          default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id"]
                                <-Map 32 [SIMPLE_EDGE]
                                  SHUFFLE [RS_89]
                                    PartitionCols:_col1
                                    Select Operator [SEL_52] (rows=575995635 width=88)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_252] (rows=575995635 width=88)
                                        predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                        TableScan [TS_50] (rows=575995635 width=88)
                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_ext_sales_price"]
                  <-Reducer 13 [ONE_TO_ONE_EDGE]
                    FORWARD [RS_152]
                      PartitionCols:_col0
                      Group By Operator [GBY_148] (rows=87121617 width=135)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 12 [SIMPLE_EDGE]
                        SHUFFLE [RS_147]
                          PartitionCols:_col0
                          Group By Operator [GBY_146] (rows=174243235 width=135)
                            Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col4
                            Merge Join Operator [MERGEJOIN_278] (rows=174243235 width=135)
                              Conds:RS_142._col0=RS_143._col0(Inner),Output:["_col2","_col4"]
                            <-Reducer 11 [SIMPLE_EDGE]
                              SHUFFLE [RS_142]
                                PartitionCols:_col0
                                Merge Join Operator [MERGEJOIN_272] (rows=158402938 width=135)
                                  Conds:RS_139._col1=RS_140._col0(Inner),Output:["_col0","_col2","_col4"]
                                <-Map 7 [SIMPLE_EDGE]
                                  SHUFFLE [RS_140]
                                    PartitionCols:_col0
                                     Please refer to the previous Select Operator [SEL_5]
                                <-Map 33 [SIMPLE_EDGE]
                                  SHUFFLE [RS_139]
                                    PartitionCols:_col1
                                    Select Operator [SEL_102] (rows=144002668 width=135)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_258] (rows=144002668 width=135)
                                        predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                        TableScan [TS_100] (rows=144002668 width=135)
                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_ext_sales_price"]
                            <-Reducer 17 [SIMPLE_EDGE]
                              SHUFFLE [RS_143]
                                PartitionCols:_col0
                                Merge Join Operator [MERGEJOIN_275] (rows=80353 width=1119)
                                  Conds:RS_135._col1=RS_136._col0(Inner),Output:["_col0"]
                                <-Map 14 [SIMPLE_EDGE]
                                  SHUFFLE [RS_135]
                                    PartitionCols:_col1
                                     Please refer to the previous Select Operator [SEL_8]
                                <-Reducer 30 [ONE_TO_ONE_EDGE]
                                  FORWARD [RS_136]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_133] (rows=40176 width=1119)
                                      Output:["_col0"],keys:KEY._col0
                                    <-Reducer 29 [SIMPLE_EDGE]
                                      SHUFFLE [RS_132]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_131] (rows=80353 width=1119)
                                          Output:["_col0"],keys:_col2
                                          Merge Join Operator [MERGEJOIN_274] (rows=80353 width=1119)
                                            Conds:RS_127._col1=RS_128._col1(Inner),Output:["_col2"]
                                          <-Map 31 [SIMPLE_EDGE]
                                            SHUFFLE [RS_128]
                                              PartitionCols:_col1
                                              Select Operator [SEL_123] (rows=73049 width=1119)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_263] (rows=73049 width=1119)
                                                  predicate:(d_week_seq is not null and d_date is not null)
                                                   Please refer to the previous TableScan [TS_21]
                                          <-Reducer 28 [SIMPLE_EDGE]
                                            SHUFFLE [RS_127]
                                              PartitionCols:_col1
                                              Merge Join Operator [MERGEJOIN_273] (rows=36524 width=1128)
                                                Conds:(Inner),Output:["_col1"]
                                              <-Map 31 [CUSTOM_SIMPLE_EDGE]
                                                SHUFFLE [RS_125]
                                                  Select Operator [SEL_120] (rows=36524 width=1119)
                                                    Output:["_col0"]
                                                    Filter Operator [FIL_262] (rows=36524 width=1119)
                                                      predicate:((d_date = '1998-02-19') and d_week_seq is not null)
                                                       Please refer to the previous TableScan [TS_21]
                                              <-Reducer 27 [CUSTOM_SIMPLE_EDGE]
                                                PARTITION_ONLY_SHUFFLE [RS_124]
                                                  Select Operator [SEL_117] (rows=1 width=8)
                                                    Filter Operator [FIL_116] (rows=1 width=8)
                                                      predicate:(sq_count_check(_col0) <= 1)
                                                      Group By Operator [GBY_114] (rows=1 width=8)
                                                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                                      <-Map 18 [CUSTOM_SIMPLE_EDGE]
                                                        PARTITION_ONLY_SHUFFLE [RS_113]
                                                           Please refer to the previous Group By Operator [GBY_12]
                  <-Reducer 4 [ONE_TO_ONE_EDGE]
                    FORWARD [RS_150]
                      PartitionCols:_col0
                      Group By Operator [GBY_48] (rows=174233858 width=135)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 3 [SIMPLE_EDGE]
                        SHUFFLE [RS_47]
                          PartitionCols:_col0
                          Group By Operator [GBY_46] (rows=348467716 width=135)
                            Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col4
                            Merge Join Operator [MERGEJOIN_276] (rows=348467716 width=135)
                              Conds:RS_42._col0=RS_43._col0(Inner),Output:["_col2","_col4"]
                            <-Reducer 15 [SIMPLE_EDGE]
                              SHUFFLE [RS_43]
                                PartitionCols:_col0
                                Merge Join Operator [MERGEJOIN_267] (rows=80353 width=1119)
                                  Conds:RS_35._col1=RS_36._col0(Inner),Output:["_col0"]
                                <-Map 14 [SIMPLE_EDGE]
                                  SHUFFLE [RS_35]
                                    PartitionCols:_col1
                                     Please refer to the previous Select Operator [SEL_8]
                                <-Reducer 22 [ONE_TO_ONE_EDGE]
                                  FORWARD [RS_36]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_33] (rows=40176 width=1119)
                                      Output:["_col0"],keys:KEY._col0
                                    <-Reducer 21 [SIMPLE_EDGE]
                                      SHUFFLE [RS_32]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_31] (rows=80353 width=1119)
                                          Output:["_col0"],keys:_col2
                                          Merge Join Operator [MERGEJOIN_266] (rows=80353 width=1119)
                                            Conds:RS_27._col1=RS_28._col1(Inner),Output:["_col2"]
                                          <-Map 31 [SIMPLE_EDGE]
                                            SHUFFLE [RS_28]
                                              PartitionCols:_col1
                                              Select Operator [SEL_23] (rows=73049 width=1119)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_251] (rows=73049 width=1119)
                                                  predicate:(d_week_seq is not null and d_date is not null)
                                                   Please refer to the previous TableScan [TS_21]
                                          <-Reducer 20 [SIMPLE_EDGE]
                                            SHUFFLE [RS_27]
                                              PartitionCols:_col1
                                              Merge Join Operator [MERGEJOIN_265] (rows=36524 width=1128)
                                                Conds:(Inner),Output:["_col1"]
                                              <-Map 31 [CUSTOM_SIMPLE_EDGE]
                                                SHUFFLE [RS_25]
                                                  Select Operator [SEL_20] (rows=36524 width=1119)
                                                    Output:["_col0"]
                                                    Filter Operator [FIL_250] (rows=36524 width=1119)
                                                      predicate:((d_date = '1998-02-19') and d_week_seq is not null)
                                                       Please refer to the previous TableScan [TS_21]
                                              <-Reducer 19 [CUSTOM_SIMPLE_EDGE]
                                                PARTITION_ONLY_SHUFFLE [RS_24]
                                                  Select Operator [SEL_17] (rows=1 width=8)
                                                    Filter Operator [FIL_16] (rows=1 width=8)
                                                      predicate:(sq_count_check(_col0) <= 1)
                                                      Group By Operator [GBY_14] (rows=1 width=8)
                                                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                                      <-Map 18 [CUSTOM_SIMPLE_EDGE]
                                                        PARTITION_ONLY_SHUFFLE [RS_13]
                                                           Please refer to the previous Group By Operator [GBY_12]
                            <-Reducer 2 [SIMPLE_EDGE]
                              SHUFFLE [RS_42]
                                PartitionCols:_col0
                                Merge Join Operator [MERGEJOIN_264] (rows=316788826 width=135)
                                  Conds:RS_39._col1=RS_40._col0(Inner),Output:["_col0","_col2","_col4"]
                                <-Map 7 [SIMPLE_EDGE]
                                  SHUFFLE [RS_40]
                                    PartitionCols:_col0
                                     Please refer to the previous Select Operator [SEL_5]
                                <-Map 1 [SIMPLE_EDGE]
                                  SHUFFLE [RS_39]
                                    PartitionCols:_col1
                                    Select Operator [SEL_2] (rows=287989836 width=135)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_246] (rows=287989836 width=135)
                                        predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                        TableScan [TS_0] (rows=287989836 width=135)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_ext_sales_price"]

