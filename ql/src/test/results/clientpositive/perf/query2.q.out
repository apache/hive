PREHOOK: query: explain
with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from web_sales) x
        union all
       (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
PREHOOK: type: QUERY
POSTHOOK: query: explain
with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from web_sales) x
        union all
       (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Union 2 (CONTAINS)
Map 14 <- Union 15 (CONTAINS)
Map 16 <- Union 15 (CONTAINS)
Map 8 <- Union 2 (CONTAINS)
Reducer 10 <- Map 9 (SIMPLE_EDGE), Union 15 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Map 13 (SIMPLE_EDGE), Reducer 11 (ONE_TO_ONE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Union 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 13 (SIMPLE_EDGE), Reducer 4 (ONE_TO_ONE_EDGE)
Reducer 6 <- Reducer 12 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 7
      File Output Operator [FS_60]
        Select Operator [SEL_59] (rows=287491028 width=135)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
        <-Reducer 6 [SIMPLE_EDGE]
          SHUFFLE [RS_58]
            Select Operator [SEL_57] (rows=287491028 width=135)
              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
              Merge Join Operator [MERGEJOIN_95] (rows=287491028 width=135)
                Conds:RS_54._col0=RS_55.(_col0 - 53)(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
              <-Reducer 12 [SIMPLE_EDGE]
                SHUFFLE [RS_55]
                  PartitionCols:(_col0 - 53)
                  Merge Join Operator [MERGEJOIN_94] (rows=261355475 width=135)
                    Conds:RS_50._col0=RS_51._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                  <-Map 13 [SIMPLE_EDGE]
                    SHUFFLE [RS_51]
                      PartitionCols:_col0
                      Select Operator [SEL_49] (rows=36524 width=1119)
                        Output:["_col0"]
                        Filter Operator [FIL_90] (rows=36524 width=1119)
                          predicate:((d_year = 2002) and d_week_seq is not null)
                          TableScan [TS_20] (rows=73049 width=1119)
                            default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_week_seq","d_year"]
                  <-Reducer 11 [ONE_TO_ONE_EDGE]
                    FORWARD [RS_50]
                      PartitionCols:_col0
                      Group By Operator [GBY_45] (rows=237595882 width=135)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)","sum(VALUE._col4)","sum(VALUE._col5)","sum(VALUE._col6)"],keys:KEY._col0
                      <-Reducer 10 [SIMPLE_EDGE]
                        SHUFFLE [RS_44]
                          PartitionCols:_col0
                          Group By Operator [GBY_43] (rows=475191764 width=135)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col1)","sum(_col2)","sum(_col3)","sum(_col4)","sum(_col5)","sum(_col6)","sum(_col7)"],keys:_col0
                            Select Operator [SEL_41] (rows=475191764 width=135)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                              Merge Join Operator [MERGEJOIN_93] (rows=475191764 width=135)
                                Conds:Union 15._col0=RS_39._col0(Inner),Output:["_col1","_col3","_col4"]
                              <-Map 9 [SIMPLE_EDGE]
                                SHUFFLE [RS_39]
                                  PartitionCols:_col0
                                  Select Operator [SEL_10] (rows=73049 width=1119)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_85] (rows=73049 width=1119)
                                      predicate:(d_date_sk is not null and d_week_seq is not null)
                                      TableScan [TS_8] (rows=73049 width=1119)
                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_week_seq","d_day_name"]
                              <-Union 15 [SIMPLE_EDGE]
                                <-Map 14 [CONTAINS]
                                  Reduce Output Operator [RS_38]
                                    PartitionCols:_col0
                                    Select Operator [SEL_29] (rows=144002668 width=135)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_87] (rows=144002668 width=135)
                                        predicate:ws_sold_date_sk is not null
                                        TableScan [TS_27] (rows=144002668 width=135)
                                          Output:["ws_sold_date_sk","ws_ext_sales_price"]
                                <-Map 16 [CONTAINS]
                                  Reduce Output Operator [RS_38]
                                    PartitionCols:_col0
                                    Select Operator [SEL_32] (rows=287989836 width=135)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_88] (rows=287989836 width=135)
                                        predicate:cs_sold_date_sk is not null
                                        TableScan [TS_30] (rows=287989836 width=135)
                                          Output:["cs_sold_date_sk","cs_ext_sales_price"]
              <-Reducer 5 [SIMPLE_EDGE]
                SHUFFLE [RS_54]
                  PartitionCols:_col0
                  Merge Join Operator [MERGEJOIN_92] (rows=261355475 width=135)
                    Conds:RS_23._col0=RS_24._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                  <-Map 13 [SIMPLE_EDGE]
                    SHUFFLE [RS_24]
                      PartitionCols:_col0
                      Select Operator [SEL_22] (rows=36524 width=1119)
                        Output:["_col0"]
                        Filter Operator [FIL_86] (rows=36524 width=1119)
                          predicate:((d_year = 2001) and d_week_seq is not null)
                           Please refer to the previous TableScan [TS_20]
                  <-Reducer 4 [ONE_TO_ONE_EDGE]
                    FORWARD [RS_23]
                      PartitionCols:_col0
                      Group By Operator [GBY_18] (rows=237595882 width=135)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)","sum(VALUE._col4)","sum(VALUE._col5)","sum(VALUE._col6)"],keys:KEY._col0
                      <-Reducer 3 [SIMPLE_EDGE]
                        SHUFFLE [RS_17]
                          PartitionCols:_col0
                          Group By Operator [GBY_16] (rows=475191764 width=135)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col1)","sum(_col2)","sum(_col3)","sum(_col4)","sum(_col5)","sum(_col6)","sum(_col7)"],keys:_col0
                            Select Operator [SEL_14] (rows=475191764 width=135)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                              Merge Join Operator [MERGEJOIN_91] (rows=475191764 width=135)
                                Conds:Union 2._col0=RS_12._col0(Inner),Output:["_col1","_col3","_col4"]
                              <-Map 9 [SIMPLE_EDGE]
                                SHUFFLE [RS_12]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_10]
                              <-Union 2 [SIMPLE_EDGE]
                                <-Map 1 [CONTAINS]
                                  Reduce Output Operator [RS_11]
                                    PartitionCols:_col0
                                    Select Operator [SEL_2] (rows=144002668 width=135)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_83] (rows=144002668 width=135)
                                        predicate:ws_sold_date_sk is not null
                                        TableScan [TS_0] (rows=144002668 width=135)
                                          Output:["ws_sold_date_sk","ws_ext_sales_price"]
                                <-Map 8 [CONTAINS]
                                  Reduce Output Operator [RS_11]
                                    PartitionCols:_col0
                                    Select Operator [SEL_5] (rows=287989836 width=135)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_84] (rows=287989836 width=135)
                                        predicate:cs_sold_date_sk is not null
                                        TableScan [TS_3] (rows=287989836 width=135)
                                          Output:["cs_sold_date_sk","cs_ext_sales_price"]

