PREHOOK: query: explain
select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('1998-04-08' as date) - 30 days)
                and (cast ('1998-04-08' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('1998-04-08' as date) - 30 days)
                and (cast ('1998-04-08' as date) + 30 days) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 10 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 11 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_36]
        Limit [LIM_35] (rows=100 width=135)
          Number of rows:100
          Select Operator [SEL_34] (rows=210822976 width=135)
            Output:["_col0","_col1","_col2","_col3"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_33]
              Group By Operator [GBY_31] (rows=210822976 width=135)
                Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1
              <-Reducer 5 [SIMPLE_EDGE]
                SHUFFLE [RS_30]
                  PartitionCols:_col0, _col1
                  Group By Operator [GBY_29] (rows=421645953 width=135)
                    Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col0, _col1
                    Select Operator [SEL_27] (rows=421645953 width=135)
                      Output:["_col0","_col1","_col2","_col3"]
                      Merge Join Operator [MERGEJOIN_58] (rows=421645953 width=135)
                        Conds:RS_24._col1=RS_25._col0(Inner),Output:["_col4","_col7","_col9","_col11","_col14"]
                      <-Map 11 [SIMPLE_EDGE]
                        SHUFFLE [RS_25]
                          PartitionCols:_col0
                          Select Operator [SEL_14] (rows=27 width=1029)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_54] (rows=27 width=1029)
                              predicate:w_warehouse_sk is not null
                              TableScan [TS_12] (rows=27 width=1029)
                                default@warehouse,warehouse,Tbl:COMPLETE,Col:NONE,Output:["w_warehouse_sk","w_state"]
                      <-Reducer 4 [SIMPLE_EDGE]
                        SHUFFLE [RS_24]
                          PartitionCols:_col1
                          Merge Join Operator [MERGEJOIN_57] (rows=383314495 width=135)
                            Conds:RS_21._col2=RS_22._col0(Inner),Output:["_col1","_col4","_col7","_col9","_col11"]
                          <-Map 10 [SIMPLE_EDGE]
                            SHUFFLE [RS_22]
                              PartitionCols:_col0
                              Select Operator [SEL_11] (rows=51333 width=1436)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_53] (rows=51333 width=1436)
                                  predicate:(i_current_price BETWEEN 0.99 AND 1.49 and i_item_sk is not null)
                                  TableScan [TS_9] (rows=462000 width=1436)
                                    default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id","i_current_price"]
                          <-Reducer 3 [SIMPLE_EDGE]
                            SHUFFLE [RS_21]
                              PartitionCols:_col2
                              Merge Join Operator [MERGEJOIN_56] (rows=348467716 width=135)
                                Conds:RS_18._col0=RS_19._col0(Inner),Output:["_col1","_col2","_col4","_col7","_col9"]
                              <-Map 9 [SIMPLE_EDGE]
                                SHUFFLE [RS_19]
                                  PartitionCols:_col0
                                  Select Operator [SEL_8] (rows=8116 width=1119)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_52] (rows=8116 width=1119)
                                      predicate:(CAST( d_date AS TIMESTAMP) BETWEEN 1998-03-08 23:00:00.0 AND 1998-05-08 00:00:00.0 and d_date_sk is not null)
                                      TableScan [TS_6] (rows=73049 width=1119)
                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                              <-Reducer 2 [SIMPLE_EDGE]
                                SHUFFLE [RS_18]
                                  PartitionCols:_col0
                                  Merge Join Operator [MERGEJOIN_55] (rows=316788826 width=135)
                                    Conds:RS_15._col2, _col3=RS_16._col0, _col1(Left Outer),Output:["_col0","_col1","_col2","_col4","_col7"]
                                  <-Map 1 [SIMPLE_EDGE]
                                    SHUFFLE [RS_15]
                                      PartitionCols:_col2, _col3
                                      Select Operator [SEL_2] (rows=287989836 width=135)
                                        Output:["_col0","_col1","_col2","_col3","_col4"]
                                        Filter Operator [FIL_50] (rows=287989836 width=135)
                                          predicate:(cs_warehouse_sk is not null and cs_item_sk is not null and cs_sold_date_sk is not null)
                                          TableScan [TS_0] (rows=287989836 width=135)
                                            default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_warehouse_sk","cs_item_sk","cs_order_number","cs_sales_price"]
                                  <-Map 8 [SIMPLE_EDGE]
                                    SHUFFLE [RS_16]
                                      PartitionCols:_col0, _col1
                                      Select Operator [SEL_5] (rows=28798881 width=106)
                                        Output:["_col0","_col1","_col2"]
                                        Filter Operator [FIL_51] (rows=28798881 width=106)
                                          predicate:cr_item_sk is not null
                                          TableScan [TS_3] (rows=28798881 width=106)
                                            default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:NONE,Output:["cr_item_sk","cr_order_number","cr_refunded_cash"]

