PREHOOK: query: explain
with ws as
  (select d_year AS ws_sold_year, ws_item_sk,
    ws_bill_customer_sk ws_customer_sk,
    sum(ws_quantity) ws_qty,
    sum(ws_wholesale_cost) ws_wc,
    sum(ws_sales_price) ws_sp
   from web_sales
   left join web_returns on wr_order_number=ws_order_number and ws_item_sk=wr_item_sk
   join date_dim on ws_sold_date_sk = d_date_sk
   where wr_order_number is null
   group by d_year, ws_item_sk, ws_bill_customer_sk
   ),
cs as
  (select d_year AS cs_sold_year, cs_item_sk,
    cs_bill_customer_sk cs_customer_sk,
    sum(cs_quantity) cs_qty,
    sum(cs_wholesale_cost) cs_wc,
    sum(cs_sales_price) cs_sp
   from catalog_sales
   left join catalog_returns on cr_order_number=cs_order_number and cs_item_sk=cr_item_sk
   join date_dim on cs_sold_date_sk = d_date_sk
   where cr_order_number is null
   group by d_year, cs_item_sk, cs_bill_customer_sk
   ),
ss as
  (select d_year AS ss_sold_year, ss_item_sk,
    ss_customer_sk,
    sum(ss_quantity) ss_qty,
    sum(ss_wholesale_cost) ss_wc,
    sum(ss_sales_price) ss_sp
   from store_sales
   left join store_returns on sr_ticket_number=ss_ticket_number and ss_item_sk=sr_item_sk
   join date_dim on ss_sold_date_sk = d_date_sk
   where sr_ticket_number is null
   group by d_year, ss_item_sk, ss_customer_sk
   )
 select 
ss_sold_year, ss_item_sk, ss_customer_sk,
round(ss_qty/(coalesce(ws_qty+cs_qty,1)),2) ratio,
ss_qty store_qty, ss_wc store_wholesale_cost, ss_sp store_sales_price,
coalesce(ws_qty,0)+coalesce(cs_qty,0) other_chan_qty,
coalesce(ws_wc,0)+coalesce(cs_wc,0) other_chan_wholesale_cost,
coalesce(ws_sp,0)+coalesce(cs_sp,0) other_chan_sales_price
from ss
left join ws on (ws_sold_year=ss_sold_year and ws_item_sk=ss_item_sk and ws_customer_sk=ss_customer_sk)
left join cs on (cs_sold_year=ss_sold_year and cs_item_sk=cs_item_sk and cs_customer_sk=ss_customer_sk)
where coalesce(ws_qty,0)>0 and coalesce(cs_qty, 0)>0 and ss_sold_year=2000
order by 
  ss_sold_year, ss_item_sk, ss_customer_sk,
  ss_qty desc, ss_wc desc, ss_sp desc,
  other_chan_qty,
  other_chan_wholesale_cost,
  other_chan_sales_price,
  round(ss_qty/(coalesce(ws_qty+cs_qty,1)),2)
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with ws as
  (select d_year AS ws_sold_year, ws_item_sk,
    ws_bill_customer_sk ws_customer_sk,
    sum(ws_quantity) ws_qty,
    sum(ws_wholesale_cost) ws_wc,
    sum(ws_sales_price) ws_sp
   from web_sales
   left join web_returns on wr_order_number=ws_order_number and ws_item_sk=wr_item_sk
   join date_dim on ws_sold_date_sk = d_date_sk
   where wr_order_number is null
   group by d_year, ws_item_sk, ws_bill_customer_sk
   ),
cs as
  (select d_year AS cs_sold_year, cs_item_sk,
    cs_bill_customer_sk cs_customer_sk,
    sum(cs_quantity) cs_qty,
    sum(cs_wholesale_cost) cs_wc,
    sum(cs_sales_price) cs_sp
   from catalog_sales
   left join catalog_returns on cr_order_number=cs_order_number and cs_item_sk=cr_item_sk
   join date_dim on cs_sold_date_sk = d_date_sk
   where cr_order_number is null
   group by d_year, cs_item_sk, cs_bill_customer_sk
   ),
ss as
  (select d_year AS ss_sold_year, ss_item_sk,
    ss_customer_sk,
    sum(ss_quantity) ss_qty,
    sum(ss_wholesale_cost) ss_wc,
    sum(ss_sales_price) ss_sp
   from store_sales
   left join store_returns on sr_ticket_number=ss_ticket_number and ss_item_sk=sr_item_sk
   join date_dim on ss_sold_date_sk = d_date_sk
   where sr_ticket_number is null
   group by d_year, ss_item_sk, ss_customer_sk
   )
 select 
ss_sold_year, ss_item_sk, ss_customer_sk,
round(ss_qty/(coalesce(ws_qty+cs_qty,1)),2) ratio,
ss_qty store_qty, ss_wc store_wholesale_cost, ss_sp store_sales_price,
coalesce(ws_qty,0)+coalesce(cs_qty,0) other_chan_qty,
coalesce(ws_wc,0)+coalesce(cs_wc,0) other_chan_wholesale_cost,
coalesce(ws_sp,0)+coalesce(cs_sp,0) other_chan_sales_price
from ss
left join ws on (ws_sold_year=ss_sold_year and ws_item_sk=ss_item_sk and ws_customer_sk=ss_customer_sk)
left join cs on (cs_sold_year=ss_sold_year and cs_item_sk=cs_item_sk and cs_customer_sk=ss_customer_sk)
where coalesce(ws_qty,0)>0 and coalesce(cs_qty, 0)>0 and ss_sold_year=2000
order by 
  ss_sold_year, ss_item_sk, ss_customer_sk,
  ss_qty desc, ss_wc desc, ss_sp desc,
  other_chan_qty,
  other_chan_wholesale_cost,
  other_chan_sales_price,
  round(ss_qty/(coalesce(ws_qty+cs_qty,1)),2)
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
Reducer 12 <- Map 11 (SIMPLE_EDGE), Map 13 (SIMPLE_EDGE)
Reducer 15 <- Map 14 (SIMPLE_EDGE), Map 16 (SIMPLE_EDGE)
Reducer 18 <- Map 17 (SIMPLE_EDGE), Map 19 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (ONE_TO_ONE_EDGE), Reducer 8 (ONE_TO_ONE_EDGE)
Reducer 5 <- Reducer 10 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 1 (SIMPLE_EDGE), Reducer 15 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Map 1 (SIMPLE_EDGE), Reducer 18 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6
      File Output Operator [FS_78]
        Select Operator [SEL_77] (rows=100 width=88)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
          Limit [LIM_76] (rows=100 width=88)
            Number of rows:100
            Select Operator [SEL_75] (rows=23425424 width=88)
              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
            <-Reducer 5 [SIMPLE_EDGE]
              SHUFFLE [RS_74]
                Select Operator [SEL_73] (rows=23425424 width=88)
                  Output:["_col0","_col1","_col6","_col7","_col8","_col9","_col10","_col11","_col12"]
                  Filter Operator [FIL_72] (rows=23425424 width=88)
                    predicate:(COALESCE(_col11,0) > 0)
                    Merge Join Operator [MERGEJOIN_113] (rows=70276272 width=88)
                      Conds:RS_69._col1=RS_70._col0(Left Outer),Output:["_col0","_col1","_col2","_col3","_col4","_col7","_col8","_col9","_col11","_col12","_col13"]
                    <-Reducer 10 [SIMPLE_EDGE]
                      SHUFFLE [RS_70]
                        PartitionCols:_col0
                        Select Operator [SEL_67] (rows=43558464 width=135)
                          Output:["_col0","_col1","_col2","_col3"]
                          Group By Operator [GBY_66] (rows=43558464 width=135)
                            Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"],keys:KEY._col0, KEY._col1
                          <-Reducer 9 [SIMPLE_EDGE]
                            SHUFFLE [RS_65]
                              PartitionCols:_col0, _col1
                              Group By Operator [GBY_64] (rows=87116928 width=135)
                                Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col6)","sum(_col7)","sum(_col8)"],keys:_col3, _col4
                                Merge Join Operator [MERGEJOIN_111] (rows=87116928 width=135)
                                  Conds:RS_60._col0=RS_61._col0(Inner),Output:["_col3","_col4","_col6","_col7","_col8"]
                                <-Map 1 [SIMPLE_EDGE]
                                  SHUFFLE [RS_60]
                                    PartitionCols:_col0
                                    Select Operator [SEL_2] (rows=36524 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_97] (rows=36524 width=1119)
                                        predicate:((d_year = 2000) and d_date_sk is not null)
                                        TableScan [TS_0] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                <-Reducer 18 [SIMPLE_EDGE]
                                  SHUFFLE [RS_61]
                                    PartitionCols:_col0
                                    Select Operator [SEL_59] (rows=79197206 width=135)
                                      Output:["_col0","_col1","_col2","_col4","_col5","_col6"]
                                      Filter Operator [FIL_58] (rows=79197206 width=135)
                                        predicate:_col8 is null
                                        Merge Join Operator [MERGEJOIN_110] (rows=158394413 width=135)
                                          Conds:RS_55._col2, _col3=RS_56._col0, _col1(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5","_col6","_col8"]
                                        <-Map 17 [SIMPLE_EDGE]
                                          SHUFFLE [RS_55]
                                            PartitionCols:_col2, _col3
                                            Select Operator [SEL_52] (rows=143994918 width=135)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                              Filter Operator [FIL_104] (rows=143994918 width=135)
                                                predicate:((cs_item_sk = cs_item_sk) and cs_sold_date_sk is not null)
                                                TableScan [TS_50] (rows=287989836 width=135)
                                                  default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_item_sk","cs_order_number","cs_quantity","cs_wholesale_cost","cs_sales_price"]
                                        <-Map 19 [SIMPLE_EDGE]
                                          SHUFFLE [RS_56]
                                            PartitionCols:_col0, _col1
                                            Select Operator [SEL_54] (rows=28798881 width=106)
                                              Output:["_col0","_col1"]
                                              TableScan [TS_53] (rows=28798881 width=106)
                                                default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:NONE,Output:["cr_item_sk","cr_order_number"]
                    <-Reducer 4 [SIMPLE_EDGE]
                      SHUFFLE [RS_69]
                        PartitionCols:_col1
                        Filter Operator [FIL_45] (rows=63887519 width=88)
                          predicate:(COALESCE(_col7,0) > 0)
                          Merge Join Operator [MERGEJOIN_112] (rows=191662559 width=88)
                            Conds:RS_42._col1, _col0=RS_43._col1, _col0(Left Outer),Output:["_col0","_col1","_col2","_col3","_col4","_col7","_col8","_col9"]
                          <-Reducer 3 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_42]
                              PartitionCols:_col1, _col0
                              Select Operator [SEL_20] (rows=174238687 width=88)
                                Output:["_col0","_col1","_col2","_col3","_col4"]
                                Group By Operator [GBY_19] (rows=174238687 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"],keys:KEY._col0, KEY._col1
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_18]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_17] (rows=348477374 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col6)","sum(_col7)","sum(_col8)"],keys:_col4, _col3
                                      Merge Join Operator [MERGEJOIN_107] (rows=348477374 width=88)
                                        Conds:RS_13._col0=RS_14._col0(Inner),Output:["_col3","_col4","_col6","_col7","_col8"]
                                      <-Map 1 [SIMPLE_EDGE]
                                        SHUFFLE [RS_13]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_2]
                                      <-Reducer 12 [SIMPLE_EDGE]
                                        SHUFFLE [RS_14]
                                          PartitionCols:_col0
                                          Select Operator [SEL_12] (rows=316797606 width=88)
                                            Output:["_col0","_col1","_col2","_col4","_col5","_col6"]
                                            Filter Operator [FIL_11] (rows=316797606 width=88)
                                              predicate:_col8 is null
                                              Merge Join Operator [MERGEJOIN_106] (rows=633595212 width=88)
                                                Conds:RS_8._col1, _col3=RS_9._col0, _col1(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5","_col6","_col8"]
                                              <-Map 11 [SIMPLE_EDGE]
                                                SHUFFLE [RS_8]
                                                  PartitionCols:_col1, _col3
                                                  Select Operator [SEL_5] (rows=575995635 width=88)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                                    Filter Operator [FIL_98] (rows=575995635 width=88)
                                                      predicate:ss_sold_date_sk is not null
                                                      TableScan [TS_3] (rows=575995635 width=88)
                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_ticket_number","ss_quantity","ss_wholesale_cost","ss_sales_price"]
                                              <-Map 13 [SIMPLE_EDGE]
                                                SHUFFLE [RS_9]
                                                  PartitionCols:_col0, _col1
                                                  Select Operator [SEL_7] (rows=57591150 width=77)
                                                    Output:["_col0","_col1"]
                                                    TableScan [TS_6] (rows=57591150 width=77)
                                                      default@store_returns,store_returns,Tbl:COMPLETE,Col:NONE,Output:["sr_item_sk","sr_ticket_number"]
                          <-Reducer 8 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_43]
                              PartitionCols:_col1, _col0
                              Select Operator [SEL_41] (rows=43560808 width=135)
                                Output:["_col0","_col1","_col2","_col3","_col4"]
                                Group By Operator [GBY_40] (rows=43560808 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"],keys:KEY._col0, KEY._col1
                                <-Reducer 7 [SIMPLE_EDGE]
                                  SHUFFLE [RS_39]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_38] (rows=87121617 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col6)","sum(_col7)","sum(_col8)"],keys:_col4, _col3
                                      Merge Join Operator [MERGEJOIN_109] (rows=87121617 width=135)
                                        Conds:RS_34._col0=RS_35._col0(Inner),Output:["_col3","_col4","_col6","_col7","_col8"]
                                      <-Map 1 [SIMPLE_EDGE]
                                        SHUFFLE [RS_34]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_2]
                                      <-Reducer 15 [SIMPLE_EDGE]
                                        SHUFFLE [RS_35]
                                          PartitionCols:_col0
                                          Select Operator [SEL_33] (rows=79201469 width=135)
                                            Output:["_col0","_col1","_col2","_col4","_col5","_col6"]
                                            Filter Operator [FIL_32] (rows=79201469 width=135)
                                              predicate:_col8 is null
                                              Merge Join Operator [MERGEJOIN_108] (rows=158402938 width=135)
                                                Conds:RS_29._col1, _col3=RS_30._col0, _col1(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5","_col6","_col8"]
                                              <-Map 14 [SIMPLE_EDGE]
                                                SHUFFLE [RS_29]
                                                  PartitionCols:_col1, _col3
                                                  Select Operator [SEL_26] (rows=144002668 width=135)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                                    Filter Operator [FIL_101] (rows=144002668 width=135)
                                                      predicate:ws_sold_date_sk is not null
                                                      TableScan [TS_24] (rows=144002668 width=135)
                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_bill_customer_sk","ws_order_number","ws_quantity","ws_wholesale_cost","ws_sales_price"]
                                              <-Map 16 [SIMPLE_EDGE]
                                                SHUFFLE [RS_30]
                                                  PartitionCols:_col0, _col1
                                                  Select Operator [SEL_28] (rows=14398467 width=92)
                                                    Output:["_col0","_col1"]
                                                    TableScan [TS_27] (rows=14398467 width=92)
                                                      default@web_returns,web_returns,Tbl:COMPLETE,Col:NONE,Output:["wr_item_sk","wr_order_number"]

