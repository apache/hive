PREHOOK: query: explain
select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as numeric(12,2))) agg1,
        avg( cast(cs_list_price as numeric(12,2))) agg2,
        avg( cast(cs_coupon_amt as numeric(12,2))) agg3,
        avg( cast(cs_sales_price as numeric(12,2))) agg4,
        avg( cast(cs_net_profit as numeric(12,2))) agg5,
        avg( cast(c_birth_year as numeric(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
 from catalog_sales, customer_demographics cd1, 
      customer_demographics cd2, customer, customer_address, date_dim, item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'College' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (9,5,12,4,1,10) and
       d_year = 2001 and
       ca_state in ('ND','WI','AL'
                   ,'NC','OK','MS','TN')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
	i_item_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as numeric(12,2))) agg1,
        avg( cast(cs_list_price as numeric(12,2))) agg2,
        avg( cast(cs_coupon_amt as numeric(12,2))) agg3,
        avg( cast(cs_sales_price as numeric(12,2))) agg4,
        avg( cast(cs_net_profit as numeric(12,2))) agg5,
        avg( cast(c_birth_year as numeric(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
 from catalog_sales, customer_demographics cd1, 
      customer_demographics cd2, customer, customer_address, date_dim, item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'College' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (9,5,12,4,1,10) and
       d_year = 2001 and
       ca_state in ('ND','WI','AL'
                   ,'NC','OK','MS','TN')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
	i_item_id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 13 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 11 <- Map 14 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Map 15 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 12 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6
      File Output Operator [FS_49]
        Limit [LIM_48] (rows=100 width=135)
          Number of rows:100
          Select Operator [SEL_47] (rows=1054114882 width=135)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_46]
              Select Operator [SEL_45] (rows=1054114882 width=135)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10"]
                Group By Operator [GBY_44] (rows=1054114882 width=135)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6","_col7","_col8","_col9","_col10","_col11"],aggregations:["avg(VALUE._col0)","avg(VALUE._col1)","avg(VALUE._col2)","avg(VALUE._col3)","avg(VALUE._col4)","avg(VALUE._col5)","avg(VALUE._col6)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_43]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_42] (rows=2108229765 width=135)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11"],aggregations:["avg(_col4)","avg(_col5)","avg(_col6)","avg(_col7)","avg(_col8)","avg(_col9)","avg(_col10)"],keys:_col0, _col1, _col2, _col3, 0
                      Select Operator [SEL_40] (rows=421645953 width=135)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10"]
                        Merge Join Operator [MERGEJOIN_83] (rows=421645953 width=135)
                          Conds:RS_37._col0=RS_38._col3(Inner),Output:["_col4","_col6","_col7","_col8","_col11","_col16","_col17","_col18","_col19","_col20","_col26"]
                        <-Reducer 12 [SIMPLE_EDGE]
                          SHUFFLE [RS_38]
                            PartitionCols:_col3
                            Select Operator [SEL_30] (rows=383314495 width=135)
                              Output:["_col1","_col3","_col6","_col7","_col8","_col9","_col10","_col16"]
                              Merge Join Operator [MERGEJOIN_82] (rows=383314495 width=135)
                                Conds:RS_27._col3=RS_28._col0(Inner),Output:["_col1","_col4","_col5","_col6","_col7","_col8","_col14","_col16"]
                              <-Map 15 [SIMPLE_EDGE]
                                SHUFFLE [RS_28]
                                  PartitionCols:_col0
                                  Select Operator [SEL_20] (rows=462000 width=1436)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_77] (rows=462000 width=1436)
                                      predicate:i_item_sk is not null
                                      TableScan [TS_18] (rows=462000 width=1436)
                                        default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id"]
                              <-Reducer 11 [SIMPLE_EDGE]
                                SHUFFLE [RS_27]
                                  PartitionCols:_col3
                                  Merge Join Operator [MERGEJOIN_81] (rows=348467716 width=135)
                                    Conds:RS_24._col2=RS_25._col0(Inner),Output:["_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col14"]
                                  <-Map 14 [SIMPLE_EDGE]
                                    SHUFFLE [RS_25]
                                      PartitionCols:_col0
                                      Select Operator [SEL_17] (rows=465450 width=385)
                                        Output:["_col0","_col3"]
                                        Filter Operator [FIL_76] (rows=465450 width=385)
                                          predicate:((cd_gender = 'M') and (cd_education_status = 'College') and cd_demo_sk is not null)
                                          TableScan [TS_15] (rows=1861800 width=385)
                                            default@customer_demographics,cd1,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_gender","cd_education_status","cd_dep_count"]
                                  <-Reducer 10 [SIMPLE_EDGE]
                                    SHUFFLE [RS_24]
                                      PartitionCols:_col2
                                      Merge Join Operator [MERGEJOIN_80] (rows=316788826 width=135)
                                        Conds:RS_21._col0=RS_22._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                      <-Map 13 [SIMPLE_EDGE]
                                        SHUFFLE [RS_22]
                                          PartitionCols:_col0
                                          Select Operator [SEL_14] (rows=36524 width=1119)
                                            Output:["_col0"]
                                            Filter Operator [FIL_75] (rows=36524 width=1119)
                                              predicate:((d_year = 2001) and d_date_sk is not null)
                                              TableScan [TS_12] (rows=73049 width=1119)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                      <-Map 9 [SIMPLE_EDGE]
                                        SHUFFLE [RS_21]
                                          PartitionCols:_col0
                                          Select Operator [SEL_11] (rows=287989836 width=135)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                            Filter Operator [FIL_74] (rows=287989836 width=135)
                                              predicate:(cs_bill_cdemo_sk is not null and cs_bill_customer_sk is not null and cs_sold_date_sk is not null and cs_item_sk is not null)
                                              TableScan [TS_9] (rows=287989836 width=135)
                                                default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_bill_cdemo_sk","cs_item_sk","cs_quantity","cs_list_price","cs_sales_price","cs_coupon_amt","cs_net_profit"]
                        <-Reducer 3 [SIMPLE_EDGE]
                          SHUFFLE [RS_37]
                            PartitionCols:_col0
                            Merge Join Operator [MERGEJOIN_79] (rows=48400001 width=860)
                              Conds:RS_34._col1=RS_35._col0(Inner),Output:["_col0","_col4","_col6","_col7","_col8"]
                            <-Map 8 [SIMPLE_EDGE]
                              SHUFFLE [RS_35]
                                PartitionCols:_col0
                                Select Operator [SEL_8] (rows=1861800 width=385)
                                  Output:["_col0"]
                                  Filter Operator [FIL_73] (rows=1861800 width=385)
                                    predicate:cd_demo_sk is not null
                                    TableScan [TS_6] (rows=1861800 width=385)
                                      default@customer_demographics,cd2,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk"]
                            <-Reducer 2 [SIMPLE_EDGE]
                              SHUFFLE [RS_34]
                                PartitionCols:_col1
                                Merge Join Operator [MERGEJOIN_78] (rows=44000000 width=860)
                                  Conds:RS_31._col2=RS_32._col0(Inner),Output:["_col0","_col1","_col4","_col6","_col7","_col8"]
                                <-Map 1 [SIMPLE_EDGE]
                                  SHUFFLE [RS_31]
                                    PartitionCols:_col2
                                    Select Operator [SEL_2] (rows=40000000 width=860)
                                      Output:["_col0","_col1","_col2","_col4"]
                                      Filter Operator [FIL_71] (rows=40000000 width=860)
                                        predicate:((c_birth_month) IN (9, 5, 12, 4, 1, 10) and c_customer_sk is not null and c_current_cdemo_sk is not null and c_current_addr_sk is not null)
                                        TableScan [TS_0] (rows=80000000 width=860)
                                          default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_addr_sk","c_birth_month","c_birth_year"]
                                <-Map 7 [SIMPLE_EDGE]
                                  SHUFFLE [RS_32]
                                    PartitionCols:_col0
                                    Select Operator [SEL_5] (rows=20000000 width=1014)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_72] (rows=20000000 width=1014)
                                        predicate:((ca_state) IN ('ND', 'WI', 'AL', 'NC', 'OK', 'MS', 'TN') and ca_address_sk is not null)
                                        TableScan [TS_3] (rows=40000000 width=1014)
                                          default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_county","ca_state","ca_country"]

