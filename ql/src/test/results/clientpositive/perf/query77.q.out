Warning: Shuffle Join MERGEJOIN[188][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 15' is a cross product
PREHOOK: query: explain
with ss as
 (select s_store_sk,
         sum(ss_ext_sales_price) as sales,
         sum(ss_net_profit) as profit
 from store_sales,
      date_dim,
      store
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date) 
                  and (cast('1998-08-04' as date) +  30 days) 
       and ss_store_sk = s_store_sk
 group by s_store_sk)
 ,
 sr as
 (select s_store_sk,
         sum(sr_return_amt) as returns,
         sum(sr_net_loss) as profit_loss
 from store_returns,
      date_dim,
      store
 where sr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and sr_store_sk = s_store_sk
 group by s_store_sk), 
 cs as
 (select cs_call_center_sk,
        sum(cs_ext_sales_price) as sales,
        sum(cs_net_profit) as profit
 from catalog_sales,
      date_dim
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 group by cs_call_center_sk 
 ), 
 cr as
 (select
        sum(cr_return_amount) as returns,
        sum(cr_net_loss) as profit_loss
 from catalog_returns,
      date_dim
 where cr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 ), 
 ws as
 ( select wp_web_page_sk,
        sum(ws_ext_sales_price) as sales,
        sum(ws_net_profit) as profit
 from web_sales,
      date_dim,
      web_page
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and ws_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk), 
 wr as
 (select wp_web_page_sk,
        sum(wr_return_amt) as returns,
        sum(wr_net_loss) as profit_loss
 from web_returns,
      date_dim,
      web_page
 where wr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and wr_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , ss.s_store_sk as id
        , sales
        , coalesce(returns, 0) as returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ss left join sr
        on  ss.s_store_sk = sr.s_store_sk
 union all
 select 'catalog channel' as channel
        , cs_call_center_sk as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  cs
       , cr
 union all
 select 'web channel' as channel
        , ws.wp_web_page_sk as id
        , sales
        , coalesce(returns, 0) returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ws left join wr
        on  ws.wp_web_page_sk = wr.wp_web_page_sk
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with ss as
 (select s_store_sk,
         sum(ss_ext_sales_price) as sales,
         sum(ss_net_profit) as profit
 from store_sales,
      date_dim,
      store
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date) 
                  and (cast('1998-08-04' as date) +  30 days) 
       and ss_store_sk = s_store_sk
 group by s_store_sk)
 ,
 sr as
 (select s_store_sk,
         sum(sr_return_amt) as returns,
         sum(sr_net_loss) as profit_loss
 from store_returns,
      date_dim,
      store
 where sr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and sr_store_sk = s_store_sk
 group by s_store_sk), 
 cs as
 (select cs_call_center_sk,
        sum(cs_ext_sales_price) as sales,
        sum(cs_net_profit) as profit
 from catalog_sales,
      date_dim
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 group by cs_call_center_sk 
 ), 
 cr as
 (select
        sum(cr_return_amount) as returns,
        sum(cr_net_loss) as profit_loss
 from catalog_returns,
      date_dim
 where cr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 ), 
 ws as
 ( select wp_web_page_sk,
        sum(ws_ext_sales_price) as sales,
        sum(ws_net_profit) as profit
 from web_sales,
      date_dim,
      web_page
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and ws_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk), 
 wr as
 (select wp_web_page_sk,
        sum(wr_return_amt) as returns,
        sum(wr_net_loss) as profit_loss
 from web_returns,
      date_dim,
      web_page
 where wr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and wr_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , ss.s_store_sk as id
        , sales
        , coalesce(returns, 0) as returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ss left join sr
        on  ss.s_store_sk = sr.s_store_sk
 union all
 select 'catalog channel' as channel
        , cs_call_center_sk as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  cs
       , cr
 union all
 select 'web channel' as channel
        , ws.wp_web_page_sk as id
        , sales
        , coalesce(returns, 0) returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ws left join wr
        on  ws.wp_web_page_sk = wr.wp_web_page_sk
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 26 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 11 <- Map 25 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Map 27 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (CUSTOM_SIMPLE_EDGE), Reducer 17 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 16 <- Map 28 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 17 <- Reducer 16 (CUSTOM_SIMPLE_EDGE)
Reducer 18 <- Map 29 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 19 <- Map 30 (SIMPLE_EDGE), Reducer 18 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 20 <- Reducer 19 (SIMPLE_EDGE)
Reducer 21 <- Reducer 20 (ONE_TO_ONE_EDGE), Reducer 24 (ONE_TO_ONE_EDGE), Union 6 (CONTAINS)
Reducer 22 <- Map 31 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 23 <- Map 30 (SIMPLE_EDGE), Reducer 22 (SIMPLE_EDGE)
Reducer 24 <- Reducer 23 (SIMPLE_EDGE)
Reducer 3 <- Map 25 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 12 (ONE_TO_ONE_EDGE), Reducer 4 (ONE_TO_ONE_EDGE), Union 6 (CONTAINS)
Reducer 7 <- Union 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8
      File Output Operator [FS_130]
        Limit [LIM_129] (rows=100 width=163)
          Number of rows:100
          Select Operator [SEL_128] (rows=956329968 width=163)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 7 [SIMPLE_EDGE]
            SHUFFLE [RS_127]
              Select Operator [SEL_126] (rows=956329968 width=163)
                Output:["_col0","_col1","_col2","_col3","_col4"]
                Group By Operator [GBY_125] (rows=956329968 width=163)
                  Output:["_col0","_col1","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2
                <-Union 6 [SIMPLE_EDGE]
                  <-Reducer 15 [CONTAINS]
                    Reduce Output Operator [RS_124]
                      PartitionCols:_col0, _col1, _col2
                      Group By Operator [GBY_123] (rows=1912659936 width=163)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0, _col1, 0
                        Select Operator [SEL_75] (rows=158394413 width=360)
                          Output:["_col0","_col1","_col2","_col3","_col4"]
                          Merge Join Operator [MERGEJOIN_188] (rows=158394413 width=360)
                            Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                          <-Reducer 14 [CUSTOM_SIMPLE_EDGE]
                            PARTITION_ONLY_SHUFFLE [RS_72]
                              Group By Operator [GBY_56] (rows=158394413 width=135)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                              <-Reducer 13 [SIMPLE_EDGE]
                                SHUFFLE [RS_55]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_54] (rows=316788826 width=135)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col1
                                    Merge Join Operator [MERGEJOIN_181] (rows=316788826 width=135)
                                      Conds:RS_50._col0=RS_51._col0(Inner),Output:["_col1","_col2","_col3"]
                                    <-Map 9 [SIMPLE_EDGE]
                                      SHUFFLE [RS_51]
                                        PartitionCols:_col0
                                        Select Operator [SEL_5] (rows=8116 width=1119)
                                          Output:["_col0"]
                                          Filter Operator [FIL_162] (rows=8116 width=1119)
                                            predicate:(CAST( d_date AS TIMESTAMP) BETWEEN 1998-08-04 00:00:00.0 AND 1998-09-03 00:00:00.0 and d_date_sk is not null)
                                            TableScan [TS_3] (rows=73049 width=1119)
                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                                    <-Map 27 [SIMPLE_EDGE]
                                      SHUFFLE [RS_50]
                                        PartitionCols:_col0
                                        Select Operator [SEL_46] (rows=287989836 width=135)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_167] (rows=287989836 width=135)
                                            predicate:cs_sold_date_sk is not null
                                            TableScan [TS_44] (rows=287989836 width=135)
                                              default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_call_center_sk","cs_ext_sales_price","cs_net_profit"]
                          <-Reducer 17 [CUSTOM_SIMPLE_EDGE]
                            PARTITION_ONLY_SHUFFLE [RS_73]
                              Group By Operator [GBY_70] (rows=1 width=224)
                                Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"]
                              <-Reducer 16 [CUSTOM_SIMPLE_EDGE]
                                PARTITION_ONLY_SHUFFLE [RS_69]
                                  Group By Operator [GBY_68] (rows=1 width=224)
                                    Output:["_col0","_col1"],aggregations:["sum(_col1)","sum(_col2)"]
                                    Merge Join Operator [MERGEJOIN_182] (rows=31678769 width=106)
                                      Conds:RS_64._col0=RS_65._col0(Inner),Output:["_col1","_col2"]
                                    <-Map 9 [SIMPLE_EDGE]
                                      SHUFFLE [RS_65]
                                        PartitionCols:_col0
                                         Please refer to the previous Select Operator [SEL_5]
                                    <-Map 28 [SIMPLE_EDGE]
                                      SHUFFLE [RS_64]
                                        PartitionCols:_col0
                                        Select Operator [SEL_60] (rows=28798881 width=106)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_169] (rows=28798881 width=106)
                                            predicate:cr_returned_date_sk is not null
                                            TableScan [TS_58] (rows=28798881 width=106)
                                              default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:NONE,Output:["cr_returned_date_sk","cr_return_amount","cr_net_loss"]
                  <-Reducer 21 [CONTAINS]
                    Reduce Output Operator [RS_124]
                      PartitionCols:_col0, _col1, _col2
                      Group By Operator [GBY_123] (rows=1912659936 width=163)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0, _col1, 0
                        Select Operator [SEL_120] (rows=95833780 width=135)
                          Output:["_col0","_col1","_col2","_col3","_col4"]
                          Merge Join Operator [MERGEJOIN_189] (rows=95833780 width=135)
                            Conds:RS_117._col0=RS_118._col0(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5"]
                          <-Reducer 20 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_117]
                              PartitionCols:_col0
                              Group By Operator [GBY_95] (rows=87121617 width=135)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                              <-Reducer 19 [SIMPLE_EDGE]
                                SHUFFLE [RS_94]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_93] (rows=174243235 width=135)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col6
                                    Merge Join Operator [MERGEJOIN_184] (rows=174243235 width=135)
                                      Conds:RS_89._col1=RS_90._col0(Inner),Output:["_col2","_col3","_col6"]
                                    <-Map 30 [SIMPLE_EDGE]
                                      SHUFFLE [RS_90]
                                        PartitionCols:_col0
                                        Select Operator [SEL_85] (rows=4602 width=585)
                                          Output:["_col0"]
                                          Filter Operator [FIL_173] (rows=4602 width=585)
                                            predicate:wp_web_page_sk is not null
                                            TableScan [TS_83] (rows=4602 width=585)
                                              default@web_page,web_page,Tbl:COMPLETE,Col:NONE,Output:["wp_web_page_sk"]
                                    <-Reducer 18 [SIMPLE_EDGE]
                                      SHUFFLE [RS_89]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_183] (rows=158402938 width=135)
                                          Conds:RS_86._col0=RS_87._col0(Inner),Output:["_col1","_col2","_col3"]
                                        <-Map 9 [SIMPLE_EDGE]
                                          SHUFFLE [RS_87]
                                            PartitionCols:_col0
                                             Please refer to the previous Select Operator [SEL_5]
                                        <-Map 29 [SIMPLE_EDGE]
                                          SHUFFLE [RS_86]
                                            PartitionCols:_col0
                                            Select Operator [SEL_79] (rows=144002668 width=135)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_171] (rows=144002668 width=135)
                                                predicate:(ws_sold_date_sk is not null and ws_web_page_sk is not null)
                                                TableScan [TS_77] (rows=144002668 width=135)
                                                  default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_web_page_sk","ws_ext_sales_price","ws_net_profit"]
                          <-Reducer 24 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_118]
                              PartitionCols:_col0
                              Group By Operator [GBY_115] (rows=8711072 width=92)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                              <-Reducer 23 [SIMPLE_EDGE]
                                SHUFFLE [RS_114]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_113] (rows=17422145 width=92)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col6
                                    Merge Join Operator [MERGEJOIN_186] (rows=17422145 width=92)
                                      Conds:RS_109._col1=RS_110._col0(Inner),Output:["_col2","_col3","_col6"]
                                    <-Map 30 [SIMPLE_EDGE]
                                      SHUFFLE [RS_110]
                                        PartitionCols:_col0
                                         Please refer to the previous Select Operator [SEL_85]
                                    <-Reducer 22 [SIMPLE_EDGE]
                                      SHUFFLE [RS_109]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_185] (rows=15838314 width=92)
                                          Conds:RS_106._col0=RS_107._col0(Inner),Output:["_col1","_col2","_col3"]
                                        <-Map 9 [SIMPLE_EDGE]
                                          SHUFFLE [RS_107]
                                            PartitionCols:_col0
                                             Please refer to the previous Select Operator [SEL_5]
                                        <-Map 31 [SIMPLE_EDGE]
                                          SHUFFLE [RS_106]
                                            PartitionCols:_col0
                                            Select Operator [SEL_99] (rows=14398467 width=92)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_174] (rows=14398467 width=92)
                                                predicate:(wr_returned_date_sk is not null and wr_web_page_sk is not null)
                                                TableScan [TS_97] (rows=14398467 width=92)
                                                  default@web_returns,web_returns,Tbl:COMPLETE,Col:NONE,Output:["wr_returned_date_sk","wr_web_page_sk","wr_return_amt","wr_net_loss"]
                  <-Reducer 5 [CONTAINS]
                    Reduce Output Operator [RS_124]
                      PartitionCols:_col0, _col1, _col2
                      Group By Operator [GBY_123] (rows=1912659936 width=163)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0, _col1, 0
                        Select Operator [SEL_43] (rows=383325119 width=88)
                          Output:["_col0","_col1","_col2","_col3","_col4"]
                          Merge Join Operator [MERGEJOIN_187] (rows=383325119 width=88)
                            Conds:RS_40._col0=RS_41._col0(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5"]
                          <-Reducer 12 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_41]
                              PartitionCols:_col0
                              Group By Operator [GBY_38] (rows=34842647 width=77)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                              <-Reducer 11 [SIMPLE_EDGE]
                                SHUFFLE [RS_37]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_36] (rows=69685294 width=77)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col6
                                    Merge Join Operator [MERGEJOIN_180] (rows=69685294 width=77)
                                      Conds:RS_32._col1=RS_33._col0(Inner),Output:["_col2","_col3","_col6"]
                                    <-Map 25 [SIMPLE_EDGE]
                                      SHUFFLE [RS_33]
                                        PartitionCols:_col0
                                        Select Operator [SEL_8] (rows=1704 width=1910)
                                          Output:["_col0"]
                                          Filter Operator [FIL_163] (rows=1704 width=1910)
                                            predicate:s_store_sk is not null
                                            TableScan [TS_6] (rows=1704 width=1910)
                                              default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk"]
                                    <-Reducer 10 [SIMPLE_EDGE]
                                      SHUFFLE [RS_32]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_179] (rows=63350266 width=77)
                                          Conds:RS_29._col0=RS_30._col0(Inner),Output:["_col1","_col2","_col3"]
                                        <-Map 9 [SIMPLE_EDGE]
                                          SHUFFLE [RS_30]
                                            PartitionCols:_col0
                                             Please refer to the previous Select Operator [SEL_5]
                                        <-Map 26 [SIMPLE_EDGE]
                                          SHUFFLE [RS_29]
                                            PartitionCols:_col0
                                            Select Operator [SEL_22] (rows=57591150 width=77)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_164] (rows=57591150 width=77)
                                                predicate:(sr_returned_date_sk is not null and sr_store_sk is not null)
                                                TableScan [TS_20] (rows=57591150 width=77)
                                                  default@store_returns,store_returns,Tbl:COMPLETE,Col:NONE,Output:["sr_returned_date_sk","sr_store_sk","sr_return_amt","sr_net_loss"]
                          <-Reducer 4 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_40]
                              PartitionCols:_col0
                              Group By Operator [GBY_18] (rows=348477374 width=88)
                                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                              <-Reducer 3 [SIMPLE_EDGE]
                                SHUFFLE [RS_17]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_16] (rows=696954748 width=88)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col6
                                    Merge Join Operator [MERGEJOIN_178] (rows=696954748 width=88)
                                      Conds:RS_12._col1=RS_13._col0(Inner),Output:["_col2","_col3","_col6"]
                                    <-Map 25 [SIMPLE_EDGE]
                                      SHUFFLE [RS_13]
                                        PartitionCols:_col0
                                         Please refer to the previous Select Operator [SEL_8]
                                    <-Reducer 2 [SIMPLE_EDGE]
                                      SHUFFLE [RS_12]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_177] (rows=633595212 width=88)
                                          Conds:RS_9._col0=RS_10._col0(Inner),Output:["_col1","_col2","_col3"]
                                        <-Map 9 [SIMPLE_EDGE]
                                          SHUFFLE [RS_10]
                                            PartitionCols:_col0
                                             Please refer to the previous Select Operator [SEL_5]
                                        <-Map 1 [SIMPLE_EDGE]
                                          SHUFFLE [RS_9]
                                            PartitionCols:_col0
                                            Select Operator [SEL_2] (rows=575995635 width=88)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_161] (rows=575995635 width=88)
                                                predicate:(ss_sold_date_sk is not null and ss_store_sk is not null)
                                                TableScan [TS_0] (rows=575995635 width=88)
                                                  default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_store_sk","ss_ext_sales_price","ss_net_profit"]

