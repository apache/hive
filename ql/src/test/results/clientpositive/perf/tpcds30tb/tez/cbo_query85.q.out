CBO PLAN:
HiveProject(_o__c0=[$0], _o__c1=[$1], _o__c2=[$2], _o__c3=[$3])
  HiveSortLimit(sort0=[$7], sort1=[$4], sort2=[$5], sort3=[$6], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
    HiveProject(_o__c0=[substr($0, 1, 20)], _o__c1=[/(CAST($1):DOUBLE, $2)], _o__c2=[CAST(/($3, $4)):DECIMAL(11, 6)], _o__c3=[CAST(/($5, $6)):DECIMAL(11, 6)], (tok_function avg (tok_table_or_col ws_quantity))=[/(CAST($1):DOUBLE, $2)], (tok_function avg (tok_table_or_col wr_refunded_cash))=[CAST(/($3, $4)):DECIMAL(11, 6)], (tok_function avg (tok_table_or_col wr_fee))=[CAST(/($5, $6)):DECIMAL(11, 6)], (tok_function substr (tok_table_or_col r_reason_desc) 1 20)=[substr($0, 1, 20)])
      HiveAggregate(group=[{36}], agg#0=[sum($2)], agg#1=[count($2)], agg#2=[sum($18)], agg#3=[count($18)], agg#4=[sum($17)], agg#5=[count($17)])
        HiveJoin(condition=[=($35, $15)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[AND(=($0, $11), =($1, $16), OR(AND($29, $30, $7), AND($31, $32, $8), AND($33, $34, $9)), OR(AND($20, $4), AND($21, $5), AND($22, $6)))], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($3, $10)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveProject(ws_item_sk=[$2], ws_order_number=[$16], ws_quantity=[$17], ws_sold_date_sk=[$33], BETWEEN=[BETWEEN(false, $32, 100:DECIMAL(12, 2), 200:DECIMAL(12, 2))], BETWEEN6=[BETWEEN(false, $32, 150:DECIMAL(12, 2), 300:DECIMAL(12, 2))], BETWEEN7=[BETWEEN(false, $32, 50:DECIMAL(12, 2), 250:DECIMAL(12, 2))], BETWEEN8=[BETWEEN(false, $20, 100:DECIMAL(3, 0), 150:DECIMAL(3, 0))], BETWEEN9=[BETWEEN(false, $20, 50:DECIMAL(2, 0), 100:DECIMAL(3, 0))], BETWEEN10=[BETWEEN(false, $20, 150:DECIMAL(3, 0), 200:DECIMAL(3, 0))])
                HiveFilter(condition=[AND(OR(<=(100:DECIMAL(3, 0), $20), <=($20, 150:DECIMAL(3, 0)), <=(50:DECIMAL(2, 0), $20), <=($20, 100:DECIMAL(3, 0)), <=(150:DECIMAL(3, 0), $20), <=($20, 200:DECIMAL(3, 0))), OR(<=(100:DECIMAL(12, 2), $32), <=($32, 200:DECIMAL(12, 2)), <=(150:DECIMAL(12, 2), $32), <=($32, 300:DECIMAL(12, 2)), <=(50:DECIMAL(12, 2), $32), <=($32, 250:DECIMAL(12, 2))), IS NOT NULL($11), IS NOT NULL($33))])
                  HiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
              HiveProject(d_date_sk=[$0])
                HiveFilter(condition=[=($6, 1998)])
                  HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
            HiveProject(wr_item_sk=[$0], wr_refunded_cdemo_sk=[$1], wr_refunded_addr_sk=[$2], wr_returning_cdemo_sk=[$3], wr_reason_sk=[$4], wr_order_number=[$5], wr_fee=[$6], wr_refunded_cash=[$7], ca_address_sk=[$8], IN=[$9], IN2=[$10], IN3=[$11], cd_demo_sk=[$12], cd_marital_status=[$13], cd_education_status=[$14], cd_demo_sk0=[$15], cd_marital_status0=[$16], cd_education_status0=[$17], ==[$18], =4=[$19], =5=[$20], =6=[$21], =7=[$22], =8=[$23])
              HiveJoin(condition=[AND(=($16, $13), =($17, $14), =($15, $1))], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[=($12, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveJoin(condition=[=($8, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(wr_item_sk=[$1], wr_refunded_cdemo_sk=[$3], wr_refunded_addr_sk=[$5], wr_returning_cdemo_sk=[$7], wr_reason_sk=[$11], wr_order_number=[$12], wr_fee=[$17], wr_refunded_cash=[$19])
                      HiveFilter(condition=[AND(IS NOT NULL($7), IS NOT NULL($3), IS NOT NULL($11), IS NOT NULL($5))])
                        HiveTableScan(table=[[default, web_returns]], table:alias=[web_returns])
                    HiveProject(ca_address_sk=[$0], IN=[IN($8, _UTF-16LE'KY', _UTF-16LE'GA', _UTF-16LE'NM')], IN2=[IN($8, _UTF-16LE'MT', _UTF-16LE'OR', _UTF-16LE'IN')], IN3=[IN($8, _UTF-16LE'WI', _UTF-16LE'MO', _UTF-16LE'WV')])
                      HiveFilter(condition=[AND(IN($8, _UTF-16LE'KY', _UTF-16LE'GA', _UTF-16LE'NM', _UTF-16LE'MT', _UTF-16LE'OR', _UTF-16LE'IN', _UTF-16LE'WI', _UTF-16LE'MO', _UTF-16LE'WV'), =($10, _UTF-16LE'United States'))])
                        HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
                  HiveProject(cd_demo_sk=[$0], cd_marital_status=[$2], cd_education_status=[$3])
                    HiveFilter(condition=[AND(IN($2, _UTF-16LE'M', _UTF-16LE'D', _UTF-16LE'U'), IN($3, _UTF-16LE'4 yr Degree         ', _UTF-16LE'Primary             ', _UTF-16LE'Advanced Degree     '))])
                      HiveTableScan(table=[[default, customer_demographics]], table:alias=[cd2])
                HiveProject(cd_demo_sk=[$0], cd_marital_status=[$2], cd_education_status=[$3], ==[=($2, _UTF-16LE'M')], =4=[=($3, _UTF-16LE'4 yr Degree         ')], =5=[=($2, _UTF-16LE'D')], =6=[=($3, _UTF-16LE'Primary             ')], =7=[=($2, _UTF-16LE'U')], =8=[=($3, _UTF-16LE'Advanced Degree     ')])
                  HiveFilter(condition=[AND(IN($2, _UTF-16LE'M', _UTF-16LE'D', _UTF-16LE'U'), IN($3, _UTF-16LE'4 yr Degree         ', _UTF-16LE'Primary             ', _UTF-16LE'Advanced Degree     '))])
                    HiveTableScan(table=[[default, customer_demographics]], table:alias=[cd1])
          HiveProject(r_reason_sk=[$0], r_reason_desc=[$2])
            HiveTableScan(table=[[default, reason]], table:alias=[reason])

