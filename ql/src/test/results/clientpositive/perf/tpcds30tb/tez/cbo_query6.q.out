Warning: Map Join MAPJOIN[168][bigTable=?] in task 'Map 1' is a cross product
CBO PLAN:
HiveSortLimit(sort0=[$1], dir0=[ASC], fetch=[100])
  HiveProject(ca_state=[$0], $f1=[$1])
    HiveFilter(condition=[>=($1, 10)])
      HiveAggregate(group=[{4}], agg#0=[count()])
        HiveJoin(condition=[=($7, $13)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[=($0, $6)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($3, $1)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
                HiveProject(c_customer_sk=[$0], c_current_addr_sk=[$4])
                  HiveFilter(condition=[IS NOT NULL($4)])
                    HiveTableScan(table=[[default, customer]], table:alias=[c])
                HiveProject(cnt=[$0])
                  HiveFilter(condition=[sq_count_check($0)])
                    HiveProject(cnt=[$0])
                      HiveAggregate(group=[{}], cnt=[COUNT()])
                        HiveProject(d_month_seq=[$0])
                          HiveAggregate(group=[{3}])
                            HiveFilter(condition=[AND(=($6, 2000), =($8, 2))])
                              HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
              HiveProject(ca_address_sk=[$0], ca_state=[$8])
                HiveTableScan(table=[[default, customer_address]], table:alias=[a])
            HiveProject(ss_item_sk=[$0], ss_customer_sk=[$1], ss_sold_date_sk=[$2], i_item_sk=[$3], i_current_price=[$4], i_category=[$5], i_category0=[$6], *=[$7])
              HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveProject(ss_item_sk=[$1], ss_customer_sk=[$2], ss_sold_date_sk=[$22])
                  HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($22))])
                    HiveTableScan(table=[[default, store_sales]], table:alias=[s])
                HiveJoin(condition=[AND(=($3, $2), >($1, $4))], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(i_item_sk=[$0], i_current_price=[$5], i_category=[$12])
                    HiveFilter(condition=[AND(IS NOT NULL($5), IS NOT NULL($12))])
                      HiveTableScan(table=[[default, item]], table:alias=[i])
                  HiveProject(i_category=[$0], *=[*(1.2:DECIMAL(2, 1), CAST(CAST(/($1, $2)):DECIMAL(11, 6)):DECIMAL(16, 6))])
                    HiveFilter(condition=[IS NOT NULL(CAST(CAST(/($1, $2)):DECIMAL(11, 6)):DECIMAL(16, 6))])
                      HiveAggregate(group=[{12}], agg#0=[sum($5)], agg#1=[count($5)])
                        HiveFilter(condition=[IS NOT NULL($12)])
                          HiveTableScan(table=[[default, item]], table:alias=[j])
          HiveProject(d_date_sk=[$0], d_month_seq=[$1], $f0=[$2])
            HiveJoin(condition=[=($1, $2)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveProject(d_date_sk=[$0], d_month_seq=[$3])
                HiveFilter(condition=[IS NOT NULL($3)])
                  HiveTableScan(table=[[default, date_dim]], table:alias=[d])
              HiveProject(d_month_seq=[$0])
                HiveAggregate(group=[{3}])
                  HiveFilter(condition=[AND(=($6, 2000), =($8, 2), IS NOT NULL($3))])
                    HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

