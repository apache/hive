Warning: Map Join MAPJOIN[112][bigTable=?] in task 'Reducer 2' is a cross product
CBO PLAN:
HiveSortLimit(sort0=[$0], dir0=[ASC], fetch=[100])
  HiveProject(rnk=[$3], best_performing=[$1], worst_performing=[$7])
    HiveJoin(condition=[=($6, $4)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveJoin(condition=[=($0, $2)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject(i_item_sk=[$0], i_product_name=[$21])
          HiveTableScan(table=[[default, item]], table:alias=[i1])
        HiveJoin(condition=[=($1, $3)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject(item_sk=[$0], rank_window_0=[$1])
            HiveFilter(condition=[<($1, 11)])
              HiveProject(item_sk=[$0], rank_window_0=[rank() OVER (PARTITION BY 0 ORDER BY $1 NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
                HiveJoin(condition=[>($1, *(0.9:DECIMAL(1, 1), $2))], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject($f0=[$0], $f1=[CAST(/($1, $2)):DECIMAL(11, 6)])
                    HiveFilter(condition=[IS NOT NULL(CAST(/($1, $2)):DECIMAL(11, 6))])
                      HiveAggregate(group=[{1}], agg#0=[sum($21)], agg#1=[count($21)])
                        HiveFilter(condition=[=($6, 410)])
                          HiveTableScan(table=[[default, store_sales]], table:alias=[ss1])
                  HiveProject($f1=[CAST(/($1, $2)):DECIMAL(11, 6)])
                    HiveFilter(condition=[IS NOT NULL(CAST(/($1, $2)):DECIMAL(11, 6))])
                      HiveAggregate(group=[{0}], agg#0=[sum($1)], agg#1=[count($1)])
                        HiveProject($f0=[true], $f1=[$21])
                          HiveFilter(condition=[AND(IS NULL($4), =($6, 410))])
                            HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
          HiveProject(item_sk=[$0], rank_window_0=[$1])
            HiveFilter(condition=[<($1, 11)])
              HiveProject(item_sk=[$0], rank_window_0=[rank() OVER (PARTITION BY 0 ORDER BY $1 DESC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
                HiveJoin(condition=[>($1, *(0.9:DECIMAL(1, 1), $2))], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject($f0=[$0], $f1=[CAST(/($1, $2)):DECIMAL(11, 6)])
                    HiveFilter(condition=[IS NOT NULL(CAST(/($1, $2)):DECIMAL(11, 6))])
                      HiveAggregate(group=[{1}], agg#0=[sum($21)], agg#1=[count($21)])
                        HiveFilter(condition=[=($6, 410)])
                          HiveTableScan(table=[[default, store_sales]], table:alias=[ss1])
                  HiveProject($f1=[CAST(/($1, $2)):DECIMAL(11, 6)])
                    HiveFilter(condition=[IS NOT NULL(CAST(/($1, $2)):DECIMAL(11, 6))])
                      HiveAggregate(group=[{0}], agg#0=[sum($1)], agg#1=[count($1)])
                        HiveProject($f0=[true], $f1=[$21])
                          HiveFilter(condition=[AND(IS NULL($4), =($6, 410))])
                            HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
      HiveProject(i_item_sk=[$0], i_product_name=[$21])
        HiveTableScan(table=[[default, item]], table:alias=[i2])

