CBO PLAN:
HiveProject(gross_margin=[$0], i_category=[$1], i_class=[$2], lochierarchy=[$3], rank_within_parent=[$4])
  HiveSortLimit(sort0=[$3], sort1=[$5], sort2=[$4], dir0=[DESC], dir1=[ASC], dir2=[ASC], fetch=[100])
    HiveProject(gross_margin=[/($2, $3)], i_category=[$0], i_class=[$1], lochierarchy=[+(grouping($4, 1:BIGINT), grouping($4, 0:BIGINT))], rank_within_parent=[rank() OVER (PARTITION BY +(grouping($4, 1:BIGINT), grouping($4, 0:BIGINT)), CASE(=(grouping($4, 0:BIGINT), CAST(0):BIGINT), $0, null:CHAR(50) CHARACTER SET "UTF-16LE") ORDER BY /($2, $3) NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)], (tok_function when (= (tok_table_or_col lochierarchy) 0) (tok_table_or_col i_category))=[CASE(=(+(grouping($4, 1:BIGINT), grouping($4, 0:BIGINT)), 0), $0, null:CHAR(50) CHARACTER SET "UTF-16LE")])
      HiveProject($f0=[$0], $f1=[$1], $f2=[$2], $f3=[$3], GROUPING__ID=[$4])
        HiveAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], agg#0=[sum($2)], agg#1=[sum($3)], GROUPING__ID=[GROUPING__ID()])
          HiveProject($f0=[$9], $f1=[$8], $f2=[$3], $f3=[$2])
            HiveJoin(condition=[=($7, $0)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveJoin(condition=[=($6, $1)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[=($5, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(ss_item_sk=[$1], ss_store_sk=[$6], ss_ext_sales_price=[$14], ss_net_profit=[$21], ss_sold_date_sk=[$22])
                    HiveFilter(condition=[AND(IS NOT NULL($6), IS NOT NULL($22))])
                      HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                  HiveProject(d_date_sk=[$0])
                    HiveFilter(condition=[=($6, 1999)])
                      HiveTableScan(table=[[default, date_dim]], table:alias=[d1])
                HiveProject(s_store_sk=[$0])
                  HiveFilter(condition=[IN($24, _UTF-16LE'SD', _UTF-16LE'FL', _UTF-16LE'MI', _UTF-16LE'LA', _UTF-16LE'MO', _UTF-16LE'SC', _UTF-16LE'AL', _UTF-16LE'GA')])
                    HiveTableScan(table=[[default, store]], table:alias=[store])
              HiveProject(i_item_sk=[$0], i_class=[$10], i_category=[$12])
                HiveTableScan(table=[[default, item]], table:alias=[item])

