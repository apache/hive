CBO PLAN:
HiveSortLimit(fetch=[100])
  HiveProject(ss_sold_year=[CAST(2000):INTEGER], ss_item_sk=[$0], ss_customer_sk=[$1], ratio=[$2], store_qty=[$3], store_wholesale_cost=[$4], store_sales_price=[$5], other_chan_qty=[$6], other_chan_wholesale_cost=[$7], other_chan_sales_price=[$8])
    HiveSortLimit(sort0=[$0], sort1=[$1], sort2=[$9], sort3=[$10], sort4=[$11], sort5=[$6], sort6=[$7], sort7=[$8], sort8=[$12], dir0=[ASC], dir1=[ASC], dir2=[DESC], dir3=[DESC], dir4=[DESC], dir5=[ASC], dir6=[ASC], dir7=[ASC], dir8=[ASC])
      HiveProject(ss_item_sk=[$0], ss_customer_sk=[$1], ratio=[round(/(CAST($2):DOUBLE, CAST(CASE(AND(IS NOT NULL($11), IS NOT NULL($6)), +($11, $6), 1:BIGINT)):DOUBLE), 2)], store_qty=[$2], store_wholesale_cost=[$3], store_sales_price=[$4], other_chan_qty=[+(CASE(IS NOT NULL($11), $11, 0:BIGINT), CASE(IS NOT NULL($6), $6, 0:BIGINT))], other_chan_wholesale_cost=[+(CASE(IS NOT NULL($12), $12, 0:DECIMAL(17, 2)), CASE(IS NOT NULL($7), $7, 0:DECIMAL(17, 2)))], other_chan_sales_price=[+(CASE(IS NOT NULL($13), $13, 0:DECIMAL(17, 2)), CASE(IS NOT NULL($8), $8, 0:DECIMAL(17, 2)))], ss_qty=[$2], ss_wc=[$3], ss_sp=[$4], (tok_function round (/ (tok_table_or_col ss_qty) (tok_function coalesce (+ (tok_table_or_col ws_qty) (tok_table_or_col cs_qty)) 1)) 2)=[round(/(CAST($2):DOUBLE, CAST(CASE(AND(IS NOT NULL($11), IS NOT NULL($6)), +($11, $6), 1:BIGINT)):DOUBLE), 2)])
        HiveJoin(condition=[AND(=($9, $0), =($10, $1))], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[=($5, $1)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveProject(ss_item_sk=[$0], ss_customer_sk=[$1], $f2=[$2], $f3=[$3], $f4=[$4])
              HiveAggregate(group=[{1, 2}], agg#0=[sum($3)], agg#1=[sum($4)], agg#2=[sum($5)])
                HiveJoin(condition=[=($6, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(d_date_sk=[$0])
                    HiveFilter(condition=[=($6, 2000)])
                      HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                  HiveProject(ss_item_sk=[$0], ss_customer_sk=[$1], ss_quantity=[$3], ss_wholesale_cost=[$4], ss_sales_price=[$5], ss_sold_date_sk=[$6])
                    HiveAntiJoin(condition=[AND(=($8, $2), =($0, $7))], joinType=[anti])
                      HiveProject(ss_item_sk=[$1], ss_customer_sk=[$2], ss_ticket_number=[$8], ss_quantity=[$9], ss_wholesale_cost=[$10], ss_sales_price=[$12], ss_sold_date_sk=[$22])
                        HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($22))])
                          HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                      HiveProject(sr_item_sk=[$1], sr_ticket_number=[$8])
                        HiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
            HiveProject($f2=[$1], $f3=[$2], $f4=[$3], $f5=[$4])
              HiveFilter(condition=[>($2, 0)])
                HiveProject(cs_item_sk=[$1], cs_bill_customer_sk=[$0], $f2=[$2], $f3=[$3], $f4=[$4])
                  HiveAggregate(group=[{1, 2}], agg#0=[sum($3)], agg#1=[sum($4)], agg#2=[sum($5)])
                    HiveJoin(condition=[=($6, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(d_date_sk=[$0])
                        HiveFilter(condition=[=($6, 2000)])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                      HiveProject(cs_bill_customer_sk=[$0], cs_item_sk=[$1], cs_quantity=[$3], cs_wholesale_cost=[$4], cs_sales_price=[$5], cs_sold_date_sk=[$6])
                        HiveAntiJoin(condition=[AND(=($8, $2), =($1, $7))], joinType=[anti])
                          HiveProject(cs_bill_customer_sk=[$2], cs_item_sk=[$14], cs_order_number=[$16], cs_quantity=[$17], cs_wholesale_cost=[$18], cs_sales_price=[$20], cs_sold_date_sk=[$33])
                            HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($33))])
                              HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                          HiveProject(cr_item_sk=[$1], cr_order_number=[$15])
                            HiveTableScan(table=[[default, catalog_returns]], table:alias=[catalog_returns])
          HiveProject($f1=[$0], $f2=[$1], $f2_0=[$2], $f3=[$3], $f4=[$4])
            HiveFilter(condition=[>($2, 0)])
              HiveAggregate(group=[{1, 2}], agg#0=[sum($3)], agg#1=[sum($4)], agg#2=[sum($5)])
                HiveJoin(condition=[=($6, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(d_date_sk=[$0])
                    HiveFilter(condition=[=($6, 2000)])
                      HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                  HiveProject(ws_item_sk=[$0], ws_bill_customer_sk=[$1], ws_quantity=[$3], ws_wholesale_cost=[$4], ws_sales_price=[$5], ws_sold_date_sk=[$6])
                    HiveAntiJoin(condition=[AND(=($8, $2), =($0, $7))], joinType=[anti])
                      HiveProject(ws_item_sk=[$2], ws_bill_customer_sk=[$3], ws_order_number=[$16], ws_quantity=[$17], ws_wholesale_cost=[$18], ws_sales_price=[$20], ws_sold_date_sk=[$33])
                        HiveFilter(condition=[AND(IS NOT NULL($3), IS NOT NULL($33))])
                          HiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                      HiveProject(wr_item_sk=[$1], wr_order_number=[$12])
                        HiveTableScan(table=[[default, web_returns]], table:alias=[web_returns])

