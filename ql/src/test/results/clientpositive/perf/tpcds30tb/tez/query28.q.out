Warning: Map Join MAPJOIN[105][bigTable=?] in task 'Reducer 3' is a cross product
Warning: Map Join MAPJOIN[104][bigTable=?] in task 'Reducer 3' is a cross product
Warning: Map Join MAPJOIN[103][bigTable=?] in task 'Reducer 3' is a cross product
Warning: Map Join MAPJOIN[102][bigTable=?] in task 'Reducer 3' is a cross product
Warning: Map Join MAPJOIN[101][bigTable=?] in task 'Reducer 3' is a cross product
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 10 <- Map 1 (SIMPLE_EDGE)
        Reducer 11 <- Reducer 10 (CUSTOM_SIMPLE_EDGE)
        Reducer 12 <- Map 1 (SIMPLE_EDGE)
        Reducer 13 <- Reducer 12 (CUSTOM_SIMPLE_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 11 (BROADCAST_EDGE), Reducer 13 (BROADCAST_EDGE), Reducer 2 (CUSTOM_SIMPLE_EDGE), Reducer 5 (BROADCAST_EDGE), Reducer 7 (BROADCAST_EDGE), Reducer 9 (BROADCAST_EDGE)
        Reducer 4 <- Map 1 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
        Reducer 6 <- Map 1 (SIMPLE_EDGE)
        Reducer 7 <- Reducer 6 (CUSTOM_SIMPLE_EDGE)
        Reducer 8 <- Map 1 (SIMPLE_EDGE)
        Reducer 9 <- Reducer 8 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: store_sales
                  filterExpr: ((ss_quantity BETWEEN 0 AND 5 and (ss_list_price BETWEEN 11 AND 21 or ss_coupon_amt BETWEEN 460 AND 1460 or ss_wholesale_cost BETWEEN 14 AND 34)) or (ss_quantity BETWEEN 16 AND 20 and (ss_list_price BETWEEN 142 AND 152 or ss_coupon_amt BETWEEN 3054 AND 4054 or ss_wholesale_cost BETWEEN 80 AND 100)) or (ss_quantity BETWEEN 21 AND 25 and (ss_list_price BETWEEN 135 AND 145 or ss_coupon_amt BETWEEN 14180 AND 15180 or ss_wholesale_cost BETWEEN 38 AND 58)) or (ss_quantity BETWEEN 26 AND 30 and (ss_list_price BETWEEN 28 AND 38 or ss_coupon_amt BETWEEN 2513 AND 3513 or ss_wholesale_cost BETWEEN 42 AND 62)) or (ss_quantity BETWEEN 11 AND 15 and (ss_list_price BETWEEN 66 AND 76 or ss_coupon_amt BETWEEN 920 AND 1920 or ss_wholesale_cost BETWEEN 4 AND 24)) or (ss_quantity BETWEEN 6 AND 10 and (ss_list_price BETWEEN 91 AND 101 or ss_coupon_amt BETWEEN 1430 AND 2430 or ss_wholesale_cost BETWEEN 32 AND 52))) (type: boolean)
                  Statistics: Num rows: 86404891377 Data size: 28054250053192 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (ss_quantity BETWEEN 0 AND 5 and (ss_list_price BETWEEN 11 AND 21 or ss_coupon_amt BETWEEN 460 AND 1460 or ss_wholesale_cost BETWEEN 14 AND 34)) (type: boolean)
                    Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ss_list_price (type: decimal(7,2))
                      outputColumnNames: ss_list_price
                      Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: sum(ss_list_price), count(ss_list_price)
                        keys: ss_list_price (type: decimal(7,2))
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: decimal(7,2))
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: decimal(7,2))
                          Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: decimal(17,2)), _col2 (type: bigint)
                  Filter Operator
                    predicate: (ss_quantity BETWEEN 16 AND 20 and (ss_list_price BETWEEN 142 AND 152 or ss_coupon_amt BETWEEN 3054 AND 4054 or ss_wholesale_cost BETWEEN 80 AND 100)) (type: boolean)
                    Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ss_list_price (type: decimal(7,2))
                      outputColumnNames: ss_list_price
                      Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: sum(ss_list_price), count(ss_list_price)
                        keys: ss_list_price (type: decimal(7,2))
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: decimal(7,2))
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: decimal(7,2))
                          Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: decimal(17,2)), _col2 (type: bigint)
                  Filter Operator
                    predicate: (ss_quantity BETWEEN 21 AND 25 and (ss_list_price BETWEEN 135 AND 145 or ss_coupon_amt BETWEEN 14180 AND 15180 or ss_wholesale_cost BETWEEN 38 AND 58)) (type: boolean)
                    Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ss_list_price (type: decimal(7,2))
                      outputColumnNames: ss_list_price
                      Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: sum(ss_list_price), count(ss_list_price)
                        keys: ss_list_price (type: decimal(7,2))
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: decimal(7,2))
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: decimal(7,2))
                          Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: decimal(17,2)), _col2 (type: bigint)
                  Filter Operator
                    predicate: (ss_quantity BETWEEN 26 AND 30 and (ss_list_price BETWEEN 28 AND 38 or ss_coupon_amt BETWEEN 2513 AND 3513 or ss_wholesale_cost BETWEEN 42 AND 62)) (type: boolean)
                    Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ss_list_price (type: decimal(7,2))
                      outputColumnNames: ss_list_price
                      Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: sum(ss_list_price), count(ss_list_price)
                        keys: ss_list_price (type: decimal(7,2))
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: decimal(7,2))
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: decimal(7,2))
                          Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: decimal(17,2)), _col2 (type: bigint)
                  Filter Operator
                    predicate: (ss_quantity BETWEEN 11 AND 15 and (ss_list_price BETWEEN 66 AND 76 or ss_coupon_amt BETWEEN 920 AND 1920 or ss_wholesale_cost BETWEEN 4 AND 24)) (type: boolean)
                    Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ss_list_price (type: decimal(7,2))
                      outputColumnNames: ss_list_price
                      Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: sum(ss_list_price), count(ss_list_price)
                        keys: ss_list_price (type: decimal(7,2))
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: decimal(7,2))
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: decimal(7,2))
                          Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: decimal(17,2)), _col2 (type: bigint)
                  Filter Operator
                    predicate: (ss_quantity BETWEEN 6 AND 10 and (ss_list_price BETWEEN 91 AND 101 or ss_coupon_amt BETWEEN 1430 AND 2430 or ss_wholesale_cost BETWEEN 32 AND 52)) (type: boolean)
                    Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ss_list_price (type: decimal(7,2))
                      outputColumnNames: ss_list_price
                      Statistics: Num rows: 4154081316 Data size: 1348762021916 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        aggregations: sum(ss_list_price), count(ss_list_price)
                        keys: ss_list_price (type: decimal(7,2))
                        minReductionHashAggr: 0.99
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: decimal(7,2))
                          null sort order: z
                          sort order: +
                          Map-reduce partition columns: _col0 (type: decimal(7,2))
                          Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col1 (type: decimal(17,2)), _col2 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: may be used (ACID table)
        Reducer 10 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1)
                keys: KEY._col0 (type: decimal(7,2))
                mode: partial2
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col1), count(_col2), count(_col0)
                  mode: partial2
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(17,2)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 11 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: CAST( (_col0 / _col1) AS decimal(11,6)) (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 12 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1)
                keys: KEY._col0 (type: decimal(7,2))
                mode: partial2
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col1), count(_col2), count(_col0)
                  mode: partial2
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(17,2)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 13 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: CAST( (_col0 / _col1) AS decimal(11,6)) (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1)
                keys: KEY._col0 (type: decimal(7,2))
                mode: partial2
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col1), count(_col2), count(_col0)
                  mode: partial2
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(17,2)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 3 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: CAST( (_col0 / _col1) AS decimal(11,6)) (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                    keys:
                      0 
                      1 
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                    input vertices:
                      1 Reducer 9
                    Statistics: Num rows: 1 Data size: 256 Basic stats: COMPLETE Column stats: COMPLETE
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      keys:
                        0 
                        1 
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                      input vertices:
                        1 Reducer 7
                      Statistics: Num rows: 1 Data size: 384 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 
                          1 
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                        input vertices:
                          1 Reducer 5
                        Statistics: Num rows: 1 Data size: 512 Basic stats: COMPLETE Column stats: COMPLETE
                        Map Join Operator
                          condition map:
                               Inner Join 0 to 1
                          keys:
                            0 
                            1 
                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14
                          input vertices:
                            1 Reducer 11
                          Statistics: Num rows: 1 Data size: 640 Basic stats: COMPLETE Column stats: COMPLETE
                          Map Join Operator
                            condition map:
                                 Inner Join 0 to 1
                            keys:
                              0 
                              1 
                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
                            input vertices:
                              1 Reducer 13
                            Statistics: Num rows: 1 Data size: 768 Basic stats: COMPLETE Column stats: COMPLETE
                            Select Operator
                              expressions: _col0 (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint), _col15 (type: decimal(11,6)), _col16 (type: bigint), _col17 (type: bigint), _col12 (type: decimal(11,6)), _col13 (type: bigint), _col14 (type: bigint), _col9 (type: decimal(11,6)), _col10 (type: bigint), _col11 (type: bigint), _col6 (type: decimal(11,6)), _col7 (type: bigint), _col8 (type: bigint), _col3 (type: decimal(11,6)), _col4 (type: bigint), _col5 (type: bigint)
                              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17
                              Statistics: Num rows: 1 Data size: 768 Basic stats: COMPLETE Column stats: COMPLETE
                              File Output Operator
                                compressed: false
                                Statistics: Num rows: 1 Data size: 768 Basic stats: COMPLETE Column stats: COMPLETE
                                table:
                                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 4 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1)
                keys: KEY._col0 (type: decimal(7,2))
                mode: partial2
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col1), count(_col2), count(_col0)
                  mode: partial2
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(17,2)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 5 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: CAST( (_col0 / _col1) AS decimal(11,6)) (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 6 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1)
                keys: KEY._col0 (type: decimal(7,2))
                mode: partial2
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col1), count(_col2), count(_col0)
                  mode: partial2
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(17,2)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 7 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: CAST( (_col0 / _col1) AS decimal(11,6)) (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 8 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1)
                keys: KEY._col0 (type: decimal(7,2))
                mode: partial2
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2077040658 Data size: 471392400864 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col1), count(_col2), count(_col0)
                  mode: partial2
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(17,2)), _col1 (type: bigint), _col2 (type: bigint)
        Reducer 9 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1), count(VALUE._col2)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: CAST( (_col0 / _col1) AS decimal(11,6)) (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    null sort order: 
                    sort order: 
                    Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col0 (type: decimal(11,6)), _col1 (type: bigint), _col2 (type: bigint)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

