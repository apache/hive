CBO PLAN:
HiveSortLimit(sort0=[$0], dir0=[ASC], fetch=[100])
  HiveProject(c_customer_id=[$1])
    HiveJoin(condition=[=($2, $0)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(c_customer_sk=[$0], c_customer_id=[$1])
        HiveTableScan(table=[[default, customer]], table:alias=[customer])
      HiveJoin(condition=[=($5, $1)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveJoin(condition=[AND(=($1, $4), >($2, $3))], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject($f0=[$0], $f1=[$1], $f2=[$2])
            HiveFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($2), IS NOT NULL($0))])
              HiveTableSpool(readType=[LAZY], writeType=[LAZY], table=[[cte, cte_suggestion_0]])
                HiveProject(ctr_customer_sk=[$0], ctr_store_sk=[$1], ctr_total_return=[$2])
                  HiveAggregate(group=[{0, 1}], agg#0=[sum($2)])
                    HiveJoin(condition=[=($3, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(sr_customer_sk=[$2], sr_store_sk=[$6], sr_fee=[$13], sr_returned_date_sk=[$19])
                        HiveFilter(condition=[IS NOT NULL($19)])
                          HiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                      HiveProject(d_date_sk=[$0])
                        HiveFilter(condition=[=($6, 2000)])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
          HiveProject(_o__c0=[*(CAST(/($1, $2)):DECIMAL(21, 6), 1.2:DECIMAL(2, 1))], ctr_store_sk=[$0])
            HiveFilter(condition=[IS NOT NULL(CAST(/($1, $2)):DECIMAL(21, 6))])
              HiveAggregate(group=[{1}], agg#0=[sum($2)], agg#1=[count($2)])
                HiveFilter(condition=[IS NOT NULL($1)])
                  HiveTableScan(table=[[cte, cte_suggestion_0]], table:alias=[cte_suggestion_0])
        HiveProject(s_store_sk=[$0])
          HiveFilter(condition=[=($24, _UTF-16LE'NM')])
            HiveTableScan(table=[[default, store]], table:alias=[store])

