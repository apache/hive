CBO PLAN:
HiveProject(i_category=[$0], i_brand=[$1], d_year=[$2], d_moy=[$3], avg_monthly_sales=[$4], sum_sales=[$5], psum=[$6], nsum=[$7])
  HiveSortLimit(sort0=[$8], sort1=[$2], dir0=[ASC], dir1=[ASC], fetch=[100])
    HiveProject(i_category=[$10], i_brand=[$11], d_year=[$13], d_moy=[$14], avg_monthly_sales=[$16], sum_sales=[$15], psum=[$8], nsum=[$3], (- (tok_table_or_col sum_sales) (tok_table_or_col avg_monthly_sales))=[-($15, $16)])
      HiveJoin(condition=[AND(=($10, $0), =($11, $1), =($12, $2), =($17, $4))], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_brand)=[$1], (tok_table_or_col cc_name)=[$2], (tok_function sum (tok_table_or_col cs_sales_price))=[$3], -=[-($4, 1)])
          HiveFilter(condition=[IS NOT NULL($4)])
            HiveProject((tok_table_or_col i_category)=[$4], (tok_table_or_col i_brand)=[$3], (tok_table_or_col cc_name)=[$2], (tok_function sum (tok_table_or_col cs_sales_price))=[$5], rank_window_1=[rank() OVER (PARTITION BY $4, $3, $2 ORDER BY $0 NULLS LAST, $1 NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
              HiveProject(d_year=[$0], d_moy=[$1], cc_name=[$2], i_brand=[$3], i_category=[$4], $f5=[$5])
                HiveAggregate(group=[{5, 6, 8, 10, 11}], agg#0=[sum($2)])
                  HiveJoin(condition=[=($1, $9)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveJoin(condition=[=($7, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveJoin(condition=[=($3, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                        HiveProject(cs_call_center_sk=[$10], cs_item_sk=[$14], cs_sales_price=[$20], cs_sold_date_sk=[$33])
                          HiveFilter(condition=[AND(IS NOT NULL($10), IS NOT NULL($33))])
                            HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                        HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                          HiveFilter(condition=[AND(IN($6, 2000, 1999, 2001), OR(=($6, 2000), IN(ROW($6, $8), ROW(1999, 12), ROW(2001, 1))))])
                            HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                      HiveProject(cc_call_center_sk=[$0], cc_name=[$6])
                        HiveFilter(condition=[IS NOT NULL($6)])
                          HiveTableScan(table=[[default, call_center]], table:alias=[call_center])
                    HiveProject(i_item_sk=[$0], i_brand=[$8], i_category=[$12])
                      HiveFilter(condition=[AND(IS NOT NULL($12), IS NOT NULL($8))])
                        HiveTableScan(table=[[default, item]], table:alias=[item])
        HiveJoin(condition=[AND(=($5, $0), =($6, $1), =($7, $2), =($12, $4))], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_brand)=[$1], (tok_table_or_col cc_name)=[$2], (tok_function sum (tok_table_or_col cs_sales_price))=[$3], +=[+($4, 1)])
            HiveFilter(condition=[IS NOT NULL($4)])
              HiveProject((tok_table_or_col i_category)=[$4], (tok_table_or_col i_brand)=[$3], (tok_table_or_col cc_name)=[$2], (tok_function sum (tok_table_or_col cs_sales_price))=[$5], rank_window_1=[rank() OVER (PARTITION BY $4, $3, $2 ORDER BY $0 NULLS LAST, $1 NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
                HiveProject(d_year=[$0], d_moy=[$1], cc_name=[$2], i_brand=[$3], i_category=[$4], $f5=[$5])
                  HiveAggregate(group=[{5, 6, 8, 10, 11}], agg#0=[sum($2)])
                    HiveJoin(condition=[=($1, $9)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveJoin(condition=[=($7, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                        HiveJoin(condition=[=($3, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                          HiveProject(cs_call_center_sk=[$10], cs_item_sk=[$14], cs_sales_price=[$20], cs_sold_date_sk=[$33])
                            HiveFilter(condition=[AND(IS NOT NULL($10), IS NOT NULL($33))])
                              HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                          HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                            HiveFilter(condition=[AND(IN($6, 2000, 1999, 2001), OR(=($6, 2000), IN(ROW($6, $8), ROW(1999, 12), ROW(2001, 1))))])
                              HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                        HiveProject(cc_call_center_sk=[$0], cc_name=[$6])
                          HiveFilter(condition=[IS NOT NULL($6)])
                            HiveTableScan(table=[[default, call_center]], table:alias=[call_center])
                      HiveProject(i_item_sk=[$0], i_brand=[$8], i_category=[$12])
                        HiveFilter(condition=[AND(IS NOT NULL($12), IS NOT NULL($8))])
                          HiveTableScan(table=[[default, item]], table:alias=[item])
          HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_brand)=[$1], (tok_table_or_col cc_name)=[$2], (tok_table_or_col d_year)=[$3], (tok_table_or_col d_moy)=[$4], (tok_function sum (tok_table_or_col cs_sales_price))=[$5], avg_window_0=[$6], rank_window_1=[$7])
            HiveFilter(condition=[AND(=($3, 2000), >($6, 0:DECIMAL(1, 0)), CASE(>($6, 0:DECIMAL(1, 0)), >(/(ABS(-($5, $6)), $6), 0.1:DECIMAL(1, 1)), false), IS NOT NULL($7))])
              HiveProject((tok_table_or_col i_category)=[$4], (tok_table_or_col i_brand)=[$3], (tok_table_or_col cc_name)=[$2], (tok_table_or_col d_year)=[$0], (tok_table_or_col d_moy)=[$1], (tok_function sum (tok_table_or_col cs_sales_price))=[$5], avg_window_0=[avg($5) OVER (PARTITION BY $4, $3, $2, $0 ORDER BY $4 NULLS FIRST, $3 NULLS FIRST, $2 NULLS FIRST, $0 NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)], rank_window_1=[rank() OVER (PARTITION BY $4, $3, $2 ORDER BY $0 NULLS LAST, $1 NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
                HiveProject(d_year=[$0], d_moy=[$1], cc_name=[$2], i_brand=[$3], i_category=[$4], $f5=[$5])
                  HiveAggregate(group=[{5, 6, 8, 10, 11}], agg#0=[sum($2)])
                    HiveJoin(condition=[=($1, $9)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveJoin(condition=[=($7, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                        HiveJoin(condition=[=($3, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                          HiveProject(cs_call_center_sk=[$10], cs_item_sk=[$14], cs_sales_price=[$20], cs_sold_date_sk=[$33])
                            HiveFilter(condition=[AND(IS NOT NULL($10), IS NOT NULL($33))])
                              HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                          HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                            HiveFilter(condition=[AND(IN($6, 2000, 1999, 2001), OR(=($6, 2000), IN(ROW($6, $8), ROW(1999, 12), ROW(2001, 1))))])
                              HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                        HiveProject(cc_call_center_sk=[$0], cc_name=[$6])
                          HiveFilter(condition=[IS NOT NULL($6)])
                            HiveTableScan(table=[[default, call_center]], table:alias=[call_center])
                      HiveProject(i_item_sk=[$0], i_brand=[$8], i_category=[$12])
                        HiveFilter(condition=[AND(IS NOT NULL($12), IS NOT NULL($8))])
                          HiveTableScan(table=[[default, item]], table:alias=[item])

