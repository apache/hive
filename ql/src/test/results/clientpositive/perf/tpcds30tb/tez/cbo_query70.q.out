CBO PLAN:
HiveProject(total_sum=[$0], s_state=[$1], s_county=[$2], lochierarchy=[$3], rank_within_parent=[$4])
  HiveSortLimit(sort0=[$3], sort1=[$5], sort2=[$4], dir0=[DESC], dir1=[ASC], dir2=[ASC], fetch=[100])
    HiveProject(total_sum=[$2], s_state=[$0], s_county=[$1], lochierarchy=[+(grouping($3, 1:BIGINT), grouping($3, 0:BIGINT))], rank_within_parent=[rank() OVER (PARTITION BY +(grouping($3, 1:BIGINT), grouping($3, 0:BIGINT)), CASE(=(grouping($3, 0:BIGINT), CAST(0):BIGINT), $0, null:CHAR(2) CHARACTER SET "UTF-16LE") ORDER BY $2 DESC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)], (tok_function when (= (tok_table_or_col lochierarchy) 0) (tok_table_or_col s_state))=[CASE(=(+(grouping($3, 1:BIGINT), grouping($3, 0:BIGINT)), 0), $0, null:CHAR(2) CHARACTER SET "UTF-16LE")])
      HiveProject($f0=[$0], $f1=[$1], $f2=[$2], GROUPING__ID=[$3])
        HiveAggregate(group=[{0, 1}], groups=[[{0, 1}, {0}, {}]], agg#0=[sum($2)], GROUPING__ID=[GROUPING__ID()])
          HiveProject($f0=[$6], $f1=[$5], $f2=[$1])
            HiveSemiJoin(condition=[=($6, $7)], joinType=[semi])
              HiveJoin(condition=[=($4, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[=($3, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(ss_store_sk=[$6], ss_net_profit=[$21], ss_sold_date_sk=[$22])
                    HiveFilter(condition=[AND(IS NOT NULL($6), IS NOT NULL($22))])
                      HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                  HiveProject(d_date_sk=[$0])
                    HiveFilter(condition=[BETWEEN(false, $3, 1212, 1223)])
                      HiveTableScan(table=[[default, date_dim]], table:alias=[d1])
                HiveProject(s_store_sk=[$0], s_county=[$23], s_state=[$24])
                  HiveFilter(condition=[IS NOT NULL($24)])
                    HiveTableSpool(readType=[LAZY], writeType=[LAZY], table=[[cte, cte_suggestion_0]])
                      HiveProject(s_store_sk=[$0], s_store_id=[$1], s_rec_start_date=[$2], s_rec_end_date=[$3], s_closed_date_sk=[$4], s_store_name=[$5], s_number_employees=[$6], s_floor_space=[$7], s_hours=[$8], s_manager=[$9], s_market_id=[$10], s_geography_class=[$11], s_market_desc=[$12], s_market_manager=[$13], s_division_id=[$14], s_division_name=[$15], s_company_id=[$16], s_company_name=[$17], s_street_number=[$18], s_street_name=[$19], s_street_type=[$20], s_suite_number=[$21], s_city=[$22], s_county=[$23], s_state=[$24], s_zip=[$25], s_country=[$26], s_gmt_offset=[$27], s_tax_percentage=[$28], BLOCK__OFFSET__INSIDE__FILE=[$29], INPUT__FILE__NAME=[$30], ROW__ID=[$31], ROW__IS__DELETED=[$32])
                        HiveFilter(condition=[IS NOT NULL($24)])
                          HiveTableScan(table=[[default, store]], table:alias=[store])
              HiveProject(s_state=[$0])
                HiveFilter(condition=[<=($1, 5)])
                  HiveProject((tok_table_or_col s_state)=[$0], rank_window_0=[rank() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
                    HiveProject(s_state=[$0], $f1=[$1])
                      HiveAggregate(group=[{5}], agg#0=[sum($1)])
                        HiveJoin(condition=[=($4, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                          HiveJoin(condition=[=($3, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                            HiveProject(ss_store_sk=[$6], ss_net_profit=[$21], ss_sold_date_sk=[$22])
                              HiveFilter(condition=[AND(IS NOT NULL($6), IS NOT NULL($22))])
                                HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                            HiveProject(d_date_sk=[$0])
                              HiveFilter(condition=[BETWEEN(false, $3, 1212, 1223)])
                                HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                          HiveProject(s_store_sk=[$0], s_state=[$24])
                            HiveFilter(condition=[IS NOT NULL($24)])
                              HiveTableScan(table=[[cte, cte_suggestion_0]], table:alias=[cte_suggestion_0])

