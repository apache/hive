CBO PLAN:
HiveProject(i_category=[$0], d_year=[$1], d_moy=[$2], avg_monthly_sales=[$3], sum_sales=[$4], psum=[$5], nsum=[$6])
  HiveSortLimit(sort0=[$7], sort1=[$2], dir0=[ASC], dir1=[ASC], fetch=[100])
    HiveProject(i_category=[$12], d_year=[$16], d_moy=[$17], avg_monthly_sales=[$19], sum_sales=[$18], psum=[$10], nsum=[$4], (- (tok_table_or_col sum_sales) (tok_table_or_col avg_monthly_sales))=[-($18, $19)])
      HiveJoin(condition=[AND(=($12, $0), =($13, $1), =($14, $2), =($15, $3), =($20, $5))], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_brand)=[$1], (tok_table_or_col s_store_name)=[$2], (tok_table_or_col s_company_name)=[$3], (tok_function sum (tok_table_or_col ss_sales_price))=[$4], -=[-($5, 1)])
          HiveFilter(condition=[IS NOT NULL($5)])
            HiveProject((tok_table_or_col i_category)=[$5], (tok_table_or_col i_brand)=[$4], (tok_table_or_col s_store_name)=[$2], (tok_table_or_col s_company_name)=[$3], (tok_function sum (tok_table_or_col ss_sales_price))=[$6], rank_window_1=[rank() OVER (PARTITION BY $5, $4, $2, $3 ORDER BY $0 NULLS LAST, $1 NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
              HiveProject(d_year=[$0], d_moy=[$1], s_store_name=[$2], s_company_name=[$3], i_brand=[$4], i_category=[$5], $f6=[$6])
                HiveAggregate(group=[{5, 6, 8, 9, 11, 12}], agg#0=[sum($2)])
                  HiveJoin(condition=[=($0, $10)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveJoin(condition=[=($1, $7)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveJoin(condition=[=($3, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                        HiveProject(ss_item_sk=[$1], ss_store_sk=[$6], ss_sales_price=[$12], ss_sold_date_sk=[$22])
                          HiveFilter(condition=[AND(IS NOT NULL($6), IS NOT NULL($22))])
                            HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                        HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                          HiveFilter(condition=[AND(IN($6, 2000, 1999, 2001), OR(=($6, 2000), IN(ROW($6, $8), ROW(1999, 12), ROW(2001, 1))))])
                            HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                      HiveProject(s_store_sk=[$0], s_store_name=[$5], s_company_name=[$17])
                        HiveFilter(condition=[AND(IS NOT NULL($5), IS NOT NULL($17))])
                          HiveTableScan(table=[[default, store]], table:alias=[store])
                    HiveProject(i_item_sk=[$0], i_brand=[$8], i_category=[$12])
                      HiveFilter(condition=[AND(IS NOT NULL($12), IS NOT NULL($8))])
                        HiveTableScan(table=[[default, item]], table:alias=[item])
        HiveJoin(condition=[AND(=($6, $0), =($7, $1), =($8, $2), =($9, $3), =($14, $5))], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_brand)=[$1], (tok_table_or_col s_store_name)=[$2], (tok_table_or_col s_company_name)=[$3], (tok_function sum (tok_table_or_col ss_sales_price))=[$4], +=[+($5, 1)])
            HiveFilter(condition=[IS NOT NULL($5)])
              HiveProject((tok_table_or_col i_category)=[$5], (tok_table_or_col i_brand)=[$4], (tok_table_or_col s_store_name)=[$2], (tok_table_or_col s_company_name)=[$3], (tok_function sum (tok_table_or_col ss_sales_price))=[$6], rank_window_1=[rank() OVER (PARTITION BY $5, $4, $2, $3 ORDER BY $0 NULLS LAST, $1 NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
                HiveProject(d_year=[$0], d_moy=[$1], s_store_name=[$2], s_company_name=[$3], i_brand=[$4], i_category=[$5], $f6=[$6])
                  HiveAggregate(group=[{5, 6, 8, 9, 11, 12}], agg#0=[sum($2)])
                    HiveJoin(condition=[=($0, $10)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveJoin(condition=[=($1, $7)], joinType=[inner], algorithm=[none], cost=[not available])
                        HiveJoin(condition=[=($3, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                          HiveProject(ss_item_sk=[$1], ss_store_sk=[$6], ss_sales_price=[$12], ss_sold_date_sk=[$22])
                            HiveFilter(condition=[AND(IS NOT NULL($6), IS NOT NULL($22))])
                              HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                          HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                            HiveFilter(condition=[AND(IN($6, 2000, 1999, 2001), OR(=($6, 2000), IN(ROW($6, $8), ROW(1999, 12), ROW(2001, 1))))])
                              HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                        HiveProject(s_store_sk=[$0], s_store_name=[$5], s_company_name=[$17])
                          HiveFilter(condition=[AND(IS NOT NULL($5), IS NOT NULL($17))])
                            HiveTableScan(table=[[default, store]], table:alias=[store])
                      HiveProject(i_item_sk=[$0], i_brand=[$8], i_category=[$12])
                        HiveFilter(condition=[AND(IS NOT NULL($12), IS NOT NULL($8))])
                          HiveTableScan(table=[[default, item]], table:alias=[item])
          HiveProject((tok_table_or_col i_category)=[$0], (tok_table_or_col i_brand)=[$1], (tok_table_or_col s_store_name)=[$2], (tok_table_or_col s_company_name)=[$3], (tok_table_or_col d_year)=[$4], (tok_table_or_col d_moy)=[$5], (tok_function sum (tok_table_or_col ss_sales_price))=[$6], avg_window_0=[$7], rank_window_1=[$8])
            HiveFilter(condition=[AND(=($4, 2000), >($7, 0), CASE(>($7, 0), >(/(ABS(-($6, $7)), $7), 0.1:DECIMAL(1, 1)), false), IS NOT NULL($8))])
              HiveProject((tok_table_or_col i_category)=[$5], (tok_table_or_col i_brand)=[$4], (tok_table_or_col s_store_name)=[$2], (tok_table_or_col s_company_name)=[$3], (tok_table_or_col d_year)=[$0], (tok_table_or_col d_moy)=[$1], (tok_function sum (tok_table_or_col ss_sales_price))=[$6], avg_window_0=[avg($6) OVER (PARTITION BY $5, $4, $2, $3, $0 ORDER BY $5 NULLS FIRST, $4 NULLS FIRST, $2 NULLS FIRST, $3 NULLS FIRST, $0 NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)], rank_window_1=[rank() OVER (PARTITION BY $5, $4, $2, $3 ORDER BY $0 NULLS LAST, $1 NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)])
                HiveProject(d_year=[$0], d_moy=[$1], s_store_name=[$2], s_company_name=[$3], i_brand=[$4], i_category=[$5], $f6=[$6])
                  HiveAggregate(group=[{5, 6, 8, 9, 11, 12}], agg#0=[sum($2)])
                    HiveJoin(condition=[=($0, $10)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveJoin(condition=[=($1, $7)], joinType=[inner], algorithm=[none], cost=[not available])
                        HiveJoin(condition=[=($3, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                          HiveProject(ss_item_sk=[$1], ss_store_sk=[$6], ss_sales_price=[$12], ss_sold_date_sk=[$22])
                            HiveFilter(condition=[AND(IS NOT NULL($6), IS NOT NULL($22))])
                              HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                          HiveProject(d_date_sk=[$0], d_year=[$6], d_moy=[$8])
                            HiveFilter(condition=[AND(IN($6, 2000, 1999, 2001), OR(=($6, 2000), IN(ROW($6, $8), ROW(1999, 12), ROW(2001, 1))))])
                              HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                        HiveProject(s_store_sk=[$0], s_store_name=[$5], s_company_name=[$17])
                          HiveFilter(condition=[AND(IS NOT NULL($5), IS NOT NULL($17))])
                            HiveTableScan(table=[[default, store]], table:alias=[store])
                      HiveProject(i_item_sk=[$0], i_brand=[$8], i_category=[$12])
                        HiveFilter(condition=[AND(IS NOT NULL($12), IS NOT NULL($8))])
                          HiveTableScan(table=[[default, item]], table:alias=[item])

