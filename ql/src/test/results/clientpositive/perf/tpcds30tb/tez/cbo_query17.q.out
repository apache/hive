CBO PLAN:
HiveSortLimit(sort0=[$0], sort1=[$1], sort2=[$2], dir0=[ASC], dir1=[ASC], dir2=[ASC], fetch=[100])
  HiveProject(i_item_id=[$0], i_item_desc=[$1], s_state=[$2], store_sales_quantitycount=[$3], store_sales_quantityave=[/(CAST($4):DOUBLE, $3)], store_sales_quantitystdev=[POWER(/(-($5, /(*($6, $6), $3)), CASE(=($3, 1), null:BIGINT, -($3, 1))), 0.5:DECIMAL(2, 1))], store_sales_quantitycov=[/(POWER(/(-($5, /(*($6, $6), $3)), CASE(=($3, 1), null:BIGINT, -($3, 1))), 0.5:DECIMAL(2, 1)), /(CAST($4):DOUBLE, $3))], as_store_returns_quantitycount=[$7], as_store_returns_quantityave=[/(CAST($8):DOUBLE, $7)], as_store_returns_quantitystdev=[POWER(/(-($9, /(*($10, $10), $7)), CASE(=($7, 1), null:BIGINT, -($7, 1))), 0.5:DECIMAL(2, 1))], store_returns_quantitycov=[/(POWER(/(-($9, /(*($10, $10), $7)), CASE(=($7, 1), null:BIGINT, -($7, 1))), 0.5:DECIMAL(2, 1)), /(CAST($8):DOUBLE, $7))], catalog_sales_quantitycount=[$11], catalog_sales_quantityave=[/(CAST($12):DOUBLE, $11)], catalog_sales_quantitystdev=[/(POWER(/(-($13, /(*($14, $14), $11)), CASE(=($11, 1), null:BIGINT, -($11, 1))), 0.5:DECIMAL(2, 1)), /(CAST($12):DOUBLE, $11))], catalog_sales_quantitycov=[/(POWER(/(-($13, /(*($14, $14), $11)), CASE(=($11, 1), null:BIGINT, -($11, 1))), 0.5:DECIMAL(2, 1)), /(CAST($12):DOUBLE, $11))])
    HiveAggregate(group=[{0, 1, 2}], agg#0=[count($3)], agg#1=[sum($3)], agg#2=[sum($7)], agg#3=[sum($6)], agg#4=[count($4)], agg#5=[sum($4)], agg#6=[sum($9)], agg#7=[sum($8)], agg#8=[count($5)], agg#9=[sum($5)], agg#10=[sum($11)], agg#11=[sum($10)])
      HiveProject($f0=[$21], $f1=[$22], $f2=[$19], $f3=[$9], $f4=[$15], $f5=[$2], $f30=[CAST($9):DOUBLE], $f7=[*(CAST($9):DOUBLE, CAST($9):DOUBLE)], $f40=[CAST($15):DOUBLE], $f9=[*(CAST($15):DOUBLE, CAST($15):DOUBLE)], $f50=[CAST($2):DOUBLE], $f11=[*(CAST($2):DOUBLE, CAST($2):DOUBLE)])
        HiveJoin(condition=[=($20, $5)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[=($18, $7)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[AND(=($13, $0), =($12, $1))], joinType=[inner], algorithm=[none], cost=[not available])
              HiveJoin(condition=[=($3, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveProject(cs_bill_customer_sk=[$2], cs_item_sk=[$14], cs_quantity=[$17], cs_sold_date_sk=[$33])
                  HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($33))])
                    HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                HiveProject(d_date_sk=[$0])
                  HiveFilter(condition=[IN($15, _UTF-16LE'2000Q1', _UTF-16LE'2000Q2', _UTF-16LE'2000Q3')])
                    HiveTableScan(table=[[default, date_dim]], table:alias=[d3])
              HiveProject(ss_item_sk=[$0], ss_customer_sk=[$1], ss_store_sk=[$2], ss_ticket_number=[$3], ss_quantity=[$4], ss_sold_date_sk=[$5], d_date_sk=[$6], sr_item_sk=[$7], sr_customer_sk=[$8], sr_ticket_number=[$9], sr_return_quantity=[$10], sr_returned_date_sk=[$11], d_date_sk0=[$12])
                HiveJoin(condition=[AND(=($1, $8), =($0, $7), =($3, $9))], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveJoin(condition=[=($6, $5)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$6], ss_ticket_number=[$8], ss_quantity=[$9], ss_sold_date_sk=[$22])
                      HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($6), IS NOT NULL($22))])
                        HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                    HiveProject(d_date_sk=[$0])
                      HiveFilter(condition=[=($15, _UTF-16LE'2000Q1')])
                        HiveTableScan(table=[[default, date_dim]], table:alias=[d1])
                  HiveProject(sr_item_sk=[$0], sr_customer_sk=[$1], sr_ticket_number=[$2], sr_return_quantity=[$3], sr_returned_date_sk=[$4], d_date_sk=[$5])
                    HiveJoin(condition=[=($4, $5)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(sr_item_sk=[$1], sr_customer_sk=[$2], sr_ticket_number=[$8], sr_return_quantity=[$9], sr_returned_date_sk=[$19])
                        HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($19))])
                          HiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                      HiveProject(d_date_sk=[$0])
                        HiveFilter(condition=[IN($15, _UTF-16LE'2000Q1', _UTF-16LE'2000Q2', _UTF-16LE'2000Q3')])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[d2])
            HiveProject(s_store_sk=[$0], s_state=[$24])
              HiveTableScan(table=[[default, store]], table:alias=[store])
          HiveProject(i_item_sk=[$0], i_item_id=[$1], i_item_desc=[$4])
            HiveTableScan(table=[[default, item]], table:alias=[item])

