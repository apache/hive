CBO PLAN:
HiveSortLimit(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$3], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
  HiveProject(i_item_id=[$2], i_item_desc=[$3], s_store_id=[$0], s_store_name=[$1], $f4=[$4], $f5=[$5], $f6=[$6])
    HiveAggregate(group=[{19, 20, 22, 23}], agg#0=[sum($9)], agg#1=[sum($15)], agg#2=[sum($2)])
      HiveJoin(condition=[=($21, $5)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveJoin(condition=[=($18, $7)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[AND(=($13, $0), =($12, $1))], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($3, $4)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveProject(cs_bill_customer_sk=[$2], cs_item_sk=[$14], cs_quantity=[$17], cs_sold_date_sk=[$33])
                HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($33))])
                  HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
              HiveProject(d_date_sk=[$0])
                HiveFilter(condition=[IN($6, 1999, 2000, 2001)])
                  HiveTableScan(table=[[default, date_dim]], table:alias=[d3])
            HiveProject(ss_item_sk=[$0], ss_customer_sk=[$1], ss_store_sk=[$2], ss_ticket_number=[$3], ss_quantity=[$4], ss_sold_date_sk=[$5], d_date_sk=[$6], sr_item_sk=[$7], sr_customer_sk=[$8], sr_ticket_number=[$9], sr_return_quantity=[$10], sr_returned_date_sk=[$11], d_date_sk0=[$12])
              HiveJoin(condition=[AND(=($1, $8), =($0, $7), =($3, $9))], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[=($6, $5)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$6], ss_ticket_number=[$8], ss_quantity=[$9], ss_sold_date_sk=[$22])
                    HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($6), IS NOT NULL($22))])
                      HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                  HiveProject(d_date_sk=[$0])
                    HiveFilter(condition=[AND(=($6, 1999), =($8, 4))])
                      HiveTableScan(table=[[default, date_dim]], table:alias=[d1])
                HiveProject(sr_item_sk=[$0], sr_customer_sk=[$1], sr_ticket_number=[$2], sr_return_quantity=[$3], sr_returned_date_sk=[$4], d_date_sk=[$5])
                  HiveJoin(condition=[=($4, $5)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(sr_item_sk=[$1], sr_customer_sk=[$2], sr_ticket_number=[$8], sr_return_quantity=[$9], sr_returned_date_sk=[$19])
                      HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($19))])
                        HiveTableScan(table=[[default, store_returns]], table:alias=[store_returns])
                    HiveProject(d_date_sk=[$0])
                      HiveFilter(condition=[AND(=($6, 1999), BETWEEN(false, $8, 4, 7))])
                        HiveTableScan(table=[[default, date_dim]], table:alias=[d2])
          HiveProject(s_store_sk=[$0], s_store_id=[$1], s_store_name=[$5])
            HiveTableScan(table=[[default, store]], table:alias=[store])
        HiveProject(i_item_sk=[$0], i_item_id=[$1], i_item_desc=[$4])
          HiveTableScan(table=[[default, item]], table:alias=[item])

