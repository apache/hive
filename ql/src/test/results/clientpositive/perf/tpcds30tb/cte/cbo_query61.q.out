CTE Suggestion:
HiveJoin(condition=[=($2, $1)], joinType=[inner], algorithm=[none], cost=[not available])
  HiveProject(c_customer_sk=[$0], c_current_addr_sk=[$4])
    HiveFilter(condition=[IS NOT NULL($4)])
      HiveTableScan(table=[[default, customer]], table:alias=[customer])
  HiveProject(ca_address_sk=[$0])
    HiveFilter(condition=[=($11, -7:DECIMAL(1, 0))])
      HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])

CTE Suggestion:
HiveProject(d_date_sk=[$0])
  HiveFilter(condition=[AND(=($6, 1999), =($8, 11))])
    HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

CTE Suggestion:
HiveProject(i_item_sk=[$0])
  HiveFilter(condition=[=($12, _UTF-16LE'Electronics                                       ')])
    HiveTableScan(table=[[default, item]], table:alias=[item])

CTE Suggestion:
HiveProject(s_store_sk=[$0])
  HiveFilter(condition=[=($27, -7:DECIMAL(1, 0))])
    HiveTableScan(table=[[default, store]], table:alias=[store])

Warning: Map Join MAPJOIN[247][bigTable=?] in task 'Reducer 10' is a cross product
CBO PLAN:
HiveProject(promotions=[$0], total=[$1], _o__c2=[*(/(CAST($0):DECIMAL(15, 4), CAST($1):DECIMAL(15, 4)), 100:DECIMAL(10, 0))])
  HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject($f0=[$0])
      HiveAggregate(group=[{}], agg#0=[sum($7)])
        HiveJoin(condition=[=($4, $0)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject(c_customer_sk=[$0], ca_address_sk=[CAST($2):BIGINT], ca_address_sk0=[$2])
            HiveTableSpool(table=[[cte, cte_suggestion_3]])
              HiveProject(c_customer_sk=[$0], c_current_addr_sk=[$1], ca_address_sk=[$2])
                HiveJoin(condition=[=($2, $1)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(c_customer_sk=[$0], c_current_addr_sk=[$4])
                    HiveFilter(condition=[IS NOT NULL($4)])
                      HiveTableScan(table=[[default, customer]], table:alias=[customer])
                  HiveProject(ca_address_sk=[$0])
                    HiveFilter(condition=[=($11, -7:DECIMAL(1, 0))])
                      HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
          HiveJoin(condition=[=($3, $9)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($2, $8)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveJoin(condition=[=($0, $7)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[=($5, $6)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$6], ss_promo_sk=[$7], ss_ext_sales_price=[$14], ss_sold_date_sk=[$22])
                    HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($6), IS NOT NULL($7), IS NOT NULL($22))])
                      HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                  HiveTableSpool(table=[[cte, cte_suggestion_2]])
                    HiveProject(d_date_sk=[$0])
                      HiveFilter(condition=[AND(=($6, 1999), =($8, 11))])
                        HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                HiveTableSpool(table=[[cte, cte_suggestion_0]])
                  HiveProject(i_item_sk=[$0])
                    HiveFilter(condition=[=($12, _UTF-16LE'Electronics                                       ')])
                      HiveTableScan(table=[[default, item]], table:alias=[item])
              HiveTableSpool(table=[[cte, cte_suggestion_1]])
                HiveProject(s_store_sk=[$0])
                  HiveFilter(condition=[=($27, -7:DECIMAL(1, 0))])
                    HiveTableScan(table=[[default, store]], table:alias=[store])
            HiveProject(p_promo_sk=[$0])
              HiveFilter(condition=[OR(=($9, _UTF-16LE'Y'), =($11, _UTF-16LE'Y'), =($8, _UTF-16LE'Y'))])
                HiveTableScan(table=[[default, promotion]], table:alias=[promotion])
    HiveProject($f0=[$0])
      HiveAggregate(group=[{}], agg#0=[sum($6)])
        HiveJoin(condition=[=($4, $0)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject(c_customer_sk=[$0], ca_address_sk=[CAST($2):BIGINT], ca_address_sk0=[$2])
            HiveTableScan(table=[[cte, cte_suggestion_3]], table:alias=[cte_suggestion_3])
          HiveJoin(condition=[=($2, $7)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($0, $6)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveJoin(condition=[=($4, $5)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveProject(ss_item_sk=[$1], ss_customer_sk=[$2], ss_store_sk=[$6], ss_ext_sales_price=[$14], ss_sold_date_sk=[$22])
                  HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($6), IS NOT NULL($22))])
                    HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                HiveTableScan(table=[[cte, cte_suggestion_2]], table:alias=[cte_suggestion_2])
              HiveTableScan(table=[[cte, cte_suggestion_0]], table:alias=[cte_suggestion_0])
            HiveTableScan(table=[[cte, cte_suggestion_1]], table:alias=[cte_suggestion_1])

