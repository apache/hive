CTE Suggestion:
HiveFilter(condition=[AND(=($6, 1999), =($8, 3))])
  HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

CTE Suggestion:
HiveFilter(condition=[AND(=($6, 1999), =($8, 3), IS NOT NULL($3))])
  HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

Warning: Map Join MAPJOIN[304][bigTable=?] in task 'Map 3' is a cross product
Warning: Map Join MAPJOIN[298][bigTable=?] in task 'Map 3' is a cross product
Warning: Map Join MAPJOIN[358][bigTable=?] in task 'Map 21' is a cross product
Warning: Map Join MAPJOIN[359][bigTable=?] in task 'Map 21' is a cross product
Warning: Map Join MAPJOIN[378][bigTable=?] in task 'Map 23' is a cross product
Warning: Map Join MAPJOIN[379][bigTable=?] in task 'Map 23' is a cross product
CBO PLAN:
HiveSortLimit(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[100])
  HiveProject(segment=[$0], num_customers=[$1], segment_base=[*($0, 50)])
    HiveAggregate(group=[{0}], agg#0=[count()])
      HiveProject($f0=[CAST(/($1, 50:DECIMAL(10, 0))):INTEGER])
        HiveAggregate(group=[{10}], agg#0=[sum($1)])
          HiveJoin(condition=[=($2, $12)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($10, $0)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(ss_customer_sk=[$2], ss_ext_sales_price=[$14], ss_sold_date_sk=[$22])
                    HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($22))])
                      HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                  HiveProject(cnt=[$0])
                    HiveFilter(condition=[sq_count_check($0)])
                      HiveProject(cnt=[$0])
                        HiveAggregate(group=[{}], cnt=[COUNT()])
                          HiveProject($f0=[$0])
                            HiveAggregate(group=[{0}])
                              HiveProject($f0=[+($3, 3)])
                                HiveTableSpool(table=[[cte, cte_suggestion_0]])
                                  HiveProject(d_date_sk=[$0], d_date_id=[$1], d_date=[$2], d_month_seq=[$3], d_week_seq=[$4], d_quarter_seq=[$5], d_year=[$6], d_dow=[$7], d_moy=[$8], d_dom=[$9], d_qoy=[$10], d_fy_year=[$11], d_fy_quarter_seq=[$12], d_fy_week_seq=[$13], d_day_name=[$14], d_quarter_name=[$15], d_holiday=[$16], d_weekend=[$17], d_following_holiday=[$18], d_first_dom=[$19], d_last_dom=[$20], d_same_day_ly=[$21], d_same_day_lq=[$22], d_current_day=[$23], d_current_week=[$24], d_current_month=[$25], d_current_quarter=[$26], d_current_year=[$27], BLOCK__OFFSET__INSIDE__FILE=[$28], INPUT__FILE__NAME=[$29], ROW__ID=[$30], ROW__IS__DELETED=[$31])
                                    HiveFilter(condition=[AND(=($6, 1999), =($8, 3))])
                                      HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                HiveProject(cnt=[$0])
                  HiveFilter(condition=[sq_count_check($0)])
                    HiveProject(cnt=[$0])
                      HiveAggregate(group=[{}], cnt=[COUNT()])
                        HiveProject($f0=[$0])
                          HiveAggregate(group=[{0}])
                            HiveProject($f0=[+($3, 1)])
                              HiveTableScan(table=[[cte, cte_suggestion_0]], table:alias=[cte_suggestion_0])
              HiveProject(ca_address_sk=[$0], ca_county=[$1], ca_state=[$2], s_county=[$3], s_state=[$4], c_customer_sk=[$5], c_current_addr_sk=[$6])
                HiveJoin(condition=[=($6, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveJoin(condition=[AND(=($1, $3), =($2, $4))], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(ca_address_sk=[$0], ca_county=[$7], ca_state=[$8])
                      HiveFilter(condition=[AND(IS NOT NULL($7), IS NOT NULL($8))])
                        HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
                    HiveProject(s_county=[$23], s_state=[$24])
                      HiveFilter(condition=[AND(IS NOT NULL($23), IS NOT NULL($24))])
                        HiveTableScan(table=[[default, store]], table:alias=[store])
                  HiveProject(c_customer_sk=[$0], c_current_addr_sk=[$1])
                    HiveSemiJoin(condition=[=($0, $2)], joinType=[semi])
                      HiveProject(c_customer_sk=[$0], c_current_addr_sk=[$4])
                        HiveFilter(condition=[IS NOT NULL($4)])
                          HiveTableScan(table=[[default, customer]], table:alias=[customer])
                      HiveProject(customer_sk=[$1])
                        HiveJoin(condition=[=($2, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                          HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                            HiveProject(sold_date_sk=[$0], customer_sk=[$1], item_sk=[$2])
                              HiveUnion(all=[true])
                                HiveProject(sold_date_sk=[$33], customer_sk=[$2], item_sk=[$14])
                                  HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($33))])
                                    HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                                HiveProject(sold_date_sk=[$33], customer_sk=[$3], item_sk=[$2])
                                  HiveFilter(condition=[AND(IS NOT NULL($3), IS NOT NULL($33))])
                                    HiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                            HiveProject(d_date_sk=[$0])
                              HiveTableScan(table=[[cte, cte_suggestion_0]], table:alias=[cte_suggestion_0])
                          HiveProject(i_item_sk=[$0])
                            HiveFilter(condition=[AND(=($10, _UTF-16LE'consignment                                       '), =($12, _UTF-16LE'Jewelry                                           '))])
                              HiveTableScan(table=[[default, item]], table:alias=[item])
            HiveProject(d_date_sk=[$0], d_month_seq=[$1], $f0=[$2], $f00=[$3])
              HiveJoin(condition=[<=($1, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[<=($2, $1)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(d_date_sk=[$0], d_month_seq=[$1])
                    HiveUnion(all=[true])
                      HiveProject(d_date_sk=[$0], d_month_seq=[$3])
                        HiveFilter(condition=[IS NOT NULL($3)])
                          HiveProject(d_date_sk=[$0], d_date_id=[$1], d_date=[$2], d_month_seq=[$3], d_week_seq=[$4], d_quarter_seq=[$5], d_year=[$6], d_dow=[$7], d_moy=[$8], d_dom=[$9], d_qoy=[$10], d_fy_year=[$11], d_fy_quarter_seq=[$12], d_fy_week_seq=[$13], d_day_name=[$14], d_quarter_name=[$15], d_holiday=[$16], d_weekend=[$17], d_following_holiday=[$18], d_first_dom=[$19], d_last_dom=[$20], d_same_day_ly=[$21], d_same_day_lq=[$22], d_current_day=[$23], d_current_week=[$24], d_current_month=[$25], d_current_quarter=[$26], d_current_year=[$27], BLOCK__OFFSET__INSIDE__FILE=[$28], INPUT__FILE__NAME=[$29], ROW__ID=[$30], ROW__IS__DELETED=[$31])
                            HiveFilter(condition=[OR(<>(1999, $6), <>(3, $8))])
                              HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                      HiveProject(d_date_sk=[$0], d_month_seq=[$3])
                        HiveTableSpool(table=[[cte, cte_suggestion_1]])
                          HiveProject(d_date_sk=[$0], d_date_id=[$1], d_date=[$2], d_month_seq=[$3], d_week_seq=[$4], d_quarter_seq=[$5], d_year=[$6], d_dow=[$7], d_moy=[$8], d_dom=[$9], d_qoy=[$10], d_fy_year=[$11], d_fy_quarter_seq=[$12], d_fy_week_seq=[$13], d_day_name=[$14], d_quarter_name=[$15], d_holiday=[$16], d_weekend=[$17], d_following_holiday=[$18], d_first_dom=[$19], d_last_dom=[$20], d_same_day_ly=[$21], d_same_day_lq=[$22], d_current_day=[$23], d_current_week=[$24], d_current_month=[$25], d_current_quarter=[$26], d_current_year=[$27], BLOCK__OFFSET__INSIDE__FILE=[$28], INPUT__FILE__NAME=[$29], ROW__ID=[$30], ROW__IS__DELETED=[$31])
                            HiveFilter(condition=[AND(=($6, 1999), =($8, 3), IS NOT NULL($3))])
                              HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                  HiveProject($f0=[$0])
                    HiveAggregate(group=[{0}])
                      HiveProject($f0=[+($3, 1)])
                        HiveTableScan(table=[[cte, cte_suggestion_1]], table:alias=[cte_suggestion_1])
                HiveProject($f0=[$0])
                  HiveAggregate(group=[{0}])
                    HiveProject($f0=[+($3, 3)])
                      HiveTableScan(table=[[cte, cte_suggestion_1]], table:alias=[cte_suggestion_1])

