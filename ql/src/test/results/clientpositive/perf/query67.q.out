PREHOOK: query: explain
select  *
from (select i_category
            ,i_class
            ,i_brand
            ,i_product_name
            ,d_year
            ,d_qoy
            ,d_moy
            ,s_store_id
            ,sumsales
            ,rank() over (partition by i_category order by sumsales desc) rk
      from (select i_category
                  ,i_class
                  ,i_brand
                  ,i_product_name
                  ,d_year
                  ,d_qoy
                  ,d_moy
                  ,s_store_id
                  ,sum(coalesce(ss_sales_price*ss_quantity,0)) sumsales
            from store_sales
                ,date_dim
                ,store
                ,item
       where  ss_sold_date_sk=d_date_sk
          and ss_item_sk=i_item_sk
          and ss_store_sk = s_store_sk
          and d_month_seq between 1212 and 1212+11
       group by  rollup(i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy,s_store_id))dw1) dw2
where rk <= 100
order by i_category
        ,i_class
        ,i_brand
        ,i_product_name
        ,d_year
        ,d_qoy
        ,d_moy
        ,s_store_id
        ,sumsales
        ,rk
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  *
from (select i_category
            ,i_class
            ,i_brand
            ,i_product_name
            ,d_year
            ,d_qoy
            ,d_moy
            ,s_store_id
            ,sumsales
            ,rank() over (partition by i_category order by sumsales desc) rk
      from (select i_category
                  ,i_class
                  ,i_brand
                  ,i_product_name
                  ,d_year
                  ,d_qoy
                  ,d_moy
                  ,s_store_id
                  ,sum(coalesce(ss_sales_price*ss_quantity,0)) sumsales
            from store_sales
                ,date_dim
                ,store
                ,item
       where  ss_sold_date_sk=d_date_sk
          and ss_item_sk=i_item_sk
          and ss_store_sk = s_store_sk
          and d_month_seq between 1212 and 1212+11
       group by  rollup(i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy,s_store_id))dw1) dw2
where rk <= 100
order by i_category
        ,i_class
        ,i_brand
        ,i_product_name
        ,d_year
        ,d_qoy
        ,d_moy
        ,s_store_id
        ,sumsales
        ,rk
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 10 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_37]
        Limit [LIM_36] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_35] (rows=1149975358 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_34]
              Select Operator [SEL_30] (rows=1149975358 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
                Filter Operator [FIL_47] (rows=1149975358 width=88)
                  predicate:(rank_window_0 <= 100)
                  PTF Operator [PTF_29] (rows=3449926075 width=88)
                    Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col16 DESC NULLS LAST","partition by:":"_col0"}]
                    Select Operator [SEL_28] (rows=3449926075 width=88)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col16"]
                    <-Reducer 5 [SIMPLE_EDGE]
                      SHUFFLE [RS_27]
                        PartitionCols:_col0
                        Select Operator [SEL_26] (rows=3449926075 width=88)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col16"]
                          Group By Operator [GBY_25] (rows=3449926075 width=88)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col9"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7, KEY._col8
                          <-Reducer 4 [SIMPLE_EDGE]
                            SHUFFLE [RS_24]
                              PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                              Group By Operator [GBY_23] (rows=6899852151 width=88)
                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, 0
                                Select Operator [SEL_21] (rows=766650239 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                  Merge Join Operator [MERGEJOIN_54] (rows=766650239 width=88)
                                    Conds:RS_18._col1=RS_19._col0(Inner),Output:["_col3","_col4","_col7","_col8","_col9","_col11","_col13","_col14","_col15","_col16"]
                                  <-Map 10 [SIMPLE_EDGE]
                                    SHUFFLE [RS_19]
                                      PartitionCols:_col0
                                      Select Operator [SEL_11] (rows=462000 width=1436)
                                        Output:["_col0","_col1","_col2","_col3","_col4"]
                                        Filter Operator [FIL_51] (rows=462000 width=1436)
                                          predicate:i_item_sk is not null
                                          TableScan [TS_9] (rows=462000 width=1436)
                                            default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand","i_class","i_category","i_product_name"]
                                  <-Reducer 3 [SIMPLE_EDGE]
                                    SHUFFLE [RS_18]
                                      PartitionCols:_col1
                                      Merge Join Operator [MERGEJOIN_53] (rows=696954748 width=88)
                                        Conds:RS_15._col2=RS_16._col0(Inner),Output:["_col1","_col3","_col4","_col7","_col8","_col9","_col11"]
                                      <-Map 9 [SIMPLE_EDGE]
                                        SHUFFLE [RS_16]
                                          PartitionCols:_col0
                                          Select Operator [SEL_8] (rows=1704 width=1910)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_50] (rows=1704 width=1910)
                                              predicate:s_store_sk is not null
                                              TableScan [TS_6] (rows=1704 width=1910)
                                                default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_store_id"]
                                      <-Reducer 2 [SIMPLE_EDGE]
                                        SHUFFLE [RS_15]
                                          PartitionCols:_col2
                                          Merge Join Operator [MERGEJOIN_52] (rows=633595212 width=88)
                                            Conds:RS_12._col0=RS_13._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col7","_col8","_col9"]
                                          <-Map 1 [SIMPLE_EDGE]
                                            SHUFFLE [RS_12]
                                              PartitionCols:_col0
                                              Select Operator [SEL_2] (rows=575995635 width=88)
                                                Output:["_col0","_col1","_col2","_col3","_col4"]
                                                Filter Operator [FIL_48] (rows=575995635 width=88)
                                                  predicate:(ss_sold_date_sk is not null and ss_store_sk is not null and ss_item_sk is not null)
                                                  TableScan [TS_0] (rows=575995635 width=88)
                                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_store_sk","ss_quantity","ss_sales_price"]
                                          <-Map 8 [SIMPLE_EDGE]
                                            SHUFFLE [RS_13]
                                              PartitionCols:_col0
                                              Select Operator [SEL_5] (rows=8116 width=1119)
                                                Output:["_col0","_col2","_col3","_col4"]
                                                Filter Operator [FIL_49] (rows=8116 width=1119)
                                                  predicate:(d_month_seq BETWEEN 1212 AND 1223 and d_date_sk is not null)
                                                  TableScan [TS_3] (rows=73049 width=1119)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq","d_year","d_moy","d_qoy"]

