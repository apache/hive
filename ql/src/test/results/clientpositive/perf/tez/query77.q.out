Warning: Shuffle Join MERGEJOIN[322][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 21' is a cross product
PREHOOK: query: explain
with ss as
 (select s_store_sk,
         sum(ss_ext_sales_price) as sales,
         sum(ss_net_profit) as profit
 from store_sales,
      date_dim,
      store
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date) 
                  and (cast('1998-08-04' as date) +  30 days) 
       and ss_store_sk = s_store_sk
 group by s_store_sk)
 ,
 sr as
 (select s_store_sk,
         sum(sr_return_amt) as returns,
         sum(sr_net_loss) as profit_loss
 from store_returns,
      date_dim,
      store
 where sr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and sr_store_sk = s_store_sk
 group by s_store_sk), 
 cs as
 (select cs_call_center_sk,
        sum(cs_ext_sales_price) as sales,
        sum(cs_net_profit) as profit
 from catalog_sales,
      date_dim
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 group by cs_call_center_sk 
 ), 
 cr as
 (select
        sum(cr_return_amount) as returns,
        sum(cr_net_loss) as profit_loss
 from catalog_returns,
      date_dim
 where cr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 ), 
 ws as
 ( select wp_web_page_sk,
        sum(ws_ext_sales_price) as sales,
        sum(ws_net_profit) as profit
 from web_sales,
      date_dim,
      web_page
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and ws_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk), 
 wr as
 (select wp_web_page_sk,
        sum(wr_return_amt) as returns,
        sum(wr_net_loss) as profit_loss
 from web_returns,
      date_dim,
      web_page
 where wr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and wr_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , ss.s_store_sk as id
        , sales
        , coalesce(returns, 0) as returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ss left join sr
        on  ss.s_store_sk = sr.s_store_sk
 union all
 select 'catalog channel' as channel
        , cs_call_center_sk as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  cs
       , cr
 union all
 select 'web channel' as channel
        , ws.wp_web_page_sk as id
        , sales
        , coalesce(returns, 0) returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ws left join wr
        on  ws.wp_web_page_sk = wr.wp_web_page_sk
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store
PREHOOK: Input: default@store_returns
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_page
PREHOOK: Input: default@web_returns
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with ss as
 (select s_store_sk,
         sum(ss_ext_sales_price) as sales,
         sum(ss_net_profit) as profit
 from store_sales,
      date_dim,
      store
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date) 
                  and (cast('1998-08-04' as date) +  30 days) 
       and ss_store_sk = s_store_sk
 group by s_store_sk)
 ,
 sr as
 (select s_store_sk,
         sum(sr_return_amt) as returns,
         sum(sr_net_loss) as profit_loss
 from store_returns,
      date_dim,
      store
 where sr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and sr_store_sk = s_store_sk
 group by s_store_sk), 
 cs as
 (select cs_call_center_sk,
        sum(cs_ext_sales_price) as sales,
        sum(cs_net_profit) as profit
 from catalog_sales,
      date_dim
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 group by cs_call_center_sk 
 ), 
 cr as
 (select
        sum(cr_return_amount) as returns,
        sum(cr_net_loss) as profit_loss
 from catalog_returns,
      date_dim
 where cr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
 ), 
 ws as
 ( select wp_web_page_sk,
        sum(ws_ext_sales_price) as sales,
        sum(ws_net_profit) as profit
 from web_sales,
      date_dim,
      web_page
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and ws_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk), 
 wr as
 (select wp_web_page_sk,
        sum(wr_return_amt) as returns,
        sum(wr_net_loss) as profit_loss
 from web_returns,
      date_dim,
      web_page
 where wr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (cast('1998-08-04' as date) +  30 days)
       and wr_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , ss.s_store_sk as id
        , sales
        , coalesce(returns, 0) as returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ss left join sr
        on  ss.s_store_sk = sr.s_store_sk
 union all
 select 'catalog channel' as channel
        , cs_call_center_sk as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  cs
       , cr
 union all
 select 'web channel' as channel
        , ws.wp_web_page_sk as id
        , sales
        , coalesce(returns, 0) returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ws left join wr
        on  ws.wp_web_page_sk = wr.wp_web_page_sk
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_returns
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_page
POSTHOOK: Input: default@web_returns
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 10 (BROADCAST_EDGE)
<<<<<<< HEAD
Map 18 <- Reducer 23 (BROADCAST_EDGE)
Map 28 <- Reducer 34 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Map 12 (SIMPLE_EDGE), Map 16 (SIMPLE_EDGE)
Reducer 14 <- Map 17 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE)
Reducer 19 <- Map 18 (SIMPLE_EDGE), Map 22 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 20 <- Reducer 19 (SIMPLE_EDGE)
Reducer 21 <- Reducer 20 (CUSTOM_SIMPLE_EDGE), Reducer 26 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 23 <- Map 22 (CUSTOM_SIMPLE_EDGE)
Reducer 25 <- Map 24 (SIMPLE_EDGE), Map 27 (SIMPLE_EDGE)
Reducer 26 <- Reducer 25 (CUSTOM_SIMPLE_EDGE)
Reducer 29 <- Map 28 (SIMPLE_EDGE), Map 33 (SIMPLE_EDGE)
Reducer 3 <- Map 11 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 30 <- Map 35 (SIMPLE_EDGE), Reducer 29 (SIMPLE_EDGE)
Reducer 31 <- Reducer 30 (SIMPLE_EDGE)
Reducer 32 <- Reducer 31 (SIMPLE_EDGE), Reducer 39 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 34 <- Map 33 (CUSTOM_SIMPLE_EDGE)
Reducer 37 <- Map 36 (SIMPLE_EDGE), Map 40 (SIMPLE_EDGE)
Reducer 38 <- Map 41 (SIMPLE_EDGE), Reducer 37 (SIMPLE_EDGE)
Reducer 39 <- Reducer 38 (SIMPLE_EDGE)
=======
Map 28 <- Reducer 10 (BROADCAST_EDGE)
Map 30 <- Reducer 10 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (CUSTOM_SIMPLE_EDGE)
Reducer 11 <- Map 27 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 12 <- Map 26 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Map 28 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE)
Reducer 16 <- Reducer 15 (CUSTOM_SIMPLE_EDGE), Reducer 18 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 17 <- Map 29 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (CUSTOM_SIMPLE_EDGE)
Reducer 19 <- Map 30 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 20 <- Map 31 (SIMPLE_EDGE), Reducer 19 (SIMPLE_EDGE)
Reducer 21 <- Reducer 20 (SIMPLE_EDGE)
Reducer 22 <- Reducer 21 (SIMPLE_EDGE), Reducer 25 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 23 <- Map 32 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 24 <- Map 31 (SIMPLE_EDGE), Reducer 23 (SIMPLE_EDGE)
Reducer 25 <- Reducer 24 (SIMPLE_EDGE)
Reducer 3 <- Map 26 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 15 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 7 <- Union 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8 vectorized
<<<<<<< HEAD
      File Output Operator [FS_366]
        Limit [LIM_365] (rows=52 width=439)
          Number of rows:100
          Select Operator [SEL_364] (rows=52 width=439)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 7 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_363]
              Select Operator [SEL_362] (rows=52 width=439)
                Output:["_col0","_col1","_col2","_col3","_col4"]
                Group By Operator [GBY_361] (rows=52 width=447)
=======
      File Output Operator [FS_368]
        Limit [LIM_367] (rows=52 width=439)
          Number of rows:100
          Select Operator [SEL_366] (rows=52 width=439)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 7 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_365]
              Select Operator [SEL_364] (rows=52 width=439)
                Output:["_col0","_col1","_col2","_col3","_col4"]
                Group By Operator [GBY_363] (rows=52 width=447)
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                  Output:["_col0","_col1","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2
                <-Union 6 [SIMPLE_EDGE]
                  <-Reducer 21 [CONTAINS]
                    Reduce Output Operator [RS_327]
                      PartitionCols:_col0, _col1, _col2
                      Group By Operator [GBY_326] (rows=52 width=447)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0, _col1, 0L
                        Top N Key Operator [TNK_325] (rows=35 width=435)
                          keys:_col0, _col1,top n:100
                          Select Operator [SEL_323] (rows=2 width=439)
                            Output:["_col0","_col1","_col2","_col3","_col4"]
                            Merge Join Operator [MERGEJOIN_322] (rows=2 width=452)
                              Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
<<<<<<< HEAD
                            <-Reducer 20 [CUSTOM_SIMPLE_EDGE] vectorized
                              PARTITION_ONLY_SHUFFLE [RS_379]
                                Group By Operator [GBY_378] (rows=2 width=228)
=======
                            <-Reducer 15 [CUSTOM_SIMPLE_EDGE] vectorized
                              PARTITION_ONLY_SHUFFLE [RS_373]
                                Group By Operator [GBY_372] (rows=2 width=228)
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                                <-Reducer 19 [SIMPLE_EDGE]
                                  SHUFFLE [RS_55]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_54] (rows=56 width=227)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col1
                                      Merge Join Operator [MERGEJOIN_307] (rows=31836679 width=222)
<<<<<<< HEAD
                                        Conds:RS_377._col0=RS_369._col0(Inner),Output:["_col1","_col2","_col3"]
                                      <-Map 22 [SIMPLE_EDGE] vectorized
                                        PARTITION_ONLY_SHUFFLE [RS_369]
=======
                                        Conds:RS_371._col0=RS_339._col0(Inner),Output:["_col1","_col2","_col3"]
                                      <-Map 9 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_339]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                          PartitionCols:_col0
                                          Select Operator [SEL_368] (rows=8116 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_367] (rows=8116 width=98)
                                              predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-08-04 00:00:00' AND TIMESTAMP'1998-09-03 00:00:00' and d_date_sk is not null)
                                              TableScan [TS_47] (rows=73049 width=98)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
<<<<<<< HEAD
                                      <-Map 18 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_377]
=======
                                      <-Map 28 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_371]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                          PartitionCols:_col0
                                          Select Operator [SEL_370] (rows=286549727 width=231)
                                            Output:["_col0","_col1","_col2","_col3"]
                                            Filter Operator [FIL_369] (rows=286549727 width=231)
                                              predicate:(cs_sold_date_sk is not null and cs_sold_date_sk BETWEEN DynamicValue(RS_51_date_dim_d_date_sk_min) AND DynamicValue(RS_51_date_dim_d_date_sk_max) and in_bloom_filter(cs_sold_date_sk, DynamicValue(RS_51_date_dim_d_date_sk_bloom_filter)))
                                              TableScan [TS_44] (rows=287989836 width=231)
                                                default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_call_center_sk","cs_ext_sales_price","cs_net_profit"]
<<<<<<< HEAD
                                              <-Reducer 23 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_374]
                                                  Group By Operator [GBY_373] (rows=1 width=12)
                                                    Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                  <-Map 22 [CUSTOM_SIMPLE_EDGE] vectorized
                                                    PARTITION_ONLY_SHUFFLE [RS_372]
                                                      Group By Operator [GBY_371] (rows=1 width=12)
                                                        Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                        Select Operator [SEL_370] (rows=8116 width=4)
                                                          Output:["_col0"]
                                                           Please refer to the previous Select Operator [SEL_368]
                            <-Reducer 26 [CUSTOM_SIMPLE_EDGE] vectorized
                              PARTITION_ONLY_SHUFFLE [RS_387]
                                Group By Operator [GBY_386] (rows=1 width=224)
                                  Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"]
                                <-Reducer 25 [CUSTOM_SIMPLE_EDGE]
=======
                                              <-Reducer 10 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_347]
                                                  Group By Operator [GBY_345] (rows=1 width=12)
                                                    Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                  <-Map 9 [CUSTOM_SIMPLE_EDGE] vectorized
                                                    SHUFFLE [RS_344]
                                                      Group By Operator [GBY_343] (rows=1 width=12)
                                                        Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                        Select Operator [SEL_337] (rows=8116 width=4)
                                                          Output:["_col0"]
                                                           Please refer to the previous Select Operator [SEL_335]
                            <-Reducer 18 [CUSTOM_SIMPLE_EDGE] vectorized
                              PARTITION_ONLY_SHUFFLE [RS_378]
                                Group By Operator [GBY_377] (rows=1 width=224)
                                  Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"]
                                <-Reducer 17 [CUSTOM_SIMPLE_EDGE]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                  PARTITION_ONLY_SHUFFLE [RS_69]
                                    Group By Operator [GBY_68] (rows=1 width=224)
                                      Output:["_col0","_col1"],aggregations:["sum(_col1)","sum(_col2)"]
                                      Merge Join Operator [MERGEJOIN_308] (rows=3199657 width=183)
<<<<<<< HEAD
                                        Conds:RS_382._col0=RS_385._col0(Inner),Output:["_col1","_col2"]
                                      <-Map 24 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_382]
=======
                                        Conds:RS_376._col0=RS_340._col0(Inner),Output:["_col1","_col2"]
                                      <-Map 9 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_340]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_335]
                                      <-Map 29 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_376]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                          PartitionCols:_col0
                                          Select Operator [SEL_375] (rows=28798881 width=223)
                                            Output:["_col0","_col1","_col2"]
                                            Filter Operator [FIL_374] (rows=28798881 width=223)
                                              predicate:cr_returned_date_sk is not null
                                              TableScan [TS_58] (rows=28798881 width=223)
                                                default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["cr_returned_date_sk","cr_return_amount","cr_net_loss"]
<<<<<<< HEAD
                                      <-Map 27 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_385]
                                          PartitionCols:_col0
                                          Select Operator [SEL_384] (rows=8116 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_383] (rows=8116 width=98)
                                              predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-08-04 00:00:00' AND TIMESTAMP'1998-09-03 00:00:00' and d_date_sk is not null)
                                              TableScan [TS_61] (rows=73049 width=98)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                  <-Reducer 32 [CONTAINS]
=======
                  <-Reducer 22 [CONTAINS]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                    Reduce Output Operator [RS_333]
                      PartitionCols:_col0, _col1, _col2
                      Group By Operator [GBY_332] (rows=52 width=447)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0, _col1, 0L
                        Top N Key Operator [TNK_331] (rows=35 width=435)
                          keys:_col0, _col1,top n:100
                          Select Operator [SEL_329] (rows=23 width=435)
                            Output:["_col0","_col1","_col2","_col3","_col4"]
                            Merge Join Operator [MERGEJOIN_328] (rows=23 width=452)
<<<<<<< HEAD
                              Conds:RS_403._col0=RS_414._col0(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5"]
                            <-Reducer 31 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_403]
                                PartitionCols:_col0
                                Group By Operator [GBY_402] (rows=23 width=228)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                                <-Reducer 30 [SIMPLE_EDGE]
=======
                              Conds:RS_387._col0=RS_392._col0(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5"]
                            <-Reducer 21 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_387]
                                PartitionCols:_col0
                                Group By Operator [GBY_386] (rows=23 width=228)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                                <-Reducer 20 [SIMPLE_EDGE]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                  SHUFFLE [RS_94]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_93] (rows=345 width=228)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col5
                                      Merge Join Operator [MERGEJOIN_310] (rows=15991254 width=227)
<<<<<<< HEAD
                                        Conds:RS_89._col1=RS_401._col0(Inner),Output:["_col2","_col3","_col5"]
                                      <-Map 35 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_401]
                                          PartitionCols:_col0
                                          Select Operator [SEL_400] (rows=4602 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_399] (rows=4602 width=4)
                                              predicate:wp_web_page_sk is not null
                                              TableScan [TS_83] (rows=4602 width=4)
                                                default@web_page,web_page,Tbl:COMPLETE,Col:COMPLETE,Output:["wp_web_page_sk"]
                                      <-Reducer 29 [SIMPLE_EDGE]
                                        SHUFFLE [RS_89]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_309] (rows=15991254 width=227)
                                            Conds:RS_398._col0=RS_390._col0(Inner),Output:["_col1","_col2","_col3"]
                                          <-Map 33 [SIMPLE_EDGE] vectorized
                                            PARTITION_ONLY_SHUFFLE [RS_390]
                                              PartitionCols:_col0
                                              Select Operator [SEL_389] (rows=8116 width=4)
                                                Output:["_col0"]
                                                Filter Operator [FIL_388] (rows=8116 width=98)
                                                  predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-08-04 00:00:00' AND TIMESTAMP'1998-09-03 00:00:00' and d_date_sk is not null)
                                                  TableScan [TS_80] (rows=73049 width=98)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                                          <-Map 28 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_398]
                                              PartitionCols:_col0
                                              Select Operator [SEL_397] (rows=143931136 width=231)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_396] (rows=143931136 width=231)
                                                  predicate:(ws_sold_date_sk is not null and ws_web_page_sk is not null and ws_sold_date_sk BETWEEN DynamicValue(RS_87_date_dim_d_date_sk_min) AND DynamicValue(RS_87_date_dim_d_date_sk_max) and in_bloom_filter(ws_sold_date_sk, DynamicValue(RS_87_date_dim_d_date_sk_bloom_filter)))
                                                  TableScan [TS_77] (rows=144002668 width=231)
                                                    default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_web_page_sk","ws_ext_sales_price","ws_net_profit"]
                                                  <-Reducer 34 [BROADCAST_EDGE] vectorized
                                                    BROADCAST [RS_395]
                                                      Group By Operator [GBY_394] (rows=1 width=12)
                                                        Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                      <-Map 33 [CUSTOM_SIMPLE_EDGE] vectorized
                                                        PARTITION_ONLY_SHUFFLE [RS_393]
                                                          Group By Operator [GBY_392] (rows=1 width=12)
                                                            Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                            Select Operator [SEL_391] (rows=8116 width=4)
                                                              Output:["_col0"]
                                                               Please refer to the previous Select Operator [SEL_389]
                            <-Reducer 39 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_414]
                                PartitionCols:_col0
                                Group By Operator [GBY_413] (rows=23 width=228)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                                <-Reducer 38 [SIMPLE_EDGE]
=======
                                        Conds:RS_89._col1=RS_384._col0(Inner),Output:["_col2","_col3","_col5"]
                                      <-Map 31 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_384]
                                          PartitionCols:_col0
                                          Select Operator [SEL_383] (rows=4602 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_382] (rows=4602 width=4)
                                              predicate:wp_web_page_sk is not null
                                              TableScan [TS_83] (rows=4602 width=4)
                                                default@web_page,web_page,Tbl:COMPLETE,Col:COMPLETE,Output:["wp_web_page_sk"]
                                      <-Reducer 19 [SIMPLE_EDGE]
                                        SHUFFLE [RS_89]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_309] (rows=15991254 width=227)
                                            Conds:RS_381._col0=RS_341._col0(Inner),Output:["_col1","_col2","_col3"]
                                          <-Map 9 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_341]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_335]
                                          <-Map 30 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_381]
                                              PartitionCols:_col0
                                              Select Operator [SEL_380] (rows=143931136 width=231)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_379] (rows=143931136 width=231)
                                                  predicate:(ws_sold_date_sk is not null and ws_web_page_sk is not null and ws_sold_date_sk BETWEEN DynamicValue(RS_87_date_dim_d_date_sk_min) AND DynamicValue(RS_87_date_dim_d_date_sk_max) and in_bloom_filter(ws_sold_date_sk, DynamicValue(RS_87_date_dim_d_date_sk_bloom_filter)))
                                                  TableScan [TS_77] (rows=144002668 width=231)
                                                    default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_web_page_sk","ws_ext_sales_price","ws_net_profit"]
                                                  <-Reducer 10 [BROADCAST_EDGE] vectorized
                                                    BROADCAST [RS_348]
                                                       Please refer to the previous Group By Operator [GBY_345]
                            <-Reducer 25 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_392]
                                PartitionCols:_col0
                                Group By Operator [GBY_391] (rows=23 width=228)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                                <-Reducer 24 [SIMPLE_EDGE]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                  SHUFFLE [RS_114]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_113] (rows=23 width=228)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col5
                                      Merge Join Operator [MERGEJOIN_312] (rows=1458758 width=137)
<<<<<<< HEAD
                                        Conds:RS_109._col1=RS_412._col0(Inner),Output:["_col2","_col3","_col5"]
                                      <-Map 41 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_412]
                                          PartitionCols:_col0
                                          Select Operator [SEL_411] (rows=4602 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_410] (rows=4602 width=4)
                                              predicate:wp_web_page_sk is not null
                                              TableScan [TS_103] (rows=4602 width=4)
                                                default@web_page,web_page,Tbl:COMPLETE,Col:COMPLETE,Output:["wp_web_page_sk"]
                                      <-Reducer 37 [SIMPLE_EDGE]
                                        SHUFFLE [RS_109]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_311] (rows=1458758 width=135)
                                            Conds:RS_406._col0=RS_409._col0(Inner),Output:["_col1","_col2","_col3"]
                                          <-Map 36 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_406]
                                              PartitionCols:_col0
                                              Select Operator [SEL_405] (rows=13129719 width=221)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_404] (rows=13129719 width=221)
=======
                                        Conds:RS_109._col1=RS_385._col0(Inner),Output:["_col2","_col3","_col5"]
                                      <-Map 31 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_385]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_383]
                                      <-Reducer 23 [SIMPLE_EDGE]
                                        SHUFFLE [RS_109]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_311] (rows=1458758 width=135)
                                            Conds:RS_390._col0=RS_342._col0(Inner),Output:["_col1","_col2","_col3"]
                                          <-Map 9 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_342]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_335]
                                          <-Map 32 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_390]
                                              PartitionCols:_col0
                                              Select Operator [SEL_389] (rows=13129719 width=221)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_388] (rows=13129719 width=221)
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                                  predicate:(wr_web_page_sk is not null and wr_returned_date_sk is not null)
                                                  TableScan [TS_97] (rows=14398467 width=221)
                                                    default@web_returns,web_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_returned_date_sk","wr_web_page_sk","wr_return_amt","wr_net_loss"]
                                          <-Map 40 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_409]
                                              PartitionCols:_col0
                                              Select Operator [SEL_408] (rows=8116 width=4)
                                                Output:["_col0"]
                                                Filter Operator [FIL_407] (rows=8116 width=98)
                                                  predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-08-04 00:00:00' AND TIMESTAMP'1998-09-03 00:00:00' and d_date_sk is not null)
                                                  TableScan [TS_100] (rows=73049 width=98)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                  <-Reducer 5 [CONTAINS]
                    Reduce Output Operator [RS_321]
                      PartitionCols:_col0, _col1, _col2
                      Group By Operator [GBY_320] (rows=52 width=447)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0, _col1, 0L
                        Top N Key Operator [TNK_319] (rows=35 width=435)
                          keys:_col0, _col1,top n:100
                          Select Operator [SEL_317] (rows=10 width=437)
                            Output:["_col0","_col1","_col2","_col3","_col4"]
                            Merge Join Operator [MERGEJOIN_316] (rows=10 width=452)
<<<<<<< HEAD
                              Conds:RS_349._col0=RS_360._col0(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5"]
                            <-Reducer 15 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_360]
                                PartitionCols:_col0
                                Group By Operator [GBY_359] (rows=10 width=228)
=======
                              Conds:RS_357._col0=RS_362._col0(Left Outer),Output:["_col0","_col1","_col2","_col4","_col5"]
                            <-Reducer 13 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_362]
                                PartitionCols:_col0
                                Group By Operator [GBY_361] (rows=10 width=228)
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                                <-Reducer 14 [SIMPLE_EDGE]
                                  SHUFFLE [RS_37]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_36] (rows=40 width=228)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col5
                                      Merge Join Operator [MERGEJOIN_306] (rows=5959021 width=157)
<<<<<<< HEAD
                                        Conds:RS_32._col1=RS_358._col0(Inner),Output:["_col2","_col3","_col5"]
                                      <-Map 17 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_358]
=======
                                        Conds:RS_32._col1=RS_355._col0(Inner),Output:["_col2","_col3","_col5"]
                                      <-Map 26 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_355]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                          PartitionCols:_col0
                                          Select Operator [SEL_353] (rows=1704 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_352] (rows=1704 width=4)
                                              predicate:s_store_sk is not null
                                              TableScan [TS_26] (rows=1704 width=4)
                                                default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk"]
                                      <-Reducer 13 [SIMPLE_EDGE]
                                        SHUFFLE [RS_32]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_305] (rows=5959021 width=156)
<<<<<<< HEAD
                                            Conds:RS_352._col0=RS_355._col0(Inner),Output:["_col1","_col2","_col3"]
                                          <-Map 12 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_352]
                                              PartitionCols:_col0
                                              Select Operator [SEL_351] (rows=53634860 width=223)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_350] (rows=53634860 width=223)
=======
                                            Conds:RS_360._col0=RS_338._col0(Inner),Output:["_col1","_col2","_col3"]
                                          <-Map 9 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_338]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_335]
                                          <-Map 27 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_360]
                                              PartitionCols:_col0
                                              Select Operator [SEL_359] (rows=53634860 width=223)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_358] (rows=53634860 width=223)
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                                  predicate:(sr_store_sk is not null and sr_returned_date_sk is not null)
                                                  TableScan [TS_20] (rows=57591150 width=223)
                                                    default@store_returns,store_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["sr_returned_date_sk","sr_store_sk","sr_return_amt","sr_net_loss"]
                                          <-Map 16 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_355]
                                              PartitionCols:_col0
                                              Select Operator [SEL_354] (rows=8116 width=4)
                                                Output:["_col0"]
                                                Filter Operator [FIL_353] (rows=8116 width=98)
                                                  predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-08-04 00:00:00' AND TIMESTAMP'1998-09-03 00:00:00' and d_date_sk is not null)
                                                  TableScan [TS_23] (rows=73049 width=98)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                            <-Reducer 4 [SIMPLE_EDGE] vectorized
<<<<<<< HEAD
                              SHUFFLE [RS_349]
                                PartitionCols:_col0
                                Group By Operator [GBY_348] (rows=10 width=228)
=======
                              SHUFFLE [RS_357]
                                PartitionCols:_col0
                                Group By Operator [GBY_356] (rows=10 width=228)
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                                <-Reducer 3 [SIMPLE_EDGE]
                                  SHUFFLE [RS_17]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_16] (rows=320 width=228)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col5
                                      Merge Join Operator [MERGEJOIN_304] (rows=58365993 width=137)
<<<<<<< HEAD
                                        Conds:RS_12._col1=RS_347._col0(Inner),Output:["_col2","_col3","_col5"]
                                      <-Map 11 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_347]
                                          PartitionCols:_col0
                                          Select Operator [SEL_346] (rows=1704 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_345] (rows=1704 width=4)
                                              predicate:s_store_sk is not null
                                              TableScan [TS_6] (rows=1704 width=4)
                                                default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk"]
=======
                                        Conds:RS_12._col1=RS_354._col0(Inner),Output:["_col2","_col3","_col5"]
                                      <-Map 26 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_354]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_353]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                      <-Reducer 2 [SIMPLE_EDGE]
                                        SHUFFLE [RS_12]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_303] (rows=58365993 width=135)
<<<<<<< HEAD
                                            Conds:RS_344._col0=RS_336._col0(Inner),Output:["_col1","_col2","_col3"]
=======
                                            Conds:RS_351._col0=RS_336._col0(Inner),Output:["_col1","_col2","_col3"]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                          <-Map 9 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_336]
                                              PartitionCols:_col0
                                              Select Operator [SEL_335] (rows=8116 width=4)
                                                Output:["_col0"]
                                                Filter Operator [FIL_334] (rows=8116 width=98)
                                                  predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-08-04 00:00:00' AND TIMESTAMP'1998-09-03 00:00:00' and d_date_sk is not null)
                                                  TableScan [TS_3] (rows=73049 width=98)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                                          <-Map 1 [SIMPLE_EDGE] vectorized
<<<<<<< HEAD
                                            SHUFFLE [RS_344]
                                              PartitionCols:_col0
                                              Select Operator [SEL_343] (rows=525329897 width=221)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_342] (rows=525329897 width=221)
=======
                                            SHUFFLE [RS_351]
                                              PartitionCols:_col0
                                              Select Operator [SEL_350] (rows=525329897 width=221)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_349] (rows=525329897 width=221)
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge
                                                  predicate:(ss_sold_date_sk is not null and ss_store_sk is not null and ss_sold_date_sk BETWEEN DynamicValue(RS_10_date_dim_d_date_sk_min) AND DynamicValue(RS_10_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_10_date_dim_d_date_sk_bloom_filter)))
                                                  TableScan [TS_0] (rows=575995635 width=221)
                                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_store_sk","ss_ext_sales_price","ss_net_profit"]
                                                  <-Reducer 10 [BROADCAST_EDGE] vectorized
<<<<<<< HEAD
                                                    BROADCAST [RS_341]
                                                      Group By Operator [GBY_340] (rows=1 width=12)
                                                        Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                      <-Map 9 [CUSTOM_SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_339]
                                                          Group By Operator [GBY_338] (rows=1 width=12)
                                                            Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                            Select Operator [SEL_337] (rows=8116 width=4)
                                                              Output:["_col0"]
                                                               Please refer to the previous Select Operator [SEL_335]
=======
                                                    BROADCAST [RS_346]
                                                       Please refer to the previous Group By Operator [GBY_345]
>>>>>>> kgyrtkirk/HIVE-24241-downstream-merge

