PREHOOK: query: explain
select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,amt,profit 
 from
   (select ss_ticket_number
          ,ss_customer_sk
          ,ca_city bought_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from store_sales,date_dim,store,household_demographics,customer_address 
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and store_sales.ss_addr_sk = customer_address.ca_address_sk
    and (household_demographics.hd_dep_count = 2 or
         household_demographics.hd_vehicle_count= 1)
    and date_dim.d_dow in (6,0)
    and date_dim.d_year in (1998,1998+1,1998+2) 
    and store.s_city in ('Cedar Grove','Wildwood','Union','Salem','Highland Park') 
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
    where ss_customer_sk = c_customer_sk
      and customer.c_current_addr_sk = current_addr.ca_address_sk
      and current_addr.ca_city <> bought_city
  order by c_last_name
          ,c_first_name
          ,ca_city
          ,bought_city
          ,ss_ticket_number
  limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,amt,profit 
 from
   (select ss_ticket_number
          ,ss_customer_sk
          ,ca_city bought_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from store_sales,date_dim,store,household_demographics,customer_address 
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and store_sales.ss_addr_sk = customer_address.ca_address_sk
    and (household_demographics.hd_dep_count = 2 or
         household_demographics.hd_vehicle_count= 1)
    and date_dim.d_dow in (6,0)
    and date_dim.d_year in (1998,1998+1,1998+2) 
    and store.s_city in ('Cedar Grove','Wildwood','Union','Salem','Highland Park') 
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
    where ss_customer_sk = c_customer_sk
      and customer.c_current_addr_sk = current_addr.ca_address_sk
      and current_addr.ca_city <> bought_city
  order by c_last_name
          ,c_first_name
          ,ca_city
          ,bought_city
          ,ss_ticket_number
  limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 13 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Map 14 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 6 <- Map 5 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 9 <- Map 12 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 4
      File Output Operator [FS_49]
        Limit [LIM_48] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_47] (rows=463823414 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
          <-Reducer 3 [SIMPLE_EDGE]
            SHUFFLE [RS_46]
              Select Operator [SEL_45] (rows=463823414 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                Filter Operator [FIL_44] (rows=463823414 width=88)
                  predicate:(_col5 <> _col8)
                  Merge Join Operator [MERGEJOIN_85] (rows=463823414 width=88)
                    Conds:RS_41._col0=RS_42._col1(Inner),Output:["_col2","_col3","_col5","_col6","_col8","_col9","_col10"]
                  <-Reducer 2 [SIMPLE_EDGE]
                    SHUFFLE [RS_41]
                      PartitionCols:_col0
                      Merge Join Operator [MERGEJOIN_80] (rows=88000001 width=860)
                        Conds:RS_38._col1=RS_39._col0(Inner),Output:["_col0","_col2","_col3","_col5"]
                      <-Map 5 [SIMPLE_EDGE]
                        SHUFFLE [RS_39]
                          PartitionCols:_col0
                          Select Operator [SEL_5] (rows=40000000 width=1014)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_74] (rows=40000000 width=1014)
                              predicate:ca_address_sk is not null
                              TableScan [TS_3] (rows=40000000 width=1014)
                                default@customer_address,current_addr,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_city"]
                      <-Map 1 [SIMPLE_EDGE]
                        SHUFFLE [RS_38]
                          PartitionCols:_col1
                          Select Operator [SEL_2] (rows=80000000 width=860)
                            Output:["_col0","_col1","_col2","_col3"]
                            Filter Operator [FIL_73] (rows=80000000 width=860)
                              predicate:(c_current_addr_sk is not null and c_customer_sk is not null)
                              TableScan [TS_0] (rows=80000000 width=860)
                                default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk","c_first_name","c_last_name"]
                  <-Reducer 7 [SIMPLE_EDGE]
                    SHUFFLE [RS_42]
                      PartitionCols:_col1
                      Select Operator [SEL_37] (rows=421657640 width=88)
                        Output:["_col0","_col1","_col2","_col3","_col4"]
                        Group By Operator [GBY_36] (rows=421657640 width=88)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                        <-Reducer 6 [SIMPLE_EDGE]
                          SHUFFLE [RS_35]
                            PartitionCols:_col0, _col1, _col2, _col3
                            Group By Operator [GBY_34] (rows=843315281 width=88)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col6)","sum(_col7)"],keys:_col1, _col17, _col3, _col5
                              Merge Join Operator [MERGEJOIN_84] (rows=843315281 width=88)
                                Conds:RS_30._col3=RS_31._col0(Inner),Output:["_col1","_col3","_col5","_col6","_col7","_col17"]
                              <-Map 5 [SIMPLE_EDGE]
                                SHUFFLE [RS_31]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_5]
                              <-Reducer 11 [SIMPLE_EDGE]
                                SHUFFLE [RS_30]
                                  PartitionCols:_col3
                                  Merge Join Operator [MERGEJOIN_83] (rows=766650239 width=88)
                                    Conds:RS_27._col2=RS_28._col0(Inner),Output:["_col1","_col3","_col5","_col6","_col7"]
                                  <-Map 14 [SIMPLE_EDGE]
                                    SHUFFLE [RS_28]
                                      PartitionCols:_col0
                                      Select Operator [SEL_17] (rows=7200 width=107)
                                        Output:["_col0"]
                                        Filter Operator [FIL_78] (rows=7200 width=107)
                                          predicate:(((hd_dep_count = 2) or (hd_vehicle_count = 1)) and hd_demo_sk is not null)
                                          TableScan [TS_15] (rows=7200 width=107)
                                            default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                  <-Reducer 10 [SIMPLE_EDGE]
                                    SHUFFLE [RS_27]
                                      PartitionCols:_col2
                                      Merge Join Operator [MERGEJOIN_82] (rows=696954748 width=88)
                                        Conds:RS_24._col4=RS_25._col0(Inner),Output:["_col1","_col2","_col3","_col5","_col6","_col7"]
                                      <-Map 13 [SIMPLE_EDGE]
                                        SHUFFLE [RS_25]
                                          PartitionCols:_col0
                                          Select Operator [SEL_14] (rows=852 width=1910)
                                            Output:["_col0"]
                                            Filter Operator [FIL_77] (rows=852 width=1910)
                                              predicate:((s_city) IN ('Cedar Grove', 'Wildwood', 'Union', 'Salem', 'Highland Park') and s_store_sk is not null)
                                              TableScan [TS_12] (rows=1704 width=1910)
                                                default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_city"]
                                      <-Reducer 9 [SIMPLE_EDGE]
                                        SHUFFLE [RS_24]
                                          PartitionCols:_col4
                                          Merge Join Operator [MERGEJOIN_81] (rows=633595212 width=88)
                                            Conds:RS_21._col0=RS_22._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                          <-Map 12 [SIMPLE_EDGE]
                                            SHUFFLE [RS_22]
                                              PartitionCols:_col0
                                              Select Operator [SEL_11] (rows=18263 width=1119)
                                                Output:["_col0"]
                                                Filter Operator [FIL_76] (rows=18263 width=1119)
                                                  predicate:((d_dow) IN (6, 0) and (d_year) IN (1998, 1999, 2000) and d_date_sk is not null)
                                                  TableScan [TS_9] (rows=73049 width=1119)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_dow"]
                                          <-Map 8 [SIMPLE_EDGE]
                                            SHUFFLE [RS_21]
                                              PartitionCols:_col0
                                              Select Operator [SEL_8] (rows=575995635 width=88)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                Filter Operator [FIL_75] (rows=575995635 width=88)
                                                  predicate:(ss_addr_sk is not null and ss_customer_sk is not null and ss_hdemo_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                                  TableScan [TS_6] (rows=575995635 width=88)
                                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk","ss_hdemo_sk","ss_addr_sk","ss_store_sk","ss_ticket_number","ss_coupon_amt","ss_net_profit"]

