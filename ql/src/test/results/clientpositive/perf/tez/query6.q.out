Warning: Shuffle Join MERGEJOIN[111][tables = [$hdt$_5, $hdt$_6]] in Stage 'Reducer 12' is a cross product
PREHOOK: query: explain
select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2000
 	        and d_moy = 2 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt 
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2000
 	        and d_moy = 2 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt 
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 8 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (CUSTOM_SIMPLE_EDGE), Reducer 19 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Map 20 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 16 <- Map 15 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE)
Reducer 19 <- Map 18 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 9 (ONE_TO_ONE_EDGE)
Reducer 3 <- Map 14 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 16 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 13 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 9 <- Map 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_76]
        Limit [LIM_75] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_74] (rows=127775039 width=88)
            Output:["_col0","_col1"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_73]
              Filter Operator [FIL_71] (rows=127775039 width=88)
                predicate:(_col1 >= 10L)
                Group By Operator [GBY_70] (rows=383325119 width=88)
                  Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                <-Reducer 5 [SIMPLE_EDGE]
                  SHUFFLE [RS_69]
                    PartitionCols:_col0
                    Group By Operator [GBY_68] (rows=766650239 width=88)
                      Output:["_col0","_col1"],aggregations:["count()"],keys:_col9
                      Merge Join Operator [MERGEJOIN_114] (rows=766650239 width=88)
                        Conds:RS_64._col4=RS_65._col0(Inner),Output:["_col9"]
                      <-Reducer 13 [SIMPLE_EDGE]
                        SHUFFLE [RS_65]
                          PartitionCols:_col0
                          Select Operator [SEL_54] (rows=169400 width=1436)
                            Output:["_col0"]
                            Filter Operator [FIL_53] (rows=169400 width=1436)
                              predicate:(_col5 > (1.2 * CASE WHEN (_col1 is null) THEN (null) ELSE (_col0) END))
                              Merge Join Operator [MERGEJOIN_112] (rows=508200 width=1436)
                                Conds:RS_50._col2=RS_51._col2(Inner),Output:["_col0","_col1","_col4","_col5"]
                              <-Map 20 [SIMPLE_EDGE]
                                SHUFFLE [RS_51]
                                  PartitionCols:_col2
                                  Select Operator [SEL_46] (rows=462000 width=1436)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_107] (rows=462000 width=1436)
                                      predicate:i_item_sk is not null
                                      TableScan [TS_44] (rows=462000 width=1436)
                                        default@item,i,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_current_price","i_category"]
                              <-Reducer 12 [SIMPLE_EDGE]
                                SHUFFLE [RS_50]
                                  PartitionCols:_col2
                                  Merge Join Operator [MERGEJOIN_111] (rows=231000 width=1445)
                                    Conds:(Inner),Output:["_col0","_col1","_col2"]
                                  <-Reducer 11 [CUSTOM_SIMPLE_EDGE]
                                    PARTITION_ONLY_SHUFFLE [RS_48]
                                      Select Operator [SEL_43] (rows=1 width=8)
                                        Filter Operator [FIL_42] (rows=1 width=8)
                                          predicate:(sq_count_check(_col0) <= 1)
                                          Group By Operator [GBY_40] (rows=1 width=8)
                                            Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                          <-Reducer 10 [CUSTOM_SIMPLE_EDGE]
                                            PARTITION_ONLY_SHUFFLE [RS_39]
                                              Group By Operator [GBY_38] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count()"]
                                                Select Operator [SEL_36] (rows=9131 width=1119)
                                                  Group By Operator [GBY_35] (rows=9131 width=1119)
                                                    Output:["_col0"],keys:KEY._col0
                                                  <-Map 8 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_34]
                                                      PartitionCols:_col0
                                                      Group By Operator [GBY_33] (rows=18262 width=1119)
                                                        Output:["_col0"],keys:d_month_seq
                                                        Select Operator [SEL_32] (rows=18262 width=1119)
                                                          Output:["d_month_seq"]
                                                          Filter Operator [FIL_106] (rows=18262 width=1119)
                                                            predicate:((d_moy = 2) and (d_year = 2000))
                                                            TableScan [TS_3] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_month_seq","d_year","d_moy"]
                                  <-Reducer 19 [CUSTOM_SIMPLE_EDGE]
                                    PARTITION_ONLY_SHUFFLE [RS_47]
                                      Select Operator [SEL_29] (rows=231000 width=1436)
                                        Output:["_col0","_col1","_col2"]
                                        Group By Operator [GBY_28] (rows=231000 width=1436)
                                          Output:["_col0","_col1"],aggregations:["avg(VALUE._col0)"],keys:KEY._col0
                                        <-Map 18 [SIMPLE_EDGE]
                                          SHUFFLE [RS_27]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_26] (rows=462000 width=1436)
                                              Output:["_col0","_col1"],aggregations:["avg(i_current_price)"],keys:i_category
                                              Filter Operator [FIL_105] (rows=462000 width=1436)
                                                predicate:i_category is not null
                                                TableScan [TS_23] (rows=462000 width=1436)
                                                  default@item,j,Tbl:COMPLETE,Col:NONE,Output:["i_current_price","i_category"]
                      <-Reducer 4 [SIMPLE_EDGE]
                        SHUFFLE [RS_64]
                          PartitionCols:_col4
                          Merge Join Operator [MERGEJOIN_113] (rows=696954748 width=88)
                            Conds:RS_61._col5=RS_62._col0(Inner),Output:["_col4","_col9"]
                          <-Reducer 16 [SIMPLE_EDGE]
                            SHUFFLE [RS_62]
                              PartitionCols:_col0
                              Merge Join Operator [MERGEJOIN_110] (rows=88000001 width=860)
                                Conds:RS_19._col1=RS_20._col0(Inner),Output:["_col0","_col3"]
                              <-Map 15 [SIMPLE_EDGE]
                                SHUFFLE [RS_19]
                                  PartitionCols:_col1
                                  Select Operator [SEL_15] (rows=80000000 width=860)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_103] (rows=80000000 width=860)
                                      predicate:(c_current_addr_sk is not null and c_customer_sk is not null)
                                      TableScan [TS_13] (rows=80000000 width=860)
                                        default@customer,c,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]
                              <-Map 17 [SIMPLE_EDGE]
                                SHUFFLE [RS_20]
                                  PartitionCols:_col0
                                  Select Operator [SEL_18] (rows=40000000 width=1014)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_104] (rows=40000000 width=1014)
                                      predicate:ca_address_sk is not null
                                      TableScan [TS_16] (rows=40000000 width=1014)
                                        default@customer_address,a,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state"]
                          <-Reducer 3 [SIMPLE_EDGE]
                            SHUFFLE [RS_61]
                              PartitionCols:_col5
                              Merge Join Operator [MERGEJOIN_109] (rows=633595212 width=88)
                                Conds:RS_58._col0=RS_59._col0(Inner),Output:["_col4","_col5"]
                              <-Map 14 [SIMPLE_EDGE]
                                SHUFFLE [RS_59]
                                  PartitionCols:_col0
                                  Select Operator [SEL_12] (rows=575995635 width=88)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_102] (rows=575995635 width=88)
                                      predicate:(ss_customer_sk is not null and ss_item_sk is not null and ss_sold_date_sk is not null)
                                      TableScan [TS_10] (rows=575995635 width=88)
                                        default@store_sales,s,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk"]
                              <-Reducer 2 [SIMPLE_EDGE]
                                SHUFFLE [RS_58]
                                  PartitionCols:_col0
                                  Merge Join Operator [MERGEJOIN_108] (rows=80353 width=1119)
                                    Conds:RS_55._col1=RS_56._col0(Inner),Output:["_col0"]
                                  <-Map 1 [SIMPLE_EDGE]
                                    SHUFFLE [RS_55]
                                      PartitionCols:_col1
                                      Select Operator [SEL_2] (rows=73049 width=1119)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_100] (rows=73049 width=1119)
                                          predicate:(d_date_sk is not null and d_month_seq is not null)
                                          TableScan [TS_0] (rows=73049 width=1119)
                                            default@date_dim,d,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]
                                  <-Reducer 9 [ONE_TO_ONE_EDGE]
                                    FORWARD [RS_56]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_8] (rows=9131 width=1119)
                                        Output:["_col0"],keys:KEY._col0
                                      <-Map 8 [SIMPLE_EDGE]
                                        SHUFFLE [RS_7]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_6] (rows=18262 width=1119)
                                            Output:["_col0"],keys:d_month_seq
                                            Select Operator [SEL_5] (rows=18262 width=1119)
                                              Output:["d_month_seq"]
                                              Filter Operator [FIL_101] (rows=18262 width=1119)
                                                predicate:((d_moy = 2) and (d_year = 2000) and d_month_seq is not null)
                                                 Please refer to the previous TableScan [TS_3]

