PREHOOK: query: explain
select  *
 from(select w_warehouse_name
            ,i_item_id
            ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date))
	                then inv_quantity_on_hand 
                      else 0 end) as inv_before
            ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date))
                      then inv_quantity_on_hand 
                      else 0 end) as inv_after
   from inventory
       ,warehouse
       ,item
       ,date_dim
   where i_current_price between 0.99 and 1.49
     and i_item_sk          = inv_item_sk
     and inv_warehouse_sk   = w_warehouse_sk
     and inv_date_sk    = d_date_sk
     and d_date between (cast ('1998-04-08' as date) - 30 days)
                    and (cast ('1998-04-08' as date) + 30 days)
   group by w_warehouse_name, i_item_id) x
 where (case when inv_before > 0 
             then inv_after / inv_before 
             else null
             end) between 2.0/3.0 and 3.0/2.0
 order by w_warehouse_name
         ,i_item_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  *
 from(select w_warehouse_name
            ,i_item_id
            ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date))
	                then inv_quantity_on_hand 
                      else 0 end) as inv_before
            ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date))
                      then inv_quantity_on_hand 
                      else 0 end) as inv_after
   from inventory
       ,warehouse
       ,item
       ,date_dim
   where i_current_price between 0.99 and 1.49
     and i_item_sk          = inv_item_sk
     and inv_warehouse_sk   = w_warehouse_sk
     and inv_date_sk    = d_date_sk
     and d_date between (cast ('1998-04-08' as date) - 30 days)
                    and (cast ('1998-04-08' as date) + 30 days)
   group by w_warehouse_name, i_item_id) x
 where (case when inv_before > 0 
             then inv_after / inv_before 
             else null
             end) between 2.0/3.0 and 3.0/2.0
 order by w_warehouse_name
         ,i_item_id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 9 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_63]
        Limit [LIM_62] (rows=100 width=15)
          Number of rows:100
          Select Operator [SEL_61] (rows=12506076 width=15)
            Output:["_col0","_col1","_col2","_col3"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_28]
              Filter Operator [FIL_26] (rows=12506076 width=15)
                predicate:CASE WHEN ((_col2 > 0L)) THEN ((UDFToDouble(_col3) / UDFToDouble(_col2)) BETWEEN 0.666667D AND 1.5D) ELSE (null) END
                Group By Operator [GBY_25] (rows=25012152 width=15)
                  Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_24]
                    PartitionCols:_col0, _col1
                    Group By Operator [GBY_23] (rows=50024305 width=15)
                      Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col0, _col1
                      Select Operator [SEL_21] (rows=50024305 width=15)
                        Output:["_col0","_col1","_col2","_col3"]
                        Merge Join Operator [MERGEJOIN_47] (rows=50024305 width=15)
                          Conds:RS_18._col2=RS_59._col0(Inner),Output:["_col3","_col5","_col7","_col10"]
                        <-Map 9 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_59]
                            PartitionCols:_col0
                            Select Operator [SEL_58] (rows=27 width=1029)
                              Output:["_col0","_col1"]
                              Filter Operator [FIL_57] (rows=27 width=1029)
                                predicate:w_warehouse_sk is not null
                                TableScan [TS_9] (rows=27 width=1029)
                                  default@warehouse,warehouse,Tbl:COMPLETE,Col:NONE,Output:["w_warehouse_sk","w_warehouse_name"]
                        <-Reducer 3 [SIMPLE_EDGE]
                          SHUFFLE [RS_18]
                            PartitionCols:_col2
                            Merge Join Operator [MERGEJOIN_46] (rows=45476640 width=15)
                              Conds:RS_15._col1=RS_56._col0(Inner),Output:["_col2","_col3","_col5","_col7"]
                            <-Map 8 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_56]
                                PartitionCols:_col0
                                Select Operator [SEL_55] (rows=51333 width=1436)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_54] (rows=51333 width=1436)
                                    predicate:(i_current_price BETWEEN 0.99 AND 1.49 and i_item_sk is not null)
                                    TableScan [TS_6] (rows=462000 width=1436)
                                      default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id","i_current_price"]
                            <-Reducer 2 [SIMPLE_EDGE]
                              SHUFFLE [RS_15]
                                PartitionCols:_col1
                                Merge Join Operator [MERGEJOIN_45] (rows=41342400 width=15)
                                  Conds:RS_50._col0=RS_53._col0(Inner),Output:["_col1","_col2","_col3","_col5"]
                                <-Map 1 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_50]
                                    PartitionCols:_col0
                                    Select Operator [SEL_49] (rows=37584000 width=15)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_48] (rows=37584000 width=15)
                                        predicate:(inv_date_sk is not null and inv_item_sk is not null and inv_warehouse_sk is not null)
                                        TableScan [TS_0] (rows=37584000 width=15)
                                          default@inventory,inventory,Tbl:COMPLETE,Col:NONE,Output:["inv_date_sk","inv_item_sk","inv_warehouse_sk","inv_quantity_on_hand"]
                                <-Map 7 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_53]
                                    PartitionCols:_col0
                                    Select Operator [SEL_52] (rows=8116 width=1119)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_51] (rows=8116 width=1119)
                                        predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-03-09 00:00:00' AND TIMESTAMP'1998-05-08 00:00:00' and d_date_sk is not null)
                                        TableScan [TS_3] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]

