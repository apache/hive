PREHOOK: query: explain
select   
    sum(ws_net_paid) as total_sum
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
 	partition by grouping(i_category)+grouping(i_class),
 	case when grouping(i_class) = 0 then i_category end 
 	order by sum(ws_net_paid) desc) as rank_within_parent
 from
    web_sales
   ,date_dim       d1
   ,item
 where
    d1.d_month_seq between 1212 and 1212+11
 and d1.d_date_sk = ws_sold_date_sk
 and i_item_sk  = ws_item_sk
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc,
   case when lochierarchy = 0 then i_category end,
   rank_within_parent
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select   
    sum(ws_net_paid) as total_sum
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
 	partition by grouping(i_category)+grouping(i_class),
 	case when grouping(i_class) = 0 then i_category end 
 	order by sum(ws_net_paid) desc) as rank_within_parent
 from
    web_sales
   ,date_dim       d1
   ,item
 where
    d1.d_month_seq between 1212 and 1212+11
 and d1.d_date_sk = ws_sold_date_sk
 and i_item_sk  = ws_item_sk
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc,
   case when lochierarchy = 0 then i_category end,
   rank_within_parent
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6
      File Output Operator [FS_30]
        Limit [LIM_28] (rows=100 width=135)
          Number of rows:100
          Select Operator [SEL_27] (rows=261364852 width=135)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_26]
              Select Operator [SEL_24] (rows=261364852 width=135)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                PTF Operator [PTF_23] (rows=261364852 width=135)
                  Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col2 DESC NULLS LAST","partition by:":"(grouping(_col3, 1) + grouping(_col3, 0)), CASE WHEN ((grouping(_col3, 0) = 0)) THEN (_col0) ELSE (UDFToString(null)) END"}]
                  Select Operator [SEL_22] (rows=261364852 width=135)
                    Output:["_col0","_col1","_col2","_col3"]
                  <-Reducer 4 [SIMPLE_EDGE]
                    SHUFFLE [RS_21]
                      PartitionCols:(grouping(_col3, 1) + grouping(_col3, 0)), CASE WHEN ((grouping(_col3, 0) = 0)) THEN (_col0) ELSE (UDFToString(null)) END
                      Select Operator [SEL_20] (rows=261364852 width=135)
                        Output:["_col0","_col1","_col2","_col3"]
                        Group By Operator [GBY_19] (rows=261364852 width=135)
                          Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                        <-Reducer 3 [SIMPLE_EDGE]
                          SHUFFLE [RS_18]
                            PartitionCols:_col0, _col1, _col2
                            Group By Operator [GBY_17] (rows=522729705 width=135)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(_col2)"],keys:_col0, _col1, 0L
                              Select Operator [SEL_15] (rows=174243235 width=135)
                                Output:["_col0","_col1","_col2"]
                                Merge Join Operator [MERGEJOIN_40] (rows=174243235 width=135)
                                  Conds:RS_12._col1=RS_13._col0(Inner),Output:["_col2","_col6","_col7"]
                                <-Map 8 [SIMPLE_EDGE]
                                  SHUFFLE [RS_13]
                                    PartitionCols:_col0
                                    Select Operator [SEL_8] (rows=462000 width=1436)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_38] (rows=462000 width=1436)
                                        predicate:i_item_sk is not null
                                        TableScan [TS_6] (rows=462000 width=1436)
                                          default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_class","i_category"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_12]
                                    PartitionCols:_col1
                                    Merge Join Operator [MERGEJOIN_39] (rows=158402938 width=135)
                                      Conds:RS_9._col0=RS_10._col0(Inner),Output:["_col1","_col2"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_9]
                                        PartitionCols:_col0
                                        Select Operator [SEL_2] (rows=144002668 width=135)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_36] (rows=144002668 width=135)
                                            predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                            TableScan [TS_0] (rows=144002668 width=135)
                                              default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_net_paid"]
                                    <-Map 7 [SIMPLE_EDGE]
                                      SHUFFLE [RS_10]
                                        PartitionCols:_col0
                                        Select Operator [SEL_5] (rows=8116 width=1119)
                                          Output:["_col0"]
                                          Filter Operator [FIL_37] (rows=8116 width=1119)
                                            predicate:(d_date_sk is not null and d_month_seq BETWEEN 1212 AND 1223)
                                            TableScan [TS_3] (rows=73049 width=1119)
                                              default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_month_seq"]

