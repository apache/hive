Warning: Shuffle Join MERGEJOIN[133][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3]] in Stage 'Reducer 4' is a cross product
PREHOOK: query: explain
select  ca_zip, ca_county, sum(ws_sales_price)
 from web_sales, customer, customer_address, date_dim, item
 where ws_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ws_item_sk = i_item_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
 	      or 
 	      i_item_id in (select i_item_id
                             from item
                             where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
                             )
 	    )
 	and ws_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip, ca_county
 order by ca_zip, ca_county
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  ca_zip, ca_county, sum(ws_sales_price)
 from web_sales, customer, customer_address, date_dim, item
 where ws_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ws_item_sk = i_item_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
 	      or 
 	      i_item_id in (select i_item_id
                             from item
                             where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
                             )
 	    )
 	and ws_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip, ca_county
 order by ca_zip, ca_county
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 12 <- Reducer 15 (BROADCAST_EDGE)
Reducer 10 <- Reducer 13 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Map 8 (SIMPLE_EDGE)
Reducer 13 <- Map 12 (SIMPLE_EDGE), Map 14 (SIMPLE_EDGE)
Reducer 15 <- Map 14 (CUSTOM_SIMPLE_EDGE)
Reducer 17 <- Map 16 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Reducer 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 17 (CUSTOM_SIMPLE_EDGE), Reducer 3 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 9 <- Map 8 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_171]
        Limit [LIM_170] (rows=100 width=299)
          Number of rows:100
          Select Operator [SEL_169] (rows=17401956 width=299)
            Output:["_col0","_col1","_col2"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_168]
              Group By Operator [GBY_167] (rows=17401956 width=299)
                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
              <-Reducer 4 [SIMPLE_EDGE]
                SHUFFLE [RS_53]
                  PartitionCols:_col0, _col1
                  Group By Operator [GBY_52] (rows=143930993 width=299)
                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col8, _col7
                    Top N Key Operator [TNK_82] (rows=143930993 width=310)
                      keys:_col8, _col7,top n:100
                      Select Operator [SEL_51] (rows=143930993 width=310)
                        Output:["_col3","_col7","_col8"]
                        Filter Operator [FIL_50] (rows=143930993 width=310)
                          predicate:(((_col14 <> 0L) and _col16 is not null) or (substr(_col8, 1, 5)) IN ('85669', '86197', '88274', '83405', '86475', '85392', '85460', '80348', '81792'))
                          Select Operator [SEL_49] (rows=143930993 width=310)
                            Output:["_col3","_col7","_col8","_col14","_col16"]
                            Merge Join Operator [MERGEJOIN_133] (rows=143930993 width=310)
                              Conds:(Inner),Output:["_col3","_col4","_col8","_col12","_col16"]
                            <-Reducer 17 [CUSTOM_SIMPLE_EDGE] vectorized
                              PARTITION_ONLY_SHUFFLE [RS_166]
                                Group By Operator [GBY_165] (rows=1 width=8)
                                  Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                <-Map 16 [CUSTOM_SIMPLE_EDGE] vectorized
                                  PARTITION_ONLY_SHUFFLE [RS_164]
                                    Group By Operator [GBY_163] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_162] (rows=11 width=4)
                                        Filter Operator [FIL_161] (rows=11 width=4)
                                          predicate:(i_item_sk) IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
                                          TableScan [TS_33] (rows=462000 width=4)
                                            default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk"]
                            <-Reducer 3 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_46]
                                Merge Join Operator [MERGEJOIN_132] (rows=143930993 width=302)
                                  Conds:RS_43._col0=RS_44._col6(Inner),Output:["_col3","_col4","_col8","_col12"]
                                <-Reducer 10 [SIMPLE_EDGE]
                                  SHUFFLE [RS_44]
                                    PartitionCols:_col6
                                    Merge Join Operator [MERGEJOIN_131] (rows=143930993 width=119)
                                      Conds:RS_29._col0=RS_30._col1(Inner),Output:["_col3","_col6","_col7"]
                                    <-Reducer 13 [SIMPLE_EDGE]
                                      SHUFFLE [RS_30]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_130] (rows=143930993 width=119)
                                          Conds:RS_160._col0=RS_152._col0(Inner),Output:["_col1","_col2","_col3"]
                                        <-Map 14 [SIMPLE_EDGE] vectorized
                                          PARTITION_ONLY_SHUFFLE [RS_152]
                                            PartitionCols:_col0
                                            Select Operator [SEL_151] (rows=130 width=12)
                                              Output:["_col0"]
                                              Filter Operator [FIL_150] (rows=130 width=12)
                                                predicate:((d_year = 2000) and (d_qoy = 2) and d_date_sk is not null)
                                                TableScan [TS_19] (rows=73049 width=12)
                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                                        <-Map 12 [SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_160]
                                            PartitionCols:_col0
                                            Select Operator [SEL_159] (rows=143930993 width=123)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_158] (rows=143930993 width=123)
                                                predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null and ws_item_sk is not null and ws_sold_date_sk BETWEEN DynamicValue(RS_23_date_dim_d_date_sk_min) AND DynamicValue(RS_23_date_dim_d_date_sk_max) and in_bloom_filter(ws_sold_date_sk, DynamicValue(RS_23_date_dim_d_date_sk_bloom_filter)))
                                                TableScan [TS_16] (rows=144002668 width=123)
                                                  default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_bill_customer_sk","ws_sales_price"]
                                                <-Reducer 15 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_157]
                                                    Group By Operator [GBY_156] (rows=1 width=12)
                                                      Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                    <-Map 14 [CUSTOM_SIMPLE_EDGE] vectorized
                                                      PARTITION_ONLY_SHUFFLE [RS_155]
                                                        Group By Operator [GBY_154] (rows=1 width=12)
                                                          Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                          Select Operator [SEL_153] (rows=130 width=4)
                                                            Output:["_col0"]
                                                             Please refer to the previous Select Operator [SEL_151]
                                    <-Reducer 9 [SIMPLE_EDGE]
                                      SHUFFLE [RS_29]
                                        PartitionCols:_col0
                                        Merge Join Operator [MERGEJOIN_129] (rows=462007 width=4)
                                          Conds:RS_144._col1=RS_149._col0(Left Outer),Output:["_col0","_col3"]
                                        <-Map 8 [SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_144]
                                            PartitionCols:_col1
                                            Select Operator [SEL_142] (rows=462000 width=104)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_140] (rows=462000 width=104)
                                                predicate:i_item_sk is not null
                                                TableScan [TS_6] (rows=462000 width=104)
                                                  default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_item_id"]
                                        <-Reducer 11 [SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_149]
                                            PartitionCols:_col0
                                            Select Operator [SEL_148] (rows=5 width=104)
                                              Output:["_col0","_col1"]
                                              Group By Operator [GBY_147] (rows=5 width=100)
                                                Output:["_col0"],keys:KEY._col0
                                              <-Map 8 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_146]
                                                  PartitionCols:_col0
                                                  Group By Operator [GBY_145] (rows=5 width=100)
                                                    Output:["_col0"],keys:i_item_id
                                                    Select Operator [SEL_143] (rows=11 width=104)
                                                      Output:["i_item_id"]
                                                      Filter Operator [FIL_141] (rows=11 width=104)
                                                        predicate:((i_item_sk) IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29) and i_item_id is not null)
                                                         Please refer to the previous TableScan [TS_6]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_43]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_128] (rows=80000000 width=191)
                                      Conds:RS_136._col1=RS_139._col0(Inner),Output:["_col0","_col3","_col4"]
                                    <-Map 1 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_136]
                                        PartitionCols:_col1
                                        Select Operator [SEL_135] (rows=80000000 width=8)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_134] (rows=80000000 width=8)
                                            predicate:(c_customer_sk is not null and c_current_addr_sk is not null)
                                            TableScan [TS_0] (rows=80000000 width=8)
                                              default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk"]
                                    <-Map 7 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_139]
                                        PartitionCols:_col0
                                        Select Operator [SEL_138] (rows=40000000 width=191)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_137] (rows=40000000 width=191)
                                            predicate:ca_address_sk is not null
                                            TableScan [TS_3] (rows=40000000 width=191)
                                              default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_county","ca_zip"]

