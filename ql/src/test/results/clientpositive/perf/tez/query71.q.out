PREHOOK: query: explain
select i_brand_id brand_id, i_brand brand,t_hour,t_minute,
 	sum(ext_price) ext_price
 from item, (select ws_ext_sales_price as ext_price, 
                        ws_sold_date_sk as sold_date_sk,
                        ws_item_sk as sold_item_sk,
                        ws_sold_time_sk as time_sk  
                 from web_sales,date_dim
                 where d_date_sk = ws_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select cs_ext_sales_price as ext_price,
                        cs_sold_date_sk as sold_date_sk,
                        cs_item_sk as sold_item_sk,
                        cs_sold_time_sk as time_sk
                 from catalog_sales,date_dim
                 where d_date_sk = cs_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select ss_ext_sales_price as ext_price,
                        ss_sold_date_sk as sold_date_sk,
                        ss_item_sk as sold_item_sk,
                        ss_sold_time_sk as time_sk
                 from store_sales,date_dim
                 where d_date_sk = ss_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 ) as tmp,time_dim
 where
   sold_item_sk = i_item_sk
   and i_manager_id=1
   and time_sk = t_time_sk
   and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')
 group by i_brand, i_brand_id,t_hour,t_minute
 order by ext_price desc, i_brand_id
PREHOOK: type: QUERY
POSTHOOK: query: explain
select i_brand_id brand_id, i_brand brand,t_hour,t_minute,
 	sum(ext_price) ext_price
 from item, (select ws_ext_sales_price as ext_price, 
                        ws_sold_date_sk as sold_date_sk,
                        ws_item_sk as sold_item_sk,
                        ws_sold_time_sk as time_sk  
                 from web_sales,date_dim
                 where d_date_sk = ws_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select cs_ext_sales_price as ext_price,
                        cs_sold_date_sk as sold_date_sk,
                        cs_item_sk as sold_item_sk,
                        cs_sold_time_sk as time_sk
                 from catalog_sales,date_dim
                 where d_date_sk = cs_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select ss_ext_sales_price as ext_price,
                        ss_sold_date_sk as sold_date_sk,
                        ss_item_sk as sold_item_sk,
                        ss_sold_time_sk as time_sk
                 from store_sales,date_dim
                 where d_date_sk = ss_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 ) as tmp,time_dim
 where
   sold_item_sk = i_item_sk
   and i_manager_id=1
   and time_sk = t_time_sk
   and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')
 group by i_brand, i_brand_id,t_hour,t_minute
 order by ext_price desc, i_brand_id
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 11 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 13 <- Map 12 (SIMPLE_EDGE), Map 14 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 4 <- Map 15 (SIMPLE_EDGE), Union 3 (SIMPLE_EDGE)
Reducer 5 <- Map 16 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 7 vectorized
      File Output Operator [FS_115]
        Select Operator [SEL_114] (rows=670816149 width=108)
          Output:["_col0","_col1","_col2","_col3","_col4"]
        <-Reducer 6 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_113]
            Select Operator [SEL_112] (rows=670816149 width=108)
              Output:["_col1","_col2","_col3","_col4","_col5"]
              Group By Operator [GBY_111] (rows=670816149 width=108)
                Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
              <-Reducer 5 [SIMPLE_EDGE]
                SHUFFLE [RS_46]
                  PartitionCols:_col0, _col1, _col2, _col3
                  Group By Operator [GBY_45] (rows=1341632299 width=108)
                    Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col0)"],keys:_col4, _col8, _col9, _col5
                    Merge Join Operator [MERGEJOIN_86] (rows=1341632299 width=108)
                      Conds:RS_41._col2=RS_110._col0(Inner),Output:["_col0","_col4","_col5","_col8","_col9"]
                    <-Map 16 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_110]
                        PartitionCols:_col0
                        Select Operator [SEL_109] (rows=86400 width=471)
                          Output:["_col0","_col1","_col2"]
                          Filter Operator [FIL_108] (rows=86400 width=471)
                            predicate:(((t_meal_time = 'breakfast') or (t_meal_time = 'dinner')) and t_time_sk is not null)
                            TableScan [TS_35] (rows=86400 width=471)
                              default@time_dim,time_dim,Tbl:COMPLETE,Col:NONE,Output:["t_time_sk","t_hour","t_minute","t_meal_time"]
                    <-Reducer 4 [SIMPLE_EDGE]
                      SHUFFLE [RS_41]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_85] (rows=1219665700 width=108)
                          Conds:Union 3._col1=RS_107._col0(Inner),Output:["_col0","_col2","_col4","_col5"]
                        <-Map 15 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_107]
                            PartitionCols:_col0
                            Select Operator [SEL_106] (rows=231000 width=1436)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_105] (rows=231000 width=1436)
                                predicate:((i_manager_id = 1) and i_item_sk is not null)
                                TableScan [TS_32] (rows=462000 width=1436)
                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_brand","i_manager_id"]
                        <-Union 3 [SIMPLE_EDGE]
                          <-Reducer 10 [CONTAINS]
                            Reduce Output Operator [RS_94]
                              PartitionCols:_col1
                              Select Operator [SEL_92] (rows=316788826 width=135)
                                Output:["_col0","_col1","_col2"]
                                Merge Join Operator [MERGEJOIN_91] (rows=316788826 width=135)
                                  Conds:RS_118._col0=RS_121._col0(Inner),Output:["_col1","_col2","_col3"]
                                <-Map 11 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_121]
                                    PartitionCols:_col0
                                    Select Operator [SEL_120] (rows=18262 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_119] (rows=18262 width=1119)
                                        predicate:((d_moy = 12) and (d_year = 2001) and d_date_sk is not null)
                                        TableScan [TS_13] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                <-Map 9 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_118]
                                    PartitionCols:_col0
                                    Select Operator [SEL_117] (rows=287989836 width=135)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_116] (rows=287989836 width=135)
                                        predicate:(cs_item_sk is not null and cs_sold_date_sk is not null and cs_sold_time_sk is not null)
                                        TableScan [TS_10] (rows=287989836 width=135)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_sold_time_sk","cs_item_sk","cs_ext_sales_price"]
                          <-Reducer 13 [CONTAINS]
                            Reduce Output Operator [RS_98]
                              PartitionCols:_col1
                              Select Operator [SEL_96] (rows=633595212 width=88)
                                Output:["_col0","_col1","_col2"]
                                Merge Join Operator [MERGEJOIN_95] (rows=633595212 width=88)
                                  Conds:RS_124._col0=RS_127._col0(Inner),Output:["_col1","_col2","_col3"]
                                <-Map 12 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_124]
                                    PartitionCols:_col0
                                    Select Operator [SEL_123] (rows=575995635 width=88)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_122] (rows=575995635 width=88)
                                        predicate:(ss_item_sk is not null and ss_sold_date_sk is not null and ss_sold_time_sk is not null)
                                        TableScan [TS_21] (rows=575995635 width=88)
                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_sold_time_sk","ss_item_sk","ss_ext_sales_price"]
                                <-Map 14 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_127]
                                    PartitionCols:_col0
                                    Select Operator [SEL_126] (rows=18262 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_125] (rows=18262 width=1119)
                                        predicate:((d_moy = 12) and (d_year = 2001) and d_date_sk is not null)
                                        TableScan [TS_24] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                          <-Reducer 2 [CONTAINS]
                            Reduce Output Operator [RS_90]
                              PartitionCols:_col1
                              Select Operator [SEL_88] (rows=158402938 width=135)
                                Output:["_col0","_col1","_col2"]
                                Merge Join Operator [MERGEJOIN_87] (rows=158402938 width=135)
                                  Conds:RS_101._col0=RS_104._col0(Inner),Output:["_col1","_col2","_col3"]
                                <-Map 1 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_101]
                                    PartitionCols:_col0
                                    Select Operator [SEL_100] (rows=144002668 width=135)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_99] (rows=144002668 width=135)
                                        predicate:(ws_item_sk is not null and ws_sold_date_sk is not null and ws_sold_time_sk is not null)
                                        TableScan [TS_0] (rows=144002668 width=135)
                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_sold_time_sk","ws_item_sk","ws_ext_sales_price"]
                                <-Map 8 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_104]
                                    PartitionCols:_col0
                                    Select Operator [SEL_103] (rows=18262 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_102] (rows=18262 width=1119)
                                        predicate:((d_moy = 12) and (d_year = 2001) and d_date_sk is not null)
                                        TableScan [TS_3] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]

