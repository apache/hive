PREHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 16 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 11 (SIMPLE_EDGE)
Reducer 3 <- Map 12 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 5 <- Union 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 1 (SIMPLE_EDGE), Map 13 (SIMPLE_EDGE)
Reducer 8 <- Map 14 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 9 <- Map 1 (SIMPLE_EDGE), Map 15 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_119]
        Limit [LIM_118] (rows=100 width=108)
          Number of rows:100
          Select Operator [SEL_117] (rows=304916424 width=108)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_116]
              Group By Operator [GBY_115] (rows=304916424 width=108)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
              <-Union 4 [SIMPLE_EDGE]
                <-Reducer 10 [CONTAINS]
                  Reduce Output Operator [RS_103]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_102] (rows=609832848 width=108)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Select Operator [SEL_100] (rows=174233858 width=135)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                        Merge Join Operator [MERGEJOIN_99] (rows=174233858 width=135)
                          Conds:RS_45._col0=RS_131._col0(Inner),Output:["_col3","_col5","_col7","_col8"]
                        <-Map 16 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_131]
                            PartitionCols:_col0
                            Select Operator [SEL_130] (rows=73049 width=1119)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_129] (rows=73049 width=1119)
                                predicate:d_date_sk is not null
                                TableScan [TS_39] (rows=73049 width=1119)
                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_qoy"]
                        <-Reducer 9 [SIMPLE_EDGE]
                          SHUFFLE [RS_45]
                            PartitionCols:_col0
                            Merge Join Operator [MERGEJOIN_87] (rows=158394413 width=135)
                              Conds:RS_128._col2=RS_108._col0(Inner),Output:["_col0","_col3","_col5"]
                            <-Map 1 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_108]
                                PartitionCols:_col0
                                Select Operator [SEL_105] (rows=462000 width=1436)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_104] (rows=462000 width=1436)
                                    predicate:i_item_sk is not null
                                    TableScan [TS_0] (rows=462000 width=1436)
                                      default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_category"]
                            <-Map 15 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_128]
                                PartitionCols:_col2
                                Select Operator [SEL_127] (rows=143994918 width=135)
                                  Output:["_col0","_col2","_col3"]
                                  Filter Operator [FIL_126] (rows=143994918 width=135)
                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null and cs_warehouse_sk is null)
                                    TableScan [TS_33] (rows=287989836 width=135)
                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_warehouse_sk","cs_item_sk","cs_ext_sales_price"]
                <-Reducer 3 [CONTAINS]
                  Reduce Output Operator [RS_93]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_92] (rows=609832848 width=108)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Select Operator [SEL_90] (rows=348477373 width=88)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                        Merge Join Operator [MERGEJOIN_89] (rows=348477373 width=88)
                          Conds:RS_12._col2=RS_114._col0(Inner),Output:["_col1","_col5","_col7","_col8"]
                        <-Map 12 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_114]
                            PartitionCols:_col0
                            Select Operator [SEL_113] (rows=73049 width=1119)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_112] (rows=73049 width=1119)
                                predicate:d_date_sk is not null
                                TableScan [TS_6] (rows=73049 width=1119)
                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_qoy"]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_12]
                            PartitionCols:_col2
                            Merge Join Operator [MERGEJOIN_83] (rows=316797605 width=88)
                              Conds:RS_106._col0=RS_111._col1(Inner),Output:["_col1","_col2","_col5"]
                            <-Map 1 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_106]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_105]
                            <-Map 11 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_111]
                                PartitionCols:_col1
                                Select Operator [SEL_110] (rows=287997817 width=88)
                                  Output:["_col0","_col1","_col3"]
                                  Filter Operator [FIL_109] (rows=287997817 width=88)
                                    predicate:(ss_addr_sk is null and ss_item_sk is not null and ss_sold_date_sk is not null)
                                    TableScan [TS_3] (rows=575995635 width=88)
                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_addr_sk","ss_ext_sales_price"]
                <-Reducer 8 [CONTAINS]
                  Reduce Output Operator [RS_98]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_97] (rows=609832848 width=108)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Select Operator [SEL_95] (rows=87121617 width=135)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                        Merge Join Operator [MERGEJOIN_94] (rows=87121617 width=135)
                          Conds:RS_28._col0=RS_125._col0(Inner),Output:["_col3","_col5","_col7","_col8"]
                        <-Map 14 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_125]
                            PartitionCols:_col0
                            Select Operator [SEL_124] (rows=73049 width=1119)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_123] (rows=73049 width=1119)
                                predicate:d_date_sk is not null
                                TableScan [TS_22] (rows=73049 width=1119)
                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_qoy"]
                        <-Reducer 7 [SIMPLE_EDGE]
                          SHUFFLE [RS_28]
                            PartitionCols:_col0
                            Merge Join Operator [MERGEJOIN_85] (rows=79201469 width=135)
                              Conds:RS_122._col1=RS_107._col0(Inner),Output:["_col0","_col3","_col5"]
                            <-Map 1 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_107]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_105]
                            <-Map 13 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_122]
                                PartitionCols:_col1
                                Select Operator [SEL_121] (rows=72001334 width=135)
                                  Output:["_col0","_col1","_col3"]
                                  Filter Operator [FIL_120] (rows=72001334 width=135)
                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null and ws_web_page_sk is null)
                                    TableScan [TS_16] (rows=144002668 width=135)
                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_web_page_sk","ws_ext_sales_price"]

