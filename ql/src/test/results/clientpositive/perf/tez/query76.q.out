PREHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 15 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 11 <- Map 16 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 4 <- Union 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 7 <- Map 12 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 8 <- Map 13 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 9 <- Map 14 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE), Union 3 (CONTAINS)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_189]
        Limit [LIM_188] (rows=100 width=408)
          Number of rows:100
          Select Operator [SEL_187] (rows=5600 width=408)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_186]
              Group By Operator [GBY_185] (rows=5600 width=408)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
              <-Union 3 [SIMPLE_EDGE]
                <-Reducer 11 [CONTAINS]
                  Reduce Output Operator [RS_173]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_172] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Top N Key Operator [TNK_171] (rows=26219002 width=388)
                        keys:_col0, _col1, _col2, _col3, _col4,top n:100
                        Select Operator [SEL_169] (rows=1433911 width=399)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Merge Join Operator [MERGEJOIN_168] (rows=1433911 width=209)
                            Conds:RS_46._col0=RS_201._col0(Inner),Output:["_col2","_col4","_col6","_col7"]
                          <-Map 16 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_201]
                              PartitionCols:_col0
                              Select Operator [SEL_200] (rows=73049 width=12)
                                Output:["_col0","_col1","_col2"]
                                Filter Operator [FIL_199] (rows=73049 width=12)
                                  predicate:d_date_sk is not null
                                  TableScan [TS_40] (rows=73049 width=12)
                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                          <-Reducer 10 [SIMPLE_EDGE]
                            SHUFFLE [RS_46]
                              PartitionCols:_col0
                              Merge Join Operator [MERGEJOIN_154] (rows=1433911 width=205)
                                Conds:RS_198._col1=RS_181._col0(Inner),Output:["_col0","_col2","_col4"]
                              <-Map 6 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_181]
                                  PartitionCols:_col0
                                  Select Operator [SEL_178] (rows=462000 width=94)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_177] (rows=462000 width=94)
                                      predicate:i_item_sk is not null
                                      TableScan [TS_3] (rows=462000 width=94)
                                        default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                              <-Map 15 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_198]
                                  PartitionCols:_col1
                                  Select Operator [SEL_197] (rows=1433911 width=119)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_196] (rows=1433911 width=123)
                                      predicate:(cs_warehouse_sk is null and cs_sold_date_sk is not null and cs_item_sk is not null)
                                      TableScan [TS_34] (rows=287989836 width=123)
                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_warehouse_sk","cs_item_sk","cs_ext_sales_price"]
                <-Reducer 2 [CONTAINS]
                  Reduce Output Operator [RS_161]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_160] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Top N Key Operator [TNK_159] (rows=26219002 width=388)
                        keys:_col0, _col1, _col2, _col3, _col4,top n:100
                        Select Operator [SEL_157] (rows=24749363 width=387)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Merge Join Operator [MERGEJOIN_156] (rows=24749363 width=204)
                            Conds:RS_176._col0=RS_14._col2(Inner),Output:["_col1","_col2","_col4","_col7"]
                          <-Map 1 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_176]
                              PartitionCols:_col0
                              Select Operator [SEL_175] (rows=73049 width=12)
                                Output:["_col0","_col1","_col2"]
                                Filter Operator [FIL_174] (rows=73049 width=12)
                                  predicate:d_date_sk is not null
                                  TableScan [TS_0] (rows=73049 width=12)
                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                          <-Reducer 7 [SIMPLE_EDGE]
                            SHUFFLE [RS_14]
                              PartitionCols:_col2
                              Merge Join Operator [MERGEJOIN_150] (rows=24749363 width=200)
                                Conds:RS_179._col0=RS_184._col1(Inner),Output:["_col1","_col2","_col4"]
                              <-Map 6 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_179]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_178]
                              <-Map 12 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_184]
                                  PartitionCols:_col1
                                  Select Operator [SEL_183] (rows=24749363 width=114)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_182] (rows=24749363 width=118)
                                      predicate:(ss_addr_sk is null and ss_sold_date_sk is not null and ss_item_sk is not null)
                                      TableScan [TS_6] (rows=575995635 width=118)
                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_addr_sk","ss_ext_sales_price"]
                <-Reducer 9 [CONTAINS]
                  Reduce Output Operator [RS_167]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_166] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Top N Key Operator [TNK_165] (rows=26219002 width=388)
                        keys:_col0, _col1, _col2, _col3, _col4,top n:100
                        Select Operator [SEL_163] (rows=35728 width=394)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Merge Join Operator [MERGEJOIN_162] (rows=35728 width=209)
                            Conds:RS_29._col0=RS_195._col0(Inner),Output:["_col2","_col4","_col6","_col7"]
                          <-Map 14 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_195]
                              PartitionCols:_col0
                              Select Operator [SEL_194] (rows=73049 width=12)
                                Output:["_col0","_col1","_col2"]
                                Filter Operator [FIL_193] (rows=73049 width=12)
                                  predicate:d_date_sk is not null
                                  TableScan [TS_23] (rows=73049 width=12)
                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                          <-Reducer 8 [SIMPLE_EDGE]
                            SHUFFLE [RS_29]
                              PartitionCols:_col0
                              Merge Join Operator [MERGEJOIN_152] (rows=35728 width=205)
                                Conds:RS_192._col1=RS_180._col0(Inner),Output:["_col0","_col2","_col4"]
                              <-Map 6 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_180]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_178]
                              <-Map 13 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_192]
                                  PartitionCols:_col1
                                  Select Operator [SEL_191] (rows=35728 width=119)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_190] (rows=35728 width=123)
                                      predicate:(ws_web_page_sk is null and ws_sold_date_sk is not null and ws_item_sk is not null)
                                      TableScan [TS_17] (rows=144002668 width=123)
                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_web_page_sk","ws_ext_sales_price"]

