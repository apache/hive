PREHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 16 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 11 (SIMPLE_EDGE)
Reducer 3 <- Map 12 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 5 <- Union 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 1 (SIMPLE_EDGE), Map 13 (SIMPLE_EDGE)
Reducer 8 <- Map 14 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 9 <- Map 1 (SIMPLE_EDGE), Map 15 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_183]
        Limit [LIM_182] (rows=100 width=408)
          Number of rows:100
          Select Operator [SEL_181] (rows=5600 width=408)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_180]
              Group By Operator [GBY_179] (rows=5600 width=408)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
              <-Union 4 [SIMPLE_EDGE]
                <-Reducer 10 [CONTAINS]
                  Reduce Output Operator [RS_167]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_166] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Top N Key Operator [TNK_165] (rows=26219002 width=388)
                        keys:_col0, _col1, _col2, _col3, _col4,sort order:+++++,top n:100
                        Select Operator [SEL_163] (rows=1433911 width=399)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Merge Join Operator [MERGEJOIN_162] (rows=1433911 width=209)
                            Conds:RS_45._col0=RS_195._col0(Inner),Output:["_col3","_col5","_col7","_col8"]
                          <-Map 16 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_195]
                              PartitionCols:_col0
                              Select Operator [SEL_194] (rows=73049 width=12)
                                Output:["_col0","_col1","_col2"]
                                Filter Operator [FIL_193] (rows=73049 width=12)
                                  predicate:d_date_sk is not null
                                  TableScan [TS_39] (rows=73049 width=12)
                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                          <-Reducer 9 [SIMPLE_EDGE]
                            SHUFFLE [RS_45]
                              PartitionCols:_col0
                              Merge Join Operator [MERGEJOIN_148] (rows=1433911 width=205)
                                Conds:RS_192._col2=RS_172._col0(Inner),Output:["_col0","_col3","_col5"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_172]
                                  PartitionCols:_col0
                                  Select Operator [SEL_169] (rows=462000 width=94)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_168] (rows=462000 width=94)
                                      predicate:i_item_sk is not null
                                      TableScan [TS_0] (rows=462000 width=94)
                                        default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                              <-Map 15 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_192]
                                  PartitionCols:_col2
                                  Select Operator [SEL_191] (rows=1433911 width=119)
                                    Output:["_col0","_col2","_col3"]
                                    Filter Operator [FIL_190] (rows=1433911 width=123)
                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null and cs_warehouse_sk is null)
                                      TableScan [TS_33] (rows=287989836 width=123)
                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_warehouse_sk","cs_item_sk","cs_ext_sales_price"]
                <-Reducer 3 [CONTAINS]
                  Reduce Output Operator [RS_155]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_154] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Top N Key Operator [TNK_153] (rows=26219002 width=388)
                        keys:_col0, _col1, _col2, _col3, _col4,sort order:+++++,top n:100
                        Select Operator [SEL_151] (rows=24749363 width=387)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Merge Join Operator [MERGEJOIN_150] (rows=24749363 width=204)
                            Conds:RS_12._col2=RS_178._col0(Inner),Output:["_col1","_col5","_col7","_col8"]
                          <-Map 12 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_178]
                              PartitionCols:_col0
                              Select Operator [SEL_177] (rows=73049 width=12)
                                Output:["_col0","_col1","_col2"]
                                Filter Operator [FIL_176] (rows=73049 width=12)
                                  predicate:d_date_sk is not null
                                  TableScan [TS_6] (rows=73049 width=12)
                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                          <-Reducer 2 [SIMPLE_EDGE]
                            SHUFFLE [RS_12]
                              PartitionCols:_col2
                              Merge Join Operator [MERGEJOIN_144] (rows=24749363 width=200)
                                Conds:RS_170._col0=RS_175._col1(Inner),Output:["_col1","_col2","_col5"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_170]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_169]
                              <-Map 11 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_175]
                                  PartitionCols:_col1
                                  Select Operator [SEL_174] (rows=24749363 width=114)
                                    Output:["_col0","_col1","_col3"]
                                    Filter Operator [FIL_173] (rows=24749363 width=118)
                                      predicate:(ss_addr_sk is null and ss_item_sk is not null and ss_sold_date_sk is not null)
                                      TableScan [TS_3] (rows=575995635 width=118)
                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_addr_sk","ss_ext_sales_price"]
                <-Reducer 8 [CONTAINS]
                  Reduce Output Operator [RS_161]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_160] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Top N Key Operator [TNK_159] (rows=26219002 width=388)
                        keys:_col0, _col1, _col2, _col3, _col4,sort order:+++++,top n:100
                        Select Operator [SEL_157] (rows=35728 width=394)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Merge Join Operator [MERGEJOIN_156] (rows=35728 width=209)
                            Conds:RS_28._col0=RS_189._col0(Inner),Output:["_col3","_col5","_col7","_col8"]
                          <-Map 14 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_189]
                              PartitionCols:_col0
                              Select Operator [SEL_188] (rows=73049 width=12)
                                Output:["_col0","_col1","_col2"]
                                Filter Operator [FIL_187] (rows=73049 width=12)
                                  predicate:d_date_sk is not null
                                  TableScan [TS_22] (rows=73049 width=12)
                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                          <-Reducer 7 [SIMPLE_EDGE]
                            SHUFFLE [RS_28]
                              PartitionCols:_col0
                              Merge Join Operator [MERGEJOIN_146] (rows=35728 width=205)
                                Conds:RS_186._col1=RS_171._col0(Inner),Output:["_col0","_col3","_col5"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_171]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_169]
                              <-Map 13 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_186]
                                  PartitionCols:_col1
                                  Select Operator [SEL_185] (rows=35728 width=119)
                                    Output:["_col0","_col1","_col3"]
                                    Filter Operator [FIL_184] (rows=35728 width=123)
                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null and ws_web_page_sk is null)
                                      TableScan [TS_16] (rows=144002668 width=123)
                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_web_page_sk","ws_ext_sales_price"]

