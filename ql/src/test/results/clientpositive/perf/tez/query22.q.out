PREHOOK: query: explain
select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from inventory
           ,date_dim
           ,item
           ,warehouse
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and inv_warehouse_sk = w_warehouse_sk
              and d_month_seq between 1212 and 1212 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@inventory
PREHOOK: Input: default@item
PREHOOK: Input: default@warehouse
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from inventory
           ,date_dim
           ,item
           ,warehouse
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and inv_warehouse_sk = w_warehouse_sk
              and d_month_seq between 1212 and 1212 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@inventory
POSTHOOK: Input: default@item
POSTHOOK: Input: default@warehouse
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 9 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_93]
        Limit [LIM_92] (rows=100 width=397)
          Number of rows:100
          Select Operator [SEL_91] (rows=32730675 width=397)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_90]
              Select Operator [SEL_89] (rows=32730675 width=397)
                Output:["_col0","_col1","_col2","_col3","_col4"]
                Group By Operator [GBY_88] (rows=32730675 width=413)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_23]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_22] (rows=32730675 width=413)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col3)","count(_col3)"],keys:_col7, _col8, _col9, _col10, 0L
                      Merge Join Operator [MERGEJOIN_75] (rows=6546135 width=391)
                        Conds:RS_18._col1=RS_87._col0(Inner),Output:["_col3","_col7","_col8","_col9","_col10"]
                      <-Map 9 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_87]
                          PartitionCols:_col0
                          Select Operator [SEL_86] (rows=462000 width=393)
                            Output:["_col0","_col1","_col2","_col3","_col4"]
                            Filter Operator [FIL_85] (rows=462000 width=393)
                              predicate:i_item_sk is not null
                              TableScan [TS_9] (rows=462000 width=393)
                                default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_brand","i_class","i_category","i_product_name"]
                      <-Reducer 3 [SIMPLE_EDGE]
                        SHUFFLE [RS_18]
                          PartitionCols:_col1
                          Merge Join Operator [MERGEJOIN_74] (rows=6546135 width=6)
                            Conds:RS_15._col2=RS_84._col0(Inner),Output:["_col1","_col3"]
                          <-Map 8 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_84]
                              PartitionCols:_col0
                              Select Operator [SEL_83] (rows=27 width=4)
                                Output:["_col0"]
                                Filter Operator [FIL_82] (rows=27 width=4)
                                  predicate:w_warehouse_sk is not null
                                  TableScan [TS_6] (rows=27 width=4)
                                    default@warehouse,warehouse,Tbl:COMPLETE,Col:COMPLETE,Output:["w_warehouse_sk"]
                          <-Reducer 2 [SIMPLE_EDGE]
                            SHUFFLE [RS_15]
                              PartitionCols:_col2
                              Merge Join Operator [MERGEJOIN_73] (rows=6546135 width=10)
                                Conds:RS_78._col0=RS_81._col0(Inner),Output:["_col1","_col2","_col3"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_78]
                                  PartitionCols:_col0
                                  Select Operator [SEL_77] (rows=37584000 width=15)
                                    Output:["_col0","_col1","_col2","_col3"]
                                    Filter Operator [FIL_76] (rows=37584000 width=15)
                                      predicate:(inv_date_sk is not null and inv_item_sk is not null and inv_warehouse_sk is not null)
                                      TableScan [TS_0] (rows=37584000 width=15)
                                        default@inventory,inventory,Tbl:COMPLETE,Col:COMPLETE,Output:["inv_date_sk","inv_item_sk","inv_warehouse_sk","inv_quantity_on_hand"]
                              <-Map 7 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_81]
                                  PartitionCols:_col0
                                  Select Operator [SEL_80] (rows=317 width=4)
                                    Output:["_col0"]
                                    Filter Operator [FIL_79] (rows=317 width=8)
                                      predicate:(d_month_seq BETWEEN 1212 AND 1223 and d_date_sk is not null)
                                      TableScan [TS_3] (rows=73049 width=8)
                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_month_seq"]

