PREHOOK: query: explain cbo
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ss_net_paid) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,sum(ws_net_paid) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (1998,1998+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 1998
         and t_s_secyear.year = 1998+1
         and t_w_firstyear.year = 1998
         and t_w_secyear.year = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 3,1,2
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
HiveSortLimit(sort0=[$2], sort1=[$0], sort2=[$1], dir0=[ASC], dir1=[ASC], dir2=[ASC], fetch=[100])
  HiveProject(customer_id=[$0], customer_first_name=[$2], customer_last_name=[$3])
    HiveJoin(condition=[=($0, $1)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject($f00=[$0])
        HiveJoin(condition=[AND(CASE(IS NOT NULL($3), CASE($8, >(/($5, $7), /($1, $3)), false), false), =($0, $6))], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[=($0, $4)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($0, $2)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveProject(c_customer_id=[$0], $f1=[$1])
                HiveAggregate(group=[{1}], agg#0=[sum($6)])
                  HiveJoin(condition=[=($0, $5)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
                      HiveTableScan(table=[[default, customer]], table:alias=[customer])
                    HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(ss_sold_date_sk=[$0], ss_customer_sk=[$1], ss_net_paid=[$2])
                        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                          HiveProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3], ss_net_paid=[$20])
                            HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                      HiveProject(d_date_sk=[$0])
                        HiveFilter(condition=[AND(=($1, 1999), IN($1, 1998, 1999))])
                          HiveProject(d_date_sk=[$0], d_year=[$6])
                            HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
              HiveProject($f0=[$0], $f1=[$1])
                HiveFilter(condition=[>($1, 0)])
                  HiveAggregate(group=[{1}], agg#0=[sum($4)])
                    HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(c_customer_sk=[$0], c_customer_id=[$1])
                        HiveTableScan(table=[[default, customer]], table:alias=[customer])
                      HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                        HiveProject(ss_sold_date_sk=[$0], ss_customer_sk=[$1], ss_net_paid=[$2])
                          HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                            HiveProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3], ss_net_paid=[$20])
                              HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                        HiveProject(d_date_sk=[$0])
                          HiveFilter(condition=[AND(=($1, 1998), IN($1, 1998, 1999))])
                            HiveProject(d_date_sk=[$0], d_year=[$6])
                              HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
            HiveProject(c_customer_id=[$0], $f1=[$1])
              HiveAggregate(group=[{1}], agg#0=[sum($4)])
                HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(c_customer_sk=[$0], c_customer_id=[$1])
                    HiveTableScan(table=[[default, customer]], table:alias=[customer])
                  HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$1], ws_net_paid=[$2])
                      HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                        HiveProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], ws_net_paid=[$29])
                          HiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                    HiveProject(d_date_sk=[$0])
                      HiveFilter(condition=[AND(=($1, 1999), IN($1, 1998, 1999))])
                        HiveProject(d_date_sk=[$0], d_year=[$6])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
          HiveProject(customer_id=[$0], year_total=[$1], CAST=[CAST(IS NOT NULL($1)):BOOLEAN])
            HiveFilter(condition=[>($1, 0)])
              HiveAggregate(group=[{1}], agg#0=[sum($4)])
                HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(c_customer_sk=[$0], c_customer_id=[$1])
                    HiveTableScan(table=[[default, customer]], table:alias=[customer])
                  HiveJoin(condition=[=($0, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$1], ws_net_paid=[$2])
                      HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($1))])
                        HiveProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4], ws_net_paid=[$29])
                          HiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                    HiveProject(d_date_sk=[$0])
                      HiveFilter(condition=[AND(=($1, 1998), IN($1, 1998, 1999))])
                        HiveProject(d_date_sk=[$0], d_year=[$6])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
      HiveProject(c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9])
        HiveTableScan(table=[[default, customer]], table:alias=[customer])

