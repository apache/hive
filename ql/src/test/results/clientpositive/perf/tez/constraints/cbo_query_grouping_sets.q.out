PREHOOK: query: EXPLAIN CBO
select  
        ca_country, ca_state, i_item_id,
         avg( cast(cs_quantity as numeric(12,2))) agg1,
         avg( cast(c_birth_year as numeric(12,2))) agg6,
         avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
from catalog_sales, customer_demographics cd1,
        customer, customer_address,
        date_dim,
        item
where cs_sold_date_sk = d_date_sk and
        cs_item_sk = i_item_sk and
        cs_bill_cdemo_sk = cd1.cd_demo_sk and
        cs_bill_customer_sk = c_customer_sk and
        cd1.cd_gender = 'M' and
        cd1.cd_education_status = 'College' and
        c_current_addr_sk = ca_address_sk and
        c_birth_month in (9,5) and
        d_year = 2001 and
        ca_state in ('AL','MS','TN')
group by rollup(i_item_id, ca_country, ca_state)
order by ca_country, ca_state, i_item_id NULLS FIRST
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: EXPLAIN CBO
select  
        ca_country, ca_state, i_item_id,
         avg( cast(cs_quantity as numeric(12,2))) agg1,
         avg( cast(c_birth_year as numeric(12,2))) agg6,
         avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
from catalog_sales, customer_demographics cd1,
        customer, customer_address,
        date_dim,
        item
where cs_sold_date_sk = d_date_sk and
        cs_item_sk = i_item_sk and
        cs_bill_cdemo_sk = cd1.cd_demo_sk and
        cs_bill_customer_sk = c_customer_sk and
        cd1.cd_gender = 'M' and
        cd1.cd_education_status = 'College' and
        c_current_addr_sk = ca_address_sk and
        c_birth_month in (9,5) and
        d_year = 2001 and
        ca_state in ('AL','MS','TN')
group by rollup(i_item_id, ca_country, ca_state)
order by ca_country, ca_state, i_item_id NULLS FIRST
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
HiveSortLimit(sort0=[$0], sort1=[$1], sort2=[$2], dir0=[ASC], dir1=[ASC], dir2=[ASC-nulls-first], fetch=[100])
  HiveProject(ca_country=[$2], ca_state=[$1], i_item_id=[$0], agg1=[CAST(/($3, $4)):DECIMAL(16, 6)], agg6=[CAST(/($5, $6)):DECIMAL(16, 6)], agg7=[CAST(/($7, $8)):DECIMAL(16, 6)])
    HiveAggregate(group=[{1, 6, 7}], groups=[[{1, 6, 7}, {1, 7}, {1}, {}]], agg#0=[sum($12)], agg#1=[count($12)], agg#2=[sum($4)], agg#3=[count($4)], agg#4=[sum($15)], agg#5=[count($15)])
      HiveJoin(condition=[=($11, $0)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveProject(i_item_sk=[$0], i_item_id=[$1])
          HiveTableScan(table=[[default, item]], table:alias=[item])
        HiveJoin(condition=[=($7, $0)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveJoin(condition=[=($1, $3)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveProject(c_customer_sk=[$0], c_current_addr_sk=[$4], CAST=[CAST($13):DECIMAL(12, 2)])
              HiveFilter(condition=[AND(IN($12, 9, 5), IS NOT NULL($4))])
                HiveTableScan(table=[[default, customer]], table:alias=[customer])
            HiveProject(ca_address_sk=[$0], ca_state=[$8], ca_country=[$10])
              HiveFilter(condition=[IN($8, _UTF-16LE'AL':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'MS':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'TN':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")])
                HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
          HiveProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$1], cs_bill_cdemo_sk=[$2], cs_item_sk=[$3], CAST=[$4], d_date_sk=[$5], cd_demo_sk=[$6], CAST0=[$7])
            HiveJoin(condition=[=($2, $6)], joinType=[inner], algorithm=[none], cost=[not available])
              HiveJoin(condition=[=($0, $5)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveProject(cs_sold_date_sk=[$0], cs_bill_customer_sk=[$3], cs_bill_cdemo_sk=[$4], cs_item_sk=[$15], CAST=[CAST($18):DECIMAL(12, 2)])
                  HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($4), IS NOT NULL($3))])
                    HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                HiveProject(d_date_sk=[$0])
                  HiveFilter(condition=[=($6, 2001)])
                    HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
              HiveProject(cd_demo_sk=[$0], CAST=[CAST($6):DECIMAL(12, 2)])
                HiveFilter(condition=[AND(=($3, _UTF-16LE'College'), =($1, _UTF-16LE'M'))])
                  HiveTableScan(table=[[default, customer_demographics]], table:alias=[cd1])

PREHOOK: query: EXPLAIN
select  
        ca_country, ca_state, i_item_id,
         avg( cast(cs_quantity as numeric(12,2))) agg1,
         avg( cast(c_birth_year as numeric(12,2))) agg6,
         avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
from catalog_sales, customer_demographics cd1,
        customer, customer_address,
        date_dim,
        item
where cs_sold_date_sk = d_date_sk and
        cs_item_sk = i_item_sk and
        cs_bill_cdemo_sk = cd1.cd_demo_sk and
        cs_bill_customer_sk = c_customer_sk and
        cd1.cd_gender = 'M' and
        cd1.cd_education_status = 'College' and
        c_current_addr_sk = ca_address_sk and
        c_birth_month in (9,5) and
        d_year = 2001 and
        ca_state in ('AL','MS','TN')
group by rollup(i_item_id, ca_country, ca_state)
order by ca_country, ca_state, i_item_id NULLS FIRST
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: EXPLAIN
select  
        ca_country, ca_state, i_item_id,
         avg( cast(cs_quantity as numeric(12,2))) agg1,
         avg( cast(c_birth_year as numeric(12,2))) agg6,
         avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
from catalog_sales, customer_demographics cd1,
        customer, customer_address,
        date_dim,
        item
where cs_sold_date_sk = d_date_sk and
        cs_item_sk = i_item_sk and
        cs_bill_cdemo_sk = cd1.cd_demo_sk and
        cs_bill_customer_sk = c_customer_sk and
        cd1.cd_gender = 'M' and
        cd1.cd_education_status = 'College' and
        c_current_addr_sk = ca_address_sk and
        c_birth_month in (9,5) and
        d_year = 2001 and
        ca_state in ('AL','MS','TN')
group by rollup(i_item_id, ca_country, ca_state)
order by ca_country, ca_state, i_item_id NULLS FIRST
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Output: hdfs://### HDFS PATH ###
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 8 <- Reducer 12 (BROADCAST_EDGE)
        Reducer 10 <- Map 13 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
        Reducer 12 <- Map 11 (CUSTOM_SIMPLE_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Map 14 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
        Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
        Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
        Reducer 9 <- Map 11 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: customer
                  filterExpr: ((c_birth_month) IN (9, 5) and c_current_addr_sk is not null) (type: boolean)
                  Statistics: Num rows: 80000000 Data size: 1257604572 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((c_birth_month) IN (9, 5) and c_current_addr_sk is not null) (type: boolean)
                    Statistics: Num rows: 12307692 Data size: 193477628 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: c_customer_sk (type: int), c_current_addr_sk (type: int), CAST( c_birth_year AS decimal(12,2)) (type: decimal(12,2))
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 12307692 Data size: 1428699984 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col1 (type: int)
                        Statistics: Num rows: 12307692 Data size: 1428699984 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int), _col2 (type: decimal(12,2))
            Execution mode: vectorized
        Map 11 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  filterExpr: (d_year = 2001) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (d_year = 2001) (type: boolean)
                    Statistics: Num rows: 652 Data size: 5216 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_date_sk (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: _col0 (type: int)
                        outputColumnNames: _col0
                        Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: min(_col0), max(_col0), bloom_filter(_col0, expectedEntries=1000000)
                          minReductionHashAggr: 0.99
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            null sort order: 
                            sort order: 
                            Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: binary)
            Execution mode: vectorized
        Map 13 
            Map Operator Tree:
                TableScan
                  alias: cd1
                  filterExpr: ((cd_education_status = 'College') and (cd_gender = 'M')) (type: boolean)
                  Statistics: Num rows: 1861800 Data size: 348156600 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((cd_education_status = 'College') and (cd_gender = 'M')) (type: boolean)
                    Statistics: Num rows: 103434 Data size: 19342158 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cd_demo_sk (type: int), CAST( cd_dep_count AS decimal(12,2)) (type: decimal(12,2))
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 103434 Data size: 11998344 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 103434 Data size: 11998344 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: decimal(12,2))
            Execution mode: vectorized
        Map 14 
            Map Operator Tree:
                TableScan
                  alias: item
                  Statistics: Num rows: 462000 Data size: 48048000 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    expressions: i_item_sk (type: int), i_item_id (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 462000 Data size: 48048000 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      null sort order: z
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 462000 Data size: 48048000 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: customer_address
                  filterExpr: (ca_state) IN ('AL', 'MS', 'TN') (type: boolean)
                  Statistics: Num rows: 40000000 Data size: 7480000000 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (ca_state) IN ('AL', 'MS', 'TN') (type: boolean)
                    Statistics: Num rows: 2352941 Data size: 439999967 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ca_address_sk (type: int), ca_state (type: string), ca_country (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 2352941 Data size: 439999967 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 2352941 Data size: 439999967 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: string), _col2 (type: string)
            Execution mode: vectorized
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: catalog_sales
                  filterExpr: (cs_sold_date_sk is not null and cs_bill_cdemo_sk is not null and cs_bill_customer_sk is not null and cs_sold_date_sk BETWEEN DynamicValue(RS_16_date_dim_d_date_sk_min) AND DynamicValue(RS_16_date_dim_d_date_sk_max) and in_bloom_filter(cs_sold_date_sk, DynamicValue(RS_16_date_dim_d_date_sk_bloom_filter))) (type: boolean)
                  Statistics: Num rows: 287989836 Data size: 5736761432 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (cs_sold_date_sk is not null and cs_bill_cdemo_sk is not null and cs_bill_customer_sk is not null and cs_sold_date_sk BETWEEN DynamicValue(RS_16_date_dim_d_date_sk_min) AND DynamicValue(RS_16_date_dim_d_date_sk_max) and in_bloom_filter(cs_sold_date_sk, DynamicValue(RS_16_date_dim_d_date_sk_bloom_filter))) (type: boolean)
                    Statistics: Num rows: 283692098 Data size: 5651150432 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: cs_sold_date_sk (type: int), cs_bill_customer_sk (type: int), cs_bill_cdemo_sk (type: int), cs_item_sk (type: int), CAST( cs_quantity AS decimal(12,2)) (type: decimal(12,2))
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
                      Statistics: Num rows: 283692098 Data size: 36136747832 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 283692098 Data size: 36136747832 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: decimal(12,2))
            Execution mode: vectorized
        Reducer 10 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col2 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col1, _col3, _col4, _col7
                Statistics: Num rows: 15983636 Data size: 3543711716 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col1 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col1 (type: int)
                  Statistics: Num rows: 15983636 Data size: 3543711716 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col3 (type: int), _col4 (type: decimal(12,2)), _col7 (type: decimal(12,2))
        Reducer 12 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), bloom_filter(VALUE._col2, expectedEntries=1000000)
                mode: final
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 1 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: binary)
        Reducer 2 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col1 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col0, _col2, _col4, _col5
                Statistics: Num rows: 723982 Data size: 168247562 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 723982 Data size: 168247562 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col2 (type: decimal(12,2)), _col4 (type: string), _col5 (type: string)
        Reducer 3 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col1 (type: int)
                outputColumnNames: _col2, _col4, _col5, _col9, _col10, _col13
                Statistics: Num rows: 940214 Data size: 338205010 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col9 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col9 (type: int)
                  Statistics: Num rows: 940214 Data size: 338205010 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col2 (type: decimal(12,2)), _col4 (type: string), _col5 (type: string), _col10 (type: decimal(12,2)), _col13 (type: decimal(12,2))
        Reducer 4 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col9 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col2, _col4, _col5, _col10, _col13, _col15
                Statistics: Num rows: 940214 Data size: 428465554 Basic stats: COMPLETE Column stats: COMPLETE
                Group By Operator
                  aggregations: sum(_col10), count(_col10), sum(_col2), count(_col2), sum(_col13), count(_col13)
                  keys: _col15 (type: string), _col4 (type: string), _col5 (type: string), 0L (type: bigint)
                  grouping sets: 0, 2, 3, 7
                  minReductionHashAggr: 0.6694646
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
                  Statistics: Num rows: 3760856 Data size: 2448317256 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: bigint)
                    null sort order: zzzz
                    sort order: ++++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: bigint)
                    Statistics: Num rows: 3760856 Data size: 2448317256 Basic stats: COMPLETE Column stats: COMPLETE
                    value expressions: _col4 (type: decimal(22,2)), _col5 (type: bigint), _col6 (type: decimal(22,2)), _col7 (type: bigint), _col8 (type: decimal(22,2)), _col9 (type: bigint)
        Reducer 5 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), count(VALUE._col1), sum(VALUE._col2), count(VALUE._col3), sum(VALUE._col4), count(VALUE._col5)
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: bigint)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col4, _col5, _col6, _col7, _col8, _col9
                Statistics: Num rows: 1243096 Data size: 809255496 Basic stats: COMPLETE Column stats: COMPLETE
                pruneGroupingSetId: true
                Top N Key Operator
                  sort order: +++
                  keys: _col2 (type: string), _col1 (type: string), _col0 (type: string)
                  null sort order: zza
                  Statistics: Num rows: 1243096 Data size: 809255496 Basic stats: COMPLETE Column stats: COMPLETE
                  top n: 100
                  Select Operator
                    expressions: _col2 (type: string), _col1 (type: string), _col0 (type: string), CAST( (_col4 / _col5) AS decimal(16,6)) (type: decimal(16,6)), CAST( (_col6 / _col7) AS decimal(16,6)) (type: decimal(16,6)), CAST( (_col8 / _col9) AS decimal(16,6)) (type: decimal(16,6))
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                    Statistics: Num rows: 1243096 Data size: 769476424 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                      null sort order: zza
                      sort order: +++
                      Statistics: Num rows: 1243096 Data size: 769476424 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col3 (type: decimal(16,6)), _col4 (type: decimal(16,6)), _col5 (type: decimal(16,6))
        Reducer 6 
            Execution mode: vectorized
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), VALUE._col0 (type: decimal(16,6)), VALUE._col1 (type: decimal(16,6)), VALUE._col2 (type: decimal(16,6))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 1243096 Data size: 769476424 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 100 Data size: 61900 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 100 Data size: 61900 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 9 
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                outputColumnNames: _col1, _col2, _col3, _col4
                Statistics: Num rows: 100578970 Data size: 12301626036 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col2 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col2 (type: int)
                  Statistics: Num rows: 100578970 Data size: 12301626036 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: int), _col3 (type: int), _col4 (type: decimal(12,2))

  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        ListSink

