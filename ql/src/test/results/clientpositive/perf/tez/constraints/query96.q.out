PREHOOK: query: explain
select  count(*) 
from store_sales
    ,household_demographics 
    ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk   
    and ss_hdemo_sk = household_demographics.hd_demo_sk 
    and ss_store_sk = s_store_sk
    and time_dim.t_hour = 8
    and time_dim.t_minute >= 30
    and household_demographics.hd_dep_count = 5
    and store.s_store_name = 'ese'
order by count(*)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@time_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  count(*) 
from store_sales
    ,household_demographics 
    ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk   
    and ss_hdemo_sk = household_demographics.hd_demo_sk 
    and ss_store_sk = s_store_sk
    and time_dim.t_hour = 8
    and time_dim.t_minute >= 30
    and household_demographics.hd_dep_count = 5
    and store.s_store_name = 'ese'
order by count(*)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@time_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 7 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 9 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 6 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_91]
        Group By Operator [GBY_90] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
          PARTITION_ONLY_SHUFFLE [RS_23]
            Group By Operator [GBY_22] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Merge Join Operator [MERGEJOIN_72] (rows=501695814 width=8)
                Conds:RS_18._col2=RS_89._col0(Inner)
              <-Map 9 [SIMPLE_EDGE] vectorized
                SHUFFLE [RS_89]
                  PartitionCols:_col0
                  Select Operator [SEL_88] (rows=155 width=4)
                    Output:["_col0"]
                    Filter Operator [FIL_87] (rows=155 width=92)
                      predicate:(s_store_name = 'ese')
                      TableScan [TS_9] (rows=1704 width=92)
                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
              <-Reducer 3 [SIMPLE_EDGE]
                SHUFFLE [RS_18]
                  PartitionCols:_col2
                  Merge Join Operator [MERGEJOIN_71] (rows=501695814 width=3)
                    Conds:RS_15._col1=RS_86._col0(Inner),Output:["_col2"]
                  <-Map 8 [SIMPLE_EDGE] vectorized
                    SHUFFLE [RS_86]
                      PartitionCols:_col0
                      Select Operator [SEL_85] (rows=655 width=4)
                        Output:["_col0"]
                        Filter Operator [FIL_84] (rows=655 width=8)
                          predicate:(hd_dep_count = 5)
                          TableScan [TS_6] (rows=7200 width=8)
                            default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count"]
                  <-Reducer 2 [SIMPLE_EDGE]
                    SHUFFLE [RS_15]
                      PartitionCols:_col1
                      Merge Join Operator [MERGEJOIN_70] (rows=501695814 width=7)
                        Conds:RS_83._col0=RS_75._col0(Inner),Output:["_col1","_col2"]
                      <-Map 6 [SIMPLE_EDGE] vectorized
                        PARTITION_ONLY_SHUFFLE [RS_75]
                          PartitionCols:_col0
                          Select Operator [SEL_74] (rows=2235 width=4)
                            Output:["_col0"]
                            Filter Operator [FIL_73] (rows=2235 width=12)
                              predicate:((t_hour = 8) and (t_minute >= 30))
                              TableScan [TS_3] (rows=86400 width=12)
                                default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                      <-Map 1 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_83]
                          PartitionCols:_col0
                          Select Operator [SEL_82] (rows=501695814 width=11)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_81] (rows=501695814 width=11)
                              predicate:(ss_sold_time_sk is not null and ss_hdemo_sk is not null and ss_store_sk is not null and ss_sold_time_sk BETWEEN DynamicValue(RS_13_time_dim_t_time_sk_min) AND DynamicValue(RS_13_time_dim_t_time_sk_max) and in_bloom_filter(ss_sold_time_sk, DynamicValue(RS_13_time_dim_t_time_sk_bloom_filter)))
                              TableScan [TS_0] (rows=575995635 width=11)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
                              <-Reducer 7 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_80]
                                  Group By Operator [GBY_79] (rows=1 width=12)
                                    Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                  <-Map 6 [CUSTOM_SIMPLE_EDGE] vectorized
                                    PARTITION_ONLY_SHUFFLE [RS_78]
                                      Group By Operator [GBY_77] (rows=1 width=12)
                                        Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                        Select Operator [SEL_76] (rows=2235 width=4)
                                          Output:["_col0"]
                                           Please refer to the previous Select Operator [SEL_74]

