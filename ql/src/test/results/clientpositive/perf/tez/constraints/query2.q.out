PREHOOK: query: explain
with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from web_sales) x
        union all
       (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from web_sales) x
        union all
       (select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Union 2 (CONTAINS)
Map 13 <- Union 14 (CONTAINS)
Map 15 <- Union 14 (CONTAINS)
Map 8 <- Union 2 (CONTAINS)
Reducer 10 <- Map 9 (SIMPLE_EDGE), Union 14 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Map 9 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Union 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 9 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 12 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 7 vectorized
      File Output Operator [FS_187]
        Select Operator [SEL_186] (rows=12881 width=788)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
        <-Reducer 6 [SIMPLE_EDGE]
          SHUFFLE [RS_57]
            Select Operator [SEL_56] (rows=12881 width=788)
              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
              Merge Join Operator [MERGEJOIN_146] (rows=12881 width=1572)
                Conds:RS_53.(_col0 - 53)=RS_54._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16"]
              <-Reducer 12 [SIMPLE_EDGE]
                SHUFFLE [RS_54]
                  PartitionCols:_col0
                  Merge Join Operator [MERGEJOIN_145] (rows=652 width=788)
                    Conds:RS_185._col0=RS_181._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                  <-Map 9 [SIMPLE_EDGE] vectorized
                    SHUFFLE [RS_181]
                      PartitionCols:_col0
                      Select Operator [SEL_177] (rows=652 width=4)
                        Output:["_col0"]
                        Filter Operator [FIL_173] (rows=652 width=8)
                          predicate:((d_year = 2001) and d_week_seq is not null)
                          TableScan [TS_8] (rows=73049 width=99)
                            default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_week_seq","d_day_name","d_year"]
                  <-Reducer 11 [SIMPLE_EDGE] vectorized
                    SHUFFLE [RS_185]
                      PartitionCols:_col0
                      Group By Operator [GBY_184] (rows=13152 width=788)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)","sum(VALUE._col4)","sum(VALUE._col5)","sum(VALUE._col6)"],keys:KEY._col0
                      <-Reducer 10 [SIMPLE_EDGE]
                        SHUFFLE [RS_40]
                          PartitionCols:_col0
                          Group By Operator [GBY_39] (rows=3182784 width=788)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col1)","sum(_col2)","sum(_col3)","sum(_col4)","sum(_col5)","sum(_col6)","sum(_col7)"],keys:_col0
                            Select Operator [SEL_37] (rows=430516591 width=143)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                              Merge Join Operator [MERGEJOIN_144] (rows=430516591 width=143)
                                Conds:Union 14._col0=RS_180._col0(Inner),Output:["_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10"]
                              <-Map 9 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_180]
                                  PartitionCols:_col0
                                  Select Operator [SEL_176] (rows=73049 width=36)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                    Filter Operator [FIL_172] (rows=73049 width=99)
                                      predicate:(d_week_seq is not null and (d_week_seq is not null or ((d_year = 2002) and d_week_seq is not null)))
                                       Please refer to the previous TableScan [TS_8]
                              <-Union 14 [SIMPLE_EDGE]
                                <-Map 13 [CONTAINS] vectorized
                                  Reduce Output Operator [RS_193]
                                    PartitionCols:_col0
                                    Select Operator [SEL_192] (rows=143966864 width=115)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_191] (rows=143966864 width=115)
                                        predicate:ws_sold_date_sk is not null
                                        TableScan [TS_157] (rows=144002668 width=115)
                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_ext_sales_price"]
                                <-Map 15 [CONTAINS] vectorized
                                  Reduce Output Operator [RS_196]
                                    PartitionCols:_col0
                                    Select Operator [SEL_195] (rows=286549727 width=115)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_194] (rows=286549727 width=115)
                                        predicate:cs_sold_date_sk is not null
                                        TableScan [TS_162] (rows=287989836 width=115)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_ext_sales_price"]
              <-Reducer 5 [SIMPLE_EDGE]
                SHUFFLE [RS_53]
                  PartitionCols:(_col0 - 53)
                  Merge Join Operator [MERGEJOIN_143] (rows=652 width=788)
                    Conds:RS_183._col0=RS_179._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                  <-Map 9 [SIMPLE_EDGE] vectorized
                    SHUFFLE [RS_179]
                      PartitionCols:_col0
                      Select Operator [SEL_175] (rows=652 width=4)
                        Output:["_col0"]
                        Filter Operator [FIL_171] (rows=652 width=8)
                          predicate:((d_year = 2002) and d_week_seq is not null and (d_week_seq is not null or ((d_year = 2002) and d_week_seq is not null)))
                           Please refer to the previous TableScan [TS_8]
                  <-Reducer 4 [SIMPLE_EDGE] vectorized
                    SHUFFLE [RS_183]
                      PartitionCols:_col0
                      Group By Operator [GBY_182] (rows=13152 width=788)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)","sum(VALUE._col4)","sum(VALUE._col5)","sum(VALUE._col6)"],keys:KEY._col0
                      <-Reducer 3 [SIMPLE_EDGE]
                        SHUFFLE [RS_17]
                          PartitionCols:_col0
                          Group By Operator [GBY_16] (rows=3182784 width=788)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col1)","sum(_col2)","sum(_col3)","sum(_col4)","sum(_col5)","sum(_col6)","sum(_col7)"],keys:_col0
                            Select Operator [SEL_14] (rows=430516591 width=143)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                              Merge Join Operator [MERGEJOIN_142] (rows=430516591 width=143)
                                Conds:Union 2._col0=RS_178._col0(Inner),Output:["_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10"]
                              <-Map 9 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_178]
                                  PartitionCols:_col0
                                  Select Operator [SEL_174] (rows=73049 width=36)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                    Filter Operator [FIL_170] (rows=73049 width=99)
                                      predicate:(d_week_seq is not null and (d_week_seq is not null or ((d_year = 2002) and d_week_seq is not null)))
                                       Please refer to the previous TableScan [TS_8]
                              <-Union 2 [SIMPLE_EDGE]
                                <-Map 1 [CONTAINS] vectorized
                                  Reduce Output Operator [RS_169]
                                    PartitionCols:_col0
                                    Select Operator [SEL_168] (rows=143966864 width=115)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_167] (rows=143966864 width=115)
                                        predicate:ws_sold_date_sk is not null
                                        TableScan [TS_147] (rows=144002668 width=115)
                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_ext_sales_price"]
                                <-Map 8 [CONTAINS] vectorized
                                  Reduce Output Operator [RS_190]
                                    PartitionCols:_col0
                                    Select Operator [SEL_189] (rows=286549727 width=115)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_188] (rows=286549727 width=115)
                                        predicate:cs_sold_date_sk is not null
                                        TableScan [TS_152] (rows=287989836 width=115)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_ext_sales_price"]

