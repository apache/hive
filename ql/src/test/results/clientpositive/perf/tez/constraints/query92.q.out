PREHOOK: query: explain
select  
   sum(ws_ext_discount_amt)  as `Excess Discount Amount` 
from 
    web_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 269
and i_item_sk = ws_item_sk 
and d_date between '1998-03-18' and 
        (cast('1998-03-18' as date) + 90 days)
and d_date_sk = ws_sold_date_sk 
and ws_ext_discount_amt  
     > ( 
         SELECT 
            1.3 * avg(ws_ext_discount_amt) 
         FROM 
            web_sales 
           ,date_dim
         WHERE 
              ws_item_sk = i_item_sk 
          and d_date between '1998-03-18' and
                             (cast('1998-03-18' as date) + 90 days)
          and d_date_sk = ws_sold_date_sk 
      ) 
order by sum(ws_ext_discount_amt)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  
   sum(ws_ext_discount_amt)  as `Excess Discount Amount` 
from 
    web_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 269
and i_item_sk = ws_item_sk 
and d_date between '1998-03-18' and 
        (cast('1998-03-18' as date) + 90 days)
and d_date_sk = ws_sold_date_sk 
and ws_ext_discount_amt  
     > ( 
         SELECT 
            1.3 * avg(ws_ext_discount_amt) 
         FROM 
            web_sales 
           ,date_dim
         WHERE 
              ws_item_sk = i_item_sk 
          and d_date between '1998-03-18' and
                             (cast('1998-03-18' as date) + 90 days)
          and d_date_sk = ws_sold_date_sk 
      ) 
order by sum(ws_ext_discount_amt)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 11 (BROADCAST_EDGE)
Reducer 11 <- Map 10 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 3 <- Map 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_137]
        Limit [LIM_136] (rows=1 width=224)
          Number of rows:100
          Select Operator [SEL_135] (rows=1 width=224)
            Output:["_col0"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_134]
              Select Operator [SEL_133] (rows=1 width=224)
                Output:["_col1"]
                Top N Key Operator [TNK_132] (rows=1 width=112)
                  keys:_col0,top n:100
                  Group By Operator [GBY_131] (rows=1 width=112)
                    Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                  <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                    PARTITION_ONLY_SHUFFLE [RS_36]
                      Group By Operator [GBY_35] (rows=1 width=112)
                        Output:["_col0"],aggregations:["sum(_col2)"]
                        Select Operator [SEL_34] (rows=2317 width=112)
                          Output:["_col2"]
                          Filter Operator [FIL_33] (rows=2317 width=112)
                            predicate:(_col2 > _col6)
                            Merge Join Operator [MERGEJOIN_108] (rows=6951 width=112)
                              Conds:RS_30._col4=RS_130._col0(Inner),Output:["_col2","_col6"]
                            <-Reducer 3 [SIMPLE_EDGE]
                              SHUFFLE [RS_30]
                                PartitionCols:_col4
                                Merge Join Operator [MERGEJOIN_106] (rows=222882 width=97)
                                  Conds:RS_27._col1=RS_111._col0(Inner),Output:["_col2","_col4"]
                                <-Map 10 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_111]
                                    PartitionCols:_col0
                                    Select Operator [SEL_110] (rows=669 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_109] (rows=669 width=7)
                                        predicate:(i_manufact_id = 269)
                                        TableScan [TS_6] (rows=462000 width=7)
                                          default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_manufact_id"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_27]
                                    PartitionCols:_col1
                                    Merge Join Operator [MERGEJOIN_105] (rows=15991229 width=115)
                                      Conds:RS_121._col0=RS_125._col0(Inner),Output:["_col1","_col2"]
                                    <-Map 1 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_121]
                                        PartitionCols:_col0
                                        Select Operator [SEL_119] (rows=143930905 width=119)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_117] (rows=143930905 width=119)
                                            predicate:(ws_ext_discount_amt is not null and ws_sold_date_sk is not null and ws_item_sk BETWEEN DynamicValue(RS_28_item_i_item_sk_min) AND DynamicValue(RS_28_item_i_item_sk_max) and in_bloom_filter(ws_item_sk, DynamicValue(RS_28_item_i_item_sk_bloom_filter)))
                                            TableScan [TS_0] (rows=144002668 width=119)
                                              default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_ext_discount_amt"]
                                            <-Reducer 11 [BROADCAST_EDGE] vectorized
                                              BROADCAST [RS_116]
                                                Group By Operator [GBY_115] (rows=1 width=12)
                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                <-Map 10 [CUSTOM_SIMPLE_EDGE] vectorized
                                                  SHUFFLE [RS_114]
                                                    Group By Operator [GBY_113] (rows=1 width=12)
                                                      Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                      Select Operator [SEL_112] (rows=669 width=4)
                                                        Output:["_col0"]
                                                         Please refer to the previous Select Operator [SEL_110]
                                    <-Map 9 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_125]
                                        PartitionCols:_col0
                                        Select Operator [SEL_124] (rows=8116 width=4)
                                          Output:["_col0"]
                                          Filter Operator [FIL_123] (rows=8116 width=98)
                                            predicate:CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-03-18 00:00:00' AND TIMESTAMP'1998-06-16 00:00:00'
                                            TableScan [TS_3] (rows=73049 width=98)
                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                            <-Reducer 8 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_130]
                                PartitionCols:_col0
                                Select Operator [SEL_129] (rows=6951 width=116)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_128] (rows=6951 width=124)
                                    predicate:CAST( (1.3 * (_col1 / _col2)) AS decimal(14,7)) is not null
                                    Group By Operator [GBY_127] (rows=6951 width=124)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0
                                    <-Reducer 7 [SIMPLE_EDGE]
                                      SHUFFLE [RS_20]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_19] (rows=55608 width=124)
                                          Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","count(_col2)"],keys:_col1
                                          Merge Join Operator [MERGEJOIN_107] (rows=15995224 width=115)
                                            Conds:RS_122._col0=RS_126._col0(Inner),Output:["_col1","_col2"]
                                          <-Map 1 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_122]
                                              PartitionCols:_col0
                                              Select Operator [SEL_120] (rows=143966864 width=119)
                                                Output:["_col0","_col1","_col2"]
                                                Filter Operator [FIL_118] (rows=143966864 width=119)
                                                  predicate:(ws_sold_date_sk is not null and ws_item_sk BETWEEN DynamicValue(RS_28_item_i_item_sk_min) AND DynamicValue(RS_28_item_i_item_sk_max) and in_bloom_filter(ws_item_sk, DynamicValue(RS_28_item_i_item_sk_bloom_filter)))
                                                   Please refer to the previous TableScan [TS_0]
                                          <-Map 9 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_126]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_124]

