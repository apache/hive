PREHOOK: query: explain
with customer_total_return as
(select sr_customer_sk as ctr_customer_sk
,sr_store_sk as ctr_store_sk
,sum(SR_FEE) as ctr_total_return
from store_returns
,date_dim
where sr_returned_date_sk = d_date_sk
and d_year =2000
group by sr_customer_sk
,sr_store_sk)
 select  c_customer_id
from customer_total_return ctr1
,store
,customer
where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
from customer_total_return ctr2
where ctr1.ctr_store_sk = ctr2.ctr_store_sk)
and s_store_sk = ctr1.ctr_store_sk
and s_state = 'NM'
and ctr1.ctr_customer_sk = c_customer_sk
order by c_customer_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store
PREHOOK: Input: default@store_returns
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with customer_total_return as
(select sr_customer_sk as ctr_customer_sk
,sr_store_sk as ctr_store_sk
,sum(SR_FEE) as ctr_total_return
from store_returns
,date_dim
where sr_returned_date_sk = d_date_sk
and d_year =2000
group by sr_customer_sk
,sr_store_sk)
 select  c_customer_id
from customer_total_return ctr1
,store
,customer
where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
from customer_total_return ctr2
where ctr1.ctr_store_sk = ctr2.ctr_store_sk)
and s_store_sk = ctr1.ctr_store_sk
and s_state = 'NM'
and ctr1.ctr_customer_sk = c_customer_sk
order by c_customer_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_returns
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 12 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 6 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 5 <- Map 4 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 6 <- Reducer 11 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 8 <- Map 12 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 3 vectorized
      File Output Operator [FS_166]
        Limit [LIM_165] (rows=100 width=100)
          Number of rows:100
          Select Operator [SEL_164] (rows=816091 width=100)
            Output:["_col0"]
          <-Reducer 2 [SIMPLE_EDGE]
            SHUFFLE [RS_52]
              Select Operator [SEL_51] (rows=816091 width=100)
                Output:["_col0"]
                Top N Key Operator [TNK_80] (rows=816091 width=100)
                  keys:_col1,top n:100
                  Merge Join Operator [MERGEJOIN_138] (rows=816091 width=100)
                    Conds:RS_140._col0=RS_49._col1(Inner),Output:["_col1"]
                  <-Map 1 [SIMPLE_EDGE] vectorized
                    SHUFFLE [RS_140]
                      PartitionCols:_col0
                      Select Operator [SEL_139] (rows=80000000 width=104)
                        Output:["_col0","_col1"]
                        TableScan [TS_0] (rows=80000000 width=104)
                          default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_customer_id"]
                  <-Reducer 6 [SIMPLE_EDGE]
                    SHUFFLE [RS_49]
                      PartitionCols:_col1
                      Select Operator [SEL_47] (rows=816091 width=225)
                        Output:["_col1"]
                        Filter Operator [FIL_46] (rows=816091 width=225)
                          predicate:(_col3 > _col4)
                          Merge Join Operator [MERGEJOIN_137] (rows=2448274 width=225)
                            Conds:RS_43._col2=RS_163._col1(Inner),Output:["_col1","_col3","_col4"]
                          <-Reducer 11 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_163]
                              PartitionCols:_col1
                              Select Operator [SEL_162] (rows=31 width=115)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_161] (rows=31 width=123)
                                  predicate:CAST( (_col1 / _col2) AS decimal(21,6)) is not null
                                  Group By Operator [GBY_160] (rows=31 width=123)
                                    Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","count(_col2)"],keys:_col1
                                    Select Operator [SEL_159] (rows=14291868 width=119)
                                      Output:["_col1","_col2"]
                                      Group By Operator [GBY_158] (rows=14291868 width=119)
                                        Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                      <-Reducer 10 [SIMPLE_EDGE]
                                        SHUFFLE [RS_31]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_30] (rows=17467258 width=119)
                                            Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col2, _col1
                                            Merge Join Operator [MERGEJOIN_136] (rows=17467258 width=107)
                                              Conds:RS_149._col0=RS_153._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 12 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_153]
                                                PartitionCols:_col0
                                                Select Operator [SEL_151] (rows=652 width=4)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_150] (rows=652 width=8)
                                                    predicate:(d_year = 2000)
                                                    TableScan [TS_8] (rows=73049 width=8)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                            <-Map 7 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_149]
                                                PartitionCols:_col0
                                                Select Operator [SEL_147] (rows=53634860 width=119)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_145] (rows=53634860 width=119)
                                                    predicate:(sr_store_sk is not null and sr_returned_date_sk is not null)
                                                    TableScan [TS_5] (rows=57591150 width=119)
                                                      default@store_returns,store_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["sr_returned_date_sk","sr_customer_sk","sr_store_sk","sr_fee"]
                          <-Reducer 5 [SIMPLE_EDGE]
                            SHUFFLE [RS_43]
                              PartitionCols:_col2
                              Merge Join Operator [MERGEJOIN_135] (rows=2369298 width=114)
                                Conds:RS_143._col0=RS_157._col1(Inner),Output:["_col1","_col2","_col3"]
                              <-Map 4 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_143]
                                  PartitionCols:_col0
                                  Select Operator [SEL_142] (rows=35 width=4)
                                    Output:["_col0"]
                                    Filter Operator [FIL_141] (rows=35 width=90)
                                      predicate:(s_state = 'NM')
                                      TableScan [TS_2] (rows=1704 width=90)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_state"]
                              <-Reducer 9 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_157]
                                  PartitionCols:_col1
                                  Select Operator [SEL_156] (rows=14291868 width=119)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_155] (rows=14291868 width=119)
                                      predicate:_col2 is not null
                                      Group By Operator [GBY_154] (rows=14291868 width=119)
                                        Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                      <-Reducer 8 [SIMPLE_EDGE]
                                        SHUFFLE [RS_16]
                                          PartitionCols:_col0, _col1
                                          Group By Operator [GBY_15] (rows=16855704 width=119)
                                            Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col2, _col1
                                            Merge Join Operator [MERGEJOIN_134] (rows=16855704 width=107)
                                              Conds:RS_148._col0=RS_152._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 12 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_152]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_151]
                                            <-Map 7 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_148]
                                                PartitionCols:_col0
                                                Select Operator [SEL_146] (rows=51757026 width=119)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_144] (rows=51757026 width=119)
                                                    predicate:(sr_customer_sk is not null and sr_store_sk is not null and sr_returned_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_5]

