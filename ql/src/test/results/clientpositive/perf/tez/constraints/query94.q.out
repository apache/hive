PREHOOK: query: explain
select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '1999-5-01' and 
           (cast('1999-5-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'TX'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@web_returns
PREHOOK: Input: default@web_sales
PREHOOK: Input: default@web_site
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '1999-5-01' and 
           (cast('1999-5-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'TX'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@web_returns
POSTHOOK: Input: default@web_sales
POSTHOOK: Input: default@web_site
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 11 (BROADCAST_EDGE)
Reducer 11 <- Map 10 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Map 14 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 3 <- Map 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 12 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 13 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 15 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 8 vectorized
      File Output Operator [FS_156]
        Group By Operator [GBY_155] (rows=1 width=232)
          Output:["_col0","_col1","_col2"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"]
        <-Reducer 7 [CUSTOM_SIMPLE_EDGE] vectorized
          PARTITION_ONLY_SHUFFLE [RS_154]
            Group By Operator [GBY_153] (rows=1 width=232)
              Output:["_col0","_col1","_col2"],aggregations:["count(_col0)","sum(_col1)","sum(_col2)"]
              Group By Operator [GBY_152] (rows=143895019 width=228)
                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
              <-Reducer 6 [SIMPLE_EDGE]
                SHUFFLE [RS_69]
                  PartitionCols:_col0
                  Group By Operator [GBY_68] (rows=143895019 width=228)
                    Output:["_col0","_col2","_col3"],aggregations:["sum(_col5)","sum(_col6)"],keys:_col4
                    Select Operator [SEL_41] (rows=143895019 width=229)
                      Output:["_col4","_col5","_col6"]
                      Filter Operator [FIL_40] (rows=143895019 width=229)
                        predicate:_col13 is null
                        Merge Join Operator [MERGEJOIN_125] (rows=222354329 width=229)
                          Conds:RS_37._col4=RS_151._col1(Left Outer),Output:["_col4","_col5","_col6","_col13"]
                        <-Reducer 15 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_151]
                            PartitionCols:_col1
                            Select Operator [SEL_150] (rows=8007986 width=8)
                              Output:["_col0","_col1"]
                              Group By Operator [GBY_149] (rows=8007986 width=4)
                                Output:["_col0"],keys:KEY._col0
                              <-Map 14 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_148]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_147] (rows=14398467 width=4)
                                    Output:["_col0"],keys:wr_order_number
                                    TableScan [TS_25] (rows=14398467 width=4)
                                      default@web_returns,wr1,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_order_number"]
                        <-Reducer 5 [SIMPLE_EDGE]
                          SHUFFLE [RS_37]
                            PartitionCols:_col4
                            Select Operator [SEL_36] (rows=143895019 width=231)
                              Output:["_col4","_col5","_col6"]
                              Merge Join Operator [MERGEJOIN_124] (rows=143895019 width=235)
                                Conds:RS_33._col4=RS_146._col0(Left Semi),Output:["_col3","_col4","_col5","_col6","_col14"],residual filter predicates:{(_col3 <> _col14)}
                              <-Map 13 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_146]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_145] (rows=143966743 width=7)
                                    Output:["_col0","_col1"],keys:_col0, _col1
                                    Select Operator [SEL_144] (rows=143966743 width=7)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_143] (rows=143966743 width=7)
                                        predicate:ws_warehouse_sk is not null
                                        TableScan [TS_22] (rows=144002668 width=7)
                                          default@web_sales,ws2,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number"]
                              <-Reducer 4 [SIMPLE_EDGE]
                                SHUFFLE [RS_33]
                                  PartitionCols:_col4
                                  Merge Join Operator [MERGEJOIN_123] (rows=143895019 width=231)
                                    Conds:RS_18._col2=RS_142._col0(Inner),Output:["_col3","_col4","_col5","_col6"]
                                  <-Map 12 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_142]
                                      PartitionCols:_col0
                                      Select Operator [SEL_141] (rows=12 width=91)
                                        Output:["_col0"]
                                        Filter Operator [FIL_140] (rows=12 width=92)
                                          predicate:(web_company_name = 'pri')
                                          TableScan [TS_9] (rows=84 width=92)
                                            default@web_site,web_site,Tbl:COMPLETE,Col:COMPLETE,Output:["web_site_sk","web_company_name"]
                                  <-Reducer 3 [SIMPLE_EDGE]
                                    SHUFFLE [RS_18]
                                      PartitionCols:_col2
                                      Merge Join Operator [MERGEJOIN_122] (rows=143895019 width=235)
                                        Conds:RS_15._col1=RS_128._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col6"]
                                      <-Map 10 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_128]
                                          PartitionCols:_col0
                                          Select Operator [SEL_127] (rows=784314 width=90)
                                            Output:["_col0"]
                                            Filter Operator [FIL_126] (rows=784314 width=90)
                                              predicate:(ca_state = 'TX')
                                              TableScan [TS_6] (rows=40000000 width=90)
                                                default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]
                                      <-Reducer 2 [SIMPLE_EDGE]
                                        SHUFFLE [RS_15]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_121] (rows=143895019 width=239)
                                            Conds:RS_136._col0=RS_139._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                                          <-Map 1 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_136]
                                              PartitionCols:_col0
                                              Select Operator [SEL_135] (rows=143895019 width=243)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                                Filter Operator [FIL_134] (rows=143895019 width=243)
                                                  predicate:(ws_web_site_sk is not null and ws_ship_addr_sk is not null and ws_ship_date_sk is not null and ws_ship_addr_sk BETWEEN DynamicValue(RS_16_customer_address_ca_address_sk_min) AND DynamicValue(RS_16_customer_address_ca_address_sk_max) and in_bloom_filter(ws_ship_addr_sk, DynamicValue(RS_16_customer_address_ca_address_sk_bloom_filter)))
                                                  TableScan [TS_0] (rows=144002668 width=243)
                                                    default@web_sales,ws1,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_ship_date_sk","ws_ship_addr_sk","ws_web_site_sk","ws_warehouse_sk","ws_order_number","ws_ext_ship_cost","ws_net_profit"]
                                                  <-Reducer 11 [BROADCAST_EDGE] vectorized
                                                    BROADCAST [RS_133]
                                                      Group By Operator [GBY_132] (rows=1 width=12)
                                                        Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                      <-Map 10 [CUSTOM_SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_131]
                                                          Group By Operator [GBY_130] (rows=1 width=12)
                                                            Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                            Select Operator [SEL_129] (rows=784314 width=4)
                                                              Output:["_col0"]
                                                               Please refer to the previous Select Operator [SEL_127]
                                          <-Map 9 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_139]
                                              PartitionCols:_col0
                                              Select Operator [SEL_138] (rows=8116 width=98)
                                                Output:["_col0"]
                                                Filter Operator [FIL_137] (rows=8116 width=98)
                                                  predicate:CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1999-05-01 00:00:00' AND TIMESTAMP'1999-06-30 00:00:00'
                                                  TableScan [TS_3] (rows=73049 width=98)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]

