PREHOOK: query: explain cbo
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
HiveSortLimit(sort0=[$0], sort1=[$1], sort2=[$2], sort3=[$4], sort4=[$6], dir0=[ASC], dir1=[ASC], dir2=[ASC], dir3=[ASC], dir4=[ASC], fetch=[100])
  HiveProject(cd_gender=[$0], cd_marital_status=[$1], cd_education_status=[$2], cnt1=[$5], cd_purchase_estimate=[$3], cnt2=[$5], cd_credit_rating=[$4], cnt3=[$5])
    HiveAggregate(group=[{6, 7, 8, 9, 10}], agg#0=[count()])
      HiveFilter(condition=[IS NULL($13)])
        HiveJoin(condition=[=($0, $14)], joinType=[left], algorithm=[none], cost=[not available])
          HiveProject(c_customer_sk=[$0], c_current_cdemo_sk=[$1], c_current_addr_sk=[$2], ca_address_sk=[$3], ca_state=[$4], cd_demo_sk=[$5], cd_gender=[$6], cd_marital_status=[$7], cd_education_status=[$8], cd_purchase_estimate=[$9], cd_credit_rating=[$10], literalTrue=[$11], ws_bill_customer_sk0=[$12])
            HiveFilter(condition=[IS NULL($11)])
              HiveJoin(condition=[=($0, $12)], joinType=[left], algorithm=[none], cost=[not available])
                HiveSemiJoin(condition=[=($0, $11)], joinType=[semi])
                  HiveJoin(condition=[=($5, $1)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveJoin(condition=[=($2, $3)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(c_customer_sk=[$0], c_current_cdemo_sk=[$2], c_current_addr_sk=[$4])
                        HiveFilter(condition=[AND(IS NOT NULL($2), IS NOT NULL($4))])
                          HiveTableScan(table=[[default, customer]], table:alias=[c])
                      HiveProject(ca_address_sk=[$0], ca_state=[$8])
                        HiveFilter(condition=[IN($8, _UTF-16LE'CO', _UTF-16LE'IL', _UTF-16LE'MN')])
                          HiveTableScan(table=[[default, customer_address]], table:alias=[ca])
                    HiveProject(cd_demo_sk=[$0], cd_gender=[$1], cd_marital_status=[$2], cd_education_status=[$3], cd_purchase_estimate=[$4], cd_credit_rating=[$5])
                      HiveTableScan(table=[[default, customer_demographics]], table:alias=[customer_demographics])
                  HiveProject(ss_customer_sk0=[$1])
                    HiveJoin(condition=[=($0, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(ss_sold_date_sk=[$0], ss_customer_sk=[$3])
                        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($3))])
                          HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                      HiveProject(d_date_sk=[$0])
                        HiveFilter(condition=[AND(=($6, 1999), BETWEEN(false, $8, 1, 3))])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                HiveProject(literalTrue=[true], ws_bill_customer_sk0=[$0])
                  HiveAggregate(group=[{1}])
                    HiveJoin(condition=[=($0, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(ws_sold_date_sk=[$0], ws_bill_customer_sk=[$4])
                        HiveFilter(condition=[AND(IS NOT NULL($4), IS NOT NULL($0))])
                          HiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                      HiveProject(d_date_sk=[$0])
                        HiveFilter(condition=[AND(=($6, 1999), BETWEEN(false, $8, 1, 3))])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
          HiveProject(literalTrue=[true], cs_ship_customer_sk0=[$0])
            HiveAggregate(group=[{1}])
              HiveJoin(condition=[=($0, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveProject(cs_sold_date_sk=[$0], cs_ship_customer_sk=[$7])
                  HiveFilter(condition=[AND(IS NOT NULL($7), IS NOT NULL($0))])
                    HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                HiveProject(d_date_sk=[$0])
                  HiveFilter(condition=[AND(=($6, 1999), BETWEEN(false, $8, 1, 3))])
                    HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

