PREHOOK: query: explain
select  substr(r_reason_desc,1,20)
       ,avg(ws_quantity)
       ,avg(wr_refunded_cash)
       ,avg(wr_fee)
 from web_sales, web_returns, web_page, customer_demographics cd1,
      customer_demographics cd2, customer_address, date_dim, reason 
 where ws_web_page_sk = wp_web_page_sk
   and ws_item_sk = wr_item_sk
   and ws_order_number = wr_order_number
   and ws_sold_date_sk = d_date_sk and d_year = 1998
   and cd1.cd_demo_sk = wr_refunded_cdemo_sk 
   and cd2.cd_demo_sk = wr_returning_cdemo_sk
   and ca_address_sk = wr_refunded_addr_sk
   and r_reason_sk = wr_reason_sk
   and
   (
    (
     cd1.cd_marital_status = 'M'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = '4 yr Degree'
     and 
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 100.00 and 150.00
    )
   or
    (
     cd1.cd_marital_status = 'D'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Primary' 
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 50.00 and 100.00
    )
   or
    (
     cd1.cd_marital_status = 'U'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Advanced Degree'
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 150.00 and 200.00
    )
   )
   and
   (
    (
     ca_country = 'United States'
     and
     ca_state in ('KY', 'GA', 'NM')
     and ws_net_profit between 100 and 200  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('MT', 'OR', 'IN')
     and ws_net_profit between 150 and 300  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('WI', 'MO', 'WV')
     and ws_net_profit between 50 and 250  
    )
   )
group by r_reason_desc
order by substr(r_reason_desc,1,20)
        ,avg(ws_quantity)
        ,avg(wr_refunded_cash)
        ,avg(wr_fee)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@reason
PREHOOK: Input: default@web_page
PREHOOK: Input: default@web_returns
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  substr(r_reason_desc,1,20)
       ,avg(ws_quantity)
       ,avg(wr_refunded_cash)
       ,avg(wr_fee)
 from web_sales, web_returns, web_page, customer_demographics cd1,
      customer_demographics cd2, customer_address, date_dim, reason 
 where ws_web_page_sk = wp_web_page_sk
   and ws_item_sk = wr_item_sk
   and ws_order_number = wr_order_number
   and ws_sold_date_sk = d_date_sk and d_year = 1998
   and cd1.cd_demo_sk = wr_refunded_cdemo_sk 
   and cd2.cd_demo_sk = wr_returning_cdemo_sk
   and ca_address_sk = wr_refunded_addr_sk
   and r_reason_sk = wr_reason_sk
   and
   (
    (
     cd1.cd_marital_status = 'M'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = '4 yr Degree'
     and 
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 100.00 and 150.00
    )
   or
    (
     cd1.cd_marital_status = 'D'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Primary' 
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 50.00 and 100.00
    )
   or
    (
     cd1.cd_marital_status = 'U'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Advanced Degree'
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 150.00 and 200.00
    )
   )
   and
   (
    (
     ca_country = 'United States'
     and
     ca_state in ('KY', 'GA', 'NM')
     and ws_net_profit between 100 and 200  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('MT', 'OR', 'IN')
     and ws_net_profit between 150 and 300  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('WI', 'MO', 'WV')
     and ws_net_profit between 50 and 250  
    )
   )
group by r_reason_desc
order by substr(r_reason_desc,1,20)
        ,avg(ws_quantity)
        ,avg(wr_refunded_cash)
        ,avg(wr_fee)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@reason
POSTHOOK: Input: default@web_page
POSTHOOK: Input: default@web_returns
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 8 (BROADCAST_EDGE)
Reducer 10 <- Map 13 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 11 <- Map 14 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Map 14 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Reducer 12 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 15 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 8 <- Map 7 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_207]
        Limit [LIM_206] (rows=72 width=832)
          Number of rows:100
          Select Operator [SEL_205] (rows=72 width=832)
            Output:["_col0","_col1","_col2","_col3"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_204]
              Select Operator [SEL_203] (rows=72 width=832)
                Output:["_col4","_col5","_col6","_col7"]
                Group By Operator [GBY_202] (rows=72 width=353)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)","sum(VALUE._col2)","count(VALUE._col3)","sum(VALUE._col4)","count(VALUE._col5)"],keys:KEY._col0
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_43]
                    PartitionCols:_col0
                    Group By Operator [GBY_42] (rows=576 width=353)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col3)","count(_col3)","sum(_col27)","count(_col27)","sum(_col26)","count(_col26)"],keys:_col36
                      Merge Join Operator [MERGEJOIN_177] (rows=5749608 width=319)
                        Conds:RS_38._col24=RS_201._col0(Inner),Output:["_col3","_col26","_col27","_col36"]
                      <-Map 15 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_201]
                          PartitionCols:_col0
                          Select Operator [SEL_200] (rows=72 width=101)
                            Output:["_col0","_col1"]
                            TableScan [TS_28] (rows=72 width=101)
                              default@reason,reason,Tbl:COMPLETE,Col:COMPLETE,Output:["r_reason_sk","r_reason_desc"]
                      <-Reducer 3 [SIMPLE_EDGE]
                        SHUFFLE [RS_38]
                          PartitionCols:_col24
                          Filter Operator [FIL_36] (rows=5749608 width=285)
                            predicate:(((_col29 and _col4) or (_col30 and _col5) or (_col31 and _col6)) and ((_col14 and _col15 and _col7) or (_col16 and _col17 and _col8) or (_col18 and _col19 and _col9)))
                            Merge Join Operator [MERGEJOIN_176] (rows=20443061 width=285)
                              Conds:RS_33._col1, _col2=RS_34._col9, _col14(Inner),Output:["_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col14","_col15","_col16","_col17","_col18","_col19","_col24","_col26","_col27","_col29","_col30","_col31"]
                            <-Reducer 12 [SIMPLE_EDGE]
                              SHUFFLE [RS_34]
                                PartitionCols:_col9, _col14
                                Select Operator [SEL_27] (rows=2086007 width=213)
                                  Output:["_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col13","_col14","_col15","_col16","_col18","_col19","_col20"]
                                  Merge Join Operator [MERGEJOIN_175] (rows=2086007 width=213)
                                    Conds:RS_24._col1, _col13, _col14=RS_198._col0, _col1, _col2(Inner),Output:["_col0","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col18","_col19","_col20","_col21","_col22","_col23"]
                                  <-Map 14 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_198]
                                      PartitionCols:_col0, _col1, _col2
                                      Select Operator [SEL_196] (rows=265971 width=207)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                        Filter Operator [FIL_195] (rows=265971 width=183)
                                          predicate:((cd_marital_status) IN ('M', 'D', 'U') and (cd_education_status) IN ('4 yr Degree', 'Primary', 'Advanced Degree'))
                                          TableScan [TS_15] (rows=1861800 width=183)
                                            default@customer_demographics,cd1,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_marital_status","cd_education_status"]
                                  <-Reducer 11 [SIMPLE_EDGE]
                                    SHUFFLE [RS_24]
                                      PartitionCols:_col1, _col13, _col14
                                      Merge Join Operator [MERGEJOIN_174] (rows=2086007 width=371)
                                        Conds:RS_21._col3=RS_199._col0(Inner),Output:["_col0","_col1","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col13","_col14"]
                                      <-Map 14 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_199]
                                          PartitionCols:_col0
                                          Select Operator [SEL_197] (rows=265971 width=183)
                                            Output:["_col0","_col1","_col2"]
                                             Please refer to the previous Filter Operator [FIL_195]
                                      <-Reducer 10 [SIMPLE_EDGE]
                                        SHUFFLE [RS_21]
                                          PartitionCols:_col3
                                          Merge Join Operator [MERGEJOIN_173] (rows=11975292 width=245)
                                            Conds:RS_191._col2=RS_194._col0(Inner),Output:["_col0","_col1","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11"]
                                          <-Map 13 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_194]
                                              PartitionCols:_col0
                                              Select Operator [SEL_193] (rows=3529412 width=16)
                                                Output:["_col0","_col1","_col2","_col3"]
                                                Filter Operator [FIL_192] (rows=3529412 width=187)
                                                  predicate:((ca_state) IN ('KY', 'GA', 'NM', 'MT', 'OR', 'IN', 'WI', 'MO', 'WV') and (ca_country = 'United States'))
                                                  TableScan [TS_9] (rows=40000000 width=187)
                                                    default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state","ca_country"]
                                          <-Map 9 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_191]
                                              PartitionCols:_col2
                                              Select Operator [SEL_190] (rows=11975292 width=237)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                Filter Operator [FIL_189] (rows=11975292 width=237)
                                                  predicate:(wr_refunded_addr_sk is not null and wr_returning_cdemo_sk is not null and wr_refunded_cdemo_sk is not null and wr_reason_sk is not null)
                                                  TableScan [TS_6] (rows=14398467 width=237)
                                                    default@web_returns,web_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_item_sk","wr_refunded_cdemo_sk","wr_refunded_addr_sk","wr_returning_cdemo_sk","wr_reason_sk","wr_order_number","wr_fee","wr_refunded_cash"]
                            <-Reducer 2 [SIMPLE_EDGE]
                              SHUFFLE [RS_33]
                                PartitionCols:_col1, _col2
                                Merge Join Operator [MERGEJOIN_172] (rows=143931136 width=35)
                                  Conds:RS_188._col0=RS_180._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
                                <-Map 7 [SIMPLE_EDGE] vectorized
                                  PARTITION_ONLY_SHUFFLE [RS_180]
                                    PartitionCols:_col0
                                    Select Operator [SEL_179] (rows=652 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_178] (rows=652 width=8)
                                        predicate:(d_year = 1998)
                                        TableScan [TS_3] (rows=73049 width=8)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                <-Map 1 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_188]
                                    PartitionCols:_col0
                                    Select Operator [SEL_187] (rows=143931136 width=39)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
                                      Filter Operator [FIL_186] (rows=143931136 width=243)
                                        predicate:(((ws_sales_price >= 100) or (ws_sales_price <= 150) or (ws_sales_price >= 50) or (ws_sales_price <= 100) or (ws_sales_price >= 150) or (ws_sales_price <= 200)) and ((ws_net_profit >= 100) or (ws_net_profit <= 200) or (ws_net_profit >= 150) or (ws_net_profit <= 300) or (ws_net_profit >= 50) or (ws_net_profit <= 250)) and ws_sold_date_sk is not null and ws_web_page_sk is not null and ws_sold_date_sk BETWEEN DynamicValue(RS_31_date_dim_d_date_sk_min) AND DynamicValue(RS_31_date_dim_d_date_sk_max) and in_bloom_filter(ws_sold_date_sk, DynamicValue(RS_31_date_dim_d_date_sk_bloom_filter)))
                                        TableScan [TS_0] (rows=144002668 width=243)
                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_web_page_sk","ws_order_number","ws_quantity","ws_sales_price","ws_net_profit"]
                                        <-Reducer 8 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_185]
                                            Group By Operator [GBY_184] (rows=1 width=12)
                                              Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                            <-Map 7 [CUSTOM_SIMPLE_EDGE] vectorized
                                              PARTITION_ONLY_SHUFFLE [RS_183]
                                                Group By Operator [GBY_182] (rows=1 width=12)
                                                  Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                  Select Operator [SEL_181] (rows=652 width=4)
                                                    Output:["_col0"]
                                                     Please refer to the previous Select Operator [SEL_179]

