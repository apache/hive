PREHOOK: query: explain cbo
with ss as (
 select
          i_item_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id in (select
  i_item_id
from
 item
where i_category in ('Children'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 9
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 cs as (
 select
          i_item_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Children'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 9
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 ws as (
 select
          i_item_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Children'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 9
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6
 group by i_item_id)
  select   
  i_item_id
,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_item_id
 order by i_item_id
      ,total_sales
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo
with ss as (
 select
          i_item_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id in (select
  i_item_id
from
 item
where i_category in ('Children'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 9
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 cs as (
 select
          i_item_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Children'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 9
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 ws as (
 select
          i_item_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Children'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 1999
 and     d_moy                   = 9
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6
 group by i_item_id)
  select   
  i_item_id
,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_item_id
 order by i_item_id
      ,total_sales
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
HiveSortLimit(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[100])
  HiveProject($f0=[$0], $f1=[$1])
    HiveAggregate(group=[{0}], agg#0=[sum($1)])
      HiveProject($f0=[$0], $f1=[$1])
        HiveUnion(all=[true])
          HiveProject(i_item_id=[$0], $f1=[$1])
            HiveAggregate(group=[{1}], agg#0=[sum($7)])
              HiveJoin(condition=[=($5, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[=($1, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(i_item_sk=[$0], i_item_id=[$1])
                    HiveTableScan(table=[[default, item]], table:alias=[item])
                  HiveProject(i_item_id=[$0])
                    HiveAggregate(group=[{1}])
                      HiveFilter(condition=[=($12, _UTF-16LE'Children')])
                        HiveTableScan(table=[[default, item]], table:alias=[item])
                HiveProject(ca_address_sk=[$0], ss_sold_date_sk=[$1], ss_item_sk=[$2], ss_addr_sk=[$3], ss_ext_sales_price=[$4], d_date_sk=[$5])
                  HiveJoin(condition=[=($3, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(ca_address_sk=[$0])
                      HiveFilter(condition=[=($11, -6)])
                        HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
                    HiveJoin(condition=[=($0, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_addr_sk=[$6], ss_ext_sales_price=[$15])
                        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($6))])
                          HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])
                      HiveProject(d_date_sk=[$0])
                        HiveFilter(condition=[AND(=($6, 1999), =($8, 9))])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
          HiveProject(i_item_id=[$0], $f1=[$1])
            HiveAggregate(group=[{1}], agg#0=[sum($7)])
              HiveJoin(condition=[=($6, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[=($1, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(i_item_sk=[$0], i_item_id=[$1])
                    HiveTableScan(table=[[default, item]], table:alias=[item])
                  HiveProject(i_item_id=[$0])
                    HiveAggregate(group=[{1}])
                      HiveFilter(condition=[=($12, _UTF-16LE'Children')])
                        HiveTableScan(table=[[default, item]], table:alias=[item])
                HiveProject(ca_address_sk=[$0], cs_sold_date_sk=[$1], cs_bill_addr_sk=[$2], cs_item_sk=[$3], cs_ext_sales_price=[$4], d_date_sk=[$5])
                  HiveJoin(condition=[=($2, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(ca_address_sk=[$0])
                      HiveFilter(condition=[=($11, -6)])
                        HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
                    HiveJoin(condition=[=($0, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(cs_sold_date_sk=[$0], cs_bill_addr_sk=[$6], cs_item_sk=[$15], cs_ext_sales_price=[$23])
                        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($6))])
                          HiveTableScan(table=[[default, catalog_sales]], table:alias=[catalog_sales])
                      HiveProject(d_date_sk=[$0])
                        HiveFilter(condition=[AND(=($6, 1999), =($8, 9))])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
          HiveProject(i_item_id=[$0], $f1=[$1])
            HiveAggregate(group=[{1}], agg#0=[sum($7)])
              HiveJoin(condition=[=($5, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveJoin(condition=[=($1, $2)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(i_item_sk=[$0], i_item_id=[$1])
                    HiveTableScan(table=[[default, item]], table:alias=[item])
                  HiveProject(i_item_id=[$0])
                    HiveAggregate(group=[{1}])
                      HiveFilter(condition=[=($12, _UTF-16LE'Children')])
                        HiveTableScan(table=[[default, item]], table:alias=[item])
                HiveProject(ca_address_sk=[$0], ws_sold_date_sk=[$1], ws_item_sk=[$2], ws_bill_addr_sk=[$3], ws_ext_sales_price=[$4], d_date_sk=[$5])
                  HiveJoin(condition=[=($3, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                    HiveProject(ca_address_sk=[$0])
                      HiveFilter(condition=[=($11, -6)])
                        HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
                    HiveJoin(condition=[=($0, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                      HiveProject(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_bill_addr_sk=[$7], ws_ext_sales_price=[$23])
                        HiveFilter(condition=[AND(IS NOT NULL($0), IS NOT NULL($7))])
                          HiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                      HiveProject(d_date_sk=[$0])
                        HiveFilter(condition=[AND(=($6, 1999), =($8, 9))])
                          HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])

