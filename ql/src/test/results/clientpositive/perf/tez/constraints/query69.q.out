PREHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 12 <- Reducer 15 (BROADCAST_EDGE)
Map 20 <- Reducer 10 (BROADCAST_EDGE)
Map 21 <- Reducer 9 (BROADCAST_EDGE)
Reducer 10 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Map 12 (SIMPLE_EDGE), Map 14 (SIMPLE_EDGE)
Reducer 15 <- Map 14 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Map 14 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 17 <- Reducer 16 (SIMPLE_EDGE)
Reducer 18 <- Map 14 (SIMPLE_EDGE), Map 21 (SIMPLE_EDGE)
Reducer 19 <- Reducer 18 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 11 (SIMPLE_EDGE)
Reducer 3 <- Reducer 13 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 17 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 19 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Map 22 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8 vectorized
      File Output Operator [FS_237]
        Limit [LIM_236] (rows=1 width=383)
          Number of rows:100
          Select Operator [SEL_235] (rows=1 width=383)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 7 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_234]
              Select Operator [SEL_233] (rows=1 width=383)
                Output:["_col0","_col1","_col2","_col3","_col4","_col6"]
                Group By Operator [GBY_232] (rows=1 width=367)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Reducer 6 [SIMPLE_EDGE]
                  SHUFFLE [RS_69]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_68] (rows=1 width=367)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count()"],keys:_col10, _col11, _col12, _col13, _col14
                      Top N Key Operator [TNK_113] (rows=1 width=359)
                        keys:_col10, _col11, _col12, _col13, _col14,top n:100
                        Merge Join Operator [MERGEJOIN_194] (rows=1 width=359)
                          Conds:RS_64._col1=RS_231._col0(Inner),Output:["_col10","_col11","_col12","_col13","_col14"]
                        <-Map 22 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_231]
                            PartitionCols:_col0
                            Select Operator [SEL_230] (rows=1861800 width=363)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                              TableScan [TS_62] (rows=1861800 width=363)
                                default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_gender","cd_marital_status","cd_education_status","cd_purchase_estimate","cd_credit_rating"]
                        <-Reducer 5 [SIMPLE_EDGE]
                          SHUFFLE [RS_64]
                            PartitionCols:_col1
                            Select Operator [SEL_61] (rows=1 width=8)
                              Output:["_col1"]
                              Filter Operator [FIL_60] (rows=1 width=8)
                                predicate:_col7 is null
                                Merge Join Operator [MERGEJOIN_193] (rows=115467 width=8)
                                  Conds:RS_57._col0=RS_229._col1(Left Outer),Output:["_col1","_col7"]
                                <-Reducer 4 [SIMPLE_EDGE]
                                  PARTITION_ONLY_SHUFFLE [RS_57]
                                    PartitionCols:_col0
                                    Select Operator [SEL_42] (rows=1 width=12)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_41] (rows=1 width=12)
                                        predicate:_col5 is null
                                        Merge Join Operator [MERGEJOIN_192] (rows=116289 width=11)
                                          Conds:RS_38._col0=RS_221._col1(Left Outer),Output:["_col0","_col1","_col5"]
                                        <-Reducer 3 [SIMPLE_EDGE]
                                          SHUFFLE [RS_38]
                                            PartitionCols:_col0
                                            Merge Join Operator [MERGEJOIN_191] (rows=6841 width=4)
                                              Conds:RS_35._col0=RS_36._col0(Left Semi),Output:["_col0","_col1"]
                                            <-Reducer 13 [SIMPLE_EDGE]
                                              SHUFFLE [RS_36]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_34] (rows=116289 width=1)
                                                  Output:["_col0"],keys:_col0
                                                  Select Operator [SEL_15] (rows=43153353 width=1)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_188] (rows=43153353 width=1)
                                                      Conds:RS_213._col0=RS_203._col0(Inner),Output:["_col1"]
                                                    <-Map 14 [SIMPLE_EDGE] vectorized
                                                      SHUFFLE [RS_203]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_202] (rows=150 width=4)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_201] (rows=150 width=12)
                                                            predicate:((d_year = 1999) and d_moy BETWEEN 1 AND 3)
                                                            TableScan [TS_9] (rows=73049 width=12)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                                    <-Map 12 [SIMPLE_EDGE] vectorized
                                                      SHUFFLE [RS_213]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_212] (rows=525327388 width=7)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_211] (rows=525327388 width=7)
                                                            predicate:(ss_sold_date_sk is not null and ss_customer_sk is not null and ss_sold_date_sk BETWEEN DynamicValue(RS_13_date_dim_d_date_sk_min) AND DynamicValue(RS_13_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_13_date_dim_d_date_sk_bloom_filter)))
                                                            TableScan [TS_6] (rows=575995635 width=7)
                                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_customer_sk"]
                                                            <-Reducer 15 [BROADCAST_EDGE] vectorized
                                                              BROADCAST [RS_210]
                                                                Group By Operator [GBY_209] (rows=1 width=12)
                                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                                <-Map 14 [CUSTOM_SIMPLE_EDGE] vectorized
                                                                  SHUFFLE [RS_208]
                                                                    Group By Operator [GBY_207] (rows=1 width=12)
                                                                      Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                                      Select Operator [SEL_204] (rows=150 width=4)
                                                                        Output:["_col0"]
                                                                         Please refer to the previous Select Operator [SEL_202]
                                            <-Reducer 2 [SIMPLE_EDGE]
                                              SHUFFLE [RS_35]
                                                PartitionCols:_col0
                                                Merge Join Operator [MERGEJOIN_187] (rows=4541258 width=5)
                                                  Conds:RS_197._col2=RS_200._col0(Inner),Output:["_col0","_col1"]
                                                <-Map 1 [SIMPLE_EDGE] vectorized
                                                  SHUFFLE [RS_197]
                                                    PartitionCols:_col2
                                                    Select Operator [SEL_196] (rows=77201384 width=11)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_195] (rows=77201384 width=11)
                                                        predicate:(c_current_cdemo_sk is not null and c_current_addr_sk is not null)
                                                        TableScan [TS_0] (rows=80000000 width=11)
                                                          default@customer,c,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_addr_sk"]
                                                <-Map 11 [SIMPLE_EDGE] vectorized
                                                  SHUFFLE [RS_200]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_199] (rows=2352941 width=90)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_198] (rows=2352941 width=90)
                                                        predicate:(ca_state) IN ('CO', 'IL', 'MN')
                                                        TableScan [TS_3] (rows=40000000 width=90)
                                                          default@customer_address,ca,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]
                                        <-Reducer 17 [SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_221]
                                            PartitionCols:_col1
                                            Select Operator [SEL_220] (rows=116289 width=7)
                                              Output:["_col0","_col1"]
                                              Group By Operator [GBY_219] (rows=116289 width=3)
                                                Output:["_col0"],keys:KEY._col0
                                              <-Reducer 16 [SIMPLE_EDGE]
                                                SHUFFLE [RS_27]
                                                  PartitionCols:_col0
                                                  Group By Operator [GBY_26] (rows=116289 width=3)
                                                    Output:["_col0"],keys:_col1
                                                    Merge Join Operator [MERGEJOIN_189] (rows=11823304 width=3)
                                                      Conds:RS_218._col0=RS_205._col0(Inner),Output:["_col1"]
                                                    <-Map 14 [SIMPLE_EDGE] vectorized
                                                      SHUFFLE [RS_205]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_202]
                                                    <-Map 20 [SIMPLE_EDGE] vectorized
                                                      SHUFFLE [RS_218]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_217] (rows=143930993 width=7)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_216] (rows=143930993 width=7)
                                                            predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null and ws_bill_customer_sk BETWEEN DynamicValue(RS_38_c_c_customer_sk_min) AND DynamicValue(RS_38_c_c_customer_sk_max) and in_bloom_filter(ws_bill_customer_sk, DynamicValue(RS_38_c_c_customer_sk_bloom_filter)))
                                                            TableScan [TS_16] (rows=144002668 width=7)
                                                              default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_bill_customer_sk"]
                                                            <-Reducer 10 [BROADCAST_EDGE] vectorized
                                                              BROADCAST [RS_215]
                                                                Group By Operator [GBY_214] (rows=1 width=12)
                                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                                <-Reducer 3 [CUSTOM_SIMPLE_EDGE]
                                                                  SHUFFLE [RS_158]
                                                                    Group By Operator [GBY_157] (rows=1 width=12)
                                                                      Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                                      Select Operator [SEL_156] (rows=6841 width=4)
                                                                        Output:["_col0"]
                                                                         Please refer to the previous Merge Join Operator [MERGEJOIN_191]
                                <-Reducer 19 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_229]
                                    PartitionCols:_col1
                                    Select Operator [SEL_228] (rows=115467 width=7)
                                      Output:["_col0","_col1"]
                                      Group By Operator [GBY_227] (rows=115467 width=3)
                                        Output:["_col0"],keys:KEY._col0
                                      <-Reducer 18 [SIMPLE_EDGE]
                                        SHUFFLE [RS_54]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_53] (rows=115467 width=3)
                                            Output:["_col0"],keys:_col1
                                            Merge Join Operator [MERGEJOIN_190] (rows=23255411 width=3)
                                              Conds:RS_226._col0=RS_206._col0(Inner),Output:["_col1"]
                                            <-Map 14 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_206]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_202]
                                            <-Map 21 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_226]
                                                PartitionCols:_col0
                                                Select Operator [SEL_225] (rows=285115246 width=7)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_224] (rows=285115246 width=7)
                                                    predicate:(cs_ship_customer_sk is not null and cs_sold_date_sk is not null and cs_ship_customer_sk BETWEEN DynamicValue(RS_57_c_c_customer_sk_min) AND DynamicValue(RS_57_c_c_customer_sk_max) and in_bloom_filter(cs_ship_customer_sk, DynamicValue(RS_57_c_c_customer_sk_bloom_filter)))
                                                    TableScan [TS_43] (rows=287989836 width=7)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_ship_customer_sk"]
                                                    <-Reducer 9 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_223]
                                                        Group By Operator [GBY_222] (rows=1 width=12)
                                                          Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                        <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                                                          PARTITION_ONLY_SHUFFLE [RS_173]
                                                            Group By Operator [GBY_172] (rows=1 width=12)
                                                              Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                              Select Operator [SEL_171] (rows=1 width=4)
                                                                Output:["_col0"]
                                                                 Please refer to the previous Select Operator [SEL_42]

