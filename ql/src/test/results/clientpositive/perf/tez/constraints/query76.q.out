PREHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_addr_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_addr_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_web_page_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_web_page_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_warehouse_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_warehouse_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 16 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 11 (SIMPLE_EDGE)
Reducer 3 <- Map 12 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 5 <- Union 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 1 (SIMPLE_EDGE), Map 13 (SIMPLE_EDGE)
Reducer 8 <- Map 14 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 9 <- Map 1 (SIMPLE_EDGE), Map 15 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_180]
        Limit [LIM_179] (rows=100 width=408)
          Number of rows:100
          Select Operator [SEL_178] (rows=5600 width=408)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_177]
              Group By Operator [GBY_176] (rows=5600 width=408)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
              <-Union 4 [SIMPLE_EDGE]
                <-Reducer 10 [CONTAINS]
                  Reduce Output Operator [RS_166]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_165] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Top N Key Operator [TNK_164] (rows=26219002 width=388)
                        keys:_col0, _col1, _col2, _col3, _col4,top n:100
                        Select Operator [SEL_162] (rows=1433911 width=399)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Merge Join Operator [MERGEJOIN_161] (rows=1433911 width=209)
                            Conds:RS_39._col1=RS_190._col0(Inner),Output:["_col2","_col4","_col5","_col7"]
                          <-Map 16 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_190]
                              PartitionCols:_col0
                              Select Operator [SEL_189] (rows=462000 width=94)
                                Output:["_col0","_col1"]
                                TableScan [TS_34] (rows=462000 width=94)
                                  default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                          <-Reducer 9 [SIMPLE_EDGE]
                            SHUFFLE [RS_39]
                              PartitionCols:_col1
                              Merge Join Operator [MERGEJOIN_147] (rows=1433911 width=123)
                                Conds:RS_188._col0=RS_170._col0(Inner),Output:["_col1","_col2","_col4","_col5"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_170]
                                  PartitionCols:_col0
                                  Select Operator [SEL_167] (rows=73049 width=12)
                                    Output:["_col0","_col1","_col2"]
                                    TableScan [TS_0] (rows=73049 width=12)
                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                              <-Map 15 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_188]
                                  PartitionCols:_col0
                                  Select Operator [SEL_187] (rows=1433911 width=119)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_186] (rows=1433911 width=123)
                                      predicate:(cs_warehouse_sk is null and cs_sold_date_sk is not null)
                                      TableScan [TS_29] (rows=287989836 width=123)
                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_warehouse_sk","cs_item_sk","cs_ext_sales_price"]
                <-Reducer 3 [CONTAINS]
                  Reduce Output Operator [RS_154]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_153] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Top N Key Operator [TNK_152] (rows=26219002 width=388)
                        keys:_col0, _col1, _col2, _col3, _col4,top n:100
                        Select Operator [SEL_150] (rows=24749363 width=387)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Merge Join Operator [MERGEJOIN_149] (rows=24749363 width=204)
                            Conds:RS_10._col4=RS_175._col0(Inner),Output:["_col1","_col2","_col5","_col7"]
                          <-Map 12 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_175]
                              PartitionCols:_col0
                              Select Operator [SEL_174] (rows=462000 width=94)
                                Output:["_col0","_col1"]
                                TableScan [TS_5] (rows=462000 width=94)
                                  default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                          <-Reducer 2 [SIMPLE_EDGE]
                            SHUFFLE [RS_10]
                              PartitionCols:_col4
                              Merge Join Operator [MERGEJOIN_143] (rows=24749363 width=118)
                                Conds:RS_168._col0=RS_173._col0(Inner),Output:["_col1","_col2","_col4","_col5"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_168]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_167]
                              <-Map 11 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_173]
                                  PartitionCols:_col0
                                  Select Operator [SEL_172] (rows=24749363 width=114)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_171] (rows=24749363 width=118)
                                      predicate:(ss_addr_sk is null and ss_sold_date_sk is not null)
                                      TableScan [TS_2] (rows=575995635 width=118)
                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_addr_sk","ss_ext_sales_price"]
                <-Reducer 8 [CONTAINS]
                  Reduce Output Operator [RS_160]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_159] (rows=224000 width=408)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["count()","sum(_col5)"],keys:_col0, _col1, _col2, _col3, _col4
                      Top N Key Operator [TNK_158] (rows=26219002 width=388)
                        keys:_col0, _col1, _col2, _col3, _col4,top n:100
                        Select Operator [SEL_156] (rows=35728 width=394)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Merge Join Operator [MERGEJOIN_155] (rows=35728 width=209)
                            Conds:RS_24._col1=RS_185._col0(Inner),Output:["_col2","_col4","_col5","_col7"]
                          <-Map 14 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_185]
                              PartitionCols:_col0
                              Select Operator [SEL_184] (rows=462000 width=94)
                                Output:["_col0","_col1"]
                                TableScan [TS_19] (rows=462000 width=94)
                                  default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                          <-Reducer 7 [SIMPLE_EDGE]
                            SHUFFLE [RS_24]
                              PartitionCols:_col1
                              Merge Join Operator [MERGEJOIN_145] (rows=35728 width=123)
                                Conds:RS_183._col0=RS_169._col0(Inner),Output:["_col1","_col2","_col4","_col5"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_169]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_167]
                              <-Map 13 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_183]
                                  PartitionCols:_col0
                                  Select Operator [SEL_182] (rows=35728 width=119)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_181] (rows=35728 width=123)
                                      predicate:(ws_web_page_sk is null and ws_sold_date_sk is not null)
                                      TableScan [TS_14] (rows=144002668 width=123)
                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_web_page_sk","ws_ext_sales_price"]

