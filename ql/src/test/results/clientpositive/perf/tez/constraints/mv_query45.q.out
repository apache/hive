PREHOOK: query: create materialized view mv_customer_customer_address_n101 as
select * from customer c, customer_address ca
where c.c_current_addr_sk=ca.ca_address_sk
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Output: database:default
PREHOOK: Output: default@mv_customer_customer_address_n101
POSTHOOK: query: create materialized view mv_customer_customer_address_n101 as
select * from customer c, customer_address ca
where c.c_current_addr_sk=ca.ca_address_sk
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv_customer_customer_address_n101
Warning: Shuffle Join MERGEJOIN[110][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
PREHOOK: query: explain cbo
select  ca_zip, ca_county, sum(ws_sales_price)
 from web_sales, customer, customer_address, date_dim, item
 where ws_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ws_item_sk = i_item_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
 	      or 
 	      i_item_id in (select i_item_id
                             from item
                             where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
                             )
 	    )
 	and ws_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip, ca_county
 order by ca_zip, ca_county
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@mv_customer_customer_address_n101
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo
select  ca_zip, ca_county, sum(ws_sales_price)
 from web_sales, customer, customer_address, date_dim, item
 where ws_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ws_item_sk = i_item_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
 	      or 
 	      i_item_id in (select i_item_id
                             from item
                             where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
                             )
 	    )
 	and ws_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip, ca_county
 order by ca_zip, ca_county
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@mv_customer_customer_address_n101
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
HiveSortLimit(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[100])
  HiveProject(ca_zip=[$1], ca_county=[$0], $f2=[$2])
    HiveAggregate(group=[{3, 4}], agg#0=[sum($2)])
      HiveFilter(condition=[OR(AND(<>($8, 0), IS NOT NULL($10)), IN(substr($4, 1, 5), _UTF-16LE'85669':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'86197':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'88274':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'83405':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'86475':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'85392':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'85460':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'80348':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", _UTF-16LE'81792':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"))])
        HiveProject(ws_sold_date_sk=[$6], ws_item_sk=[$7], ws_sales_price=[$9], ca_county=[$11], ca_zip=[$12], d_date_sk=[$5], i_item_sk=[$0], i_item_id=[$1], c=[$2], i_item_id0=[$3], literalTrue=[$4])
          HiveJoin(condition=[=($7, $0)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveJoin(condition=[=($1, $3)], joinType=[left], algorithm=[none], cost=[not available])
              HiveJoin(condition=[true], joinType=[inner], algorithm=[none], cost=[not available])
                HiveProject(i_item_sk=[$0], i_item_id=[$1])
                  HiveTableScan(table=[[default, item]], table:alias=[item])
                HiveProject(c=[$0])
                  HiveAggregate(group=[{}], c=[COUNT()])
                    HiveFilter(condition=[IN($0, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29)])
                      HiveTableScan(table=[[default, item]], table:alias=[item])
              HiveProject(i_item_id=[$0], literalTrue=[true])
                HiveAggregate(group=[{1}])
                  HiveFilter(condition=[IN($0, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29)])
                    HiveTableScan(table=[[default, item]], table:alias=[item])
            HiveProject(d_date_sk=[$0], ws_sold_date_sk=[$1], ws_item_sk=[$2], ws_bill_customer_sk=[$3], ws_sales_price=[$4], c_customer_sk=[$5], ca_county=[$6], ca_zip=[$7])
              HiveJoin(condition=[=($1, $0)], joinType=[inner], algorithm=[none], cost=[not available])
                HiveProject(d_date_sk=[$0])
                  HiveFilter(condition=[AND(=($6, 2000), =($10, 2))])
                    HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
                HiveJoin(condition=[=($2, $4)], joinType=[inner], algorithm=[none], cost=[not available])
                  HiveProject(ws_sold_date_sk=[$0], ws_item_sk=[$3], ws_bill_customer_sk=[$4], ws_sales_price=[$21])
                    HiveFilter(condition=[AND(IS NOT NULL($4), IS NOT NULL($0))])
                      HiveTableScan(table=[[default, web_sales]], table:alias=[web_sales])
                  HiveProject(c_customer_sk=[CAST($0):INTEGER NOT NULL], ca_county=[$25], ca_zip=[$27])
                    HiveTableScan(table=[[default, mv_customer_customer_address_n101]], table:alias=[default.mv_customer_customer_address_n101])

PREHOOK: query: drop materialized view mv_customer_customer_address_n101
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv_customer_customer_address_n101
PREHOOK: Output: default@mv_customer_customer_address_n101
POSTHOOK: query: drop materialized view mv_customer_customer_address_n101
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv_customer_customer_address_n101
POSTHOOK: Output: default@mv_customer_customer_address_n101
