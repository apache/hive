Warning: Shuffle Join MERGEJOIN[149][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 6' is a cross product
PREHOOK: query: explain
select  cast(amc as decimal(15,4))/cast(pmc as decimal(15,4)) am_pm_ratio
 from ( select count(*) amc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 6 and 6+1
         and household_demographics.hd_dep_count = 8
         and web_page.wp_char_count between 5000 and 5200) at,
      ( select count(*) pmc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 14 and 14+1
         and household_demographics.hd_dep_count = 8
         and web_page.wp_char_count between 5000 and 5200) pt
 order by am_pm_ratio
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@time_dim
PREHOOK: Input: default@web_page
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  cast(amc as decimal(15,4))/cast(pmc as decimal(15,4)) am_pm_ratio
 from ( select count(*) amc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 6 and 6+1
         and household_demographics.hd_dep_count = 8
         and web_page.wp_char_count between 5000 and 5200) at,
      ( select count(*) pmc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 14 and 14+1
         and household_demographics.hd_dep_count = 8
         and web_page.wp_char_count between 5000 and 5200) pt
 order by am_pm_ratio
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@time_dim
POSTHOOK: Input: default@web_page
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 10 (BROADCAST_EDGE)
Map 11 <- Reducer 19 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Map 11 (SIMPLE_EDGE), Map 16 (SIMPLE_EDGE)
Reducer 13 <- Map 17 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Map 18 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (CUSTOM_SIMPLE_EDGE)
Reducer 19 <- Map 18 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 9 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 15 (CUSTOM_SIMPLE_EDGE), Reducer 5 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6
      File Output Operator [FS_56]
        Select Operator [SEL_55] (rows=1 width=112)
          Output:["_col0"]
          Merge Join Operator [MERGEJOIN_149] (rows=1 width=16)
            Conds:(Inner),Output:["_col0","_col1"]
          <-Reducer 15 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_187]
              Group By Operator [GBY_186] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 14 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_49]
                  Group By Operator [GBY_48] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_148] (rows=351832 width=8)
                      Conds:RS_44._col1=RS_171._col0(Inner)
                    <-Map 18 [SIMPLE_EDGE] vectorized
                      PARTITION_ONLY_SHUFFLE [RS_171]
                        PartitionCols:_col0
                        Select Operator [SEL_170] (rows=655 width=4)
                          Output:["_col0"]
                          Filter Operator [FIL_169] (rows=655 width=8)
                            predicate:((hd_dep_count = 8) and hd_demo_sk is not null)
                            TableScan [TS_35] (rows=7200 width=8)
                              default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count"]
                    <-Reducer 13 [SIMPLE_EDGE]
                      SHUFFLE [RS_44]
                        PartitionCols:_col1
                        Merge Join Operator [MERGEJOIN_147] (rows=3867464 width=3)
                          Conds:RS_41._col0=RS_185._col0(Inner),Output:["_col1"]
                        <-Map 17 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_185]
                            PartitionCols:_col0
                            Select Operator [SEL_184] (rows=9095 width=4)
                              Output:["_col0"]
                              Filter Operator [FIL_183] (rows=9095 width=8)
                                predicate:(t_hour BETWEEN 14 AND 15 and t_time_sk is not null)
                                TableScan [TS_32] (rows=86400 width=8)
                                  default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour"]
                        <-Reducer 12 [SIMPLE_EDGE]
                          SHUFFLE [RS_41]
                            PartitionCols:_col0
                            Merge Join Operator [MERGEJOIN_146] (rows=36739842 width=7)
                              Conds:RS_179._col2=RS_182._col0(Inner),Output:["_col0","_col1"]
                            <-Map 11 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_179]
                                PartitionCols:_col2
                                Select Operator [SEL_178] (rows=143895111 width=11)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_177] (rows=143895111 width=11)
                                    predicate:(ws_sold_time_sk is not null and ws_ship_hdemo_sk is not null and ws_web_page_sk is not null and ws_ship_hdemo_sk BETWEEN DynamicValue(RS_45_household_demographics_hd_demo_sk_min) AND DynamicValue(RS_45_household_demographics_hd_demo_sk_max) and in_bloom_filter(ws_ship_hdemo_sk, DynamicValue(RS_45_household_demographics_hd_demo_sk_bloom_filter)))
                                    TableScan [TS_26] (rows=144002668 width=11)
                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_time_sk","ws_ship_hdemo_sk","ws_web_page_sk"]
                                    <-Reducer 19 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_176]
                                        Group By Operator [GBY_175] (rows=1 width=12)
                                          Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                        <-Map 18 [CUSTOM_SIMPLE_EDGE] vectorized
                                          PARTITION_ONLY_SHUFFLE [RS_174]
                                            Group By Operator [GBY_173] (rows=1 width=12)
                                              Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                              Select Operator [SEL_172] (rows=655 width=4)
                                                Output:["_col0"]
                                                 Please refer to the previous Select Operator [SEL_170]
                            <-Map 16 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_182]
                                PartitionCols:_col0
                                Select Operator [SEL_181] (rows=1175 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_180] (rows=1175 width=7)
                                    predicate:(wp_char_count BETWEEN 5000 AND 5200 and wp_web_page_sk is not null)
                                    TableScan [TS_29] (rows=4602 width=7)
                                      default@web_page,web_page,Tbl:COMPLETE,Col:COMPLETE,Output:["wp_web_page_sk","wp_char_count"]
          <-Reducer 5 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_168]
              Group By Operator [GBY_167] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_23]
                  Group By Operator [GBY_22] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_145] (rows=351832 width=8)
                      Conds:RS_18._col1=RS_152._col0(Inner)
                    <-Map 9 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_152]
                        PartitionCols:_col0
                        Select Operator [SEL_151] (rows=655 width=4)
                          Output:["_col0"]
                          Filter Operator [FIL_150] (rows=655 width=8)
                            predicate:((hd_dep_count = 8) and hd_demo_sk is not null)
                            TableScan [TS_9] (rows=7200 width=8)
                              default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count"]
                    <-Reducer 3 [SIMPLE_EDGE]
                      SHUFFLE [RS_18]
                        PartitionCols:_col1
                        Merge Join Operator [MERGEJOIN_144] (rows=3867464 width=3)
                          Conds:RS_15._col0=RS_166._col0(Inner),Output:["_col1"]
                        <-Map 8 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_166]
                            PartitionCols:_col0
                            Select Operator [SEL_165] (rows=9095 width=4)
                              Output:["_col0"]
                              Filter Operator [FIL_164] (rows=9095 width=8)
                                predicate:(t_hour BETWEEN 6 AND 7 and t_time_sk is not null)
                                TableScan [TS_6] (rows=86400 width=8)
                                  default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour"]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_15]
                            PartitionCols:_col0
                            Merge Join Operator [MERGEJOIN_143] (rows=36739842 width=7)
                              Conds:RS_160._col2=RS_163._col0(Inner),Output:["_col0","_col1"]
                            <-Map 1 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_160]
                                PartitionCols:_col2
                                Select Operator [SEL_159] (rows=143895111 width=11)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_158] (rows=143895111 width=11)
                                    predicate:(ws_sold_time_sk is not null and ws_ship_hdemo_sk is not null and ws_web_page_sk is not null and ws_ship_hdemo_sk BETWEEN DynamicValue(RS_19_household_demographics_hd_demo_sk_min) AND DynamicValue(RS_19_household_demographics_hd_demo_sk_max) and in_bloom_filter(ws_ship_hdemo_sk, DynamicValue(RS_19_household_demographics_hd_demo_sk_bloom_filter)))
                                    TableScan [TS_0] (rows=144002668 width=11)
                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_time_sk","ws_ship_hdemo_sk","ws_web_page_sk"]
                                    <-Reducer 10 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_157]
                                        Group By Operator [GBY_156] (rows=1 width=12)
                                          Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                        <-Map 9 [CUSTOM_SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_155]
                                            Group By Operator [GBY_154] (rows=1 width=12)
                                              Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                              Select Operator [SEL_153] (rows=655 width=4)
                                                Output:["_col0"]
                                                 Please refer to the previous Select Operator [SEL_151]
                            <-Map 7 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_163]
                                PartitionCols:_col0
                                Select Operator [SEL_162] (rows=1175 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_161] (rows=1175 width=7)
                                    predicate:(wp_char_count BETWEEN 5000 AND 5200 and wp_web_page_sk is not null)
                                    TableScan [TS_3] (rows=4602 width=7)
                                      default@web_page,web_page,Tbl:COMPLETE,Col:COMPLETE,Output:["wp_web_page_sk","wp_char_count"]

