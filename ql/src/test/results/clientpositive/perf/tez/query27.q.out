PREHOOK: query: explain
select  i_item_id,
        s_state, grouping(s_state) g_state,
        avg(ss_quantity) agg1,
        avg(ss_list_price) agg2,
        avg(ss_coupon_amt) agg3,
        avg(ss_sales_price) agg4
 from store_sales, customer_demographics, date_dim, store, item
 where ss_sold_date_sk = d_date_sk and
       ss_item_sk = i_item_sk and
       ss_store_sk = s_store_sk and
       ss_cdemo_sk = cd_demo_sk and
       cd_gender = 'M' and
       cd_marital_status = 'U' and
       cd_education_status = '2 yr Degree' and
       d_year = 2001 and
       s_state in ('SD','FL', 'MI', 'LA', 'MO', 'SC')
 group by rollup (i_item_id, s_state)
 order by i_item_id
         ,s_state
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  i_item_id,
        s_state, grouping(s_state) g_state,
        avg(ss_quantity) agg1,
        avg(ss_list_price) agg2,
        avg(ss_coupon_amt) agg3,
        avg(ss_sales_price) agg4
 from store_sales, customer_demographics, date_dim, store, item
 where ss_sold_date_sk = d_date_sk and
       ss_item_sk = i_item_sk and
       ss_store_sk = s_store_sk and
       ss_cdemo_sk = cd_demo_sk and
       cd_gender = 'M' and
       cd_marital_status = 'U' and
       cd_education_status = '2 yr Degree' and
       d_year = 2001 and
       s_state in ('SD','FL', 'MI', 'LA', 'MO', 'SC')
 group by rollup (i_item_id, s_state)
 order by i_item_id
         ,s_state
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 10 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 11 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_36]
        Limit [LIM_35] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_34] (rows=1264972921 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_33]
              Select Operator [SEL_32] (rows=1264972921 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                Group By Operator [GBY_31] (rows=1264972921 width=88)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["avg(VALUE._col0)","avg(VALUE._col1)","avg(VALUE._col2)","avg(VALUE._col3)"],keys:KEY._col0, KEY._col1, KEY._col2
                <-Reducer 5 [SIMPLE_EDGE]
                  SHUFFLE [RS_30]
                    PartitionCols:_col0, _col1, _col2
                    Group By Operator [GBY_29] (rows=2529945843 width=88)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["avg(_col2)","avg(_col3)","avg(_col4)","avg(_col5)"],keys:_col0, _col1, 0L
                      Select Operator [SEL_27] (rows=843315281 width=88)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                        Merge Join Operator [MERGEJOIN_59] (rows=843315281 width=88)
                          Conds:RS_24._col1=RS_25._col0(Inner),Output:["_col4","_col5","_col6","_col7","_col15","_col17"]
                        <-Map 11 [SIMPLE_EDGE]
                          SHUFFLE [RS_25]
                            PartitionCols:_col0
                            Select Operator [SEL_14] (rows=462000 width=1436)
                              Output:["_col0","_col1"]
                              Filter Operator [FIL_55] (rows=462000 width=1436)
                                predicate:i_item_sk is not null
                                TableScan [TS_12] (rows=462000 width=1436)
                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id"]
                        <-Reducer 4 [SIMPLE_EDGE]
                          SHUFFLE [RS_24]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_58] (rows=766650239 width=88)
                              Conds:RS_21._col3=RS_22._col0(Inner),Output:["_col1","_col4","_col5","_col6","_col7","_col15"]
                            <-Map 10 [SIMPLE_EDGE]
                              SHUFFLE [RS_22]
                                PartitionCols:_col0
                                Select Operator [SEL_11] (rows=852 width=1910)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_54] (rows=852 width=1910)
                                    predicate:((s_state) IN ('SD', 'FL', 'MI', 'LA', 'MO', 'SC') and s_store_sk is not null)
                                    TableScan [TS_9] (rows=1704 width=1910)
                                      default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_state"]
                            <-Reducer 3 [SIMPLE_EDGE]
                              SHUFFLE [RS_21]
                                PartitionCols:_col3
                                Merge Join Operator [MERGEJOIN_57] (rows=696954748 width=88)
                                  Conds:RS_18._col0=RS_19._col0(Inner),Output:["_col1","_col3","_col4","_col5","_col6","_col7"]
                                <-Map 9 [SIMPLE_EDGE]
                                  SHUFFLE [RS_19]
                                    PartitionCols:_col0
                                    Select Operator [SEL_8] (rows=36524 width=1119)
                                      Output:["_col0"]
                                      Filter Operator [FIL_53] (rows=36524 width=1119)
                                        predicate:((d_year = 2001) and d_date_sk is not null)
                                        TableScan [TS_6] (rows=73049 width=1119)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_18]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_56] (rows=633595212 width=88)
                                      Conds:RS_15._col2=RS_16._col0(Inner),Output:["_col0","_col1","_col3","_col4","_col5","_col6","_col7"]
                                    <-Map 1 [SIMPLE_EDGE]
                                      SHUFFLE [RS_15]
                                        PartitionCols:_col2
                                        Select Operator [SEL_2] (rows=575995635 width=88)
                                          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                          Filter Operator [FIL_51] (rows=575995635 width=88)
                                            predicate:(ss_cdemo_sk is not null and ss_item_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                            TableScan [TS_0] (rows=575995635 width=88)
                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_cdemo_sk","ss_store_sk","ss_quantity","ss_list_price","ss_sales_price","ss_coupon_amt"]
                                    <-Map 8 [SIMPLE_EDGE]
                                      SHUFFLE [RS_16]
                                        PartitionCols:_col0
                                        Select Operator [SEL_5] (rows=232725 width=385)
                                          Output:["_col0"]
                                          Filter Operator [FIL_52] (rows=232725 width=385)
                                            predicate:((cd_education_status = '2 yr Degree') and (cd_gender = 'M') and (cd_marital_status = 'U') and cd_demo_sk is not null)
                                            TableScan [TS_3] (rows=1861800 width=385)
                                              default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_gender","cd_marital_status","cd_education_status"]

