PREHOOK: query: explain
select  s_store_name
      ,sum(ss_net_profit)
 from store_sales
     ,date_dim
     ,store,
     (select ca_zip
     from (
     (SELECT substr(ca_zip,1,5) ca_zip
      FROM customer_address
      WHERE substr(ca_zip,1,5) IN (
                          '89436','30868','65085','22977','83927','77557',
                          '58429','40697','80614','10502','32779',
                          '91137','61265','98294','17921','18427',
                          '21203','59362','87291','84093','21505',
                          '17184','10866','67898','25797','28055',
                          '18377','80332','74535','21757','29742',
                          '90885','29898','17819','40811','25990',
                          '47513','89531','91068','10391','18846',
                          '99223','82637','41368','83658','86199',
                          '81625','26696','89338','88425','32200',
                          '81427','19053','77471','36610','99823',
                          '43276','41249','48584','83550','82276',
                          '18842','78890','14090','38123','40936',
                          '34425','19850','43286','80072','79188',
                          '54191','11395','50497','84861','90733',
                          '21068','57666','37119','25004','57835',
                          '70067','62878','95806','19303','18840',
                          '19124','29785','16737','16022','49613',
                          '89977','68310','60069','98360','48649',
                          '39050','41793','25002','27413','39736',
                          '47208','16515','94808','57648','15009',
                          '80015','42961','63982','21744','71853',
                          '81087','67468','34175','64008','20261',
                          '11201','51799','48043','45645','61163',
                          '48375','36447','57042','21218','41100',
                          '89951','22745','35851','83326','61125',
                          '78298','80752','49858','52940','96976',
                          '63792','11376','53582','18717','90226',
                          '50530','94203','99447','27670','96577',
                          '57856','56372','16165','23427','54561',
                          '28806','44439','22926','30123','61451',
                          '92397','56979','92309','70873','13355',
                          '21801','46346','37562','56458','28286',
                          '47306','99555','69399','26234','47546',
                          '49661','88601','35943','39936','25632',
                          '24611','44166','56648','30379','59785',
                          '11110','14329','93815','52226','71381',
                          '13842','25612','63294','14664','21077',
                          '82626','18799','60915','81020','56447',
                          '76619','11433','13414','42548','92713',
                          '70467','30884','47484','16072','38936',
                          '13036','88376','45539','35901','19506',
                          '65690','73957','71850','49231','14276',
                          '20005','18384','76615','11635','38177',
                          '55607','41369','95447','58581','58149',
                          '91946','33790','76232','75692','95464',
                          '22246','51061','56692','53121','77209',
                          '15482','10688','14868','45907','73520',
                          '72666','25734','17959','24677','66446',
                          '94627','53535','15560','41967','69297',
                          '11929','59403','33283','52232','57350',
                          '43933','40921','36635','10827','71286',
                          '19736','80619','25251','95042','15526',
                          '36496','55854','49124','81980','35375',
                          '49157','63512','28944','14946','36503',
                          '54010','18767','23969','43905','66979',
                          '33113','21286','58471','59080','13395',
                          '79144','70373','67031','38360','26705',
                          '50906','52406','26066','73146','15884',
                          '31897','30045','61068','45550','92454',
                          '13376','14354','19770','22928','97790',
                          '50723','46081','30202','14410','20223',
                          '88500','67298','13261','14172','81410',
                          '93578','83583','46047','94167','82564',
                          '21156','15799','86709','37931','74703',
                          '83103','23054','70470','72008','49247',
                          '91911','69998','20961','70070','63197',
                          '54853','88191','91830','49521','19454',
                          '81450','89091','62378','25683','61869',
                          '51744','36580','85778','36871','48121',
                          '28810','83712','45486','67393','26935',
                          '42393','20132','55349','86057','21309',
                          '80218','10094','11357','48819','39734',
                          '40758','30432','21204','29467','30214',
                          '61024','55307','74621','11622','68908',
                          '33032','52868','99194','99900','84936',
                          '69036','99149','45013','32895','59004',
                          '32322','14933','32936','33562','72550',
                          '27385','58049','58200','16808','21360',
                          '32961','18586','79307','15492'))
     intersect
     (select ca_zip
      from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt
            FROM customer_address, customer
            WHERE ca_address_sk = c_current_addr_sk and
                  c_preferred_cust_flag='Y'
            group by ca_zip
            having count(*) > 10)A1))A2) V1
 where ss_store_sk = s_store_sk
  and ss_sold_date_sk = d_date_sk
  and d_qoy = 1 and d_year = 2002
  and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))
 group by s_store_name
 order by s_store_name
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  s_store_name
      ,sum(ss_net_profit)
 from store_sales
     ,date_dim
     ,store,
     (select ca_zip
     from (
     (SELECT substr(ca_zip,1,5) ca_zip
      FROM customer_address
      WHERE substr(ca_zip,1,5) IN (
                          '89436','30868','65085','22977','83927','77557',
                          '58429','40697','80614','10502','32779',
                          '91137','61265','98294','17921','18427',
                          '21203','59362','87291','84093','21505',
                          '17184','10866','67898','25797','28055',
                          '18377','80332','74535','21757','29742',
                          '90885','29898','17819','40811','25990',
                          '47513','89531','91068','10391','18846',
                          '99223','82637','41368','83658','86199',
                          '81625','26696','89338','88425','32200',
                          '81427','19053','77471','36610','99823',
                          '43276','41249','48584','83550','82276',
                          '18842','78890','14090','38123','40936',
                          '34425','19850','43286','80072','79188',
                          '54191','11395','50497','84861','90733',
                          '21068','57666','37119','25004','57835',
                          '70067','62878','95806','19303','18840',
                          '19124','29785','16737','16022','49613',
                          '89977','68310','60069','98360','48649',
                          '39050','41793','25002','27413','39736',
                          '47208','16515','94808','57648','15009',
                          '80015','42961','63982','21744','71853',
                          '81087','67468','34175','64008','20261',
                          '11201','51799','48043','45645','61163',
                          '48375','36447','57042','21218','41100',
                          '89951','22745','35851','83326','61125',
                          '78298','80752','49858','52940','96976',
                          '63792','11376','53582','18717','90226',
                          '50530','94203','99447','27670','96577',
                          '57856','56372','16165','23427','54561',
                          '28806','44439','22926','30123','61451',
                          '92397','56979','92309','70873','13355',
                          '21801','46346','37562','56458','28286',
                          '47306','99555','69399','26234','47546',
                          '49661','88601','35943','39936','25632',
                          '24611','44166','56648','30379','59785',
                          '11110','14329','93815','52226','71381',
                          '13842','25612','63294','14664','21077',
                          '82626','18799','60915','81020','56447',
                          '76619','11433','13414','42548','92713',
                          '70467','30884','47484','16072','38936',
                          '13036','88376','45539','35901','19506',
                          '65690','73957','71850','49231','14276',
                          '20005','18384','76615','11635','38177',
                          '55607','41369','95447','58581','58149',
                          '91946','33790','76232','75692','95464',
                          '22246','51061','56692','53121','77209',
                          '15482','10688','14868','45907','73520',
                          '72666','25734','17959','24677','66446',
                          '94627','53535','15560','41967','69297',
                          '11929','59403','33283','52232','57350',
                          '43933','40921','36635','10827','71286',
                          '19736','80619','25251','95042','15526',
                          '36496','55854','49124','81980','35375',
                          '49157','63512','28944','14946','36503',
                          '54010','18767','23969','43905','66979',
                          '33113','21286','58471','59080','13395',
                          '79144','70373','67031','38360','26705',
                          '50906','52406','26066','73146','15884',
                          '31897','30045','61068','45550','92454',
                          '13376','14354','19770','22928','97790',
                          '50723','46081','30202','14410','20223',
                          '88500','67298','13261','14172','81410',
                          '93578','83583','46047','94167','82564',
                          '21156','15799','86709','37931','74703',
                          '83103','23054','70470','72008','49247',
                          '91911','69998','20961','70070','63197',
                          '54853','88191','91830','49521','19454',
                          '81450','89091','62378','25683','61869',
                          '51744','36580','85778','36871','48121',
                          '28810','83712','45486','67393','26935',
                          '42393','20132','55349','86057','21309',
                          '80218','10094','11357','48819','39734',
                          '40758','30432','21204','29467','30214',
                          '61024','55307','74621','11622','68908',
                          '33032','52868','99194','99900','84936',
                          '69036','99149','45013','32895','59004',
                          '32322','14933','32936','33562','72550',
                          '27385','58049','58200','16808','21360',
                          '32961','18586','79307','15492'))
     intersect
     (select ca_zip
      from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt
            FROM customer_address, customer
            WHERE ca_address_sk = c_current_addr_sk and
                  c_preferred_cust_flag='Y'
            group by ca_zip
            having count(*) > 10)A1))A2) V1
 where ss_store_sk = s_store_sk
  and ss_sold_date_sk = d_date_sk
  and d_qoy = 1 and d_year = 2002
  and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))
 group by s_store_name
 order by s_store_name
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Union 9 (SIMPLE_EDGE)
Reducer 11 <- Map 17 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 13 <- Map 12 (SIMPLE_EDGE), Map 16 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE), Union 9 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 3 <- Reducer 11 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 8 <- Map 7 (SIMPLE_EDGE), Union 9 (CONTAINS)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_107]
        Limit [LIM_106] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_105] (rows=348477374 width=88)
            Output:["_col0","_col1"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_104]
              Group By Operator [GBY_103] (rows=348477374 width=88)
                Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
              <-Reducer 3 [SIMPLE_EDGE]
                SHUFFLE [RS_57]
                  PartitionCols:_col0
                  Group By Operator [GBY_56] (rows=696954748 width=88)
                    Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col8
                    Merge Join Operator [MERGEJOIN_89] (rows=696954748 width=88)
                      Conds:RS_52._col1=RS_53._col1(Inner),Output:["_col2","_col8"]
                    <-Reducer 11 [SIMPLE_EDGE]
                      SHUFFLE [RS_53]
                        PartitionCols:_col1
                        Merge Join Operator [MERGEJOIN_88] (rows=1874 width=1911)
                          Conds:RS_99.substr(_col0, 1, 2)=RS_102.substr(_col2, 1, 2)(Inner),Output:["_col1","_col2"]
                        <-Map 17 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_102]
                            PartitionCols:substr(_col2, 1, 2)
                            Select Operator [SEL_101] (rows=1704 width=1910)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_100] (rows=1704 width=1910)
                                predicate:(s_store_sk is not null and substr(s_zip, 1, 2) is not null)
                                TableScan [TS_42] (rows=1704 width=1910)
                                  default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_store_name","s_zip"]
                        <-Reducer 10 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_99]
                            PartitionCols:substr(_col0, 1, 2)
                            Select Operator [SEL_98] (rows=1 width=1014)
                              Output:["_col0"]
                              Filter Operator [FIL_97] (rows=1 width=1014)
                                predicate:(_col1 = 2L)
                                Group By Operator [GBY_96] (rows=6833333 width=1014)
                                  Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                                <-Union 9 [SIMPLE_EDGE]
                                  <-Reducer 15 [CONTAINS] vectorized
                                    Reduce Output Operator [RS_128]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_127] (rows=13666666 width=1014)
                                        Output:["_col0","_col1"],aggregations:["count(_col1)"],keys:_col0
                                        Group By Operator [GBY_126] (rows=3666666 width=1014)
                                          Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                                        <-Reducer 14 [SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_125]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_124] (rows=7333333 width=1014)
                                              Output:["_col0","_col1"],aggregations:["count()"],keys:_col0
                                              Select Operator [SEL_123] (rows=7333333 width=1014)
                                                Output:["_col0"]
                                                Filter Operator [FIL_122] (rows=7333333 width=1014)
                                                  predicate:(_col1 > 10L)
                                                  Group By Operator [GBY_121] (rows=22000000 width=1014)
                                                    Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                                                  <-Reducer 13 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_25]
                                                      PartitionCols:_col0
                                                      Group By Operator [GBY_24] (rows=44000000 width=1014)
                                                        Output:["_col0","_col1"],aggregations:["count()"],keys:_col1
                                                        Merge Join Operator [MERGEJOIN_87] (rows=44000000 width=1014)
                                                          Conds:RS_117._col0=RS_120._col0(Inner),Output:["_col1"]
                                                        <-Map 12 [SIMPLE_EDGE] vectorized
                                                          SHUFFLE [RS_117]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_116] (rows=40000000 width=1014)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_115] (rows=40000000 width=1014)
                                                                predicate:(ca_address_sk is not null and substr(substr(ca_zip, 1, 5), 1, 2) is not null)
                                                                TableScan [TS_14] (rows=40000000 width=1014)
                                                                  default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_zip"]
                                                        <-Map 16 [SIMPLE_EDGE] vectorized
                                                          SHUFFLE [RS_120]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_119] (rows=40000000 width=860)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_118] (rows=40000000 width=860)
                                                                predicate:((c_preferred_cust_flag = 'Y') and c_current_addr_sk is not null)
                                                                TableScan [TS_17] (rows=80000000 width=860)
                                                                  default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_current_addr_sk","c_preferred_cust_flag"]
                                  <-Reducer 8 [CONTAINS] vectorized
                                    Reduce Output Operator [RS_114]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_113] (rows=13666666 width=1014)
                                        Output:["_col0","_col1"],aggregations:["count(_col1)"],keys:_col0
                                        Group By Operator [GBY_112] (rows=10000000 width=1014)
                                          Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                                        <-Map 7 [SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_111]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_110] (rows=20000000 width=1014)
                                              Output:["_col0","_col1"],aggregations:["count()"],keys:_col0
                                              Select Operator [SEL_109] (rows=20000000 width=1014)
                                                Output:["_col0"]
                                                Filter Operator [FIL_108] (rows=20000000 width=1014)
                                                  predicate:((substr(ca_zip, 1, 5)) IN ('89436', '30868', '65085', '22977', '83927', '77557', '58429', '40697', '80614', '10502', '32779', '91137', '61265', '98294', '17921', '18427', '21203', '59362', '87291', '84093', '21505', '17184', '10866', '67898', '25797', '28055', '18377', '80332', '74535', '21757', '29742', '90885', '29898', '17819', '40811', '25990', '47513', '89531', '91068', '10391', '18846', '99223', '82637', '41368', '83658', '86199', '81625', '26696', '89338', '88425', '32200', '81427', '19053', '77471', '36610', '99823', '43276', '41249', '48584', '83550', '82276', '18842', '78890', '14090', '38123', '40936', '34425', '19850', '43286', '80072', '79188', '54191', '11395', '50497', '84861', '90733', '21068', '57666', '37119', '25004', '57835', '70067', '62878', '95806', '19303', '18840', '19124', '29785', '16737', '16022', '49613', '89977', '68310', '60069', '98360', '48649', '39050', '41793', '25002', '27413', '39736', '47208', '16515', '94808', '57648', '15009', '80015', '42961', '63982', '21744', '71853', '81087', '67468', '34175', '64008', '20261', '11201', '51799', '48043', '45645', '61163', '48375', '36447', '57042', '21218', '41100', '89951', '22745', '35851', '83326', '61125', '78298', '80752', '49858', '52940', '96976', '63792', '11376', '53582', '18717', '90226', '50530', '94203', '99447', '27670', '96577', '57856', '56372', '16165', '23427', '54561', '28806', '44439', '22926', '30123', '61451', '92397', '56979', '92309', '70873', '13355', '21801', '46346', '37562', '56458', '28286', '47306', '99555', '69399', '26234', '47546', '49661', '88601', '35943', '39936', '25632', '24611', '44166', '56648', '30379', '59785', '11110', '14329', '93815', '52226', '71381', '13842', '25612', '63294', '14664', '21077', '82626', '18799', '60915', '81020', '56447', '76619', '11433', '13414', '42548', '92713', '70467', '30884', '47484', '16072', '38936', '13036', '88376', '45539', '35901', '19506', '65690', '73957', '71850', '49231', '14276', '20005', '18384', '76615', '11635', '38177', '55607', '41369', '95447', '58581', '58149', '91946', '33790', '76232', '75692', '95464', '22246', '51061', '56692', '53121', '77209', '15482', '10688', '14868', '45907', '73520', '72666', '25734', '17959', '24677', '66446', '94627', '53535', '15560', '41967', '69297', '11929', '59403', '33283', '52232', '57350', '43933', '40921', '36635', '10827', '71286', '19736', '80619', '25251', '95042', '15526', '36496', '55854', '49124', '81980', '35375', '49157', '63512', '28944', '14946', '36503', '54010', '18767', '23969', '43905', '66979', '33113', '21286', '58471', '59080', '13395', '79144', '70373', '67031', '38360', '26705', '50906', '52406', '26066', '73146', '15884', '31897', '30045', '61068', '45550', '92454', '13376', '14354', '19770', '22928', '97790', '50723', '46081', '30202', '14410', '20223', '88500', '67298', '13261', '14172', '81410', '93578', '83583', '46047', '94167', '82564', '21156', '15799', '86709', '37931', '74703', '83103', '23054', '70470', '72008', '49247', '91911', '69998', '20961', '70070', '63197', '54853', '88191', '91830', '49521', '19454', '81450', '89091', '62378', '25683', '61869', '51744', '36580', '85778', '36871', '48121', '28810', '83712', '45486', '67393', '26935', '42393', '20132', '55349', '86057', '21309', '80218', '10094', '11357', '48819', '39734', '40758', '30432', '21204', '29467', '30214', '61024', '55307', '74621', '11622', '68908', '33032', '52868', '99194', '99900', '84936', '69036', '99149', '45013', '32895', '59004', '32322', '14933', '32936', '33562', '72550', '27385', '58049', '58200', '16808', '21360', '32961', '18586', '79307', '15492') and substr(substr(ca_zip, 1, 5), 1, 2) is not null)
                                                  TableScan [TS_6] (rows=40000000 width=1014)
                                                    default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_zip"]
                    <-Reducer 2 [SIMPLE_EDGE]
                      SHUFFLE [RS_52]
                        PartitionCols:_col1
                        Merge Join Operator [MERGEJOIN_86] (rows=633595212 width=88)
                          Conds:RS_92._col0=RS_95._col0(Inner),Output:["_col1","_col2"]
                        <-Map 1 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_92]
                            PartitionCols:_col0
                            Select Operator [SEL_91] (rows=575995635 width=88)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_90] (rows=575995635 width=88)
                                predicate:(ss_sold_date_sk is not null and ss_store_sk is not null)
                                TableScan [TS_0] (rows=575995635 width=88)
                                  default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_store_sk","ss_net_profit"]
                        <-Map 6 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_95]
                            PartitionCols:_col0
                            Select Operator [SEL_94] (rows=18262 width=1119)
                              Output:["_col0"]
                              Filter Operator [FIL_93] (rows=18262 width=1119)
                                predicate:((d_qoy = 1) and (d_year = 2002) and d_date_sk is not null)
                                TableScan [TS_3] (rows=73049 width=1119)
                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_qoy"]

