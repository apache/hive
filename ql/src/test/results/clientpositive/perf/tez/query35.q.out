PREHOOK: query: explain
select   
  ca_state,
  cd_gender,
  cd_marital_status,
  count(*) cnt1,
  avg(cd_dep_count),
  max(cd_dep_count),
  sum(cd_dep_count),
  cd_dep_employed_count,
  count(*) cnt2,
  avg(cd_dep_employed_count),
  max(cd_dep_employed_count),
  sum(cd_dep_employed_count),
  cd_dep_college_count,
  count(*) cnt3,
  avg(cd_dep_college_count),
  max(cd_dep_college_count),
  sum(cd_dep_college_count)
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_qoy < 4) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_qoy < 4) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_qoy < 4))
 group by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select   
  ca_state,
  cd_gender,
  cd_marital_status,
  count(*) cnt1,
  avg(cd_dep_count),
  max(cd_dep_count),
  sum(cd_dep_count),
  cd_dep_employed_count,
  count(*) cnt2,
  avg(cd_dep_employed_count),
  max(cd_dep_employed_count),
  sum(cd_dep_employed_count),
  cd_dep_college_count,
  count(*) cnt3,
  avg(cd_dep_college_count),
  max(cd_dep_college_count),
  sum(cd_dep_college_count)
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_qoy < 4) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_qoy < 4) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_qoy < 4))
 group by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 11 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 12 <- Map 11 (SIMPLE_EDGE), Map 16 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Map 11 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 10 (SIMPLE_EDGE), Reducer 13 (ONE_TO_ONE_EDGE), Reducer 15 (ONE_TO_ONE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6
      File Output Operator [FS_70]
        Limit [LIM_68] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_67] (rows=1045432122 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_66]
              Select Operator [SEL_65] (rows=1045432122 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col9","_col10","_col11","_col12","_col14","_col15","_col16","_col17"]
                Group By Operator [GBY_64] (rows=1045432122 width=88)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)","count(VALUE._col2)","max(VALUE._col3)","sum(VALUE._col4)","count(VALUE._col5)","max(VALUE._col6)","sum(VALUE._col7)","count(VALUE._col8)","max(VALUE._col9)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_63]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5
                    Group By Operator [GBY_62] (rows=2090864244 width=88)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15"],aggregations:["count()","sum(_col8)","count(_col8)","max(_col8)","sum(_col9)","count(_col9)","max(_col9)","sum(_col10)","count(_col10)","max(_col10)"],keys:_col4, _col6, _col7, _col8, _col9, _col10
                      Select Operator [SEL_61] (rows=2090864244 width=88)
                        Output:["_col4","_col6","_col7","_col8","_col9","_col10"]
                        Filter Operator [FIL_60] (rows=2090864244 width=88)
                          predicate:(_col12 is not null or _col14 is not null)
                          Merge Join Operator [MERGEJOIN_109] (rows=2090864244 width=88)
                            Conds:RS_55._col0=RS_56._col0(Left Semi),RS_55._col0=RS_57._col0(Left Outer),RS_55._col0=RS_58._col0(Left Outer),Output:["_col4","_col6","_col7","_col8","_col9","_col10","_col12","_col14"]
                          <-Reducer 10 [SIMPLE_EDGE]
                            SHUFFLE [RS_56]
                              PartitionCols:_col0
                              Group By Operator [GBY_54] (rows=633595212 width=88)
                                Output:["_col0"],keys:_col0
                                Select Operator [SEL_18] (rows=633595212 width=88)
                                  Output:["_col0"]
                                  Merge Join Operator [MERGEJOIN_106] (rows=633595212 width=88)
                                    Conds:RS_15._col0=RS_16._col0(Inner),Output:["_col1"]
                                  <-Map 11 [SIMPLE_EDGE]
                                    SHUFFLE [RS_16]
                                      PartitionCols:_col0
                                      Select Operator [SEL_14] (rows=12174 width=1119)
                                        Output:["_col0"]
                                        Filter Operator [FIL_99] (rows=12174 width=1119)
                                          predicate:((d_qoy < 4) and (d_year = 1999) and d_date_sk is not null)
                                          TableScan [TS_12] (rows=73049 width=1119)
                                            default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_qoy"]
                                  <-Map 9 [SIMPLE_EDGE]
                                    SHUFFLE [RS_15]
                                      PartitionCols:_col0
                                      Select Operator [SEL_11] (rows=575995635 width=88)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_98] (rows=575995635 width=88)
                                          predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                          TableScan [TS_9] (rows=575995635 width=88)
                                            default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk"]
                          <-Reducer 13 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_57]
                              PartitionCols:_col0
                              Select Operator [SEL_32] (rows=79201469 width=135)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_31] (rows=79201469 width=135)
                                  Output:["_col0"],keys:KEY._col0
                                <-Reducer 12 [SIMPLE_EDGE]
                                  SHUFFLE [RS_30]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_29] (rows=158402938 width=135)
                                      Output:["_col0"],keys:_col1
                                      Merge Join Operator [MERGEJOIN_107] (rows=158402938 width=135)
                                        Conds:RS_25._col0=RS_26._col0(Inner),Output:["_col1"]
                                      <-Map 11 [SIMPLE_EDGE]
                                        SHUFFLE [RS_26]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_14]
                                      <-Map 16 [SIMPLE_EDGE]
                                        SHUFFLE [RS_25]
                                          PartitionCols:_col0
                                          Select Operator [SEL_21] (rows=144002668 width=135)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_100] (rows=144002668 width=135)
                                              predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                              TableScan [TS_19] (rows=144002668 width=135)
                                                default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_bill_customer_sk"]
                          <-Reducer 15 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_58]
                              PartitionCols:_col0
                              Select Operator [SEL_46] (rows=158394413 width=135)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_45] (rows=158394413 width=135)
                                  Output:["_col0"],keys:KEY._col0
                                <-Reducer 14 [SIMPLE_EDGE]
                                  SHUFFLE [RS_44]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_43] (rows=316788826 width=135)
                                      Output:["_col0"],keys:_col1
                                      Merge Join Operator [MERGEJOIN_108] (rows=316788826 width=135)
                                        Conds:RS_39._col0=RS_40._col0(Inner),Output:["_col1"]
                                      <-Map 11 [SIMPLE_EDGE]
                                        SHUFFLE [RS_40]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_14]
                                      <-Map 17 [SIMPLE_EDGE]
                                        SHUFFLE [RS_39]
                                          PartitionCols:_col0
                                          Select Operator [SEL_35] (rows=287989836 width=135)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_102] (rows=287989836 width=135)
                                              predicate:(cs_ship_customer_sk is not null and cs_sold_date_sk is not null)
                                              TableScan [TS_33] (rows=287989836 width=135)
                                                default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_ship_customer_sk"]
                          <-Reducer 3 [SIMPLE_EDGE]
                            SHUFFLE [RS_55]
                              PartitionCols:_col0
                              Merge Join Operator [MERGEJOIN_105] (rows=96800003 width=860)
                                Conds:RS_50._col1=RS_51._col0(Inner),Output:["_col0","_col4","_col6","_col7","_col8","_col9","_col10"]
                              <-Map 8 [SIMPLE_EDGE]
                                SHUFFLE [RS_51]
                                  PartitionCols:_col0
                                  Select Operator [SEL_8] (rows=1861800 width=385)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                    Filter Operator [FIL_97] (rows=1861800 width=385)
                                      predicate:cd_demo_sk is not null
                                      TableScan [TS_6] (rows=1861800 width=385)
                                        default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_gender","cd_marital_status","cd_dep_count","cd_dep_employed_count","cd_dep_college_count"]
                              <-Reducer 2 [SIMPLE_EDGE]
                                SHUFFLE [RS_50]
                                  PartitionCols:_col1
                                  Merge Join Operator [MERGEJOIN_104] (rows=88000001 width=860)
                                    Conds:RS_47._col2=RS_48._col0(Inner),Output:["_col0","_col1","_col4"]
                                  <-Map 1 [SIMPLE_EDGE]
                                    SHUFFLE [RS_47]
                                      PartitionCols:_col2
                                      Select Operator [SEL_2] (rows=80000000 width=860)
                                        Output:["_col0","_col1","_col2"]
                                        Filter Operator [FIL_95] (rows=80000000 width=860)
                                          predicate:(c_current_addr_sk is not null and c_current_cdemo_sk is not null and c_customer_sk is not null)
                                          TableScan [TS_0] (rows=80000000 width=860)
                                            default@customer,c,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_addr_sk"]
                                  <-Map 7 [SIMPLE_EDGE]
                                    SHUFFLE [RS_48]
                                      PartitionCols:_col0
                                      Select Operator [SEL_5] (rows=40000000 width=1014)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_96] (rows=40000000 width=1014)
                                          predicate:ca_address_sk is not null
                                          TableScan [TS_3] (rows=40000000 width=1014)
                                            default@customer_address,ca,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state"]

