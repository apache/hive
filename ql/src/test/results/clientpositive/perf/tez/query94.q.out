PREHOOK: query: explain
select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '1999-5-01' and 
           (cast('1999-5-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'TX'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '1999-5-01' and 
           (cast('1999-5-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'TX'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 15 <- Map 14 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 10 (SIMPLE_EDGE)
Reducer 3 <- Map 11 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 12 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 13 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 15 (ONE_TO_ONE_EDGE), Reducer 5 (ONE_TO_ONE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (CUSTOM_SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 9
      File Output Operator [FS_51]
        Limit [LIM_49] (rows=1 width=344)
          Number of rows:100
          Select Operator [SEL_48] (rows=1 width=344)
            Output:["_col0","_col1","_col2"]
          <-Reducer 8 [SIMPLE_EDGE]
            SHUFFLE [RS_47]
              Select Operator [SEL_46] (rows=1 width=344)
                Output:["_col1","_col2","_col3"]
                Group By Operator [GBY_78] (rows=1 width=344)
                  Output:["_col0","_col1","_col2"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"]
                <-Reducer 7 [CUSTOM_SIMPLE_EDGE]
                  PARTITION_ONLY_SHUFFLE [RS_77]
                    Group By Operator [GBY_76] (rows=1 width=344)
                      Output:["_col0","_col1","_col2"],aggregations:["count(_col0)","sum(_col1)","sum(_col2)"]
                      Group By Operator [GBY_75] (rows=115958879 width=135)
                        Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
                      <-Reducer 6 [SIMPLE_EDGE]
                        SHUFFLE [RS_74]
                          PartitionCols:_col0
                          Group By Operator [GBY_73] (rows=115958879 width=135)
                            Output:["_col0","_col2","_col3"],aggregations:["sum(_col5)","sum(_col6)"],keys:_col4
                            Select Operator [SEL_42] (rows=115958879 width=135)
                              Output:["_col4","_col5","_col6"]
                              Filter Operator [FIL_41] (rows=115958879 width=135)
                                predicate:_col14 is null
                                Merge Join Operator [MERGEJOIN_83] (rows=231917759 width=135)
                                  Conds:RS_38._col4=RS_39._col0(Left Outer),Output:["_col4","_col5","_col6","_col14"]
                                <-Reducer 15 [ONE_TO_ONE_EDGE]
                                  FORWARD [RS_39]
                                    PartitionCols:_col0
                                    Select Operator [SEL_31] (rows=7199233 width=92)
                                      Output:["_col0","_col1"]
                                      Group By Operator [GBY_30] (rows=7199233 width=92)
                                        Output:["_col0"],keys:KEY._col0
                                      <-Map 14 [SIMPLE_EDGE]
                                        SHUFFLE [RS_29]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_28] (rows=14398467 width=92)
                                            Output:["_col0"],keys:wr_order_number
                                            Filter Operator [FIL_72] (rows=14398467 width=92)
                                              predicate:wr_order_number is not null
                                              TableScan [TS_25] (rows=14398467 width=92)
                                                default@web_returns,wr1,Tbl:COMPLETE,Col:NONE,Output:["wr_order_number"]
                                <-Reducer 5 [ONE_TO_ONE_EDGE]
                                  FORWARD [RS_38]
                                    PartitionCols:_col4
                                    Select Operator [SEL_37] (rows=210834322 width=135)
                                      Output:["_col4","_col5","_col6"]
                                      Merge Join Operator [MERGEJOIN_82] (rows=210834322 width=135)
                                        Conds:RS_34._col4=RS_35._col0(Left Semi),Output:["_col3","_col4","_col5","_col6","_col14"],residual filter predicates:{(_col3 <> _col14)}
                                      <-Map 13 [SIMPLE_EDGE]
                                        SHUFFLE [RS_35]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_33] (rows=144002668 width=135)
                                            Output:["_col0","_col1"],keys:_col0, _col1
                                            Select Operator [SEL_24] (rows=144002668 width=135)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_71] (rows=144002668 width=135)
                                                predicate:(ws_order_number is not null and ws_warehouse_sk is not null)
                                                TableScan [TS_22] (rows=144002668 width=135)
                                                  default@web_sales,ws2,Tbl:COMPLETE,Col:NONE,Output:["ws_warehouse_sk","ws_order_number"]
                                      <-Reducer 4 [SIMPLE_EDGE]
                                        SHUFFLE [RS_34]
                                          PartitionCols:_col4
                                          Merge Join Operator [MERGEJOIN_81] (rows=191667562 width=135)
                                            Conds:RS_18._col2=RS_19._col0(Inner),Output:["_col3","_col4","_col5","_col6"]
                                          <-Map 12 [SIMPLE_EDGE]
                                            SHUFFLE [RS_19]
                                              PartitionCols:_col0
                                              Select Operator [SEL_11] (rows=42 width=1850)
                                                Output:["_col0"]
                                                Filter Operator [FIL_70] (rows=42 width=1850)
                                                  predicate:((web_company_name = 'pri') and web_site_sk is not null)
                                                  TableScan [TS_9] (rows=84 width=1850)
                                                    default@web_site,web_site,Tbl:COMPLETE,Col:NONE,Output:["web_site_sk","web_company_name"]
                                          <-Reducer 3 [SIMPLE_EDGE]
                                            SHUFFLE [RS_18]
                                              PartitionCols:_col2
                                              Merge Join Operator [MERGEJOIN_80] (rows=174243235 width=135)
                                                Conds:RS_15._col1=RS_16._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col6"]
                                              <-Map 11 [SIMPLE_EDGE]
                                                SHUFFLE [RS_16]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_8] (rows=20000000 width=1014)
                                                    Output:["_col0"]
                                                    Filter Operator [FIL_69] (rows=20000000 width=1014)
                                                      predicate:((ca_state = 'TX') and ca_address_sk is not null)
                                                      TableScan [TS_6] (rows=40000000 width=1014)
                                                        default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state"]
                                              <-Reducer 2 [SIMPLE_EDGE]
                                                SHUFFLE [RS_15]
                                                  PartitionCols:_col1
                                                  Merge Join Operator [MERGEJOIN_79] (rows=158402938 width=135)
                                                    Conds:RS_12._col0=RS_13._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                                                  <-Map 1 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_12]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_2] (rows=144002668 width=135)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                                        Filter Operator [FIL_67] (rows=144002668 width=135)
                                                          predicate:(ws_order_number is not null and ws_ship_addr_sk is not null and ws_ship_date_sk is not null and ws_web_site_sk is not null)
                                                          TableScan [TS_0] (rows=144002668 width=135)
                                                            default@web_sales,ws1,Tbl:COMPLETE,Col:NONE,Output:["ws_ship_date_sk","ws_ship_addr_sk","ws_web_site_sk","ws_warehouse_sk","ws_order_number","ws_ext_ship_cost","ws_net_profit"]
                                                  <-Map 10 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_13]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_5] (rows=8116 width=1119)
                                                        Output:["_col0"]
                                                        Filter Operator [FIL_68] (rows=8116 width=1119)
                                                          predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1999-05-01 00:00:00.0' AND TIMESTAMP'1999-06-30 00:00:00.0' and d_date_sk is not null)
                                                          TableScan [TS_3] (rows=73049 width=1119)
                                                            default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]

