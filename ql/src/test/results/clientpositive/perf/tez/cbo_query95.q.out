PREHOOK: query: explain cbo
with ws_wh as
(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2
 from web_sales ws1,web_sales ws2
 where ws1.ws_order_number = ws2.ws_order_number
   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
 select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '1999-5-01' and 
           (cast('1999-5-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'TX'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and ws1.ws_order_number in (select ws_order_number
                            from ws_wh)
and ws1.ws_order_number in (select wr_order_number
                            from web_returns,ws_wh
                            where wr_order_number = ws_wh.ws_order_number)
order by count(distinct ws_order_number)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@web_returns
PREHOOK: Input: default@web_sales
PREHOOK: Input: default@web_site
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo
with ws_wh as
(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2
 from web_sales ws1,web_sales ws2
 where ws1.ws_order_number = ws2.ws_order_number
   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
 select  
   count(distinct ws_order_number) as `order count`
  ,sum(ws_ext_ship_cost) as `total shipping cost`
  ,sum(ws_net_profit) as `total net profit`
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '1999-5-01' and 
           (cast('1999-5-01' as date) + 60 days)
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'TX'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and ws1.ws_order_number in (select ws_order_number
                            from ws_wh)
and ws1.ws_order_number in (select wr_order_number
                            from web_returns,ws_wh
                            where wr_order_number = ws_wh.ws_order_number)
order by count(distinct ws_order_number)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@web_returns
POSTHOOK: Input: default@web_sales
POSTHOOK: Input: default@web_site
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
HiveAggregate(group=[{}], agg#0=[count(DISTINCT $6)], agg#1=[sum($7)], agg#2=[sum($8)])
  HiveJoin(condition=[=($6, $0)], joinType=[inner], algorithm=[none], cost=[not available])
    HiveProject(wr_order_number=[$0])
      HiveAggregate(group=[{14}])
        HiveJoin(condition=[=($14, $0)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject(ws_order_number=[$1])
            HiveJoin(condition=[AND(=($1, $3), <>($0, $2))], joinType=[inner], algorithm=[none], cost=[not available])
              HiveProject(ws_warehouse_sk=[$15], ws_order_number=[$17])
                HiveFilter(condition=[IS NOT NULL($17)])
                  HiveTableScan(table=[[default, web_sales]], table:alias=[ws1])
              HiveProject(ws_warehouse_sk=[$15], ws_order_number=[$17])
                HiveFilter(condition=[IS NOT NULL($17)])
                  HiveTableScan(table=[[default, web_sales]], table:alias=[ws2])
          HiveProject(wr_returned_date_sk=[$0], wr_returned_time_sk=[$1], wr_item_sk=[$2], wr_refunded_customer_sk=[$3], wr_refunded_cdemo_sk=[$4], wr_refunded_hdemo_sk=[$5], wr_refunded_addr_sk=[$6], wr_returning_customer_sk=[$7], wr_returning_cdemo_sk=[$8], wr_returning_hdemo_sk=[$9], wr_returning_addr_sk=[$10], wr_web_page_sk=[$11], wr_reason_sk=[$12], wr_order_number=[$13], wr_return_quantity=[$14], wr_return_amt=[$15], wr_return_tax=[$16], wr_return_amt_inc_tax=[$17], wr_fee=[$18], wr_return_ship_cost=[$19], wr_refunded_cash=[$20], wr_reversed_charge=[$21], wr_account_credit=[$22], wr_net_loss=[$23], BLOCK__OFFSET__INSIDE__FILE=[$24], INPUT__FILE__NAME=[$25], ROW__ID=[$26])
            HiveFilter(condition=[IS NOT NULL($13)])
              HiveTableScan(table=[[default, web_returns]], table:alias=[web_returns])
    HiveJoin(condition=[=($5, $0)], joinType=[inner], algorithm=[none], cost=[not available])
      HiveProject(ws_order_number=[$0])
        HiveAggregate(group=[{1}])
          HiveJoin(condition=[AND(=($1, $3), <>($0, $2))], joinType=[inner], algorithm=[none], cost=[not available])
            HiveProject(ws_warehouse_sk=[$15], ws_order_number=[$17])
              HiveFilter(condition=[IS NOT NULL($17)])
                HiveTableScan(table=[[default, web_sales]], table:alias=[ws1])
            HiveProject(ws_warehouse_sk=[$15], ws_order_number=[$17])
              HiveFilter(condition=[IS NOT NULL($17)])
                HiveTableScan(table=[[default, web_sales]], table:alias=[ws2])
      HiveJoin(condition=[=($3, $9)], joinType=[inner], algorithm=[none], cost=[not available])
        HiveJoin(condition=[=($2, $0)], joinType=[inner], algorithm=[none], cost=[not available])
          HiveProject(ca_address_sk=[$0])
            HiveFilter(condition=[AND(=($8, _UTF-16LE'TX'), IS NOT NULL($0))])
              HiveTableScan(table=[[default, customer_address]], table:alias=[customer_address])
          HiveJoin(condition=[=($0, $6)], joinType=[inner], algorithm=[none], cost=[not available])
            HiveProject(ws_ship_date_sk=[$2], ws_ship_addr_sk=[$11], ws_web_site_sk=[$13], ws_order_number=[$17], ws_ext_ship_cost=[$28], ws_net_profit=[$33])
              HiveFilter(condition=[AND(IS NOT NULL($17), IS NOT NULL($2), IS NOT NULL($11), IS NOT NULL($13))])
                HiveTableScan(table=[[default, web_sales]], table:alias=[ws1])
            HiveProject(d_date_sk=[$0], d_date=[$2])
              HiveFilter(condition=[AND(BETWEEN(false, CAST($2):TIMESTAMP(9), 1999-05-01 00:00:00, 1999-06-30 00:00:00), IS NOT NULL($0))])
                HiveTableScan(table=[[default, date_dim]], table:alias=[date_dim])
        HiveProject(web_site_sk=[$0])
          HiveFilter(condition=[AND(=($14, _UTF-16LE'pri'), IS NOT NULL($0))])
            HiveTableScan(table=[[default, web_site]], table:alias=[web_site])

