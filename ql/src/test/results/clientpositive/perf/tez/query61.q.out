Warning: Shuffle Join MERGEJOIN[156][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 5' is a cross product
PREHOOK: query: explain
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Map 10 (SIMPLE_EDGE), Map 15 (SIMPLE_EDGE)
Reducer 12 <- Map 19 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Map 20 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Map 21 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)
Reducer 16 <- Map 15 (SIMPLE_EDGE), Map 22 (SIMPLE_EDGE)
Reducer 17 <- Map 19 (SIMPLE_EDGE), Reducer 16 (SIMPLE_EDGE)
Reducer 18 <- Map 20 (SIMPLE_EDGE), Reducer 17 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 3 <- Reducer 14 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE), Reducer 8 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 18 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_190]
        Limit [LIM_189] (rows=1 width=225)
          Number of rows:100
          Select Operator [SEL_188] (rows=1 width=225)
            Output:["_col0","_col1","_col2"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_88]
              Select Operator [SEL_87] (rows=1 width=225)
                Output:["_col0","_col1","_col2"]
                Merge Join Operator [MERGEJOIN_156] (rows=1 width=225)
                  Conds:(Inner),Output:["_col0","_col1"]
                <-Reducer 4 [CUSTOM_SIMPLE_EDGE] vectorized
                  PARTITION_ONLY_SHUFFLE [RS_182]
                    Group By Operator [GBY_181] (rows=1 width=112)
                      Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                    <-Reducer 3 [CUSTOM_SIMPLE_EDGE]
                      PARTITION_ONLY_SHUFFLE [RS_42]
                        Group By Operator [GBY_41] (rows=1 width=112)
                          Output:["_col0"],aggregations:["sum(_col9)"]
                          Merge Join Operator [MERGEJOIN_154] (rows=927646829 width=88)
                            Conds:RS_37._col0=RS_38._col2(Inner),Output:["_col9"]
                          <-Reducer 2 [SIMPLE_EDGE]
                            SHUFFLE [RS_37]
                              PartitionCols:_col0
                              Merge Join Operator [MERGEJOIN_145] (rows=88000001 width=860)
                                Conds:RS_159._col1=RS_162._col0(Inner),Output:["_col0"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_159]
                                  PartitionCols:_col1
                                  Select Operator [SEL_158] (rows=80000000 width=860)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_157] (rows=80000000 width=860)
                                      predicate:(c_current_addr_sk is not null and c_customer_sk is not null)
                                      TableScan [TS_0] (rows=80000000 width=860)
                                        default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_addr_sk"]
                              <-Map 9 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_162]
                                  PartitionCols:_col0
                                  Select Operator [SEL_161] (rows=20000000 width=1014)
                                    Output:["_col0"]
                                    Filter Operator [FIL_160] (rows=20000000 width=1014)
                                      predicate:((ca_gmt_offset = -7) and ca_address_sk is not null)
                                      TableScan [TS_3] (rows=40000000 width=1014)
                                        default@customer_address,customer_address,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_gmt_offset"]
                          <-Reducer 14 [SIMPLE_EDGE]
                            SHUFFLE [RS_38]
                              PartitionCols:_col2
                              Merge Join Operator [MERGEJOIN_149] (rows=843315281 width=88)
                                Conds:RS_30._col4=RS_180._col0(Inner),Output:["_col2","_col5"]
                              <-Map 21 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_180]
                                  PartitionCols:_col0
                                  Select Operator [SEL_179] (rows=2300 width=1179)
                                    Output:["_col0"]
                                    Filter Operator [FIL_178] (rows=2300 width=1179)
                                      predicate:(((p_channel_dmail = 'Y') or (p_channel_email = 'Y') or (p_channel_tv = 'Y')) and p_promo_sk is not null)
                                      TableScan [TS_18] (rows=2300 width=1179)
                                        default@promotion,promotion,Tbl:COMPLETE,Col:NONE,Output:["p_promo_sk","p_channel_dmail","p_channel_email","p_channel_tv"]
                              <-Reducer 13 [SIMPLE_EDGE]
                                SHUFFLE [RS_30]
                                  PartitionCols:_col4
                                  Merge Join Operator [MERGEJOIN_148] (rows=766650239 width=88)
                                    Conds:RS_27._col3=RS_176._col0(Inner),Output:["_col2","_col4","_col5"]
                                  <-Map 20 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_176]
                                      PartitionCols:_col0
                                      Select Operator [SEL_175] (rows=852 width=1910)
                                        Output:["_col0"]
                                        Filter Operator [FIL_174] (rows=852 width=1910)
                                          predicate:((s_gmt_offset = -7) and s_store_sk is not null)
                                          TableScan [TS_15] (rows=1704 width=1910)
                                            default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_gmt_offset"]
                                  <-Reducer 12 [SIMPLE_EDGE]
                                    SHUFFLE [RS_27]
                                      PartitionCols:_col3
                                      Merge Join Operator [MERGEJOIN_147] (rows=696954748 width=88)
                                        Conds:RS_24._col1=RS_172._col0(Inner),Output:["_col2","_col3","_col4","_col5"]
                                      <-Map 19 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_172]
                                          PartitionCols:_col0
                                          Select Operator [SEL_171] (rows=231000 width=1436)
                                            Output:["_col0"]
                                            Filter Operator [FIL_170] (rows=231000 width=1436)
                                              predicate:((i_category = 'Electronics') and i_item_sk is not null)
                                              TableScan [TS_12] (rows=462000 width=1436)
                                                default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_category"]
                                      <-Reducer 11 [SIMPLE_EDGE]
                                        SHUFFLE [RS_24]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_146] (rows=633595212 width=88)
                                            Conds:RS_165._col0=RS_168._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5"]
                                          <-Map 15 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_168]
                                              PartitionCols:_col0
                                              Select Operator [SEL_167] (rows=18262 width=1119)
                                                Output:["_col0"]
                                                Filter Operator [FIL_166] (rows=18262 width=1119)
                                                  predicate:((d_moy = 11) and (d_year = 1999) and d_date_sk is not null)
                                                  TableScan [TS_9] (rows=73049 width=1119)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                          <-Map 10 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_165]
                                              PartitionCols:_col0
                                              Select Operator [SEL_164] (rows=575995635 width=88)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                Filter Operator [FIL_163] (rows=575995635 width=88)
                                                  predicate:(ss_customer_sk is not null and ss_item_sk is not null and ss_promo_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                                  TableScan [TS_6] (rows=575995635 width=88)
                                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_promo_sk","ss_ext_sales_price"]
                <-Reducer 8 [CUSTOM_SIMPLE_EDGE] vectorized
                  PARTITION_ONLY_SHUFFLE [RS_187]
                    Group By Operator [GBY_186] (rows=1 width=112)
                      Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                    <-Reducer 7 [CUSTOM_SIMPLE_EDGE]
                      PARTITION_ONLY_SHUFFLE [RS_81]
                        Group By Operator [GBY_80] (rows=1 width=112)
                          Output:["_col0"],aggregations:["sum(_col8)"]
                          Merge Join Operator [MERGEJOIN_155] (rows=843315281 width=88)
                            Conds:RS_76._col0=RS_77._col2(Inner),Output:["_col8"]
                          <-Reducer 2 [SIMPLE_EDGE]
                            SHUFFLE [RS_76]
                              PartitionCols:_col0
                               Please refer to the previous Merge Join Operator [MERGEJOIN_145]
                          <-Reducer 18 [SIMPLE_EDGE]
                            SHUFFLE [RS_77]
                              PartitionCols:_col2
                              Merge Join Operator [MERGEJOIN_153] (rows=766650239 width=88)
                                Conds:RS_69._col3=RS_177._col0(Inner),Output:["_col2","_col4"]
                              <-Map 20 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_177]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_175]
                              <-Reducer 17 [SIMPLE_EDGE]
                                SHUFFLE [RS_69]
                                  PartitionCols:_col3
                                  Merge Join Operator [MERGEJOIN_152] (rows=696954748 width=88)
                                    Conds:RS_66._col1=RS_173._col0(Inner),Output:["_col2","_col3","_col4"]
                                  <-Map 19 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_173]
                                      PartitionCols:_col0
                                       Please refer to the previous Select Operator [SEL_171]
                                  <-Reducer 16 [SIMPLE_EDGE]
                                    SHUFFLE [RS_66]
                                      PartitionCols:_col1
                                      Merge Join Operator [MERGEJOIN_151] (rows=633595212 width=88)
                                        Conds:RS_185._col0=RS_169._col0(Inner),Output:["_col1","_col2","_col3","_col4"]
                                      <-Map 15 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_169]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_167]
                                      <-Map 22 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_185]
                                          PartitionCols:_col0
                                          Select Operator [SEL_184] (rows=575995635 width=88)
                                            Output:["_col0","_col1","_col2","_col3","_col4"]
                                            Filter Operator [FIL_183] (rows=575995635 width=88)
                                              predicate:(ss_customer_sk is not null and ss_item_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                              TableScan [TS_51] (rows=575995635 width=88)
                                                default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_ext_sales_price"]

