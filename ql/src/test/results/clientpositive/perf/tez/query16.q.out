PREHOOK: query: explain
select  
   count(distinct cs_order_number) as `order count`
  ,sum(cs_ext_ship_cost) as `total shipping cost`
  ,sum(cs_net_profit) as `total net profit`
from
   catalog_sales cs1
  ,date_dim
  ,customer_address
  ,call_center
where
    d_date between '2001-4-01' and 
           (cast('2001-4-01' as date) + 60 days)
and cs1.cs_ship_date_sk = d_date_sk
and cs1.cs_ship_addr_sk = ca_address_sk
and ca_state = 'NY'
and cs1.cs_call_center_sk = cc_call_center_sk
and cc_county in ('Ziebach County','Levy County','Huron County','Franklin Parish',
                  'Daviess County'
)
and exists (select *
            from catalog_sales cs2
            where cs1.cs_order_number = cs2.cs_order_number
              and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk)
and not exists(select *
               from catalog_returns cr1
               where cs1.cs_order_number = cr1.cr_order_number)
order by count(distinct cs_order_number)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@call_center
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  
   count(distinct cs_order_number) as `order count`
  ,sum(cs_ext_ship_cost) as `total shipping cost`
  ,sum(cs_net_profit) as `total net profit`
from
   catalog_sales cs1
  ,date_dim
  ,customer_address
  ,call_center
where
    d_date between '2001-4-01' and 
           (cast('2001-4-01' as date) + 60 days)
and cs1.cs_ship_date_sk = d_date_sk
and cs1.cs_ship_addr_sk = ca_address_sk
and ca_state = 'NY'
and cs1.cs_call_center_sk = cc_call_center_sk
and cc_county in ('Ziebach County','Levy County','Huron County','Franklin Parish',
                  'Daviess County'
)
and exists (select *
            from catalog_sales cs2
            where cs1.cs_order_number = cs2.cs_order_number
              and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk)
and not exists(select *
               from catalog_returns cr1
               where cs1.cs_order_number = cr1.cr_order_number)
order by count(distinct cs_order_number)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@call_center
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 11 (BROADCAST_EDGE)
Reducer 11 <- Map 10 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Map 14 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 3 <- Map 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 12 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 13 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 15 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 8 vectorized
      File Output Operator [FS_158]
        Group By Operator [GBY_157] (rows=1 width=232)
          Output:["_col0","_col1","_col2"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"]
        <-Reducer 7 [CUSTOM_SIMPLE_EDGE] vectorized
          PARTITION_ONLY_SHUFFLE [RS_156]
            Group By Operator [GBY_155] (rows=1 width=232)
              Output:["_col0","_col1","_col2"],aggregations:["count(_col0)","sum(_col1)","sum(_col2)"]
              Group By Operator [GBY_154] (rows=283695062 width=228)
                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
              <-Reducer 6 [SIMPLE_EDGE]
                SHUFFLE [RS_70]
                  PartitionCols:_col0
                  Group By Operator [GBY_69] (rows=283695062 width=228)
                    Output:["_col0","_col2","_col3"],aggregations:["sum(_col5)","sum(_col6)"],keys:_col4
                    Select Operator [SEL_42] (rows=283695062 width=228)
                      Output:["_col4","_col5","_col6"]
                      Filter Operator [FIL_41] (rows=283695062 width=228)
                        predicate:_col13 is null
                        Merge Join Operator [MERGEJOIN_126] (rows=397917099 width=228)
                          Conds:RS_38._col4=RS_153._col1(Left Outer),Output:["_col4","_col5","_col6","_col13"]
                        <-Reducer 15 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_153]
                            PartitionCols:_col1
                            Select Operator [SEL_152] (rows=18238808 width=8)
                              Output:["_col0","_col1"]
                              Group By Operator [GBY_151] (rows=18238808 width=4)
                                Output:["_col0"],keys:KEY._col0
                              <-Map 14 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_150]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_149] (rows=28798881 width=4)
                                    Output:["_col0"],keys:cr_order_number
                                    Filter Operator [FIL_148] (rows=28798881 width=4)
                                      predicate:cr_order_number is not null
                                      TableScan [TS_25] (rows=28798881 width=4)
                                        default@catalog_returns,cr1,Tbl:COMPLETE,Col:COMPLETE,Output:["cr_order_number"]
                        <-Reducer 5 [SIMPLE_EDGE]
                          SHUFFLE [RS_38]
                            PartitionCols:_col4
                            Select Operator [SEL_37] (rows=283695062 width=231)
                              Output:["_col4","_col5","_col6"]
                              Merge Join Operator [MERGEJOIN_125] (rows=283695062 width=235)
                                Conds:RS_34._col4=RS_147._col0(Left Semi),Output:["_col3","_col4","_col5","_col6","_col14"],residual filter predicates:{(_col3 <> _col14)}
                              <-Map 13 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_147]
                                  PartitionCols:_col0
                                  Group By Operator [GBY_146] (rows=286548719 width=7)
                                    Output:["_col0","_col1"],keys:_col0, _col1
                                    Select Operator [SEL_145] (rows=286548719 width=7)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_144] (rows=286548719 width=7)
                                        predicate:(cs_warehouse_sk is not null and cs_order_number is not null)
                                        TableScan [TS_22] (rows=287989836 width=7)
                                          default@catalog_sales,cs2,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_warehouse_sk","cs_order_number"]
                              <-Reducer 4 [SIMPLE_EDGE]
                                SHUFFLE [RS_34]
                                  PartitionCols:_col4
                                  Merge Join Operator [MERGEJOIN_124] (rows=283695062 width=231)
                                    Conds:RS_18._col2=RS_143._col0(Inner),Output:["_col3","_col4","_col5","_col6"]
                                  <-Map 12 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_143]
                                      PartitionCols:_col0
                                      Select Operator [SEL_142] (rows=10 width=102)
                                        Output:["_col0"]
                                        Filter Operator [FIL_141] (rows=10 width=102)
                                          predicate:((cc_county) IN ('Ziebach County', 'Levy County', 'Huron County', 'Franklin Parish', 'Daviess County') and cc_call_center_sk is not null)
                                          TableScan [TS_9] (rows=60 width=102)
                                            default@call_center,call_center,Tbl:COMPLETE,Col:COMPLETE,Output:["cc_call_center_sk","cc_county"]
                                  <-Reducer 3 [SIMPLE_EDGE]
                                    SHUFFLE [RS_18]
                                      PartitionCols:_col2
                                      Merge Join Operator [MERGEJOIN_123] (rows=283695062 width=235)
                                        Conds:RS_15._col1=RS_129._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col6"]
                                      <-Map 10 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_129]
                                          PartitionCols:_col0
                                          Select Operator [SEL_128] (rows=784314 width=90)
                                            Output:["_col0"]
                                            Filter Operator [FIL_127] (rows=784314 width=90)
                                              predicate:((ca_state = 'NY') and ca_address_sk is not null)
                                              TableScan [TS_6] (rows=40000000 width=90)
                                                default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]
                                      <-Reducer 2 [SIMPLE_EDGE]
                                        SHUFFLE [RS_15]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_122] (rows=283695062 width=239)
                                            Conds:RS_137._col0=RS_140._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                                          <-Map 1 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_137]
                                              PartitionCols:_col0
                                              Select Operator [SEL_136] (rows=283695062 width=243)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                                Filter Operator [FIL_135] (rows=283695062 width=243)
                                                  predicate:(cs_ship_date_sk is not null and cs_call_center_sk is not null and cs_ship_addr_sk is not null and cs_order_number is not null and cs_ship_addr_sk BETWEEN DynamicValue(RS_16_customer_address_ca_address_sk_min) AND DynamicValue(RS_16_customer_address_ca_address_sk_max) and in_bloom_filter(cs_ship_addr_sk, DynamicValue(RS_16_customer_address_ca_address_sk_bloom_filter)))
                                                  TableScan [TS_0] (rows=287989836 width=243)
                                                    default@catalog_sales,cs1,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_ship_date_sk","cs_ship_addr_sk","cs_call_center_sk","cs_warehouse_sk","cs_order_number","cs_ext_ship_cost","cs_net_profit"]
                                                  <-Reducer 11 [BROADCAST_EDGE] vectorized
                                                    BROADCAST [RS_134]
                                                      Group By Operator [GBY_133] (rows=1 width=12)
                                                        Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                      <-Map 10 [CUSTOM_SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_132]
                                                          Group By Operator [GBY_131] (rows=1 width=12)
                                                            Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                            Select Operator [SEL_130] (rows=784314 width=4)
                                                              Output:["_col0"]
                                                               Please refer to the previous Select Operator [SEL_128]
                                          <-Map 9 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_140]
                                              PartitionCols:_col0
                                              Select Operator [SEL_139] (rows=8116 width=98)
                                                Output:["_col0"]
                                                Filter Operator [FIL_138] (rows=8116 width=98)
                                                  predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'2001-04-01 00:00:00' AND TIMESTAMP'2001-05-31 00:00:00' and d_date_sk is not null)
                                                  TableScan [TS_3] (rows=73049 width=98)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]

