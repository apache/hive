PREHOOK: query: use tpch_0_001
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:tpch_0_001
POSTHOOK: query: use tpch_0_001
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:tpch_0_001
PREHOOK: query: alter table orders add constraint pk_o primary key (o_orderkey) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table orders add constraint pk_o primary key (o_orderkey) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table customer add constraint pk_c primary key (c_custkey) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table customer add constraint pk_c primary key (c_custkey) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table lineitem add constraint li_o foreign key  (l_orderkey) references orders (o_orderkey) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table lineitem add constraint li_o foreign key  (l_orderkey) references orders (o_orderkey) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table orders   add constraint or_c foreign key  (o_custkey) references customer (c_custkey) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table orders   add constraint or_c foreign key  (o_custkey) references customer (c_custkey) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: create view q18_tmp_cached as
select
	l_orderkey,
	sum(l_quantity) as t_sum_quantity
from
	lineitem
where
	l_orderkey is not null
group by
	l_orderkey
PREHOOK: type: CREATEVIEW
PREHOOK: Input: tpch_0_001@lineitem
PREHOOK: Output: database:tpch_0_001
PREHOOK: Output: tpch_0_001@q18_tmp_cached
POSTHOOK: query: create view q18_tmp_cached as
select
	l_orderkey,
	sum(l_quantity) as t_sum_quantity
from
	lineitem
where
	l_orderkey is not null
group by
	l_orderkey
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: tpch_0_001@lineitem
POSTHOOK: Output: database:tpch_0_001
POSTHOOK: Output: tpch_0_001@q18_tmp_cached
POSTHOOK: Lineage: q18_tmp_cached.l_orderkey SIMPLE [(lineitem)lineitem.FieldSchema(name:l_orderkey, type:int, comment:null), ]
POSTHOOK: Lineage: q18_tmp_cached.t_sum_quantity EXPRESSION [(lineitem)lineitem.FieldSchema(name:l_quantity, type:double, comment:null), ]
PREHOOK: query: explain cbo select
c_name,
c_custkey,
o_orderkey,
o_orderdate,
o_totalprice,
sum(l_quantity)
from
	customer,
	orders,
	q18_tmp_cached t,
	lineitem l
where
c_custkey = o_custkey
and o_orderkey = t.l_orderkey
and o_orderkey is not null
and t.t_sum_quantity > 300
and o_orderkey = l.l_orderkey
and l.l_orderkey is not null
group by
c_name,
c_custkey,
o_orderkey,
o_orderdate,
o_totalprice
order by
o_totalprice desc,
o_orderdate
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: tpch_0_001@customer
PREHOOK: Input: tpch_0_001@lineitem
PREHOOK: Input: tpch_0_001@orders
PREHOOK: Input: tpch_0_001@q18_tmp_cached
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain cbo select
c_name,
c_custkey,
o_orderkey,
o_orderdate,
o_totalprice,
sum(l_quantity)
from
	customer,
	orders,
	q18_tmp_cached t,
	lineitem l
where
c_custkey = o_custkey
and o_orderkey = t.l_orderkey
and o_orderkey is not null
and t.t_sum_quantity > 300
and o_orderkey = l.l_orderkey
and l.l_orderkey is not null
group by
c_name,
c_custkey,
o_orderkey,
o_orderdate,
o_totalprice
order by
o_totalprice desc,
o_orderdate
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: tpch_0_001@customer
POSTHOOK: Input: tpch_0_001@lineitem
POSTHOOK: Input: tpch_0_001@orders
POSTHOOK: Input: tpch_0_001@q18_tmp_cached
POSTHOOK: Output: hdfs://### HDFS PATH ###
CBO PLAN:
HiveSortLimit(sort0=[$4], sort1=[$3], dir0=[DESC], dir1=[ASC], fetch=[100])
  HiveProject(c_name=[$4], c_custkey=[$3], o_orderkey=[$0], o_orderdate=[$2], o_totalprice=[$1], $f5=[$5])
    HiveAggregate(group=[{2, 4, 5, 6, 7}], agg#0=[sum($1)])
      HiveJoin(condition=[=($2, $0)], joinType=[inner], algorithm=[none], cost=[{6766.5 rows, 0.0 cpu, 0.0 io}])
        HiveProject(l_orderkey=[$0], l_quantity=[$4])
          HiveTableScan(table=[[tpch_0_001, lineitem]], table:alias=[l])
        HiveJoin(condition=[=($0, $6)], joinType=[inner], algorithm=[none], cost=[{1.0000000000009115E15 rows, 0.0 cpu, 0.0 io}])
          HiveJoin(condition=[=($4, $1)], joinType=[inner], algorithm=[none], cost=[{1650.0 rows, 0.0 cpu, 0.0 io}])
            HiveProject(o_orderkey=[$0], o_custkey=[$1], o_totalprice=[$3], o_orderdate=[$4])
              HiveTableScan(table=[[tpch_0_001, orders]], table:alias=[orders])
            HiveProject(c_custkey=[$0], c_name=[$1])
              HiveTableScan(table=[[tpch_0_001, customer]], table:alias=[customer])
          HiveProject($f0=[$0])
            HiveFilter(condition=[>($1, 3E2)])
              HiveAggregate(group=[{0}], agg#0=[sum($4)])
                HiveTableScan(table=[[tpch_0_001, lineitem]], table:alias=[lineitem])

PREHOOK: query: explain select
c_name,
c_custkey,
o_orderkey,
o_orderdate,
o_totalprice,
sum(l_quantity)
from
	customer,
	orders,
	q18_tmp_cached t,
	lineitem l
where
c_custkey = o_custkey
and o_orderkey = t.l_orderkey
and o_orderkey is not null
and t.t_sum_quantity > 300
and o_orderkey = l.l_orderkey
and l.l_orderkey is not null
group by
c_name,
c_custkey,
o_orderkey,
o_orderdate,
o_totalprice
order by
o_totalprice desc,
o_orderdate
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: tpch_0_001@customer
PREHOOK: Input: tpch_0_001@lineitem
PREHOOK: Input: tpch_0_001@orders
PREHOOK: Input: tpch_0_001@q18_tmp_cached
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select
c_name,
c_custkey,
o_orderkey,
o_orderdate,
o_totalprice,
sum(l_quantity)
from
	customer,
	orders,
	q18_tmp_cached t,
	lineitem l
where
c_custkey = o_custkey
and o_orderkey = t.l_orderkey
and o_orderkey is not null
and t.t_sum_quantity > 300
and o_orderkey = l.l_orderkey
and l.l_orderkey is not null
group by
c_name,
c_custkey,
o_orderkey,
o_orderdate,
o_totalprice
order by
o_totalprice desc,
o_orderdate
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: tpch_0_001@customer
POSTHOOK: Input: tpch_0_001@lineitem
POSTHOOK: Input: tpch_0_001@orders
POSTHOOK: Input: tpch_0_001@q18_tmp_cached
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 4 <- Map 10 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 9 <- Map 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_103]
        Limit [LIM_102] (rows=100 width=286)
          Number of rows:100
          Select Operator [SEL_101] (rows=750 width=286)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_100]
              Select Operator [SEL_99] (rows=750 width=286)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_98] (rows=750 width=286)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_24]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_23] (rows=1500 width=286)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col8)"],keys:_col2, _col3, _col0, _col4, _col5
                      Top N Key Operator [TNK_49] (rows=6005 width=286)
                        keys:_col2, _col3, _col0, _col4, _col5,top n:100
                        Merge Join Operator [MERGEJOIN_85] (rows=6005 width=286)
                          Conds:RS_19._col0=RS_97._col0(Inner),Output:["_col0","_col2","_col3","_col4","_col5","_col8"]
                        <-Map 10 [SIMPLE_EDGE] vectorized
                          SHUFFLE [RS_97]
                            PartitionCols:_col0
                            Select Operator [SEL_96] (rows=6005 width=12)
                              Output:["_col0","_col1"]
                              TableScan [TS_11] (rows=6005 width=12)
                                tpch_0_001@lineitem,l,Tbl:COMPLETE,Col:COMPLETE,Output:["l_orderkey","l_quantity"]
                        <-Reducer 3 [SIMPLE_EDGE]
                          SHUFFLE [RS_19]
                            PartitionCols:_col0
                            Merge Join Operator [MERGEJOIN_84] (rows=1523 width=278)
                              Conds:RS_16._col0=RS_95._col0(Inner),Output:["_col0","_col2","_col3","_col4","_col5"]
                            <-Reducer 2 [SIMPLE_EDGE]
                              SHUFFLE [RS_16]
                                PartitionCols:_col0
                                Merge Join Operator [MERGEJOIN_83] (rows=1500 width=278)
                                  Conds:RS_87._col1=RS_89._col0(Inner),Output:["_col0","_col2","_col3","_col4","_col5"]
                                <-Map 1 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_87]
                                    PartitionCols:_col1
                                    Select Operator [SEL_86] (rows=1500 width=176)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      TableScan [TS_0] (rows=1500 width=176)
                                        tpch_0_001@orders,orders,Tbl:COMPLETE,Col:COMPLETE,Output:["o_orderkey","o_custkey","o_totalprice","o_orderdate"]
                                <-Map 7 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_89]
                                    PartitionCols:_col0
                                    Select Operator [SEL_88] (rows=150 width=106)
                                      Output:["_col0","_col1"]
                                      TableScan [TS_2] (rows=150 width=106)
                                        tpch_0_001@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_custkey","c_name"]
                            <-Reducer 9 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_95]
                                PartitionCols:_col0
                                Select Operator [SEL_94] (rows=1523 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_93] (rows=1523 width=12)
                                    predicate:(_col1 > 300.0D)
                                    Group By Operator [GBY_92] (rows=1523 width=12)
                                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                                    <-Map 8 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_91]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_90] (rows=1523 width=12)
                                          Output:["_col0","_col1"],aggregations:["sum(l_quantity)"],keys:l_orderkey
                                          TableScan [TS_4] (rows=6005 width=12)
                                            tpch_0_001@lineitem,lineitem,Tbl:COMPLETE,Col:COMPLETE,Output:["l_orderkey","l_quantity"],properties:{"insideView":"TRUE"}

