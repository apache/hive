PREHOOK: query: explain
select  s_store_name, s_store_id,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from date_dim, store_sales, store
 where d_date_sk = ss_sold_date_sk and
       s_store_sk = ss_store_sk and
       s_gmt_offset = -6 and
       d_year = 1998 
 group by s_store_name, s_store_id
 order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  s_store_name, s_store_id,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from date_dim, store_sales, store
 where d_date_sk = ss_sold_date_sk and
       s_store_sk = ss_store_sk and
       s_gmt_offset = -6 and
       d_year = 1998 
 group by s_store_name, s_store_id
 order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 3 <- Map 7 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_48]
        Limit [LIM_47] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_46] (rows=348477374 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_45]
              Group By Operator [GBY_44] (rows=348477374 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)","sum(VALUE._col4)","sum(VALUE._col5)","sum(VALUE._col6)"],keys:KEY._col0, KEY._col1
              <-Reducer 3 [SIMPLE_EDGE]
                SHUFFLE [RS_18]
                  PartitionCols:_col0, _col1
                  Group By Operator [GBY_17] (rows=696954748 width=88)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col2)","sum(_col3)","sum(_col4)","sum(_col5)","sum(_col6)","sum(_col7)","sum(_col8)"],keys:_col0, _col1
                    Select Operator [SEL_15] (rows=696954748 width=88)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                      Merge Join Operator [MERGEJOIN_34] (rows=696954748 width=88)
                        Conds:RS_12._col1=RS_43._col0(Inner),Output:["_col2","_col5","_col7","_col8"]
                      <-Map 7 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_43]
                          PartitionCols:_col0
                          Select Operator [SEL_42] (rows=852 width=1910)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_41] (rows=852 width=1910)
                              predicate:((s_gmt_offset = -6) and s_store_sk is not null)
                              TableScan [TS_6] (rows=1704 width=1910)
                                default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_store_id","s_store_name","s_gmt_offset"]
                      <-Reducer 2 [SIMPLE_EDGE]
                        SHUFFLE [RS_12]
                          PartitionCols:_col1
                          Merge Join Operator [MERGEJOIN_33] (rows=633595212 width=88)
                            Conds:RS_37._col0=RS_40._col0(Inner),Output:["_col1","_col2","_col5"]
                          <-Map 1 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_37]
                              PartitionCols:_col0
                              Select Operator [SEL_36] (rows=575995635 width=88)
                                Output:["_col0","_col1","_col2"]
                                Filter Operator [FIL_35] (rows=575995635 width=88)
                                  predicate:(ss_sold_date_sk is not null and ss_store_sk is not null)
                                  TableScan [TS_0] (rows=575995635 width=88)
                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_store_sk","ss_sales_price"]
                          <-Map 6 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_40]
                              PartitionCols:_col0
                              Select Operator [SEL_39] (rows=36524 width=1119)
                                Output:["_col0","_col2"]
                                Filter Operator [FIL_38] (rows=36524 width=1119)
                                  predicate:((d_year = 1998) and d_date_sk is not null)
                                  TableScan [TS_3] (rows=73049 width=1119)
                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_day_name"]

