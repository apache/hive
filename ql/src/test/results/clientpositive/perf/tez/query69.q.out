PREHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Map 10 (SIMPLE_EDGE), Map 12 (SIMPLE_EDGE)
Reducer 13 <- Map 12 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Map 12 (SIMPLE_EDGE), Map 18 (SIMPLE_EDGE)
Reducer 16 <- Reducer 15 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Map 9 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 11 (SIMPLE_EDGE), Reducer 14 (ONE_TO_ONE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 16 (ONE_TO_ONE_EDGE), Reducer 4 (ONE_TO_ONE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized
      File Output Operator [FS_146]
        Limit [LIM_145] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_144] (rows=191662559 width=88)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 6 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_143]
              Select Operator [SEL_142] (rows=191662559 width=88)
                Output:["_col0","_col1","_col2","_col3","_col4","_col6"]
                Group By Operator [GBY_141] (rows=191662559 width=88)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Reducer 5 [SIMPLE_EDGE]
                  SHUFFLE [RS_67]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_66] (rows=383325119 width=88)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count()"],keys:_col6, _col7, _col8, _col9, _col10
                      Select Operator [SEL_65] (rows=383325119 width=88)
                        Output:["_col6","_col7","_col8","_col9","_col10"]
                        Filter Operator [FIL_64] (rows=383325119 width=88)
                          predicate:_col14 is null
                          Merge Join Operator [MERGEJOIN_111] (rows=766650239 width=88)
                            Conds:RS_61._col0=RS_140._col0(Left Outer),Output:["_col6","_col7","_col8","_col9","_col10","_col14"]
                          <-Reducer 16 [ONE_TO_ONE_EDGE] vectorized
                            FORWARD [RS_140]
                              PartitionCols:_col0
                              Select Operator [SEL_139] (rows=158394413 width=135)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_138] (rows=158394413 width=135)
                                  Output:["_col0"],keys:KEY._col0
                                <-Reducer 15 [SIMPLE_EDGE]
                                  SHUFFLE [RS_58]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_57] (rows=316788826 width=135)
                                      Output:["_col0"],keys:_col1
                                      Merge Join Operator [MERGEJOIN_109] (rows=316788826 width=135)
                                        Conds:RS_137._col0=RS_128._col0(Inner),Output:["_col1"]
                                      <-Map 12 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_128]
                                          PartitionCols:_col0
                                          Select Operator [SEL_125] (rows=4058 width=1119)
                                            Output:["_col0"]
                                            Filter Operator [FIL_124] (rows=4058 width=1119)
                                              predicate:((d_year = 1999) and d_date_sk is not null and d_moy BETWEEN 1 AND 3)
                                              TableScan [TS_12] (rows=73049 width=1119)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                      <-Map 18 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_137]
                                          PartitionCols:_col0
                                          Select Operator [SEL_136] (rows=287989836 width=135)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_135] (rows=287989836 width=135)
                                              predicate:(cs_ship_customer_sk is not null and cs_sold_date_sk is not null)
                                              TableScan [TS_47] (rows=287989836 width=135)
                                                default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_ship_customer_sk"]
                          <-Reducer 4 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_61]
                              PartitionCols:_col0
                              Select Operator [SEL_46] (rows=696954748 width=88)
                                Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                Filter Operator [FIL_45] (rows=696954748 width=88)
                                  predicate:_col12 is null
                                  Merge Join Operator [MERGEJOIN_110] (rows=1393909496 width=88)
                                    Conds:RS_41._col0=RS_42._col0(Left Semi),RS_41._col0=RS_134._col0(Left Outer),Output:["_col0","_col6","_col7","_col8","_col9","_col10","_col12"]
                                  <-Reducer 11 [SIMPLE_EDGE]
                                    SHUFFLE [RS_42]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_40] (rows=633595212 width=88)
                                        Output:["_col0"],keys:_col0
                                        Select Operator [SEL_18] (rows=633595212 width=88)
                                          Output:["_col0"]
                                          Merge Join Operator [MERGEJOIN_107] (rows=633595212 width=88)
                                            Conds:RS_123._col0=RS_126._col0(Inner),Output:["_col1"]
                                          <-Map 12 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_126]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_125]
                                          <-Map 10 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_123]
                                              PartitionCols:_col0
                                              Select Operator [SEL_122] (rows=575995635 width=88)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_121] (rows=575995635 width=88)
                                                  predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                  TableScan [TS_9] (rows=575995635 width=88)
                                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk"]
                                  <-Reducer 14 [ONE_TO_ONE_EDGE] vectorized
                                    FORWARD [RS_134]
                                      PartitionCols:_col0
                                      Select Operator [SEL_133] (rows=79201469 width=135)
                                        Output:["_col0","_col1"]
                                        Group By Operator [GBY_132] (rows=79201469 width=135)
                                          Output:["_col0"],keys:KEY._col0
                                        <-Reducer 13 [SIMPLE_EDGE]
                                          SHUFFLE [RS_30]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_29] (rows=158402938 width=135)
                                              Output:["_col0"],keys:_col1
                                              Merge Join Operator [MERGEJOIN_108] (rows=158402938 width=135)
                                                Conds:RS_131._col0=RS_127._col0(Inner),Output:["_col1"]
                                              <-Map 12 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_127]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_125]
                                              <-Map 17 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_131]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_130] (rows=144002668 width=135)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_129] (rows=144002668 width=135)
                                                      predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                                      TableScan [TS_19] (rows=144002668 width=135)
                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_bill_customer_sk"]
                                  <-Reducer 3 [SIMPLE_EDGE]
                                    SHUFFLE [RS_41]
                                      PartitionCols:_col0
                                      Merge Join Operator [MERGEJOIN_106] (rows=96800003 width=860)
                                        Conds:RS_36._col1=RS_120._col0(Inner),Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                      <-Map 9 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_120]
                                          PartitionCols:_col0
                                          Select Operator [SEL_119] (rows=1861800 width=385)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                            Filter Operator [FIL_118] (rows=1861800 width=385)
                                              predicate:cd_demo_sk is not null
                                              TableScan [TS_6] (rows=1861800 width=385)
                                                default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:NONE,Output:["cd_demo_sk","cd_gender","cd_marital_status","cd_education_status","cd_purchase_estimate","cd_credit_rating"]
                                      <-Reducer 2 [SIMPLE_EDGE]
                                        SHUFFLE [RS_36]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_105] (rows=88000001 width=860)
                                            Conds:RS_114._col2=RS_117._col0(Inner),Output:["_col0","_col1"]
                                          <-Map 1 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_114]
                                              PartitionCols:_col2
                                              Select Operator [SEL_113] (rows=80000000 width=860)
                                                Output:["_col0","_col1","_col2"]
                                                Filter Operator [FIL_112] (rows=80000000 width=860)
                                                  predicate:(c_current_addr_sk is not null and c_current_cdemo_sk is not null and c_customer_sk is not null)
                                                  TableScan [TS_0] (rows=80000000 width=860)
                                                    default@customer,c,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_addr_sk"]
                                          <-Map 8 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_117]
                                              PartitionCols:_col0
                                              Select Operator [SEL_116] (rows=20000000 width=1014)
                                                Output:["_col0"]
                                                Filter Operator [FIL_115] (rows=20000000 width=1014)
                                                  predicate:((ca_state) IN ('CO', 'IL', 'MN') and ca_address_sk is not null)
                                                  TableScan [TS_3] (rows=40000000 width=1014)
                                                    default@customer_address,ca,Tbl:COMPLETE,Col:NONE,Output:["ca_address_sk","ca_state"]

