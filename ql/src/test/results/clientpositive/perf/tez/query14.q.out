Warning: Shuffle Join MERGEJOIN[890][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 5' is a cross product
Warning: Shuffle Join MERGEJOIN[891][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 12' is a cross product
Warning: Shuffle Join MERGEJOIN[892][tables = [$hdt$_2, $hdt$_3, $hdt$_1]] in Stage 'Reducer 16' is a cross product
PREHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Union 10 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (CUSTOM_SIMPLE_EDGE), Reducer 27 (CUSTOM_SIMPLE_EDGE), Reducer 52 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 13 <- Map 1 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 15 <- Union 14 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Reducer 15 (CUSTOM_SIMPLE_EDGE), Reducer 30 (CUSTOM_SIMPLE_EDGE), Reducer 55 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 18 <- Map 17 (SIMPLE_EDGE), Map 21 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 19 <- Map 17 (SIMPLE_EDGE), Map 21 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 20 <- Map 17 (SIMPLE_EDGE), Map 21 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 22 <- Map 21 (SIMPLE_EDGE), Map 43 (SIMPLE_EDGE), Union 23 (CONTAINS)
Reducer 24 <- Union 23 (CUSTOM_SIMPLE_EDGE)
Reducer 25 <- Map 21 (SIMPLE_EDGE), Map 43 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 27 <- Union 26 (CUSTOM_SIMPLE_EDGE)
Reducer 28 <- Map 21 (SIMPLE_EDGE), Map 43 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 30 <- Union 29 (CUSTOM_SIMPLE_EDGE)
Reducer 32 <- Map 31 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 33 <- Map 31 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 34 <- Map 31 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 36 <- Map 35 (SIMPLE_EDGE), Map 44 (SIMPLE_EDGE), Union 23 (CONTAINS)
Reducer 37 <- Map 35 (SIMPLE_EDGE), Map 44 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 38 <- Map 35 (SIMPLE_EDGE), Map 44 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 4 <- Union 3 (CUSTOM_SIMPLE_EDGE)
Reducer 40 <- Map 39 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 23 (CONTAINS)
Reducer 41 <- Map 39 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 42 <- Map 39 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 46 <- Map 45 (SIMPLE_EDGE), Map 49 (SIMPLE_EDGE)
Reducer 47 <- Map 56 (SIMPLE_EDGE), Reducer 46 (SIMPLE_EDGE), Reducer 58 (ONE_TO_ONE_EDGE)
Reducer 48 <- Reducer 47 (SIMPLE_EDGE)
Reducer 5 <- Reducer 24 (CUSTOM_SIMPLE_EDGE), Reducer 4 (CUSTOM_SIMPLE_EDGE), Reducer 48 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 50 <- Map 49 (SIMPLE_EDGE), Map 91 (SIMPLE_EDGE)
Reducer 51 <- Map 56 (SIMPLE_EDGE), Reducer 50 (SIMPLE_EDGE), Reducer 68 (ONE_TO_ONE_EDGE)
Reducer 52 <- Reducer 51 (SIMPLE_EDGE)
Reducer 53 <- Map 49 (SIMPLE_EDGE), Map 92 (SIMPLE_EDGE)
Reducer 54 <- Map 56 (SIMPLE_EDGE), Reducer 53 (SIMPLE_EDGE), Reducer 77 (ONE_TO_ONE_EDGE)
Reducer 55 <- Reducer 54 (SIMPLE_EDGE)
Reducer 57 <- Map 56 (SIMPLE_EDGE), Reducer 62 (ONE_TO_ONE_EDGE)
Reducer 58 <- Reducer 57 (SIMPLE_EDGE)
Reducer 59 <- Map 56 (SIMPLE_EDGE), Reducer 85 (SIMPLE_EDGE)
Reducer 60 <- Reducer 59 (SIMPLE_EDGE), Union 61 (CONTAINS)
Reducer 62 <- Union 61 (SIMPLE_EDGE)
Reducer 63 <- Map 56 (SIMPLE_EDGE), Reducer 87 (SIMPLE_EDGE)
Reducer 64 <- Reducer 63 (SIMPLE_EDGE), Union 61 (CONTAINS)
Reducer 65 <- Map 56 (SIMPLE_EDGE), Reducer 88 (SIMPLE_EDGE)
Reducer 66 <- Reducer 65 (SIMPLE_EDGE), Union 61 (CONTAINS)
Reducer 67 <- Map 56 (SIMPLE_EDGE), Reducer 72 (ONE_TO_ONE_EDGE)
Reducer 68 <- Reducer 67 (SIMPLE_EDGE)
Reducer 69 <- Map 56 (SIMPLE_EDGE), Reducer 85 (SIMPLE_EDGE)
Reducer 7 <- Union 6 (SIMPLE_EDGE)
Reducer 70 <- Reducer 69 (SIMPLE_EDGE), Union 71 (CONTAINS)
Reducer 72 <- Union 71 (SIMPLE_EDGE)
Reducer 73 <- Reducer 69 (SIMPLE_EDGE), Union 74 (CONTAINS)
Reducer 75 <- Union 74 (SIMPLE_EDGE)
Reducer 76 <- Map 56 (SIMPLE_EDGE), Reducer 75 (ONE_TO_ONE_EDGE)
Reducer 77 <- Reducer 76 (SIMPLE_EDGE)
Reducer 78 <- Map 56 (SIMPLE_EDGE), Reducer 87 (SIMPLE_EDGE)
Reducer 79 <- Reducer 78 (SIMPLE_EDGE), Union 71 (CONTAINS)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
Reducer 80 <- Reducer 78 (SIMPLE_EDGE), Union 74 (CONTAINS)
Reducer 81 <- Map 56 (SIMPLE_EDGE), Reducer 88 (SIMPLE_EDGE)
Reducer 82 <- Reducer 81 (SIMPLE_EDGE), Union 71 (CONTAINS)
Reducer 83 <- Reducer 81 (SIMPLE_EDGE), Union 74 (CONTAINS)
Reducer 85 <- Map 84 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE)
Reducer 87 <- Map 86 (SIMPLE_EDGE), Map 89 (SIMPLE_EDGE)
Reducer 88 <- Map 86 (SIMPLE_EDGE), Map 90 (SIMPLE_EDGE)
Reducer 9 <- Map 1 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 10 (CONTAINS)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8
      File Output Operator [FS_574]
        Limit [LIM_573] (rows=100 width=237)
          Number of rows:100
          Select Operator [SEL_572] (rows=1016388080 width=237)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 7 [SIMPLE_EDGE]
            SHUFFLE [RS_571]
              Select Operator [SEL_570] (rows=1016388080 width=237)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_569] (rows=1016388080 width=237)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 6 [SIMPLE_EDGE]
                  <-Reducer 12 [CONTAINS]
                    Reduce Output Operator [RS_568]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_567] (rows=2032776160 width=237)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Select Operator [SEL_375] (rows=116155905 width=264)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_374] (rows=116155905 width=264)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_891] (rows=348467716 width=264)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 11 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_370]
                                Select Operator [SEL_231] (rows=1 width=8)
                                  Filter Operator [FIL_230] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_228] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_223] (rows=1 width=8)
                                        Group By Operator [GBY_222] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 10 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 19 [CONTAINS]
                                            Reduce Output Operator [RS_221]
                                              Group By Operator [GBY_220] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_219] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_207] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_861] (rows=316788826 width=135)
                                                      Conds:RS_204._col0=RS_205._col0(Inner),Output:["_col1"]
                                                    <-Map 21 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_205]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_15] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_773] (rows=8116 width=1119)
                                                            predicate:(d_date_sk is not null and d_year BETWEEN 1998 AND 2000)
                                                            TableScan [TS_13] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_204]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_12] (rows=287989836 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_772] (rows=287989836 width=135)
                                                            predicate:cs_sold_date_sk is not null
                                                            TableScan [TS_10] (rows=287989836 width=135)
                                                              default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity"]
                                          <-Reducer 33 [CONTAINS]
                                            Reduce Output Operator [RS_221]
                                              Group By Operator [GBY_220] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_219] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_218] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_862] (rows=158402938 width=135)
                                                      Conds:RS_215._col0=RS_216._col0(Inner),Output:["_col1"]
                                                    <-Map 35 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_216]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_26] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_775] (rows=8116 width=1119)
                                                            predicate:(d_date_sk is not null and d_year BETWEEN 1998 AND 2000)
                                                            TableScan [TS_24] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 31 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_215]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_23] (rows=144002668 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_774] (rows=144002668 width=135)
                                                            predicate:ws_sold_date_sk is not null
                                                            TableScan [TS_21] (rows=144002668 width=135)
                                                              default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity"]
                                          <-Reducer 9 [CONTAINS]
                                            Reduce Output Operator [RS_221]
                                              Group By Operator [GBY_220] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_219] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_197] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_860] (rows=633595212 width=88)
                                                      Conds:RS_194._col0=RS_195._col0(Inner),Output:["_col1"]
                                                    <-Map 86 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_195]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_98] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_787] (rows=8116 width=1119)
                                                            predicate:(d_date_sk is not null and d_year BETWEEN 1999 AND 2001)
                                                            TableScan [TS_96] (rows=73049 width=1119)
                                                              default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_194]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_2] (rows=575995635 width=88)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_770] (rows=575995635 width=88)
                                                            predicate:ss_sold_date_sk is not null
                                                            TableScan [TS_0] (rows=575995635 width=88)
                                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity"]
                            <-Reducer 27 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_371]
                                Select Operator [SEL_268] (rows=1 width=120)
                                  Output:["_col0"]
                                  Group By Operator [GBY_267] (rows=1 width=120)
                                    Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                  <-Union 26 [CUSTOM_SIMPLE_EDGE]
                                    <-Reducer 25 [CONTAINS]
                                      Reduce Output Operator [RS_266]
                                        Group By Operator [GBY_265] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_263] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_251] (rows=316788826 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_864] (rows=316788826 width=135)
                                                Conds:RS_248._col0=RS_249._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 21 [SIMPLE_EDGE]
                                                SHUFFLE [RS_249]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_15]
                                              <-Map 43 [SIMPLE_EDGE]
                                                SHUFFLE [RS_248]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_56] (rows=287989836 width=135)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_778] (rows=287989836 width=135)
                                                      predicate:cs_sold_date_sk is not null
                                                      TableScan [TS_54] (rows=287989836 width=135)
                                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                    <-Reducer 37 [CONTAINS]
                                      Reduce Output Operator [RS_266]
                                        Group By Operator [GBY_265] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_263] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_262] (rows=158402938 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_865] (rows=158402938 width=135)
                                                Conds:RS_259._col0=RS_260._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 35 [SIMPLE_EDGE]
                                                SHUFFLE [RS_260]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_26]
                                              <-Map 44 [SIMPLE_EDGE]
                                                SHUFFLE [RS_259]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_67] (rows=144002668 width=135)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_780] (rows=144002668 width=135)
                                                      predicate:ws_sold_date_sk is not null
                                                      TableScan [TS_65] (rows=144002668 width=135)
                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                                    <-Reducer 41 [CONTAINS]
                                      Reduce Output Operator [RS_266]
                                        Group By Operator [GBY_265] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_263] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_241] (rows=633595212 width=88)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_863] (rows=633595212 width=88)
                                                Conds:RS_238._col0=RS_239._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 86 [SIMPLE_EDGE]
                                                SHUFFLE [RS_239]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_98]
                                              <-Map 39 [SIMPLE_EDGE]
                                                SHUFFLE [RS_238]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_46] (rows=575995635 width=88)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_776] (rows=575995635 width=88)
                                                      predicate:ss_sold_date_sk is not null
                                                      TableScan [TS_44] (rows=575995635 width=88)
                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                            <-Reducer 52 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_372]
                                Group By Operator [GBY_368] (rows=348467716 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 51 [SIMPLE_EDGE]
                                  SHUFFLE [RS_367]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_366] (rows=696935432 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_364] (rows=696935432 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_874] (rows=696935432 width=135)
                                          Conds:RS_360._col1=RS_361._col0(Inner),RS_360._col1=RS_362._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 56 [SIMPLE_EDGE]
                                          SHUFFLE [RS_361]
                                            PartitionCols:_col0
                                            Select Operator [SEL_277] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_809] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                TableScan [TS_90] (rows=462000 width=1436)
                                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                        <-Reducer 50 [SIMPLE_EDGE]
                                          SHUFFLE [RS_360]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_866] (rows=316788826 width=135)
                                              Conds:RS_357._col0=RS_358._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 49 [SIMPLE_EDGE]
                                              SHUFFLE [RS_358]
                                                PartitionCols:_col0
                                                Select Operator [SEL_86] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_783] (rows=18262 width=1119)
                                                    predicate:((d_moy = 11) and (d_year = 2000) and d_date_sk is not null)
                                                    TableScan [TS_84] (rows=73049 width=1119)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                            <-Map 91 [SIMPLE_EDGE]
                                              SHUFFLE [RS_357]
                                                PartitionCols:_col0
                                                Select Operator [SEL_271] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_807] (rows=287989836 width=135)
                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                    TableScan [TS_269] (rows=287989836 width=135)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_quantity","cs_list_price"]
                                        <-Reducer 68 [ONE_TO_ONE_EDGE]
                                          FORWARD [RS_362]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_355] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 67 [SIMPLE_EDGE]
                                              SHUFFLE [RS_354]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_353] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_873] (rows=508200 width=1436)
                                                    Conds:RS_349._col1, _col2, _col3=RS_350._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 56 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_349]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_280] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_810] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_90]
                                                  <-Reducer 72 [ONE_TO_ONE_EDGE]
                                                    FORWARD [RS_350]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_348] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_347] (rows=1 width=108)
                                                          predicate:(_col3 = 3L)
                                                          Group By Operator [GBY_346] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 71 [SIMPLE_EDGE]
                                                            <-Reducer 70 [CONTAINS]
                                                              Reduce Output Operator [RS_345]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_344] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_299] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 69 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_298]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_297] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_868] (rows=696954748 width=88)
                                                                          Conds:RS_293._col1=RS_294._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_294]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_289] (rows=462000 width=1436)
                                                                              Output:["_col0","_col1","_col2","_col3"]
                                                                              Filter Operator [FIL_813] (rows=462000 width=1436)
                                                                                predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                                                 Please refer to the previous TableScan [TS_90]
                                                                        <-Reducer 85 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_293]
                                                                            PartitionCols:_col1
                                                                            Merge Join Operator [MERGEJOIN_852] (rows=633595212 width=88)
                                                                              Conds:RS_102._col0=RS_103._col0(Inner),Output:["_col1"]
                                                                            <-Map 86 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_103]
                                                                                PartitionCols:_col0
                                                                                 Please refer to the previous Select Operator [SEL_98]
                                                                            <-Map 84 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_102]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_95] (rows=575995635 width=88)
                                                                                  Output:["_col0","_col1"]
                                                                                  Filter Operator [FIL_786] (rows=575995635 width=88)
                                                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                    TableScan [TS_93] (rows=575995635 width=88)
                                                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                            <-Reducer 79 [CONTAINS]
                                                              Reduce Output Operator [RS_345]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_344] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_319] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 78 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_318]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_317] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_870] (rows=348467716 width=135)
                                                                          Conds:RS_313._col1=RS_314._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_314]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_309] (rows=462000 width=1436)
                                                                              Output:["_col0","_col1","_col2","_col3"]
                                                                              Filter Operator [FIL_816] (rows=462000 width=1436)
                                                                                predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                                                 Please refer to the previous TableScan [TS_90]
                                                                        <-Reducer 87 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_313]
                                                                            PartitionCols:_col1
                                                                            Merge Join Operator [MERGEJOIN_854] (rows=316788826 width=135)
                                                                              Conds:RS_122._col0=RS_123._col0(Inner),Output:["_col1"]
                                                                            <-Map 86 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_123]
                                                                                PartitionCols:_col0
                                                                                 Please refer to the previous Select Operator [SEL_98]
                                                                            <-Map 89 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_122]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_115] (rows=287989836 width=135)
                                                                                  Output:["_col0","_col1"]
                                                                                  Filter Operator [FIL_789] (rows=287989836 width=135)
                                                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                    TableScan [TS_113] (rows=287989836 width=135)
                                                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk"]
                                                            <-Reducer 82 [CONTAINS]
                                                              Reduce Output Operator [RS_345]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_344] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_340] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 81 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_339]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_338] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_872] (rows=174243235 width=135)
                                                                          Conds:RS_334._col1=RS_335._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_335]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_330] (rows=462000 width=1436)
                                                                              Output:["_col0","_col1","_col2","_col3"]
                                                                              Filter Operator [FIL_819] (rows=462000 width=1436)
                                                                                predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                                                 Please refer to the previous TableScan [TS_90]
                                                                        <-Reducer 88 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_334]
                                                                            PartitionCols:_col1
                                                                            Merge Join Operator [MERGEJOIN_856] (rows=158402938 width=135)
                                                                              Conds:RS_143._col0=RS_144._col0(Inner),Output:["_col1"]
                                                                            <-Map 86 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_144]
                                                                                PartitionCols:_col0
                                                                                 Please refer to the previous Select Operator [SEL_98]
                                                                            <-Map 90 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_143]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_136] (rows=144002668 width=135)
                                                                                  Output:["_col0","_col1"]
                                                                                  Filter Operator [FIL_792] (rows=144002668 width=135)
                                                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                    TableScan [TS_134] (rows=144002668 width=135)
                                                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk"]
                  <-Reducer 16 [CONTAINS]
                    Reduce Output Operator [RS_568]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_567] (rows=2032776160 width=237)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Select Operator [SEL_564] (rows=58081078 width=264)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_563] (rows=58081078 width=264)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_892] (rows=174243235 width=264)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 15 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_559]
                                Select Operator [SEL_420] (rows=1 width=8)
                                  Filter Operator [FIL_419] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_417] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_412] (rows=1 width=8)
                                        Group By Operator [GBY_411] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 14 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 13 [CONTAINS]
                                            Reduce Output Operator [RS_410]
                                              Group By Operator [GBY_409] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_408] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_386] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_875] (rows=633595212 width=88)
                                                      Conds:RS_383._col0=RS_384._col0(Inner),Output:["_col1"]
                                                    <-Map 86 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_384]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_98]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_383]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_2]
                                          <-Reducer 20 [CONTAINS]
                                            Reduce Output Operator [RS_410]
                                              Group By Operator [GBY_409] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_408] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_396] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_876] (rows=316788826 width=135)
                                                      Conds:RS_393._col0=RS_394._col0(Inner),Output:["_col1"]
                                                    <-Map 21 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_394]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_15]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_393]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_12]
                                          <-Reducer 34 [CONTAINS]
                                            Reduce Output Operator [RS_410]
                                              Group By Operator [GBY_409] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_408] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_407] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_877] (rows=158402938 width=135)
                                                      Conds:RS_404._col0=RS_405._col0(Inner),Output:["_col1"]
                                                    <-Map 35 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_405]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_26]
                                                    <-Map 31 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_404]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_23]
                            <-Reducer 30 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_560]
                                Select Operator [SEL_457] (rows=1 width=120)
                                  Output:["_col0"]
                                  Group By Operator [GBY_456] (rows=1 width=120)
                                    Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                  <-Union 29 [CUSTOM_SIMPLE_EDGE]
                                    <-Reducer 28 [CONTAINS]
                                      Reduce Output Operator [RS_455]
                                        Group By Operator [GBY_454] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_452] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_440] (rows=316788826 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_879] (rows=316788826 width=135)
                                                Conds:RS_437._col0=RS_438._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 21 [SIMPLE_EDGE]
                                                SHUFFLE [RS_438]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_15]
                                              <-Map 43 [SIMPLE_EDGE]
                                                SHUFFLE [RS_437]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_56]
                                    <-Reducer 38 [CONTAINS]
                                      Reduce Output Operator [RS_455]
                                        Group By Operator [GBY_454] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_452] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_451] (rows=158402938 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_880] (rows=158402938 width=135)
                                                Conds:RS_448._col0=RS_449._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 35 [SIMPLE_EDGE]
                                                SHUFFLE [RS_449]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_26]
                                              <-Map 44 [SIMPLE_EDGE]
                                                SHUFFLE [RS_448]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_67]
                                    <-Reducer 42 [CONTAINS]
                                      Reduce Output Operator [RS_455]
                                        Group By Operator [GBY_454] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_452] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_430] (rows=633595212 width=88)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_878] (rows=633595212 width=88)
                                                Conds:RS_427._col0=RS_428._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 86 [SIMPLE_EDGE]
                                                SHUFFLE [RS_428]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_98]
                                              <-Map 39 [SIMPLE_EDGE]
                                                SHUFFLE [RS_427]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_46]
                            <-Reducer 55 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_561]
                                Group By Operator [GBY_557] (rows=174243235 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 54 [SIMPLE_EDGE]
                                  SHUFFLE [RS_556]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_555] (rows=348486471 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_553] (rows=348486471 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_889] (rows=348486471 width=135)
                                          Conds:RS_549._col1=RS_550._col0(Inner),RS_549._col1=RS_551._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 56 [SIMPLE_EDGE]
                                          SHUFFLE [RS_550]
                                            PartitionCols:_col0
                                            Select Operator [SEL_466] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_834] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_90]
                                        <-Reducer 53 [SIMPLE_EDGE]
                                          SHUFFLE [RS_549]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_881] (rows=158402938 width=135)
                                              Conds:RS_546._col0=RS_547._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 49 [SIMPLE_EDGE]
                                              SHUFFLE [RS_547]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_86]
                                            <-Map 92 [SIMPLE_EDGE]
                                              SHUFFLE [RS_546]
                                                PartitionCols:_col0
                                                Select Operator [SEL_460] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_832] (rows=144002668 width=135)
                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                    TableScan [TS_458] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_quantity","ws_list_price"]
                                        <-Reducer 77 [ONE_TO_ONE_EDGE]
                                          FORWARD [RS_551]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_544] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 76 [SIMPLE_EDGE]
                                              SHUFFLE [RS_543]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_542] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_888] (rows=508200 width=1436)
                                                    Conds:RS_538._col1, _col2, _col3=RS_539._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 56 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_538]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_469] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_835] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_90]
                                                  <-Reducer 75 [ONE_TO_ONE_EDGE]
                                                    FORWARD [RS_539]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_537] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_536] (rows=1 width=108)
                                                          predicate:(_col3 = 3L)
                                                          Group By Operator [GBY_535] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 74 [SIMPLE_EDGE]
                                                            <-Reducer 73 [CONTAINS]
                                                              Reduce Output Operator [RS_534]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_533] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_488] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 69 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_487]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                       Please refer to the previous Group By Operator [GBY_297]
                                                            <-Reducer 80 [CONTAINS]
                                                              Reduce Output Operator [RS_534]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_533] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_508] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 78 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_507]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                       Please refer to the previous Group By Operator [GBY_317]
                                                            <-Reducer 83 [CONTAINS]
                                                              Reduce Output Operator [RS_534]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_533] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_529] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 81 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_528]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                       Please refer to the previous Group By Operator [GBY_338]
                  <-Reducer 5 [CONTAINS]
                    Reduce Output Operator [RS_568]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_567] (rows=2032776160 width=237)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Select Operator [SEL_187] (rows=232318249 width=217)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_186] (rows=232318249 width=217)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_890] (rows=696954748 width=217)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 24 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_183]
                                Select Operator [SEL_80] (rows=1 width=120)
                                  Output:["_col0"]
                                  Group By Operator [GBY_79] (rows=1 width=120)
                                    Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                  <-Union 23 [CUSTOM_SIMPLE_EDGE]
                                    <-Reducer 22 [CONTAINS]
                                      Reduce Output Operator [RS_78]
                                        Group By Operator [GBY_77] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_75] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_63] (rows=316788826 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_849] (rows=316788826 width=135)
                                                Conds:RS_60._col0=RS_61._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 21 [SIMPLE_EDGE]
                                                SHUFFLE [RS_61]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_15]
                                              <-Map 43 [SIMPLE_EDGE]
                                                SHUFFLE [RS_60]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_56]
                                    <-Reducer 36 [CONTAINS]
                                      Reduce Output Operator [RS_78]
                                        Group By Operator [GBY_77] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_75] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_74] (rows=158402938 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_850] (rows=158402938 width=135)
                                                Conds:RS_71._col0=RS_72._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 35 [SIMPLE_EDGE]
                                                SHUFFLE [RS_72]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_26]
                                              <-Map 44 [SIMPLE_EDGE]
                                                SHUFFLE [RS_71]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_67]
                                    <-Reducer 40 [CONTAINS]
                                      Reduce Output Operator [RS_78]
                                        Group By Operator [GBY_77] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_75] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_53] (rows=633595212 width=88)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_848] (rows=633595212 width=88)
                                                Conds:RS_50._col0=RS_51._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 86 [SIMPLE_EDGE]
                                                SHUFFLE [RS_51]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_98]
                                              <-Map 39 [SIMPLE_EDGE]
                                                SHUFFLE [RS_50]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_46]
                            <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_182]
                                Select Operator [SEL_43] (rows=1 width=8)
                                  Filter Operator [FIL_42] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_40] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_35] (rows=1 width=8)
                                        Group By Operator [GBY_34] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 3 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 18 [CONTAINS]
                                            Reduce Output Operator [RS_33]
                                              Group By Operator [GBY_32] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_31] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_19] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_846] (rows=316788826 width=135)
                                                      Conds:RS_16._col0=RS_17._col0(Inner),Output:["_col1"]
                                                    <-Map 21 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_17]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_15]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_16]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_12]
                                          <-Reducer 2 [CONTAINS]
                                            Reduce Output Operator [RS_33]
                                              Group By Operator [GBY_32] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_31] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_9] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_845] (rows=633595212 width=88)
                                                      Conds:RS_6._col0=RS_7._col0(Inner),Output:["_col1"]
                                                    <-Map 86 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_7]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_98]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_6]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_2]
                                          <-Reducer 32 [CONTAINS]
                                            Reduce Output Operator [RS_33]
                                              Group By Operator [GBY_32] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_31] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_30] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_847] (rows=158402938 width=135)
                                                      Conds:RS_27._col0=RS_28._col0(Inner),Output:["_col1"]
                                                    <-Map 35 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_28]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_26]
                                                    <-Map 31 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_27]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_23]
                            <-Reducer 48 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_184]
                                Group By Operator [GBY_180] (rows=696954748 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 47 [SIMPLE_EDGE]
                                  SHUFFLE [RS_179]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_178] (rows=1393909496 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_176] (rows=1393909496 width=88)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_859] (rows=1393909496 width=88)
                                          Conds:RS_172._col1=RS_173._col0(Inner),RS_172._col1=RS_174._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 56 [SIMPLE_EDGE]
                                          SHUFFLE [RS_173]
                                            PartitionCols:_col0
                                            Select Operator [SEL_89] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_784] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_90]
                                        <-Reducer 46 [SIMPLE_EDGE]
                                          SHUFFLE [RS_172]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_851] (rows=633595212 width=88)
                                              Conds:RS_169._col0=RS_170._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 49 [SIMPLE_EDGE]
                                              SHUFFLE [RS_170]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_86]
                                            <-Map 45 [SIMPLE_EDGE]
                                              SHUFFLE [RS_169]
                                                PartitionCols:_col0
                                                Select Operator [SEL_83] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_782] (rows=575995635 width=88)
                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                    TableScan [TS_81] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_quantity","ss_list_price"]
                                        <-Reducer 58 [ONE_TO_ONE_EDGE]
                                          FORWARD [RS_174]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_167] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 57 [SIMPLE_EDGE]
                                              SHUFFLE [RS_166]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_165] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_858] (rows=508200 width=1436)
                                                    Conds:RS_161._col1, _col2, _col3=RS_162._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 56 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_161]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_92] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_785] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_90]
                                                  <-Reducer 62 [ONE_TO_ONE_EDGE]
                                                    FORWARD [RS_162]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_160] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_159] (rows=1 width=108)
                                                          predicate:(_col3 = 3L)
                                                          Group By Operator [GBY_158] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 61 [SIMPLE_EDGE]
                                                            <-Reducer 60 [CONTAINS]
                                                              Reduce Output Operator [RS_157]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_156] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_111] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 59 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_110]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_109] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_853] (rows=696954748 width=88)
                                                                          Conds:RS_105._col1=RS_106._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_106]
                                                                            PartitionCols:_col0
                                                                             Please refer to the previous Select Operator [SEL_92]
                                                                        <-Reducer 85 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_105]
                                                                            PartitionCols:_col1
                                                                             Please refer to the previous Merge Join Operator [MERGEJOIN_852]
                                                            <-Reducer 64 [CONTAINS]
                                                              Reduce Output Operator [RS_157]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_156] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_131] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 63 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_130]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_129] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_855] (rows=348467716 width=135)
                                                                          Conds:RS_125._col1=RS_126._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_126]
                                                                            PartitionCols:_col0
                                                                             Please refer to the previous Select Operator [SEL_92]
                                                                        <-Reducer 87 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_125]
                                                                            PartitionCols:_col1
                                                                             Please refer to the previous Merge Join Operator [MERGEJOIN_854]
                                                            <-Reducer 66 [CONTAINS]
                                                              Reduce Output Operator [RS_157]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_156] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_152] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 65 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_151]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_150] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_857] (rows=174243235 width=135)
                                                                          Conds:RS_146._col1=RS_147._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_147]
                                                                            PartitionCols:_col0
                                                                             Please refer to the previous Select Operator [SEL_92]
                                                                        <-Reducer 88 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_146]
                                                                            PartitionCols:_col1
                                                                             Please refer to the previous Merge Join Operator [MERGEJOIN_856]

