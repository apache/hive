Warning: Shuffle Join MERGEJOIN[893][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 5' is a cross product
Warning: Shuffle Join MERGEJOIN[894][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 12' is a cross product
Warning: Shuffle Join MERGEJOIN[895][tables = [$hdt$_2, $hdt$_3, $hdt$_1]] in Stage 'Reducer 16' is a cross product
PREHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 11 <- Union 10 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (CUSTOM_SIMPLE_EDGE), Reducer 27 (CUSTOM_SIMPLE_EDGE), Reducer 52 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 13 <- Map 1 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 15 <- Union 14 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Reducer 15 (CUSTOM_SIMPLE_EDGE), Reducer 30 (CUSTOM_SIMPLE_EDGE), Reducer 55 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 18 <- Map 17 (SIMPLE_EDGE), Map 21 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 19 <- Map 17 (SIMPLE_EDGE), Map 21 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 20 <- Map 17 (SIMPLE_EDGE), Map 21 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 22 <- Map 21 (SIMPLE_EDGE), Map 43 (SIMPLE_EDGE), Union 23 (CONTAINS)
Reducer 24 <- Union 23 (CUSTOM_SIMPLE_EDGE)
Reducer 25 <- Map 21 (SIMPLE_EDGE), Map 43 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 27 <- Union 26 (CUSTOM_SIMPLE_EDGE)
Reducer 28 <- Map 21 (SIMPLE_EDGE), Map 43 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 30 <- Union 29 (CUSTOM_SIMPLE_EDGE)
Reducer 32 <- Map 31 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 33 <- Map 31 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE), Union 10 (CONTAINS)
Reducer 34 <- Map 31 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE), Union 14 (CONTAINS)
Reducer 36 <- Map 35 (SIMPLE_EDGE), Map 44 (SIMPLE_EDGE), Union 23 (CONTAINS)
Reducer 37 <- Map 35 (SIMPLE_EDGE), Map 44 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 38 <- Map 35 (SIMPLE_EDGE), Map 44 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 4 <- Union 3 (CUSTOM_SIMPLE_EDGE)
Reducer 40 <- Map 39 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 23 (CONTAINS)
Reducer 41 <- Map 39 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 42 <- Map 39 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 46 <- Map 45 (SIMPLE_EDGE), Map 49 (SIMPLE_EDGE)
Reducer 47 <- Map 56 (SIMPLE_EDGE), Reducer 46 (SIMPLE_EDGE), Reducer 58 (ONE_TO_ONE_EDGE)
Reducer 48 <- Reducer 47 (SIMPLE_EDGE)
Reducer 5 <- Reducer 24 (CUSTOM_SIMPLE_EDGE), Reducer 4 (CUSTOM_SIMPLE_EDGE), Reducer 48 (CUSTOM_SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 50 <- Map 49 (SIMPLE_EDGE), Map 91 (SIMPLE_EDGE)
Reducer 51 <- Map 56 (SIMPLE_EDGE), Reducer 50 (SIMPLE_EDGE), Reducer 68 (ONE_TO_ONE_EDGE)
Reducer 52 <- Reducer 51 (SIMPLE_EDGE)
Reducer 53 <- Map 49 (SIMPLE_EDGE), Map 92 (SIMPLE_EDGE)
Reducer 54 <- Map 56 (SIMPLE_EDGE), Reducer 53 (SIMPLE_EDGE), Reducer 77 (ONE_TO_ONE_EDGE)
Reducer 55 <- Reducer 54 (SIMPLE_EDGE)
Reducer 57 <- Map 56 (SIMPLE_EDGE), Reducer 62 (ONE_TO_ONE_EDGE)
Reducer 58 <- Reducer 57 (SIMPLE_EDGE)
Reducer 59 <- Map 56 (SIMPLE_EDGE), Reducer 85 (SIMPLE_EDGE)
Reducer 60 <- Reducer 59 (SIMPLE_EDGE), Union 61 (CONTAINS)
Reducer 62 <- Union 61 (SIMPLE_EDGE)
Reducer 63 <- Map 56 (SIMPLE_EDGE), Reducer 87 (SIMPLE_EDGE)
Reducer 64 <- Reducer 63 (SIMPLE_EDGE), Union 61 (CONTAINS)
Reducer 65 <- Map 56 (SIMPLE_EDGE), Reducer 88 (SIMPLE_EDGE)
Reducer 66 <- Reducer 65 (SIMPLE_EDGE), Union 61 (CONTAINS)
Reducer 67 <- Map 56 (SIMPLE_EDGE), Reducer 72 (ONE_TO_ONE_EDGE)
Reducer 68 <- Reducer 67 (SIMPLE_EDGE)
Reducer 69 <- Map 56 (SIMPLE_EDGE), Reducer 85 (SIMPLE_EDGE)
Reducer 7 <- Union 6 (SIMPLE_EDGE)
Reducer 70 <- Reducer 69 (SIMPLE_EDGE), Union 71 (CONTAINS)
Reducer 72 <- Union 71 (SIMPLE_EDGE)
Reducer 73 <- Reducer 69 (SIMPLE_EDGE), Union 74 (CONTAINS)
Reducer 75 <- Union 74 (SIMPLE_EDGE)
Reducer 76 <- Map 56 (SIMPLE_EDGE), Reducer 75 (ONE_TO_ONE_EDGE)
Reducer 77 <- Reducer 76 (SIMPLE_EDGE)
Reducer 78 <- Map 56 (SIMPLE_EDGE), Reducer 87 (SIMPLE_EDGE)
Reducer 79 <- Reducer 78 (SIMPLE_EDGE), Union 71 (CONTAINS)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
Reducer 80 <- Reducer 78 (SIMPLE_EDGE), Union 74 (CONTAINS)
Reducer 81 <- Map 56 (SIMPLE_EDGE), Reducer 88 (SIMPLE_EDGE)
Reducer 82 <- Reducer 81 (SIMPLE_EDGE), Union 71 (CONTAINS)
Reducer 83 <- Reducer 81 (SIMPLE_EDGE), Union 74 (CONTAINS)
Reducer 85 <- Map 84 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE)
Reducer 87 <- Map 86 (SIMPLE_EDGE), Map 89 (SIMPLE_EDGE)
Reducer 88 <- Map 86 (SIMPLE_EDGE), Map 90 (SIMPLE_EDGE)
Reducer 9 <- Map 1 (SIMPLE_EDGE), Map 86 (SIMPLE_EDGE), Union 10 (CONTAINS)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8
      File Output Operator [FS_577]
        Limit [LIM_576] (rows=100 width=237)
          Number of rows:100
          Select Operator [SEL_575] (rows=1016388080 width=237)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 7 [SIMPLE_EDGE]
            SHUFFLE [RS_574]
              Select Operator [SEL_573] (rows=1016388080 width=237)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_572] (rows=1016388080 width=237)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 6 [SIMPLE_EDGE]
                  <-Reducer 12 [CONTAINS]
                    Reduce Output Operator [RS_571]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_570] (rows=2032776160 width=237)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Select Operator [SEL_377] (rows=116155905 width=264)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_376] (rows=116155905 width=264)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_894] (rows=348467716 width=264)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 11 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_372]
                                Select Operator [SEL_233] (rows=1 width=8)
                                  Filter Operator [FIL_232] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_230] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_225] (rows=1 width=8)
                                        Group By Operator [GBY_224] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 10 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 19 [CONTAINS]
                                            Reduce Output Operator [RS_223]
                                              Group By Operator [GBY_222] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_220] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_208] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_864] (rows=316788826 width=135)
                                                      Conds:RS_205._col0=RS_206._col0(Inner),Output:["_col1"]
                                                    <-Map 21 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_206]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_15] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_776] (rows=8116 width=1119)
                                                            predicate:(d_date_sk is not null and d_year BETWEEN 1998 AND 2000)
                                                            TableScan [TS_13] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_205]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_12] (rows=287989836 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_775] (rows=287989836 width=135)
                                                            predicate:cs_sold_date_sk is not null
                                                            TableScan [TS_10] (rows=287989836 width=135)
                                                              default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity"]
                                          <-Reducer 33 [CONTAINS]
                                            Reduce Output Operator [RS_223]
                                              Group By Operator [GBY_222] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_220] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_219] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_865] (rows=158402938 width=135)
                                                      Conds:RS_216._col0=RS_217._col0(Inner),Output:["_col1"]
                                                    <-Map 35 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_217]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_26] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_778] (rows=8116 width=1119)
                                                            predicate:(d_date_sk is not null and d_year BETWEEN 1998 AND 2000)
                                                            TableScan [TS_24] (rows=73049 width=1119)
                                                              default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 31 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_216]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_23] (rows=144002668 width=135)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_777] (rows=144002668 width=135)
                                                            predicate:ws_sold_date_sk is not null
                                                            TableScan [TS_21] (rows=144002668 width=135)
                                                              default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity"]
                                          <-Reducer 9 [CONTAINS]
                                            Reduce Output Operator [RS_223]
                                              Group By Operator [GBY_222] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_220] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_198] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_863] (rows=633595212 width=88)
                                                      Conds:RS_195._col0=RS_196._col0(Inner),Output:["_col1"]
                                                    <-Map 86 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_196]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_99] (rows=8116 width=1119)
                                                          Output:["_col0"]
                                                          Filter Operator [FIL_790] (rows=8116 width=1119)
                                                            predicate:(d_date_sk is not null and d_year BETWEEN 1999 AND 2001)
                                                            TableScan [TS_97] (rows=73049 width=1119)
                                                              default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_195]
                                                        PartitionCols:_col0
                                                        Select Operator [SEL_2] (rows=575995635 width=88)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_773] (rows=575995635 width=88)
                                                            predicate:ss_sold_date_sk is not null
                                                            TableScan [TS_0] (rows=575995635 width=88)
                                                              default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity"]
                            <-Reducer 27 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_373]
                                Select Operator [SEL_270] (rows=1 width=120)
                                  Output:["_col0"]
                                  Group By Operator [GBY_269] (rows=1 width=120)
                                    Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                  <-Union 26 [CUSTOM_SIMPLE_EDGE]
                                    <-Reducer 25 [CONTAINS]
                                      Reduce Output Operator [RS_268]
                                        Group By Operator [GBY_267] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_265] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_253] (rows=316788826 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_867] (rows=316788826 width=135)
                                                Conds:RS_250._col0=RS_251._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 21 [SIMPLE_EDGE]
                                                SHUFFLE [RS_251]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_15]
                                              <-Map 43 [SIMPLE_EDGE]
                                                SHUFFLE [RS_250]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_57] (rows=287989836 width=135)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_781] (rows=287989836 width=135)
                                                      predicate:cs_sold_date_sk is not null
                                                      TableScan [TS_55] (rows=287989836 width=135)
                                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                    <-Reducer 37 [CONTAINS]
                                      Reduce Output Operator [RS_268]
                                        Group By Operator [GBY_267] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_265] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_264] (rows=158402938 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_868] (rows=158402938 width=135)
                                                Conds:RS_261._col0=RS_262._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 35 [SIMPLE_EDGE]
                                                SHUFFLE [RS_262]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_26]
                                              <-Map 44 [SIMPLE_EDGE]
                                                SHUFFLE [RS_261]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_68] (rows=144002668 width=135)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_783] (rows=144002668 width=135)
                                                      predicate:ws_sold_date_sk is not null
                                                      TableScan [TS_66] (rows=144002668 width=135)
                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                                    <-Reducer 41 [CONTAINS]
                                      Reduce Output Operator [RS_268]
                                        Group By Operator [GBY_267] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_265] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_243] (rows=633595212 width=88)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_866] (rows=633595212 width=88)
                                                Conds:RS_240._col0=RS_241._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 86 [SIMPLE_EDGE]
                                                SHUFFLE [RS_241]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_99]
                                              <-Map 39 [SIMPLE_EDGE]
                                                SHUFFLE [RS_240]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_47] (rows=575995635 width=88)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_779] (rows=575995635 width=88)
                                                      predicate:ss_sold_date_sk is not null
                                                      TableScan [TS_45] (rows=575995635 width=88)
                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                            <-Reducer 52 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_374]
                                Group By Operator [GBY_370] (rows=348467716 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 51 [SIMPLE_EDGE]
                                  SHUFFLE [RS_369]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_368] (rows=696935432 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_366] (rows=696935432 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_877] (rows=696935432 width=135)
                                          Conds:RS_362._col1=RS_363._col0(Inner),RS_362._col1=RS_364._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 56 [SIMPLE_EDGE]
                                          SHUFFLE [RS_363]
                                            PartitionCols:_col0
                                            Select Operator [SEL_279] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_812] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                TableScan [TS_91] (rows=462000 width=1436)
                                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                        <-Reducer 50 [SIMPLE_EDGE]
                                          SHUFFLE [RS_362]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_869] (rows=316788826 width=135)
                                              Conds:RS_359._col0=RS_360._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 49 [SIMPLE_EDGE]
                                              SHUFFLE [RS_360]
                                                PartitionCols:_col0
                                                Select Operator [SEL_87] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_786] (rows=18262 width=1119)
                                                    predicate:((d_moy = 11) and (d_year = 2000) and d_date_sk is not null)
                                                    TableScan [TS_85] (rows=73049 width=1119)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                            <-Map 91 [SIMPLE_EDGE]
                                              SHUFFLE [RS_359]
                                                PartitionCols:_col0
                                                Select Operator [SEL_273] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_810] (rows=287989836 width=135)
                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                    TableScan [TS_271] (rows=287989836 width=135)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_quantity","cs_list_price"]
                                        <-Reducer 68 [ONE_TO_ONE_EDGE]
                                          FORWARD [RS_364]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_357] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 67 [SIMPLE_EDGE]
                                              SHUFFLE [RS_356]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_355] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_876] (rows=508200 width=1436)
                                                    Conds:RS_351._col1, _col2, _col3=RS_352._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 56 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_351]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_282] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_813] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_91]
                                                  <-Reducer 72 [ONE_TO_ONE_EDGE]
                                                    FORWARD [RS_352]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_350] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_349] (rows=1 width=108)
                                                          predicate:(_col3 = 3L)
                                                          Group By Operator [GBY_348] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 71 [SIMPLE_EDGE]
                                                            <-Reducer 70 [CONTAINS]
                                                              Reduce Output Operator [RS_347]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_346] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_301] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 69 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_300]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_299] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_871] (rows=696954748 width=88)
                                                                          Conds:RS_295._col1=RS_296._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_296]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_291] (rows=462000 width=1436)
                                                                              Output:["_col0","_col1","_col2","_col3"]
                                                                              Filter Operator [FIL_816] (rows=462000 width=1436)
                                                                                predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                                                 Please refer to the previous TableScan [TS_91]
                                                                        <-Reducer 85 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_295]
                                                                            PartitionCols:_col1
                                                                            Merge Join Operator [MERGEJOIN_855] (rows=633595212 width=88)
                                                                              Conds:RS_103._col0=RS_104._col0(Inner),Output:["_col1"]
                                                                            <-Map 86 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_104]
                                                                                PartitionCols:_col0
                                                                                 Please refer to the previous Select Operator [SEL_99]
                                                                            <-Map 84 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_103]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_96] (rows=575995635 width=88)
                                                                                  Output:["_col0","_col1"]
                                                                                  Filter Operator [FIL_789] (rows=575995635 width=88)
                                                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                    TableScan [TS_94] (rows=575995635 width=88)
                                                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                            <-Reducer 79 [CONTAINS]
                                                              Reduce Output Operator [RS_347]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_346] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_321] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 78 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_320]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_319] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_873] (rows=348467716 width=135)
                                                                          Conds:RS_315._col1=RS_316._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_316]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_311] (rows=462000 width=1436)
                                                                              Output:["_col0","_col1","_col2","_col3"]
                                                                              Filter Operator [FIL_819] (rows=462000 width=1436)
                                                                                predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                                                 Please refer to the previous TableScan [TS_91]
                                                                        <-Reducer 87 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_315]
                                                                            PartitionCols:_col1
                                                                            Merge Join Operator [MERGEJOIN_857] (rows=316788826 width=135)
                                                                              Conds:RS_123._col0=RS_124._col0(Inner),Output:["_col1"]
                                                                            <-Map 86 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_124]
                                                                                PartitionCols:_col0
                                                                                 Please refer to the previous Select Operator [SEL_99]
                                                                            <-Map 89 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_123]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_116] (rows=287989836 width=135)
                                                                                  Output:["_col0","_col1"]
                                                                                  Filter Operator [FIL_792] (rows=287989836 width=135)
                                                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                    TableScan [TS_114] (rows=287989836 width=135)
                                                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk"]
                                                            <-Reducer 82 [CONTAINS]
                                                              Reduce Output Operator [RS_347]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_346] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_342] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 81 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_341]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_340] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_875] (rows=174243235 width=135)
                                                                          Conds:RS_336._col1=RS_337._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_337]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_332] (rows=462000 width=1436)
                                                                              Output:["_col0","_col1","_col2","_col3"]
                                                                              Filter Operator [FIL_822] (rows=462000 width=1436)
                                                                                predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                                                 Please refer to the previous TableScan [TS_91]
                                                                        <-Reducer 88 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_336]
                                                                            PartitionCols:_col1
                                                                            Merge Join Operator [MERGEJOIN_859] (rows=158402938 width=135)
                                                                              Conds:RS_144._col0=RS_145._col0(Inner),Output:["_col1"]
                                                                            <-Map 86 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_145]
                                                                                PartitionCols:_col0
                                                                                 Please refer to the previous Select Operator [SEL_99]
                                                                            <-Map 90 [SIMPLE_EDGE]
                                                                              SHUFFLE [RS_144]
                                                                                PartitionCols:_col0
                                                                                Select Operator [SEL_137] (rows=144002668 width=135)
                                                                                  Output:["_col0","_col1"]
                                                                                  Filter Operator [FIL_795] (rows=144002668 width=135)
                                                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                    TableScan [TS_135] (rows=144002668 width=135)
                                                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk"]
                  <-Reducer 16 [CONTAINS]
                    Reduce Output Operator [RS_571]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_570] (rows=2032776160 width=237)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Select Operator [SEL_567] (rows=58081078 width=264)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_566] (rows=58081078 width=264)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_895] (rows=174243235 width=264)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 15 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_562]
                                Select Operator [SEL_423] (rows=1 width=8)
                                  Filter Operator [FIL_422] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_420] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_415] (rows=1 width=8)
                                        Group By Operator [GBY_414] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 14 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 13 [CONTAINS]
                                            Reduce Output Operator [RS_413]
                                              Group By Operator [GBY_412] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_410] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_388] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_878] (rows=633595212 width=88)
                                                      Conds:RS_385._col0=RS_386._col0(Inner),Output:["_col1"]
                                                    <-Map 86 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_386]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_99]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_385]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_2]
                                          <-Reducer 20 [CONTAINS]
                                            Reduce Output Operator [RS_413]
                                              Group By Operator [GBY_412] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_410] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_398] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_879] (rows=316788826 width=135)
                                                      Conds:RS_395._col0=RS_396._col0(Inner),Output:["_col1"]
                                                    <-Map 21 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_396]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_15]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_395]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_12]
                                          <-Reducer 34 [CONTAINS]
                                            Reduce Output Operator [RS_413]
                                              Group By Operator [GBY_412] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_410] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_409] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_880] (rows=158402938 width=135)
                                                      Conds:RS_406._col0=RS_407._col0(Inner),Output:["_col1"]
                                                    <-Map 35 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_407]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_26]
                                                    <-Map 31 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_406]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_23]
                            <-Reducer 30 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_563]
                                Select Operator [SEL_460] (rows=1 width=120)
                                  Output:["_col0"]
                                  Group By Operator [GBY_459] (rows=1 width=120)
                                    Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                  <-Union 29 [CUSTOM_SIMPLE_EDGE]
                                    <-Reducer 28 [CONTAINS]
                                      Reduce Output Operator [RS_458]
                                        Group By Operator [GBY_457] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_455] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_443] (rows=316788826 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_882] (rows=316788826 width=135)
                                                Conds:RS_440._col0=RS_441._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 21 [SIMPLE_EDGE]
                                                SHUFFLE [RS_441]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_15]
                                              <-Map 43 [SIMPLE_EDGE]
                                                SHUFFLE [RS_440]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_57]
                                    <-Reducer 38 [CONTAINS]
                                      Reduce Output Operator [RS_458]
                                        Group By Operator [GBY_457] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_455] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_454] (rows=158402938 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_883] (rows=158402938 width=135)
                                                Conds:RS_451._col0=RS_452._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 35 [SIMPLE_EDGE]
                                                SHUFFLE [RS_452]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_26]
                                              <-Map 44 [SIMPLE_EDGE]
                                                SHUFFLE [RS_451]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_68]
                                    <-Reducer 42 [CONTAINS]
                                      Reduce Output Operator [RS_458]
                                        Group By Operator [GBY_457] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_455] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_433] (rows=633595212 width=88)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_881] (rows=633595212 width=88)
                                                Conds:RS_430._col0=RS_431._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 86 [SIMPLE_EDGE]
                                                SHUFFLE [RS_431]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_99]
                                              <-Map 39 [SIMPLE_EDGE]
                                                SHUFFLE [RS_430]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_47]
                            <-Reducer 55 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_564]
                                Group By Operator [GBY_560] (rows=174243235 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 54 [SIMPLE_EDGE]
                                  SHUFFLE [RS_559]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_558] (rows=348486471 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_556] (rows=348486471 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_892] (rows=348486471 width=135)
                                          Conds:RS_552._col1=RS_553._col0(Inner),RS_552._col1=RS_554._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 56 [SIMPLE_EDGE]
                                          SHUFFLE [RS_553]
                                            PartitionCols:_col0
                                            Select Operator [SEL_469] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_837] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_91]
                                        <-Reducer 53 [SIMPLE_EDGE]
                                          SHUFFLE [RS_552]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_884] (rows=158402938 width=135)
                                              Conds:RS_549._col0=RS_550._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 49 [SIMPLE_EDGE]
                                              SHUFFLE [RS_550]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_87]
                                            <-Map 92 [SIMPLE_EDGE]
                                              SHUFFLE [RS_549]
                                                PartitionCols:_col0
                                                Select Operator [SEL_463] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_835] (rows=144002668 width=135)
                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                    TableScan [TS_461] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_quantity","ws_list_price"]
                                        <-Reducer 77 [ONE_TO_ONE_EDGE]
                                          FORWARD [RS_554]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_547] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 76 [SIMPLE_EDGE]
                                              SHUFFLE [RS_546]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_545] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_891] (rows=508200 width=1436)
                                                    Conds:RS_541._col1, _col2, _col3=RS_542._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 56 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_541]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_472] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_838] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_91]
                                                  <-Reducer 75 [ONE_TO_ONE_EDGE]
                                                    FORWARD [RS_542]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_540] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_539] (rows=1 width=108)
                                                          predicate:(_col3 = 3L)
                                                          Group By Operator [GBY_538] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 74 [SIMPLE_EDGE]
                                                            <-Reducer 73 [CONTAINS]
                                                              Reduce Output Operator [RS_537]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_536] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_491] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 69 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_490]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                       Please refer to the previous Group By Operator [GBY_299]
                                                            <-Reducer 80 [CONTAINS]
                                                              Reduce Output Operator [RS_537]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_536] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_511] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 78 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_510]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                       Please refer to the previous Group By Operator [GBY_319]
                                                            <-Reducer 83 [CONTAINS]
                                                              Reduce Output Operator [RS_537]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_536] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_532] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 81 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_531]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                       Please refer to the previous Group By Operator [GBY_340]
                  <-Reducer 5 [CONTAINS]
                    Reduce Output Operator [RS_571]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_570] (rows=2032776160 width=237)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Select Operator [SEL_188] (rows=232318249 width=217)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_187] (rows=232318249 width=217)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_893] (rows=696954748 width=217)
                              Conds:(Inner),(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 24 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_184]
                                Select Operator [SEL_81] (rows=1 width=120)
                                  Output:["_col0"]
                                  Group By Operator [GBY_80] (rows=1 width=120)
                                    Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                  <-Union 23 [CUSTOM_SIMPLE_EDGE]
                                    <-Reducer 22 [CONTAINS]
                                      Reduce Output Operator [RS_79]
                                        Group By Operator [GBY_78] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_76] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_64] (rows=316788826 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_852] (rows=316788826 width=135)
                                                Conds:RS_61._col0=RS_62._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 21 [SIMPLE_EDGE]
                                                SHUFFLE [RS_62]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_15]
                                              <-Map 43 [SIMPLE_EDGE]
                                                SHUFFLE [RS_61]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_57]
                                    <-Reducer 36 [CONTAINS]
                                      Reduce Output Operator [RS_79]
                                        Group By Operator [GBY_78] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_76] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_75] (rows=158402938 width=135)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_853] (rows=158402938 width=135)
                                                Conds:RS_72._col0=RS_73._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 35 [SIMPLE_EDGE]
                                                SHUFFLE [RS_73]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_26]
                                              <-Map 44 [SIMPLE_EDGE]
                                                SHUFFLE [RS_72]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_68]
                                    <-Reducer 40 [CONTAINS]
                                      Reduce Output Operator [RS_79]
                                        Group By Operator [GBY_78] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                          Select Operator [SEL_76] (rows=1108786976 width=108)
                                            Output:["_col0"]
                                            Select Operator [SEL_54] (rows=633595212 width=88)
                                              Output:["_col0","_col1"]
                                              Merge Join Operator [MERGEJOIN_851] (rows=633595212 width=88)
                                                Conds:RS_51._col0=RS_52._col0(Inner),Output:["_col1","_col2"]
                                              <-Map 86 [SIMPLE_EDGE]
                                                SHUFFLE [RS_52]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_99]
                                              <-Map 39 [SIMPLE_EDGE]
                                                SHUFFLE [RS_51]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_47]
                            <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_183]
                                Select Operator [SEL_44] (rows=1 width=8)
                                  Filter Operator [FIL_43] (rows=1 width=8)
                                    predicate:(sq_count_check(_col0) <= 1)
                                    Group By Operator [GBY_41] (rows=1 width=8)
                                      Output:["_col0"],aggregations:["count()"]
                                      Select Operator [SEL_36] (rows=1 width=8)
                                        Group By Operator [GBY_35] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                        <-Union 3 [CUSTOM_SIMPLE_EDGE]
                                          <-Reducer 18 [CONTAINS]
                                            Reduce Output Operator [RS_34]
                                              Group By Operator [GBY_33] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_31] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_19] (rows=316788826 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_849] (rows=316788826 width=135)
                                                      Conds:RS_16._col0=RS_17._col0(Inner),Output:["_col1"]
                                                    <-Map 21 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_17]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_15]
                                                    <-Map 17 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_16]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_12]
                                          <-Reducer 2 [CONTAINS]
                                            Reduce Output Operator [RS_34]
                                              Group By Operator [GBY_33] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_31] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_9] (rows=633595212 width=88)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_848] (rows=633595212 width=88)
                                                      Conds:RS_6._col0=RS_7._col0(Inner),Output:["_col1"]
                                                    <-Map 86 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_7]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_99]
                                                    <-Map 1 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_6]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_2]
                                          <-Reducer 32 [CONTAINS]
                                            Reduce Output Operator [RS_34]
                                              Group By Operator [GBY_33] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(_col0)"]
                                                Select Operator [SEL_31] (rows=1108786976 width=108)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_30] (rows=158402938 width=135)
                                                    Output:["_col0"]
                                                    Merge Join Operator [MERGEJOIN_850] (rows=158402938 width=135)
                                                      Conds:RS_27._col0=RS_28._col0(Inner),Output:["_col1"]
                                                    <-Map 35 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_28]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_26]
                                                    <-Map 31 [SIMPLE_EDGE]
                                                      SHUFFLE [RS_27]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_23]
                            <-Reducer 48 [CUSTOM_SIMPLE_EDGE]
                              PARTITION_ONLY_SHUFFLE [RS_185]
                                Group By Operator [GBY_181] (rows=696954748 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 47 [SIMPLE_EDGE]
                                  SHUFFLE [RS_180]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_179] (rows=1393909496 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_177] (rows=1393909496 width=88)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_862] (rows=1393909496 width=88)
                                          Conds:RS_173._col1=RS_174._col0(Inner),RS_173._col1=RS_175._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 56 [SIMPLE_EDGE]
                                          SHUFFLE [RS_174]
                                            PartitionCols:_col0
                                            Select Operator [SEL_90] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_787] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_91]
                                        <-Reducer 46 [SIMPLE_EDGE]
                                          SHUFFLE [RS_173]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_854] (rows=633595212 width=88)
                                              Conds:RS_170._col0=RS_171._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 49 [SIMPLE_EDGE]
                                              SHUFFLE [RS_171]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_87]
                                            <-Map 45 [SIMPLE_EDGE]
                                              SHUFFLE [RS_170]
                                                PartitionCols:_col0
                                                Select Operator [SEL_84] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_785] (rows=575995635 width=88)
                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                    TableScan [TS_82] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_quantity","ss_list_price"]
                                        <-Reducer 58 [ONE_TO_ONE_EDGE]
                                          FORWARD [RS_175]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_168] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 57 [SIMPLE_EDGE]
                                              SHUFFLE [RS_167]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_166] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_861] (rows=508200 width=1436)
                                                    Conds:RS_162._col1, _col2, _col3=RS_163._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 56 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_162]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_93] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_788] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_91]
                                                  <-Reducer 62 [ONE_TO_ONE_EDGE]
                                                    FORWARD [RS_163]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_161] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_160] (rows=1 width=108)
                                                          predicate:(_col3 = 3L)
                                                          Group By Operator [GBY_159] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 61 [SIMPLE_EDGE]
                                                            <-Reducer 60 [CONTAINS]
                                                              Reduce Output Operator [RS_158]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_157] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_112] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 59 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_111]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_110] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_856] (rows=696954748 width=88)
                                                                          Conds:RS_106._col1=RS_107._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_107]
                                                                            PartitionCols:_col0
                                                                             Please refer to the previous Select Operator [SEL_93]
                                                                        <-Reducer 85 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_106]
                                                                            PartitionCols:_col1
                                                                             Please refer to the previous Merge Join Operator [MERGEJOIN_855]
                                                            <-Reducer 64 [CONTAINS]
                                                              Reduce Output Operator [RS_158]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_157] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_132] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 63 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_131]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_130] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_858] (rows=348467716 width=135)
                                                                          Conds:RS_126._col1=RS_127._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_127]
                                                                            PartitionCols:_col0
                                                                             Please refer to the previous Select Operator [SEL_93]
                                                                        <-Reducer 87 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_126]
                                                                            PartitionCols:_col1
                                                                             Please refer to the previous Merge Join Operator [MERGEJOIN_857]
                                                            <-Reducer 66 [CONTAINS]
                                                              Reduce Output Operator [RS_158]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_157] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_153] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 65 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_152]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_151] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                        Merge Join Operator [MERGEJOIN_860] (rows=174243235 width=135)
                                                                          Conds:RS_147._col1=RS_148._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                        <-Map 56 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_148]
                                                                            PartitionCols:_col0
                                                                             Please refer to the previous Select Operator [SEL_93]
                                                                        <-Reducer 88 [SIMPLE_EDGE]
                                                                          SHUFFLE [RS_147]
                                                                            PartitionCols:_col1
                                                                             Please refer to the previous Merge Join Operator [MERGEJOIN_859]

