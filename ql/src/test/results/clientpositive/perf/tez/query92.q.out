PREHOOK: query: explain
select  
   sum(ws_ext_discount_amt)  as `Excess Discount Amount` 
from 
    web_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 269
and i_item_sk = ws_item_sk 
and d_date between '1998-03-18' and 
        (cast('1998-03-18' as date) + 90 days)
and d_date_sk = ws_sold_date_sk 
and ws_ext_discount_amt  
     > ( 
         SELECT 
            1.3 * avg(ws_ext_discount_amt) 
         FROM 
            web_sales 
           ,date_dim
         WHERE 
              ws_item_sk = i_item_sk 
          and d_date between '1998-03-18' and
                             (cast('1998-03-18' as date) + 90 days)
          and d_date_sk = ws_sold_date_sk 
      ) 
order by sum(ws_ext_discount_amt)
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  
   sum(ws_ext_discount_amt)  as `Excess Discount Amount` 
from 
    web_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 269
and i_item_sk = ws_item_sk 
and d_date between '1998-03-18' and 
        (cast('1998-03-18' as date) + 90 days)
and d_date_sk = ws_sold_date_sk 
and ws_ext_discount_amt  
     > ( 
         SELECT 
            1.3 * avg(ws_ext_discount_amt) 
         FROM 
            web_sales 
           ,date_dim
         WHERE 
              ws_item_sk = i_item_sk 
          and d_date between '1998-03-18' and
                             (cast('1998-03-18' as date) + 90 days)
          and d_date_sk = ws_sold_date_sk 
      ) 
order by sum(ws_ext_discount_amt)
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 7 (ONE_TO_ONE_EDGE)
Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 2 (SIMPLE_EDGE)
Reducer 7 <- Map 9 (SIMPLE_EDGE), Reducer 6 (ONE_TO_ONE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_82]
        Limit [LIM_81] (rows=1 width=112)
          Number of rows:100
          Select Operator [SEL_80] (rows=1 width=112)
            Output:["_col0"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_79]
              Select Operator [SEL_78] (rows=1 width=112)
                Output:["_col1"]
                Group By Operator [GBY_77] (rows=1 width=112)
                  Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                <-Reducer 3 [CUSTOM_SIMPLE_EDGE]
                  PARTITION_ONLY_SHUFFLE [RS_36]
                    Group By Operator [GBY_35] (rows=1 width=112)
                      Output:["_col0"],aggregations:["sum(_col2)"]
                      Select Operator [SEL_34] (rows=58081078 width=135)
                        Output:["_col2"]
                        Filter Operator [FIL_33] (rows=58081078 width=135)
                          predicate:(_col2 > CAST( (1.3 * _col6) AS decimal(14,7)))
                          Merge Join Operator [MERGEJOIN_64] (rows=174243235 width=135)
                            Conds:RS_30._col1=RS_31._col2(Inner),Output:["_col2","_col6"]
                          <-Reducer 2 [SIMPLE_EDGE]
                            SHUFFLE [RS_30]
                              PartitionCols:_col1
                              Merge Join Operator [MERGEJOIN_61] (rows=158402938 width=135)
                                Conds:RS_67._col0=RS_70._col0(Inner),Output:["_col1","_col2"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_67]
                                  PartitionCols:_col0
                                  Select Operator [SEL_66] (rows=144002668 width=135)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_65] (rows=144002668 width=135)
                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                      TableScan [TS_0] (rows=144002668 width=135)
                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_ext_discount_amt"]
                              <-Map 8 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_70]
                                  PartitionCols:_col0
                                  Select Operator [SEL_69] (rows=8116 width=1119)
                                    Output:["_col0"]
                                    Filter Operator [FIL_68] (rows=8116 width=1119)
                                      predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-03-18 00:00:00' AND TIMESTAMP'1998-06-16 00:00:00' and d_date_sk is not null)
                                      TableScan [TS_3] (rows=73049 width=1119)
                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]
                          <-Reducer 7 [ONE_TO_ONE_EDGE]
                            FORWARD [RS_31]
                              PartitionCols:_col2
                              Merge Join Operator [MERGEJOIN_63] (rows=87121617 width=135)
                                Conds:RS_73._col0=RS_76._col0(Inner),Output:["_col1","_col2"]
                              <-Map 9 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_76]
                                  PartitionCols:_col0
                                  Select Operator [SEL_75] (rows=231000 width=1436)
                                    Output:["_col0"]
                                    Filter Operator [FIL_74] (rows=231000 width=1436)
                                      predicate:((i_manufact_id = 269) and i_item_sk is not null)
                                      TableScan [TS_20] (rows=462000 width=1436)
                                        default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_manufact_id"]
                              <-Reducer 6 [ONE_TO_ONE_EDGE] vectorized
                                FORWARD [RS_73]
                                  PartitionCols:_col0
                                  Select Operator [SEL_72] (rows=79201469 width=135)
                                    Output:["_col0","_col1"]
                                    Group By Operator [GBY_71] (rows=79201469 width=135)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0
                                    <-Reducer 2 [SIMPLE_EDGE]
                                      SHUFFLE [RS_17]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_16] (rows=158402938 width=135)
                                          Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","count(_col2)"],keys:_col1
                                           Please refer to the previous Merge Join Operator [MERGEJOIN_61]

