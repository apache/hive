Warning: Shuffle Join MERGEJOIN[347][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4, $hdt$_5, $hdt$_6, $hdt$_7]] in Stage 'Reducer 6' is a cross product
PREHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (CUSTOM_SIMPLE_EDGE)
Reducer 11 <- Map 1 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE)
Reducer 12 <- Map 36 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Map 37 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Map 1 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE)
Reducer 16 <- Map 36 (SIMPLE_EDGE), Reducer 15 (SIMPLE_EDGE)
Reducer 17 <- Map 37 (SIMPLE_EDGE), Reducer 16 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (CUSTOM_SIMPLE_EDGE)
Reducer 19 <- Map 1 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE)
Reducer 20 <- Map 36 (SIMPLE_EDGE), Reducer 19 (SIMPLE_EDGE)
Reducer 21 <- Map 37 (SIMPLE_EDGE), Reducer 20 (SIMPLE_EDGE)
Reducer 22 <- Reducer 21 (CUSTOM_SIMPLE_EDGE)
Reducer 23 <- Map 1 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE)
Reducer 24 <- Map 36 (SIMPLE_EDGE), Reducer 23 (SIMPLE_EDGE)
Reducer 25 <- Map 37 (SIMPLE_EDGE), Reducer 24 (SIMPLE_EDGE)
Reducer 26 <- Reducer 25 (CUSTOM_SIMPLE_EDGE)
Reducer 27 <- Map 1 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE)
Reducer 28 <- Map 36 (SIMPLE_EDGE), Reducer 27 (SIMPLE_EDGE)
Reducer 29 <- Map 37 (SIMPLE_EDGE), Reducer 28 (SIMPLE_EDGE)
Reducer 3 <- Map 36 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 30 <- Reducer 29 (CUSTOM_SIMPLE_EDGE)
Reducer 31 <- Map 1 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE)
Reducer 32 <- Map 36 (SIMPLE_EDGE), Reducer 31 (SIMPLE_EDGE)
Reducer 33 <- Map 37 (SIMPLE_EDGE), Reducer 32 (SIMPLE_EDGE)
Reducer 34 <- Reducer 33 (CUSTOM_SIMPLE_EDGE)
Reducer 4 <- Map 37 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 10 (CUSTOM_SIMPLE_EDGE), Reducer 14 (CUSTOM_SIMPLE_EDGE), Reducer 18 (CUSTOM_SIMPLE_EDGE), Reducer 22 (CUSTOM_SIMPLE_EDGE), Reducer 26 (CUSTOM_SIMPLE_EDGE), Reducer 30 (CUSTOM_SIMPLE_EDGE), Reducer 34 (CUSTOM_SIMPLE_EDGE), Reducer 5 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 1 (SIMPLE_EDGE), Map 35 (SIMPLE_EDGE)
Reducer 8 <- Map 36 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Map 37 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6
      File Output Operator [FS_218]
        Select Operator [SEL_217] (rows=1 width=65)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          Merge Join Operator [MERGEJOIN_347] (rows=1 width=65)
            Conds:(Inner),(Inner),(Inner),(Inner),(Inner),(Inner),(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 10 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_209]
              Group By Operator [GBY_50] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 9 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_49]
                  Group By Operator [GBY_48] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_328] (rows=766650239 width=88)
                      Conds:RS_44._col2=RS_45._col0(Inner)
                    <-Map 37 [SIMPLE_EDGE]
                      SHUFFLE [RS_45]
                        PartitionCols:_col0
                        Select Operator [SEL_11] (rows=852 width=1910)
                          Output:["_col0"]
                          Filter Operator [FIL_294] (rows=852 width=1910)
                            predicate:((s_store_name = 'ese') and s_store_sk is not null)
                            TableScan [TS_9] (rows=1704 width=1910)
                              default@store,store,Tbl:COMPLETE,Col:NONE,Output:["s_store_sk","s_store_name"]
                    <-Reducer 8 [SIMPLE_EDGE]
                      SHUFFLE [RS_44]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_327] (rows=696954748 width=88)
                          Conds:RS_41._col1=RS_42._col0(Inner),Output:["_col2"]
                        <-Map 36 [SIMPLE_EDGE]
                          SHUFFLE [RS_42]
                            PartitionCols:_col0
                            Select Operator [SEL_8] (rows=3600 width=107)
                              Output:["_col0"]
                              Filter Operator [FIL_293] (rows=3600 width=107)
                                predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and hd_demo_sk is not null)
                                TableScan [TS_6] (rows=7200 width=107)
                                  default@household_demographics,household_demographics,Tbl:COMPLETE,Col:NONE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                        <-Reducer 7 [SIMPLE_EDGE]
                          SHUFFLE [RS_41]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_326] (rows=633595212 width=88)
                              Conds:RS_38._col0=RS_39._col0(Inner),Output:["_col1","_col2"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_38]
                                PartitionCols:_col0
                                Select Operator [SEL_2] (rows=575995635 width=88)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_291] (rows=575995635 width=88)
                                    predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                                    TableScan [TS_0] (rows=575995635 width=88)
                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
                            <-Map 35 [SIMPLE_EDGE]
                              SHUFFLE [RS_39]
                                PartitionCols:_col0
                                Select Operator [SEL_31] (rows=14400 width=471)
                                  Output:["_col0"]
                                  Filter Operator [FIL_296] (rows=14400 width=471)
                                    predicate:((t_hour = 12) and (t_minute < 30) and t_time_sk is not null)
                                    TableScan [TS_3] (rows=86400 width=471)
                                      default@time_dim,time_dim,Tbl:COMPLETE,Col:NONE,Output:["t_time_sk","t_hour","t_minute"]
          <-Reducer 14 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_210]
              Group By Operator [GBY_76] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 13 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_75]
                  Group By Operator [GBY_74] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_331] (rows=766650239 width=88)
                      Conds:RS_70._col2=RS_71._col0(Inner)
                    <-Map 37 [SIMPLE_EDGE]
                      SHUFFLE [RS_71]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_11]
                    <-Reducer 12 [SIMPLE_EDGE]
                      SHUFFLE [RS_70]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_330] (rows=696954748 width=88)
                          Conds:RS_67._col1=RS_68._col0(Inner),Output:["_col2"]
                        <-Map 36 [SIMPLE_EDGE]
                          SHUFFLE [RS_68]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_8]
                        <-Reducer 11 [SIMPLE_EDGE]
                          SHUFFLE [RS_67]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_329] (rows=633595212 width=88)
                              Conds:RS_64._col0=RS_65._col0(Inner),Output:["_col1","_col2"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_64]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_2]
                            <-Map 35 [SIMPLE_EDGE]
                              SHUFFLE [RS_65]
                                PartitionCols:_col0
                                Select Operator [SEL_57] (rows=14400 width=471)
                                  Output:["_col0"]
                                  Filter Operator [FIL_300] (rows=14400 width=471)
                                    predicate:((t_hour = 11) and (t_minute >= 30) and t_time_sk is not null)
                                     Please refer to the previous TableScan [TS_3]
          <-Reducer 18 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_211]
              Group By Operator [GBY_102] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 17 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_101]
                  Group By Operator [GBY_100] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_334] (rows=766650239 width=88)
                      Conds:RS_96._col2=RS_97._col0(Inner)
                    <-Map 37 [SIMPLE_EDGE]
                      SHUFFLE [RS_97]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_11]
                    <-Reducer 16 [SIMPLE_EDGE]
                      SHUFFLE [RS_96]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_333] (rows=696954748 width=88)
                          Conds:RS_93._col1=RS_94._col0(Inner),Output:["_col2"]
                        <-Map 36 [SIMPLE_EDGE]
                          SHUFFLE [RS_94]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_8]
                        <-Reducer 15 [SIMPLE_EDGE]
                          SHUFFLE [RS_93]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_332] (rows=633595212 width=88)
                              Conds:RS_90._col0=RS_91._col0(Inner),Output:["_col1","_col2"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_90]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_2]
                            <-Map 35 [SIMPLE_EDGE]
                              SHUFFLE [RS_91]
                                PartitionCols:_col0
                                Select Operator [SEL_83] (rows=14400 width=471)
                                  Output:["_col0"]
                                  Filter Operator [FIL_304] (rows=14400 width=471)
                                    predicate:((t_hour = 11) and (t_minute < 30) and t_time_sk is not null)
                                     Please refer to the previous TableScan [TS_3]
          <-Reducer 22 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_212]
              Group By Operator [GBY_128] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 21 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_127]
                  Group By Operator [GBY_126] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_337] (rows=766650239 width=88)
                      Conds:RS_122._col2=RS_123._col0(Inner)
                    <-Map 37 [SIMPLE_EDGE]
                      SHUFFLE [RS_123]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_11]
                    <-Reducer 20 [SIMPLE_EDGE]
                      SHUFFLE [RS_122]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_336] (rows=696954748 width=88)
                          Conds:RS_119._col1=RS_120._col0(Inner),Output:["_col2"]
                        <-Map 36 [SIMPLE_EDGE]
                          SHUFFLE [RS_120]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_8]
                        <-Reducer 19 [SIMPLE_EDGE]
                          SHUFFLE [RS_119]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_335] (rows=633595212 width=88)
                              Conds:RS_116._col0=RS_117._col0(Inner),Output:["_col1","_col2"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_116]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_2]
                            <-Map 35 [SIMPLE_EDGE]
                              SHUFFLE [RS_117]
                                PartitionCols:_col0
                                Select Operator [SEL_109] (rows=14400 width=471)
                                  Output:["_col0"]
                                  Filter Operator [FIL_308] (rows=14400 width=471)
                                    predicate:((t_hour = 10) and (t_minute >= 30) and t_time_sk is not null)
                                     Please refer to the previous TableScan [TS_3]
          <-Reducer 26 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_213]
              Group By Operator [GBY_154] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 25 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_153]
                  Group By Operator [GBY_152] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_340] (rows=766650239 width=88)
                      Conds:RS_148._col2=RS_149._col0(Inner)
                    <-Map 37 [SIMPLE_EDGE]
                      SHUFFLE [RS_149]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_11]
                    <-Reducer 24 [SIMPLE_EDGE]
                      SHUFFLE [RS_148]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_339] (rows=696954748 width=88)
                          Conds:RS_145._col1=RS_146._col0(Inner),Output:["_col2"]
                        <-Map 36 [SIMPLE_EDGE]
                          SHUFFLE [RS_146]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_8]
                        <-Reducer 23 [SIMPLE_EDGE]
                          SHUFFLE [RS_145]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_338] (rows=633595212 width=88)
                              Conds:RS_142._col0=RS_143._col0(Inner),Output:["_col1","_col2"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_142]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_2]
                            <-Map 35 [SIMPLE_EDGE]
                              SHUFFLE [RS_143]
                                PartitionCols:_col0
                                Select Operator [SEL_135] (rows=14400 width=471)
                                  Output:["_col0"]
                                  Filter Operator [FIL_312] (rows=14400 width=471)
                                    predicate:((t_hour = 10) and (t_minute < 30) and t_time_sk is not null)
                                     Please refer to the previous TableScan [TS_3]
          <-Reducer 30 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_214]
              Group By Operator [GBY_180] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 29 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_179]
                  Group By Operator [GBY_178] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_343] (rows=766650239 width=88)
                      Conds:RS_174._col2=RS_175._col0(Inner)
                    <-Map 37 [SIMPLE_EDGE]
                      SHUFFLE [RS_175]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_11]
                    <-Reducer 28 [SIMPLE_EDGE]
                      SHUFFLE [RS_174]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_342] (rows=696954748 width=88)
                          Conds:RS_171._col1=RS_172._col0(Inner),Output:["_col2"]
                        <-Map 36 [SIMPLE_EDGE]
                          SHUFFLE [RS_172]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_8]
                        <-Reducer 27 [SIMPLE_EDGE]
                          SHUFFLE [RS_171]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_341] (rows=633595212 width=88)
                              Conds:RS_168._col0=RS_169._col0(Inner),Output:["_col1","_col2"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_168]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_2]
                            <-Map 35 [SIMPLE_EDGE]
                              SHUFFLE [RS_169]
                                PartitionCols:_col0
                                Select Operator [SEL_161] (rows=14400 width=471)
                                  Output:["_col0"]
                                  Filter Operator [FIL_316] (rows=14400 width=471)
                                    predicate:((t_hour = 9) and (t_minute >= 30) and t_time_sk is not null)
                                     Please refer to the previous TableScan [TS_3]
          <-Reducer 34 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_215]
              Group By Operator [GBY_206] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 33 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_205]
                  Group By Operator [GBY_204] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_346] (rows=766650239 width=88)
                      Conds:RS_200._col2=RS_201._col0(Inner)
                    <-Map 37 [SIMPLE_EDGE]
                      SHUFFLE [RS_201]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_11]
                    <-Reducer 32 [SIMPLE_EDGE]
                      SHUFFLE [RS_200]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_345] (rows=696954748 width=88)
                          Conds:RS_197._col1=RS_198._col0(Inner),Output:["_col2"]
                        <-Map 36 [SIMPLE_EDGE]
                          SHUFFLE [RS_198]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_8]
                        <-Reducer 31 [SIMPLE_EDGE]
                          SHUFFLE [RS_197]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_344] (rows=633595212 width=88)
                              Conds:RS_194._col0=RS_195._col0(Inner),Output:["_col1","_col2"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_194]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_2]
                            <-Map 35 [SIMPLE_EDGE]
                              SHUFFLE [RS_195]
                                PartitionCols:_col0
                                Select Operator [SEL_187] (rows=14400 width=471)
                                  Output:["_col0"]
                                  Filter Operator [FIL_320] (rows=14400 width=471)
                                    predicate:((t_hour = 9) and (t_minute < 30) and t_time_sk is not null)
                                     Please refer to the previous TableScan [TS_3]
          <-Reducer 5 [CUSTOM_SIMPLE_EDGE]
            PARTITION_ONLY_SHUFFLE [RS_208]
              Group By Operator [GBY_24] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
                PARTITION_ONLY_SHUFFLE [RS_23]
                  Group By Operator [GBY_22] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Merge Join Operator [MERGEJOIN_325] (rows=766650239 width=88)
                      Conds:RS_18._col2=RS_19._col0(Inner)
                    <-Map 37 [SIMPLE_EDGE]
                      SHUFFLE [RS_19]
                        PartitionCols:_col0
                         Please refer to the previous Select Operator [SEL_11]
                    <-Reducer 3 [SIMPLE_EDGE]
                      SHUFFLE [RS_18]
                        PartitionCols:_col2
                        Merge Join Operator [MERGEJOIN_324] (rows=696954748 width=88)
                          Conds:RS_15._col1=RS_16._col0(Inner),Output:["_col2"]
                        <-Map 36 [SIMPLE_EDGE]
                          SHUFFLE [RS_16]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_8]
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_15]
                            PartitionCols:_col1
                            Merge Join Operator [MERGEJOIN_323] (rows=633595212 width=88)
                              Conds:RS_12._col0=RS_13._col0(Inner),Output:["_col1","_col2"]
                            <-Map 1 [SIMPLE_EDGE]
                              SHUFFLE [RS_12]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_2]
                            <-Map 35 [SIMPLE_EDGE]
                              SHUFFLE [RS_13]
                                PartitionCols:_col0
                                Select Operator [SEL_5] (rows=14400 width=471)
                                  Output:["_col0"]
                                  Filter Operator [FIL_292] (rows=14400 width=471)
                                    predicate:((t_hour = 8) and (t_minute >= 30) and t_time_sk is not null)
                                     Please refer to the previous TableScan [TS_3]

