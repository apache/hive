PREHOOK: query: explain
select  i_item_desc 
       ,i_category 
       ,i_class 
       ,i_current_price
       ,sum(cs_ext_sales_price) as itemrevenue 
       ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
           (partition by i_class) as revenueratio
 from	catalog_sales
     ,item 
     ,date_dim
 where cs_item_sk = i_item_sk 
   and i_category in ('Jewelry', 'Sports', 'Books')
   and cs_sold_date_sk = d_date_sk
 and d_date between cast('2001-01-12' as date) 
 				and (cast('2001-01-12' as date) + 30 days)
 group by i_item_id
         ,i_item_desc 
         ,i_category
         ,i_class
         ,i_current_price
 order by i_category
         ,i_class
         ,i_item_id
         ,i_item_desc
         ,revenueratio
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
select  i_item_desc 
       ,i_category 
       ,i_class 
       ,i_current_price
       ,sum(cs_ext_sales_price) as itemrevenue 
       ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
           (partition by i_class) as revenueratio
 from	catalog_sales
     ,item 
     ,date_dim
 where cs_item_sk = i_item_sk 
   and i_category in ('Jewelry', 'Sports', 'Books')
   and cs_sold_date_sk = d_date_sk
 and d_date between cast('2001-01-12' as date) 
 				and (cast('2001-01-12' as date) + 30 days)
 group by i_item_id
         ,i_item_desc 
         ,i_category
         ,i_class
         ,i_current_price
 order by i_category
         ,i_class
         ,i_item_id
         ,i_item_desc
         ,revenueratio
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 3 <- Map 8 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6
      File Output Operator [FS_29]
        Limit [LIM_27] (rows=100 width=135)
          Number of rows:100
          Select Operator [SEL_26] (rows=174233858 width=135)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_25]
              Select Operator [SEL_23] (rows=174233858 width=135)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                PTF Operator [PTF_22] (rows=174233858 width=135)
                  Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col3 ASC NULLS FIRST","partition by:":"_col3"}]
                  Select Operator [SEL_21] (rows=174233858 width=135)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                  <-Reducer 4 [SIMPLE_EDGE]
                    SHUFFLE [RS_20]
                      PartitionCols:_col3
                      Select Operator [SEL_19] (rows=174233858 width=135)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                        Group By Operator [GBY_18] (rows=174233858 width=135)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                        <-Reducer 3 [SIMPLE_EDGE]
                          SHUFFLE [RS_17]
                            PartitionCols:_col0, _col1, _col2, _col3, _col4
                            Group By Operator [GBY_16] (rows=348467716 width=135)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col2)"],keys:_col10, _col9, _col6, _col7, _col8
                              Merge Join Operator [MERGEJOIN_39] (rows=348467716 width=135)
                                Conds:RS_12._col1=RS_13._col0(Inner),Output:["_col2","_col6","_col7","_col8","_col9","_col10"]
                              <-Map 8 [SIMPLE_EDGE]
                                SHUFFLE [RS_13]
                                  PartitionCols:_col0
                                  Select Operator [SEL_8] (rows=231000 width=1436)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                    Filter Operator [FIL_37] (rows=231000 width=1436)
                                      predicate:((i_category) IN ('Jewelry', 'Sports', 'Books') and i_item_sk is not null)
                                      TableScan [TS_6] (rows=462000 width=1436)
                                        default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_item_id","i_item_desc","i_current_price","i_class","i_category"]
                              <-Reducer 2 [SIMPLE_EDGE]
                                SHUFFLE [RS_12]
                                  PartitionCols:_col1
                                  Merge Join Operator [MERGEJOIN_38] (rows=316788826 width=135)
                                    Conds:RS_9._col0=RS_10._col0(Inner),Output:["_col1","_col2"]
                                  <-Map 1 [SIMPLE_EDGE]
                                    SHUFFLE [RS_9]
                                      PartitionCols:_col0
                                      Select Operator [SEL_2] (rows=287989836 width=135)
                                        Output:["_col0","_col1","_col2"]
                                        Filter Operator [FIL_35] (rows=287989836 width=135)
                                          predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                          TableScan [TS_0] (rows=287989836 width=135)
                                            default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_ext_sales_price"]
                                  <-Map 7 [SIMPLE_EDGE]
                                    SHUFFLE [RS_10]
                                      PartitionCols:_col0
                                      Select Operator [SEL_5] (rows=8116 width=1119)
                                        Output:["_col0"]
                                        Filter Operator [FIL_36] (rows=8116 width=1119)
                                          predicate:(CAST( d_date AS TIMESTAMP) BETWEEN 2001-01-12 00:00:00.0 AND 2001-02-11 00:00:00.0 and d_date_sk is not null)
                                          TableScan [TS_3] (rows=73049 width=1119)
                                            default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_date"]

