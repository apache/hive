PREHOOK: query: CREATE TABLE test1 (key INT, value INT, col_1 STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test1
POSTHOOK: query: CREATE TABLE test1 (key INT, value INT, col_1 STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test1
PREHOOK: query: INSERT INTO test1 VALUES (NULL, NULL, 'None'), (98, NULL, 'None'),
    (99, 0, 'Alice'), (99, 2, 'Mat'), (100, 1, 'Bob'), (101, 2, 'Car')
PREHOOK: type: QUERY
PREHOOK: Output: default@test1
POSTHOOK: query: INSERT INTO test1 VALUES (NULL, NULL, 'None'), (98, NULL, 'None'),
    (99, 0, 'Alice'), (99, 2, 'Mat'), (100, 1, 'Bob'), (101, 2, 'Car')
POSTHOOK: type: QUERY
POSTHOOK: Output: default@test1
POSTHOOK: Lineage: test1.col_1 SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
POSTHOOK: Lineage: test1.key EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: test1.value EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: CREATE TABLE test2 (key INT, value INT, col_2 STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test2
POSTHOOK: query: CREATE TABLE test2 (key INT, value INT, col_2 STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test2
PREHOOK: query: INSERT INTO test2 VALUES (102, 2, 'Del'), (103, 2, 'Ema'),
    (104, 3, 'Fli'), (105, NULL, 'None')
PREHOOK: type: QUERY
PREHOOK: Output: default@test2
POSTHOOK: query: INSERT INTO test2 VALUES (102, 2, 'Del'), (103, 2, 'Ema'),
    (104, 3, 'Fli'), (105, NULL, 'None')
POSTHOOK: type: QUERY
POSTHOOK: Output: default@test2
POSTHOOK: Lineage: test2.col_2 SIMPLE [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
POSTHOOK: Lineage: test2.key EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: test2.value EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: EXPLAIN
SELECT *
FROM test1 LEFT OUTER JOIN test2
ON (test1.value=test2.value AND test1.key between 100 and 102)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT *
FROM test1 LEFT OUTER JOIN test2
ON (test1.value=test2.value AND test1.key between 100 and 102)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: test1
            Statistics: Num rows: 6 Data size: 56 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), value (type: int), col_1 (type: string)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 6 Data size: 56 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: int)
                sort order: +
                Map-reduce partition columns: _col1 (type: int)
                Statistics: Num rows: 6 Data size: 56 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: int), _col2 (type: string)
          TableScan
            alias: test2
            Statistics: Num rows: 4 Data size: 38 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), value (type: int), col_2 (type: string)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 4 Data size: 38 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col1 (type: int)
                sort order: +
                Map-reduce partition columns: _col1 (type: int)
                Statistics: Num rows: 4 Data size: 38 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: int), _col2 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join 0 to 1
          filter predicates:
            0 {VALUE._col0 BETWEEN 100 AND 102}
            1 
          keys:
            0 _col1 (type: int)
            1 _col1 (type: int)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
          Statistics: Num rows: 6 Data size: 61 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 6 Data size: 61 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT *
FROM test1 LEFT OUTER JOIN test2
ON (test1.value=test2.value AND test1.key between 100 and 102)
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: SELECT *
FROM test1 LEFT OUTER JOIN test2
ON (test1.value=test2.value AND test1.key between 100 and 102)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
98	NULL	None	NULL	NULL	NULL
NULL	NULL	None	NULL	NULL	NULL
99	0	Alice	NULL	NULL	NULL
100	1	Bob	NULL	NULL	NULL
101	2	Car	103	2	Ema
101	2	Car	102	2	Del
99	2	Mat	NULL	NULL	NULL
Warning: Shuffle Join JOIN[6][tables = [$hdt$_0, $hdt$_1]] in Stage 'Stage-1:MAPRED' is a cross product
PREHOOK: query: EXPLAIN
SELECT *
FROM test1 LEFT OUTER JOIN test2
ON (test1.key between 100 and 102)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT *
FROM test1 LEFT OUTER JOIN test2
ON (test1.key between 100 and 102)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: test1
            Statistics: Num rows: 6 Data size: 56 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), value (type: int), col_1 (type: string)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 6 Data size: 56 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                sort order: 
                Statistics: Num rows: 6 Data size: 56 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string)
          TableScan
            alias: test2
            Statistics: Num rows: 4 Data size: 38 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), value (type: int), col_2 (type: string)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 4 Data size: 38 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                sort order: 
                Statistics: Num rows: 4 Data size: 38 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join 0 to 1
          filter predicates:
            0 {VALUE._col0 BETWEEN 100 AND 102}
            1 
          keys:
            0 
            1 
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
          Statistics: Num rows: 24 Data size: 476 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 24 Data size: 476 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join JOIN[6][tables = [$hdt$_0, $hdt$_1]] in Stage 'Stage-1:MAPRED' is a cross product
PREHOOK: query: SELECT *
FROM test1 LEFT OUTER JOIN test2
ON (test1.key between 100 and 102)
PREHOOK: type: QUERY
PREHOOK: Input: default@test1
PREHOOK: Input: default@test2
#### A masked pattern was here ####
POSTHOOK: query: SELECT *
FROM test1 LEFT OUTER JOIN test2
ON (test1.key between 100 and 102)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test1
POSTHOOK: Input: default@test2
#### A masked pattern was here ####
101	2	Car	105	NULL	None
101	2	Car	104	3	Fli
101	2	Car	103	2	Ema
101	2	Car	102	2	Del
100	1	Bob	105	NULL	None
100	1	Bob	104	3	Fli
100	1	Bob	103	2	Ema
100	1	Bob	102	2	Del
99	2	Mat	NULL	NULL	NULL
99	0	Alice	NULL	NULL	NULL
98	NULL	None	NULL	NULL	NULL
NULL	NULL	None	NULL	NULL	NULL
