PREHOOK: query: drop table pcr_t1_n1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table pcr_t1_n1
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table pcr_t1_n1 (key int, value string) partitioned by (ds1 string, ds2 string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@pcr_t1_n1
POSTHOOK: query: create table pcr_t1_n1 (key int, value string) partitioned by (ds1 string, ds2 string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@pcr_t1_n1
PREHOOK: query: insert overwrite table pcr_t1_n1 partition (ds1='2000-04-08', ds2='2001-04-08') select * from src where key < 20 order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: query: insert overwrite table pcr_t1_n1 partition (ds1='2000-04-08', ds2='2001-04-08') select * from src where key < 20 order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Lineage: pcr_t1_n1 PARTITION(ds1=2000-04-08,ds2=2001-04-08).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: pcr_t1_n1 PARTITION(ds1=2000-04-08,ds2=2001-04-08).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table pcr_t1_n1 partition (ds1='2000-04-09', ds2='2001-04-09') select * from src where key < 20 order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
POSTHOOK: query: insert overwrite table pcr_t1_n1 partition (ds1='2000-04-09', ds2='2001-04-09') select * from src where key < 20 order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
POSTHOOK: Lineage: pcr_t1_n1 PARTITION(ds1=2000-04-09,ds2=2001-04-09).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: pcr_t1_n1 PARTITION(ds1=2000-04-09,ds2=2001-04-09).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: insert overwrite table pcr_t1_n1 partition (ds1='2000-04-10', ds2='2001-04-10') select * from src where key < 20 order by key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
POSTHOOK: query: insert overwrite table pcr_t1_n1 partition (ds1='2000-04-10', ds2='2001-04-10') select * from src where key < 20 order by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
POSTHOOK: Lineage: pcr_t1_n1 PARTITION(ds1=2000-04-10,ds2=2001-04-10).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: pcr_t1_n1 PARTITION(ds1=2000-04-10,ds2=2001-04-10).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: explain extended
select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and key=1) or (ds1='2000-04-09' and key=2)
order by key, value, ds1, ds2
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and key=1) or (ds1='2000-04-09' and key=2)
order by key, value, ds1, ds2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `key`, `value`, `ds1`, `ds2`
FROM `default`.`pcr_t1_n1`
WHERE `ds1` = '2000-04-08' AND `key` = 1 OR `ds1` = '2000-04-09' AND `key` = 2
ORDER BY `key`, `value`, `ds1`, `ds2`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: pcr_t1_n1
            filterExpr: (((ds1 = '2000-04-08') and (key = 1)) or ((ds1 = '2000-04-09') and (key = 2))) (type: boolean)
            Statistics: Num rows: 40 Data size: 18480 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (((ds1 = '2000-04-08') and (key = 1)) or ((ds1 = '2000-04-09') and (key = 2))) (type: boolean)
              Statistics: Num rows: 6 Data size: 2772 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds1 (type: string), ds2 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 6 Data size: 2772 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string)
                  null sort order: zzzz
                  sort order: ++++
                  Statistics: Num rows: 6 Data size: 2772 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: -1
                  auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-09
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-09
              ds2 2001-04-09
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [pcr_t1_n1]
        /pcr_t1_n1/ds1=2000-04-09/ds2=2001-04-09 [pcr_t1_n1]
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey3 (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 6 Data size: 2772 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 6 Data size: 2772 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3
                  columns.types int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain extended
select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and ds2='2001-04-08' and key=1) or (ds1='2000-04-09' and ds2='2001-04-08' and key=2)
order by key, value, ds1, ds2
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and ds2='2001-04-08' and key=1) or (ds1='2000-04-09' and ds2='2001-04-08' and key=2)
order by key, value, ds1, ds2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `key`, `value`, `ds1`, CAST('2001-04-08' AS STRING) AS `ds2`
FROM (SELECT `key`, `value`, `ds1`
FROM `default`.`pcr_t1_n1`
WHERE (`ds1` = '2000-04-08' AND `key` = 1 OR `ds1` = '2000-04-09' AND `key` = 2) AND `ds2` = '2001-04-08'
ORDER BY `key`, `value`, `ds1`) AS `t1`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: pcr_t1_n1
            filterExpr: ((((ds1 = '2000-04-08') and (key = 1)) or ((ds1 = '2000-04-09') and (key = 2))) and (ds2 = '2001-04-08')) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (key = 1) (type: boolean)
              Statistics: Num rows: 2 Data size: 556 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2 Data size: 556 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
                  null sort order: zzz
                  sort order: +++
                  Statistics: Num rows: 2 Data size: 556 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: -1
                  auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [$hdt$_0:pcr_t1_n1]
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), '2001-04-08' (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 2 Data size: 744 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 2 Data size: 744 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3
                  columns.types int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds2='2001-04-08'
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds2='2001-04-08'
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `t3`.`key`, `t3`.`value`, CAST('2000-04-08' AS STRING) AS `ds1`, `t3`.`ds2`, `t3`.`key0` AS `key1`, `t3`.`value0` AS `value1`, `t3`.`ds1` AS `ds11`, CAST('2001-04-08' AS STRING) AS `ds21`
FROM (SELECT *
FROM (SELECT `key`, `value`, `ds2`
FROM `default`.`pcr_t1_n1`
WHERE `ds1` = '2000-04-08' AND `key` IS NOT NULL) AS `t0`
INNER JOIN (SELECT `key`, `value`, `ds1`
FROM `default`.`pcr_t1_n1`
WHERE `ds2` = '2001-04-08' AND `key` IS NOT NULL) AS `t2` ON `t0`.`key` = `t2`.`key`
ORDER BY `t2`.`key`, `t2`.`value`) AS `t3`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1
            filterExpr: ((ds1 = '2000-04-08') and key is not null) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds2 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 0
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
          TableScan
            alias: t2
            filterExpr: ((ds2 = '2001-04-08') and key is not null) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 1
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [$hdt$_0:$hdt$_0:t1, $hdt$_0:$hdt$_1:t2]
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
          Statistics: Num rows: 30 Data size: 16680 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  column.name.delimiter ,
                  columns _col0,_col1,_col2,_col3,_col4,_col5
                  columns.types int,string,string,int,string,string
                  escape.delim \
                  serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col3 (type: int), _col4 (type: string)
              null sort order: zz
              sort order: ++
              Statistics: Num rows: 30 Data size: 16680 Basic stats: COMPLETE Column stats: COMPLETE
              tag: -1
              value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col5 (type: string)
              auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10004
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3,_col4,_col5
              columns.types int,string,string,int,string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3,_col4,_col5
                columns.types int,string,string,int,string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Truncated Path -> Alias:
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), '2000-04-08' (type: string), VALUE._col2 (type: string), KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), VALUE._col3 (type: string), '2001-04-08' (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
          Statistics: Num rows: 30 Data size: 22320 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 30 Data size: 22320 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                  columns.types int:string:string:string:int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds1='2000-04-09'
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds1='2000-04-09'
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `t3`.`key`, `t3`.`value`, CAST('2000-04-08' AS STRING) AS `ds1`, `t3`.`ds2`, `t3`.`key0` AS `key1`, `t3`.`value0` AS `value1`, CAST('2000-04-09' AS STRING) AS `ds11`, `t3`.`ds20` AS `ds21`
FROM (SELECT *
FROM (SELECT `key`, `value`, `ds2`
FROM `default`.`pcr_t1_n1`
WHERE `ds1` = '2000-04-08' AND `key` IS NOT NULL) AS `t0`
INNER JOIN (SELECT `key`, `value`, `ds2`
FROM `default`.`pcr_t1_n1`
WHERE `ds1` = '2000-04-09' AND `key` IS NOT NULL) AS `t2` ON `t0`.`key` = `t2`.`key`
ORDER BY `t2`.`key`, `t2`.`value`) AS `t3`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1
            filterExpr: ((ds1 = '2000-04-08') and key is not null) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds2 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 0
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
          TableScan
            alias: t2
            filterExpr: ((ds1 = '2000-04-09') and key is not null) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds2 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 1
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-09
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-09
              ds2 2001-04-09
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [$hdt$_0:$hdt$_0:t1]
        /pcr_t1_n1/ds1=2000-04-09/ds2=2001-04-09 [$hdt$_0:$hdt$_1:t2]
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
          Statistics: Num rows: 30 Data size: 16680 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  column.name.delimiter ,
                  columns _col0,_col1,_col2,_col3,_col4,_col5
                  columns.types int,string,string,int,string,string
                  escape.delim \
                  serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col3 (type: int), _col4 (type: string)
              null sort order: zz
              sort order: ++
              Statistics: Num rows: 30 Data size: 16680 Basic stats: COMPLETE Column stats: COMPLETE
              tag: -1
              value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col5 (type: string)
              auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10004
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3,_col4,_col5
              columns.types int,string,string,int,string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3,_col4,_col5
                columns.types int,string,string,int,string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Truncated Path -> Alias:
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), '2000-04-08' (type: string), VALUE._col2 (type: string), KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), '2000-04-09' (type: string), VALUE._col3 (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
          Statistics: Num rows: 30 Data size: 22320 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 30 Data size: 22320 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                  columns.types int:string:string:string:int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join JOIN[8][tables = [$hdt$_0, $hdt$_1]] in Stage 'Stage-1:MAPRED' is a cross product
PREHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
where (t1.ds1='2000-04-08' and t2.key=1) or (t1.ds1='2000-04-09' and t2.key=2)
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
where (t1.ds1='2000-04-08' and t2.key=1) or (t1.ds1='2000-04-09' and t2.key=2)
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `t0`.`key`, `t0`.`value`, `t0`.`ds1`, `t0`.`ds2`, `t2`.`key` AS `key1`, `t2`.`value` AS `value1`, `t2`.`ds1` AS `ds11`, `t2`.`ds2` AS `ds21`
FROM (SELECT `key`, `value`, `ds1`, `ds2`, `ds1` = '2000-04-08' AS `=`, `ds1` = '2000-04-09' AS `=8`
FROM `default`.`pcr_t1_n1`
WHERE `ds1` = '2000-04-08' OR `ds1` = '2000-04-09') AS `t0`
INNER JOIN (SELECT `key`, `value`, `ds1`, `ds2`, `key` = 1 AS `=`, `key` = 2 AS `=8`
FROM `default`.`pcr_t1_n1`
WHERE `key` = 1 OR `key` = 2) AS `t2` ON `t0`.`=` AND `t2`.`=` OR `t0`.`=8` AND `t2`.`=8`
ORDER BY `t2`.`key`, `t2`.`value`, `t0`.`ds1`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1
            filterExpr: ((ds1 = '2000-04-08') or (ds1 = '2000-04-09')) (type: boolean)
            Statistics: Num rows: 40 Data size: 18480 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Select Operator
              expressions: key (type: int), value (type: string), ds1 (type: string), ds2 (type: string), (ds1 = '2000-04-08') (type: boolean), (ds1 = '2000-04-09') (type: boolean)
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
              Statistics: Num rows: 40 Data size: 18800 Basic stats: COMPLETE Column stats: COMPLETE
              Reduce Output Operator
                null sort order: 
                sort order: 
                Statistics: Num rows: 40 Data size: 18800 Basic stats: COMPLETE Column stats: COMPLETE
                tag: 0
                value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: boolean), _col5 (type: boolean)
                auto parallelism: false
          TableScan
            alias: t2
            filterExpr: ((key = 1) or (key = 2)) (type: boolean)
            Statistics: Num rows: 60 Data size: 27720 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: ((key = 1) or (key = 2)) (type: boolean)
              Statistics: Num rows: 10 Data size: 4620 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds1 (type: string), ds2 (type: string), (key = 1) (type: boolean), (key = 2) (type: boolean)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 10 Data size: 4700 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 10 Data size: 4700 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 1
                  value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: boolean), _col5 (type: boolean)
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-09
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-09
              ds2 2001-04-09
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-10
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-10
              ds2 2001-04-10
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [$hdt$_0:t1, $hdt$_1:t2]
        /pcr_t1_n1/ds1=2000-04-09/ds2=2001-04-09 [$hdt$_0:t1, $hdt$_1:t2]
        /pcr_t1_n1/ds1=2000-04-10/ds2=2001-04-10 [$hdt$_1:t2]
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 
            1 
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
          Statistics: Num rows: 400 Data size: 376000 Basic stats: COMPLETE Column stats: COMPLETE
          Filter Operator
            isSamplingPred: false
            predicate: ((_col4 and _col10) or (_col5 and _col11)) (type: boolean)
            Statistics: Num rows: 200 Data size: 188000 Basic stats: COMPLETE Column stats: COMPLETE
            Select Operator
              expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col6 (type: int), _col7 (type: string), _col8 (type: string), _col9 (type: string)
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
              Statistics: Num rows: 200 Data size: 184800 Basic stats: COMPLETE Column stats: COMPLETE
              File Output Operator
                compressed: false
                GlobalTableId: 0
#### A masked pattern was here ####
                NumFilesPerFileSink: 1
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    properties:
                      column.name.delimiter ,
                      columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                      columns.types int,string,string,string,int,string,string,string
                      escape.delim \
                      serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                TotalFiles: 1
                GatherStats: false
                MultiFileSpray: false

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col4 (type: int), _col5 (type: string), _col2 (type: string)
              null sort order: zzz
              sort order: +++
              Statistics: Num rows: 200 Data size: 184800 Basic stats: COMPLETE Column stats: COMPLETE
              tag: -1
              value expressions: _col0 (type: int), _col1 (type: string), _col3 (type: string), _col6 (type: string), _col7 (type: string)
              auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10004
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
              columns.types int,string,string,string,int,string,string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                columns.types int,string,string,string,int,string,string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Truncated Path -> Alias:
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), KEY.reducesinkkey2 (type: string), VALUE._col2 (type: string), KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), VALUE._col3 (type: string), VALUE._col4 (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
          Statistics: Num rows: 200 Data size: 184800 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 200 Data size: 184800 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                  columns.types int:string:string:string:int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and key=1) or (ds1='2000-04-09' and key=2)
order by key, value, ds1, ds2
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
POSTHOOK: query: select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and key=1) or (ds1='2000-04-09' and key=2)
order by key, value, ds1, ds2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
2	val_2	2000-04-09	2001-04-09
PREHOOK: query: select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and ds2='2001-04-08' and key=1) or (ds1='2000-04-09' and ds2='2001-04-08' and key=2)
order by key, value, ds1, ds2
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
POSTHOOK: query: select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and ds2='2001-04-08' and key=1) or (ds1='2000-04-09' and ds2='2001-04-08' and key=2)
order by key, value, ds1, ds2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
PREHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds2='2001-04-08'
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
POSTHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds2='2001-04-08'
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
2	val_2	2000-04-08	2001-04-08	2	val_2	2000-04-08	2001-04-08
4	val_4	2000-04-08	2001-04-08	4	val_4	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
8	val_8	2000-04-08	2001-04-08	8	val_8	2000-04-08	2001-04-08
9	val_9	2000-04-08	2001-04-08	9	val_9	2000-04-08	2001-04-08
10	val_10	2000-04-08	2001-04-08	10	val_10	2000-04-08	2001-04-08
11	val_11	2000-04-08	2001-04-08	11	val_11	2000-04-08	2001-04-08
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-08	2001-04-08
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-08	2001-04-08
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-08	2001-04-08
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-08	2001-04-08
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-08	2001-04-08
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-08	2001-04-08
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-08	2001-04-08
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-08	2001-04-08
17	val_17	2000-04-08	2001-04-08	17	val_17	2000-04-08	2001-04-08
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-08	2001-04-08
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-08	2001-04-08
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-08	2001-04-08
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-08	2001-04-08
19	val_19	2000-04-08	2001-04-08	19	val_19	2000-04-08	2001-04-08
PREHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds1='2000-04-09'
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
POSTHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds1='2000-04-09'
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
2	val_2	2000-04-08	2001-04-08	2	val_2	2000-04-09	2001-04-09
4	val_4	2000-04-08	2001-04-08	4	val_4	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
8	val_8	2000-04-08	2001-04-08	8	val_8	2000-04-09	2001-04-09
9	val_9	2000-04-08	2001-04-08	9	val_9	2000-04-09	2001-04-09
10	val_10	2000-04-08	2001-04-08	10	val_10	2000-04-09	2001-04-09
11	val_11	2000-04-08	2001-04-08	11	val_11	2000-04-09	2001-04-09
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-09	2001-04-09
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-09	2001-04-09
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-09	2001-04-09
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-09	2001-04-09
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-09	2001-04-09
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-09	2001-04-09
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-09	2001-04-09
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-09	2001-04-09
17	val_17	2000-04-08	2001-04-08	17	val_17	2000-04-09	2001-04-09
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-09	2001-04-09
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-09	2001-04-09
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-09	2001-04-09
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-09	2001-04-09
19	val_19	2000-04-08	2001-04-08	19	val_19	2000-04-09	2001-04-09
Warning: Shuffle Join JOIN[8][tables = [$hdt$_0, $hdt$_1]] in Stage 'Stage-1:MAPRED' is a cross product
PREHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
where (t1.ds1='2000-04-08' and t2.key=1) or (t1.ds1='2000-04-09' and t2.key=2)
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
#### A masked pattern was here ####
POSTHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
where (t1.ds1='2000-04-08' and t2.key=1) or (t1.ds1='2000-04-09' and t2.key=2)
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
#### A masked pattern was here ####
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
10	val_10	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
10	val_10	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
10	val_10	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
11	val_11	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
11	val_11	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
11	val_11	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
17	val_17	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
17	val_17	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
17	val_17	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
19	val_19	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
19	val_19	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
19	val_19	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
2	val_2	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
2	val_2	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
2	val_2	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
4	val_4	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
4	val_4	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
4	val_4	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
8	val_8	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
8	val_8	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
8	val_8	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
9	val_9	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
9	val_9	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
9	val_9	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
PREHOOK: query: explain extended
select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and key=1) or (ds1='2000-04-09' and key=2)
order by key, value, ds1, ds2
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and key=1) or (ds1='2000-04-09' and key=2)
order by key, value, ds1, ds2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `key`, `value`, `ds1`, `ds2`
FROM `default`.`pcr_t1_n1`
WHERE ROW(`key`, `ds1`) IN (ROW(1, '2000-04-08'), ROW(2, '2000-04-09'))
ORDER BY `key`, `value`, `ds1`, `ds2`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: pcr_t1_n1
            filterExpr: ((struct(key,ds1)) IN (const struct(1,'2000-04-08'), const struct(2,'2000-04-09')) and (struct(ds1)) IN (struct('2000-04-08'), struct('2000-04-09'))) (type: boolean)
            Statistics: Num rows: 40 Data size: 18480 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (struct(key,ds1)) IN (const struct(1,'2000-04-08'), const struct(2,'2000-04-09')) (type: boolean)
              Statistics: Num rows: 20 Data size: 9240 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds1 (type: string), ds2 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 20 Data size: 9240 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string)
                  null sort order: zzzz
                  sort order: ++++
                  Statistics: Num rows: 20 Data size: 9240 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: -1
                  auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-09
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-09
              ds2 2001-04-09
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [pcr_t1_n1]
        /pcr_t1_n1/ds1=2000-04-09/ds2=2001-04-09 [pcr_t1_n1]
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey3 (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 20 Data size: 9240 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 20 Data size: 9240 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3
                  columns.types int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain extended
select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and ds2='2001-04-08' and key=1) or (ds1='2000-04-09' and ds2='2001-04-08' and key=2)
order by key, value, ds1, ds2
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and ds2='2001-04-08' and key=1) or (ds1='2000-04-09' and ds2='2001-04-08' and key=2)
order by key, value, ds1, ds2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `key`, `value`, `ds1`, CAST('2001-04-08' AS STRING) AS `ds2`
FROM (SELECT `key`, `value`, `ds1`
FROM `default`.`pcr_t1_n1`
WHERE ROW(`key`, `ds1`) IN (ROW(1, '2000-04-08'), ROW(2, '2000-04-09')) AND `ds2` = '2001-04-08'
ORDER BY `key`, `value`, `ds1`) AS `t1`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: pcr_t1_n1
            filterExpr: ((struct(key,ds1)) IN (const struct(1,'2000-04-08'), const struct(2,'2000-04-09')) and (ds2 = '2001-04-08')) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (struct(key,ds1)) IN (const struct(1,'2000-04-08'), const struct(2,'2000-04-09')) (type: boolean)
              Statistics: Num rows: 10 Data size: 2780 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 10 Data size: 2780 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)
                  null sort order: zzz
                  sort order: +++
                  Statistics: Num rows: 10 Data size: 2780 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: -1
                  auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [$hdt$_0:pcr_t1_n1]
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), '2001-04-08' (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 10 Data size: 3720 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 10 Data size: 3720 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3
                  columns.types int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds2='2001-04-08'
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds2='2001-04-08'
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `t3`.`key`, `t3`.`value`, CAST('2000-04-08' AS STRING) AS `ds1`, `t3`.`ds2`, `t3`.`key0` AS `key1`, `t3`.`value0` AS `value1`, `t3`.`ds1` AS `ds11`, CAST('2001-04-08' AS STRING) AS `ds21`
FROM (SELECT *
FROM (SELECT `key`, `value`, `ds2`
FROM `default`.`pcr_t1_n1`
WHERE `ds1` = '2000-04-08' AND `key` IS NOT NULL) AS `t0`
INNER JOIN (SELECT `key`, `value`, `ds1`
FROM `default`.`pcr_t1_n1`
WHERE `ds2` = '2001-04-08' AND `key` IS NOT NULL) AS `t2` ON `t0`.`key` = `t2`.`key`
ORDER BY `t2`.`key`, `t2`.`value`) AS `t3`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1
            filterExpr: ((ds1 = '2000-04-08') and key is not null) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds2 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 0
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
          TableScan
            alias: t2
            filterExpr: ((ds2 = '2001-04-08') and key is not null) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 1
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [$hdt$_0:$hdt$_0:t1, $hdt$_0:$hdt$_1:t2]
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
          Statistics: Num rows: 30 Data size: 16680 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  column.name.delimiter ,
                  columns _col0,_col1,_col2,_col3,_col4,_col5
                  columns.types int,string,string,int,string,string
                  escape.delim \
                  serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col3 (type: int), _col4 (type: string)
              null sort order: zz
              sort order: ++
              Statistics: Num rows: 30 Data size: 16680 Basic stats: COMPLETE Column stats: COMPLETE
              tag: -1
              value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col5 (type: string)
              auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10004
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3,_col4,_col5
              columns.types int,string,string,int,string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3,_col4,_col5
                columns.types int,string,string,int,string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Truncated Path -> Alias:
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), '2000-04-08' (type: string), VALUE._col2 (type: string), KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), VALUE._col3 (type: string), '2001-04-08' (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
          Statistics: Num rows: 30 Data size: 22320 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 30 Data size: 22320 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                  columns.types int:string:string:string:int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds1='2000-04-09'
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds1='2000-04-09'
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
OPTIMIZED SQL: SELECT `t3`.`key`, `t3`.`value`, CAST('2000-04-08' AS STRING) AS `ds1`, `t3`.`ds2`, `t3`.`key0` AS `key1`, `t3`.`value0` AS `value1`, CAST('2000-04-09' AS STRING) AS `ds11`, `t3`.`ds20` AS `ds21`
FROM (SELECT *
FROM (SELECT `key`, `value`, `ds2`
FROM `default`.`pcr_t1_n1`
WHERE `ds1` = '2000-04-08' AND `key` IS NOT NULL) AS `t0`
INNER JOIN (SELECT `key`, `value`, `ds2`
FROM `default`.`pcr_t1_n1`
WHERE `ds1` = '2000-04-09' AND `key` IS NOT NULL) AS `t2` ON `t0`.`key` = `t2`.`key`
ORDER BY `t2`.`key`, `t2`.`value`) AS `t3`
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1
            filterExpr: ((ds1 = '2000-04-08') and key is not null) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds2 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 0
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
          TableScan
            alias: t2
            filterExpr: ((ds1 = '2000-04-09') and key is not null) (type: boolean)
            Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds2 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  null sort order: z
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 20 Data size: 5560 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 1
                  value expressions: _col1 (type: string), _col2 (type: string)
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-09
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-09
              ds2 2001-04-09
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [$hdt$_0:$hdt$_0:t1]
        /pcr_t1_n1/ds1=2000-04-09/ds2=2001-04-09 [$hdt$_0:$hdt$_1:t2]
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
          Statistics: Num rows: 30 Data size: 16680 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  column.name.delimiter ,
                  columns _col0,_col1,_col2,_col3,_col4,_col5
                  columns.types int,string,string,int,string,string
                  escape.delim \
                  serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col3 (type: int), _col4 (type: string)
              null sort order: zz
              sort order: ++
              Statistics: Num rows: 30 Data size: 16680 Basic stats: COMPLETE Column stats: COMPLETE
              tag: -1
              value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col5 (type: string)
              auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10004
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3,_col4,_col5
              columns.types int,string,string,int,string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3,_col4,_col5
                columns.types int,string,string,int,string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Truncated Path -> Alias:
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), '2000-04-08' (type: string), VALUE._col2 (type: string), KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), '2000-04-09' (type: string), VALUE._col3 (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
          Statistics: Num rows: 30 Data size: 22320 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 30 Data size: 22320 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                  columns.types int:string:string:string:int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Shuffle Join JOIN[8][tables = [$hdt$_0, $hdt$_1]] in Stage 'Stage-1:MAPRED' is a cross product
PREHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
where (t1.ds1='2000-04-08' and t2.key=1) or (t1.ds1='2000-04-09' and t2.key=2)
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
#### A masked pattern was here ####
POSTHOOK: query: explain extended
select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
where (t1.ds1='2000-04-08' and t2.key=1) or (t1.ds1='2000-04-09' and t2.key=2)
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: t1
            filterExpr: (ds1) IN ('2000-04-08', '2000-04-09') (type: boolean)
            Statistics: Num rows: 40 Data size: 18480 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Select Operator
              expressions: key (type: int), value (type: string), ds1 (type: string), ds2 (type: string)
              outputColumnNames: _col0, _col1, _col2, _col3
              Statistics: Num rows: 40 Data size: 18480 Basic stats: COMPLETE Column stats: COMPLETE
              Reduce Output Operator
                null sort order: 
                sort order: 
                Statistics: Num rows: 40 Data size: 18480 Basic stats: COMPLETE Column stats: COMPLETE
                tag: 0
                value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string)
                auto parallelism: false
          TableScan
            alias: t2
            filterExpr: (key) IN (1, 2) (type: boolean)
            Statistics: Num rows: 60 Data size: 27720 Basic stats: COMPLETE Column stats: COMPLETE
            GatherStats: false
            Filter Operator
              isSamplingPred: false
              predicate: (key) IN (1, 2) (type: boolean)
              Statistics: Num rows: 9 Data size: 4158 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: int), value (type: string), ds1 (type: string), ds2 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 9 Data size: 4158 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  null sort order: 
                  sort order: 
                  Statistics: Num rows: 9 Data size: 4158 Basic stats: COMPLETE Column stats: COMPLETE
                  tag: 1
                  value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col3 (type: string)
                  auto parallelism: false
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-08
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-08
              ds2 2001-04-08
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-09
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-09
              ds2 2001-04-09
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
#### A masked pattern was here ####
          Partition
            base file name: ds2=2001-04-10
            input format: org.apache.hadoop.mapred.TextInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            partition values:
              ds1 2000-04-10
              ds2 2001-04-10
            properties:
              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
              bucket_count -1
              column.name.delimiter ,
              columns key,value
              columns.comments 
              columns.types int:string
#### A masked pattern was here ####
              name default.pcr_t1_n1
              numFiles 1
              numRows 20
              partition_columns ds1/ds2
              partition_columns.types string:string
              rawDataSize 160
              serialization.ddl struct pcr_t1_n1 { i32 key, string value}
              serialization.format 1
              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              totalSize 180
#### A masked pattern was here ####
            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.pcr_t1_n1
                partition_columns ds1/ds2
                partition_columns.types string:string
                serialization.ddl struct pcr_t1_n1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.pcr_t1_n1
            name: default.pcr_t1_n1
      Truncated Path -> Alias:
        /pcr_t1_n1/ds1=2000-04-08/ds2=2001-04-08 [$hdt$_0:t1, $hdt$_1:t2]
        /pcr_t1_n1/ds1=2000-04-09/ds2=2001-04-09 [$hdt$_0:t1, $hdt$_1:t2]
        /pcr_t1_n1/ds1=2000-04-10/ds2=2001-04-10 [$hdt$_1:t2]
      Needs Tagging: true
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 
            1 
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
          Statistics: Num rows: 360 Data size: 332640 Basic stats: COMPLETE Column stats: COMPLETE
          Filter Operator
            isSamplingPred: false
            predicate: (struct(_col2,_col4)) IN (const struct('2000-04-08',1), const struct('2000-04-09',2)) (type: boolean)
            Statistics: Num rows: 180 Data size: 166320 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              GlobalTableId: 0
#### A masked pattern was here ####
              NumFilesPerFileSink: 1
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  properties:
                    column.name.delimiter ,
                    columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                    columns.types int,string,string,string,int,string,string,string
                    escape.delim \
                    serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              TotalFiles: 1
              GatherStats: false
              MultiFileSpray: false

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            GatherStats: false
            Reduce Output Operator
              key expressions: _col4 (type: int), _col5 (type: string), _col2 (type: string)
              null sort order: zzz
              sort order: +++
              Statistics: Num rows: 180 Data size: 166320 Basic stats: COMPLETE Column stats: COMPLETE
              tag: -1
              value expressions: _col0 (type: int), _col1 (type: string), _col3 (type: string), _col6 (type: string), _col7 (type: string)
              auto parallelism: false
      Execution mode: vectorized
      Path -> Alias:
#### A masked pattern was here ####
      Path -> Partition:
#### A masked pattern was here ####
          Partition
            base file name: -mr-10004
            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
            properties:
              column.name.delimiter ,
              columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
              columns.types int,string,string,string,int,string,string,string
              escape.delim \
              serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
            serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
          
              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
              properties:
                column.name.delimiter ,
                columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                columns.types int,string,string,string,int,string,string,string
                escape.delim \
                serialization.lib org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
              serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
      Truncated Path -> Alias:
#### A masked pattern was here ####
      Needs Tagging: false
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: int), VALUE._col1 (type: string), KEY.reducesinkkey2 (type: string), VALUE._col2 (type: string), KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string), VALUE._col3 (type: string), VALUE._col4 (type: string)
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
          Statistics: Num rows: 180 Data size: 166320 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            GlobalTableId: 0
#### A masked pattern was here ####
            NumFilesPerFileSink: 1
            Statistics: Num rows: 180 Data size: 166320 Basic stats: COMPLETE Column stats: COMPLETE
#### A masked pattern was here ####
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  columns _col0,_col1,_col2,_col3,_col4,_col5,_col6,_col7
                  columns.types int:string:string:string:int:string:string:string
                  escape.delim \
                  hive.serialization.extend.additional.nesting.levels true
                  serialization.escape.crlf true
                  serialization.format 1
                  serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            TotalFiles: 1
            GatherStats: false
            MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and key=1) or (ds1='2000-04-09' and key=2)
order by key, value, ds1, ds2
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
POSTHOOK: query: select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and key=1) or (ds1='2000-04-09' and key=2)
order by key, value, ds1, ds2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
2	val_2	2000-04-09	2001-04-09
PREHOOK: query: select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and ds2='2001-04-08' and key=1) or (ds1='2000-04-09' and ds2='2001-04-08' and key=2)
order by key, value, ds1, ds2
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
POSTHOOK: query: select key, value, ds1, ds2
from pcr_t1_n1
where (ds1='2000-04-08' and ds2='2001-04-08' and key=1) or (ds1='2000-04-09' and ds2='2001-04-08' and key=2)
order by key, value, ds1, ds2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
PREHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds2='2001-04-08'
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
POSTHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds2='2001-04-08'
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
#### A masked pattern was here ####
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-08	2001-04-08
2	val_2	2000-04-08	2001-04-08	2	val_2	2000-04-08	2001-04-08
4	val_4	2000-04-08	2001-04-08	4	val_4	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-08	2001-04-08
8	val_8	2000-04-08	2001-04-08	8	val_8	2000-04-08	2001-04-08
9	val_9	2000-04-08	2001-04-08	9	val_9	2000-04-08	2001-04-08
10	val_10	2000-04-08	2001-04-08	10	val_10	2000-04-08	2001-04-08
11	val_11	2000-04-08	2001-04-08	11	val_11	2000-04-08	2001-04-08
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-08	2001-04-08
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-08	2001-04-08
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-08	2001-04-08
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-08	2001-04-08
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-08	2001-04-08
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-08	2001-04-08
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-08	2001-04-08
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-08	2001-04-08
17	val_17	2000-04-08	2001-04-08	17	val_17	2000-04-08	2001-04-08
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-08	2001-04-08
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-08	2001-04-08
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-08	2001-04-08
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-08	2001-04-08
19	val_19	2000-04-08	2001-04-08	19	val_19	2000-04-08	2001-04-08
PREHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds1='2000-04-09'
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
POSTHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
on t1.key=t2.key and t1.ds1='2000-04-08' and t2.ds1='2000-04-09'
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
#### A masked pattern was here ####
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
0	val_0	2000-04-08	2001-04-08	0	val_0	2000-04-09	2001-04-09
2	val_2	2000-04-08	2001-04-08	2	val_2	2000-04-09	2001-04-09
4	val_4	2000-04-08	2001-04-08	4	val_4	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
5	val_5	2000-04-08	2001-04-08	5	val_5	2000-04-09	2001-04-09
8	val_8	2000-04-08	2001-04-08	8	val_8	2000-04-09	2001-04-09
9	val_9	2000-04-08	2001-04-08	9	val_9	2000-04-09	2001-04-09
10	val_10	2000-04-08	2001-04-08	10	val_10	2000-04-09	2001-04-09
11	val_11	2000-04-08	2001-04-08	11	val_11	2000-04-09	2001-04-09
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-09	2001-04-09
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-09	2001-04-09
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-09	2001-04-09
12	val_12	2000-04-08	2001-04-08	12	val_12	2000-04-09	2001-04-09
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-09	2001-04-09
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-09	2001-04-09
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-09	2001-04-09
15	val_15	2000-04-08	2001-04-08	15	val_15	2000-04-09	2001-04-09
17	val_17	2000-04-08	2001-04-08	17	val_17	2000-04-09	2001-04-09
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-09	2001-04-09
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-09	2001-04-09
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-09	2001-04-09
18	val_18	2000-04-08	2001-04-08	18	val_18	2000-04-09	2001-04-09
19	val_19	2000-04-08	2001-04-08	19	val_19	2000-04-09	2001-04-09
Warning: Shuffle Join JOIN[8][tables = [$hdt$_0, $hdt$_1]] in Stage 'Stage-1:MAPRED' is a cross product
PREHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
where (t1.ds1='2000-04-08' and t2.key=1) or (t1.ds1='2000-04-09' and t2.key=2)
order by t2.key, t2.value, t1.ds1
PREHOOK: type: QUERY
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
PREHOOK: Input: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
#### A masked pattern was here ####
POSTHOOK: query: select *
from pcr_t1_n1 t1 join pcr_t1_n1 t2
where (t1.ds1='2000-04-08' and t2.key=1) or (t1.ds1='2000-04-09' and t2.key=2)
order by t2.key, t2.value, t1.ds1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-08/ds2=2001-04-08
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-09/ds2=2001-04-09
POSTHOOK: Input: default@pcr_t1_n1@ds1=2000-04-10/ds2=2001-04-10
#### A masked pattern was here ####
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
0	val_0	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
10	val_10	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
10	val_10	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
10	val_10	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
11	val_11	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
11	val_11	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
11	val_11	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
12	val_12	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
15	val_15	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
17	val_17	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
17	val_17	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
17	val_17	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
18	val_18	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
19	val_19	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
19	val_19	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
19	val_19	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
2	val_2	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
2	val_2	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
2	val_2	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
4	val_4	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
4	val_4	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
4	val_4	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
5	val_5	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
8	val_8	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
8	val_8	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
8	val_8	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
9	val_9	2000-04-09	2001-04-09	2	val_2	2000-04-10	2001-04-10
9	val_9	2000-04-09	2001-04-09	2	val_2	2000-04-08	2001-04-08
9	val_9	2000-04-09	2001-04-09	2	val_2	2000-04-09	2001-04-09
PREHOOK: query: drop table pcr_t1_n1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@pcr_t1_n1
PREHOOK: Output: default@pcr_t1_n1
POSTHOOK: query: drop table pcr_t1_n1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@pcr_t1_n1
POSTHOOK: Output: default@pcr_t1_n1
