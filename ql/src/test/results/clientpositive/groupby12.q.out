PREHOOK: query: CREATE TABLE dest1_n106(key INT, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1_n106
POSTHOOK: query: CREATE TABLE dest1_n106(key INT, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1_n106
PREHOOK: query: EXPLAIN
FROM src
INSERT OVERWRITE TABLE dest1_n106 SELECT COUNT(src.key), COUNT(DISTINCT value) GROUP BY src.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
FROM src
INSERT OVERWRITE TABLE dest1_n106 SELECT COUNT(src.key), COUNT(DISTINCT value) GROUP BY src.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0, Stage-3
  Stage-3 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: key (type: string), value (type: string)
                sort order: ++
                Map-reduce partition columns: key (type: string)
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(KEY._col0), count(DISTINCT KEY._col1:0._col0)
          keys: KEY._col0 (type: string)
          mode: complete
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: UDFToInteger(_col1) (type: int), CAST( _col2 AS STRING) (type: string)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.dest1_n106
            Select Operator
              expressions: _col0 (type: int), _col1 (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1_n106

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.dest1_n106

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              value expressions: key (type: int), value (type: string)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0, 'hll'), compute_stats(VALUE._col2, 'hll')
          mode: complete
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 1 Data size: 888 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 888 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

PREHOOK: query: FROM src
INSERT OVERWRITE TABLE dest1_n106 SELECT COUNT(src.key), COUNT(DISTINCT value) GROUP BY src.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@dest1_n106
POSTHOOK: query: FROM src
INSERT OVERWRITE TABLE dest1_n106 SELECT COUNT(src.key), COUNT(DISTINCT value) GROUP BY src.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@dest1_n106
POSTHOOK: Lineage: dest1_n106.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest1_n106.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SELECT dest1_n106.* FROM dest1_n106
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n106
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1_n106.* FROM dest1_n106
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n106
#### A masked pattern was here ####
3	1
1	1
2	1
2	1
2	1
1	1
1	1
1	1
2	1
1	1
1	1
2	1
3	1
2	1
2	1
2	1
1	1
3	1
2	1
1	1
1	1
2	1
1	1
2	1
4	1
1	1
1	1
2	1
2	1
2	1
1	1
2	1
1	1
1	1
1	1
1	1
1	1
1	1
1	1
1	1
2	1
2	1
1	1
3	1
1	1
4	1
1	1
1	1
2	1
2	1
2	1
2	1
1	1
1	1
2	1
2	1
1	1
1	1
1	1
1	1
3	1
1	1
1	1
1	1
2	1
1	1
3	1
1	1
2	1
1	1
2	1
3	1
1	1
1	1
2	1
1	1
1	1
2	1
2	1
2	1
3	1
2	1
2	1
1	1
2	1
2	1
1	1
2	1
2	1
1	1
2	1
2	1
1	1
1	1
2	1
5	1
2	1
1	1
2	1
2	1
2	1
2	1
1	1
2	1
1	1
1	1
1	1
1	1
1	1
2	1
2	1
1	1
1	1
2	1
1	1
1	1
1	1
2	1
1	1
1	1
2	1
3	1
1	1
1	1
4	1
2	1
1	1
2	1
2	1
2	1
1	1
1	1
1	1
1	1
1	1
2	1
1	1
1	1
1	1
1	1
3	1
1	1
1	1
1	1
1	1
2	1
1	1
2	1
1	1
3	1
1	1
3	1
2	1
3	1
2	1
2	1
1	1
2	1
3	1
1	1
2	1
1	1
2	1
1	1
1	1
1	1
1	1
1	1
1	1
2	1
2	1
1	1
5	1
3	1
1	1
2	1
1	1
1	1
1	1
1	1
1	1
1	1
2	1
1	1
3	1
2	1
1	1
1	1
1	1
1	1
1	1
1	1
2	1
3	1
1	1
1	1
1	1
1	1
1	1
2	1
3	1
2	1
2	1
1	1
1	1
5	1
1	1
3	1
2	1
4	1
1	1
3	1
1	1
1	1
2	1
2	1
3	1
1	1
1	1
2	1
1	1
2	1
1	1
2	1
1	1
3	1
3	1
1	1
1	1
1	1
1	1
3	1
2	1
1	1
1	1
1	1
1	1
1	1
1	1
1	1
1	1
3	1
1	1
1	1
2	1
2	1
1	1
2	1
2	1
3	1
1	1
4	1
5	1
1	1
1	1
1	1
1	1
1	1
2	1
1	1
3	1
1	1
1	1
1	1
1	1
1	1
1	1
4	1
1	1
1	1
2	1
1	1
1	1
1	1
1	1
1	1
3	1
3	1
2	1
1	1
1	1
1	1
2	1
1	1
1	1
1	1
2	1
1	1
3	1
2	1
1	1
2	1
1	1
1	1
1	1
1	1
1	1
2	1
2	1
1	1
1	1
1	1
1	1
3	1
1	1
2	1
1	1
2	1
2	1
