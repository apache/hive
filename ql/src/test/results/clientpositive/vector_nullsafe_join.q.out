PREHOOK: query: -- SORT_QUERY_RESULTS
--
-- We currently do not support null safes (i.e the <=> operator) in native vector map join.
-- The explain output will show vectorized execution for both.  We verify the query
-- results are the same (HIVE-10628 shows native will produce the wrong results
-- otherwise).
--
-- This query for "HIVE-3315 join predicate transitive" triggers HIVE-10640-
-- explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.key is NULL;
-- select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.key is NULL;
--
CREATE TABLE myinput1_txt(key int, value int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@myinput1_txt
POSTHOOK: query: -- SORT_QUERY_RESULTS
--
-- We currently do not support null safes (i.e the <=> operator) in native vector map join.
-- The explain output will show vectorized execution for both.  We verify the query
-- results are the same (HIVE-10628 shows native will produce the wrong results
-- otherwise).
--
-- This query for "HIVE-3315 join predicate transitive" triggers HIVE-10640-
-- explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.key is NULL;
-- select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.key is NULL;
--
CREATE TABLE myinput1_txt(key int, value int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@myinput1_txt
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/in8.txt' INTO TABLE myinput1_txt
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@myinput1_txt
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/in8.txt' INTO TABLE myinput1_txt
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@myinput1_txt
PREHOOK: query: CREATE TABLE myinput1 STORED AS ORC AS SELECT * FROM myinput1_txt
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@myinput1_txt
PREHOOK: Output: database:default
PREHOOK: Output: default@myinput1
POSTHOOK: query: CREATE TABLE myinput1 STORED AS ORC AS SELECT * FROM myinput1_txt
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@myinput1_txt
POSTHOOK: Output: database:default
POSTHOOK: Output: default@myinput1
PREHOOK: query: -- merging
explain select * from myinput1 a join myinput1 b on a.key<=>b.value
PREHOOK: type: QUERY
POSTHOOK: query: -- merging
explain select * from myinput1 a join myinput1 b on a.key<=>b.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int)
                1 value (type: int)

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              keys:
                0 key (type: int)
                1 value (type: int)
              nullSafes: [true]
              outputColumnNames: _col0, _col1, _col5, _col6
              Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	NULL
PREHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        b 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int)
                  1 value (type: int)
                  2 key (type: int)
        b 
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: value is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int)
                  1 value (type: int)
                  2 key (type: int)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                keys:
                  0 key (type: int)
                  1 value (type: int)
                  2 key (type: int)
                outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
                Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10	10	NULL
100	100	100	100	100	100
PREHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key<=>c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key<=>c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        b 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int)
                1 value (type: int)
                2 key (type: int)
        b 
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int)
                1 value (type: int)
                2 key (type: int)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              keys:
                0 key (type: int)
                1 value (type: int)
                2 key (type: int)
              nullSafes: [true]
              outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
              Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key<=>c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key<=>c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10	10	NULL
100	100	100	100	100	100
NULL	10	10	NULL	NULL	10
NULL	10	10	NULL	NULL	35
NULL	10	10	NULL	NULL	NULL
NULL	10	48	NULL	NULL	10
NULL	10	48	NULL	NULL	35
NULL	10	48	NULL	NULL	NULL
NULL	10	NULL	NULL	NULL	10
NULL	10	NULL	NULL	NULL	35
NULL	10	NULL	NULL	NULL	NULL
NULL	35	10	NULL	NULL	10
NULL	35	10	NULL	NULL	35
NULL	35	10	NULL	NULL	NULL
NULL	35	48	NULL	NULL	10
NULL	35	48	NULL	NULL	35
NULL	35	48	NULL	NULL	NULL
NULL	35	NULL	NULL	NULL	10
NULL	35	NULL	NULL	NULL	35
NULL	35	NULL	NULL	NULL	NULL
NULL	NULL	10	NULL	NULL	10
NULL	NULL	10	NULL	NULL	35
NULL	NULL	10	NULL	NULL	NULL
NULL	NULL	48	NULL	NULL	10
NULL	NULL	48	NULL	NULL	35
NULL	NULL	48	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	10
NULL	NULL	NULL	NULL	NULL	35
NULL	NULL	NULL	NULL	NULL	NULL
PREHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value=b.key join myinput1 c on a.key<=>c.key AND a.value=c.value
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value=b.key join myinput1 c on a.key<=>c.key AND a.value=c.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        b 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: value is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int), value (type: int)
                  1 value (type: int), key (type: int)
                  2 key (type: int), value (type: int)
        b 
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int), value (type: int)
                  1 value (type: int), key (type: int)
                  2 key (type: int), value (type: int)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: value is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                keys:
                  0 key (type: int), value (type: int)
                  1 value (type: int), key (type: int)
                  2 key (type: int), value (type: int)
                nullSafes: [true, false]
                outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
                Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value=b.key join myinput1 c on a.key<=>c.key AND a.value=c.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value=b.key join myinput1 c on a.key<=>c.key AND a.value=c.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
100	100	100	100	100	100
NULL	10	10	NULL	NULL	10
PREHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value<=>b.key join myinput1 c on a.key<=>c.key AND a.value<=>c.value
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value<=>b.key join myinput1 c on a.key<=>c.key AND a.value<=>c.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        b 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int), value (type: int)
                1 value (type: int), key (type: int)
                2 key (type: int), value (type: int)
        b 
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int), value (type: int)
                1 value (type: int), key (type: int)
                2 key (type: int), value (type: int)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              keys:
                0 key (type: int), value (type: int)
                1 value (type: int), key (type: int)
                2 key (type: int), value (type: int)
              nullSafes: [true, true]
              outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
              Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value<=>b.key join myinput1 c on a.key<=>c.key AND a.value<=>c.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value<=>b.key join myinput1 c on a.key<=>c.key AND a.value<=>c.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10	10	NULL
100	100	100	100	100	100
NULL	10	10	NULL	NULL	10
NULL	NULL	NULL	NULL	NULL	NULL
PREHOOK: query: -- outer joins
SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: -- outer joins
SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
48	NULL	NULL	NULL
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	NULL
PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	35
NULL	NULL	NULL	NULL
PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
48	NULL	NULL	NULL
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	35
NULL	NULL	NULL	NULL
PREHOOK: query: -- map joins
SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: -- map joins
SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	NULL
PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	NULL
PREHOOK: query: -- merging
explain select * from myinput1 a join myinput1 b on a.key<=>b.value
PREHOOK: type: QUERY
POSTHOOK: query: -- merging
explain select * from myinput1 a join myinput1 b on a.key<=>b.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int)
                1 value (type: int)

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
              keys:
                0 key (type: int)
                1 value (type: int)
              nullSafes: [true]
              outputColumnNames: _col0, _col1, _col5, _col6
              Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	NULL
PREHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        b 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int)
                  1 value (type: int)
                  2 key (type: int)
        b 
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: value is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int)
                  1 value (type: int)
                  2 key (type: int)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                keys:
                  0 key (type: int)
                  1 value (type: int)
                  2 key (type: int)
                outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
                Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10	10	NULL
100	100	100	100	100	100
PREHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key<=>c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key<=>c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        b 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int)
                1 value (type: int)
                2 key (type: int)
        b 
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int)
                1 value (type: int)
                2 key (type: int)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              keys:
                0 key (type: int)
                1 value (type: int)
                2 key (type: int)
              nullSafes: [true]
              outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
              Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key<=>c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value join myinput1 c on a.key<=>c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10	10	NULL
100	100	100	100	100	100
NULL	10	10	NULL	NULL	10
NULL	10	10	NULL	NULL	35
NULL	10	10	NULL	NULL	NULL
NULL	10	48	NULL	NULL	10
NULL	10	48	NULL	NULL	35
NULL	10	48	NULL	NULL	NULL
NULL	10	NULL	NULL	NULL	10
NULL	10	NULL	NULL	NULL	35
NULL	10	NULL	NULL	NULL	NULL
NULL	35	10	NULL	NULL	10
NULL	35	10	NULL	NULL	35
NULL	35	10	NULL	NULL	NULL
NULL	35	48	NULL	NULL	10
NULL	35	48	NULL	NULL	35
NULL	35	48	NULL	NULL	NULL
NULL	35	NULL	NULL	NULL	10
NULL	35	NULL	NULL	NULL	35
NULL	35	NULL	NULL	NULL	NULL
NULL	NULL	10	NULL	NULL	10
NULL	NULL	10	NULL	NULL	35
NULL	NULL	10	NULL	NULL	NULL
NULL	NULL	48	NULL	NULL	10
NULL	NULL	48	NULL	NULL	35
NULL	NULL	48	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	10
NULL	NULL	NULL	NULL	NULL	35
NULL	NULL	NULL	NULL	NULL	NULL
PREHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value=b.key join myinput1 c on a.key<=>c.key AND a.value=c.value
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value=b.key join myinput1 c on a.key<=>c.key AND a.value=c.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        b 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: value is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int), value (type: int)
                  1 value (type: int), key (type: int)
                  2 key (type: int), value (type: int)
        b 
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 key (type: int), value (type: int)
                  1 value (type: int), key (type: int)
                  2 key (type: int), value (type: int)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: value is not null (type: boolean)
              Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                keys:
                  0 key (type: int), value (type: int)
                  1 value (type: int), key (type: int)
                  2 key (type: int), value (type: int)
                nullSafes: [true, false]
                outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
                Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value=b.key join myinput1 c on a.key<=>c.key AND a.value=c.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value=b.key join myinput1 c on a.key<=>c.key AND a.value=c.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
100	100	100	100	100	100
NULL	10	10	NULL	NULL	10
PREHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value<=>b.key join myinput1 c on a.key<=>c.key AND a.value<=>c.value
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value<=>b.key join myinput1 c on a.key<=>c.key AND a.value<=>c.value
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-5 is a root stage
  Stage-4 depends on stages: Stage-5
  Stage-0 depends on stages: Stage-4

STAGE PLANS:
  Stage: Stage-5
    Map Reduce Local Work
      Alias -> Map Local Tables:
        a 
          Fetch Operator
            limit: -1
        b 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        a 
          TableScan
            alias: a
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int), value (type: int)
                1 value (type: int), key (type: int)
                2 key (type: int), value (type: int)
        b 
          TableScan
            alias: b
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            HashTable Sink Operator
              keys:
                0 key (type: int), value (type: int)
                1 value (type: int), key (type: int)
                2 key (type: int), value (type: int)

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Map Join Operator
              condition map:
                   Inner Join 0 to 1
                   Inner Join 0 to 2
              keys:
                0 key (type: int), value (type: int)
                1 value (type: int), key (type: int)
                2 key (type: int), value (type: int)
              nullSafes: [true, true]
              outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
              Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 13 Data size: 52 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value<=>b.key join myinput1 c on a.key<=>c.key AND a.value<=>c.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: select * from myinput1 a join myinput1 b on a.key<=>b.value AND a.value<=>b.key join myinput1 c on a.key<=>c.key AND a.value<=>c.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10	10	NULL
100	100	100	100	100	100
NULL	10	10	NULL	NULL	10
NULL	NULL	NULL	NULL	NULL	NULL
PREHOOK: query: -- outer joins
SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: -- outer joins
SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
48	NULL	NULL	NULL
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	NULL
PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	35
NULL	NULL	NULL	NULL
PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
48	NULL	NULL	NULL
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	35
NULL	NULL	NULL	NULL
PREHOOK: query: -- map joins
SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: -- map joins
SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	NULL
PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key<=>b.value
PREHOOK: type: QUERY
PREHOOK: Input: default@myinput1
#### A masked pattern was here ####
POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key<=>b.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@myinput1
#### A masked pattern was here ####
10	NULL	NULL	10
100	100	100	100
NULL	10	10	NULL
NULL	10	48	NULL
NULL	10	NULL	NULL
NULL	35	10	NULL
NULL	35	48	NULL
NULL	35	NULL	NULL
NULL	NULL	10	NULL
NULL	NULL	48	NULL
NULL	NULL	NULL	NULL
