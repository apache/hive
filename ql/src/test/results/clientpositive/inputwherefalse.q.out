PREHOOK: query: From (select * from src) a
insert overwrite directory 'target/warehouse/destemp.out/dir1/'
select key
where key=200 limit 1
insert overwrite directory 'target/warehouse/destemp.out/dir2/'
select 'header'
limit 0
insert overwrite directory 'target/warehouse/destemp.out/dir3/'
select key
where key = 100 limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: target/warehouse/destemp.out/dir1
PREHOOK: Output: target/warehouse/destemp.out/dir2
PREHOOK: Output: target/warehouse/destemp.out/dir3
POSTHOOK: query: From (select * from src) a
insert overwrite directory 'target/warehouse/destemp.out/dir1/'
select key
where key=200 limit 1
insert overwrite directory 'target/warehouse/destemp.out/dir2/'
select 'header'
limit 0
insert overwrite directory 'target/warehouse/destemp.out/dir3/'
select key
where key = 100 limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: target/warehouse/destemp.out/dir1
POSTHOOK: Output: target/warehouse/destemp.out/dir2
POSTHOOK: Output: target/warehouse/destemp.out/dir3
200
100
#### A masked pattern was here ####
PREHOOK: query: From (select * from src) a
insert overwrite directory 'target/warehouse/destemp.out/dir1/'
select key
where key=200 limit 1
insert overwrite directory 'target/warehouse/destemp.out/dir2/'
select 'header'
where 1=2
insert overwrite directory 'target/warehouse/destemp.out/dir3/'
select key
where key = 100 limit 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: target/warehouse/destemp.out/dir1
PREHOOK: Output: target/warehouse/destemp.out/dir2
PREHOOK: Output: target/warehouse/destemp.out/dir3
POSTHOOK: query: From (select * from src) a
insert overwrite directory 'target/warehouse/destemp.out/dir1/'
select key
where key=200 limit 1
insert overwrite directory 'target/warehouse/destemp.out/dir2/'
select 'header'
where 1=2
insert overwrite directory 'target/warehouse/destemp.out/dir3/'
select key
where key = 100 limit 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: target/warehouse/destemp.out/dir1
POSTHOOK: Output: target/warehouse/destemp.out/dir2
POSTHOOK: Output: target/warehouse/destemp.out/dir3
200
100
#### A masked pattern was here ####
PREHOOK: query: explain select a.value from src a join src b on a.key = b.key where a.key=100 limit 0
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: explain select a.value from src a join src b on a.key = b.key where a.key=100 limit 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            filterExpr: (UDFToDouble(key) = 100.0D) (type: boolean)
            Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (UDFToDouble(key) = 100.0D) (type: boolean)
              Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: string), value (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 250 Data size: 44500 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: string)
          TableScan
            alias: b
            filterExpr: (UDFToDouble(key) = 100.0D) (type: boolean)
            Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (UDFToDouble(key) = 100.0D) (type: boolean)
              Statistics: Num rows: 250 Data size: 21750 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: key (type: string)
                outputColumnNames: _col0
                Statistics: Num rows: 250 Data size: 21750 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 250 Data size: 21750 Basic stats: COMPLETE Column stats: COMPLETE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: string)
            1 _col0 (type: string)
          outputColumnNames: _col1
          Statistics: Num rows: 250 Data size: 22750 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col1 (type: string)
            outputColumnNames: _col0
            Statistics: Num rows: 250 Data size: 22750 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: false (type: boolean)
              Statistics: Num rows: 1 Data size: 91 Basic stats: COMPLETE Column stats: COMPLETE
              File Output Operator
                compressed: false
                Statistics: Num rows: 1 Data size: 91 Basic stats: COMPLETE Column stats: COMPLETE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select a.value from src a join src b on a.key = b.key where a.key=100 limit 0
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select a.value from src a join src b on a.key = b.key where a.key=100 limit 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
