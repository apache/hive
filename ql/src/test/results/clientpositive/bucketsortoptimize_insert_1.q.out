PREHOOK: query: CREATE TABLE test_table1_n5 (key INT, value STRING) PARTITIONED BY (ds STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_table1_n5
POSTHOOK: query: CREATE TABLE test_table1_n5 (key INT, value STRING) PARTITIONED BY (ds STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_table1_n5
PREHOOK: query: CREATE TABLE test_table2_n5 (key INT, value STRING) PARTITIONED BY (ds STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_table2_n5
POSTHOOK: query: CREATE TABLE test_table2_n5 (key INT, value STRING) PARTITIONED BY (ds STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_table2_n5
PREHOOK: query: FROM src
INSERT OVERWRITE TABLE test_table1_n5 PARTITION (ds = '1') SELECT *
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@test_table1_n5@ds=1
POSTHOOK: query: FROM src
INSERT OVERWRITE TABLE test_table1_n5 PARTITION (ds = '1') SELECT *
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@test_table1_n5@ds=1
POSTHOOK: Lineage: test_table1_n5 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_table1_n5 PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.key, x.value from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.key, x.value from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.test_table2_n5

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 1
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_table2_n5

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.test_table2_n5

PREHOOK: query: INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.key, x.value from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table1_n5
PREHOOK: Input: default@test_table1_n5@ds=1
PREHOOK: Output: default@test_table2_n5@ds=1
POSTHOOK: query: INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.key, x.value from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table1_n5
POSTHOOK: Input: default@test_table1_n5@ds=1
POSTHOOK: Output: default@test_table2_n5@ds=1
POSTHOOK: Lineage: test_table2_n5 PARTITION(ds=1).key SIMPLE [(test_table1_n5)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: test_table2_n5 PARTITION(ds=1).value SIMPLE [(test_table1_n5)a.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select count(*) from test_table2_n5 where ds = '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table2_n5
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from test_table2_n5 where ds = '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table2_n5
#### A masked pattern was here ####
500
PREHOOK: query: select count(*) from test_table2_n5 tablesample (bucket 1 out of 2) s where ds = '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table2_n5
PREHOOK: Input: default@test_table2_n5@ds=1
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from test_table2_n5 tablesample (bucket 1 out of 2) s where ds = '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table2_n5
POSTHOOK: Input: default@test_table2_n5@ds=1
#### A masked pattern was here ####
243
PREHOOK: query: select count(*) from test_table2_n5 tablesample (bucket 2 out of 2) s where ds = '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table2_n5
PREHOOK: Input: default@test_table2_n5@ds=1
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from test_table2_n5 tablesample (bucket 2 out of 2) s where ds = '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table2_n5
POSTHOOK: Input: default@test_table2_n5@ds=1
#### A masked pattern was here ####
257
PREHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT * from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT * from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.test_table2_n5

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 1
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_table2_n5

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.test_table2_n5

PREHOOK: query: INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT * from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table1_n5
PREHOOK: Input: default@test_table1_n5@ds=1
PREHOOK: Output: default@test_table2_n5@ds=1
POSTHOOK: query: INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT * from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table1_n5
POSTHOOK: Input: default@test_table1_n5@ds=1
POSTHOOK: Output: default@test_table2_n5@ds=1
POSTHOOK: Lineage: test_table2_n5 PARTITION(ds=1).key SIMPLE [(test_table1_n5)a.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: test_table2_n5 PARTITION(ds=1).value SIMPLE [(test_table1_n5)a.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: select count(*) from test_table2_n5 where ds = '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table2_n5
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from test_table2_n5 where ds = '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table2_n5
#### A masked pattern was here ####
500
PREHOOK: query: select count(*) from test_table2_n5 tablesample (bucket 1 out of 2) s where ds = '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table2_n5
PREHOOK: Input: default@test_table2_n5@ds=1
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from test_table2_n5 tablesample (bucket 1 out of 2) s where ds = '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table2_n5
POSTHOOK: Input: default@test_table2_n5@ds=1
#### A masked pattern was here ####
243
PREHOOK: query: select count(*) from test_table2_n5 tablesample (bucket 2 out of 2) s where ds = '1'
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table2_n5
PREHOOK: Input: default@test_table2_n5@ds=1
#### A masked pattern was here ####
POSTHOOK: query: select count(*) from test_table2_n5 tablesample (bucket 2 out of 2) s where ds = '1'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table2_n5
POSTHOOK: Input: default@test_table2_n5@ds=1
#### A masked pattern was here ####
257
PREHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.key, concat(x.value, x.value) from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.key, concat(x.value, x.value) from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), concat(value, value) (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.test_table2_n5

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 1
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_table2_n5

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.test_table2_n5

PREHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.key+x.key, x.value from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.key+x.key, x.value from 
(
SELECT a.key, a.value FROM test_table1_n5 a WHERE a.ds = '1'
)x
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0, Stage-3
  Stage-3 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: (key + key) (type: int), value (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Reduce Output Operator
                key expressions: _col0 (type: int)
                sort order: +
                Map-reduce partition columns: _col0 (type: int)
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                value expressions: _col1 (type: string)
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                name: default.test_table2_n5
          Select Operator
            expressions: _col0 (type: int), _col1 (type: string), '1' (type: string)
            outputColumnNames: key, value, ds
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Group By Operator
              aggregations: compute_stats(key, 'hll'), compute_stats(value, 'hll')
              keys: ds (type: string)
              mode: hash
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 1
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_table2_n5

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.test_table2_n5

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string)
              sort order: +
              Map-reduce partition columns: _col0 (type: string)
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:binary>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col1 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col2 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint,ndvbitvector:binary>), _col0 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

PREHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.k1, concat(x.v1, x.v1) from 
(
SELECT a.key as k1, a.value as v1 FROM test_table1_n5 a WHERE a.ds = '1'
)x
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
INSERT OVERWRITE TABLE test_table2_n5 PARTITION (ds = '1')
SELECT x.k1, concat(x.v1, x.v1) from 
(
SELECT a.key as k1, a.value as v1 FROM test_table1_n5 a WHERE a.ds = '1'
)x
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int), concat(value, value) (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.test_table2_n5

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 1
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_table2_n5

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: key, value
          Column Types: int, string
          Table: default.test_table2_n5

