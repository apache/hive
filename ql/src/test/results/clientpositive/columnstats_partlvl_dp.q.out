PREHOOK: query: DROP TABLE Employee_Part
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE Employee_Part
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE Employee_Part(employeeID int, employeeName String) partitioned by (employeeSalary double, country string)
row format delimited fields terminated by '|'  stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@Employee_Part
POSTHOOK: query: CREATE TABLE Employee_Part(employeeID int, employeeName String) partitioned by (employeeSalary double, country string)
row format delimited fields terminated by '|'  stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@Employee_Part
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_Part partition(employeeSalary='2000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_Part partition(employeeSalary='2000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part
POSTHOOK: Output: default@employee_part@employeesalary=2000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part partition(employeeSalary='2000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part partition(employeeSalary='2000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part
POSTHOOK: Output: default@employee_part@employeesalary=2000.0/country=UK
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part partition(employeeSalary='3000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part partition(employeeSalary='3000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part
POSTHOOK: Output: default@employee_part@employeesalary=3000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part partition(employeeSalary='4000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part partition(employeeSalary='4000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part
POSTHOOK: Output: default@employee_part@employeesalary=4000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part partition(employeeSalary='3500.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee_Part partition(employeeSalary='3500.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part
POSTHOOK: Output: default@employee_part@employeesalary=3500.0/country=UK
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_Part partition(employeeSalary='3000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee_part
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee_Part partition(employeeSalary='3000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee_part
POSTHOOK: Output: default@employee_part@employeesalary=3000.0/country=UK
PREHOOK: query: -- dynamic partitioning syntax
explain 
analyze table Employee_Part partition (employeeSalary='4000.0', country) compute statistics for columns employeeName, employeeID
PREHOOK: type: QUERY
POSTHOOK: query: -- dynamic partitioning syntax
explain 
analyze table Employee_Part partition (employeeSalary='4000.0', country) compute statistics for columns employeeName, employeeID
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: employee_part
            Select Operator
              expressions: 4000.0 (type: double), country (type: string), employeename (type: string), employeeid (type: int)
              outputColumnNames: employeesalary, country, employeename, employeeid
              Group By Operator
                aggregations: compute_stats(employeename, 16), compute_stats(employeeid, 16)
                keys: employeesalary (type: double), country (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2, _col3
                Reduce Output Operator
                  key expressions: _col0 (type: double), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: double), _col1 (type: string)
                  value expressions: _col2 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:string,numbitvectors:int>), _col3 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:string,numbitvectors:int>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          keys: KEY._col0 (type: double), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3
          Select Operator
            expressions: _col2 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint>), _col3 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,numdistinctvalues:bigint>), _col0 (type: double), _col1 (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-1
    Column Stats Work
      Column Stats Desc:
          Columns: employeeName, employeeID
          Column Types: string, int
          Table: default.employee_part

PREHOOK: query: analyze table Employee_Part partition (employeeSalary='4000.0', country) compute statistics for columns employeeName, employeeID
PREHOOK: type: QUERY
PREHOOK: Input: default@employee_part
PREHOOK: Input: default@employee_part@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_Part partition (employeeSalary='4000.0', country) compute statistics for columns employeeName, employeeID
POSTHOOK: type: QUERY
POSTHOOK: Input: default@employee_part
POSTHOOK: Input: default@employee_part@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_Part partition (employeeSalary='4000.0', country='USA') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part
POSTHOOK: query: describe formatted Employee_Part partition (employeeSalary='4000.0', country='USA') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
employeeName        	string              	                    	                    	0                   	6                   	5.142857142857143   	6                   	                    	                    	from deserializer   
PREHOOK: query: -- don't specify all partitioning keys
explain	
analyze table Employee_Part partition (employeeSalary='2000.0') compute statistics for columns employeeID
PREHOOK: type: QUERY
POSTHOOK: query: -- don't specify all partitioning keys
explain	
analyze table Employee_Part partition (employeeSalary='2000.0') compute statistics for columns employeeID
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: employee_part
            Select Operator
              expressions: 2000.0 (type: double), country (type: string), employeeid (type: int)
              outputColumnNames: employeesalary, country, employeeid
              Group By Operator
                aggregations: compute_stats(employeeid, 16)
                keys: employeesalary (type: double), country (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Reduce Output Operator
                  key expressions: _col0 (type: double), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: double), _col1 (type: string)
                  value expressions: _col2 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:string,numbitvectors:int>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0)
          keys: KEY._col0 (type: double), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Select Operator
            expressions: _col2 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,numdistinctvalues:bigint>), _col0 (type: double), _col1 (type: string)
            outputColumnNames: _col0, _col1, _col2
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-1
    Column Stats Work
      Column Stats Desc:
          Columns: employeeID
          Column Types: int
          Table: default.employee_part

PREHOOK: query: analyze table Employee_Part partition (employeeSalary='2000.0') compute statistics for columns employeeID
PREHOOK: type: QUERY
PREHOOK: Input: default@employee_part
PREHOOK: Input: default@employee_part@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_part@employeesalary=2000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_Part partition (employeeSalary='2000.0') compute statistics for columns employeeID
POSTHOOK: type: QUERY
POSTHOOK: Input: default@employee_part
POSTHOOK: Input: default@employee_part@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_part@employeesalary=2000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_Part partition (employeeSalary='2000.0', country='USA') employeeID
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part
POSTHOOK: query: describe formatted Employee_Part partition (employeeSalary='2000.0', country='USA') employeeID
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
employeeID          	int                 	16                  	34                  	1                   	14                  	                    	                    	                    	                    	from deserializer   
PREHOOK: query: describe formatted Employee_Part partition (employeeSalary='2000.0', country='UK') employeeID
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part
POSTHOOK: query: describe formatted Employee_Part partition (employeeSalary='2000.0', country='UK') employeeID
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
employeeID          	int                 	16                  	31                  	0                   	9                   	                    	                    	                    	                    	from deserializer   
PREHOOK: query: -- don't specify any partitioning keys
explain	
analyze table Employee_Part partition (employeeSalary) compute statistics for columns employeeID
PREHOOK: type: QUERY
POSTHOOK: query: -- don't specify any partitioning keys
explain	
analyze table Employee_Part partition (employeeSalary) compute statistics for columns employeeID
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: employee_part
            Select Operator
              expressions: employeesalary (type: double), country (type: string), employeeid (type: int)
              outputColumnNames: employeesalary, country, employeeid
              Group By Operator
                aggregations: compute_stats(employeeid, 16)
                keys: employeesalary (type: double), country (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Reduce Output Operator
                  key expressions: _col0 (type: double), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: double), _col1 (type: string)
                  value expressions: _col2 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:string,numbitvectors:int>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0)
          keys: KEY._col0 (type: double), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Select Operator
            expressions: _col2 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,numdistinctvalues:bigint>), _col0 (type: double), _col1 (type: string)
            outputColumnNames: _col0, _col1, _col2
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-1
    Column Stats Work
      Column Stats Desc:
          Columns: employeeID
          Column Types: int
          Table: default.employee_part

PREHOOK: query: analyze table Employee_Part partition (employeeSalary) compute statistics for columns employeeID
PREHOOK: type: QUERY
PREHOOK: Input: default@employee_part
PREHOOK: Input: default@employee_part@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_part@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee_part@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee_part@employeesalary=3000.0/country=USA
PREHOOK: Input: default@employee_part@employeesalary=3500.0/country=UK
PREHOOK: Input: default@employee_part@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_Part partition (employeeSalary) compute statistics for columns employeeID
POSTHOOK: type: QUERY
POSTHOOK: Input: default@employee_part
POSTHOOK: Input: default@employee_part@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_part@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee_part@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee_part@employeesalary=3000.0/country=USA
POSTHOOK: Input: default@employee_part@employeesalary=3500.0/country=UK
POSTHOOK: Input: default@employee_part@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_Part partition (employeeSalary='3000.0', country='UK') employeeID
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part
POSTHOOK: query: describe formatted Employee_Part partition (employeeSalary='3000.0', country='UK') employeeID
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
employeeID          	int                 	16                  	34                  	1                   	14                  	                    	                    	                    	                    	from deserializer   
PREHOOK: query: explain	
analyze table Employee_Part partition (employeeSalary,country) compute statistics for columns
PREHOOK: type: QUERY
POSTHOOK: query: explain	
analyze table Employee_Part partition (employeeSalary,country) compute statistics for columns
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: employee_part
            Select Operator
              expressions: employeesalary (type: double), country (type: string), employeeid (type: int), employeename (type: string)
              outputColumnNames: employeesalary, country, employeeid, employeename
              Group By Operator
                aggregations: compute_stats(employeeid, 16), compute_stats(employeename, 16)
                keys: employeesalary (type: double), country (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2, _col3
                Reduce Output Operator
                  key expressions: _col0 (type: double), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: double), _col1 (type: string)
                  value expressions: _col2 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:string,numbitvectors:int>), _col3 (type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:string,numbitvectors:int>)
      Reduce Operator Tree:
        Group By Operator
          aggregations: compute_stats(VALUE._col0), compute_stats(VALUE._col1)
          keys: KEY._col0 (type: double), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3
          Select Operator
            expressions: _col2 (type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,numdistinctvalues:bigint>), _col3 (type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint>), _col0 (type: double), _col1 (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-1
    Column Stats Work
      Column Stats Desc:
          Columns: employeeid, employeename
          Column Types: int, string
          Table: default.employee_part

PREHOOK: query: analyze table Employee_Part partition (employeeSalary,country) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@employee_part
PREHOOK: Input: default@employee_part@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee_part@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee_part@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee_part@employeesalary=3000.0/country=USA
PREHOOK: Input: default@employee_part@employeesalary=3500.0/country=UK
PREHOOK: Input: default@employee_part@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee_Part partition (employeeSalary,country) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@employee_part
POSTHOOK: Input: default@employee_part@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee_part@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee_part@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee_part@employeesalary=3000.0/country=USA
POSTHOOK: Input: default@employee_part@employeesalary=3500.0/country=UK
POSTHOOK: Input: default@employee_part@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee_Part partition (employeeSalary='3500.0', country='UK') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee_part
POSTHOOK: query: describe formatted Employee_Part partition (employeeSalary='3500.0', country='UK') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee_part
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
employeeName        	string              	                    	                    	0                   	6                   	5.142857142857143   	6                   	                    	                    	from deserializer   
PREHOOK: query: -- partially populated stats
drop table Employee
PREHOOK: type: DROPTABLE
POSTHOOK: query: -- partially populated stats
drop table Employee
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE Employee(employeeID int, employeeName String) partitioned by (employeeSalary double, country string)
row format delimited fields terminated by '|'  stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@Employee
POSTHOOK: query: CREATE TABLE Employee(employeeID int, employeeName String) partitioned by (employeeSalary double, country string)
row format delimited fields terminated by '|'  stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@Employee
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee partition(employeeSalary='2000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee partition(employeeSalary='2000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee
POSTHOOK: Output: default@employee@employeesalary=2000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee partition(employeeSalary='2000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee partition(employeeSalary='2000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee
POSTHOOK: Output: default@employee@employeesalary=2000.0/country=UK
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee partition(employeeSalary='3500.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee partition(employeeSalary='3500.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee
POSTHOOK: Output: default@employee@employeesalary=3500.0/country=UK
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee partition(employeeSalary='3000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee.dat"  INTO TABLE Employee partition(employeeSalary='3000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee
POSTHOOK: Output: default@employee@employeesalary=3000.0/country=UK
PREHOOK: query: analyze table Employee partition (employeeSalary,country) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@employee
PREHOOK: Input: default@employee@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee@employeesalary=3500.0/country=UK
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee partition (employeeSalary,country) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@employee
POSTHOOK: Input: default@employee@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee@employeesalary=3500.0/country=UK
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee partition (employeeSalary='3500.0', country='UK') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee
POSTHOOK: query: describe formatted Employee partition (employeeSalary='3500.0', country='UK') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
employeeName        	string              	                    	                    	0                   	6                   	5.142857142857143   	6                   	                    	                    	from deserializer   
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee partition(employeeSalary='3000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee partition(employeeSalary='3000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee
POSTHOOK: Output: default@employee@employeesalary=3000.0/country=USA
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee partition(employeeSalary='4000.0', country='USA')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee2.dat" INTO TABLE Employee partition(employeeSalary='4000.0', country='USA')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee
POSTHOOK: Output: default@employee@employeesalary=4000.0/country=USA
PREHOOK: query: analyze table Employee partition (employeeSalary) compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@employee
PREHOOK: Input: default@employee@employeesalary=2000.0/country=UK
PREHOOK: Input: default@employee@employeesalary=2000.0/country=USA
PREHOOK: Input: default@employee@employeesalary=3000.0/country=UK
PREHOOK: Input: default@employee@employeesalary=3000.0/country=USA
PREHOOK: Input: default@employee@employeesalary=3500.0/country=UK
PREHOOK: Input: default@employee@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee partition (employeeSalary) compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@employee
POSTHOOK: Input: default@employee@employeesalary=2000.0/country=UK
POSTHOOK: Input: default@employee@employeesalary=2000.0/country=USA
POSTHOOK: Input: default@employee@employeesalary=3000.0/country=UK
POSTHOOK: Input: default@employee@employeesalary=3000.0/country=USA
POSTHOOK: Input: default@employee@employeesalary=3500.0/country=UK
POSTHOOK: Input: default@employee@employeesalary=4000.0/country=USA
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee partition (employeeSalary='3000.0', country='USA') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee
POSTHOOK: query: describe formatted Employee partition (employeeSalary='3000.0', country='USA') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
employeeName        	string              	                    	                    	0                   	6                   	5.142857142857143   	6                   	                    	                    	from deserializer   
PREHOOK: query: -- add columns
alter table Employee add columns (c int ,d string)
PREHOOK: type: ALTERTABLE_ADDCOLS
PREHOOK: Input: default@employee
PREHOOK: Output: default@employee
POSTHOOK: query: -- add columns
alter table Employee add columns (c int ,d string)
POSTHOOK: type: ALTERTABLE_ADDCOLS
POSTHOOK: Input: default@employee
POSTHOOK: Output: default@employee
PREHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee_part.txt"  INTO TABLE Employee partition(employeeSalary='6000.0', country='UK')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@employee
POSTHOOK: query: LOAD DATA LOCAL INPATH "../../data/files/employee_part.txt"  INTO TABLE Employee partition(employeeSalary='6000.0', country='UK')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@employee
POSTHOOK: Output: default@employee@employeesalary=6000.0/country=UK
PREHOOK: query: analyze table Employee partition (employeeSalary='6000.0',country='UK') compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@employee
PREHOOK: Input: default@employee@employeesalary=6000.0/country=UK
#### A masked pattern was here ####
POSTHOOK: query: analyze table Employee partition (employeeSalary='6000.0',country='UK') compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@employee
POSTHOOK: Input: default@employee@employeesalary=6000.0/country=UK
#### A masked pattern was here ####
PREHOOK: query: describe formatted Employee partition (employeeSalary='6000.0', country='UK') employeeName
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee
POSTHOOK: query: describe formatted Employee partition (employeeSalary='6000.0', country='UK') employeeName
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
employeeName        	string              	                    	                    	0                   	9                   	4.777777777777778   	6                   	                    	                    	from deserializer   
PREHOOK: query: describe formatted Employee partition (employeeSalary='6000.0', country='UK') c
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee
POSTHOOK: query: describe formatted Employee partition (employeeSalary='6000.0', country='UK') c
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
c                   	int                 	2000                	4000                	0                   	4                   	                    	                    	                    	                    	from deserializer   
PREHOOK: query: describe formatted Employee partition (employeeSalary='6000.0', country='UK') d
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@employee
POSTHOOK: query: describe formatted Employee partition (employeeSalary='6000.0', country='UK') d
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@employee
# col_name            	data_type           	min                 	max                 	num_nulls           	distinct_count      	avg_col_len         	max_col_len         	num_trues           	num_falses          	comment             
	 	 	 	 	 	 	 	 	 	 
d                   	string              	                    	                    	0                   	2                   	2.4444444444444446  	3                   	                    	                    	from deserializer   
