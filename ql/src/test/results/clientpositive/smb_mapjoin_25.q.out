PREHOOK: query: create table smb_bucket_1_n4(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_bucket_1_n4
POSTHOOK: query: create table smb_bucket_1_n4(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_bucket_1_n4
PREHOOK: query: create table smb_bucket_2_n4(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_bucket_2_n4
POSTHOOK: query: create table smb_bucket_2_n4(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_bucket_2_n4
PREHOOK: query: create table smb_bucket_3_n4(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_bucket_3_n4
POSTHOOK: query: create table smb_bucket_3_n4(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_bucket_3_n4
PREHOOK: query: load data local inpath '../../data/files/smb_rc1/000000_0' overwrite into table smb_bucket_1_n4
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smb_bucket_1_n4
POSTHOOK: query: load data local inpath '../../data/files/smb_rc1/000000_0' overwrite into table smb_bucket_1_n4
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smb_bucket_1_n4
PREHOOK: query: load data local inpath '../../data/files/smb_rc2/000000_0' overwrite into table smb_bucket_2_n4
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smb_bucket_2_n4
POSTHOOK: query: load data local inpath '../../data/files/smb_rc2/000000_0' overwrite into table smb_bucket_2_n4
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smb_bucket_2_n4
PREHOOK: query: load data local inpath '../../data/files/smb_rc3/000000_0' overwrite into table smb_bucket_3_n4
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smb_bucket_3_n4
POSTHOOK: query: load data local inpath '../../data/files/smb_rc3/000000_0' overwrite into table smb_bucket_3_n4
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smb_bucket_3_n4
Warning: Shuffle Join JOIN[19][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Stage-1:MAPRED' is a cross product
Warning: Shuffle Join JOIN[14][tables = [$hdt$_2, $hdt$_3]] in Stage 'Stage-3:MAPRED' is a cross product
PREHOOK: query: explain 
select * from (select a.key from smb_bucket_1_n4 a join smb_bucket_2_n4 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2_n4 c join smb_bucket_3_n4 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n4
PREHOOK: Input: default@smb_bucket_2_n4
PREHOOK: Input: default@smb_bucket_3_n4
#### A masked pattern was here ####
POSTHOOK: query: explain 
select * from (select a.key from smb_bucket_1_n4 a join smb_bucket_2_n4 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2_n4 c join smb_bucket_3_n4 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n4
POSTHOOK: Input: default@smb_bucket_2_n4
POSTHOOK: Input: default@smb_bucket_3_n4
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-3 is a root stage
  Stage-1 depends on stages: Stage-3
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: c
            filterExpr: (key = 5) (type: boolean)
            Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = 5) (type: boolean)
              Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: d
            filterExpr: (key = 5) (type: boolean)
            Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = 5) (type: boolean)
              Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 
            1 
          Statistics: Num rows: 1 Data size: 4281 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a
            filterExpr: (key = 5) (type: boolean)
            Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = 5) (type: boolean)
              Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
          TableScan
            alias: b
            filterExpr: (key = 5) (type: boolean)
            Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = 5) (type: boolean)
              Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
          TableScan
            Reduce Output Operator
              sort order: 
              Statistics: Num rows: 1 Data size: 4281 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Inner Join 0 to 2
          keys:
            0 
            1 
            2 
          Statistics: Num rows: 1 Data size: 8422 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: 5 (type: int), 5 (type: int)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 1 Data size: 8422 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1 Data size: 8422 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Map Join MAPJOIN[28][bigTable=?] in task 'Stage-5:MAPRED' is a cross product
Warning: Map Join MAPJOIN[29][bigTable=?] in task 'Stage-5:MAPRED' is a cross product
PREHOOK: query: explain 
select * from (select a.key from smb_bucket_1_n4 a join smb_bucket_2_n4 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2_n4 c join smb_bucket_3_n4 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n4
PREHOOK: Input: default@smb_bucket_2_n4
PREHOOK: Input: default@smb_bucket_3_n4
#### A masked pattern was here ####
POSTHOOK: query: explain 
select * from (select a.key from smb_bucket_1_n4 a join smb_bucket_2_n4 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2_n4 c join smb_bucket_3_n4 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n4
POSTHOOK: Input: default@smb_bucket_2_n4
POSTHOOK: Input: default@smb_bucket_3_n4
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-7 is a root stage
  Stage-5 depends on stages: Stage-7
  Stage-0 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-7
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_0:a 
          Fetch Operator
            limit: -1
        $hdt$_1:b 
          Fetch Operator
            limit: -1
        $hdt$_2:$hdt$_2:c 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_0:a 
          TableScan
            alias: a
            filterExpr: (key = 5) (type: boolean)
            Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = 5) (type: boolean)
              Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 
                    1 
                    2 
        $hdt$_1:b 
          TableScan
            alias: b
            filterExpr: (key = 5) (type: boolean)
            Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = 5) (type: boolean)
              Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 
                    1 
                    2 
        $hdt$_2:$hdt$_2:c 
          TableScan
            alias: c
            filterExpr: (key = 5) (type: boolean)
            Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = 5) (type: boolean)
              Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                HashTable Sink Operator
                  keys:
                    0 
                    1 

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: d
            filterExpr: (key = 5) (type: boolean)
            Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key = 5) (type: boolean)
              Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 
                    1 
                  Statistics: Num rows: 1 Data size: 4281 Basic stats: COMPLETE Column stats: NONE
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                         Inner Join 0 to 2
                    keys:
                      0 
                      1 
                      2 
                    Statistics: Num rows: 1 Data size: 8422 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: 5 (type: int), 5 (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 8422 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 1 Data size: 8422 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

Warning: Map Join MAPJOIN[28][bigTable=?] in task 'Stage-5:MAPRED' is a cross product
Warning: Map Join MAPJOIN[29][bigTable=?] in task 'Stage-5:MAPRED' is a cross product
PREHOOK: query: select * from (select a.key from smb_bucket_1_n4 a join smb_bucket_2_n4 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2_n4 c join smb_bucket_3_n4 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n4
PREHOOK: Input: default@smb_bucket_2_n4
PREHOOK: Input: default@smb_bucket_3_n4
#### A masked pattern was here ####
POSTHOOK: query: select * from (select a.key from smb_bucket_1_n4 a join smb_bucket_2_n4 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2_n4 c join smb_bucket_3_n4 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n4
POSTHOOK: Input: default@smb_bucket_2_n4
POSTHOOK: Input: default@smb_bucket_3_n4
#### A masked pattern was here ####
