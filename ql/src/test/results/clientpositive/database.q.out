PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
PREHOOK: query: -- CREATE with comment
CREATE DATABASE test_db COMMENT 'Hive test database'
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: -- CREATE with comment
CREATE DATABASE test_db COMMENT 'Hive test database'
POSTHOOK: type: CREATEDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
test_db
PREHOOK: query: -- CREATE INE already exists
CREATE DATABASE IF NOT EXISTS test_db
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: -- CREATE INE already exists
CREATE DATABASE IF NOT EXISTS test_db
POSTHOOK: type: CREATEDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
test_db
PREHOOK: query: -- SHOW DATABASES synonym
SHOW SCHEMAS
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: -- SHOW DATABASES synonym
SHOW SCHEMAS
POSTHOOK: type: SHOWDATABASES
default
test_db
PREHOOK: query: -- DROP
DROP DATABASE test_db
PREHOOK: type: DROPDATABASE
POSTHOOK: query: -- DROP
DROP DATABASE test_db
POSTHOOK: type: DROPDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
PREHOOK: query: -- CREATE INE doesn't exist
CREATE DATABASE IF NOT EXISTS test_db COMMENT 'Hive test database'
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: -- CREATE INE doesn't exist
CREATE DATABASE IF NOT EXISTS test_db COMMENT 'Hive test database'
POSTHOOK: type: CREATEDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
test_db
PREHOOK: query: -- DROP IE exists
DROP DATABASE IF EXISTS test_db
PREHOOK: type: DROPDATABASE
POSTHOOK: query: -- DROP IE exists
DROP DATABASE IF EXISTS test_db
POSTHOOK: type: DROPDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
PREHOOK: query: -- DROP IE doesn't exist
DROP DATABASE IF EXISTS test_db
PREHOOK: type: DROPDATABASE
POSTHOOK: query: -- DROP IE doesn't exist
DROP DATABASE IF EXISTS test_db
POSTHOOK: type: DROPDATABASE
PREHOOK: query: -- SHOW
CREATE DATABASE test_db
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: -- SHOW
CREATE DATABASE test_db
POSTHOOK: type: CREATEDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
test_db
PREHOOK: query: -- SHOW pattern
SHOW DATABASES LIKE 'test*'
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: -- SHOW pattern
SHOW DATABASES LIKE 'test*'
POSTHOOK: type: SHOWDATABASES
test_db
PREHOOK: query: -- SHOW pattern
SHOW DATABASES LIKE '*ef*'
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: -- SHOW pattern
SHOW DATABASES LIKE '*ef*'
POSTHOOK: type: SHOWDATABASES
default
PREHOOK: query: USE test_db
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE test_db
POSTHOOK: type: SWITCHDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
test_db
PREHOOK: query: -- CREATE table in non-default DB
CREATE TABLE test_table (col1 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
POSTHOOK: query: -- CREATE table in non-default DB
CREATE TABLE test_table (col1 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: test_db@test_table
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
test_table
PREHOOK: query: -- DESCRIBE table in non-default DB
DESCRIBE test_table
PREHOOK: type: DESCTABLE
POSTHOOK: query: -- DESCRIBE table in non-default DB
DESCRIBE test_table
POSTHOOK: type: DESCTABLE
# col_name            	data_type           	comment             
	 	 
col1                	string              	None                
PREHOOK: query: -- DESCRIBE EXTENDED in non-default DB
DESCRIBE EXTENDED test_table
PREHOOK: type: DESCTABLE
POSTHOOK: query: -- DESCRIBE EXTENDED in non-default DB
DESCRIBE EXTENDED test_table
POSTHOOK: type: DESCTABLE
# col_name            	data_type           	comment             
	 	 
col1                	string              	None                
	 	 
#### A masked pattern was here ####
PREHOOK: query: -- CREATE LIKE in non-default DB
CREATE TABLE test_table_like LIKE test_table
PREHOOK: type: CREATETABLE
POSTHOOK: query: -- CREATE LIKE in non-default DB
CREATE TABLE test_table_like LIKE test_table
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: test_db@test_table_like
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
test_table
test_table_like
PREHOOK: query: DESCRIBE EXTENDED test_table_like
PREHOOK: type: DESCTABLE
POSTHOOK: query: DESCRIBE EXTENDED test_table_like
POSTHOOK: type: DESCTABLE
# col_name            	data_type           	comment             
	 	 
col1                	string              	None                
	 	 
#### A masked pattern was here ####
PREHOOK: query: -- LOAD and SELECT
LOAD DATA LOCAL INPATH '../data/files/test.dat'
OVERWRITE INTO TABLE test_table
PREHOOK: type: LOAD
PREHOOK: Output: test_db@test_table
POSTHOOK: query: -- LOAD and SELECT
LOAD DATA LOCAL INPATH '../data/files/test.dat'
OVERWRITE INTO TABLE test_table
POSTHOOK: type: LOAD
POSTHOOK: Output: test_db@test_table
PREHOOK: query: SELECT * FROM test_table
PREHOOK: type: QUERY
PREHOOK: Input: test_db@test_table
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM test_table
POSTHOOK: type: QUERY
POSTHOOK: Input: test_db@test_table
#### A masked pattern was here ####
1
2
3
4
5
6
PREHOOK: query: -- DROP and CREATE w/o LOAD
DROP TABLE test_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: test_db@test_table
PREHOOK: Output: test_db@test_table
POSTHOOK: query: -- DROP and CREATE w/o LOAD
DROP TABLE test_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test_db@test_table
POSTHOOK: Output: test_db@test_table
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
test_table_like
PREHOOK: query: CREATE TABLE test_table (col1 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE test_table (col1 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: test_db@test_table
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
test_table
test_table_like
PREHOOK: query: SELECT * FROM test_table
PREHOOK: type: QUERY
PREHOOK: Input: test_db@test_table
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM test_table
POSTHOOK: type: QUERY
POSTHOOK: Input: test_db@test_table
#### A masked pattern was here ####
PREHOOK: query: -- CREATE table that already exists in DEFAULT
USE test_db
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: -- CREATE table that already exists in DEFAULT
USE test_db
POSTHOOK: type: SWITCHDATABASE
PREHOOK: query: CREATE TABLE src (col1 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE src (col1 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: test_db@src
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
src
test_table
test_table_like
PREHOOK: query: SELECT * FROM src LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: test_db@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM src LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: test_db@src
#### A masked pattern was here ####
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
PREHOOK: query: SELECT * FROM src LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM src LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
238	val_238
86	val_86
311	val_311
27	val_27
165	val_165
409	val_409
255	val_255
278	val_278
98	val_98
484	val_484
PREHOOK: query: -- DROP DATABASE
USE test_db
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: -- DROP DATABASE
USE test_db
POSTHOOK: type: SWITCHDATABASE
PREHOOK: query: DROP TABLE src
PREHOOK: type: DROPTABLE
PREHOOK: Input: test_db@src
PREHOOK: Output: test_db@src
POSTHOOK: query: DROP TABLE src
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test_db@src
POSTHOOK: Output: test_db@src
PREHOOK: query: DROP TABLE test_table
PREHOOK: type: DROPTABLE
PREHOOK: Input: test_db@test_table
PREHOOK: Output: test_db@test_table
POSTHOOK: query: DROP TABLE test_table
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test_db@test_table
POSTHOOK: Output: test_db@test_table
PREHOOK: query: DROP TABLE test_table_like
PREHOOK: type: DROPTABLE
PREHOOK: Input: test_db@test_table_like
PREHOOK: Output: test_db@test_table_like
POSTHOOK: query: DROP TABLE test_table_like
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: test_db@test_table_like
POSTHOOK: Output: test_db@test_table_like
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
PREHOOK: query: DROP DATABASE test_db
PREHOOK: type: DROPDATABASE
POSTHOOK: query: DROP DATABASE test_db
POSTHOOK: type: DROPDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
PREHOOK: query: -- DROP EMPTY DATABASE CASCADE
CREATE DATABASE to_drop_db1
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: -- DROP EMPTY DATABASE CASCADE
CREATE DATABASE to_drop_db1
POSTHOOK: type: CREATEDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
to_drop_db1
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
PREHOOK: query: DROP DATABASE to_drop_db1 CASCADE
PREHOOK: type: DROPDATABASE
POSTHOOK: query: DROP DATABASE to_drop_db1 CASCADE
POSTHOOK: type: DROPDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
PREHOOK: query: -- DROP NON-EMPTY DATABASE CASCADE
CREATE DATABASE to_drop_db2
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: -- DROP NON-EMPTY DATABASE CASCADE
CREATE DATABASE to_drop_db2
POSTHOOK: type: CREATEDATABASE
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
default
to_drop_db2
PREHOOK: query: USE to_drop_db2
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE to_drop_db2
POSTHOOK: type: SWITCHDATABASE
PREHOOK: query: CREATE TABLE temp_tbl (c STRING)
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE temp_tbl (c STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: to_drop_db2@temp_tbl
PREHOOK: query: CREATE TABLE temp_tbl2 LIKE temp_tbl
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE temp_tbl2 LIKE temp_tbl
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: to_drop_db2@temp_tbl2
PREHOOK: query: INSERT OVERWRITE TABLE temp_tbl2 SELECT COUNT(*) FROM temp_tbl
PREHOOK: type: QUERY
PREHOOK: Input: to_drop_db2@temp_tbl
PREHOOK: Output: to_drop_db2@temp_tbl2
POSTHOOK: query: INSERT OVERWRITE TABLE temp_tbl2 SELECT COUNT(*) FROM temp_tbl
POSTHOOK: type: QUERY
POSTHOOK: Input: to_drop_db2@temp_tbl
POSTHOOK: Output: to_drop_db2@temp_tbl2
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: DROP DATABASE to_drop_db2 CASCADE
PREHOOK: type: DROPDATABASE
POSTHOOK: query: DROP DATABASE to_drop_db2 CASCADE
POSTHOOK: type: DROPDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
default
PREHOOK: query: -- DROP NON-EMPTY DATABASE CASCADE IF EXISTS
CREATE DATABASE to_drop_db3
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: -- DROP NON-EMPTY DATABASE CASCADE IF EXISTS
CREATE DATABASE to_drop_db3
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
default
to_drop_db3
PREHOOK: query: USE to_drop_db3
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE to_drop_db3
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: CREATE TABLE temp_tbl (c STRING)
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE temp_tbl (c STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: to_drop_db3@temp_tbl
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: DROP DATABASE IF EXISTS to_drop_db3 CASCADE
PREHOOK: type: DROPDATABASE
POSTHOOK: query: DROP DATABASE IF EXISTS to_drop_db3 CASCADE
POSTHOOK: type: DROPDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
default
PREHOOK: query: -- DROP NON-EXISTING DATABASE CASCADE IF EXISTS
DROP DATABASE IF EXISTS non_exists_db3 CASCADE
PREHOOK: type: DROPDATABASE
POSTHOOK: query: -- DROP NON-EXISTING DATABASE CASCADE IF EXISTS
DROP DATABASE IF EXISTS non_exists_db3 CASCADE
POSTHOOK: type: DROPDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
default
PREHOOK: query: -- DROP NON-EXISTING DATABASE RESTRICT IF EXISTS
DROP DATABASE IF EXISTS non_exists_db3 RESTRICT
PREHOOK: type: DROPDATABASE
POSTHOOK: query: -- DROP NON-EXISTING DATABASE RESTRICT IF EXISTS
DROP DATABASE IF EXISTS non_exists_db3 RESTRICT
POSTHOOK: type: DROPDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: -- DROP EMPTY DATABASE RESTRICT
CREATE DATABASE to_drop_db4
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: -- DROP EMPTY DATABASE RESTRICT
CREATE DATABASE to_drop_db4
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
default
to_drop_db4
PREHOOK: query: DROP DATABASE to_drop_db4 RESTRICT
PREHOOK: type: DROPDATABASE
POSTHOOK: query: DROP DATABASE to_drop_db4 RESTRICT
POSTHOOK: type: DROPDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: SHOW DATABASES
PREHOOK: type: SHOWDATABASES
POSTHOOK: query: SHOW DATABASES
POSTHOOK: type: SHOWDATABASES
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
default
PREHOOK: query: --
-- Canonical Name Tests
--

CREATE DATABASE db1
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: --
-- Canonical Name Tests
--

CREATE DATABASE db1
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: CREATE DATABASE db2
PREHOOK: type: CREATEDATABASE
POSTHOOK: query: CREATE DATABASE db2
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: -- CREATE foreign table
CREATE TABLE db1.src(key STRING, value STRING)
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
POSTHOOK: query: -- CREATE foreign table
CREATE TABLE db1.src(key STRING, value STRING)
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: db1@src
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: -- LOAD into foreign table
LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
OVERWRITE INTO TABLE db1.src
PREHOOK: type: LOAD
PREHOOK: Output: db1@src
POSTHOOK: query: -- LOAD into foreign table
LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
OVERWRITE INTO TABLE db1.src
POSTHOOK: type: LOAD
POSTHOOK: Output: db1@src
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: -- SELECT from foreign table
SELECT * FROM db1.src
PREHOOK: type: QUERY
PREHOOK: Input: db1@src
#### A masked pattern was here ####
POSTHOOK: query: -- SELECT from foreign table
SELECT * FROM db1.src
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@src
#### A masked pattern was here ####
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
238	val_238
86	val_86
311	val_311
27	val_27
165	val_165
409	val_409
255	val_255
278	val_278
98	val_98
484	val_484
265	val_265
193	val_193
401	val_401
150	val_150
273	val_273
224	val_224
369	val_369
66	val_66
128	val_128
213	val_213
146	val_146
406	val_406
429	val_429
374	val_374
152	val_152
469	val_469
145	val_145
495	val_495
37	val_37
327	val_327
281	val_281
277	val_277
209	val_209
15	val_15
82	val_82
403	val_403
166	val_166
417	val_417
430	val_430
252	val_252
292	val_292
219	val_219
287	val_287
153	val_153
193	val_193
338	val_338
446	val_446
459	val_459
394	val_394
237	val_237
482	val_482
174	val_174
413	val_413
494	val_494
207	val_207
199	val_199
466	val_466
208	val_208
174	val_174
399	val_399
396	val_396
247	val_247
417	val_417
489	val_489
162	val_162
377	val_377
397	val_397
309	val_309
365	val_365
266	val_266
439	val_439
342	val_342
367	val_367
325	val_325
167	val_167
195	val_195
475	val_475
17	val_17
113	val_113
155	val_155
203	val_203
339	val_339
0	val_0
455	val_455
128	val_128
311	val_311
316	val_316
57	val_57
302	val_302
205	val_205
149	val_149
438	val_438
345	val_345
129	val_129
170	val_170
20	val_20
489	val_489
157	val_157
378	val_378
221	val_221
92	val_92
111	val_111
47	val_47
72	val_72
4	val_4
280	val_280
35	val_35
427	val_427
277	val_277
208	val_208
356	val_356
399	val_399
169	val_169
382	val_382
498	val_498
125	val_125
386	val_386
437	val_437
469	val_469
192	val_192
286	val_286
187	val_187
176	val_176
54	val_54
459	val_459
51	val_51
138	val_138
103	val_103
239	val_239
213	val_213
216	val_216
430	val_430
278	val_278
176	val_176
289	val_289
221	val_221
65	val_65
318	val_318
332	val_332
311	val_311
275	val_275
137	val_137
241	val_241
83	val_83
333	val_333
180	val_180
284	val_284
12	val_12
230	val_230
181	val_181
67	val_67
260	val_260
404	val_404
384	val_384
489	val_489
353	val_353
373	val_373
272	val_272
138	val_138
217	val_217
84	val_84
348	val_348
466	val_466
58	val_58
8	val_8
411	val_411
230	val_230
208	val_208
348	val_348
24	val_24
463	val_463
431	val_431
179	val_179
172	val_172
42	val_42
129	val_129
158	val_158
119	val_119
496	val_496
0	val_0
322	val_322
197	val_197
468	val_468
393	val_393
454	val_454
100	val_100
298	val_298
199	val_199
191	val_191
418	val_418
96	val_96
26	val_26
165	val_165
327	val_327
230	val_230
205	val_205
120	val_120
131	val_131
51	val_51
404	val_404
43	val_43
436	val_436
156	val_156
469	val_469
468	val_468
308	val_308
95	val_95
196	val_196
288	val_288
481	val_481
457	val_457
98	val_98
282	val_282
197	val_197
187	val_187
318	val_318
318	val_318
409	val_409
470	val_470
137	val_137
369	val_369
316	val_316
169	val_169
413	val_413
85	val_85
77	val_77
0	val_0
490	val_490
87	val_87
364	val_364
179	val_179
118	val_118
134	val_134
395	val_395
282	val_282
138	val_138
238	val_238
419	val_419
15	val_15
118	val_118
72	val_72
90	val_90
307	val_307
19	val_19
435	val_435
10	val_10
277	val_277
273	val_273
306	val_306
224	val_224
309	val_309
389	val_389
327	val_327
242	val_242
369	val_369
392	val_392
272	val_272
331	val_331
401	val_401
242	val_242
452	val_452
177	val_177
226	val_226
5	val_5
497	val_497
402	val_402
396	val_396
317	val_317
395	val_395
58	val_58
35	val_35
336	val_336
95	val_95
11	val_11
168	val_168
34	val_34
229	val_229
233	val_233
143	val_143
472	val_472
322	val_322
498	val_498
160	val_160
195	val_195
42	val_42
321	val_321
430	val_430
119	val_119
489	val_489
458	val_458
78	val_78
76	val_76
41	val_41
223	val_223
492	val_492
149	val_149
449	val_449
218	val_218
228	val_228
138	val_138
453	val_453
30	val_30
209	val_209
64	val_64
468	val_468
76	val_76
74	val_74
342	val_342
69	val_69
230	val_230
33	val_33
368	val_368
103	val_103
296	val_296
113	val_113
216	val_216
367	val_367
344	val_344
167	val_167
274	val_274
219	val_219
239	val_239
485	val_485
116	val_116
223	val_223
256	val_256
263	val_263
70	val_70
487	val_487
480	val_480
401	val_401
288	val_288
191	val_191
5	val_5
244	val_244
438	val_438
128	val_128
467	val_467
432	val_432
202	val_202
316	val_316
229	val_229
469	val_469
463	val_463
280	val_280
2	val_2
35	val_35
283	val_283
331	val_331
235	val_235
80	val_80
44	val_44
193	val_193
321	val_321
335	val_335
104	val_104
466	val_466
366	val_366
175	val_175
403	val_403
483	val_483
53	val_53
105	val_105
257	val_257
406	val_406
409	val_409
190	val_190
406	val_406
401	val_401
114	val_114
258	val_258
90	val_90
203	val_203
262	val_262
348	val_348
424	val_424
12	val_12
396	val_396
201	val_201
217	val_217
164	val_164
431	val_431
454	val_454
478	val_478
298	val_298
125	val_125
431	val_431
164	val_164
424	val_424
187	val_187
382	val_382
5	val_5
70	val_70
397	val_397
480	val_480
291	val_291
24	val_24
351	val_351
255	val_255
104	val_104
70	val_70
163	val_163
438	val_438
119	val_119
414	val_414
200	val_200
491	val_491
237	val_237
439	val_439
360	val_360
248	val_248
479	val_479
305	val_305
417	val_417
199	val_199
444	val_444
120	val_120
429	val_429
169	val_169
443	val_443
323	val_323
325	val_325
277	val_277
230	val_230
478	val_478
178	val_178
468	val_468
310	val_310
317	val_317
333	val_333
493	val_493
460	val_460
207	val_207
249	val_249
265	val_265
480	val_480
83	val_83
136	val_136
353	val_353
172	val_172
214	val_214
462	val_462
233	val_233
406	val_406
133	val_133
175	val_175
189	val_189
454	val_454
375	val_375
401	val_401
421	val_421
407	val_407
384	val_384
256	val_256
26	val_26
134	val_134
67	val_67
384	val_384
379	val_379
18	val_18
462	val_462
492	val_492
100	val_100
298	val_298
9	val_9
341	val_341
498	val_498
146	val_146
458	val_458
362	val_362
186	val_186
285	val_285
348	val_348
167	val_167
18	val_18
273	val_273
183	val_183
281	val_281
344	val_344
97	val_97
469	val_469
315	val_315
84	val_84
28	val_28
37	val_37
448	val_448
152	val_152
348	val_348
307	val_307
194	val_194
414	val_414
477	val_477
222	val_222
126	val_126
90	val_90
169	val_169
403	val_403
400	val_400
200	val_200
97	val_97
PREHOOK: query: -- CREATE Partitioned foreign table
CREATE TABLE db1.srcpart(key STRING, value STRING)
PARTITIONED BY (ds STRING, hr STRING)
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
POSTHOOK: query: -- CREATE Partitioned foreign table
CREATE TABLE db1.srcpart(key STRING, value STRING)
PARTITIONED BY (ds STRING, hr STRING)
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: db1@srcpart
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: -- LOAD data into Partitioned foreign table
LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
OVERWRITE INTO TABLE db1.srcpart
PARTITION (ds='2008-04-08', hr='11')
PREHOOK: type: LOAD
PREHOOK: Output: db1@srcpart
POSTHOOK: query: -- LOAD data into Partitioned foreign table
LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
OVERWRITE INTO TABLE db1.srcpart
PARTITION (ds='2008-04-08', hr='11')
POSTHOOK: type: LOAD
POSTHOOK: Output: db1@srcpart
POSTHOOK: Output: db1@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: -- SELECT from Partitioned foreign table
SELECT key, value FROM db1.srcpart
WHERE key < 100 AND ds='2008-04-08' AND hr='11'
PREHOOK: type: QUERY
PREHOOK: Input: db1@srcpart
PREHOOK: Input: db1@srcpart@ds=2008-04-08/hr=11
#### A masked pattern was here ####
POSTHOOK: query: -- SELECT from Partitioned foreign table
SELECT key, value FROM db1.srcpart
WHERE key < 100 AND ds='2008-04-08' AND hr='11'
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@srcpart
POSTHOOK: Input: db1@srcpart@ds=2008-04-08/hr=11
#### A masked pattern was here ####
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
86	val_86
27	val_27
98	val_98
66	val_66
37	val_37
15	val_15
82	val_82
17	val_17
0	val_0
57	val_57
20	val_20
92	val_92
47	val_47
72	val_72
4	val_4
35	val_35
54	val_54
51	val_51
65	val_65
83	val_83
12	val_12
67	val_67
84	val_84
58	val_58
8	val_8
24	val_24
42	val_42
0	val_0
96	val_96
26	val_26
51	val_51
43	val_43
95	val_95
98	val_98
85	val_85
77	val_77
0	val_0
87	val_87
15	val_15
72	val_72
90	val_90
19	val_19
10	val_10
5	val_5
58	val_58
35	val_35
95	val_95
11	val_11
34	val_34
42	val_42
78	val_78
76	val_76
41	val_41
30	val_30
64	val_64
76	val_76
74	val_74
69	val_69
33	val_33
70	val_70
5	val_5
2	val_2
35	val_35
80	val_80
44	val_44
53	val_53
90	val_90
12	val_12
5	val_5
70	val_70
24	val_24
70	val_70
83	val_83
26	val_26
67	val_67
18	val_18
9	val_9
18	val_18
97	val_97
84	val_84
28	val_28
37	val_37
90	val_90
97	val_97
PREHOOK: query: -- SELECT JOINed product of two foreign tables
USE db2
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: -- SELECT JOINed product of two foreign tables
USE db2
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: SELECT a.* FROM db1.src a JOIN default.src1 b
ON (a.key = b.key)
PREHOOK: type: QUERY
PREHOOK: Input: db1@src
PREHOOK: Input: default@src1
#### A masked pattern was here ####
POSTHOOK: query: SELECT a.* FROM db1.src a JOIN default.src1 b
ON (a.key = b.key)
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@src
POSTHOOK: Input: default@src1
#### A masked pattern was here ####
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
128	val_128
128	val_128
128	val_128
146	val_146
146	val_146
150	val_150
213	val_213
213	val_213
224	val_224
224	val_224
238	val_238
238	val_238
255	val_255
255	val_255
273	val_273
273	val_273
273	val_273
278	val_278
278	val_278
311	val_311
311	val_311
311	val_311
369	val_369
369	val_369
369	val_369
401	val_401
401	val_401
401	val_401
401	val_401
401	val_401
406	val_406
406	val_406
406	val_406
406	val_406
66	val_66
98	val_98
98	val_98
PREHOOK: query: -- CREATE TABLE AS SELECT from foreign table
CREATE TABLE conflict_name AS
SELECT value FROM default.src WHERE key = 66
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: default@src
POSTHOOK: query: -- CREATE TABLE AS SELECT from foreign table
CREATE TABLE conflict_name AS
SELECT value FROM default.src WHERE key = 66
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: default@src
POSTHOOK: Output: db2@conflict_name
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: -- CREATE foreign table
CREATE TABLE db1.conflict_name AS
SELECT value FROM db1.src WHERE key = 8
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: db1@src
POSTHOOK: query: -- CREATE foreign table
CREATE TABLE db1.conflict_name AS
SELECT value FROM db1.src WHERE key = 8
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: db1@src
POSTHOOK: Output: db1@conflict_name
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: -- query tables with the same names in different DBs
SELECT * FROM (
  SELECT value FROM db1.conflict_name
UNION ALL
  SELECT value FROM conflict_name
) subq ORDER BY value
PREHOOK: type: QUERY
PREHOOK: Input: db1@conflict_name
PREHOOK: Input: db2@conflict_name
#### A masked pattern was here ####
POSTHOOK: query: -- query tables with the same names in different DBs
SELECT * FROM (
  SELECT value FROM db1.conflict_name
UNION ALL
  SELECT value FROM conflict_name
) subq ORDER BY value
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@conflict_name
POSTHOOK: Input: db2@conflict_name
#### A masked pattern was here ####
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
val_66
val_8
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: SELECT * FROM (
  SELECT value FROM db1.conflict_name
UNION ALL
  SELECT value FROM db2.conflict_name
) subq ORDER BY value
PREHOOK: type: QUERY
PREHOOK: Input: db1@conflict_name
PREHOOK: Input: db2@conflict_name
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM (
  SELECT value FROM db1.conflict_name
UNION ALL
  SELECT value FROM db2.conflict_name
) subq ORDER BY value
POSTHOOK: type: QUERY
POSTHOOK: Input: db1@conflict_name
POSTHOOK: Input: db2@conflict_name
#### A masked pattern was here ####
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
val_66
val_8
PREHOOK: query: -- TABLESAMPLES
CREATE TABLE bucketized_src (key INT, value STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS
PREHOOK: type: CREATETABLE
POSTHOOK: query: -- TABLESAMPLES
CREATE TABLE bucketized_src (key INT, value STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@bucketized_src
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: INSERT OVERWRITE TABLE bucketized_src
SELECT key, value FROM src WHERE key=66
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@bucketized_src
POSTHOOK: query: INSERT OVERWRITE TABLE bucketized_src
SELECT key, value FROM src WHERE key=66
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@bucketized_src
POSTHOOK: Lineage: bucketized_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketized_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: SELECT key FROM bucketized_src TABLESAMPLE(BUCKET 1 out of 1)
PREHOOK: type: QUERY
PREHOOK: Input: default@bucketized_src
#### A masked pattern was here ####
POSTHOOK: query: SELECT key FROM bucketized_src TABLESAMPLE(BUCKET 1 out of 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@bucketized_src
#### A masked pattern was here ####
POSTHOOK: Lineage: bucketized_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketized_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
66
PREHOOK: query: -- CREATE TABLE LIKE
CREATE TABLE db2.src1 LIKE default.src
PREHOOK: type: CREATETABLE
POSTHOOK: query: -- CREATE TABLE LIKE
CREATE TABLE db2.src1 LIKE default.src
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: db2@src1
POSTHOOK: Lineage: bucketized_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketized_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: USE db2
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE db2
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Lineage: bucketized_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketized_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
PREHOOK: query: DESC EXTENDED src1
PREHOOK: type: DESCTABLE
POSTHOOK: query: DESC EXTENDED src1
POSTHOOK: type: DESCTABLE
POSTHOOK: Lineage: bucketized_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketized_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
# col_name            	data_type           	comment             
	 	 
key                 	string              	default             
value               	string              	default             
	 	 
#### A masked pattern was here ####
PREHOOK: query: -- character escaping
SELECT key FROM `default`.src ORDER BY key LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: -- character escaping
SELECT key FROM `default`.src ORDER BY key LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: Lineage: bucketized_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketized_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
0
PREHOOK: query: SELECT key FROM `default`.`src` ORDER BY key LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT key FROM `default`.`src` ORDER BY key LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: Lineage: bucketized_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketized_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
0
PREHOOK: query: SELECT key FROM default.`src` ORDER BY key LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT key FROM default.`src` ORDER BY key LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: Lineage: bucketized_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketized_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
0
PREHOOK: query: USE default
PREHOOK: type: SWITCHDATABASE
POSTHOOK: query: USE default
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Lineage: bucketized_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: bucketized_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
