PREHOOK: query: create table emps (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@emps
POSTHOOK: query: create table emps (
  empid int,
  deptno int,
  name varchar(256),
  salary float,
  commission int)
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@emps
PREHOOK: query: insert into emps values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (110, 10, 'Bill', 10000, 250)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@emps
POSTHOOK: query: insert into emps values (100, 10, 'Bill', 10000, 1000), (200, 20, 'Eric', 8000, 500),
  (150, 10, 'Sebastian', 7000, null), (110, 10, 'Theodore', 10000, 250), (110, 10, 'Bill', 10000, 250)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@emps
POSTHOOK: Lineage: emps.commission SCRIPT []
POSTHOOK: Lineage: emps.deptno SCRIPT []
POSTHOOK: Lineage: emps.empid SCRIPT []
POSTHOOK: Lineage: emps.name SCRIPT []
POSTHOOK: Lineage: emps.salary SCRIPT []
PREHOOK: query: analyze table emps compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Output: default@emps
#### A masked pattern was here ####
POSTHOOK: query: analyze table emps compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Output: default@emps
#### A masked pattern was here ####
PREHOOK: query: create table depts (
  deptno int,
  name varchar(256),
  locationid int)
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@depts
POSTHOOK: query: create table depts (
  deptno int,
  name varchar(256),
  locationid int)
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@depts
PREHOOK: query: insert into depts values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@depts
POSTHOOK: query: insert into depts values (10, 'Sales', 10), (30, 'Marketing', null), (20, 'HR', 20)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@depts
POSTHOOK: Lineage: depts.deptno SCRIPT []
POSTHOOK: Lineage: depts.locationid SCRIPT []
POSTHOOK: Lineage: depts.name SCRIPT []
PREHOOK: query: analyze table depts compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@depts
PREHOOK: Output: default@depts
#### A masked pattern was here ####
POSTHOOK: query: analyze table depts compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts
POSTHOOK: Output: default@depts
#### A masked pattern was here ####
PREHOOK: query: create table dependents (
  empid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dependents
POSTHOOK: query: create table dependents (
  empid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dependents
PREHOOK: query: insert into dependents values (10, 'Michael'), (10, 'Jane')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@dependents
POSTHOOK: query: insert into dependents values (10, 'Michael'), (10, 'Jane')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@dependents
POSTHOOK: Lineage: dependents.empid SCRIPT []
POSTHOOK: Lineage: dependents.name SCRIPT []
PREHOOK: query: analyze table dependents compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@dependents
PREHOOK: Output: default@dependents
#### A masked pattern was here ####
POSTHOOK: query: analyze table dependents compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dependents
POSTHOOK: Output: default@dependents
#### A masked pattern was here ####
PREHOOK: query: create table locations (
  locationid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@locations
POSTHOOK: query: create table locations (
  locationid int,
  name varchar(256))
stored as orc TBLPROPERTIES ('transactional'='true')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@locations
PREHOOK: query: insert into locations values (10, 'San Francisco'), (10, 'San Diego')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@locations
POSTHOOK: query: insert into locations values (10, 'San Francisco'), (10, 'San Diego')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@locations
POSTHOOK: Lineage: locations.locationid SCRIPT []
POSTHOOK: Lineage: locations.name SCRIPT []
PREHOOK: query: analyze table locations compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@locations
PREHOOK: Output: default@locations
#### A masked pattern was here ####
POSTHOOK: query: analyze table locations compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@locations
POSTHOOK: Output: default@locations
#### A masked pattern was here ####
PREHOOK: query: alter table emps add constraint pk1 primary key (empid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table emps add constraint pk1 primary key (empid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table depts add constraint pk2 primary key (deptno) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table depts add constraint pk2 primary key (deptno) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table dependents add constraint pk3 primary key (empid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table dependents add constraint pk3 primary key (empid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table locations add constraint pk4 primary key (locationid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table locations add constraint pk4 primary key (locationid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table emps add constraint fk1 foreign key (deptno) references depts(deptno) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table emps add constraint fk1 foreign key (deptno) references depts(deptno) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: alter table depts add constraint fk2 foreign key (locationid) references locations(locationid) disable novalidate rely
PREHOOK: type: ALTERTABLE_ADDCONSTRAINT
POSTHOOK: query: alter table depts add constraint fk2 foreign key (locationid) references locations(locationid) disable novalidate rely
POSTHOOK: type: ALTERTABLE_ADDCONSTRAINT
PREHOOK: query: create materialized view mv1 enable rewrite as
select * from emps where empid < 150
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select * from emps where empid < 150
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select *
from (select * from emps where empid < 120) t
join depts using (deptno)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select *
from (select * from emps where empid < 120) t
join depts using (deptno)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: default.mv1
            Statistics: Num rows: 3 Data size: 315 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: ((empid < 120) and deptno is not null) (type: boolean)
              Statistics: Num rows: 3 Data size: 315 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: empid (type: int), deptno (type: int), name (type: varchar(256)), salary (type: float), commission (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 3 Data size: 315 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col1 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col1 (type: int)
                  Statistics: Num rows: 3 Data size: 315 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: int), _col2 (type: varchar(256)), _col3 (type: float), _col4 (type: int)
          TableScan
            alias: depts
            Statistics: Num rows: 3 Data size: 291 Basic stats: COMPLETE Column stats: COMPLETE
            Select Operator
              expressions: deptno (type: int), name (type: varchar(256)), locationid (type: int)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 3 Data size: 291 Basic stats: COMPLETE Column stats: COMPLETE
              Reduce Output Operator
                key expressions: _col0 (type: int)
                sort order: +
                Map-reduce partition columns: _col0 (type: int)
                Statistics: Num rows: 3 Data size: 291 Basic stats: COMPLETE Column stats: COMPLETE
                value expressions: _col1 (type: varchar(256)), _col2 (type: int)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col1 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6, _col7
          Statistics: Num rows: 3 Data size: 594 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col5 (type: int), _col0 (type: int), _col2 (type: varchar(256)), _col3 (type: float), _col4 (type: int), _col6 (type: varchar(256)), _col7 (type: int)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
            Statistics: Num rows: 3 Data size: 594 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              Statistics: Num rows: 3 Data size: 594 Basic stats: COMPLETE Column stats: COMPLETE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select *
from (select * from emps where empid < 120) t
join depts using (deptno)
PREHOOK: type: QUERY
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select *
from (select * from emps where empid < 120) t
join depts using (deptno)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
10	100	Bill	10000.0	1000	Sales	10
10	110	Bill	10000.0	250	Sales	10
10	110	Theodore	10000.0	250	Sales	10
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 enable rewrite as
select deptno, name, salary, commission
from emps
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select deptno, name, salary, commission
from emps
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select emps.name, emps.salary, emps.commission
from emps
join depts using (deptno)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select emps.name, emps.salary, emps.commission
from emps
join depts using (deptno)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: default.mv1
            Statistics: Num rows: 5 Data size: 510 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: deptno is not null (type: boolean)
              Statistics: Num rows: 5 Data size: 510 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: deptno (type: int), name (type: varchar(256)), salary (type: float), commission (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 5 Data size: 510 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 5 Data size: 510 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col1 (type: varchar(256)), _col2 (type: float), _col3 (type: int)
          TableScan
            alias: depts
            Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
            Select Operator
              expressions: deptno (type: int)
              outputColumnNames: _col0
              Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
              Reduce Output Operator
                key expressions: _col0 (type: int)
                sort order: +
                Map-reduce partition columns: _col0 (type: int)
                Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: COMPLETE
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col0 (type: int)
            1 _col0 (type: int)
          outputColumnNames: _col1, _col2, _col3
          Statistics: Num rows: 5 Data size: 490 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: _col1 (type: varchar(256)), _col2 (type: float), _col3 (type: int)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 5 Data size: 490 Basic stats: COMPLETE Column stats: COMPLETE
            File Output Operator
              compressed: false
              Statistics: Num rows: 5 Data size: 490 Basic stats: COMPLETE Column stats: COMPLETE
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select emps.name, emps.salary, emps.commission
from emps
join depts using (deptno)
PREHOOK: type: QUERY
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select emps.name, emps.salary, emps.commission
from emps
join depts using (deptno)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
Bill	10000.0	1000
Bill	10000.0	250
Eric	8000.0	500
Sebastian	7000.0	NULL
Theodore	10000.0	250
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 enable rewrite as
select empid deptno from emps
join depts using (deptno)
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select empid deptno from emps
join depts using (deptno)
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select empid deptno from emps
join depts using (deptno) where empid = 1
PREHOOK: type: QUERY
POSTHOOK: query: explain
select empid deptno from emps
join depts using (deptno) where empid = 1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: default.mv1
            Statistics: Num rows: 5 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (deptno = 1) (type: boolean)
              Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: 1 (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select empid deptno from emps
join depts using (deptno) where empid = 1
PREHOOK: type: QUERY
PREHOOK: Input: default@depts
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select empid deptno from emps
join depts using (deptno) where empid = 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@depts
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 enable rewrite as
select * from emps where empid < 200
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select * from emps where empid < 200
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select * from emps where empid > 120
union all select * from emps where empid < 150
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from emps where empid > 120
union all select * from emps where empid < 150
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: emps
            Statistics: Num rows: 5 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (empid > 120) (type: boolean)
              Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: empid (type: int), deptno (type: int), name (type: varchar(256)), salary (type: float), commission (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
                Union
                  Statistics: Num rows: 2 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          TableScan
            alias: default.mv1
            Statistics: Num rows: 4 Data size: 424 Basic stats: COMPLETE Column stats: COMPLETE
            Filter Operator
              predicate: (empid < 150) (type: boolean)
              Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
              Select Operator
                expressions: empid (type: int), deptno (type: int), name (type: varchar(256)), salary (type: float), commission (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 106 Basic stats: COMPLETE Column stats: COMPLETE
                Union
                  Statistics: Num rows: 2 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 212 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from emps where empid > 120
union all select * from emps where empid < 150
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select * from emps where empid > 120
union all select * from emps where empid < 150
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
100	10	Bill	10000.0	1000
110	10	Bill	10000.0	250
110	10	Theodore	10000.0	250
150	10	Sebastian	7000.0	NULL
200	20	Eric	8000.0	500
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 enable rewrite as
select empid, deptno from emps group by empid, deptno
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select empid, deptno from emps group by empid, deptno
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select empid, deptno from emps group by empid, deptno
PREHOOK: type: QUERY
POSTHOOK: query: explain
select empid, deptno from emps group by empid, deptno
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: emps
          Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: empid (type: int), deptno (type: int)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 5 Data size: 40 Basic stats: COMPLETE Column stats: COMPLETE
            ListSink

PREHOOK: query: select empid, deptno from emps group by empid, deptno
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
#### A masked pattern was here ####
POSTHOOK: query: select empid, deptno from emps group by empid, deptno
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
#### A masked pattern was here ####
100	10
110	10
110	10
150	10
200	20
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 enable rewrite as
select empid, name from emps group by empid, name
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select empid, name from emps group by empid, name
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select empid, name from emps group by empid, name
PREHOOK: type: QUERY
POSTHOOK: query: explain
select empid, name from emps group by empid, name
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: emps
          Statistics: Num rows: 5 Data size: 470 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: empid (type: int), name (type: varchar(256))
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 5 Data size: 470 Basic stats: COMPLETE Column stats: COMPLETE
            ListSink

PREHOOK: query: select empid, name from emps group by empid, name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
#### A masked pattern was here ####
POSTHOOK: query: select empid, name from emps group by empid, name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
#### A masked pattern was here ####
100	Bill
110	Bill
110	Theodore
150	Sebastian
200	Eric
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 enable rewrite as
select name, salary from emps group by name, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select name, salary from emps group by name, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select name, salary from emps group by name, salary
PREHOOK: type: QUERY
POSTHOOK: query: explain
select name, salary from emps group by name, salary
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: default.mv1
          Statistics: Num rows: 4 Data size: 376 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: name (type: varchar(256)), salary (type: float)
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 4 Data size: 376 Basic stats: COMPLETE Column stats: COMPLETE
            ListSink

PREHOOK: query: select name, salary from emps group by name, salary
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select name, salary from emps group by name, salary
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
Bill	10000.0
Eric	8000.0
Sebastian	7000.0
Theodore	10000.0
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 enable rewrite as
select name, salary from emps group by name, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select name, salary from emps group by name, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select name from emps group by name
PREHOOK: type: QUERY
POSTHOOK: query: explain
select name from emps group by name
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: default.mv1
            Statistics: Num rows: 4 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
            Select Operator
              expressions: name (type: varchar(256))
              outputColumnNames: name
              Statistics: Num rows: 4 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
              Group By Operator
                keys: name (type: varchar(256))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: varchar(256))
                  sort order: +
                  Map-reduce partition columns: _col0 (type: varchar(256))
                  Statistics: Num rows: 2 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: varchar(256))
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 2 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            Statistics: Num rows: 2 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select name from emps group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select name from emps group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
Bill
Eric
Sebastian
Theodore
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 enable rewrite as
select name, salary from emps where deptno = 10 group by name, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select name, salary from emps where deptno = 10 group by name, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select name from emps where deptno = 10 group by name
PREHOOK: type: QUERY
POSTHOOK: query: explain
select name from emps where deptno = 10 group by name
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: default.mv1
            Statistics: Num rows: 3 Data size: 273 Basic stats: COMPLETE Column stats: COMPLETE
            Select Operator
              expressions: name (type: varchar(256))
              outputColumnNames: name
              Statistics: Num rows: 3 Data size: 273 Basic stats: COMPLETE Column stats: COMPLETE
              Group By Operator
                keys: name (type: varchar(256))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 91 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: varchar(256))
                  sort order: +
                  Map-reduce partition columns: _col0 (type: varchar(256))
                  Statistics: Num rows: 1 Data size: 91 Basic stats: COMPLETE Column stats: COMPLETE
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: varchar(256))
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 1 Data size: 91 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 91 Basic stats: COMPLETE Column stats: COMPLETE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select name from emps where deptno = 10 group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select name from emps where deptno = 10 group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
Bill
Sebastian
Theodore
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
PREHOOK: query: create materialized view mv1 enable rewrite as
select name, salary, count(*) as c, sum(empid) as s
from emps group by name, salary
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@emps
PREHOOK: Output: database:default
PREHOOK: Output: default@mv1
POSTHOOK: query: create materialized view mv1 enable rewrite as
select name, salary, count(*) as c, sum(empid) as s
from emps group by name, salary
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@emps
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv1
PREHOOK: query: analyze table mv1 compute statistics for columns
PREHOOK: type: QUERY
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: analyze table mv1 compute statistics for columns
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
#### A masked pattern was here ####
PREHOOK: query: explain
select name from emps group by name
PREHOOK: type: QUERY
POSTHOOK: query: explain
select name from emps group by name
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: default.mv1
            Statistics: Num rows: 4 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
            Select Operator
              expressions: name (type: varchar(256))
              outputColumnNames: name
              Statistics: Num rows: 4 Data size: 360 Basic stats: COMPLETE Column stats: COMPLETE
              Group By Operator
                keys: name (type: varchar(256))
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 2 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: _col0 (type: varchar(256))
                  sort order: +
                  Map-reduce partition columns: _col0 (type: varchar(256))
                  Statistics: Num rows: 2 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: varchar(256))
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 2 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
          File Output Operator
            compressed: false
            Statistics: Num rows: 2 Data size: 180 Basic stats: COMPLETE Column stats: COMPLETE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select name from emps group by name
PREHOOK: type: QUERY
PREHOOK: Input: default@emps
PREHOOK: Input: default@mv1
#### A masked pattern was here ####
POSTHOOK: query: select name from emps group by name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@emps
POSTHOOK: Input: default@mv1
#### A masked pattern was here ####
Bill
Eric
Sebastian
Theodore
PREHOOK: query: drop materialized view mv1
PREHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: Input: default@mv1
PREHOOK: Output: default@mv1
POSTHOOK: query: drop materialized view mv1
POSTHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: Input: default@mv1
POSTHOOK: Output: default@mv1
