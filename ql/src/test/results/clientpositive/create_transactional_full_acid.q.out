PREHOOK: query: drop table if exists target
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists target
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists source
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists source
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists transactional_table_test
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists transactional_table_test
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TRANSACTIONAL TABLE transactional_table_test(key string, value string) PARTITIONED BY(ds string) CLUSTERED BY(key) INTO 2 BUCKETS STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@transactional_table_test
POSTHOOK: query: CREATE TRANSACTIONAL TABLE transactional_table_test(key string, value string) PARTITIONED BY(ds string) CLUSTERED BY(key) INTO 2 BUCKETS STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@transactional_table_test
PREHOOK: query: desc formatted transactional_table_test
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@transactional_table_test
POSTHOOK: query: desc formatted transactional_table_test
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@transactional_table_test
# col_name            	data_type           	comment             
key                 	string              	                    
value               	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
ds                  	string              	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\"}
	bucketing_version   	2                   
	numFiles            	0                   
	numPartitions       	0                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	0                   
	transactional       	true                
	transactional_properties	default             
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	2                   	 
Bucket Columns:     	[key]               	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: insert into table transactional_table_test partition(ds)  select key,value,ds from srcpart
PREHOOK: type: QUERY
PREHOOK: Input: default@srcpart
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
PREHOOK: Output: default@transactional_table_test
POSTHOOK: query: insert into table transactional_table_test partition(ds)  select key,value,ds from srcpart
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcpart
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
POSTHOOK: Output: default@transactional_table_test@ds=2008-04-08
POSTHOOK: Output: default@transactional_table_test@ds=2008-04-09
POSTHOOK: Lineage: transactional_table_test PARTITION(ds=2008-04-08).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: transactional_table_test PARTITION(ds=2008-04-08).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: transactional_table_test PARTITION(ds=2008-04-09).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: transactional_table_test PARTITION(ds=2008-04-09).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: create transactional table target (a int, b int) partitioned by (p int, q int) clustered by (a) into 2  buckets stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@target
POSTHOOK: query: create transactional table target (a int, b int) partitioned by (p int, q int) clustered by (a) into 2  buckets stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@target
PREHOOK: query: create transactional table source (a1 int, b1 int, p1 int, q1 int) clustered by (a1) into 2  buckets stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@source
POSTHOOK: query: create transactional table source (a1 int, b1 int, p1 int, q1 int) clustered by (a1) into 2  buckets stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@source
PREHOOK: query: insert into target partition(p,q) values (1,2,1,2), (3,4,1,2), (5,6,1,3), (7,8,2,2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@target
POSTHOOK: query: insert into target partition(p,q) values (1,2,1,2), (3,4,1,2), (5,6,1,3), (7,8,2,2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@target@p=1/q=2
POSTHOOK: Output: default@target@p=1/q=3
POSTHOOK: Output: default@target@p=2/q=2
POSTHOOK: Lineage: target PARTITION(p=1,q=2).a SCRIPT []
POSTHOOK: Lineage: target PARTITION(p=1,q=2).b SCRIPT []
POSTHOOK: Lineage: target PARTITION(p=1,q=3).a SCRIPT []
POSTHOOK: Lineage: target PARTITION(p=1,q=3).b SCRIPT []
POSTHOOK: Lineage: target PARTITION(p=2,q=2).a SCRIPT []
POSTHOOK: Lineage: target PARTITION(p=2,q=2).b SCRIPT []
PREHOOK: query: update target set b = 1 where p in (select t.q1 from source t where t.a1=5)
PREHOOK: type: QUERY
PREHOOK: Input: default@source
PREHOOK: Input: default@target
PREHOOK: Input: default@target@p=1/q=2
PREHOOK: Input: default@target@p=1/q=3
PREHOOK: Input: default@target@p=2/q=2
PREHOOK: Output: default@target@p=1/q=2
PREHOOK: Output: default@target@p=1/q=3
PREHOOK: Output: default@target@p=2/q=2
POSTHOOK: query: update target set b = 1 where p in (select t.q1 from source t where t.a1=5)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
POSTHOOK: Input: default@target
POSTHOOK: Input: default@target@p=1/q=2
POSTHOOK: Input: default@target@p=1/q=3
POSTHOOK: Input: default@target@p=2/q=2
POSTHOOK: Output: default@target@p=1/q=2
POSTHOOK: Output: default@target@p=1/q=3
POSTHOOK: Output: default@target@p=2/q=2
PREHOOK: query: update source set b1 = 1 where p1 in (select t.q from target t where t.p=2)
PREHOOK: type: QUERY
PREHOOK: Input: default@source
PREHOOK: Input: default@target
PREHOOK: Input: default@target@p=2/q=2
PREHOOK: Output: default@source
POSTHOOK: query: update source set b1 = 1 where p1 in (select t.q from target t where t.p=2)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
POSTHOOK: Input: default@target
POSTHOOK: Input: default@target@p=2/q=2
POSTHOOK: Output: default@source
PREHOOK: query: delete from target where p in (select t.q1 from source t where t.a1 = 5)
PREHOOK: type: QUERY
PREHOOK: Input: default@source
PREHOOK: Input: default@target
PREHOOK: Input: default@target@p=1/q=2
PREHOOK: Input: default@target@p=1/q=3
PREHOOK: Input: default@target@p=2/q=2
PREHOOK: Output: default@target@p=1/q=2
PREHOOK: Output: default@target@p=1/q=3
PREHOOK: Output: default@target@p=2/q=2
POSTHOOK: query: delete from target where p in (select t.q1 from source t where t.a1 = 5)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
POSTHOOK: Input: default@target
POSTHOOK: Input: default@target@p=1/q=2
POSTHOOK: Input: default@target@p=1/q=3
POSTHOOK: Input: default@target@p=2/q=2
POSTHOOK: Output: default@target@p=1/q=2
POSTHOOK: Output: default@target@p=1/q=3
POSTHOOK: Output: default@target@p=2/q=2
PREHOOK: query: merge into target t using source s on t.a = s.a1 when matched and p = 1 and q = 2 then update set b = 1 when matched and p = 2 and q = 2 then delete when not matched and a1 > 100 then insert values(s.a1,s.b1,s.p1, s.q1)
PREHOOK: type: QUERY
PREHOOK: Input: default@source
PREHOOK: Input: default@target
PREHOOK: Input: default@target@p=1/q=2
PREHOOK: Input: default@target@p=1/q=3
PREHOOK: Input: default@target@p=2/q=2
PREHOOK: Output: default@merge_tmp_table
PREHOOK: Output: default@target
PREHOOK: Output: default@target@p=1/q=2
PREHOOK: Output: default@target@p=1/q=2
PREHOOK: Output: default@target@p=1/q=3
PREHOOK: Output: default@target@p=1/q=3
PREHOOK: Output: default@target@p=2/q=2
PREHOOK: Output: default@target@p=2/q=2
POSTHOOK: query: merge into target t using source s on t.a = s.a1 when matched and p = 1 and q = 2 then update set b = 1 when matched and p = 2 and q = 2 then delete when not matched and a1 > 100 then insert values(s.a1,s.b1,s.p1, s.q1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@source
POSTHOOK: Input: default@target
POSTHOOK: Input: default@target@p=1/q=2
POSTHOOK: Input: default@target@p=1/q=3
POSTHOOK: Input: default@target@p=2/q=2
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Output: default@target@p=1/q=2
POSTHOOK: Output: default@target@p=1/q=2
POSTHOOK: Output: default@target@p=1/q=3
POSTHOOK: Output: default@target@p=1/q=3
POSTHOOK: Output: default@target@p=2/q=2
POSTHOOK: Output: default@target@p=2/q=2
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(target)t.FieldSchema(name:ROW__ID, type:struct<writeId:bigint,bucketId:int,rowId:bigint>, comment:), (target)t.FieldSchema(name:p, type:int, comment:null), (target)t.FieldSchema(name:q, type:int, comment:null), ]
