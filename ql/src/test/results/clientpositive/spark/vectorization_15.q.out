PREHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT   cfloat,
         cboolean1,
         cdouble,
         cstring1,
         ctinyint,
         cint,
         ctimestamp1,
         STDDEV_SAMP(cfloat),
         (-26.28 - cint),
         MIN(cdouble),
         (cdouble * 79.553),
         (33 % cfloat),
         STDDEV_SAMP(ctinyint),
         VAR_POP(ctinyint),
         (-23 % cdouble),
         (-(ctinyint)),
         VAR_SAMP(cint),
         (cint - cfloat),
         (-23 % ctinyint),
         (-((-26.28 - cint))),
         STDDEV_POP(cint)
FROM     alltypesorc
WHERE    (((cstring2 LIKE '%ss%')
           OR (cstring1 LIKE '10%'))
          OR ((cint >= -75)
              AND ((ctinyint = csmallint)
                   AND (cdouble >= -3728))))
GROUP BY cfloat, cboolean1, cdouble, cstring1, ctinyint, cint, ctimestamp1
ORDER BY cfloat, cboolean1, cdouble, cstring1, ctinyint, cint, ctimestamp1
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN VECTORIZATION DETAIL
SELECT   cfloat,
         cboolean1,
         cdouble,
         cstring1,
         ctinyint,
         cint,
         ctimestamp1,
         STDDEV_SAMP(cfloat),
         (-26.28 - cint),
         MIN(cdouble),
         (cdouble * 79.553),
         (33 % cfloat),
         STDDEV_SAMP(ctinyint),
         VAR_POP(ctinyint),
         (-23 % cdouble),
         (-(ctinyint)),
         VAR_SAMP(cint),
         (cint - cfloat),
         (-23 % ctinyint),
         (-((-26.28 - cint))),
         STDDEV_POP(cint)
FROM     alltypesorc
WHERE    (((cstring2 LIKE '%ss%')
           OR (cstring1 LIKE '10%'))
          OR ((cint >= -75)
              AND ((ctinyint = csmallint)
                   AND (cdouble >= -3728))))
GROUP BY cfloat, cboolean1, cdouble, cstring1, ctinyint, cint, ctimestamp1
ORDER BY cfloat, cboolean1, cdouble, cstring1, ctinyint, cint, ctimestamp1
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 2)
        Reducer 3 <- Reducer 2 (SORT, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  Statistics: Num rows: 12288 Data size: 2907994 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                      vectorizationSchemaColumns: [0:ctinyint:tinyint, 1:csmallint:smallint, 2:cint:int, 3:cbigint:bigint, 4:cfloat:float, 5:cdouble:double, 6:cstring1:string, 7:cstring2:string, 8:ctimestamp1:timestamp, 9:ctimestamp2:timestamp, 10:cboolean1:boolean, 11:cboolean2:boolean, 12:ROW__ID:struct<writeid:bigint,bucketid:int,rowid:bigint>]
                  Filter Operator
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: FilterExprOrExpr(children: FilterStringColLikeStringScalar(col 7:string, pattern %ss%), FilterStringColLikeStringScalar(col 6:string, pattern 10%), FilterExprAndExpr(children: FilterLongColGreaterEqualLongScalar(col 2:int, val -75), FilterLongColEqualLongColumn(col 0:smallint, col 1:smallint)(children: col 0:tinyint), FilterDoubleColGreaterEqualDoubleScalar(col 5:double, val -3728.0)))
                    predicate: (((cint >= -75) and (UDFToShort(ctinyint) = csmallint) and (cdouble >= -3728.0D)) or (cstring1 like '10%') or (cstring2 like '%ss%')) (type: boolean)
                    Statistics: Num rows: 12288 Data size: 2907994 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: cfloat (type: float), cboolean1 (type: boolean), cdouble (type: double), cstring1 (type: string), ctinyint (type: tinyint), cint (type: int), ctimestamp1 (type: timestamp), UDFToDouble(cfloat) (type: double), (UDFToDouble(cfloat) * UDFToDouble(cfloat)) (type: double), UDFToDouble(ctinyint) (type: double), (UDFToDouble(ctinyint) * UDFToDouble(ctinyint)) (type: double), UDFToDouble(cint) (type: double), (UDFToDouble(cint) * UDFToDouble(cint)) (type: double)
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [4, 10, 5, 6, 0, 2, 8, 4, 13, 14, 17, 15, 19]
                          selectExpressions: DoubleColMultiplyDoubleColumn(col 4:double, col 4:double)(children: col 4:float, col 4:float) -> 13:double, CastLongToDouble(col 0:tinyint) -> 14:double, DoubleColMultiplyDoubleColumn(col 15:double, col 16:double)(children: CastLongToDouble(col 0:tinyint) -> 15:double, CastLongToDouble(col 0:tinyint) -> 16:double) -> 17:double, CastLongToDouble(col 2:int) -> 15:double, DoubleColMultiplyDoubleColumn(col 16:double, col 18:double)(children: CastLongToDouble(col 2:int) -> 16:double, CastLongToDouble(col 2:int) -> 18:double) -> 19:double
                      Statistics: Num rows: 12288 Data size: 2907994 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: sum(_col8), sum(_col7), count(_col0), min(_col2), sum(_col10), sum(_col9), count(_col4), sum(_col12), sum(_col11), count(_col5)
                        Group By Vectorization:
                            aggregators: VectorUDAFSumDouble(col 13:double) -> double, VectorUDAFSumDouble(col 4:double) -> double, VectorUDAFCount(col 4:float) -> bigint, VectorUDAFMinDouble(col 5:double) -> double, VectorUDAFSumDouble(col 17:double) -> double, VectorUDAFSumDouble(col 14:double) -> double, VectorUDAFCount(col 0:tinyint) -> bigint, VectorUDAFSumDouble(col 19:double) -> double, VectorUDAFSumDouble(col 15:double) -> double, VectorUDAFCount(col 2:int) -> bigint
                            className: VectorGroupByOperator
                            groupByMode: HASH
                            keyExpressions: col 4:float, col 10:boolean, col 5:double, col 6:string, col 0:tinyint, col 2:int, col 8:timestamp
                            native: false
                            vectorProcessingMode: HASH
                            projectedOutputColumnNums: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
                        keys: _col0 (type: float), _col1 (type: boolean), _col2 (type: double), _col3 (type: string), _col4 (type: tinyint), _col5 (type: int), _col6 (type: timestamp)
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                        Statistics: Num rows: 12288 Data size: 2907994 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: float), _col1 (type: boolean), _col2 (type: double), _col3 (type: string), _col4 (type: tinyint), _col5 (type: int), _col6 (type: timestamp)
                          sort order: +++++++
                          Map-reduce partition columns: _col0 (type: float), _col1 (type: boolean), _col2 (type: double), _col3 (type: string), _col4 (type: tinyint), _col5 (type: int), _col6 (type: timestamp)
                          Reduce Sink Vectorization:
                              className: VectorReduceSinkMultiKeyOperator
                              keyColumnNums: [0, 1, 2, 3, 4, 5, 6]
                              native: true
                              nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine spark IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                              valueColumnNums: [7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                          Statistics: Num rows: 12288 Data size: 2907994 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col7 (type: double), _col8 (type: double), _col9 (type: bigint), _col10 (type: double), _col11 (type: double), _col12 (type: double), _col13 (type: bigint), _col14 (type: double), _col15 (type: double), _col16 (type: bigint)
            Execution mode: vectorized
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
                rowBatchContext:
                    dataColumnCount: 12
                    includeColumns: [0, 1, 2, 4, 5, 6, 7, 8, 10]
                    dataColumns: ctinyint:tinyint, csmallint:smallint, cint:int, cbigint:bigint, cfloat:float, cdouble:double, cstring1:string, cstring2:string, ctimestamp1:timestamp, ctimestamp2:timestamp, cboolean1:boolean, cboolean2:boolean
                    partitionColumnCount: 0
                    scratchColumnTypeNames: [double, double, double, double, double, double, double]
        Reducer 2 
            Reduce Vectorization:
                enabled: false
                enableConditionsMet: hive.execution.engine spark IN [tez, spark] IS true
                enableConditionsNotMet: hive.vectorized.execution.reduce.enabled IS false
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0), sum(VALUE._col1), count(VALUE._col2), min(VALUE._col3), sum(VALUE._col4), sum(VALUE._col5), count(VALUE._col6), sum(VALUE._col7), sum(VALUE._col8), count(VALUE._col9)
                keys: KEY._col0 (type: float), KEY._col1 (type: boolean), KEY._col2 (type: double), KEY._col3 (type: string), KEY._col4 (type: tinyint), KEY._col5 (type: int), KEY._col6 (type: timestamp)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16
                Statistics: Num rows: 6144 Data size: 1453997 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: float), _col1 (type: boolean), _col2 (type: double), _col3 (type: string), _col4 (type: tinyint), _col5 (type: int), _col6 (type: timestamp), power(((_col7 - ((_col8 * _col8) / _col9)) / CASE WHEN ((_col9 = 1L)) THEN (null) ELSE ((_col9 - 1)) END), 0.5) (type: double), (-26.28 - CAST( _col5 AS decimal(10,0))) (type: decimal(13,2)), _col10 (type: double), (_col2 * 79.553D) (type: double), (33.0 % _col0) (type: float), power(((_col11 - ((_col12 * _col12) / _col13)) / CASE WHEN ((_col13 = 1L)) THEN (null) ELSE ((_col13 - 1)) END), 0.5) (type: double), ((_col11 - ((_col12 * _col12) / _col13)) / _col13) (type: double), (-23.0D % _col2) (type: double), (- _col4) (type: tinyint), ((_col14 - ((_col15 * _col15) / _col16)) / CASE WHEN ((_col16 = 1L)) THEN (null) ELSE ((_col16 - 1)) END) (type: double), (UDFToFloat(_col5) - _col0) (type: float), (-23 % UDFToInteger(_col4)) (type: int), (- (-26.28 - CAST( _col5 AS decimal(10,0)))) (type: decimal(13,2)), power(((_col14 - ((_col15 * _col15) / _col16)) / _col16), 0.5) (type: double)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20
                  Statistics: Num rows: 6144 Data size: 1453997 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: float), _col1 (type: boolean), _col2 (type: double), _col3 (type: string), _col4 (type: tinyint), _col5 (type: int), _col6 (type: timestamp)
                    sort order: +++++++
                    Statistics: Num rows: 6144 Data size: 1453997 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col7 (type: double), _col8 (type: decimal(13,2)), _col9 (type: double), _col10 (type: double), _col11 (type: float), _col12 (type: double), _col13 (type: double), _col14 (type: double), _col15 (type: tinyint), _col16 (type: double), _col17 (type: float), _col18 (type: int), _col19 (type: decimal(13,2)), _col20 (type: double)
        Reducer 3 
            Reduce Vectorization:
                enabled: false
                enableConditionsMet: hive.execution.engine spark IN [tez, spark] IS true
                enableConditionsNotMet: hive.vectorized.execution.reduce.enabled IS false
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: float), KEY.reducesinkkey1 (type: boolean), KEY.reducesinkkey2 (type: double), KEY.reducesinkkey3 (type: string), KEY.reducesinkkey4 (type: tinyint), KEY.reducesinkkey5 (type: int), KEY.reducesinkkey6 (type: timestamp), VALUE._col0 (type: double), VALUE._col1 (type: decimal(13,2)), VALUE._col2 (type: double), VALUE._col3 (type: double), VALUE._col4 (type: float), VALUE._col5 (type: double), VALUE._col6 (type: double), VALUE._col7 (type: double), VALUE._col8 (type: tinyint), VALUE._col9 (type: double), VALUE._col10 (type: float), VALUE._col11 (type: int), VALUE._col12 (type: decimal(13,2)), VALUE._col13 (type: double)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20
                Statistics: Num rows: 6144 Data size: 1453997 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 6144 Data size: 1453997 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT   cfloat,
         cboolean1,
         cdouble,
         cstring1,
         ctinyint,
         cint,
         ctimestamp1,
         STDDEV_SAMP(cfloat),
         (-26.28 - cint),
         MIN(cdouble),
         (cdouble * 79.553),
         (33 % cfloat),
         STDDEV_SAMP(ctinyint),
         VAR_POP(ctinyint),
         (-23 % cdouble),
         (-(ctinyint)),
         VAR_SAMP(cint),
         (cint - cfloat),
         (-23 % ctinyint),
         (-((-26.28 - cint))),
         STDDEV_POP(cint)
FROM     alltypesorc
WHERE    (((cstring2 LIKE '%ss%')
           OR (cstring1 LIKE '10%'))
          OR ((cint >= -75)
              AND ((ctinyint = csmallint)
                   AND (cdouble >= -3728))))
GROUP BY cfloat, cboolean1, cdouble, cstring1, ctinyint, cint, ctimestamp1
ORDER BY cfloat, cboolean1, cdouble, cstring1, ctinyint, cint, ctimestamp1
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT   cfloat,
         cboolean1,
         cdouble,
         cstring1,
         ctinyint,
         cint,
         ctimestamp1,
         STDDEV_SAMP(cfloat),
         (-26.28 - cint),
         MIN(cdouble),
         (cdouble * 79.553),
         (33 % cfloat),
         STDDEV_SAMP(ctinyint),
         VAR_POP(ctinyint),
         (-23 % cdouble),
         (-(ctinyint)),
         VAR_SAMP(cint),
         (cint - cfloat),
         (-23 % ctinyint),
         (-((-26.28 - cint))),
         STDDEV_POP(cint)
FROM     alltypesorc
WHERE    (((cstring2 LIKE '%ss%')
           OR (cstring1 LIKE '10%'))
          OR ((cint >= -75)
              AND ((ctinyint = csmallint)
                   AND (cdouble >= -3728))))
GROUP BY cfloat, cboolean1, cdouble, cstring1, ctinyint, cint, ctimestamp1
ORDER BY cfloat, cboolean1, cdouble, cstring1, ctinyint, cint, ctimestamp1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
-48.0	NULL	-7196.0	NULL	-48	NULL	1969-12-31 16:00:06.337	NULL	NULL	-7196.0	-572463.388	33.0	NULL	0.0	-23.0	48	NULL	NULL	-23	NULL	NULL
-51.0	NULL	-200.0	NULL	-51	NULL	1969-12-31 15:59:55.423	NULL	NULL	-200.0	-15910.599999999999	33.0	NULL	0.0	-23.0	51	NULL	NULL	-23	NULL	NULL
-51.0	false	NULL	10	-51	1058319346	1969-12-31 16:00:08.451	NULL	-1058319372.28	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	1.05831942E9	-23	1058319372.28	0.0
-51.0	false	NULL	10TYIE5S35U6dj3N	-51	-469581869	1969-12-31 16:00:08.451	NULL	469581842.72	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	-4.69581792E8	-23	-469581842.72	0.0
-51.0	false	NULL	1Lh6Uoq3WhNtOqQHu7WN7U	-51	-352637533	1969-12-31 16:00:08.451	NULL	352637506.72	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	-3.52637472E8	-23	-352637506.72	0.0
-51.0	true	NULL	04Y1mA17	-51	-114647521	1969-12-31 16:00:08.451	NULL	114647494.72	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	-1.14647472E8	-23	-114647494.72	0.0
-51.0	true	NULL	10Wu570aLPO0p02P17FeH	-51	405338893	1969-12-31 16:00:08.451	NULL	-405338919.28	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	4.05338944E8	-23	405338919.28	0.0
-51.0	true	NULL	3cQp060	-51	-226923315	1969-12-31 16:00:08.451	NULL	226923288.72	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	-2.26923264E8	-23	-226923288.72	0.0
-51.0	true	NULL	8EPG0Xi307qd	-51	-328662044	1969-12-31 16:00:08.451	NULL	328662017.72	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	-3.28661984E8	-23	-328662017.72	0.0
-51.0	true	NULL	8iHtdkJ6d	-51	1006818344	1969-12-31 16:00:08.451	NULL	-1006818370.28	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	1.00681843E9	-23	1006818370.28	0.0
-51.0	true	NULL	QiOcvR0kt6r7f0R7fiPxQTCU	-51	266531954	1969-12-31 16:00:08.451	NULL	-266531980.28	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	2.66532E8	-23	266531980.28	0.0
-51.0	true	NULL	Ybpj38RTTYl7CnJXPNx1g4C	-51	-370919370	1969-12-31 16:00:08.451	NULL	370919343.72	NULL	NULL	33.0	NULL	0.0	NULL	51	NULL	-3.70919296E8	-23	-370919343.72	0.0
-6.0	NULL	-200.0	NULL	-6	NULL	1969-12-31 15:59:56.094	NULL	NULL	-200.0	-15910.599999999999	3.0	NULL	0.0	-23.0	6	NULL	NULL	-5	NULL	NULL
-62.0	NULL	15601.0	NULL	-62	NULL	1969-12-31 16:00:09.889	NULL	NULL	15601.0	1241106.353	33.0	NULL	0.0	-23.0	62	NULL	NULL	-23	NULL	NULL
11.0	false	NULL	10pO8p1LNx4Y	11	271296824	1969-12-31 16:00:02.351	NULL	-271296850.28	NULL	NULL	0.0	NULL	0.0	NULL	-11	NULL	2.71296832E8	-1	271296850.28	0.0
11.0	false	NULL	1H6wGP	11	-560827082	1969-12-31 16:00:02.351	NULL	560827055.72	NULL	NULL	0.0	NULL	0.0	NULL	-11	NULL	-5.6082707E8	-1	-560827055.72	0.0
11.0	false	NULL	2a7V63IL7jK3o	11	-325931647	1969-12-31 16:00:02.351	NULL	325931620.72	NULL	NULL	0.0	NULL	0.0	NULL	-11	NULL	-3.25931648E8	-1	-325931620.72	0.0
11.0	true	NULL	10	11	92365813	1969-12-31 16:00:02.351	NULL	-92365839.28	NULL	NULL	0.0	NULL	0.0	NULL	-11	NULL	9.2365808E7	-1	92365839.28	0.0
21.0	NULL	15601.0	NULL	21	NULL	1969-12-31 16:00:14.256	NULL	NULL	15601.0	1241106.353	12.0	NULL	0.0	-23.0	-21	NULL	NULL	-2	NULL	NULL
32.0	NULL	-200.0	NULL	32	NULL	1969-12-31 16:00:02.445	NULL	NULL	-200.0	-15910.599999999999	1.0	NULL	0.0	-23.0	-32	NULL	NULL	-23	NULL	NULL
36.0	NULL	-200.0	NULL	36	NULL	1969-12-31 16:00:00.554	NULL	NULL	-200.0	-15910.599999999999	33.0	NULL	0.0	-23.0	-36	NULL	NULL	-23	NULL	NULL
5.0	NULL	15601.0	NULL	5	NULL	1969-12-31 16:00:00.959	NULL	NULL	15601.0	1241106.353	3.0	NULL	0.0	-23.0	-5	NULL	NULL	-3	NULL	NULL
58.0	NULL	15601.0	NULL	58	NULL	1969-12-31 15:59:56.527	NULL	NULL	15601.0	1241106.353	33.0	NULL	0.0	-23.0	-58	NULL	NULL	-23	NULL	NULL
8.0	false	NULL	10V3pN5r5lI2qWl2lG103	8	-362835731	1969-12-31 16:00:15.892	NULL	362835704.72	NULL	NULL	1.0	NULL	0.0	NULL	-8	NULL	-3.62835744E8	-7	-362835704.72	0.0
8.0	false	NULL	10c4qt584m5y6uWT	8	-183000142	1969-12-31 16:00:15.892	NULL	183000115.72	NULL	NULL	1.0	NULL	0.0	NULL	-8	NULL	-1.8300016E8	-7	-183000115.72	0.0
8.0	false	NULL	8GloEukQ0c68JDmnYL53	8	-722873402	1969-12-31 16:00:15.892	NULL	722873375.72	NULL	NULL	1.0	NULL	0.0	NULL	-8	NULL	-7.2287341E8	-7	-722873375.72	0.0
8.0	false	NULL	kA0XH5C5	8	-503903864	1969-12-31 16:00:15.892	NULL	503903837.72	NULL	NULL	1.0	NULL	0.0	NULL	-8	NULL	-5.03903872E8	-7	-503903837.72	0.0
8.0	true	NULL	100VTM7PEW8GH1uE	8	88129338	1969-12-31 16:00:15.892	NULL	-88129364.28	NULL	NULL	1.0	NULL	0.0	NULL	-8	NULL	8.8129328E7	-7	88129364.28	0.0
8.0	true	NULL	1062158y	8	-1005155523	1969-12-31 16:00:15.892	NULL	1005155496.72	NULL	NULL	1.0	NULL	0.0	NULL	-8	NULL	-1.00515552E9	-7	-1005155496.72	0.0
8.0	true	NULL	1063cEnGjSal	8	-624769630	1969-12-31 16:00:15.892	NULL	624769603.72	NULL	NULL	1.0	NULL	0.0	NULL	-8	NULL	-6.247696E8	-7	-624769603.72	0.0
8.0	true	NULL	4kMasVoB7lX1wc5i64bNk	8	683567667	1969-12-31 16:00:15.892	NULL	-683567693.28	NULL	NULL	1.0	NULL	0.0	NULL	-8	NULL	6.8356768E8	-7	683567693.28	0.0
8.0	true	NULL	XH6I7A417	8	436627202	1969-12-31 16:00:15.892	NULL	-436627228.28	NULL	NULL	1.0	NULL	0.0	NULL	-8	NULL	4.366272E8	-7	436627228.28	0.0
NULL	false	-13008.0	10	NULL	-896629175	NULL	NULL	896629148.72	-13008.0	-1034825.424	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	-896629148.72	0.0
NULL	false	-7707.0	10vke853	NULL	424959354	NULL	NULL	-424959380.28	-7707.0	-613114.971	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	424959380.28	0.0
NULL	false	14771.0	10	NULL	993788576	NULL	NULL	-993788602.28	14771.0	1175077.363	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	993788602.28	0.0
NULL	false	2459.0	10	NULL	-394064473	NULL	NULL	394064446.72	2459.0	195620.827	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	-394064446.72	0.0
NULL	true	-14640.0	101n6n461o	NULL	-819657767	NULL	NULL	819657740.72	-14640.0	-1164655.92	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	-819657740.72	0.0
NULL	true	-14674.0	105aFDAt30c4rI4U	NULL	-831072496	NULL	NULL	831072469.72	-14674.0	-1167360.722	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	-831072469.72	0.0
NULL	true	-7238.0	10ljXCFT6fG6Qi3S7414e	NULL	-256767096	NULL	NULL	256767069.72	-7238.0	-575804.614	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	-256767069.72	0.0
NULL	true	-9489.0	10Yr6	NULL	500274721	NULL	NULL	-500274747.28	-9489.0	-754878.417	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	500274747.28	0.0
NULL	true	10419.0	10	NULL	-721614386	NULL	NULL	721614359.72	10419.0	828862.7069999999	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	-721614359.72	0.0
NULL	true	14519.0	100xJdkyc	NULL	729277608	NULL	NULL	-729277634.28	14519.0	1155030.007	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	729277634.28	0.0
NULL	true	2261.0	10Hr5oB07Ohu0622u	NULL	612000160	NULL	NULL	-612000186.28	2261.0	179869.33299999998	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	612000186.28	0.0
NULL	true	4516.0	10lL0XD6WP2x64f70N0fHmC1	NULL	-974538365	NULL	NULL	974538338.72	4516.0	359261.348	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	-974538338.72	0.0
NULL	true	4767.0	10dUdwyXp5XwgpkTxLffmv3x	NULL	187503456	NULL	NULL	-187503482.28	4767.0	379229.151	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	187503482.28	0.0
NULL	true	5658.0	10M3eGUsKVonbl70DyoCk25	NULL	486382507	NULL	NULL	-486382533.28	5658.0	450110.874	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	486382533.28	0.0
NULL	true	8659.0	1047piRsT3c3r134I	NULL	487236176	NULL	NULL	-487236202.28	8659.0	688849.427	NULL	NULL	NULL	-23.0	NULL	NULL	NULL	NULL	487236202.28	0.0
