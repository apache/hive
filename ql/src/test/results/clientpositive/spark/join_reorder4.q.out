PREHOOK: query: CREATE TABLE T1_n134(key1 STRING, val1 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n134
POSTHOOK: query: CREATE TABLE T1_n134(key1 STRING, val1 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n134
PREHOOK: query: CREATE TABLE T2_n80(key2 STRING, val2 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T2_n80
POSTHOOK: query: CREATE TABLE T2_n80(key2 STRING, val2 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2_n80
PREHOOK: query: CREATE TABLE T3_n32(key3 STRING, val3 STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T3_n32
POSTHOOK: query: CREATE TABLE T3_n32(key3 STRING, val3 STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T3_n32
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE T1_n134
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_n134
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE T1_n134
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_n134
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE T2_n80
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t2_n80
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE T2_n80
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t2_n80
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T3.txt' INTO TABLE T3_n32
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t3_n32
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T3.txt' INTO TABLE T3_n32
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t3_n32
PREHOOK: query: explain select /*+ STREAMTABLE(a) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
PREHOOK: type: QUERY
POSTHOOK: query: explain select /*+ STREAMTABLE(a) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key1 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key1 (type: string)
                      sort order: +
                      Map-reduce partition columns: key1 (type: string)
                      Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                      value expressions: val1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key2 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key2 (type: string)
                      sort order: +
                      Map-reduce partition columns: key2 (type: string)
                      Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                      value expressions: val2 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key3 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key3 (type: string)
                      sort order: +
                      Map-reduce partition columns: key3 (type: string)
                      Statistics: Num rows: 1 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                      value expressions: val3 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                keys:
                  0 key1 (type: string)
                  1 key2 (type: string)
                  2 key3 (type: string)
                outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
                Statistics: Num rows: 2 Data size: 660 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col5 (type: string), _col6 (type: string), _col10 (type: string), _col11 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 2 Data size: 660 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 660 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+ STREAMTABLE(a) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n134
PREHOOK: Input: default@t2_n80
PREHOOK: Input: default@t3_n32
#### A masked pattern was here ####
POSTHOOK: query: select /*+ STREAMTABLE(a) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n134
POSTHOOK: Input: default@t2_n80
POSTHOOK: Input: default@t3_n32
#### A masked pattern was here ####
2	12	2	22	2	12
PREHOOK: query: explain select /*+ STREAMTABLE(b) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
PREHOOK: type: QUERY
POSTHOOK: query: explain select /*+ STREAMTABLE(b) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key1 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key1 (type: string)
                      sort order: +
                      Map-reduce partition columns: key1 (type: string)
                      Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                      value expressions: val1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key2 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key2 (type: string)
                      sort order: +
                      Map-reduce partition columns: key2 (type: string)
                      Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                      value expressions: val2 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key3 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key3 (type: string)
                      sort order: +
                      Map-reduce partition columns: key3 (type: string)
                      Statistics: Num rows: 1 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                      value expressions: val3 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                keys:
                  0 key1 (type: string)
                  1 key2 (type: string)
                  2 key3 (type: string)
                outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
                Statistics: Num rows: 2 Data size: 660 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col5 (type: string), _col6 (type: string), _col10 (type: string), _col11 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 2 Data size: 660 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 660 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+ STREAMTABLE(b) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n134
PREHOOK: Input: default@t2_n80
PREHOOK: Input: default@t3_n32
#### A masked pattern was here ####
POSTHOOK: query: select /*+ STREAMTABLE(b) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n134
POSTHOOK: Input: default@t2_n80
POSTHOOK: Input: default@t3_n32
#### A masked pattern was here ####
2	12	2	22	2	12
PREHOOK: query: explain select /*+ STREAMTABLE(c) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
PREHOOK: type: QUERY
POSTHOOK: query: explain select /*+ STREAMTABLE(c) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key1 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key1 (type: string)
                      sort order: +
                      Map-reduce partition columns: key1 (type: string)
                      Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                      value expressions: val1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key2 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key2 (type: string)
                      sort order: +
                      Map-reduce partition columns: key2 (type: string)
                      Statistics: Num rows: 1 Data size: 300 Basic stats: COMPLETE Column stats: NONE
                      value expressions: val2 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key3 is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key3 (type: string)
                      sort order: +
                      Map-reduce partition columns: key3 (type: string)
                      Statistics: Num rows: 1 Data size: 200 Basic stats: COMPLETE Column stats: NONE
                      value expressions: val3 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                keys:
                  0 key1 (type: string)
                  1 key2 (type: string)
                  2 key3 (type: string)
                outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
                Statistics: Num rows: 2 Data size: 660 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col5 (type: string), _col6 (type: string), _col10 (type: string), _col11 (type: string)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                  Statistics: Num rows: 2 Data size: 660 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 660 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+ STREAMTABLE(c) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n134
PREHOOK: Input: default@t2_n80
PREHOOK: Input: default@t3_n32
#### A masked pattern was here ####
POSTHOOK: query: select /*+ STREAMTABLE(c) */ a.*, b.*, c.* from T1_n134 a join T2_n80 b on a.key1=b.key2 join T3_n32 c on a.key1=c.key3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n134
POSTHOOK: Input: default@t2_n80
POSTHOOK: Input: default@t3_n32
#### A masked pattern was here ####
2	12	2	22	2	12
