PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part_1_n4 (key INT, value STRING) PARTITIONED BY (ds STRING, hr STRING) 
CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_part_1_n4
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part_1_n4 (key INT, value STRING) PARTITIONED BY (ds STRING, hr STRING) 
CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part_1_n4
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_1_n4 PARTITION (ds='2008-04-08', hr='0')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_1_n4
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_1_n4 PARTITION (ds='2008-04-08', hr='0')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_1_n4
POSTHOOK: Output: default@srcbucket_mapjoin_part_1_n4@ds=2008-04-08/hr=0
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_1_n4 PARTITION (ds='2008-04-08', hr='0')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_1_n4@ds=2008-04-08/hr=0
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_1_n4 PARTITION (ds='2008-04-08', hr='0')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_1_n4@ds=2008-04-08/hr=0
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part_2_n9 (key INT, value STRING) PARTITIONED BY (ds STRING, hr STRING) 
CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n9
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part_2_n9 (key INT, value STRING) PARTITIONED BY (ds STRING, hr STRING) 
CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n9
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_2_n9 PARTITION (ds='2008-04-08', hr='0')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n9
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bmj/000000_0' INTO TABLE srcbucket_mapjoin_part_2_n9 PARTITION (ds='2008-04-08', hr='0')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n9
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n9@ds=2008-04-08/hr=0
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_2_n9 PARTITION (ds='2008-04-08', hr='0')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part_2_n9@ds=2008-04-08/hr=0
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bmj/000001_0' INTO TABLE srcbucket_mapjoin_part_2_n9 PARTITION (ds='2008-04-08', hr='0')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part_2_n9@ds=2008-04-08/hr=0
PREHOOK: query: EXPLAIN EXTENDED
SELECT /*+ MAPJOIN(b) */ a.key, b.value
FROM srcbucket_mapjoin_part_1_n4 a JOIN srcbucket_mapjoin_part_2_n9 b
ON a.key = b.key AND a.ds = '2008-04-08' AND b.ds = '2008-04-08'
ORDER BY a.key, b.value LIMIT 1
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
SELECT /*+ MAPJOIN(b) */ a.key, b.value
FROM srcbucket_mapjoin_part_1_n4 a JOIN srcbucket_mapjoin_part_2_n9 b
ON a.key = b.key AND a.ds = '2008-04-08' AND b.ds = '2008-04-08'
ORDER BY a.key, b.value LIMIT 1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-1 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 69 Data size: 27500 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 69 Data size: 27500 Basic stats: COMPLETE Column stats: NONE
                    Spark HashTable Sink Operator
                      keys:
                        0 key (type: int)
                        1 key (type: int)
                      Position of Big Table: 0
            Local Work:
              Map Reduce Local Work
                Bucket Mapjoin Context:
                    Alias Bucket File Name Mapping:
                      b {hdfs://### HDFS PATH ###[hdfs://### HDFS PATH ###], hdfs://### HDFS PATH ###[hdfs://### HDFS PATH ###]}
                    Alias Bucket Output File Name Mapping:
                      hdfs://### HDFS PATH ### 0
                      hdfs://### HDFS PATH ### 1
            Path -> Alias:
              hdfs://### HDFS PATH ### [b]
            Path -> Partition:
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: hr=0
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                    hr 0
                  properties:
                    bucket_count 2
                    bucket_field_name key
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.srcbucket_mapjoin_part_2_n9
                    numFiles 2
                    numRows 0
                    partition_columns ds/hr
                    partition_columns.types string:string
                    rawDataSize 0
                    serialization.ddl struct srcbucket_mapjoin_part_2_n9 { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 2750
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.srcbucket_mapjoin_part_2_n9
                      partition_columns ds/hr
                      partition_columns.types string:string
                      serialization.ddl struct srcbucket_mapjoin_part_2_n9 { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin_part_2_n9
                  name: default.srcbucket_mapjoin_part_2_n9
            Truncated Path -> Alias:
              /srcbucket_mapjoin_part_2_n9/ds=2008-04-08/hr=0 [b]

  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (SORT, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 69 Data size: 27500 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 69 Data size: 27500 Basic stats: COMPLETE Column stats: NONE
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      keys:
                        0 key (type: int)
                        1 key (type: int)
                      outputColumnNames: _col0, _col8
                      input vertices:
                        1 Map 3
                      Position of Big Table: 0
                      Statistics: Num rows: 75 Data size: 30250 Basic stats: COMPLETE Column stats: NONE
                      BucketMapJoin: true
                      Select Operator
                        expressions: _col0 (type: int), _col8 (type: string)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 75 Data size: 30250 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: int), _col1 (type: string)
                          null sort order: aa
                          sort order: ++
                          Statistics: Num rows: 75 Data size: 30250 Basic stats: COMPLETE Column stats: NONE
                          tag: -1
                          TopN: 1
                          TopN Hash Memory Usage: 0.1
                          auto parallelism: false
            Local Work:
              Map Reduce Local Work
                Bucket Mapjoin Context:
                    Alias Bucket File Name Mapping:
                      b {hdfs://### HDFS PATH ###[hdfs://### HDFS PATH ###], hdfs://### HDFS PATH ###[hdfs://### HDFS PATH ###]}
                    Alias Bucket Output File Name Mapping:
                      hdfs://### HDFS PATH ### 0
                      hdfs://### HDFS PATH ### 1
            Path -> Alias:
              hdfs://### HDFS PATH ### [a]
            Path -> Partition:
              hdfs://### HDFS PATH ### 
                Partition
                  base file name: hr=0
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                    hr 0
                  properties:
                    bucket_count 2
                    bucket_field_name key
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    location hdfs://### HDFS PATH ###
                    name default.srcbucket_mapjoin_part_1_n4
                    numFiles 2
                    numRows 0
                    partition_columns ds/hr
                    partition_columns.types string:string
                    rawDataSize 0
                    serialization.ddl struct srcbucket_mapjoin_part_1_n4 { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 2750
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      location hdfs://### HDFS PATH ###
                      name default.srcbucket_mapjoin_part_1_n4
                      partition_columns ds/hr
                      partition_columns.types string:string
                      serialization.ddl struct srcbucket_mapjoin_part_1_n4 { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin_part_1_n4
                  name: default.srcbucket_mapjoin_part_1_n4
            Truncated Path -> Alias:
              /srcbucket_mapjoin_part_1_n4/ds=2008-04-08/hr=0 [a]
        Reducer 2 
            Needs Tagging: false
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 75 Data size: 30250 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 1
                  Statistics: Num rows: 1 Data size: 403 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 0
                    directory: hdfs://### HDFS PATH ###
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 403 Basic stats: COMPLETE Column stats: NONE
                    Stats Publishing Key Prefix: hdfs://### HDFS PATH ###
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        properties:
                          columns _col0,_col1
                          columns.types int:string
                          escape.delim \
                          hive.serialization.extend.additional.nesting.levels true
                          serialization.escape.crlf true
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    TotalFiles: 1
                    GatherStats: false
                    MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT /*+ MAPJOIN(b) */ a.key, b.value
FROM srcbucket_mapjoin_part_1_n4 a JOIN srcbucket_mapjoin_part_2_n9 b
ON a.key = b.key AND a.ds = '2008-04-08' AND b.ds = '2008-04-08'
ORDER BY a.key, b.value LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin_part_1_n4
PREHOOK: Input: default@srcbucket_mapjoin_part_1_n4@ds=2008-04-08/hr=0
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n9
PREHOOK: Input: default@srcbucket_mapjoin_part_2_n9@ds=2008-04-08/hr=0
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ a.key, b.value
FROM srcbucket_mapjoin_part_1_n4 a JOIN srcbucket_mapjoin_part_2_n9 b
ON a.key = b.key AND a.ds = '2008-04-08' AND b.ds = '2008-04-08'
ORDER BY a.key, b.value LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin_part_1_n4
POSTHOOK: Input: default@srcbucket_mapjoin_part_1_n4@ds=2008-04-08/hr=0
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n9
POSTHOOK: Input: default@srcbucket_mapjoin_part_2_n9@ds=2008-04-08/hr=0
POSTHOOK: Output: hdfs://### HDFS PATH ###
0	val_0
