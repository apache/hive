PREHOOK: query: CREATE TABLE dest_g2(key STRING, c1 INT) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest_g2
POSTHOOK: query: CREATE TABLE dest_g2(key STRING, c1 INT) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest_g2
PREHOOK: query: CREATE TABLE dest_g3(key STRING, c1 INT, c2 INT) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest_g3
POSTHOOK: query: CREATE TABLE dest_g3(key STRING, c1 INT, c2 INT) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest_g3
PREHOOK: query: EXPLAIN
FROM src
INSERT OVERWRITE TABLE dest_g2 SELECT substr(src.key,1,1), count(DISTINCT src.key) WHERE substr(src.key,1,1) >= 5 GROUP BY substr(src.key,1,1)
INSERT OVERWRITE TABLE dest_g3 SELECT substr(src.key,1,1), count(DISTINCT src.key), count(src.value) WHERE substr(src.key,1,1) < 5 GROUP BY substr(src.key,1,1)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
FROM src
INSERT OVERWRITE TABLE dest_g2 SELECT substr(src.key,1,1), count(DISTINCT src.key) WHERE substr(src.key,1,1) >= 5 GROUP BY substr(src.key,1,1)
INSERT OVERWRITE TABLE dest_g3 SELECT substr(src.key,1,1), count(DISTINCT src.key), count(src.value) WHERE substr(src.key,1,1) < 5 GROUP BY substr(src.key,1,1)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((substr(key, 1, 1) < 5) or (substr(key, 1, 1) >= 5)) (type: boolean)
                    Statistics: Num rows: 332 Data size: 3527 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: substr(key, 1, 1) (type: string), key (type: string)
                      sort order: ++
                      Map-reduce partition columns: substr(key, 1, 1) (type: string)
                      Statistics: Num rows: 332 Data size: 3527 Basic stats: COMPLETE Column stats: NONE
                      value expressions: value (type: string)
        Reducer 2 
            Reduce Operator Tree:
              Forward
                Statistics: Num rows: 332 Data size: 3527 Basic stats: COMPLETE Column stats: NONE
                Filter Operator
                  predicate: (KEY._col0 >= 5) (type: boolean)
                  Statistics: Num rows: 110 Data size: 1168 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: count(DISTINCT KEY._col1:0._col0)
                    keys: KEY._col0 (type: string)
                    mode: complete
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 55 Data size: 584 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col0 (type: string), UDFToInteger(_col1) (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 55 Data size: 584 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 55 Data size: 584 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            name: default.dest_g2
                Filter Operator
                  predicate: (KEY._col0 < 5) (type: boolean)
                  Statistics: Num rows: 110 Data size: 1168 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: count(DISTINCT KEY._col1:0._col0), count(VALUE._col0)
                    keys: KEY._col0 (type: string)
                    mode: complete
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 55 Data size: 584 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col0 (type: string), UDFToInteger(_col1) (type: int), UDFToInteger(_col2) (type: int)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 55 Data size: 584 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 55 Data size: 584 Basic stats: COMPLETE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            name: default.dest_g3

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_g2

  Stage: Stage-3
    Stats-Aggr Operator

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest_g3

  Stage: Stage-4
    Stats-Aggr Operator

PREHOOK: query: FROM src
INSERT OVERWRITE TABLE dest_g2 SELECT substr(src.key,1,1), count(DISTINCT src.key) WHERE substr(src.key,1,1) >= 5 GROUP BY substr(src.key,1,1)
INSERT OVERWRITE TABLE dest_g3 SELECT substr(src.key,1,1), count(DISTINCT src.key), count(src.value) WHERE substr(src.key,1,1) < 5 GROUP BY substr(src.key,1,1)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@dest_g2
PREHOOK: Output: default@dest_g3
POSTHOOK: query: FROM src
INSERT OVERWRITE TABLE dest_g2 SELECT substr(src.key,1,1), count(DISTINCT src.key) WHERE substr(src.key,1,1) >= 5 GROUP BY substr(src.key,1,1)
INSERT OVERWRITE TABLE dest_g3 SELECT substr(src.key,1,1), count(DISTINCT src.key), count(src.value) WHERE substr(src.key,1,1) < 5 GROUP BY substr(src.key,1,1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@dest_g2
POSTHOOK: Output: default@dest_g3
POSTHOOK: Lineage: dest_g2.c1 EXPRESSION [(src)src.null, ]
POSTHOOK: Lineage: dest_g2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: dest_g3.c1 EXPRESSION [(src)src.null, ]
POSTHOOK: Lineage: dest_g3.c2 EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: dest_g3.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: SELECT * FROM dest_g2
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_g2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM dest_g2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_g2
#### A masked pattern was here ####
5	6
6	5
7	6
8	8
9	7
PREHOOK: query: SELECT * FROM dest_g3
PREHOOK: type: QUERY
PREHOOK: Input: default@dest_g3
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM dest_g3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest_g3
#### A masked pattern was here ####
0	1	3
1	71	115
2	69	111
3	62	99
4	74	124
PREHOOK: query: DROP TABLE dest_g2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@dest_g2
PREHOOK: Output: default@dest_g2
POSTHOOK: query: DROP TABLE dest_g2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@dest_g2
POSTHOOK: Output: default@dest_g2
PREHOOK: query: DROP TABLE dest_g3
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@dest_g3
PREHOOK: Output: default@dest_g3
POSTHOOK: query: DROP TABLE dest_g3
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@dest_g3
POSTHOOK: Output: default@dest_g3
