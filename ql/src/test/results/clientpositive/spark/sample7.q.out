PREHOOK: query: CREATE TABLE dest1(key INT, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1
POSTHOOK: query: CREATE TABLE dest1(key INT, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest1 SELECT s.* 
FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 4 on key) s
WHERE s.key > 100
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest1 SELECT s.* 
FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 4 on key) s
WHERE s.key > 100
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 1000 Data size: 10603 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: ((((hash(key) & 2147483647) % 4) = 0) and (key > 100)) (type: boolean)
                    Statistics: Num rows: 166 Data size: 1760 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 166 Data size: 1760 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        GlobalTableId: 1
#### A masked pattern was here ####
                        NumFilesPerFileSink: 1
                        Statistics: Num rows: 166 Data size: 1760 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            properties:
                              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                              bucket_count -1
                              column.name.delimiter ,
                              columns key,value
                              columns.comments 
                              columns.types int:string
#### A masked pattern was here ####
                              name default.dest1
                              numFiles 0
                              numRows 0
                              rawDataSize 0
                              serialization.ddl struct dest1 { i32 key, string value}
                              serialization.format 1
                              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              totalSize 0
#### A masked pattern was here ####
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            name: default.dest1
                        TotalFiles: 1
                        GatherStats: true
                        MultiFileSpray: false
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: 000000_0
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                    bucket_count 2
                    bucket_field_name key
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket
                    numFiles 2
                    numRows 1000
                    rawDataSize 10603
                    serialization.ddl struct srcbucket { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 11603
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                      bucket_count 2
                      bucket_field_name key
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket
                      numFiles 2
                      numRows 1000
                      rawDataSize 10603
                      serialization.ddl struct srcbucket { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 11603
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket
                  name: default.srcbucket
            Truncated Path -> Alias:
              /srcbucket/000000_0 [s]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                bucket_count -1
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.dest1
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct dest1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1

  Stage: Stage-2
    Stats-Aggr Operator
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.* 
FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 4 on key) s
WHERE s.key > 100
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket
PREHOOK: Output: default@dest1
POSTHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.* 
FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 4 on key) s
WHERE s.key > 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket
POSTHOOK: Output: default@dest1
POSTHOOK: Lineage: dest1.key SIMPLE [(srcbucket)s.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: dest1.value SIMPLE [(srcbucket)s.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT dest1.* FROM dest1
order by key, value
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1.* FROM dest1
order by key, value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1
#### A masked pattern was here ####
104	val_104
104	val_104
104	val_105
104	val_105
104	val_105
116	val_116
116	val_117
120	val_120
120	val_120
120	val_121
128	val_128
128	val_128
128	val_128
128	val_129
128	val_129
132	val_133
132	val_133
136	val_136
136	val_137
140	val_141
144	val_145
152	val_152
152	val_152
152	val_153
152	val_153
152	val_153
156	val_156
156	val_157
156	val_157
160	val_160
160	val_161
164	val_164
164	val_164
164	val_165
164	val_165
168	val_168
168	val_169
172	val_172
172	val_172
172	val_173
176	val_176
176	val_176
180	val_180
184	val_185
192	val_192
192	val_193
196	val_196
196	val_197
196	val_197
196	val_197
200	val_200
200	val_200
204	val_205
208	val_208
208	val_208
208	val_208
212	val_213
216	val_216
216	val_216
216	val_217
224	val_224
224	val_224
224	val_225
228	val_228
228	val_229
240	val_241
244	val_244
244	val_245
244	val_245
244	val_245
248	val_248
248	val_249
252	val_252
252	val_253
256	val_256
256	val_256
256	val_257
260	val_260
260	val_261
260	val_261
264	val_265
264	val_265
268	val_269
272	val_272
272	val_272
272	val_273
276	val_277
280	val_280
280	val_280
284	val_284
284	val_285
284	val_285
288	val_288
288	val_288
292	val_292
292	val_293
292	val_293
296	val_296
296	val_297
300	val_301
300	val_301
304	val_305
308	val_308
308	val_309
308	val_309
316	val_316
316	val_316
316	val_316
324	val_325
328	val_329
328	val_329
332	val_332
336	val_336
336	val_337
340	val_341
344	val_344
344	val_344
344	val_345
348	val_348
348	val_348
348	val_348
348	val_348
348	val_348
348	val_349
352	val_353
352	val_353
356	val_356
356	val_357
356	val_357
360	val_360
360	val_361
364	val_364
364	val_365
368	val_368
376	val_377
384	val_384
384	val_384
384	val_384
384	val_385
384	val_385
384	val_385
388	val_389
392	val_392
392	val_393
392	val_393
396	val_396
396	val_396
396	val_396
400	val_400
404	val_404
404	val_404
404	val_405
404	val_405
404	val_405
408	val_409
408	val_409
412	val_413
412	val_413
416	val_417
424	val_424
424	val_424
424	val_425
428	val_429
432	val_432
432	val_433
436	val_436
436	val_437
440	val_441
440	val_441
444	val_444
448	val_448
448	val_449
452	val_452
460	val_460
468	val_468
468	val_468
468	val_468
468	val_468
468	val_469
468	val_469
468	val_469
472	val_472
476	val_477
476	val_477
480	val_480
480	val_480
480	val_480
480	val_481
480	val_481
484	val_484
484	val_485
488	val_489
492	val_492
492	val_492
492	val_493
492	val_493
496	val_496
496	val_497
