PREHOOK: query: create table smb_bucket_1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_bucket_1
POSTHOOK: query: create table smb_bucket_1(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_bucket_1
PREHOOK: query: create table smb_bucket_2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_bucket_2
POSTHOOK: query: create table smb_bucket_2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_bucket_2
PREHOOK: query: create table smb_bucket_3(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_bucket_3
POSTHOOK: query: create table smb_bucket_3(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_bucket_3
PREHOOK: query: load data local inpath '../../data/files/smbbucket_1.rc' overwrite into table smb_bucket_1
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smb_bucket_1
POSTHOOK: query: load data local inpath '../../data/files/smbbucket_1.rc' overwrite into table smb_bucket_1
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smb_bucket_1
PREHOOK: query: load data local inpath '../../data/files/smbbucket_2.rc' overwrite into table smb_bucket_2
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smb_bucket_2
POSTHOOK: query: load data local inpath '../../data/files/smbbucket_2.rc' overwrite into table smb_bucket_2
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smb_bucket_2
PREHOOK: query: load data local inpath '../../data/files/smbbucket_3.rc' overwrite into table smb_bucket_3
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smb_bucket_3
POSTHOOK: query: load data local inpath '../../data/files/smbbucket_3.rc' overwrite into table smb_bucket_3
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smb_bucket_3
PREHOOK: query: explain 
select * from (select a.key from smb_bucket_1 a join smb_bucket_2 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2 c join smb_bucket_3 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select * from (select a.key from smb_bucket_1 a join smb_bucket_2 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2 c join smb_bucket_3 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
        Reducer 6 <- Map 5 (PARTITION-LEVEL SORT, 2), Map 7 (PARTITION-LEVEL SORT, 2)
        Reducer 3 <- Reducer 2 (PARTITION-LEVEL SORT, 2), Reducer 6 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 52 Data size: 208 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key = 5) (type: boolean)
                    Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: 5 (type: int)
                        sort order: +
                        Map-reduce partition columns: 5 (type: int)
                        Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: NONE
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 51 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key = 5) (type: boolean)
                    Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: 5 (type: int)
                        sort order: +
                        Map-reduce partition columns: 5 (type: int)
                        Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 51 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key = 5) (type: boolean)
                    Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: 5 (type: int)
                        sort order: +
                        Map-reduce partition columns: 5 (type: int)
                        Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: d
                  Statistics: Num rows: 55 Data size: 222 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key = 5) (type: boolean)
                    Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: 5 (type: int)
                        sort order: +
                        Map-reduce partition columns: 5 (type: int)
                        Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 28 Data size: 114 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: 5 (type: int)
                  sort order: +
                  Map-reduce partition columns: 5 (type: int)
                  Statistics: Num rows: 28 Data size: 114 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 31 Data size: 129 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: 5 (type: int), 5 (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 31 Data size: 129 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 31 Data size: 129 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                Statistics: Num rows: 29 Data size: 118 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: 5 (type: int)
                  sort order: +
                  Map-reduce partition columns: 5 (type: int)
                  Statistics: Num rows: 29 Data size: 118 Basic stats: COMPLETE Column stats: NONE

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: -- explain
-- select * from smb_bucket_1 a left outer join smb_bucket_2 b on a.key = b.key left outer join src c on a.key=c.value

-- select a.key from smb_bucket_1 a

explain 
select * from (select a.key from smb_bucket_1 a join smb_bucket_2 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2 c join smb_bucket_3 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
PREHOOK: type: QUERY
POSTHOOK: query: -- explain
-- select * from smb_bucket_1 a left outer join smb_bucket_2 b on a.key = b.key left outer join src c on a.key=c.value

-- select a.key from smb_bucket_1 a

explain 
select * from (select a.key from smb_bucket_1 a join smb_bucket_2 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2 c join smb_bucket_3 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-3 is a root stage
  Stage-2 depends on stages: Stage-3
  Stage-1 depends on stages: Stage-2
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-3
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 51 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key = 5) (type: boolean)
                    Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                      Spark HashTable Sink Operator
                        keys:
                          0 5 (type: int)
                          1 5 (type: int)
            Local Work:
              Map Reduce Local Work

  Stage: Stage-2
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 52 Data size: 208 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key = 5) (type: boolean)
                    Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      Statistics: Num rows: 26 Data size: 104 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 5 (type: int)
                          1 5 (type: int)
                        input vertices:
                          1 Map 2
                        Statistics: Num rows: 28 Data size: 114 Basic stats: COMPLETE Column stats: NONE
                        Spark HashTable Sink Operator
                          keys:
                            0 5 (type: int)
                            1 5 (type: int)
            Local Work:
              Map Reduce Local Work
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 51 Data size: 206 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key = 5) (type: boolean)
                    Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      Statistics: Num rows: 25 Data size: 100 Basic stats: COMPLETE Column stats: NONE
                      Spark HashTable Sink Operator
                        keys:
                          0 5 (type: int)
                          1 5 (type: int)
            Local Work:
              Map Reduce Local Work

  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: d
                  Statistics: Num rows: 55 Data size: 222 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (key = 5) (type: boolean)
                    Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      Statistics: Num rows: 27 Data size: 108 Basic stats: COMPLETE Column stats: NONE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 5 (type: int)
                          1 5 (type: int)
                        input vertices:
                          0 Map 3
                        Statistics: Num rows: 29 Data size: 118 Basic stats: COMPLETE Column stats: NONE
                        Map Join Operator
                          condition map:
                               Inner Join 0 to 1
                          keys:
                            0 5 (type: int)
                            1 5 (type: int)
                          input vertices:
                            0 Map 1
                          Statistics: Num rows: 31 Data size: 129 Basic stats: COMPLETE Column stats: NONE
                          Select Operator
                            expressions: 5 (type: int), 5 (type: int)
                            outputColumnNames: _col0, _col1
                            Statistics: Num rows: 31 Data size: 129 Basic stats: COMPLETE Column stats: NONE
                            File Output Operator
                              compressed: false
                              Statistics: Num rows: 31 Data size: 129 Basic stats: COMPLETE Column stats: NONE
                              table:
                                  input format: org.apache.hadoop.mapred.TextInputFormat
                                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Local Work:
              Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from (select a.key from smb_bucket_1 a join smb_bucket_2 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2 c join smb_bucket_3 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1
PREHOOK: Input: default@smb_bucket_2
PREHOOK: Input: default@smb_bucket_3
#### A masked pattern was here ####
POSTHOOK: query: select * from (select a.key from smb_bucket_1 a join smb_bucket_2 b on (a.key = b.key) where a.key = 5) t1 left outer join (select c.key from smb_bucket_2 c join smb_bucket_3 d on (c.key = d.key) where c.key=5) t2 on (t1.key=t2.key) where t2.key=5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1
POSTHOOK: Input: default@smb_bucket_2
POSTHOOK: Input: default@smb_bucket_3
#### A masked pattern was here ####
