PREHOOK: query: CREATE TABLE tmpT1_n109(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmpT1_n109
POSTHOOK: query: CREATE TABLE tmpT1_n109(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmpT1_n109
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE tmpT1_n109
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tmpt1_n109
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE tmpT1_n109
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tmpt1_n109
PREHOOK: query: CREATE TABLE T1_n109(key INT, val STRING) SKEWED BY (key) ON ((2))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n109
POSTHOOK: query: CREATE TABLE T1_n109(key INT, val STRING) SKEWED BY (key) ON ((2))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n109
PREHOOK: query: INSERT OVERWRITE TABLE T1_n109 SELECT key, val FROM tmpT1_n109
PREHOOK: type: QUERY
PREHOOK: Input: default@tmpt1_n109
PREHOOK: Output: default@t1_n109
POSTHOOK: query: INSERT OVERWRITE TABLE T1_n109 SELECT key, val FROM tmpT1_n109
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmpt1_n109
POSTHOOK: Output: default@t1_n109
POSTHOOK: Lineage: t1_n109.key EXPRESSION [(tmpt1_n109)tmpt1_n109.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t1_n109.val SIMPLE [(tmpt1_n109)tmpt1_n109.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE tmpT2_n66(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tmpT2_n66
POSTHOOK: query: CREATE TABLE tmpT2_n66(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tmpT2_n66
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE tmpT2_n66
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@tmpt2_n66
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE tmpT2_n66
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@tmpt2_n66
PREHOOK: query: CREATE TABLE T2_n66(key INT, val STRING) SKEWED BY (key) ON ((3))
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T2_n66
POSTHOOK: query: CREATE TABLE T2_n66(key INT, val STRING) SKEWED BY (key) ON ((3))
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2_n66
PREHOOK: query: INSERT OVERWRITE TABLE T2_n66 SELECT key, val FROM tmpT2_n66
PREHOOK: type: QUERY
PREHOOK: Input: default@tmpt2_n66
PREHOOK: Output: default@t2_n66
POSTHOOK: query: INSERT OVERWRITE TABLE T2_n66 SELECT key, val FROM tmpT2_n66
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmpt2_n66
POSTHOOK: Output: default@t2_n66
POSTHOOK: Lineage: t2_n66.key EXPRESSION [(tmpt2_n66)tmpt2_n66.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t2_n66.val SIMPLE [(tmpt2_n66)tmpt2_n66.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n109 a JOIN T2_n66 b ON a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n109 a JOIN T2_n66 b ON a.key = b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2)
        Reducer 5 <- Map 4 (PARTITION-LEVEL SORT, 2), Map 6 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((key = 2) or (key = 3)) and key is not null) (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((key = 2) or (key = 3)) and key is not null) (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((key <> 2) and (key <> 3)) and key is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((key <> 2) and (key <> 3)) and key is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 7 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 7 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a.*, b.* FROM T1_n109 a JOIN T2_n66 b ON a.key = b.key
ORDER BY a.key, b.key, a.val, b.val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n109
PREHOOK: Input: default@t2_n66
#### A masked pattern was here ####
POSTHOOK: query: SELECT a.*, b.* FROM T1_n109 a JOIN T2_n66 b ON a.key = b.key
ORDER BY a.key, b.key, a.val, b.val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n109
POSTHOOK: Input: default@t2_n66
#### A masked pattern was here ####
2	12	2	22
3	13	3	13
8	18	8	18
8	18	8	18
8	28	8	18
8	28	8	18
PREHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n109 a RIGHT OUTER JOIN T2_n66 b ON a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT a.*, b.* FROM T1_n109 a RIGHT OUTER JOIN T2_n66 b ON a.key = b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2)
        Reducer 5 <- Map 4 (PARTITION-LEVEL SORT, 2), Map 6 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key = 2) or (key = 3)) (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key = 2) or (key = 3)) (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key <> 2) and (key <> 3)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key <> 2) and (key <> 3)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Right Outer Join 0 to 1
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 7 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Right Outer Join 0 to 1
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 7 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT a.*, b.* FROM T1_n109 a RIGHT OUTER JOIN T2_n66 b ON a.key = b.key
ORDER BY a.key, b.key, a.val, b.val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n109
PREHOOK: Input: default@t2_n66
#### A masked pattern was here ####
POSTHOOK: query: SELECT a.*, b.* FROM T1_n109 a RIGHT OUTER JOIN T2_n66 b ON a.key = b.key
ORDER BY a.key, b.key, a.val, b.val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n109
POSTHOOK: Input: default@t2_n66
#### A masked pattern was here ####
NULL	NULL	4	14
NULL	NULL	5	15
2	12	2	22
3	13	3	13
8	18	8	18
8	18	8	18
8	28	8	18
8	28	8	18
PREHOOK: query: EXPLAIN
SELECT count(1) FROM T1_n109 a JOIN T2_n66 b ON a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT count(1) FROM T1_n109 a JOIN T2_n66 b ON a.key = b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
        Reducer 3 <- Reducer 2 (GROUP, 1), Reducer 6 (GROUP, 1)
        Reducer 6 <- Map 5 (PARTITION-LEVEL SORT, 2), Map 7 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((key = 2) or (key = 3)) and key is not null) (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((key = 2) or (key = 3)) and key is not null) (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((key <> 2) and (key <> 3)) and key is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((key <> 2) and (key <> 3)) and key is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT count(1) FROM T1_n109 a JOIN T2_n66 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n109
PREHOOK: Input: default@t2_n66
#### A masked pattern was here ####
POSTHOOK: query: SELECT count(1) FROM T1_n109 a JOIN T2_n66 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n109
POSTHOOK: Input: default@t2_n66
#### A masked pattern was here ####
6
PREHOOK: query: EXPLAIN
SELECT count(1) FROM T1_n109 a RIGHT OUTER JOIN T2_n66 b ON a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT count(1) FROM T1_n109 a RIGHT OUTER JOIN T2_n66 b ON a.key = b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
        Reducer 3 <- Reducer 2 (GROUP, 1), Reducer 6 (GROUP, 1)
        Reducer 6 <- Map 5 (PARTITION-LEVEL SORT, 2), Map 7 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key = 2) or (key = 3)) (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key = 2) or (key = 3)) (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key <> 2) and (key <> 3)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key <> 2) and (key <> 3)) (type: boolean)
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Right Outer Join 0 to 1
                Statistics: Num rows: 6 Data size: 26 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)
        Reducer 3 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 6 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Right Outer Join 0 to 1
                Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count()
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    sort order: 
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col0 (type: bigint)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT count(1) FROM T1_n109 a RIGHT OUTER JOIN T2_n66 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n109
PREHOOK: Input: default@t2_n66
#### A masked pattern was here ####
POSTHOOK: query: SELECT count(1) FROM T1_n109 a RIGHT OUTER JOIN T2_n66 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n109
POSTHOOK: Input: default@t2_n66
#### A masked pattern was here ####
8
