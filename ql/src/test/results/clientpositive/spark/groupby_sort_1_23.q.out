PREHOOK: query: CREATE TABLE T1_n80(key STRING, val STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1_n80
POSTHOOK: query: CREATE TABLE T1_n80(key STRING, val STRING)
CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1_n80
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_n80
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1_n80
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/bucket_files/000000_0' INTO TABLE T1_n80
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1_n80
PREHOOK: query: INSERT OVERWRITE TABLE T1_n80 select key, val from T1_n80
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@t1_n80
POSTHOOK: query: INSERT OVERWRITE TABLE T1_n80 select key, val from T1_n80
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@t1_n80
POSTHOOK: Lineage: t1_n80.key SIMPLE [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t1_n80.val SIMPLE [(t1_n80)t1_n80.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: CREATE TABLE outputTbl1_n18(key int, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl1_n18
POSTHOOK: query: CREATE TABLE outputTbl1_n18(key int, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl1_n18
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM T1_n80 GROUP BY key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM T1_n80 GROUP BY key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key":"true"}}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n18
                                numFiles 0
                                numRows 0
                                rawDataSize 0
                                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 0
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n18
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [t1_n80]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n18
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n18

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM T1_n80 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl1_n18
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM T1_n80 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl1_n18
POSTHOOK: Lineage: outputtbl1_n18.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl1_n18.key EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: CREATE TABLE outputTbl2_n5(key1 int, key2 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl2_n5
POSTHOOK: query: CREATE TABLE outputTbl2_n5(key1 int, key2 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl2_n5
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl2_n5
SELECT key, val, count(1) FROM T1_n80 GROUP BY key, val
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl2_n5
SELECT key, val, count(1) FROM T1_n80 GROUP BY key, val
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        null sort order: aa
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col2 (type: bigint)
                        auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [t1_n80]
        Reducer 2 
            Execution mode: vectorized
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key1":"true","key2":"true"}}
                          bucket_count -1
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key1,key2,cnt
                          columns.comments 
                          columns.types int:string:int
#### A masked pattern was here ####
                          name default.outputtbl2_n5
                          numFiles 0
                          numRows 0
                          rawDataSize 0
                          serialization.ddl struct outputtbl2_n5 { i32 key1, string key2, i32 cnt}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          totalSize 0
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl2_n5
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key1":"true","key2":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,cnt
                columns.comments 
                columns.types int:string:int
#### A masked pattern was here ####
                name default.outputtbl2_n5
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct outputtbl2_n5 { i32 key1, string key2, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl2_n5

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl2_n5
SELECT key, val, count(1) FROM T1_n80 GROUP BY key, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl2_n5
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl2_n5
SELECT key, val, count(1) FROM T1_n80 GROUP BY key, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl2_n5
POSTHOOK: Lineage: outputtbl2_n5.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl2_n5.key1 EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl2_n5.key2 SIMPLE [(t1_n80)t1_n80.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl2_n5
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl2_n5
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl2_n5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl2_n5
#### A masked pattern was here ####
1	11	1
2	12	1
3	13	1
7	17	1
8	18	1
8	28	1
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM (SELECT key, val FROM T1_n80) subq1 GROUP BY key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM (SELECT key, val FROM T1_n80) subq1 GROUP BY key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n18
                                numFiles 2
                                numRows 5
                                rawDataSize 15
                                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 20
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n18
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [t1_n80]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n18
                numFiles 2
                numRows 5
                rawDataSize 15
                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 20
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n18

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM (SELECT key, val FROM T1_n80) subq1 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl1_n18
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM (SELECT key, val FROM T1_n80) subq1 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl1_n18
POSTHOOK: Lineage: outputtbl1_n18.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl1_n18.key EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT k, count(1) FROM (SELECT key as k, val as v FROM T1_n80) subq1 GROUP BY k
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT k, count(1) FROM (SELECT key as k, val as v FROM T1_n80) subq1 GROUP BY k
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n18
                                numFiles 2
                                numRows 5
                                rawDataSize 15
                                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 20
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n18
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [t1_n80]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n18
                numFiles 2
                numRows 5
                rawDataSize 15
                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 20
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n18

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT k, count(1) FROM (SELECT key as k, val as v FROM T1_n80) subq1 GROUP BY k
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl1_n18
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT k, count(1) FROM (SELECT key as k, val as v FROM T1_n80) subq1 GROUP BY k
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl1_n18
POSTHOOK: Lineage: outputtbl1_n18.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl1_n18.key EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: CREATE TABLE outputTbl3_n2(key1 int, key2 int, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl3_n2
POSTHOOK: query: CREATE TABLE outputTbl3_n2(key1 int, key2 int, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl3_n2
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl3_n2
SELECT 1, key, count(1) FROM T1_n80 GROUP BY 1, key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl3_n2
SELECT 1, key, count(1) FROM T1_n80 GROUP BY 1, key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: 1 (type: int), UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key1":"true","key2":"true"}}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,cnt
                                columns.comments 
                                columns.types int:int:int
#### A masked pattern was here ####
                                name default.outputtbl3_n2
                                numFiles 0
                                numRows 0
                                rawDataSize 0
                                serialization.ddl struct outputtbl3_n2 { i32 key1, i32 key2, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 0
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl3_n2
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [t1_n80]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key1":"true","key2":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,cnt
                columns.comments 
                columns.types int:int:int
#### A masked pattern was here ####
                name default.outputtbl3_n2
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct outputtbl3_n2 { i32 key1, i32 key2, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl3_n2

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl3_n2
SELECT 1, key, count(1) FROM T1_n80 GROUP BY 1, key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl3_n2
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl3_n2
SELECT 1, key, count(1) FROM T1_n80 GROUP BY 1, key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl3_n2
POSTHOOK: Lineage: outputtbl3_n2.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl3_n2.key1 SIMPLE []
POSTHOOK: Lineage: outputtbl3_n2.key2 EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl3_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl3_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl3_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl3_n2
#### A masked pattern was here ####
1	1	1
1	2	1
1	3	1
1	7	1
1	8	2
PREHOOK: query: CREATE TABLE outputTbl4_n2(key1 int, key2 int, key3 string, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl4_n2
POSTHOOK: query: CREATE TABLE outputTbl4_n2(key1 int, key2 int, key3 string, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl4_n2
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, 1, val, count(1) FROM T1_n80 GROUP BY key, 1, val
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, 1, val, count(1) FROM T1_n80 GROUP BY key, 1, val
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        null sort order: aa
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col2 (type: bigint)
                        auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [t1_n80]
        Reducer 2 
            Execution mode: vectorized
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), 1 (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key1":"true","key2":"true","key3":"true"}}
                          bucket_count -1
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key1,key2,key3,cnt
                          columns.comments 
                          columns.types int:int:string:int
#### A masked pattern was here ####
                          name default.outputtbl4_n2
                          numFiles 0
                          numRows 0
                          rawDataSize 0
                          serialization.ddl struct outputtbl4_n2 { i32 key1, i32 key2, string key3, i32 cnt}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          totalSize 0
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl4_n2
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key1":"true","key2":"true","key3":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,cnt
                columns.comments 
                columns.types int:int:string:int
#### A masked pattern was here ####
                name default.outputtbl4_n2
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct outputtbl4_n2 { i32 key1, i32 key2, string key3, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl4_n2

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, 1, val, count(1) FROM T1_n80 GROUP BY key, 1, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl4_n2
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, 1, val, count(1) FROM T1_n80 GROUP BY key, 1, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl4_n2
POSTHOOK: Lineage: outputtbl4_n2.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl4_n2.key1 EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl4_n2.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl4_n2.key3 SIMPLE [(t1_n80)t1_n80.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl4_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl4_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl4_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl4_n2
#### A masked pattern was here ####
1	1	11	1
2	1	12	1
3	1	13	1
7	1	17	1
8	1	18	1
8	1	28	1
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl3_n2
SELECT key, key + 1, count(1) FROM T1_n80 GROUP BY key, key + 1
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl3_n2
SELECT key, key + 1, count(1) FROM T1_n80 GROUP BY key, key + 1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), (UDFToDouble(key) + 1.0D) (type: double)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: _col0 (type: string), _col1 (type: double)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: double)
                        null sort order: aa
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: double)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col2 (type: bigint)
                        auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_0:t1_n80]
        Reducer 2 
            Execution mode: vectorized
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: double)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int), UDFToInteger(_col2) (type: int)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                          bucket_count -1
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key1,key2,cnt
                          columns.comments 
                          columns.types int:int:int
#### A masked pattern was here ####
                          name default.outputtbl3_n2
                          numFiles 2
                          numRows 5
                          rawDataSize 25
                          serialization.ddl struct outputtbl3_n2 { i32 key1, i32 key2, i32 cnt}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          totalSize 30
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl3_n2
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,cnt
                columns.comments 
                columns.types int:int:int
#### A masked pattern was here ####
                name default.outputtbl3_n2
                numFiles 2
                numRows 5
                rawDataSize 25
                serialization.ddl struct outputtbl3_n2 { i32 key1, i32 key2, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 30
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl3_n2

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl3_n2
SELECT key, key + 1, count(1) FROM T1_n80 GROUP BY key, key + 1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl3_n2
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl3_n2
SELECT key, key + 1, count(1) FROM T1_n80 GROUP BY key, key + 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl3_n2
POSTHOOK: Lineage: outputtbl3_n2.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl3_n2.key1 EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl3_n2.key2 EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl3_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl3_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl3_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl3_n2
#### A masked pattern was here ####
1	2	1
2	3	1
3	4	1
7	8	1
8	9	2
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key + key, sum(cnt) from
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq1
group by key + key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key + key, sum(cnt) from
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq1
group by key + key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: (UDFToDouble(_col0) + UDFToDouble(_col0)) (type: double), _col1 (type: bigint)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        Group By Operator
                          aggregations: sum(_col1)
                          keys: _col0 (type: double)
                          mode: hash
                          outputColumnNames: _col0, _col1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                          Reduce Output Operator
                            key expressions: _col0 (type: double)
                            null sort order: a
                            sort order: +
                            Map-reduce partition columns: _col0 (type: double)
                            Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                            tag: -1
                            value expressions: _col1 (type: bigint)
                            auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_0:t1_n80]
        Reducer 2 
            Execution mode: vectorized
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: double)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                          bucket_count -1
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,cnt
                          columns.comments 
                          columns.types int:int
#### A masked pattern was here ####
                          name default.outputtbl1_n18
                          numFiles 2
                          numRows 5
                          rawDataSize 15
                          serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          totalSize 20
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1_n18
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n18
                numFiles 2
                numRows 5
                rawDataSize 15
                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 20
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n18

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key + key, sum(cnt) from
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq1
group by key + key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl1_n18
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key + key, sum(cnt) from
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq1
group by key + key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl1_n18
POSTHOOK: Lineage: outputtbl1_n18.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl1_n18.key EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
14	1
16	2
2	1
4	1
6	1
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT * FROM (
SELECT key, count(1) FROM T1_n80 GROUP BY key
  UNION ALL
SELECT key, count(1) FROM T1_n80 GROUP BY key
) subq1
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT * FROM (
SELECT key, count(1) FROM T1_n80 GROUP BY key
  UNION ALL
SELECT key, count(1) FROM T1_n80 GROUP BY key
) subq1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n18
                                numFiles 2
                                numRows 5
                                rawDataSize 17
                                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 22
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n18
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_0-subquery1:t1_n80]
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n18
                                numFiles 2
                                numRows 5
                                rawDataSize 17
                                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 22
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n18
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_0-subquery2:t1_n80]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n18
                numFiles 2
                numRows 5
                rawDataSize 17
                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 22
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n18

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT * FROM (
SELECT key, count(1) FROM T1_n80 GROUP BY key
  UNION ALL
SELECT key, count(1) FROM T1_n80 GROUP BY key
) subq1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl1_n18
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT * FROM (
SELECT key, count(1) FROM T1_n80 GROUP BY key
  UNION ALL
SELECT key, count(1) FROM T1_n80 GROUP BY key
) subq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl1_n18
POSTHOOK: Lineage: outputtbl1_n18.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl1_n18.key EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
1	1
1	1
2	1
2	1
3	1
3	1
7	1
7	1
8	2
8	2
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT * FROM (
SELECT key, count(1) FROM T1_n80 GROUP BY key
  UNION ALL
SELECT cast(key + key as string) as key, count(1) FROM T1_n80 GROUP BY key + key
) subq1
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT * FROM (
SELECT key, count(1) FROM T1_n80 GROUP BY key
  UNION ALL
SELECT cast(key + key as string) as key, count(1) FROM T1_n80 GROUP BY key + key
) subq1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 3 <- Map 2 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key,cnt
                                columns.comments 
                                columns.types int:int
#### A masked pattern was here ####
                                name default.outputtbl1_n18
                                numFiles 4
                                numRows 10
                                rawDataSize 30
                                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 40
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl1_n18
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_0-subquery1:t1_n80]
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: (UDFToDouble(key) + UDFToDouble(key)) (type: double)
                    outputColumnNames: _col0
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: _col0 (type: double)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: double)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: double)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col1 (type: bigint)
                        auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_0-subquery2:$hdt$_0:t1_n80]
        Reducer 3 
            Execution mode: vectorized
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: double)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToString(_col0) (type: string), _col1 (type: bigint)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      GlobalTableId: 1
#### A masked pattern was here ####
                      NumFilesPerFileSink: 1
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          properties:
                            COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                            bucket_count -1
                            bucketing_version 2
                            column.name.delimiter ,
                            columns key,cnt
                            columns.comments 
                            columns.types int:int
#### A masked pattern was here ####
                            name default.outputtbl1_n18
                            numFiles 4
                            numRows 10
                            rawDataSize 30
                            serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                            serialization.format 1
                            serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            totalSize 40
#### A masked pattern was here ####
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.outputtbl1_n18
                      TotalFiles: 1
                      GatherStats: true
                      MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n18
                numFiles 4
                numRows 10
                rawDataSize 30
                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 40
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n18

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT * FROM (
SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key
  UNION ALL
SELECT cast(key + key as string) as key, count(1) as cnt FROM T1_n80 GROUP BY key + key
) subq1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl1_n18
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT * FROM (
SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key
  UNION ALL
SELECT cast(key + key as string) as key, count(1) as cnt FROM T1_n80 GROUP BY key + key
) subq1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl1_n18
POSTHOOK: Lineage: outputtbl1_n18.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl1_n18.key EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
1	1
14	1
16	2
2	1
2	1
3	1
4	1
6	1
7	1
8	2
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT subq1.key, subq1.cnt+subq2.cnt FROM 
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq1
JOIN
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq2
ON subq1.key = subq2.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT subq1.key, subq1.cnt+subq2.cnt FROM 
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq1
JOIN
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq2
ON subq1.key = subq2.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        tag: 0
                        value expressions: _col1 (type: bigint)
                        auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_0:t1_n80]
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        tag: 1
                        value expressions: _col1 (type: bigint)
                        auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_1:t1_n80]
        Reducer 2 
            Needs Tagging: true
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1, _col3
                Statistics: Num rows: 3 Data size: 13 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger((_col1 + _col3)) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 3 Data size: 13 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 3 Data size: 13 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                          bucket_count -1
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,cnt
                          columns.comments 
                          columns.types int:int
#### A masked pattern was here ####
                          name default.outputtbl1_n18
                          numFiles 4
                          numRows 10
                          rawDataSize 32
                          serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          totalSize 42
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1_n18
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n18
                numFiles 4
                numRows 10
                rawDataSize 32
                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 42
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n18

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT subq1.key, subq1.cnt+subq2.cnt FROM 
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq1
JOIN
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq2
ON subq1.key = subq2.key
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@outputtbl1_n18
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT subq1.key, subq1.cnt+subq2.cnt FROM 
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq1
JOIN
(SELECT key, count(1) as cnt FROM T1_n80 GROUP BY key) subq2
ON subq1.key = subq2.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@outputtbl1_n18
POSTHOOK: Lineage: outputtbl1_n18.cnt EXPRESSION [(t1_n80)t1_n80.null, ]
POSTHOOK: Lineage: outputtbl1_n18.key EXPRESSION [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
1	2
2	2
3	2
7	2
8	4
PREHOOK: query: EXPLAIN EXTENDED 
SELECT * FROM 
(SELECT key, count(1) FROM T1_n80 GROUP BY key) subq1
JOIN
(SELECT key, val, count(1) FROM T1_n80 GROUP BY key, val) subq2
ON subq1.key = subq2.key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
SELECT * FROM 
(SELECT key, count(1) FROM T1_n80 GROUP BY key) subq1
JOIN
(SELECT key, val, count(1) FROM T1_n80 GROUP BY key, val) subq2
ON subq1.key = subq2.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Reducer 4 (PARTITION-LEVEL SORT, 2)
        Reducer 4 <- Map 3 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        tag: 0
                        value expressions: _col1 (type: bigint)
                        auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_0:t1_n80]
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: t1_n80
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        null sort order: aa
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col2 (type: bigint)
                        auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t1_n80
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t1_n80
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t1_n80 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t1_n80
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t1_n80 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t1_n80
                  name: default.t1_n80
            Truncated Path -> Alias:
              /t1_n80 [$hdt$_1:t1_n80]
        Reducer 2 
            Needs Tagging: true
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col0 (type: string)
                  1 _col0 (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 3 Data size: 13 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 3 Data size: 13 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        columns _col0,_col1,_col2,_col3,_col4
                        columns.types string:bigint:string:string:bigint
                        escape.delim \
                        hive.serialization.extend.additional.nesting.levels true
                        serialization.escape.crlf true
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false
        Reducer 4 
            Execution mode: vectorized
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  null sort order: a
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  tag: 1
                  value expressions: _col1 (type: string), _col2 (type: bigint)
                  auto parallelism: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: CREATE TABLE T2_n49(key STRING, val STRING)
CLUSTERED BY (key, val) SORTED BY (key, val) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T2_n49
POSTHOOK: query: CREATE TABLE T2_n49(key STRING, val STRING)
CLUSTERED BY (key, val) SORTED BY (key, val) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2_n49
PREHOOK: query: INSERT OVERWRITE TABLE T2_n49 select key, val from T1_n80
PREHOOK: type: QUERY
PREHOOK: Input: default@t1_n80
PREHOOK: Output: default@t2_n49
POSTHOOK: query: INSERT OVERWRITE TABLE T2_n49 select key, val from T1_n80
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1_n80
POSTHOOK: Output: default@t2_n49
POSTHOOK: Lineage: t2_n49.key SIMPLE [(t1_n80)t1_n80.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: t2_n49.val SIMPLE [(t1_n80)t1_n80.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM T2_n49 GROUP BY key
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM T2_n49 GROUP BY key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n49
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      bucketGroup: true
                      keys: key (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: a
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col1 (type: bigint)
                        auto parallelism: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n49
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n49
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t2_n49 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n49
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t2_n49 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n49
                  name: default.t2_n49
            Truncated Path -> Alias:
              /t2_n49 [t2_n49]
        Reducer 2 
            Execution mode: vectorized
            Needs Tagging: false
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    GlobalTableId: 1
#### A masked pattern was here ####
                    NumFilesPerFileSink: 1
                    Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        properties:
                          COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                          bucket_count -1
                          bucketing_version 2
                          column.name.delimiter ,
                          columns key,cnt
                          columns.comments 
                          columns.types int:int
#### A masked pattern was here ####
                          name default.outputtbl1_n18
                          numFiles 2
                          numRows 5
                          rawDataSize 15
                          serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                          serialization.format 1
                          serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          totalSize 20
#### A masked pattern was here ####
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1_n18
                    TotalFiles: 1
                    GatherStats: true
                    MultiFileSpray: false

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,cnt
                columns.comments 
                columns.types int:int
#### A masked pattern was here ####
                name default.outputtbl1_n18
                numFiles 2
                numRows 5
                rawDataSize 15
                serialization.ddl struct outputtbl1_n18 { i32 key, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 20
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1_n18

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM T2_n49 GROUP BY key
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n49
PREHOOK: Output: default@outputtbl1_n18
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl1_n18
SELECT key, count(1) FROM T2_n49 GROUP BY key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n49
POSTHOOK: Output: default@outputtbl1_n18
POSTHOOK: Lineage: outputtbl1_n18.cnt EXPRESSION [(t2_n49)t2_n49.null, ]
POSTHOOK: Lineage: outputtbl1_n18.key EXPRESSION [(t2_n49)t2_n49.FieldSchema(name:key, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl1_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl1_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1_n18
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, 1, val, count(1) FROM T2_n49 GROUP BY key, 1, val
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, 1, val, count(1) FROM T2_n49 GROUP BY key, 1, val
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n49
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), 1 (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,key3,cnt
                                columns.comments 
                                columns.types int:int:string:int
#### A masked pattern was here ####
                                name default.outputtbl4_n2
                                numFiles 2
                                numRows 6
                                rawDataSize 48
                                serialization.ddl struct outputtbl4_n2 { i32 key1, i32 key2, string key3, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 54
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl4_n2
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n49
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n49
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t2_n49 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n49
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t2_n49 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n49
                  name: default.t2_n49
            Truncated Path -> Alias:
              /t2_n49 [t2_n49]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,cnt
                columns.comments 
                columns.types int:int:string:int
#### A masked pattern was here ####
                name default.outputtbl4_n2
                numFiles 2
                numRows 6
                rawDataSize 48
                serialization.ddl struct outputtbl4_n2 { i32 key1, i32 key2, string key3, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 54
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl4_n2

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, 1, val, count(1) FROM T2_n49 GROUP BY key, 1, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n49
PREHOOK: Output: default@outputtbl4_n2
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, 1, val, count(1) FROM T2_n49 GROUP BY key, 1, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n49
POSTHOOK: Output: default@outputtbl4_n2
POSTHOOK: Lineage: outputtbl4_n2.cnt EXPRESSION [(t2_n49)t2_n49.null, ]
POSTHOOK: Lineage: outputtbl4_n2.key1 EXPRESSION [(t2_n49)t2_n49.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl4_n2.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl4_n2.key3 SIMPLE [(t2_n49)t2_n49.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl4_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl4_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl4_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl4_n2
#### A masked pattern was here ####
1	1	11	1
2	1	12	1
3	1	13	1
7	1	17	1
8	1	18	1
8	1	28	1
PREHOOK: query: CREATE TABLE outputTbl5_n2(key1 int, key2 int, key3 string, key4 int, cnt int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl5_n2
POSTHOOK: query: CREATE TABLE outputTbl5_n2(key1 int, key2 int, key3 string, key4 int, cnt int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl5_n2
PREHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl5_n2
SELECT key, 1, val, 2, count(1) FROM T2_n49 GROUP BY key, 1, val, 2
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED 
INSERT OVERWRITE TABLE outputTbl5_n2
SELECT key, 1, val, 2, count(1) FROM T2_n49 GROUP BY key, 1, val, 2
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n49
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), 1 (type: int), _col1 (type: string), 2 (type: int), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key1":"true","key2":"true","key3":"true","key4":"true"}}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,key3,key4,cnt
                                columns.comments 
                                columns.types int:int:string:int:int
#### A masked pattern was here ####
                                name default.outputtbl5_n2
                                numFiles 0
                                numRows 0
                                rawDataSize 0
                                serialization.ddl struct outputtbl5_n2 { i32 key1, i32 key2, string key3, i32 key4, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 0
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl5_n2
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n49
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n49
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t2_n49 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n49
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t2_n49 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n49
                  name: default.t2_n49
            Truncated Path -> Alias:
              /t2_n49 [t2_n49]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"cnt":"true","key1":"true","key2":"true","key3":"true","key4":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,key4,cnt
                columns.comments 
                columns.types int:int:string:int:int
#### A masked pattern was here ####
                name default.outputtbl5_n2
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct outputtbl5_n2 { i32 key1, i32 key2, string key3, i32 key4, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl5_n2

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl5_n2
SELECT key, 1, val, 2, count(1) FROM T2_n49 GROUP BY key, 1, val, 2
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n49
PREHOOK: Output: default@outputtbl5_n2
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl5_n2
SELECT key, 1, val, 2, count(1) FROM T2_n49 GROUP BY key, 1, val, 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n49
POSTHOOK: Output: default@outputtbl5_n2
POSTHOOK: Lineage: outputtbl5_n2.cnt EXPRESSION [(t2_n49)t2_n49.null, ]
POSTHOOK: Lineage: outputtbl5_n2.key1 EXPRESSION [(t2_n49)t2_n49.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl5_n2.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl5_n2.key3 SIMPLE [(t2_n49)t2_n49.FieldSchema(name:val, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl5_n2.key4 SIMPLE []
PREHOOK: query: SELECT * FROM outputTbl5_n2 
ORDER BY key1, key2, key3, key4
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl5_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl5_n2 
ORDER BY key1, key2, key3, key4
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl5_n2
#### A masked pattern was here ####
1	1	11	2	1
2	1	12	2	1
3	1	13	2	1
7	1	17	2	1
8	1	18	2	1
8	1	28	2	1
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, constant, val, count(1) from 
(SELECT key, 1 as constant, val from T2_n49)subq
group by key, constant, val
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, constant, val, count(1) from 
(SELECT key, 1 as constant, val from T2_n49)subq
group by key, constant, val
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n49
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), 1 (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,key3,cnt
                                columns.comments 
                                columns.types int:int:string:int
#### A masked pattern was here ####
                                name default.outputtbl4_n2
                                numFiles 2
                                numRows 6
                                rawDataSize 48
                                serialization.ddl struct outputtbl4_n2 { i32 key1, i32 key2, string key3, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 54
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl4_n2
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n49
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n49
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t2_n49 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n49
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t2_n49 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n49
                  name: default.t2_n49
            Truncated Path -> Alias:
              /t2_n49 [t2_n49]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,cnt
                columns.comments 
                columns.types int:int:string:int
#### A masked pattern was here ####
                name default.outputtbl4_n2
                numFiles 2
                numRows 6
                rawDataSize 48
                serialization.ddl struct outputtbl4_n2 { i32 key1, i32 key2, string key3, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 54
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl4_n2

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, constant, val, count(1) from 
(SELECT key, 1 as constant, val from T2_n49)subq
group by key, constant, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n49
PREHOOK: Output: default@outputtbl4_n2
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n2
SELECT key, constant, val, count(1) from 
(SELECT key, 1 as constant, val from T2_n49)subq
group by key, constant, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n49
POSTHOOK: Output: default@outputtbl4_n2
POSTHOOK: Lineage: outputtbl4_n2.cnt EXPRESSION [(t2_n49)t2_n49.null, ]
POSTHOOK: Lineage: outputtbl4_n2.key1 EXPRESSION [(t2_n49)t2_n49.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl4_n2.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl4_n2.key3 SIMPLE [(t2_n49)t2_n49.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl4_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl4_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl4_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl4_n2
#### A masked pattern was here ####
1	1	11	1
2	1	12	1
3	1	13	1
7	1	17	1
8	1	18	1
8	1	28	1
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl4_n2
select key, constant3, val, count(1) from
(
SELECT key, constant as constant2, val, 2 as constant3 from 
(SELECT key, 1 as constant, val from T2_n49)subq
)subq2
group by key, constant3, val
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE outputTbl4_n2
select key, constant3, val, count(1) from
(
SELECT key, constant as constant2, val, 2 as constant3 from 
(SELECT key, 1 as constant, val from T2_n49)subq
)subq2
group by key, constant3, val
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n49
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), 2 (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2, _col3
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: false
                          GlobalTableId: 1
#### A masked pattern was here ####
                          NumFilesPerFileSink: 1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              properties:
                                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                                bucket_count -1
                                bucketing_version 2
                                column.name.delimiter ,
                                columns key1,key2,key3,cnt
                                columns.comments 
                                columns.types int:int:string:int
#### A masked pattern was here ####
                                name default.outputtbl4_n2
                                numFiles 2
                                numRows 6
                                rawDataSize 48
                                serialization.ddl struct outputtbl4_n2 { i32 key1, i32 key2, string key3, i32 cnt}
                                serialization.format 1
                                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                totalSize 54
#### A masked pattern was here ####
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.outputtbl4_n2
                          TotalFiles: 1
                          GatherStats: true
                          MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: t2_n49
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    SORTBUCKETCOLSPREFIX TRUE
                    bucket_count 2
                    bucket_field_name key,val
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,val
                    columns.comments 
                    columns.types string:string
#### A masked pattern was here ####
                    name default.t2_n49
                    numFiles 2
                    numRows 6
                    rawDataSize 24
                    serialization.ddl struct t2_n49 { string key, string val}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 30
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      SORTBUCKETCOLSPREFIX TRUE
                      bucket_count 2
                      bucket_field_name key,val
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,val
                      columns.comments 
                      columns.types string:string
#### A masked pattern was here ####
                      name default.t2_n49
                      numFiles 2
                      numRows 6
                      rawDataSize 24
                      serialization.ddl struct t2_n49 { string key, string val}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 30
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.t2_n49
                  name: default.t2_n49
            Truncated Path -> Alias:
              /t2_n49 [t2_n49]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key1,key2,key3,cnt
                columns.comments 
                columns.types int:int:string:int
#### A masked pattern was here ####
                name default.outputtbl4_n2
                numFiles 2
                numRows 6
                rawDataSize 48
                serialization.ddl struct outputtbl4_n2 { i32 key1, i32 key2, string key3, i32 cnt}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 54
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl4_n2

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n2
select key, constant3, val, count(1) from
(
SELECT key, constant as constant2, val, 2 as constant3 from 
(SELECT key, 1 as constant, val from T2_n49)subq
)subq2
group by key, constant3, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n49
PREHOOK: Output: default@outputtbl4_n2
POSTHOOK: query: INSERT OVERWRITE TABLE outputTbl4_n2
select key, constant3, val, count(1) from
(
SELECT key, constant as constant2, val, 2 as constant3 from 
(SELECT key, 1 as constant, val from T2_n49)subq
)subq2
group by key, constant3, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n49
POSTHOOK: Output: default@outputtbl4_n2
POSTHOOK: Lineage: outputtbl4_n2.cnt EXPRESSION [(t2_n49)t2_n49.null, ]
POSTHOOK: Lineage: outputtbl4_n2.key1 EXPRESSION [(t2_n49)t2_n49.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl4_n2.key2 SIMPLE []
POSTHOOK: Lineage: outputtbl4_n2.key3 SIMPLE [(t2_n49)t2_n49.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: SELECT * FROM outputTbl4_n2
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl4_n2
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM outputTbl4_n2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl4_n2
#### A masked pattern was here ####
1	2	11	1
2	2	12	1
3	2	13	1
7	2	17	1
8	2	18	1
8	2	28	1
PREHOOK: query: CREATE TABLE DEST1_n80(key INT, cnt INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DEST1_n80
POSTHOOK: query: CREATE TABLE DEST1_n80(key INT, cnt INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DEST1_n80
PREHOOK: query: CREATE TABLE DEST2_n18(key INT, val STRING, cnt INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@DEST2_n18
POSTHOOK: query: CREATE TABLE DEST2_n18(key INT, val STRING, cnt INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@DEST2_n18
PREHOOK: query: EXPLAIN
FROM T2_n49
INSERT OVERWRITE TABLE DEST1_n80 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n18 SELECT key, val, count(1) GROUP BY key, val
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
FROM T2_n49
INSERT OVERWRITE TABLE DEST1_n80 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n18 SELECT key, val, count(1) GROUP BY key, val
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 31)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n49
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count(1)
                      bucketGroup: true
                      keys: key (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: bigint)
                  Select Operator
                    expressions: key (type: string), val (type: string)
                    outputColumnNames: key, val
                    Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count(1)
                      keys: key (type: string), val (type: string)
                      mode: final
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: UDFToInteger(_col0) (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        File Output Operator
                          compressed: true
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.dest2_n18
            Execution mode: vectorized
        Reducer 2 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: true
                    Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.dest1_n80

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1_n80

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest2_n18

  Stage: Stage-4
    Stats Work
      Basic Stats Work:

PREHOOK: query: FROM T2_n49
INSERT OVERWRITE TABLE DEST1_n80 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n18 SELECT key, val, count(1) GROUP BY key, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n49
PREHOOK: Output: default@dest1_n80
PREHOOK: Output: default@dest2_n18
POSTHOOK: query: FROM T2_n49
INSERT OVERWRITE TABLE DEST1_n80 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n18 SELECT key, val, count(1) GROUP BY key, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n49
POSTHOOK: Output: default@dest1_n80
POSTHOOK: Output: default@dest2_n18
POSTHOOK: Lineage: dest1_n80.cnt EXPRESSION [(t2_n49)t2_n49.null, ]
POSTHOOK: Lineage: dest1_n80.key EXPRESSION [(t2_n49)t2_n49.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: dest2_n18.cnt EXPRESSION [(t2_n49)t2_n49.null, ]
POSTHOOK: Lineage: dest2_n18.key EXPRESSION [(t2_n49)t2_n49.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: dest2_n18.val SIMPLE [(t2_n49)t2_n49.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: select * from DEST1_n80
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n80
#### A masked pattern was here ####
POSTHOOK: query: select * from DEST1_n80
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n80
#### A masked pattern was here ####
1	1
2	1
3	1
7	1
8	2
PREHOOK: query: select * from DEST2_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@dest2_n18
#### A masked pattern was here ####
POSTHOOK: query: select * from DEST2_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest2_n18
#### A masked pattern was here ####
1	11	1
2	12	1
3	13	1
7	17	1
8	18	1
8	28	1
PREHOOK: query: EXPLAIN
FROM (select key, val from T2_n49 where key = 8) x
INSERT OVERWRITE TABLE DEST1_n80 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n18 SELECT key, val, count(1) GROUP BY key, val
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
FROM (select key, val from T2_n49 where key = 8) x
INSERT OVERWRITE TABLE DEST1_n80 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n18 SELECT key, val, count(1) GROUP BY key, val
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0
  Stage-1 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 31)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: t2_n49
                  Statistics: Num rows: 6 Data size: 24 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (UDFToDouble(key) = 8.0D) (type: boolean)
                    Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), val (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                      Select Operator
                        expressions: _col0 (type: string)
                        outputColumnNames: _col0
                        Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                        Group By Operator
                          aggregations: count(1)
                          bucketGroup: true
                          keys: _col0 (type: string)
                          mode: hash
                          outputColumnNames: _col0, _col1
                          Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                          Reduce Output Operator
                            key expressions: _col0 (type: string)
                            sort order: +
                            Map-reduce partition columns: _col0 (type: string)
                            Statistics: Num rows: 3 Data size: 12 Basic stats: COMPLETE Column stats: NONE
                            value expressions: _col1 (type: bigint)
                      Group By Operator
                        aggregations: count(1)
                        keys: _col0 (type: string), _col1 (type: string)
                        mode: final
                        outputColumnNames: _col0, _col1, _col2
                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                        Select Operator
                          expressions: UDFToInteger(_col0) (type: int), _col1 (type: string), UDFToInteger(_col2) (type: int)
                          outputColumnNames: _col0, _col1, _col2
                          Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                          File Output Operator
                            compressed: true
                            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                            table:
                                input format: org.apache.hadoop.mapred.TextInputFormat
                                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                                name: default.dest2_n18
            Execution mode: vectorized
        Reducer 2 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: UDFToInteger(_col0) (type: int), UDFToInteger(_col1) (type: int)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: true
                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.dest1_n80

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1_n80

  Stage: Stage-3
    Stats Work
      Basic Stats Work:

  Stage: Stage-1
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest2_n18

  Stage: Stage-4
    Stats Work
      Basic Stats Work:

PREHOOK: query: FROM (select key, val from T2_n49 where key = 8) x
INSERT OVERWRITE TABLE DEST1_n80 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n18 SELECT key, val, count(1) GROUP BY key, val
PREHOOK: type: QUERY
PREHOOK: Input: default@t2_n49
PREHOOK: Output: default@dest1_n80
PREHOOK: Output: default@dest2_n18
POSTHOOK: query: FROM (select key, val from T2_n49 where key = 8) x
INSERT OVERWRITE TABLE DEST1_n80 SELECT key, count(1) GROUP BY key
INSERT OVERWRITE TABLE DEST2_n18 SELECT key, val, count(1) GROUP BY key, val
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t2_n49
POSTHOOK: Output: default@dest1_n80
POSTHOOK: Output: default@dest2_n18
POSTHOOK: Lineage: dest1_n80.cnt EXPRESSION [(t2_n49)t2_n49.null, ]
POSTHOOK: Lineage: dest1_n80.key EXPRESSION [(t2_n49)t2_n49.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: dest2_n18.cnt EXPRESSION [(t2_n49)t2_n49.null, ]
POSTHOOK: Lineage: dest2_n18.key EXPRESSION [(t2_n49)t2_n49.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: dest2_n18.val SIMPLE [(t2_n49)t2_n49.FieldSchema(name:val, type:string, comment:null), ]
PREHOOK: query: select * from DEST1_n80
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1_n80
#### A masked pattern was here ####
POSTHOOK: query: select * from DEST1_n80
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1_n80
#### A masked pattern was here ####
8	2
PREHOOK: query: select * from DEST2_n18
PREHOOK: type: QUERY
PREHOOK: Input: default@dest2_n18
#### A masked pattern was here ####
POSTHOOK: query: select * from DEST2_n18
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest2_n18
#### A masked pattern was here ####
8	18	1
8	28	1
