PREHOOK: query: drop table hive_test_src_n3
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table hive_test_src_n3
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table hive_test_dst_n0
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table hive_test_dst_n0
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table hive_test_src_n3 ( col1 string ) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@hive_test_src_n3
POSTHOOK: query: create table hive_test_src_n3 ( col1 string ) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@hive_test_src_n3
PREHOOK: query: explain extended
load data local inpath '../../data/files/test.dat' overwrite into table hive_test_src_n3
PREHOOK: type: LOAD
POSTHOOK: query: explain extended
load data local inpath '../../data/files/test.dat' overwrite into table hive_test_src_n3
POSTHOOK: type: LOAD
STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"col1":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns col1
                columns.comments 
                columns.types string
#### A masked pattern was here ####
                name default.hive_test_src_n3
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct hive_test_src_n3 { string col1}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.hive_test_src_n3

  Stage: Stage-1
    Stats Work
      Basic Stats Work:

PREHOOK: query: load data local inpath '../../data/files/test.dat' overwrite into table hive_test_src_n3
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@hive_test_src_n3
POSTHOOK: query: load data local inpath '../../data/files/test.dat' overwrite into table hive_test_src_n3
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@hive_test_src_n3
PREHOOK: query: desc formatted hive_test_src_n3
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@hive_test_src_n3
POSTHOOK: query: desc formatted hive_test_src_n3
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@hive_test_src_n3
# col_name            	data_type           	comment             
col1                	string              	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	bucketing_version   	2                   
	numFiles            	1                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	11                  
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: create table hive_test_dst_n0 ( col1 string ) partitioned by ( pcol1 string , pcol2 string) stored as sequencefile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@hive_test_dst_n0
POSTHOOK: query: create table hive_test_dst_n0 ( col1 string ) partitioned by ( pcol1 string , pcol2 string) stored as sequencefile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@hive_test_dst_n0
PREHOOK: query: insert overwrite table hive_test_dst_n0 partition ( pcol1='test_part', pCol2='test_Part') select col1 from hive_test_src_n3
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_src_n3
PREHOOK: Output: default@hive_test_dst_n0@pcol1=test_part/pcol2=test_Part
POSTHOOK: query: insert overwrite table hive_test_dst_n0 partition ( pcol1='test_part', pCol2='test_Part') select col1 from hive_test_src_n3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_src_n3
POSTHOOK: Output: default@hive_test_dst_n0@pcol1=test_part/pcol2=test_Part
POSTHOOK: Lineage: hive_test_dst_n0 PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src_n3)hive_test_src_n3.FieldSchema(name:col1, type:string, comment:null), ]
PREHOOK: query: select * from hive_test_dst_n0 where pcol1='test_part' and pcol2='test_Part'
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst_n0
PREHOOK: Input: default@hive_test_dst_n0@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst_n0 where pcol1='test_part' and pcol2='test_Part'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst_n0
POSTHOOK: Input: default@hive_test_dst_n0@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
1	test_part	test_Part
2	test_part	test_Part
3	test_part	test_Part
4	test_part	test_Part
5	test_part	test_Part
6	test_part	test_Part
PREHOOK: query: select count(1) from hive_test_dst_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from hive_test_dst_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
6
PREHOOK: query: insert overwrite table hive_test_dst_n0 partition ( pCol1='test_part', pcol2='test_Part') select col1 from hive_test_src_n3
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_src_n3
PREHOOK: Output: default@hive_test_dst_n0@pcol1=test_part/pcol2=test_Part
POSTHOOK: query: insert overwrite table hive_test_dst_n0 partition ( pCol1='test_part', pcol2='test_Part') select col1 from hive_test_src_n3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_src_n3
POSTHOOK: Output: default@hive_test_dst_n0@pcol1=test_part/pcol2=test_Part
POSTHOOK: Lineage: hive_test_dst_n0 PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src_n3)hive_test_src_n3.FieldSchema(name:col1, type:string, comment:null), ]
PREHOOK: query: select * from hive_test_dst_n0 where pcol1='test_part' and pcol2='test_part'
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst_n0 where pcol1='test_part' and pcol2='test_part'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
PREHOOK: query: select count(1) from hive_test_dst_n0
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
POSTHOOK: query: select count(1) from hive_test_dst_n0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
6
PREHOOK: query: select * from hive_test_dst_n0 where pcol1='test_part'
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst_n0
PREHOOK: Input: default@hive_test_dst_n0@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst_n0 where pcol1='test_part'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst_n0
POSTHOOK: Input: default@hive_test_dst_n0@pcol1=test_part/pcol2=test_Part
#### A masked pattern was here ####
1	test_part	test_Part
2	test_part	test_Part
3	test_part	test_Part
4	test_part	test_Part
5	test_part	test_Part
6	test_part	test_Part
PREHOOK: query: select * from hive_test_dst_n0 where pcol1='test_part' and pcol2='test_part'
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst_n0 where pcol1='test_part' and pcol2='test_part'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
PREHOOK: query: select * from hive_test_dst_n0 where pcol1='test_Part'
PREHOOK: type: QUERY
PREHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
POSTHOOK: query: select * from hive_test_dst_n0 where pcol1='test_Part'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@hive_test_dst_n0
#### A masked pattern was here ####
PREHOOK: query: describe formatted hive_test_dst_n0
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@hive_test_dst_n0
POSTHOOK: query: describe formatted hive_test_dst_n0
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@hive_test_dst_n0
# col_name            	data_type           	comment             
col1                	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
pcol1               	string              	                    
pcol2               	string              	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\"}
	bucketing_version   	2                   
	numFiles            	1                   
	numPartitions       	1                   
	numRows             	6                   
	rawDataSize         	6                   
	totalSize           	171                 
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.SequenceFileInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: drop table hive_test_src_n3
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@hive_test_src_n3
PREHOOK: Output: default@hive_test_src_n3
POSTHOOK: query: drop table hive_test_src_n3
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@hive_test_src_n3
POSTHOOK: Output: default@hive_test_src_n3
PREHOOK: query: drop table hive_test_dst_n0
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@hive_test_dst_n0
PREHOOK: Output: default@hive_test_dst_n0
POSTHOOK: query: drop table hive_test_dst_n0
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@hive_test_dst_n0
POSTHOOK: Output: default@hive_test_dst_n0
