PREHOOK: query: create table inputTbl1(key string, ds string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@inputTbl1
POSTHOOK: query: create table inputTbl1(key string, ds string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@inputTbl1
PREHOOK: query: create table outputTbl1(key string, `values` bigint) partitioned by (ds string) stored as textfile
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@outputTbl1
POSTHOOK: query: create table outputTbl1(key string, `values` bigint) partitioned by (ds string) stored as textfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@outputTbl1
PREHOOK: query: load data local inpath '../../data/files/T1.txt' into table inputTbl1
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@inputtbl1
POSTHOOK: query: load data local inpath '../../data/files/T1.txt' into table inputTbl1
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@inputtbl1
PREHOOK: query: explain
insert overwrite table outputTbl1 partition (ds)
SELECT *
FROM (
  SELECT key, count(1) as `values`, ds from inputTbl1 group by key, ds
  UNION ALL
  SELECT key, count(1) as `values`, ds from inputTbl1 group by key, ds
) a
PREHOOK: type: QUERY
POSTHOOK: query: explain
insert overwrite table outputTbl1 partition (ds)
SELECT *
FROM (
  SELECT key, count(1) as `values`, ds from inputTbl1 group by key, ds
  UNION ALL
  SELECT key, count(1) as `values`, ds from inputTbl1 group by key, ds
) a
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 2)
        Reducer 4 <- Map 1 (GROUP, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: inputtbl1
                  Statistics: Num rows: 1 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: string), ds (type: string)
                    outputColumnNames: key, ds
                    Statistics: Num rows: 1 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string), ds (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 1 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string)
                        sort order: ++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                        Statistics: Num rows: 1 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col2 (type: bigint)
        Reducer 2 
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col2 (type: bigint), _col1 (type: string)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 60 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1
        Reducer 4 
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col2 (type: bigint), _col1 (type: string)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 30 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 2 Data size: 60 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.outputtbl1

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            ds 
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.outputtbl1

PREHOOK: query: insert overwrite table outputTbl1 partition (ds)
SELECT *
FROM (
  SELECT key, count(1) as `values`, ds from inputTbl1 group by key, ds
  UNION ALL
  SELECT key, count(1) as `values`, ds from inputTbl1 group by key, ds
) a
PREHOOK: type: QUERY
PREHOOK: Input: default@inputtbl1
PREHOOK: Output: default@outputtbl1
POSTHOOK: query: insert overwrite table outputTbl1 partition (ds)
SELECT *
FROM (
  SELECT key, count(1) as `values`, ds from inputTbl1 group by key, ds
  UNION ALL
  SELECT key, count(1) as `values`, ds from inputTbl1 group by key, ds
) a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@inputtbl1
POSTHOOK: Output: default@outputtbl1@ds=11
POSTHOOK: Output: default@outputtbl1@ds=12
POSTHOOK: Output: default@outputtbl1@ds=13
POSTHOOK: Output: default@outputtbl1@ds=17
POSTHOOK: Output: default@outputtbl1@ds=18
POSTHOOK: Output: default@outputtbl1@ds=28
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=11).key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=11).values EXPRESSION [(inputtbl1)inputtbl1.null, ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=12).key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=12).values EXPRESSION [(inputtbl1)inputtbl1.null, ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=13).key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=13).values EXPRESSION [(inputtbl1)inputtbl1.null, ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=17).key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=17).values EXPRESSION [(inputtbl1)inputtbl1.null, ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=18).key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=18).values EXPRESSION [(inputtbl1)inputtbl1.null, ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=28).key EXPRESSION [(inputtbl1)inputtbl1.FieldSchema(name:key, type:string, comment:null), ]
POSTHOOK: Lineage: outputtbl1 PARTITION(ds=28).values EXPRESSION [(inputtbl1)inputtbl1.null, ]
PREHOOK: query: desc formatted outputTbl1
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@outputtbl1
POSTHOOK: query: desc formatted outputTbl1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@outputtbl1
# col_name            	data_type           	comment             
	 	 
key                 	string              	                    
values              	bigint              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
	 	 
ds                  	string              	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	MANAGED_TABLE       	 
Table Parameters:	 	 
	numFiles            	12                  
	numPartitions       	6                   
	numRows             	0                   
	rawDataSize         	0                   
	totalSize           	48                  
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: show partitions outputTbl1
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@outputtbl1
POSTHOOK: query: show partitions outputTbl1
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@outputtbl1
ds=11
ds=12
ds=13
ds=17
ds=18
ds=28
PREHOOK: query: select * from outputTbl1 where ds = '11'
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1
PREHOOK: Input: default@outputtbl1@ds=11
#### A masked pattern was here ####
POSTHOOK: query: select * from outputTbl1 where ds = '11'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1
POSTHOOK: Input: default@outputtbl1@ds=11
#### A masked pattern was here ####
1	1	11
1	1	11
PREHOOK: query: select * from outputTbl1 where ds = '18'
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1
PREHOOK: Input: default@outputtbl1@ds=18
#### A masked pattern was here ####
POSTHOOK: query: select * from outputTbl1 where ds = '18'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1
POSTHOOK: Input: default@outputtbl1@ds=18
#### A masked pattern was here ####
8	1	18
8	1	18
PREHOOK: query: select * from outputTbl1 where ds is not null
PREHOOK: type: QUERY
PREHOOK: Input: default@outputtbl1
PREHOOK: Input: default@outputtbl1@ds=11
PREHOOK: Input: default@outputtbl1@ds=12
PREHOOK: Input: default@outputtbl1@ds=13
PREHOOK: Input: default@outputtbl1@ds=17
PREHOOK: Input: default@outputtbl1@ds=18
PREHOOK: Input: default@outputtbl1@ds=28
#### A masked pattern was here ####
POSTHOOK: query: select * from outputTbl1 where ds is not null
POSTHOOK: type: QUERY
POSTHOOK: Input: default@outputtbl1
POSTHOOK: Input: default@outputtbl1@ds=11
POSTHOOK: Input: default@outputtbl1@ds=12
POSTHOOK: Input: default@outputtbl1@ds=13
POSTHOOK: Input: default@outputtbl1@ds=17
POSTHOOK: Input: default@outputtbl1@ds=18
POSTHOOK: Input: default@outputtbl1@ds=28
#### A masked pattern was here ####
1	1	11
1	1	11
2	1	12
2	1	12
3	1	13
3	1	13
7	1	17
7	1	17
8	1	18
8	1	18
8	1	28
8	1	28
