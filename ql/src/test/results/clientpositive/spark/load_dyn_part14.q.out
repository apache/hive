PREHOOK: query: create table if not exists nzhang_part14 (key string)
  partitioned by (value string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@nzhang_part14
POSTHOOK: query: create table if not exists nzhang_part14 (key string)
  partitioned by (value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@nzhang_part14
PREHOOK: query: describe extended nzhang_part14
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@nzhang_part14
POSTHOOK: query: describe extended nzhang_part14
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@nzhang_part14
key                 	string              	                    
value               	string              	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
value               	string              	                    
	 	 
#### A masked pattern was here ####
PREHOOK: query: explain
insert overwrite table nzhang_part14 partition(value) 
select key, value from (
  select * from (select 'k1' as key, cast(null as string) as value from src limit 2)a 
  union all
  select * from (select 'k2' as key, '' as value from src limit 2)b
  union all 
  select * from (select 'k3' as key, ' ' as value from src limit 2)c
) T
PREHOOK: type: QUERY
POSTHOOK: query: explain
insert overwrite table nzhang_part14 partition(value) 
select key, value from (
  select * from (select 'k1' as key, cast(null as string) as value from src limit 2)a 
  union all
  select * from (select 'k2' as key, '' as value from src limit 2)b
  union all 
  select * from (select 'k3' as key, ' ' as value from src limit 2)c
) T
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 1)
        Reducer 4 <- Map 1 (GROUP, 1)
        Reducer 6 <- Map 1 (GROUP, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
                  Select Operator
                    Statistics: Num rows: 500 Data size: 2000 Basic stats: COMPLETE Column stats: COMPLETE
                    Limit
                      Number of rows: 2
                      Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                        TopN Hash Memory Usage: 0.1
            Execution mode: vectorized
        Reducer 2 
            Execution mode: vectorized
            Reduce Operator Tree:
              Limit
                Number of rows: 2
                Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'k1' (type: string), null (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 256 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 6 Data size: 938 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.nzhang_part14
        Reducer 4 
            Execution mode: vectorized
            Reduce Operator Tree:
              Limit
                Number of rows: 2
                Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'k2' (type: string), '' (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 340 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 6 Data size: 938 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.nzhang_part14
        Reducer 6 
            Execution mode: vectorized
            Reduce Operator Tree:
              Limit
                Number of rows: 2
                Statistics: Num rows: 2 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'k3' (type: string), ' ' (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 2 Data size: 342 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 6 Data size: 938 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        name: default.nzhang_part14

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            value 
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.nzhang_part14

  Stage: Stage-2
    Stats Work
      Basic Stats Work:

PREHOOK: query: insert overwrite table nzhang_part14 partition(value) 
select key, value from (
  select * from (select 'k1' as key, cast(null as string) as value from src limit 2)a 
  union all
  select * from (select 'k2' as key, '' as value from src limit 2)b
  union all 
  select * from (select 'k3' as key, ' ' as value from src limit 2)c
) T
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@nzhang_part14
POSTHOOK: query: insert overwrite table nzhang_part14 partition(value) 
select key, value from (
  select * from (select 'k1' as key, cast(null as string) as value from src limit 2)a 
  union all
  select * from (select 'k2' as key, '' as value from src limit 2)b
  union all 
  select * from (select 'k3' as key, ' ' as value from src limit 2)c
) T
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@nzhang_part14@value= 
POSTHOOK: Output: default@nzhang_part14@value=__HIVE_DEFAULT_PARTITION__
POSTHOOK: Lineage: nzhang_part14 PARTITION(value= ).key EXPRESSION []
POSTHOOK: Lineage: nzhang_part14 PARTITION(value=__HIVE_DEFAULT_PARTITION__).key EXPRESSION []
PREHOOK: query: show partitions nzhang_part14
PREHOOK: type: SHOWPARTITIONS
PREHOOK: Input: default@nzhang_part14
POSTHOOK: query: show partitions nzhang_part14
POSTHOOK: type: SHOWPARTITIONS
POSTHOOK: Input: default@nzhang_part14
value= 
value=__HIVE_DEFAULT_PARTITION__
PREHOOK: query: select * from nzhang_part14 where value <> 'a'
PREHOOK: type: QUERY
PREHOOK: Input: default@nzhang_part14
PREHOOK: Input: default@nzhang_part14@value= 
PREHOOK: Input: default@nzhang_part14@value=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
POSTHOOK: query: select * from nzhang_part14 where value <> 'a'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@nzhang_part14
POSTHOOK: Input: default@nzhang_part14@value= 
POSTHOOK: Input: default@nzhang_part14@value=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
k1	__HIVE_DEFAULT_PARTITION__
k1	__HIVE_DEFAULT_PARTITION__
k2	__HIVE_DEFAULT_PARTITION__
k2	__HIVE_DEFAULT_PARTITION__
k3	 
k3	 
