PREHOOK: query: create table vectortab2k_n7(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2k_n7
POSTHOOK: query: create table vectortab2k_n7(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2k_n7
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab2k' OVERWRITE INTO TABLE vectortab2k_n7
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@vectortab2k_n7
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/vectortab2k' OVERWRITE INTO TABLE vectortab2k_n7
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@vectortab2k_n7
PREHOOK: query: create table vectortab2korc_n6(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@vectortab2korc_n6
POSTHOOK: query: create table vectortab2korc_n6(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            dc decimal(38,18),
            bo boolean,
            s string,
            s2 string,
            ts timestamp,
            ts2 timestamp,
            dt date)
STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@vectortab2korc_n6
PREHOOK: query: INSERT INTO TABLE vectortab2korc_n6 SELECT * FROM vectortab2k_n7
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2k_n7
PREHOOK: Output: default@vectortab2korc_n6
POSTHOOK: query: INSERT INTO TABLE vectortab2korc_n6 SELECT * FROM vectortab2k_n7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2k_n7
POSTHOOK: Output: default@vectortab2korc_n6
POSTHOOK: Lineage: vectortab2korc_n6.b SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:b, type:bigint, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.bo SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:bo, type:boolean, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.d SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:d, type:double, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.dc SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:dc, type:decimal(38,18), comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.dt SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:dt, type:date, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.f SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:f, type:float, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.i SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:i, type:int, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.s SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:s, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.s2 SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:s2, type:string, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.si SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:si, type:smallint, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.t SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:t, type:tinyint, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.ts SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:ts, type:timestamp, comment:null), ]
POSTHOOK: Lineage: vectortab2korc_n6.ts2 SIMPLE [(vectortab2k_n7)vectortab2k_n7.FieldSchema(name:ts2, type:timestamp, comment:null), ]
PREHOOK: query: explain vectorization expression
select bo, max(b) from vectortab2korc_n6 group by bo order by bo desc
PREHOOK: type: QUERY
POSTHOOK: query: explain vectorization expression
select bo, max(b) from vectortab2korc_n6 group by bo order by bo desc
POSTHOOK: type: QUERY
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 2)
        Reducer 3 <- Reducer 2 (SORT, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: vectortab2korc_n6
                  Statistics: Num rows: 2000 Data size: 918712 Basic stats: COMPLETE Column stats: NONE
                  TableScan Vectorization:
                      native: true
                  Select Operator
                    expressions: b (type: bigint), bo (type: boolean)
                    outputColumnNames: b, bo
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [3, 7]
                    Statistics: Num rows: 2000 Data size: 918712 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: max(b)
                      Group By Vectorization:
                          aggregators: VectorUDAFMaxLong(col 3:bigint) -> bigint
                          className: VectorGroupByOperator
                          groupByMode: HASH
                          keyExpressions: col 7:boolean
                          native: false
                          vectorProcessingMode: HASH
                          projectedOutputColumnNums: [0]
                      keys: bo (type: boolean)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 2000 Data size: 918712 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: boolean)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: boolean)
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkLongOperator
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine spark IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                        Statistics: Num rows: 2000 Data size: 918712 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: bigint)
            Execution mode: vectorized
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: []
                featureSupportInUse: []
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
        Reducer 2 
            Execution mode: vectorized
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine spark IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0)
                Group By Vectorization:
                    aggregators: VectorUDAFMaxLong(col 1:bigint) -> bigint
                    className: VectorGroupByOperator
                    groupByMode: MERGEPARTIAL
                    keyExpressions: col 0:boolean
                    native: false
                    vectorProcessingMode: MERGE_PARTIAL
                    projectedOutputColumnNums: [0]
                keys: KEY._col0 (type: boolean)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 1000 Data size: 459356 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: boolean)
                  sort order: -
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkObjectHashOperator
                      native: true
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine spark IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                  Statistics: Num rows: 1000 Data size: 459356 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col1 (type: bigint)
        Reducer 3 
            Execution mode: vectorized
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine spark IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: boolean), VALUE._col0 (type: bigint)
                outputColumnNames: _col0, _col1
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1]
                Statistics: Num rows: 1000 Data size: 459356 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 1000 Data size: 459356 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select bo, max(b) from vectortab2korc_n6 group by bo order by bo desc
PREHOOK: type: QUERY
PREHOOK: Input: default@vectortab2korc_n6
#### A masked pattern was here ####
POSTHOOK: query: select bo, max(b) from vectortab2korc_n6 group by bo order by bo desc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@vectortab2korc_n6
#### A masked pattern was here ####
true	9211455920344088576
false	9209153648361848832
NULL	9180098147855769600
