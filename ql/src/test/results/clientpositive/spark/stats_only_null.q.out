PREHOOK: query: CREATE TABLE temps_null(a double, b int, c STRING, d smallint) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@temps_null
POSTHOOK: query: CREATE TABLE temps_null(a double, b int, c STRING, d smallint) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@temps_null
PREHOOK: query: CREATE TABLE stats_null(a double, b int, c STRING, d smallint) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stats_null
POSTHOOK: query: CREATE TABLE stats_null(a double, b int, c STRING, d smallint) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stats_null
PREHOOK: query: CREATE TABLE stats_null_part(a double, b int, c STRING, d smallint) partitioned by (dt string) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stats_null_part
POSTHOOK: query: CREATE TABLE stats_null_part(a double, b int, c STRING, d smallint) partitioned by (dt string) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stats_null_part
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/null.txt' INTO TABLE temps_null
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@temps_null
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/null.txt' INTO TABLE temps_null
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@temps_null
PREHOOK: query: insert overwrite table stats_null select * from temps_null
PREHOOK: type: QUERY
PREHOOK: Input: default@temps_null
PREHOOK: Output: default@stats_null
POSTHOOK: query: insert overwrite table stats_null select * from temps_null
POSTHOOK: type: QUERY
POSTHOOK: Input: default@temps_null
POSTHOOK: Output: default@stats_null
POSTHOOK: Lineage: stats_null.a SIMPLE [(temps_null)temps_null.FieldSchema(name:a, type:double, comment:null), ]
POSTHOOK: Lineage: stats_null.b SIMPLE [(temps_null)temps_null.FieldSchema(name:b, type:int, comment:null), ]
POSTHOOK: Lineage: stats_null.c SIMPLE [(temps_null)temps_null.FieldSchema(name:c, type:string, comment:null), ]
POSTHOOK: Lineage: stats_null.d SIMPLE [(temps_null)temps_null.FieldSchema(name:d, type:smallint, comment:null), ]
PREHOOK: query: insert into table stats_null_part partition(dt='2010') select * from temps_null where d <=5
PREHOOK: type: QUERY
PREHOOK: Input: default@temps_null
PREHOOK: Output: default@stats_null_part@dt=2010
POSTHOOK: query: insert into table stats_null_part partition(dt='2010') select * from temps_null where d <=5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@temps_null
POSTHOOK: Output: default@stats_null_part@dt=2010
POSTHOOK: Lineage: stats_null_part PARTITION(dt=2010).a SIMPLE [(temps_null)temps_null.FieldSchema(name:a, type:double, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=2010).b SIMPLE [(temps_null)temps_null.FieldSchema(name:b, type:int, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=2010).c SIMPLE [(temps_null)temps_null.FieldSchema(name:c, type:string, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=2010).d SIMPLE [(temps_null)temps_null.FieldSchema(name:d, type:smallint, comment:null), ]
PREHOOK: query: insert into table stats_null_part partition(dt='2011') select * from temps_null where d > 5
PREHOOK: type: QUERY
PREHOOK: Input: default@temps_null
PREHOOK: Output: default@stats_null_part@dt=2011
POSTHOOK: query: insert into table stats_null_part partition(dt='2011') select * from temps_null where d > 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@temps_null
POSTHOOK: Output: default@stats_null_part@dt=2011
POSTHOOK: Lineage: stats_null_part PARTITION(dt=2011).a SIMPLE [(temps_null)temps_null.FieldSchema(name:a, type:double, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=2011).b SIMPLE [(temps_null)temps_null.FieldSchema(name:b, type:int, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=2011).c SIMPLE [(temps_null)temps_null.FieldSchema(name:c, type:string, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=2011).d SIMPLE [(temps_null)temps_null.FieldSchema(name:d, type:smallint, comment:null), ]
PREHOOK: query: explain 
select count(*), count(a), count(b), count(c), count(d) from stats_null
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select count(*), count(a), count(b), count(c), count(d) from stats_null
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: stats_null
                  Statistics: Num rows: 10 Data size: 2000 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: a (type: double), b (type: int), c (type: string), d (type: smallint)
                    outputColumnNames: a, b, c, d
                    Statistics: Num rows: 10 Data size: 2000 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count(), count(a), count(b), count(c), count(d)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
                      Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint), _col1 (type: bigint), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: bigint)
            Execution mode: vectorized
        Reducer 2 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0), count(VALUE._col1), count(VALUE._col2), count(VALUE._col3), count(VALUE._col4)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: explain 
select count(*), count(a), count(b), count(c), count(d) from stats_null_part
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select count(*), count(a), count(b), count(c), count(d) from stats_null_part
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: stats_null_part
                  Statistics: Num rows: 10 Data size: 2120 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: a (type: double), b (type: int), c (type: string), d (type: smallint)
                    outputColumnNames: a, b, c, d
                    Statistics: Num rows: 10 Data size: 2120 Basic stats: COMPLETE Column stats: NONE
                    Group By Operator
                      aggregations: count(), count(a), count(b), count(c), count(d)
                      mode: hash
                      outputColumnNames: _col0, _col1, _col2, _col3, _col4
                      Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        sort order: 
                        Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col0 (type: bigint), _col1 (type: bigint), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: bigint)
            Execution mode: vectorized
        Reducer 2 
            Execution mode: vectorized
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0), count(VALUE._col1), count(VALUE._col2), count(VALUE._col3), count(VALUE._col4)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 240 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: analyze table stats_null compute statistics for columns a,b,c,d
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@stats_null
PREHOOK: Output: default@stats_null
#### A masked pattern was here ####
POSTHOOK: query: analyze table stats_null compute statistics for columns a,b,c,d
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@stats_null
POSTHOOK: Output: default@stats_null
#### A masked pattern was here ####
PREHOOK: query: analyze table stats_null_part partition(dt='2010') compute statistics for columns a,b,c,d
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@stats_null_part
PREHOOK: Input: default@stats_null_part@dt=2010
PREHOOK: Output: default@stats_null_part
PREHOOK: Output: default@stats_null_part@dt=2010
#### A masked pattern was here ####
POSTHOOK: query: analyze table stats_null_part partition(dt='2010') compute statistics for columns a,b,c,d
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@stats_null_part
POSTHOOK: Input: default@stats_null_part@dt=2010
POSTHOOK: Output: default@stats_null_part
POSTHOOK: Output: default@stats_null_part@dt=2010
#### A masked pattern was here ####
PREHOOK: query: analyze table stats_null_part partition(dt='2011') compute statistics for columns a,b,c,d
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@stats_null_part
PREHOOK: Input: default@stats_null_part@dt=2011
PREHOOK: Output: default@stats_null_part
PREHOOK: Output: default@stats_null_part@dt=2011
#### A masked pattern was here ####
POSTHOOK: query: analyze table stats_null_part partition(dt='2011') compute statistics for columns a,b,c,d
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@stats_null_part
POSTHOOK: Input: default@stats_null_part@dt=2011
POSTHOOK: Output: default@stats_null_part
POSTHOOK: Output: default@stats_null_part@dt=2011
#### A masked pattern was here ####
PREHOOK: query: describe formatted stats_null_part partition (dt='2010')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_null_part
POSTHOOK: query: describe formatted stats_null_part partition (dt='2010')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_null_part
# col_name            	data_type           	comment             
a                   	double              	                    
b                   	int                 	                    
c                   	string              	                    
d                   	smallint            	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
dt                  	string              	                    
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[2010]              	 
Database:           	default             	 
Table:              	stats_null_part     	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"a\":\"true\",\"b\":\"true\",\"c\":\"true\",\"d\":\"true\"}}
	numFiles            	1                   
	numRows             	6                   
	rawDataSize         	71                  
	totalSize           	77                  
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: describe formatted stats_null_part partition (dt='2011')
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_null_part
POSTHOOK: query: describe formatted stats_null_part partition (dt='2011')
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_null_part
# col_name            	data_type           	comment             
a                   	double              	                    
b                   	int                 	                    
c                   	string              	                    
d                   	smallint            	                    
	 	 
# Partition Information	 	 
# col_name            	data_type           	comment             
dt                  	string              	                    
	 	 
# Detailed Partition Information	 	 
Partition Value:    	[2011]              	 
Database:           	default             	 
Table:              	stats_null_part     	 
#### A masked pattern was here ####
Partition Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"a\":\"true\",\"b\":\"true\",\"c\":\"true\",\"d\":\"true\"}}
	numFiles            	1                   
	numRows             	4                   
	rawDataSize         	49                  
	totalSize           	53                  
#### A masked pattern was here ####
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
Compressed:         	No                  	 
Num Buckets:        	-1                  	 
Bucket Columns:     	[]                  	 
Sort Columns:       	[]                  	 
Storage Desc Params:	 	 
	serialization.format	1                   
PREHOOK: query: explain 
select count(*), count(a), count(b), count(c), count(d) from stats_null
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select count(*), count(a), count(b), count(c), count(d) from stats_null
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: explain 
select count(*), count(a), count(b), count(c), count(d) from stats_null_part
PREHOOK: type: QUERY
POSTHOOK: query: explain 
select count(*), count(a), count(b), count(c), count(d) from stats_null_part
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

PREHOOK: query: select count(*), count(a), count(b), count(c), count(d) from stats_null
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_null
#### A masked pattern was here ####
POSTHOOK: query: select count(*), count(a), count(b), count(c), count(d) from stats_null
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_null
#### A masked pattern was here ####
10	8	8	10	10
PREHOOK: query: select count(*), count(a), count(b), count(c), count(d) from stats_null_part
PREHOOK: type: QUERY
PREHOOK: Input: default@stats_null_part
#### A masked pattern was here ####
POSTHOOK: query: select count(*), count(a), count(b), count(c), count(d) from stats_null_part
POSTHOOK: type: QUERY
POSTHOOK: Input: default@stats_null_part
#### A masked pattern was here ####
10	8	8	10	10
PREHOOK: query: drop table stats_null_part
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@stats_null_part
PREHOOK: Output: default@stats_null_part
POSTHOOK: query: drop table stats_null_part
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@stats_null_part
POSTHOOK: Output: default@stats_null_part
PREHOOK: query: CREATE TABLE stats_null_part(a double, b int, c STRING, d smallint) partitioned by (dt int) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@stats_null_part
POSTHOOK: query: CREATE TABLE stats_null_part(a double, b int, c STRING, d smallint) partitioned by (dt int) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@stats_null_part
PREHOOK: query: insert into table stats_null_part partition(dt) select a,b,c,d,b from temps_null
PREHOOK: type: QUERY
PREHOOK: Input: default@temps_null
PREHOOK: Output: default@stats_null_part
POSTHOOK: query: insert into table stats_null_part partition(dt) select a,b,c,d,b from temps_null
POSTHOOK: type: QUERY
POSTHOOK: Input: default@temps_null
POSTHOOK: Output: default@stats_null_part@dt=1
POSTHOOK: Output: default@stats_null_part@dt=__HIVE_DEFAULT_PARTITION__
POSTHOOK: Lineage: stats_null_part PARTITION(dt=1).a SIMPLE [(temps_null)temps_null.FieldSchema(name:a, type:double, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=1).b SIMPLE [(temps_null)temps_null.FieldSchema(name:b, type:int, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=1).c SIMPLE [(temps_null)temps_null.FieldSchema(name:c, type:string, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=1).d SIMPLE [(temps_null)temps_null.FieldSchema(name:d, type:smallint, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=__HIVE_DEFAULT_PARTITION__).a SIMPLE [(temps_null)temps_null.FieldSchema(name:a, type:double, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=__HIVE_DEFAULT_PARTITION__).b SIMPLE [(temps_null)temps_null.FieldSchema(name:b, type:int, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=__HIVE_DEFAULT_PARTITION__).c SIMPLE [(temps_null)temps_null.FieldSchema(name:c, type:string, comment:null), ]
POSTHOOK: Lineage: stats_null_part PARTITION(dt=__HIVE_DEFAULT_PARTITION__).d SIMPLE [(temps_null)temps_null.FieldSchema(name:d, type:smallint, comment:null), ]
PREHOOK: query: analyze table stats_null_part compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@stats_null_part
PREHOOK: Input: default@stats_null_part@dt=1
PREHOOK: Input: default@stats_null_part@dt=__HIVE_DEFAULT_PARTITION__
PREHOOK: Output: default@stats_null_part
PREHOOK: Output: default@stats_null_part@dt=1
PREHOOK: Output: default@stats_null_part@dt=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
POSTHOOK: query: analyze table stats_null_part compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@stats_null_part
POSTHOOK: Input: default@stats_null_part@dt=1
POSTHOOK: Input: default@stats_null_part@dt=__HIVE_DEFAULT_PARTITION__
POSTHOOK: Output: default@stats_null_part
POSTHOOK: Output: default@stats_null_part@dt=1
POSTHOOK: Output: default@stats_null_part@dt=__HIVE_DEFAULT_PARTITION__
#### A masked pattern was here ####
PREHOOK: query: describe formatted stats_null_part partition(dt = 1) a
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@stats_null_part
POSTHOOK: query: describe formatted stats_null_part partition(dt = 1) a
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@stats_null_part
col_name            	a                   	 	 	 	 	 	 	 	 	 	 
data_type           	double              	 	 	 	 	 	 	 	 	 	 
min                 	1.0                 	 	 	 	 	 	 	 	 	 	 
max                 	1.0                 	 	 	 	 	 	 	 	 	 	 
num_nulls           	1                   	 	 	 	 	 	 	 	 	 	 
distinct_count      	1                   	 	 	 	 	 	 	 	 	 	 
avg_col_len         	                    	 	 	 	 	 	 	 	 	 	 
max_col_len         	                    	 	 	 	 	 	 	 	 	 	 
num_trues           	                    	 	 	 	 	 	 	 	 	 	 
num_falses          	                    	 	 	 	 	 	 	 	 	 	 
bitVector           	                    	 	 	 	 	 	 	 	 	 	 
comment             	from deserializer   	 	 	 	 	 	 	 	 	 	 
PREHOOK: query: drop table stats_null
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@stats_null
PREHOOK: Output: default@stats_null
POSTHOOK: query: drop table stats_null
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@stats_null
POSTHOOK: Output: default@stats_null
PREHOOK: query: drop table stats_null_part
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@stats_null_part
PREHOOK: Output: default@stats_null_part
POSTHOOK: query: drop table stats_null_part
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@stats_null_part
POSTHOOK: Output: default@stats_null_part
PREHOOK: query: drop table temps_null
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@temps_null
PREHOOK: Output: default@temps_null
POSTHOOK: query: drop table temps_null
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@temps_null
POSTHOOK: Output: default@temps_null
