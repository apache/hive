PREHOOK: query: CREATE TABLE dest1(key INT, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1
POSTHOOK: query: CREATE TABLE dest1(key INT, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest1 SELECT s.* 
FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 2) s
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest1 SELECT s.* 
FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 2) s
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 1000 Data size: 10603 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: true
                    predicate: (((hash(key) & 2147483647) % 2) = 0) (type: boolean)
                    sampleDesc: BUCKET 1 OUT OF 2
                    Statistics: Num rows: 500 Data size: 5301 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 500 Data size: 5301 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        GlobalTableId: 1
#### A masked pattern was here ####
                        NumFilesPerFileSink: 1
                        Statistics: Num rows: 500 Data size: 5301 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            properties:
                              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                              bucket_count -1
                              column.name.delimiter ,
                              columns key,value
                              columns.comments 
                              columns.types int:string
#### A masked pattern was here ####
                              name default.dest1
                              numFiles 0
                              numRows 0
                              rawDataSize 0
                              serialization.ddl struct dest1 { i32 key, string value}
                              serialization.format 1
                              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              totalSize 0
#### A masked pattern was here ####
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            name: default.dest1
                        TotalFiles: 1
                        GatherStats: true
                        MultiFileSpray: false
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: 000000_0
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                    bucket_count 2
                    bucket_field_name key
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket
                    numFiles 2
                    numRows 1000
                    rawDataSize 10603
                    serialization.ddl struct srcbucket { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 11603
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                      bucket_count 2
                      bucket_field_name key
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket
                      numFiles 2
                      numRows 1000
                      rawDataSize 10603
                      serialization.ddl struct srcbucket { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 11603
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket
                  name: default.srcbucket
            Truncated Path -> Alias:
              /srcbucket/000000_0 [s]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                bucket_count -1
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.dest1
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct dest1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1

  Stage: Stage-2
    Stats-Aggr Operator
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.* 
FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 2) s
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket
PREHOOK: Output: default@dest1
POSTHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.* 
FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 2) s
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket
POSTHOOK: Output: default@dest1
POSTHOOK: Lineage: dest1.key SIMPLE [(srcbucket)s.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: dest1.value SIMPLE [(srcbucket)s.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT dest1.* FROM dest1
order by key, value
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1.* FROM dest1
order by key, value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1
#### A masked pattern was here ####
0	val_0
0	val_0
0	val_0
0	val_1
0	val_1
2	val_2
2	val_3
4	val_4
4	val_5
6	val_7
6	val_7
8	val_8
8	val_9
10	val_10
10	val_11
12	val_12
12	val_12
12	val_13
16	val_17
16	val_17
18	val_18
18	val_18
20	val_20
20	val_21
20	val_21
22	val_23
24	val_24
24	val_24
26	val_26
26	val_26
28	val_28
30	val_30
30	val_31
32	val_33
34	val_34
40	val_41
40	val_41
42	val_42
42	val_42
42	val_43
42	val_43
42	val_43
44	val_44
46	val_47
48	val_49
48	val_49
50	val_51
52	val_53
52	val_53
52	val_53
52	val_53
54	val_54
56	val_57
58	val_58
58	val_58
58	val_59
58	val_59
60	val_61
62	val_63
62	val_63
64	val_64
66	val_66
68	val_69
70	val_70
70	val_70
70	val_70
70	val_71
72	val_72
72	val_72
74	val_74
76	val_76
76	val_76
76	val_77
76	val_77
76	val_77
78	val_78
78	val_79
80	val_80
80	val_81
82	val_82
82	val_83
82	val_83
84	val_84
84	val_84
86	val_86
86	val_87
90	val_90
90	val_90
90	val_90
92	val_92
94	val_95
96	val_96
98	val_98
98	val_98
100	val_100
100	val_100
100	val_101
100	val_101
102	val_103
104	val_104
104	val_104
104	val_105
104	val_105
104	val_105
106	val_107
110	val_111
114	val_114
114	val_115
114	val_115
114	val_115
116	val_116
116	val_117
118	val_118
118	val_118
118	val_119
118	val_119
118	val_119
120	val_120
120	val_120
120	val_121
122	val_123
122	val_123
122	val_123
126	val_126
126	val_127
126	val_127
128	val_128
128	val_128
128	val_128
128	val_129
128	val_129
132	val_133
132	val_133
134	val_134
134	val_134
134	val_135
136	val_136
136	val_137
138	val_138
138	val_138
138	val_138
138	val_138
138	val_139
138	val_139
140	val_141
144	val_145
146	val_146
146	val_146
150	val_150
152	val_152
152	val_152
152	val_153
152	val_153
152	val_153
156	val_156
156	val_157
156	val_157
158	val_158
160	val_160
160	val_161
162	val_162
162	val_163
164	val_164
164	val_164
164	val_165
164	val_165
166	val_166
168	val_168
168	val_169
170	val_170
170	val_171
172	val_172
172	val_172
172	val_173
174	val_174
174	val_174
174	val_175
174	val_175
176	val_176
176	val_176
178	val_178
178	val_179
178	val_179
180	val_180
182	val_183
184	val_185
186	val_186
190	val_190
192	val_192
192	val_193
194	val_194
196	val_196
196	val_197
196	val_197
196	val_197
200	val_200
200	val_200
202	val_202
204	val_205
206	val_207
206	val_207
206	val_207
208	val_208
208	val_208
208	val_208
212	val_213
214	val_214
216	val_216
216	val_216
216	val_217
218	val_218
222	val_222
222	val_223
224	val_224
224	val_224
224	val_225
226	val_226
226	val_227
226	val_227
226	val_227
226	val_227
228	val_228
228	val_229
230	val_230
230	val_230
230	val_230
230	val_230
230	val_230
238	val_238
238	val_238
238	val_239
240	val_241
242	val_242
242	val_242
242	val_243
244	val_244
244	val_245
244	val_245
244	val_245
246	val_247
246	val_247
248	val_248
248	val_249
252	val_252
252	val_253
254	val_255
256	val_256
256	val_256
256	val_257
258	val_258
258	val_259
260	val_260
260	val_261
260	val_261
262	val_262
262	val_263
262	val_263
264	val_265
264	val_265
266	val_266
268	val_269
272	val_272
272	val_272
272	val_273
274	val_274
274	val_275
276	val_277
278	val_278
278	val_278
278	val_279
280	val_280
280	val_280
282	val_282
282	val_282
284	val_284
284	val_285
284	val_285
286	val_286
286	val_287
288	val_288
288	val_288
292	val_292
292	val_293
292	val_293
296	val_296
296	val_297
298	val_298
298	val_298
298	val_298
300	val_301
300	val_301
302	val_302
302	val_303
304	val_305
306	val_306
306	val_307
308	val_308
308	val_309
308	val_309
310	val_310
310	val_311
310	val_311
310	val_311
314	val_315
316	val_316
316	val_316
316	val_316
318	val_318
318	val_318
318	val_318
318	val_319
322	val_322
322	val_322
322	val_323
324	val_325
326	val_327
328	val_329
328	val_329
330	val_331
332	val_332
334	val_335
336	val_336
336	val_337
338	val_338
338	val_339
340	val_341
342	val_342
342	val_342
342	val_343
344	val_344
344	val_344
344	val_345
348	val_348
348	val_348
348	val_348
348	val_348
348	val_348
348	val_349
352	val_353
352	val_353
356	val_356
356	val_357
356	val_357
358	val_359
360	val_360
360	val_361
362	val_362
364	val_364
364	val_365
366	val_366
368	val_368
374	val_374
374	val_375
376	val_377
378	val_378
378	val_379
382	val_382
382	val_382
382	val_383
382	val_383
384	val_384
384	val_384
384	val_384
384	val_385
384	val_385
384	val_385
386	val_386
386	val_387
386	val_387
388	val_389
390	val_391
390	val_391
390	val_391
392	val_392
392	val_393
392	val_393
394	val_394
396	val_396
396	val_396
396	val_396
398	val_399
400	val_400
402	val_402
402	val_403
402	val_403
402	val_403
404	val_404
404	val_404
404	val_405
404	val_405
404	val_405
406	val_406
406	val_406
406	val_406
406	val_406
406	val_407
408	val_409
408	val_409
410	val_411
412	val_413
412	val_413
414	val_414
414	val_414
414	val_415
416	val_417
418	val_418
424	val_424
424	val_424
424	val_425
426	val_427
428	val_429
430	val_430
430	val_430
430	val_430
430	val_431
432	val_432
432	val_433
436	val_436
436	val_437
438	val_438
438	val_438
438	val_438
438	val_439
438	val_439
440	val_441
440	val_441
442	val_443
444	val_444
446	val_446
446	val_447
446	val_447
448	val_448
448	val_449
450	val_451
450	val_451
452	val_452
454	val_454
454	val_454
454	val_454
454	val_455
454	val_455
458	val_458
458	val_458
460	val_460
462	val_462
462	val_462
462	val_463
466	val_466
466	val_466
466	val_466
468	val_468
468	val_468
468	val_468
468	val_468
468	val_469
468	val_469
468	val_469
470	val_470
470	val_471
472	val_472
474	val_475
474	val_475
476	val_477
476	val_477
478	val_478
478	val_478
478	val_479
478	val_479
480	val_480
480	val_480
480	val_480
480	val_481
480	val_481
482	val_482
482	val_483
484	val_484
484	val_485
486	val_487
488	val_489
490	val_490
490	val_491
492	val_492
492	val_492
492	val_493
492	val_493
494	val_494
494	val_495
494	val_495
496	val_496
496	val_497
498	val_498
498	val_498
498	val_498
