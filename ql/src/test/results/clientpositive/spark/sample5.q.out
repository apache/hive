PREHOOK: query: CREATE TABLE dest1(key INT, value STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dest1
POSTHOOK: query: CREATE TABLE dest1(key INT, value STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dest1
PREHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest1 SELECT s.* 

FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 5 on key) s
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN EXTENDED
INSERT OVERWRITE TABLE dest1 SELECT s.* 

FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 5 on key) s
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1
  Stage-2 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: s
                  Statistics: Num rows: 1000 Data size: 10603 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: true
                    predicate: (((hash(key) & 2147483647) % 5) = 0) (type: boolean)
                    Statistics: Num rows: 500 Data size: 5301 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 500 Data size: 5301 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        GlobalTableId: 1
#### A masked pattern was here ####
                        NumFilesPerFileSink: 1
                        Statistics: Num rows: 500 Data size: 5301 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            properties:
                              COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                              bucket_count -1
                              bucketing_version 2
                              column.name.delimiter ,
                              columns key,value
                              columns.comments 
                              columns.types int:string
#### A masked pattern was here ####
                              name default.dest1
                              numFiles 0
                              numRows 0
                              rawDataSize 0
                              serialization.ddl struct dest1 { i32 key, string value}
                              serialization.format 1
                              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              totalSize 0
#### A masked pattern was here ####
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            name: default.dest1
                        TotalFiles: 1
                        GatherStats: true
                        MultiFileSpray: false
            Execution mode: vectorized
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: srcbucket
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                    bucket_count 2
                    bucket_field_name key
                    bucketing_version 2
                    column.name.delimiter ,
                    columns key,value
                    columns.comments 
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket
                    numFiles 2
                    numRows 1000
                    rawDataSize 10603
                    serialization.ddl struct srcbucket { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 11603
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                      bucket_count 2
                      bucket_field_name key
                      bucketing_version 2
                      column.name.delimiter ,
                      columns key,value
                      columns.comments 
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket
                      numFiles 2
                      numRows 1000
                      rawDataSize 10603
                      serialization.ddl struct srcbucket { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 11603
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket
                  name: default.srcbucket
            Truncated Path -> Alias:
              /srcbucket [s]

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
#### A masked pattern was here ####
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              properties:
                COLUMN_STATS_ACCURATE {"BASIC_STATS":"true","COLUMN_STATS":{"key":"true","value":"true"}}
                bucket_count -1
                bucketing_version 2
                column.name.delimiter ,
                columns key,value
                columns.comments 
                columns.types int:string
#### A masked pattern was here ####
                name default.dest1
                numFiles 0
                numRows 0
                rawDataSize 0
                serialization.ddl struct dest1 { i32 key, string value}
                serialization.format 1
                serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                totalSize 0
#### A masked pattern was here ####
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.dest1

  Stage: Stage-2
    Stats Work
      Basic Stats Work:
#### A masked pattern was here ####

PREHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.* 

FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 5 on key) s
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket
PREHOOK: Output: default@dest1
POSTHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.* 

FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 5 on key) s
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket
POSTHOOK: Output: default@dest1
POSTHOOK: Lineage: dest1.key SIMPLE [(srcbucket)s.FieldSchema(name:key, type:int, comment:null), ]
POSTHOOK: Lineage: dest1.value SIMPLE [(srcbucket)s.FieldSchema(name:value, type:string, comment:null), ]
PREHOOK: query: SELECT dest1.* FROM dest1 SORT BY key, value
PREHOOK: type: QUERY
PREHOOK: Input: default@dest1
#### A masked pattern was here ####
POSTHOOK: query: SELECT dest1.* FROM dest1 SORT BY key, value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dest1
#### A masked pattern was here ####
1	val_2
103	val_103
103	val_103
122	val_123
122	val_123
122	val_123
125	val_125
125	val_125
125	val_126
133	val_133
133	val_134
147	val_148
147	val_148
155	val_155
16	val_17
16	val_17
161	val_162
161	val_162
161	val_162
161	val_162
162	val_162
162	val_163
163	val_163
165	val_165
165	val_165
165	val_166
18	val_18
18	val_18
194	val_194
196	val_196
196	val_197
196	val_197
196	val_197
21	val_22
21	val_22
21	val_22
21	val_22
222	val_222
222	val_223
230	val_230
230	val_230
230	val_230
230	val_230
230	val_230
237	val_237
237	val_237
238	val_238
238	val_238
238	val_239
24	val_24
24	val_24
240	val_241
246	val_247
246	val_247
256	val_256
256	val_256
256	val_257
260	val_260
260	val_261
260	val_261
264	val_265
264	val_265
273	val_273
273	val_273
273	val_273
273	val_274
275	val_275
275	val_276
275	val_276
276	val_277
278	val_278
278	val_278
278	val_279
288	val_288
288	val_288
289	val_289
289	val_290
296	val_296
296	val_297
302	val_302
302	val_303
305	val_305
305	val_306
311	val_311
311	val_311
311	val_311
32	val_33
323	val_323
323	val_324
33	val_33
33	val_34
332	val_332
335	val_335
335	val_336
335	val_336
344	val_344
344	val_344
344	val_345
35	val_35
35	val_35
35	val_35
35	val_36
35	val_36
35	val_36
352	val_353
352	val_353
355	val_356
355	val_356
362	val_362
366	val_366
369	val_369
369	val_369
369	val_369
369	val_370
37	val_37
37	val_37
373	val_373
373	val_374
379	val_379
379	val_380
391	val_392
391	val_392
393	val_393
393	val_394
393	val_394
397	val_397
397	val_397
405	val_406
407	val_407
407	val_408
407	val_408
407	val_408
41	val_41
410	val_411
411	val_411
411	val_412
416	val_417
425	val_426
43	val_43
432	val_432
432	val_433
435	val_435
435	val_436
436	val_436
436	val_437
439	val_439
439	val_439
439	val_440
439	val_440
441	val_442
450	val_451
450	val_451
453	val_453
453	val_454
454	val_454
454	val_454
454	val_454
454	val_455
454	val_455
455	val_455
455	val_456
455	val_456
460	val_460
466	val_466
466	val_466
466	val_466
469	val_469
469	val_469
469	val_469
469	val_469
469	val_469
469	val_470
470	val_470
470	val_471
481	val_481
481	val_482
484	val_484
484	val_485
492	val_492
492	val_492
492	val_493
492	val_493
493	val_493
494	val_494
494	val_495
494	val_495
498	val_498
498	val_498
498	val_498
51	val_51
51	val_51
51	val_52
52	val_53
52	val_53
52	val_53
52	val_53
53	val_53
53	val_54
54	val_54
61	val_62
68	val_69
69	val_69
69	val_70
72	val_72
72	val_72
8	val_8
8	val_9
87	val_87
87	val_88
87	val_88
89	val_90
89	val_90
89	val_90
91	val_92
93	val_94
93	val_94
93	val_94
96	val_96
