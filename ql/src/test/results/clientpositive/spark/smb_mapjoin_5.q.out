PREHOOK: query: create table smb_bucket_1_n2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_bucket_1_n2
POSTHOOK: query: create table smb_bucket_1_n2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_bucket_1_n2
PREHOOK: query: create table smb_bucket_2_n2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_bucket_2_n2
POSTHOOK: query: create table smb_bucket_2_n2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_bucket_2_n2
PREHOOK: query: create table smb_bucket_3_n2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@smb_bucket_3_n2
POSTHOOK: query: create table smb_bucket_3_n2(key int, value string) CLUSTERED BY (key) SORTED BY (key) INTO 1 BUCKETS STORED AS RCFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@smb_bucket_3_n2
PREHOOK: query: load data local inpath '../../data/files/smb_rc1/000000_0' overwrite into table smb_bucket_1_n2
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smb_bucket_1_n2
POSTHOOK: query: load data local inpath '../../data/files/smb_rc1/000000_0' overwrite into table smb_bucket_1_n2
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smb_bucket_1_n2
PREHOOK: query: load data local inpath '../../data/files/smb_rc2/000000_0' overwrite into table smb_bucket_2_n2
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smb_bucket_2_n2
POSTHOOK: query: load data local inpath '../../data/files/smb_rc2/000000_0' overwrite into table smb_bucket_2_n2
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smb_bucket_2_n2
PREHOOK: query: load data local inpath '../../data/files/smb_rc3/000000_0' overwrite into table smb_bucket_3_n2
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@smb_bucket_3_n2
POSTHOOK: query: load data local inpath '../../data/files/smb_rc3/000000_0' overwrite into table smb_bucket_3_n2
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@smb_bucket_3_n2
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Left Outer Join 0 to 1
                     Left Outer Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
1	val_1	NULL	NULL	NULL	NULL
10	val_10	NULL	NULL	NULL	NULL
3	val_3	NULL	NULL	NULL	NULL
4	val_4	NULL	NULL	NULL	NULL
5	val_5	NULL	NULL	NULL	NULL
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Left Outer Join 0 to 1
                     Right Outer Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
NULL	NULL	NULL	NULL	10	val_10
NULL	NULL	NULL	NULL	17	val_17
NULL	NULL	NULL	NULL	19	val_19
NULL	NULL	NULL	NULL	20	val_20
NULL	NULL	NULL	NULL	23	val_23
NULL	NULL	NULL	NULL	4	val_4
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Left Outer Join 0 to 1
                     Outer Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a left outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
1	val_1	NULL	NULL	NULL	NULL
10	val_10	NULL	NULL	NULL	NULL
3	val_3	NULL	NULL	NULL	NULL
4	val_4	NULL	NULL	NULL	NULL
5	val_5	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	10	val_10
NULL	NULL	NULL	NULL	17	val_17
NULL	NULL	NULL	NULL	19	val_19
NULL	NULL	NULL	NULL	20	val_20
NULL	NULL	NULL	NULL	23	val_23
NULL	NULL	NULL	NULL	4	val_4
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Right Outer Join 0 to 1
                     Inner Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
NULL	NULL	20	val_20	20	val_20
NULL	NULL	23	val_23	23	val_23
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Right Outer Join 0 to 1
                     Left Outer Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
NULL	NULL	20	val_20	20	val_20
NULL	NULL	23	val_23	23	val_23
NULL	NULL	25	val_25	NULL	NULL
NULL	NULL	30	val_30	NULL	NULL
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Right Outer Join 0 to 1
                     Right Outer Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
NULL	NULL	20	val_20	20	val_20
NULL	NULL	23	val_23	23	val_23
NULL	NULL	NULL	NULL	10	val_10
NULL	NULL	NULL	NULL	17	val_17
NULL	NULL	NULL	NULL	19	val_19
NULL	NULL	NULL	NULL	4	val_4
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Right Outer Join 0 to 1
                     Outer Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a right outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
NULL	NULL	20	val_20	20	val_20
NULL	NULL	23	val_23	23	val_23
NULL	NULL	25	val_25	NULL	NULL
NULL	NULL	30	val_30	NULL	NULL
NULL	NULL	NULL	NULL	10	val_10
NULL	NULL	NULL	NULL	17	val_17
NULL	NULL	NULL	NULL	19	val_19
NULL	NULL	NULL	NULL	4	val_4
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: int), value (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Right Outer Join 0 to 1
                     Inner Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
NULL	NULL	20	val_20	20	val_20
NULL	NULL	23	val_23	23	val_23
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Outer Join 0 to 1
                     Left Outer Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key left outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
1	val_1	NULL	NULL	NULL	NULL
10	val_10	NULL	NULL	NULL	NULL
3	val_3	NULL	NULL	NULL	NULL
4	val_4	NULL	NULL	NULL	NULL
5	val_5	NULL	NULL	NULL	NULL
NULL	NULL	20	val_20	20	val_20
NULL	NULL	23	val_23	23	val_23
NULL	NULL	25	val_25	NULL	NULL
NULL	NULL	30	val_30	NULL	NULL
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Outer Join 0 to 1
                     Right Outer Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key right outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
NULL	NULL	20	val_20	20	val_20
NULL	NULL	23	val_23	23	val_23
NULL	NULL	NULL	NULL	10	val_10
NULL	NULL	NULL	NULL	17	val_17
NULL	NULL	NULL	NULL	19	val_19
NULL	NULL	NULL	NULL	4	val_4
PREHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
POSTHOOK: query: explain
select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 2), Map 3 (PARTITION-LEVEL SORT, 2), Map 4 (PARTITION-LEVEL SORT, 2)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2080 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2060 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: c
                  Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: key (type: int), value (type: string)
                    outputColumnNames: _col0, _col1
                    Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: int)
                      sort order: +
                      Map-reduce partition columns: _col0 (type: int)
                      Statistics: Num rows: 1 Data size: 2220 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Outer Join 0 to 1
                     Outer Join 1 to 2
                keys:
                  0 _col0 (type: int)
                  1 _col0 (type: int)
                  2 _col0 (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 2 Data size: 4576 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
PREHOOK: type: QUERY
PREHOOK: Input: default@smb_bucket_1_n2
PREHOOK: Input: default@smb_bucket_2_n2
PREHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
POSTHOOK: query: select /*+mapjoin(a,c)*/ * from smb_bucket_1_n2 a full outer join smb_bucket_2_n2 b on a.key = b.key full outer join smb_bucket_3_n2 c on b.key=c.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@smb_bucket_1_n2
POSTHOOK: Input: default@smb_bucket_2_n2
POSTHOOK: Input: default@smb_bucket_3_n2
#### A masked pattern was here ####
1	val_1	NULL	NULL	NULL	NULL
10	val_10	NULL	NULL	NULL	NULL
3	val_3	NULL	NULL	NULL	NULL
4	val_4	NULL	NULL	NULL	NULL
5	val_5	NULL	NULL	NULL	NULL
NULL	NULL	20	val_20	20	val_20
NULL	NULL	23	val_23	23	val_23
NULL	NULL	25	val_25	NULL	NULL
NULL	NULL	30	val_30	NULL	NULL
NULL	NULL	NULL	NULL	10	val_10
NULL	NULL	NULL	NULL	17	val_17
NULL	NULL	NULL	NULL	19	val_19
NULL	NULL	NULL	NULL	4	val_4
