PREHOOK: query: CREATE TABLE sent_tmp (val array<string>)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sent_tmp
POSTHOOK: query: CREATE TABLE sent_tmp (val array<string>)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sent_tmp
PREHOOK: query: CREATE TABLE sent_tmp2 (val string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sent_tmp2
POSTHOOK: query: CREATE TABLE sent_tmp2 (val string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sent_tmp2
PREHOOK: query: INSERT OVERWRITE TABLE sent_tmp
SELECT explode(sentences(decode(unhex("486976652065737420756E20657863656C6C656E74206F7574696C20706F7572206C65732072657175C3AA74657320646520646F6E6EC3A965732C20657420706575742DC3AA74726520706C757320706F6C7976616C656E7420717565206C612074726164756374696F6E206175746F6D61746971756521206C6120706F6E6374756174696F6E206D756C7469706C65732C206465732070687261736573206D616C20666F726DC3A96573202E2E2E20636F6E667573696F6E202D20657420706F757274616E742063652055444620666F6E6374696F6E6E6520656E636F72652121"), "UTF-8"), "fr")) AS val FROM src LIMIT 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@sent_tmp
POSTHOOK: query: INSERT OVERWRITE TABLE sent_tmp
SELECT explode(sentences(decode(unhex("486976652065737420756E20657863656C6C656E74206F7574696C20706F7572206C65732072657175C3AA74657320646520646F6E6EC3A965732C20657420706575742DC3AA74726520706C757320706F6C7976616C656E7420717565206C612074726164756374696F6E206175746F6D61746971756521206C6120706F6E6374756174696F6E206D756C7469706C65732C206465732070687261736573206D616C20666F726DC3A96573202E2E2E20636F6E667573696F6E202D20657420706F757274616E742063652055444620666F6E6374696F6E6E6520656E636F72652121"), "UTF-8"), "fr")) AS val FROM src LIMIT 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@sent_tmp
POSTHOOK: Lineage: sent_tmp.val SCRIPT []
PREHOOK: query: INSERT OVERWRITE TABLE sent_tmp2
SELECT explode(val) AS val FROM sent_tmp
PREHOOK: type: QUERY
PREHOOK: Input: default@sent_tmp
PREHOOK: Output: default@sent_tmp2
POSTHOOK: query: INSERT OVERWRITE TABLE sent_tmp2
SELECT explode(val) AS val FROM sent_tmp
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sent_tmp
POSTHOOK: Output: default@sent_tmp2
POSTHOOK: Lineage: sent_tmp2.val SCRIPT [(sent_tmp)sent_tmp.FieldSchema(name:val, type:array<string>, comment:null), ]
PREHOOK: query: SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC
PREHOOK: type: QUERY
PREHOOK: Input: default@sent_tmp2
#### A masked pattern was here ####
POSTHOOK: query: SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sent_tmp2
#### A masked pattern was here ####
48697665
48697665
554446
6175746F6D617469717565
6175746F6D617469717565
6365
636F6E667573696F6E
6465
6465
646573
646F6E6EC3A96573
646F6E6EC3A96573
656E636F7265
657374
657374
6574
6574
6574
657863656C6C656E74
657863656C6C656E74
666F6E6374696F6E6E65
666F726DC3A96573
6C61
6C61
6C61
6C6573
6C6573
6D616C
6D756C7469706C6573
6F7574696C
6F7574696C
706575742DC3AA747265
706575742DC3AA747265
70687261736573
706C7573
706C7573
706F6C7976616C656E74
706F6C7976616C656E74
706F6E6374756174696F6E
706F7572
706F7572
706F757274616E74
717565
717565
72657175C3AA746573
72657175C3AA746573
74726164756374696F6E
74726164756374696F6E
756E
756E
PREHOOK: query: DROP TABLE sent_tmp
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@sent_tmp
PREHOOK: Output: default@sent_tmp
POSTHOOK: query: DROP TABLE sent_tmp
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@sent_tmp
POSTHOOK: Output: default@sent_tmp
PREHOOK: query: DROP TABLE sent_tmp2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@sent_tmp2
PREHOOK: Output: default@sent_tmp2
POSTHOOK: query: DROP TABLE sent_tmp2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@sent_tmp2
POSTHOOK: Output: default@sent_tmp2
PREHOOK: query: CREATE TABLE sent_tmp (val array<string>)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sent_tmp
POSTHOOK: query: CREATE TABLE sent_tmp (val array<string>)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sent_tmp
PREHOOK: query: CREATE TABLE sent_tmp2 (val string)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@sent_tmp2
POSTHOOK: query: CREATE TABLE sent_tmp2 (val string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@sent_tmp2
PREHOOK: query: INSERT OVERWRITE TABLE sent_tmp
SELECT explode(sentences(decode(unhex("48697665206973742065696E2061757367657A656963686E65746573205765726B7A6575672066C3BC7220646965204162667261676520766F6E20446174656E2C20756E64207669656C6C6569636874207669656C736569746967657220616C7320646965206D61736368696E656C6C6520C39C6265727365747A756E6721204D756C7469706C652C207363686C6563687420676562696C646574656E2053C3A4747A65202E2E2E205665727765636873656C756E6720496E74657270756E6B74696F6E202D20756E6420646F636820697374206469657365205544462066756E6B74696F6E6965727420696D6D6572206E6F63682121"), "UTF-8"), "de")) AS val FROM src LIMIT 3
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@sent_tmp
POSTHOOK: query: INSERT OVERWRITE TABLE sent_tmp
SELECT explode(sentences(decode(unhex("48697665206973742065696E2061757367657A656963686E65746573205765726B7A6575672066C3BC7220646965204162667261676520766F6E20446174656E2C20756E64207669656C6C6569636874207669656C736569746967657220616C7320646965206D61736368696E656C6C6520C39C6265727365747A756E6721204D756C7469706C652C207363686C6563687420676562696C646574656E2053C3A4747A65202E2E2E205665727765636873656C756E6720496E74657270756E6B74696F6E202D20756E6420646F636820697374206469657365205544462066756E6B74696F6E6965727420696D6D6572206E6F63682121"), "UTF-8"), "de")) AS val FROM src LIMIT 3
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@sent_tmp
POSTHOOK: Lineage: sent_tmp.val SCRIPT []
PREHOOK: query: INSERT OVERWRITE TABLE sent_tmp2
SELECT explode(val) AS val FROM sent_tmp
PREHOOK: type: QUERY
PREHOOK: Input: default@sent_tmp
PREHOOK: Output: default@sent_tmp2
POSTHOOK: query: INSERT OVERWRITE TABLE sent_tmp2
SELECT explode(val) AS val FROM sent_tmp
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sent_tmp
POSTHOOK: Output: default@sent_tmp2
POSTHOOK: Lineage: sent_tmp2.val SCRIPT [(sent_tmp)sent_tmp.FieldSchema(name:val, type:array<string>, comment:null), ]
PREHOOK: query: SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC
PREHOOK: type: QUERY
PREHOOK: Input: default@sent_tmp2
#### A masked pattern was here ####
POSTHOOK: query: SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC
POSTHOOK: type: QUERY
POSTHOOK: Input: default@sent_tmp2
#### A masked pattern was here ####
41626672616765
446174656E
48697665
496E74657270756E6B74696F6E
4D756C7469706C65
53C3A4747A65
554446
5665727765636873656C756E67
5765726B7A657567
616C73
61757367657A656963686E65746573
646965
646965
6469657365
646F6368
65696E
66756E6B74696F6E69657274
66C3BC72
676562696C646574656E
696D6D6572
697374
697374
6D61736368696E656C6C65
6E6F6368
7363686C65636874
756E64
756E64
7669656C6C6569636874
7669656C7365697469676572
766F6E
C39C6265727365747A756E67
PREHOOK: query: SELECT sentences("Hive is an excellent tool for data querying\; and perhaps more versatile than machine translation!! Multiple, ill-formed sentences...confounding punctuation--and yet this UDF still works!!!!") AS value FROM src ORDER BY value ASC LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT sentences("Hive is an excellent tool for data querying\; and perhaps more versatile than machine translation!! Multiple, ill-formed sentences...confounding punctuation--and yet this UDF still works!!!!") AS value FROM src ORDER BY value ASC LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
[["Hive","is","an","excellent","tool","for","data","querying","and","perhaps","more","versatile","than","machine","translation"],["Multiple","ill-formed","sentences","confounding","punctuation","and","yet","this","UDF","still","works"]]
