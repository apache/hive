PREHOOK: query: create table a_n15(key int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@a_n15
POSTHOOK: query: create table a_n15(key int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@a_n15
PREHOOK: query: insert into table a_n15 values (0),(1),(2),(2),(2),(2),(3),(NULL),(NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@a_n15
POSTHOOK: query: insert into table a_n15 values (0),(1),(2),(2),(2),(2),(3),(NULL),(NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@a_n15
POSTHOOK: Lineage: a_n15.key SCRIPT []
PREHOOK: query: create table b_n11(key bigint)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@b_n11
POSTHOOK: query: create table b_n11(key bigint)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@b_n11
PREHOOK: query: insert into table b_n11 values (1),(2),(2),(3),(5),(5),(NULL),(NULL),(NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@b_n11
POSTHOOK: query: insert into table b_n11 values (1),(2),(2),(3),(5),(5),(NULL),(NULL),(NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@b_n11
POSTHOOK: Lineage: b_n11.key SCRIPT []
PREHOOK: query: select * from a_n15 except all select * from b_n11
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from a_n15 except all select * from b_n11
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
0
2
2
PREHOOK: query: drop table a_n15
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@a_n15
PREHOOK: Output: default@a_n15
POSTHOOK: query: drop table a_n15
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@a_n15
POSTHOOK: Output: default@a_n15
PREHOOK: query: drop table b_n11
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@b_n11
PREHOOK: Output: default@b_n11
POSTHOOK: query: drop table b_n11
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@b_n11
POSTHOOK: Output: default@b_n11
PREHOOK: query: create table a_n15(key int, value int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@a_n15
POSTHOOK: query: create table a_n15(key int, value int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@a_n15
PREHOOK: query: insert into table a_n15 values (1,2),(1,2),(1,3),(2,3),(2,2)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@a_n15
POSTHOOK: query: insert into table a_n15 values (1,2),(1,2),(1,3),(2,3),(2,2)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@a_n15
POSTHOOK: Lineage: a_n15.key SCRIPT []
POSTHOOK: Lineage: a_n15.value SCRIPT []
PREHOOK: query: create table b_n11(key int, value int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@b_n11
POSTHOOK: query: create table b_n11(key int, value int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@b_n11
PREHOOK: query: insert into table b_n11 values (1,2),(2,3),(2,2),(2,2),(2,20)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@b_n11
POSTHOOK: query: insert into table b_n11 values (1,2),(2,3),(2,2),(2,2),(2,20)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@b_n11
POSTHOOK: Lineage: b_n11.key SCRIPT []
POSTHOOK: Lineage: b_n11.value SCRIPT []
PREHOOK: query: select * from a_n15 except all select * from b_n11
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from a_n15 except all select * from b_n11
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
1	2
1	3
PREHOOK: query: select * from b_n11 except all select * from a_n15
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from b_n11 except all select * from a_n15
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
2	2
2	20
PREHOOK: query: select * from b_n11 except all select * from a_n15 intersect distinct select * from b_n11
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from b_n11 except all select * from a_n15 intersect distinct select * from b_n11
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
2	2
2	20
PREHOOK: query: select * from b_n11 except all select * from a_n15 except distinct select * from b_n11
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from b_n11 except all select * from a_n15 except distinct select * from b_n11
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
PREHOOK: query: select * from a_n15 except all select * from b_n11 union all select * from a_n15 except distinct select * from b_n11
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from a_n15 except all select * from b_n11 union all select * from a_n15 except distinct select * from b_n11
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
1	3
PREHOOK: query: select * from a_n15 except all select * from b_n11 union select * from a_n15 except distinct select * from b_n11
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from a_n15 except all select * from b_n11 union select * from a_n15 except distinct select * from b_n11
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
1	3
PREHOOK: query: select * from a_n15 except all select * from b_n11 except distinct select * from a_n15 except distinct select * from b_n11
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from a_n15 except all select * from b_n11 except distinct select * from a_n15 except distinct select * from b_n11
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
PREHOOK: query: select * from (select a_n15.key, b_n11.value from a_n15 join b_n11 on a_n15.key=b_n11.key)sub1 
except all 
select * from (select a_n15.key, b_n11.value from a_n15 join b_n11 on a_n15.key=b_n11.key)sub2
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from (select a_n15.key, b_n11.value from a_n15 join b_n11 on a_n15.key=b_n11.key)sub1 
except all 
select * from (select a_n15.key, b_n11.value from a_n15 join b_n11 on a_n15.key=b_n11.key)sub2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
PREHOOK: query: select * from (select a_n15.key, b_n11.value from a_n15 join b_n11 on a_n15.key=b_n11.key)sub1
except all
select * from (select b_n11.value as key, a_n15.key as value from a_n15 join b_n11 on a_n15.key=b_n11.key)sub2
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select * from (select a_n15.key, b_n11.value from a_n15 join b_n11 on a_n15.key=b_n11.key)sub1
except all
select * from (select b_n11.value as key, a_n15.key as value from a_n15 join b_n11 on a_n15.key=b_n11.key)sub2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
1	2
1	2
1	2
2	3
2	3
2	20
2	20
PREHOOK: query: explain select * from src except all select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: explain select * from src except all select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1, Stage-3
  Stage-3 is a root stage
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string), value (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), 2L (type: bigint), _col2 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), (_col2 * _col3) (type: bigint)
                outputColumnNames: _col0, _col1, _col3, _col4
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col4), sum(_col3)
                  keys: _col0 (type: string), _col1 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                    Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint), _col3 (type: bigint)
          TableScan
            Union
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), (_col2 * _col3) (type: bigint)
                outputColumnNames: _col0, _col1, _col3, _col4
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col4), sum(_col3)
                  keys: _col0 (type: string), _col1 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                    Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint), _col3 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), sum(VALUE._col1)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: ((2 * _col2) - (3 * _col3)) (type: bigint), _col0 (type: string), _col1 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            UDTF Operator
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              function name: UDTFReplicateRows
              Select Operator
                expressions: col1 (type: string), col2 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string), value (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), 1L (type: bigint), _col2 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from src except all select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * from src except all select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
PREHOOK: query: explain select * from src except all select * from src except distinct select * from src except distinct select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: explain select * from src except all select * from src except distinct select * from src except distinct select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1, Stage-6
  Stage-3 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-3, Stage-7
  Stage-5 depends on stages: Stage-4, Stage-8
  Stage-6 is a root stage
  Stage-7 is a root stage
  Stage-8 is a root stage
  Stage-0 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string), value (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), 2L (type: bigint), _col2 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), (_col2 * _col3) (type: bigint)
                outputColumnNames: _col0, _col1, _col3, _col4
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col4), sum(_col3)
                  keys: _col0 (type: string), _col1 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                    Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint), _col3 (type: bigint)
          TableScan
            Union
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), (_col2 * _col3) (type: bigint)
                outputColumnNames: _col0, _col1, _col3, _col4
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col4), sum(_col3)
                  keys: _col0 (type: string), _col1 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                    Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint), _col3 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), sum(VALUE._col1)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: ((2 * _col2) - (3 * _col3)) (type: bigint), _col0 (type: string), _col1 (type: string)
            outputColumnNames: _col0, _col1, _col2
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            UDTF Operator
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              function name: UDTFReplicateRows
              Select Operator
                expressions: col1 (type: string), col2 (type: string)
                outputColumnNames: col1, col2
                Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: count()
                  keys: col1 (type: string), col2 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: string), _col1 (type: string)
              sort order: ++
              Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
              Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col2 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 125 Data size: 1328 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), 2L (type: bigint), _col2 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 125 Data size: 1328 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-4
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 375 Data size: 3984 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), (_col2 * _col3) (type: bigint)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 375 Data size: 3984 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col2), sum(_col3)
                  keys: _col0 (type: string), _col1 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 375 Data size: 3984 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                    Statistics: Num rows: 375 Data size: 3984 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint), _col3 (type: bigint)
          TableScan
            Union
              Statistics: Num rows: 375 Data size: 3984 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), (_col2 * _col3) (type: bigint)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 375 Data size: 3984 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col2), sum(_col3)
                  keys: _col0 (type: string), _col1 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 375 Data size: 3984 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                    Statistics: Num rows: 375 Data size: 3984 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint), _col3 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), sum(VALUE._col1)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 187 Data size: 1986 Basic stats: COMPLETE Column stats: NONE
          Filter Operator
            predicate: (((_col2 * 2) = _col3) and (_col2 > 0L)) (type: boolean)
            Statistics: Num rows: 31 Data size: 329 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), _col1 (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 31 Data size: 329 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: _col0 (type: string), _col1 (type: string)
                mode: complete
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 15 Data size: 159 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), 2L (type: bigint), _col2 (type: bigint)
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 15 Data size: 159 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-5
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 265 Data size: 2815 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), (_col2 * _col3) (type: bigint)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 265 Data size: 2815 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col2), sum(_col3)
                  keys: _col0 (type: string), _col1 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 265 Data size: 2815 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                    Statistics: Num rows: 265 Data size: 2815 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint), _col3 (type: bigint)
          TableScan
            Union
              Statistics: Num rows: 265 Data size: 2815 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: string), _col1 (type: string), _col3 (type: bigint), (_col2 * _col3) (type: bigint)
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 265 Data size: 2815 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col2), sum(_col3)
                  keys: _col0 (type: string), _col1 (type: string)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2, _col3
                  Statistics: Num rows: 265 Data size: 2815 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                    Statistics: Num rows: 265 Data size: 2815 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col2 (type: bigint), _col3 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), sum(VALUE._col1)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 132 Data size: 1402 Basic stats: COMPLETE Column stats: NONE
          Filter Operator
            predicate: (((_col2 * 2) = _col3) and (_col2 > 0L)) (type: boolean)
            Statistics: Num rows: 22 Data size: 233 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), _col1 (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 22 Data size: 233 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 22 Data size: 233 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-6
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string), value (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), 1L (type: bigint), _col2 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-7
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string), value (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), 1L (type: bigint), _col2 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-8
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), value (type: string)
              outputColumnNames: key, value
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: count()
                keys: key (type: string), value (type: string)
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: bigint)
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          aggregations: count(VALUE._col0)
          keys: KEY._col0 (type: string), KEY._col1 (type: string)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), 1L (type: bigint), _col2 (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 250 Data size: 2656 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from src except all select * from src except distinct select * from src except distinct select * from src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * from src except all select * from src except distinct select * from src except distinct select * from src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
PREHOOK: query: explain select value from a_n15 group by value except distinct select key from b_n11 group by key
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: explain select value from a_n15 group by value except distinct select key from b_n11 group by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1, Stage-3
  Stage-3 is a root stage
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: a_n15
            Statistics: Num rows: 5 Data size: 15 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: value (type: int)
              outputColumnNames: value
              Statistics: Num rows: 5 Data size: 15 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                keys: value (type: int)
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 5 Data size: 15 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 5 Data size: 15 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: count()
            keys: _col0 (type: int)
            mode: complete
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: int), 2L (type: bigint), _col1 (type: bigint)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Union
              Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col2 (type: bigint), (_col1 * _col2) (type: bigint)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col1), sum(_col2)
                  keys: _col0 (type: int)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: int)
                    Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: bigint), _col2 (type: bigint)
          TableScan
            Union
              Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: _col0 (type: int), _col2 (type: bigint), (_col1 * _col2) (type: bigint)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  aggregations: sum(_col1), sum(_col2)
                  keys: _col0 (type: int)
                  mode: hash
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: int)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: int)
                    Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
                    value expressions: _col1 (type: bigint), _col2 (type: bigint)
      Reduce Operator Tree:
        Group By Operator
          aggregations: sum(VALUE._col0), sum(VALUE._col1)
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2
          Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
          Filter Operator
            predicate: (((_col1 * 2) = _col2) and (_col1 > 0L)) (type: boolean)
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: int)
              outputColumnNames: _col0
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b_n11
            Statistics: Num rows: 5 Data size: 16 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: int)
              outputColumnNames: key
              Statistics: Num rows: 5 Data size: 16 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                keys: key (type: int)
                mode: hash
                outputColumnNames: _col0
                Statistics: Num rows: 5 Data size: 16 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: int)
                  Statistics: Num rows: 5 Data size: 16 Basic stats: COMPLETE Column stats: NONE
      Execution mode: vectorized
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: int)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 2 Data size: 6 Basic stats: COMPLETE Column stats: NONE
          Group By Operator
            aggregations: count()
            keys: _col0 (type: int)
            mode: complete
            outputColumnNames: _col0, _col1
            Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: int), 1L (type: bigint), _col1 (type: bigint)
              outputColumnNames: _col0, _col1, _col2
              Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select value from a_n15 group by value except distinct select key from b_n11 group by key
PREHOOK: type: QUERY
PREHOOK: Input: default@a_n15
PREHOOK: Input: default@b_n11
#### A masked pattern was here ####
POSTHOOK: query: select value from a_n15 group by value except distinct select key from b_n11 group by key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@a_n15
POSTHOOK: Input: default@b_n11
#### A masked pattern was here ####
3
