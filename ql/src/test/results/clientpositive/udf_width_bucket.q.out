PREHOOK: query: describe function width_bucket
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: describe function width_bucket
POSTHOOK: type: DESCFUNCTION
width_bucket(expr, min_value, max_value, num_buckets) - Returns an integer between 0 and num_buckets+1 by mapping the expr into buckets defined by the range [min_value, max_value]
PREHOOK: query: desc function extended width_bucket
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: desc function extended width_bucket
POSTHOOK: type: DESCFUNCTION
width_bucket(expr, min_value, max_value, num_buckets) - Returns an integer between 0 and num_buckets+1 by mapping the expr into buckets defined by the range [min_value, max_value]
Returns an integer between 0 and num_buckets+1 by mapping expr into the ith equally sized bucket. Buckets are made by dividing [min_value, max_value] into equally sized regions. If expr < min_value, return 1, if expr > max_value return num_buckets+1
Example: expr is an integer column withs values 1, 10, 20, 30.
  > SELECT width_bucket(expr, 5, 25, 4) FROM src;
1
1
3
5
Function class:org.apache.hadoop.hive.ql.udf.generic.GenericUDFWidthBucket
Function type:BUILTIN
PREHOOK: query: explain select width_bucket(10, 5, 25, 4)
PREHOOK: type: QUERY
POSTHOOK: query: explain select width_bucket(10, 5, 25, 4)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: _dummy_table
          Row Limit Per Split: 1
          Statistics: Num rows: 1 Data size: 1 Basic stats: COMPLETE Column stats: COMPLETE
          Select Operator
            expressions: 2 (type: int)
            outputColumnNames: _col0
            Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE
            ListSink

PREHOOK: query: select
width_bucket(1, 5, 25, 4),
width_bucket(10, 5, 25, 4),
width_bucket(20, 5, 25, 4),
width_bucket(30, 5, 25, 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(1, 5, 25, 4),
width_bucket(10, 5, 25, 4),
width_bucket(20, 5, 25, 4),
width_bucket(30, 5, 25, 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
0	2	4	5
PREHOOK: query: select
width_bucket(1, NULL, 25, 4),
width_bucket(NULL, 5, 25, 4),
width_bucket(20, 5, NULL, 4),
width_bucket(30, 5, 25, NULL),
width_bucket(NULL, NULL, NULL, NULL)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(1, NULL, 25, 4),
width_bucket(NULL, 5, 25, 4),
width_bucket(20, 5, NULL, 4),
width_bucket(30, 5, 25, NULL),
width_bucket(NULL, NULL, NULL, NULL)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
NULL	NULL	NULL	NULL	NULL
PREHOOK: query: select
width_bucket(-1, -25, -5, 4),
width_bucket(-10, -25, -5, 4),
width_bucket(-20, -25, -5, 4),
width_bucket(-30, -25, -5, 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(-1, -25, -5, 4),
width_bucket(-10, -25, -5, 4),
width_bucket(-20, -25, -5, 4),
width_bucket(-30, -25, -5, 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
5	4	2	0
PREHOOK: query: select
width_bucket(-10, -5, 15, 4),
width_bucket(0, -5, 15, 4),
width_bucket(10, -5, 15, 4),
width_bucket(20, -5, 15, 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(-10, -5, 15, 4),
width_bucket(0, -5, 15, 4),
width_bucket(10, -5, 15, 4),
width_bucket(20, -5, 15, 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
0	2	4	5
PREHOOK: query: select
width_bucket(0.1, 0, 1, 10),
width_bucket(0.25, 0, 1, 10),
width_bucket(0.3456, 0, 1, 10),
width_bucket(0.654321, 0, 1, 10)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(0.1, 0, 1, 10),
width_bucket(0.25, 0, 1, 10),
width_bucket(0.3456, 0, 1, 10),
width_bucket(0.654321, 0, 1, 10)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
2	3	4	7
PREHOOK: query: select
width_bucket(-0.5, -1.5, 1.5, 10),
width_bucket(-0.3, -1.5, 1.5, 10),
width_bucket(-0.25, -1.5, 1.5, 10),
width_bucket(0, -1.5, 1.5, 10),
width_bucket(0.75, -1.5, 1.5, 10),
width_bucket(1.25, -1.5, 1.5, 10),
width_bucket(1.5, -1.5, 1.5, 10)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(-0.5, -1.5, 1.5, 10),
width_bucket(-0.3, -1.5, 1.5, 10),
width_bucket(-0.25, -1.5, 1.5, 10),
width_bucket(0, -1.5, 1.5, 10),
width_bucket(0.75, -1.5, 1.5, 10),
width_bucket(1.25, -1.5, 1.5, 10),
width_bucket(1.5, -1.5, 1.5, 10)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
4	5	5	6	8	10	11
PREHOOK: query: select
width_bucket(1, 25, 5, 4),
width_bucket(10, 25, 5, 4),
width_bucket(20, 25, 5, 4),
width_bucket(30, 25, 5, 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(1, 25, 5, 4),
width_bucket(10, 25, 5, 4),
width_bucket(20, 25, 5, 4),
width_bucket(30, 25, 5, 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
5	4	2	0
PREHOOK: query: select
width_bucket(-10, 15, -5, 4),
width_bucket(0, 15, -5, 4),
width_bucket(10, 15, -5, 4),
width_bucket(20, 15, -5, 4)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(-10, 15, -5, 4),
width_bucket(0, 15, -5, 4),
width_bucket(10, 15, -5, 4),
width_bucket(20, 15, -5, 4)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
5	4	2	0
PREHOOK: query: select
width_bucket(0.1, 1, 0, 10),
width_bucket(0.25, 1, 0, 10),
width_bucket(0.3456, 1, 0, 10),
width_bucket(0.654321, 1, 0, 10)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(0.1, 1, 0, 10),
width_bucket(0.25, 1, 0, 10),
width_bucket(0.3456, 1, 0, 10),
width_bucket(0.654321, 1, 0, 10)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
#### A masked pattern was here ####
10	8	7	4
PREHOOK: query: create table alldecimaltypes(
    cfloat FLOAT,
    cdouble DOUBLE)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alldecimaltypes
POSTHOOK: query: create table alldecimaltypes(
    cfloat FLOAT,
    cdouble DOUBLE)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alldecimaltypes
PREHOOK: query: insert into table alldecimaltypes values (0.1, 0.1), (0.25, 0.25), (0.3456, 0.3456), (0.654321, 0.654321)
PREHOOK: type: QUERY
PREHOOK: Output: default@alldecimaltypes
POSTHOOK: query: insert into table alldecimaltypes values (0.1, 0.1), (0.25, 0.25), (0.3456, 0.3456), (0.654321, 0.654321)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@alldecimaltypes
POSTHOOK: Lineage: alldecimaltypes.cdouble EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: alldecimaltypes.cfloat EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: select
width_bucket(cfloat, 0, 1, 10),
width_bucket(cdouble, 0, 1, 10)
from alldecimaltypes
PREHOOK: type: QUERY
PREHOOK: Input: default@alldecimaltypes
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(cfloat, 0, 1, 10),
width_bucket(cdouble, 0, 1, 10)
from alldecimaltypes
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alldecimaltypes
#### A masked pattern was here ####
2	2
3	3
4	4
7	7
PREHOOK: query: select
width_bucket(cfloat, 0, 1.5, 10),
width_bucket(cdouble, -1.5, 0, 10),
width_bucket(0.25, cfloat, 2, 10),
width_bucket(0.25, 0, cdouble, 10)
from alldecimaltypes
PREHOOK: type: QUERY
PREHOOK: Input: default@alldecimaltypes
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(cfloat, 0, 1.5, 10),
width_bucket(cdouble, -1.5, 0, 10),
width_bucket(0.25, cfloat, 2, 10),
width_bucket(0.25, 0, cdouble, 10)
from alldecimaltypes
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alldecimaltypes
#### A masked pattern was here ####
1	11	1	11
2	11	1	11
3	11	0	8
5	11	0	4
PREHOOK: query: create table alltypes(
    ctinyint TINYINT,
    csmallint SMALLINT,
    cint INT,
    cbigint BIGINT,
    cfloat FLOAT,
    cdouble DOUBLE)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alltypes
POSTHOOK: query: create table alltypes(
    ctinyint TINYINT,
    csmallint SMALLINT,
    cint INT,
    cbigint BIGINT,
    cfloat FLOAT,
    cdouble DOUBLE)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alltypes
PREHOOK: query: insert into table alltypes values
(0, 0, 0, 0, 0.0, 0.0),
(1, 1, 1, 1, 1.0, 1.0),
(25, 25, 25, 25, 25.0, 25.0),
(60, 60, 60, 60, 60.0, 60.0),
(72, 72, 72, 72, 72.0, 72.0),
(100, 100, 100, 100, 100.0, 100.0)
PREHOOK: type: QUERY
PREHOOK: Output: default@alltypes
POSTHOOK: query: insert into table alltypes values
(0, 0, 0, 0, 0.0, 0.0),
(1, 1, 1, 1, 1.0, 1.0),
(25, 25, 25, 25, 25.0, 25.0),
(60, 60, 60, 60, 60.0, 60.0),
(72, 72, 72, 72, 72.0, 72.0),
(100, 100, 100, 100, 100.0, 100.0)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@alltypes
POSTHOOK: Lineage: alltypes.cbigint EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.cdouble EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col6, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.cfloat EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col5, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.cint EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.csmallint EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.ctinyint EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: select
width_bucket(ctinyint, 0, 100, 10),
width_bucket(csmallint, 0, 100, 10),
width_bucket(cint, 0, 100, 10),
width_bucket(cbigint, 0, 100, 10),
width_bucket(cfloat, 0, 100, 10),
width_bucket(cdouble, 0, 100, 10)
from alltypes
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(ctinyint, 0, 100, 10),
width_bucket(csmallint, 0, 100, 10),
width_bucket(cint, 0, 100, 10),
width_bucket(cbigint, 0, 100, 10),
width_bucket(cfloat, 0, 100, 10),
width_bucket(cdouble, 0, 100, 10)
from alltypes
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
1	1	1	1	1	1
1	1	1	1	1	1
3	3	3	3	3	3
7	7	7	7	7	7
8	8	8	8	8	8
11	11	11	11	11	11
PREHOOK: query: truncate table alltypes
PREHOOK: type: TRUNCATETABLE
PREHOOK: Output: default@alltypes
POSTHOOK: query: truncate table alltypes
POSTHOOK: type: TRUNCATETABLE
POSTHOOK: Output: default@alltypes
PREHOOK: query: insert into table alltypes values (5, 5, 5, 10, 4.5, 7.25)
PREHOOK: type: QUERY
PREHOOK: Output: default@alltypes
POSTHOOK: query: insert into table alltypes values (5, 5, 5, 10, 4.5, 7.25)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@alltypes
POSTHOOK: Lineage: alltypes.cbigint EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.cdouble EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col6, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.cfloat EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col5, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.cint EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.csmallint EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: alltypes.ctinyint EXPRESSION [(values__tmp__table__3)values__tmp__table__3.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: select
width_bucket(cdouble, ctinyint, cbigint, 10),
width_bucket(cdouble, csmallint, cbigint, 10),
width_bucket(cdouble, cint, cbigint, 10),
width_bucket(cdouble, cfloat, cbigint, 10)
from alltypes
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypes
#### A masked pattern was here ####
POSTHOOK: query: select
width_bucket(cdouble, ctinyint, cbigint, 10),
width_bucket(cdouble, csmallint, cbigint, 10),
width_bucket(cdouble, cint, cbigint, 10),
width_bucket(cdouble, cfloat, cbigint, 10)
from alltypes
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypes
#### A masked pattern was here ####
5	5	5	6
PREHOOK: query: create table alltinyints (
    ctinyint1 TINYINT,
    ctinyint2 TINYINT,
    ctinyint3 TINYINT,
    cint INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alltinyints
POSTHOOK: query: create table alltinyints (
    ctinyint1 TINYINT,
    ctinyint2 TINYINT,
    ctinyint3 TINYINT,
    cint INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alltinyints
PREHOOK: query: insert into table alltinyints values (5, 1, 10, 2)
PREHOOK: type: QUERY
PREHOOK: Output: default@alltinyints
POSTHOOK: query: insert into table alltinyints values (5, 1, 10, 2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@alltinyints
POSTHOOK: Lineage: alltinyints.cint EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: alltinyints.ctinyint1 EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: alltinyints.ctinyint2 EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: alltinyints.ctinyint3 EXPRESSION [(values__tmp__table__4)values__tmp__table__4.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: select width_bucket(ctinyint1, ctinyint2, ctinyint3, cint) from alltinyints
PREHOOK: type: QUERY
PREHOOK: Input: default@alltinyints
#### A masked pattern was here ####
POSTHOOK: query: select width_bucket(ctinyint1, ctinyint2, ctinyint3, cint) from alltinyints
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltinyints
#### A masked pattern was here ####
1
PREHOOK: query: create table allsmallints (
    csmallint1 SMALLINT,
    csmallint2 SMALLINT,
    csmallint3 SMALLINT,
    cint INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@allsmallints
POSTHOOK: query: create table allsmallints (
    csmallint1 SMALLINT,
    csmallint2 SMALLINT,
    csmallint3 SMALLINT,
    cint INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@allsmallints
PREHOOK: query: insert into table allsmallints values (5, 1, 10, 2)
PREHOOK: type: QUERY
PREHOOK: Output: default@allsmallints
POSTHOOK: query: insert into table allsmallints values (5, 1, 10, 2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@allsmallints
POSTHOOK: Lineage: allsmallints.cint EXPRESSION [(values__tmp__table__5)values__tmp__table__5.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
POSTHOOK: Lineage: allsmallints.csmallint1 EXPRESSION [(values__tmp__table__5)values__tmp__table__5.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: allsmallints.csmallint2 EXPRESSION [(values__tmp__table__5)values__tmp__table__5.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: allsmallints.csmallint3 EXPRESSION [(values__tmp__table__5)values__tmp__table__5.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: select width_bucket(csmallint1, csmallint2, csmallint3, cint) from allsmallints
PREHOOK: type: QUERY
PREHOOK: Input: default@allsmallints
#### A masked pattern was here ####
POSTHOOK: query: select width_bucket(csmallint1, csmallint2, csmallint3, cint) from allsmallints
POSTHOOK: type: QUERY
POSTHOOK: Input: default@allsmallints
#### A masked pattern was here ####
1
PREHOOK: query: create table allints (
    cint1 INT,
    cint2 INT,
    cint3 INT,
    cint4 INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@allints
POSTHOOK: query: create table allints (
    cint1 INT,
    cint2 INT,
    cint3 INT,
    cint4 INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@allints
PREHOOK: query: insert into table allints values (5, 1, 10, 2)
PREHOOK: type: QUERY
PREHOOK: Output: default@allints
POSTHOOK: query: insert into table allints values (5, 1, 10, 2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@allints
POSTHOOK: Lineage: allints.cint1 EXPRESSION [(values__tmp__table__6)values__tmp__table__6.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: allints.cint2 EXPRESSION [(values__tmp__table__6)values__tmp__table__6.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: allints.cint3 EXPRESSION [(values__tmp__table__6)values__tmp__table__6.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
POSTHOOK: Lineage: allints.cint4 EXPRESSION [(values__tmp__table__6)values__tmp__table__6.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
PREHOOK: query: select width_bucket(cint1, cint2, cint3, cint4) from allints
PREHOOK: type: QUERY
PREHOOK: Input: default@allints
#### A masked pattern was here ####
POSTHOOK: query: select width_bucket(cint1, cint2, cint3, cint4) from allints
POSTHOOK: type: QUERY
POSTHOOK: Input: default@allints
#### A masked pattern was here ####
1
PREHOOK: query: create table allbigints (
    cbigint1 BIGINT,
    cbigint2 BIGINT,
    cbigint3 BIGINT,
    cint INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@allbigints
POSTHOOK: query: create table allbigints (
    cbigint1 BIGINT,
    cbigint2 BIGINT,
    cbigint3 BIGINT,
    cint INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@allbigints
PREHOOK: query: insert into table allbigints values (5, 1, 10, 2)
PREHOOK: type: QUERY
PREHOOK: Output: default@allbigints
POSTHOOK: query: insert into table allbigints values (5, 1, 10, 2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@allbigints
POSTHOOK: Lineage: allbigints.cbigint1 EXPRESSION [(values__tmp__table__7)values__tmp__table__7.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: allbigints.cbigint2 EXPRESSION [(values__tmp__table__7)values__tmp__table__7.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: allbigints.cbigint3 EXPRESSION [(values__tmp__table__7)values__tmp__table__7.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
POSTHOOK: Lineage: allbigints.cint EXPRESSION [(values__tmp__table__7)values__tmp__table__7.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
PREHOOK: query: select width_bucket(cbigint1, cbigint2, cbigint3, cint) from allbigints
PREHOOK: type: QUERY
PREHOOK: Input: default@allbigints
#### A masked pattern was here ####
POSTHOOK: query: select width_bucket(cbigint1, cbigint2, cbigint3, cint) from allbigints
POSTHOOK: type: QUERY
POSTHOOK: Input: default@allbigints
#### A masked pattern was here ####
1
PREHOOK: query: create table allfloats (
    cfloat1 FLOAT,
    cfloat2 FLOAT,
    cfloat3 FLOAT,
    cint INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@allfloats
POSTHOOK: query: create table allfloats (
    cfloat1 FLOAT,
    cfloat2 FLOAT,
    cfloat3 FLOAT,
    cint INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@allfloats
PREHOOK: query: insert into table allfloats values (5.0, 1.0, 10.0, 2)
PREHOOK: type: QUERY
PREHOOK: Output: default@allfloats
POSTHOOK: query: insert into table allfloats values (5.0, 1.0, 10.0, 2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@allfloats
POSTHOOK: Lineage: allfloats.cfloat1 EXPRESSION [(values__tmp__table__8)values__tmp__table__8.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: allfloats.cfloat2 EXPRESSION [(values__tmp__table__8)values__tmp__table__8.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: allfloats.cfloat3 EXPRESSION [(values__tmp__table__8)values__tmp__table__8.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
POSTHOOK: Lineage: allfloats.cint EXPRESSION [(values__tmp__table__8)values__tmp__table__8.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
PREHOOK: query: select width_bucket(cfloat1, cfloat2, cfloat3, cint) from allfloats
PREHOOK: type: QUERY
PREHOOK: Input: default@allfloats
#### A masked pattern was here ####
POSTHOOK: query: select width_bucket(cfloat1, cfloat2, cfloat3, cint) from allfloats
POSTHOOK: type: QUERY
POSTHOOK: Input: default@allfloats
#### A masked pattern was here ####
1
PREHOOK: query: create table alldoubles (
    cdouble1 DOUBLE,
    cdouble2 DOUBLE,
    cdouble3 DOUBLE,
    cint INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@alldoubles
POSTHOOK: query: create table alldoubles (
    cdouble1 DOUBLE,
    cdouble2 DOUBLE,
    cdouble3 DOUBLE,
    cint INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@alldoubles
PREHOOK: query: insert into table alldoubles values (5.0, 1.0, 10.0, 2)
PREHOOK: type: QUERY
PREHOOK: Output: default@alldoubles
POSTHOOK: query: insert into table alldoubles values (5.0, 1.0, 10.0, 2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@alldoubles
POSTHOOK: Lineage: alldoubles.cdouble1 EXPRESSION [(values__tmp__table__9)values__tmp__table__9.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: alldoubles.cdouble2 EXPRESSION [(values__tmp__table__9)values__tmp__table__9.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: alldoubles.cdouble3 EXPRESSION [(values__tmp__table__9)values__tmp__table__9.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
POSTHOOK: Lineage: alldoubles.cint EXPRESSION [(values__tmp__table__9)values__tmp__table__9.FieldSchema(name:tmp_values_col4, type:string, comment:), ]
PREHOOK: query: select width_bucket(cdouble1, cdouble2, cdouble3, cint) from alldoubles
PREHOOK: type: QUERY
PREHOOK: Input: default@alldoubles
#### A masked pattern was here ####
POSTHOOK: query: select width_bucket(cdouble1, cdouble2, cdouble3, cint) from alldoubles
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alldoubles
#### A masked pattern was here ####
1
PREHOOK: query: create table testgroupingsets (c1 int, c2 int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@testgroupingsets
POSTHOOK: query: create table testgroupingsets (c1 int, c2 int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@testgroupingsets
PREHOOK: query: insert into table testgroupingsets values (1, 1), (2, 2)
PREHOOK: type: QUERY
PREHOOK: Output: default@testgroupingsets
POSTHOOK: query: insert into table testgroupingsets values (1, 1), (2, 2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@testgroupingsets
POSTHOOK: Lineage: testgroupingsets.c1 EXPRESSION [(values__tmp__table__10)values__tmp__table__10.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: testgroupingsets.c2 EXPRESSION [(values__tmp__table__10)values__tmp__table__10.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
PREHOOK: query: select c1, c2, width_bucket(5, c1, 10, case when grouping(c2) = 0 then 10 else 5 end) from testgroupingsets group by cube(c1, c2)
PREHOOK: type: QUERY
PREHOOK: Input: default@testgroupingsets
#### A masked pattern was here ####
POSTHOOK: query: select c1, c2, width_bucket(5, c1, 10, case when grouping(c2) = 0 then 10 else 5 end) from testgroupingsets group by cube(c1, c2)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@testgroupingsets
#### A masked pattern was here ####
NULL	NULL	NULL
NULL	1	NULL
NULL	2	NULL
1	NULL	3
1	1	5
2	NULL	2
2	2	4
PREHOOK: query: drop table alldecimaltype
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table alldecimaltype
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table alltypes
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@alltypes
PREHOOK: Output: default@alltypes
POSTHOOK: query: drop table alltypes
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@alltypes
POSTHOOK: Output: default@alltypes
PREHOOK: query: drop table alltinyints
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@alltinyints
PREHOOK: Output: default@alltinyints
POSTHOOK: query: drop table alltinyints
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@alltinyints
POSTHOOK: Output: default@alltinyints
PREHOOK: query: drop table allsmallints
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@allsmallints
PREHOOK: Output: default@allsmallints
POSTHOOK: query: drop table allsmallints
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@allsmallints
POSTHOOK: Output: default@allsmallints
PREHOOK: query: drop table allints
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@allints
PREHOOK: Output: default@allints
POSTHOOK: query: drop table allints
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@allints
POSTHOOK: Output: default@allints
PREHOOK: query: drop table allbigints
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@allbigints
PREHOOK: Output: default@allbigints
POSTHOOK: query: drop table allbigints
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@allbigints
POSTHOOK: Output: default@allbigints
PREHOOK: query: drop table allfloats
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@allfloats
PREHOOK: Output: default@allfloats
POSTHOOK: query: drop table allfloats
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@allfloats
POSTHOOK: Output: default@allfloats
PREHOOK: query: drop table alldoubles
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@alldoubles
PREHOOK: Output: default@alldoubles
POSTHOOK: query: drop table alldoubles
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@alldoubles
POSTHOOK: Output: default@alldoubles
PREHOOK: query: drop table testgroupingsets
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@testgroupingsets
PREHOOK: Output: default@testgroupingsets
POSTHOOK: query: drop table testgroupingsets
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@testgroupingsets
POSTHOOK: Output: default@testgroupingsets
