PREHOOK: query: CREATE TABLE test_1 (member BIGINT, attr BIGINT) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_1
POSTHOOK: query: CREATE TABLE test_1 (member BIGINT, attr BIGINT) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_1
PREHOOK: query: CREATE TABLE test_2 (member BIGINT) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_2
POSTHOOK: query: CREATE TABLE test_2 (member BIGINT) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_2
PREHOOK: query: INSERT INTO test_1 VALUES (3,1),(2,2)
PREHOOK: type: QUERY
PREHOOK: Output: default@test_1
POSTHOOK: query: INSERT INTO test_1 VALUES (3,1),(2,2)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@test_1
POSTHOOK: Lineage: test_1.attr EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: test_1.member EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: INSERT INTO test_2 VALUES (1),(2),(3),(4)
PREHOOK: type: QUERY
PREHOOK: Output: default@test_2
POSTHOOK: query: INSERT INTO test_2 VALUES (1),(2),(3),(4)
POSTHOOK: type: QUERY
POSTHOOK: Output: default@test_2
POSTHOOK: Lineage: test_2.member EXPRESSION [(values__tmp__table__2)values__tmp__table__2.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: EXPLAIN
SELECT m.member, (CASE WHEN COALESCE(n.attr, 5)>1 THEN n.attr END) AS attr 
FROM test_2 m LEFT JOIN test_1 n ON m.member = n.member
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT m.member, (CASE WHEN COALESCE(n.attr, 5)>1 THEN n.attr END) AS attr 
FROM test_2 m LEFT JOIN test_1 n ON m.member = n.member
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-3 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-3

STAGE PLANS:
  Stage: Stage-4
    Map Reduce Local Work
      Alias -> Map Local Tables:
        $hdt$_1:n 
          Fetch Operator
            limit: -1
      Alias -> Map Local Operator Tree:
        $hdt$_1:n 
          TableScan
            alias: n
            Statistics: Num rows: 2 Data size: 32 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: member (type: bigint), attr (type: bigint)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 2 Data size: 32 Basic stats: COMPLETE Column stats: NONE
              HashTable Sink Operator
                keys:
                  0 _col0 (type: bigint)
                  1 _col0 (type: bigint)

  Stage: Stage-3
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: m
            Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: member (type: bigint)
              outputColumnNames: _col0
              Statistics: Num rows: 4 Data size: 32 Basic stats: COMPLETE Column stats: NONE
              Map Join Operator
                condition map:
                     Left Outer Join 0 to 1
                keys:
                  0 _col0 (type: bigint)
                  1 _col0 (type: bigint)
                outputColumnNames: _col0, _col2
                Statistics: Num rows: 4 Data size: 35 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: bigint), CASE WHEN ((COALESCE(_col2,5) > 1)) THEN (_col2) ELSE (null) END (type: bigint)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 4 Data size: 35 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 4 Data size: 35 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Local Work:
        Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT m.member, (CASE WHEN COALESCE(n.attr, 5)>1 THEN n.attr END) AS attr 
FROM test_2 m LEFT JOIN test_1 n ON m.member = n.member
PREHOOK: type: QUERY
PREHOOK: Input: default@test_1
PREHOOK: Input: default@test_2
#### A masked pattern was here ####
POSTHOOK: query: SELECT m.member, (CASE WHEN COALESCE(n.attr, 5)>1 THEN n.attr END) AS attr 
FROM test_2 m LEFT JOIN test_1 n ON m.member = n.member
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_1
POSTHOOK: Input: default@test_2
#### A masked pattern was here ####
1	NULL
2	2
3	NULL
4	NULL
