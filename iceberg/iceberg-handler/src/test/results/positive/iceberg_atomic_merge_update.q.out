PREHOOK: query: CREATE EXTERNAL TABLE calls (
  s_key bigint,
  year int
) PARTITIONED BY SPEC (year)
STORED BY Iceberg STORED AS parquet
TBLPROPERTIES ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@calls
POSTHOOK: query: CREATE EXTERNAL TABLE calls (
  s_key bigint,
  year int
) PARTITIONED BY SPEC (year)
STORED BY Iceberg STORED AS parquet
TBLPROPERTIES ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@calls
PREHOOK: query: INSERT INTO calls (s_key, year) VALUES (1090969, 2022)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@calls
POSTHOOK: query: INSERT INTO calls (s_key, year) VALUES (1090969, 2022)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@calls
PREHOOK: query: CREATE EXTERNAL TABLE display (
  skey bigint,
  hierarchy_number string,
  hierarchy_name string,
  language_id int,
  hierarchy_display string,
  orderby string
)
STORED BY Iceberg STORED AS parquet
TBLPROPERTIES ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@display
POSTHOOK: query: CREATE EXTERNAL TABLE display (
  skey bigint,
  hierarchy_number string,
  hierarchy_name string,
  language_id int,
  hierarchy_display string,
  orderby string
)
STORED BY Iceberg STORED AS parquet
TBLPROPERTIES ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@display
PREHOOK: query: INSERT INTO display (skey, language_id, hierarchy_display) VALUES
  (1090969, 3, 'f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1'),
  (1090969, 3, 'f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1-insertnew1')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@display
POSTHOOK: query: INSERT INTO display (skey, language_id, hierarchy_display) VALUES
  (1090969, 3, 'f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1'),
  (1090969, 3, 'f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1-insertnew1')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@display
Warning: Shuffle Join MERGEJOIN[67][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
Warning: Shuffle Join MERGEJOIN[68][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 8' is a cross product
PREHOOK: query: MERGE INTO display USING (
  SELECT distinct display_skey, display, display as orig_display
  FROM (
    SELECT D.skey display_skey, D.hierarchy_display display
    FROM (
      SELECT s_key FROM calls WHERE s_key =  1090969
    ) R
    INNER JOIN display D
      ON R.s_key = D.skey AND D.language_id = 3
    GROUP BY D.skey,
      D.hierarchy_display
  ) sub1

  UNION ALL

  SELECT distinct display_skey, null as display, display as orig_display
  FROM (
    SELECT D.skey display_skey, D.hierarchy_display display
    FROM (
      SELECT s_key FROM calls WHERE s_key =  1090969
    ) R
    INNER JOIN display D
      ON R.s_key = D.skey AND D.language_id = 3
    GROUP BY D.skey,
      D.hierarchy_display
  ) sub2
) sub
ON display.skey = sub.display_skey
    and display.hierarchy_display = sub.display

WHEN MATCHED THEN
  UPDATE SET hierarchy_display = concat(sub.display, '-mergeupdated1')
WHEN NOT MATCHED THEN
  INSERT (skey, language_id, hierarchy_display) values (sub.display_skey, 3, concat(sub.orig_display, '-mergenew1'))
PREHOOK: type: QUERY
PREHOOK: Input: default@calls
PREHOOK: Input: default@display
PREHOOK: Output: default@display
PREHOOK: Output: default@display
PREHOOK: Output: default@merge_tmp_table
POSTHOOK: query: MERGE INTO display USING (
  SELECT distinct display_skey, display, display as orig_display
  FROM (
    SELECT D.skey display_skey, D.hierarchy_display display
    FROM (
      SELECT s_key FROM calls WHERE s_key =  1090969
    ) R
    INNER JOIN display D
      ON R.s_key = D.skey AND D.language_id = 3
    GROUP BY D.skey,
      D.hierarchy_display
  ) sub1

  UNION ALL

  SELECT distinct display_skey, null as display, display as orig_display
  FROM (
    SELECT D.skey display_skey, D.hierarchy_display display
    FROM (
      SELECT s_key FROM calls WHERE s_key =  1090969
    ) R
    INNER JOIN display D
      ON R.s_key = D.skey AND D.language_id = 3
    GROUP BY D.skey,
      D.hierarchy_display
  ) sub2
) sub
ON display.skey = sub.display_skey
    and display.hierarchy_display = sub.display

WHEN MATCHED THEN
  UPDATE SET hierarchy_display = concat(sub.display, '-mergeupdated1')
WHEN NOT MATCHED THEN
  INSERT (skey, language_id, hierarchy_display) values (sub.display_skey, 3, concat(sub.orig_display, '-mergenew1'))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@calls
POSTHOOK: Input: default@display
POSTHOOK: Output: default@display
POSTHOOK: Output: default@display
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(display)display.null, ]
PREHOOK: query: select s.operation, s.summary['added-records'], s.summary['deleted-records'] from default.display.snapshots s
  order by s.snapshot_id
PREHOOK: type: QUERY
PREHOOK: Input: default@display
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select s.operation, s.summary['added-records'], s.summary['deleted-records'] from default.display.snapshots s
  order by s.snapshot_id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@display
POSTHOOK: Output: hdfs://### HDFS PATH ###
append	2	NULL
overwrite	4	NULL
PREHOOK: query: DROP TABLE calls
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@calls
PREHOOK: Output: database:default
PREHOOK: Output: default@calls
POSTHOOK: query: DROP TABLE calls
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@calls
POSTHOOK: Output: database:default
POSTHOOK: Output: default@calls
PREHOOK: query: DROP TABLE display
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@display
PREHOOK: Output: database:default
PREHOOK: Output: default@display
POSTHOOK: query: DROP TABLE display
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@display
POSTHOOK: Output: database:default
POSTHOOK: Output: default@display
PREHOOK: query: CREATE EXTERNAL TABLE calls_v2 (
  s_key bigint,
  year int
) PARTITIONED BY SPEC (year)
STORED BY Iceberg STORED AS parquet
TBLPROPERTIES ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@calls_v2
POSTHOOK: query: CREATE EXTERNAL TABLE calls_v2 (
  s_key bigint,
  year int
) PARTITIONED BY SPEC (year)
STORED BY Iceberg STORED AS parquet
TBLPROPERTIES ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@calls_v2
PREHOOK: query: INSERT INTO calls_v2 (s_key, year) VALUES (1, 2022), (2, 2023), (3, 2024),  (4, 2024), (5, 2025), (1, 2022), (2, 2023),
(3, 2024),  (4, 2024), (5, 2025)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@calls_v2
POSTHOOK: query: INSERT INTO calls_v2 (s_key, year) VALUES (1, 2022), (2, 2023), (3, 2024),  (4, 2024), (5, 2025), (1, 2022), (2, 2023),
(3, 2024),  (4, 2024), (5, 2025)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@calls_v2
PREHOOK: query: update calls_v2 set s_key=10 where year=2023
PREHOOK: type: QUERY
PREHOOK: Input: default@calls_v2
PREHOOK: Output: default@calls_v2
PREHOOK: Output: default@calls_v2
POSTHOOK: query: update calls_v2 set s_key=10 where year=2023
POSTHOOK: type: QUERY
POSTHOOK: Input: default@calls_v2
POSTHOOK: Output: default@calls_v2
POSTHOOK: Output: default@calls_v2
PREHOOK: query: delete from calls_v2 where year=2024
PREHOOK: type: QUERY
PREHOOK: Input: default@calls_v2
PREHOOK: Output: default@calls_v2
POSTHOOK: query: delete from calls_v2 where year=2024
POSTHOOK: type: QUERY
POSTHOOK: Input: default@calls_v2
POSTHOOK: Output: default@calls_v2
PREHOOK: query: select s.operation, s.summary['added-records'], s.summary['deleted-records'] from default.calls_v2.snapshots s
  order by s.snapshot_id
PREHOOK: type: QUERY
PREHOOK: Input: default@calls_v2
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select s.operation, s.summary['added-records'], s.summary['deleted-records'] from default.calls_v2.snapshots s
  order by s.snapshot_id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@calls_v2
POSTHOOK: Output: hdfs://### HDFS PATH ###
append	10	NULL
overwrite	2	NULL
overwrite	NULL	NULL
PREHOOK: query: DROP TABLE calls_v2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@calls_v2
PREHOOK: Output: database:default
PREHOOK: Output: default@calls_v2
POSTHOOK: query: DROP TABLE calls_v2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@calls_v2
POSTHOOK: Output: database:default
POSTHOOK: Output: default@calls_v2
