PREHOOK: query: DROP TABLE IF EXISTS llap_orders PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: DROP TABLE IF EXISTS llap_orders PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: DROP TABLE IF EXISTS llap_items PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: DROP TABLE IF EXISTS llap_items PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: DROP TABLE IF EXISTS mig_source PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: DROP TABLE IF EXISTS mig_source PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: DROP TABLE IF EXISTS target_ice PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: DROP TABLE IF EXISTS target_ice PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: DROP TABLE IF EXISTS calls PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: DROP TABLE IF EXISTS calls PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: DROP TABLE IF EXISTS display PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: DROP TABLE IF EXISTS display PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: CREATE EXTERNAL TABLE calls (
  s_key bigint,
  year int
) PARTITIONED BY SPEC (year)
STORED BY Iceberg STORED AS ORC
TBLPROPERTIES ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@calls
POSTHOOK: query: CREATE EXTERNAL TABLE calls (
  s_key bigint,
  year int
) PARTITIONED BY SPEC (year)
STORED BY Iceberg STORED AS ORC
TBLPROPERTIES ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@calls
PREHOOK: query: INSERT INTO calls (s_key, year) VALUES (1090969, 2022)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@calls
POSTHOOK: query: INSERT INTO calls (s_key, year) VALUES (1090969, 2022)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@calls
PREHOOK: query: CREATE EXTERNAL TABLE display (
  skey bigint,
  hierarchy_number string,
  hierarchy_name string,
  language_id int,
  hierarchy_display string,
  orderby string
)
STORED BY Iceberg STORED AS ORC
TBLPROPERTIES ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@display
POSTHOOK: query: CREATE EXTERNAL TABLE display (
  skey bigint,
  hierarchy_number string,
  hierarchy_name string,
  language_id int,
  hierarchy_display string,
  orderby string
)
STORED BY Iceberg STORED AS ORC
TBLPROPERTIES ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@display
PREHOOK: query: INSERT INTO display (skey, language_id, hierarchy_display) VALUES
  (1090969, 3, 'f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1'),
  (1090969, 3, 'f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1-insertnew1')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@display
POSTHOOK: query: INSERT INTO display (skey, language_id, hierarchy_display) VALUES
  (1090969, 3, 'f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1'),
  (1090969, 3, 'f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1-insertnew1')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@display
Warning: Shuffle Join MERGEJOIN[67][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 2' is a cross product
Warning: Shuffle Join MERGEJOIN[68][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 8' is a cross product
PREHOOK: query: MERGE INTO display USING (
  SELECT distinct display_skey, display, display as orig_display
  FROM (
    SELECT D.skey display_skey, D.hierarchy_display display
    FROM (
      SELECT s_key FROM calls WHERE s_key =  1090969
    ) R
    INNER JOIN display D
      ON R.s_key = D.skey AND D.language_id = 3
    GROUP BY D.skey,
      D.hierarchy_display
  ) sub1

  UNION ALL

  SELECT distinct display_skey, null as display, display as orig_display
  FROM (
    SELECT D.skey display_skey, D.hierarchy_display display
    FROM (
      SELECT s_key FROM calls WHERE s_key =  1090969
    ) R
    INNER JOIN display D
      ON R.s_key = D.skey AND D.language_id = 3
    GROUP BY D.skey,
      D.hierarchy_display
  ) sub2
) sub
ON display.skey = sub.display_skey
    and display.hierarchy_display = sub.display

WHEN MATCHED THEN
  UPDATE SET hierarchy_display = concat(sub.display, '-mergeupdated1')
WHEN NOT MATCHED THEN
  INSERT (skey, language_id, hierarchy_display) values (sub.display_skey, 3, concat(sub.orig_display, '-mergenew1'))
PREHOOK: type: QUERY
PREHOOK: Input: default@calls
PREHOOK: Input: default@display
PREHOOK: Output: default@display
PREHOOK: Output: default@display
PREHOOK: Output: default@merge_tmp_table
POSTHOOK: query: MERGE INTO display USING (
  SELECT distinct display_skey, display, display as orig_display
  FROM (
    SELECT D.skey display_skey, D.hierarchy_display display
    FROM (
      SELECT s_key FROM calls WHERE s_key =  1090969
    ) R
    INNER JOIN display D
      ON R.s_key = D.skey AND D.language_id = 3
    GROUP BY D.skey,
      D.hierarchy_display
  ) sub1

  UNION ALL

  SELECT distinct display_skey, null as display, display as orig_display
  FROM (
    SELECT D.skey display_skey, D.hierarchy_display display
    FROM (
      SELECT s_key FROM calls WHERE s_key =  1090969
    ) R
    INNER JOIN display D
      ON R.s_key = D.skey AND D.language_id = 3
    GROUP BY D.skey,
      D.hierarchy_display
  ) sub2
) sub
ON display.skey = sub.display_skey
    and display.hierarchy_display = sub.display

WHEN MATCHED THEN
  UPDATE SET hierarchy_display = concat(sub.display, '-mergeupdated1')
WHEN NOT MATCHED THEN
  INSERT (skey, language_id, hierarchy_display) values (sub.display_skey, 3, concat(sub.orig_display, '-mergenew1'))
POSTHOOK: type: QUERY
POSTHOOK: Input: default@calls
POSTHOOK: Input: default@display
POSTHOOK: Output: default@display
POSTHOOK: Output: default@display
POSTHOOK: Output: default@merge_tmp_table
POSTHOOK: Lineage: merge_tmp_table.val EXPRESSION [(display)display.null, ]
PREHOOK: query: SELECT * FROM display
PREHOOK: type: QUERY
PREHOOK: Input: default@display
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM display
POSTHOOK: type: QUERY
POSTHOOK: Input: default@display
#### A masked pattern was here ####
1090969	NULL	NULL	3	f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1-insertnew1-mergenew1	NULL
1090969	NULL	NULL	3	f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1-insertnew1-mergeupdated1	NULL
1090969	NULL	NULL	3	f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1-mergenew1	NULL
1090969	NULL	NULL	3	f9e59bae9b131de1d8f02d887ee91e20-mergeupdated1-updated1-mergeupdated1	NULL
PREHOOK: query: CREATE EXTERNAL TABLE target_ice(a int, b string, c int)  STORED BY ICEBERG STORED AS ORC tblproperties ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@target_ice
POSTHOOK: query: CREATE EXTERNAL TABLE target_ice(a int, b string, c int)  STORED BY ICEBERG STORED AS ORC tblproperties ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@target_ice
PREHOOK: query: INSERT INTO target_ice values (1, 'one', 50)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@target_ice
POSTHOOK: query: INSERT INTO target_ice values (1, 'one', 50)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@target_ice
PREHOOK: query: DELETE FROM target_ice WHERE a = 1
PREHOOK: type: QUERY
PREHOOK: Input: default@target_ice
PREHOOK: Output: default@target_ice
POSTHOOK: query: DELETE FROM target_ice WHERE a = 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@target_ice
POSTHOOK: Output: default@target_ice
PREHOOK: query: SELECT * FROM target_ice
PREHOOK: type: QUERY
PREHOOK: Input: default@target_ice
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM target_ice
POSTHOOK: type: QUERY
POSTHOOK: Input: default@target_ice
#### A masked pattern was here ####
PREHOOK: query: CREATE EXTERNAL TABLE llap_items (itemid INT, price INT, category STRING, name STRING, description STRING) STORED BY ICEBERG STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@llap_items
POSTHOOK: query: CREATE EXTERNAL TABLE llap_items (itemid INT, price INT, category STRING, name STRING, description STRING) STORED BY ICEBERG STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@llap_items
PREHOOK: query: INSERT INTO llap_items VALUES
(0, 35000,  'Sedan',     'Model 3', 'Standard range plus'),
(1, 45000,  'Sedan',     'Model 3', 'Long range'),
(2, 50000,  'Sedan',     'Model 3', 'Performance'),
(3, 48000,  'Crossover', 'Model Y', 'Long range'),
(4, 55000,  'Crossover', 'Model Y', 'Performance'),
(5, 83000,  'Sports',    'Model S', 'Long range'),
(6, 123000, 'Sports',   'Model S', 'Plaid')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@llap_items
POSTHOOK: query: INSERT INTO llap_items VALUES
(0, 35000,  'Sedan',     'Model 3', 'Standard range plus'),
(1, 45000,  'Sedan',     'Model 3', 'Long range'),
(2, 50000,  'Sedan',     'Model 3', 'Performance'),
(3, 48000,  'Crossover', 'Model Y', 'Long range'),
(4, 55000,  'Crossover', 'Model Y', 'Performance'),
(5, 83000,  'Sports',    'Model S', 'Long range'),
(6, 123000, 'Sports',   'Model S', 'Plaid')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@llap_items
PREHOOK: query: CREATE EXTERNAL TABLE llap_orders (orderid INT, quantity INT, itemid INT, tradets TIMESTAMP) PARTITIONED BY (p1 STRING, P2 STRING) STORED BY ICEBERG STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@llap_orders
POSTHOOK: query: CREATE EXTERNAL TABLE llap_orders (orderid INT, quantity INT, itemid INT, tradets TIMESTAMP) PARTITIONED BY (p1 STRING, P2 STRING) STORED BY ICEBERG STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@llap_orders
PREHOOK: query: INSERT INTO llap_orders VALUES
(0, 48, 5, timestamp('2000-06-04 19:55:46.129'), 'EU', 'DE'),
(1, 12, 6, timestamp('2007-06-24 19:23:22.829'), 'US', 'TX'),
(2, 76, 4, timestamp('2018-02-19 23:43:51.995'), 'EU', 'DE'),
(3, 91, 5, timestamp('2000-07-15 09:09:11.587'), 'US', 'NJ'),
(4, 18, 6, timestamp('2007-12-02 22:30:39.302'), 'EU', 'ES'),
(5, 71, 5, timestamp('2010-02-08 20:31:23.430'), 'EU', 'DE'),
(6, 78, 3, timestamp('2016-02-22 20:37:37.025'), 'EU', 'FR'),
(7, 88, 0, timestamp('2020-03-26 18:47:40.611'), 'EU', 'FR'),
(8, 87, 4, timestamp('2003-02-20 00:48:09.139'), 'EU', 'ES'),
(9, 60, 6, timestamp('2012-08-28 01:35:54.283'), 'EU', 'IT'),
(10, 24, 5, timestamp('2015-03-28 18:57:50.069'), 'US', 'NY'),
(11, 42, 2, timestamp('2012-06-27 01:13:32.350'), 'EU', 'UK'),
(12, 37, 4, timestamp('2020-08-09 01:18:50.153'), 'US', 'NY'),
(13, 52, 1, timestamp('2019-09-04 01:46:19.558'), 'EU', 'UK'),
(14, 96, 3, timestamp('2019-03-05 22:00:03.020'), 'US', 'NJ'),
(15, 18, 3, timestamp('2001-09-11 00:14:12.687'), 'EU', 'FR'),
(16, 46, 0, timestamp('2013-08-31 02:16:17.878'), 'EU', 'UK'),
(17, 26, 5, timestamp('2001-02-01 20:05:32.317'), 'EU', 'FR'),
(18, 68, 5, timestamp('2009-12-29 08:44:08.048'), 'EU', 'ES'),
(19, 54, 6, timestamp('2015-08-15 01:59:22.177'), 'EU', 'HU'),
(20, 10, 0, timestamp('2018-05-06 12:56:12.789'), 'US', 'CA')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@llap_orders
POSTHOOK: query: INSERT INTO llap_orders VALUES
(0, 48, 5, timestamp('2000-06-04 19:55:46.129'), 'EU', 'DE'),
(1, 12, 6, timestamp('2007-06-24 19:23:22.829'), 'US', 'TX'),
(2, 76, 4, timestamp('2018-02-19 23:43:51.995'), 'EU', 'DE'),
(3, 91, 5, timestamp('2000-07-15 09:09:11.587'), 'US', 'NJ'),
(4, 18, 6, timestamp('2007-12-02 22:30:39.302'), 'EU', 'ES'),
(5, 71, 5, timestamp('2010-02-08 20:31:23.430'), 'EU', 'DE'),
(6, 78, 3, timestamp('2016-02-22 20:37:37.025'), 'EU', 'FR'),
(7, 88, 0, timestamp('2020-03-26 18:47:40.611'), 'EU', 'FR'),
(8, 87, 4, timestamp('2003-02-20 00:48:09.139'), 'EU', 'ES'),
(9, 60, 6, timestamp('2012-08-28 01:35:54.283'), 'EU', 'IT'),
(10, 24, 5, timestamp('2015-03-28 18:57:50.069'), 'US', 'NY'),
(11, 42, 2, timestamp('2012-06-27 01:13:32.350'), 'EU', 'UK'),
(12, 37, 4, timestamp('2020-08-09 01:18:50.153'), 'US', 'NY'),
(13, 52, 1, timestamp('2019-09-04 01:46:19.558'), 'EU', 'UK'),
(14, 96, 3, timestamp('2019-03-05 22:00:03.020'), 'US', 'NJ'),
(15, 18, 3, timestamp('2001-09-11 00:14:12.687'), 'EU', 'FR'),
(16, 46, 0, timestamp('2013-08-31 02:16:17.878'), 'EU', 'UK'),
(17, 26, 5, timestamp('2001-02-01 20:05:32.317'), 'EU', 'FR'),
(18, 68, 5, timestamp('2009-12-29 08:44:08.048'), 'EU', 'ES'),
(19, 54, 6, timestamp('2015-08-15 01:59:22.177'), 'EU', 'HU'),
(20, 10, 0, timestamp('2018-05-06 12:56:12.789'), 'US', 'CA')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@llap_orders
PREHOOK: query: explain select sum(quantity)
    from llap_orders o, llap_items i
    where
        o.itemid = i.itemid and i.price != 83000 and
        (
            (o.quantity > 0 and o.quantity < 39)
                or
            (o.quantity > 39 and o.quantity < 69)
                or
            (o.quantity > 70 )
        )
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_items
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: explain select sum(quantity)
    from llap_orders o, llap_items i
    where
        o.itemid = i.itemid and i.price != 83000 and
        (
            (o.quantity > 0 and o.quantity < 39)
                or
            (o.quantity > 39 and o.quantity < 69)
                or
            (o.quantity > 70 )
        )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_items
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 1 <- Map 3 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: o
                  filterExpr: ((quantity NOT BETWEEN 39 AND 0 or quantity NOT BETWEEN 69 AND 39 or (quantity > 70)) and (((quantity > 0) and (quantity < 39)) or ((quantity > 39) and (quantity < 69)) or (quantity > 70)) and itemid is not null) (type: boolean)
                  probeDecodeDetails: cacheKey:HASH_MAP_MAPJOIN_29_container, bigKeyColName:itemid, smallTablePos:1, keyRatio:0.9523809523809523
                  Statistics: Num rows: 21 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((quantity NOT BETWEEN 39 AND 0 or quantity NOT BETWEEN 69 AND 39 or (quantity > 70)) and (((quantity > 0) and (quantity < 39)) or ((quantity > 39) and (quantity < 69)) or (quantity > 70)) and itemid is not null) (type: boolean)
                    Statistics: Num rows: 21 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: quantity (type: int), itemid (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 21 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        keys:
                          0 _col1 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col0
                        input vertices:
                          1 Map 3
                        Statistics: Num rows: 21 Data size: 84 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: sum(_col0)
                          minReductionHashAggr: 0.95238096
                          mode: hash
                          outputColumnNames: _col0
                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            null sort order: 
                            sort order: 
                            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col0 (type: bigint)
            Execution mode: vectorized, llap
            LLAP IO: all inputs (cache only)
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: i
                  filterExpr: ((price <> 83000) and itemid is not null) (type: boolean)
                  Statistics: Num rows: 7 Data size: 56 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((price <> 83000) and itemid is not null) (type: boolean)
                    Statistics: Num rows: 7 Data size: 56 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: itemid (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 7 Data size: 28 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        null sort order: z
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 7 Data size: 28 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized, llap
            LLAP IO: all inputs (cache only)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select sum(quantity)
from llap_orders o, llap_items i
where
    o.itemid = i.itemid and i.price != 83000 and
    (
        (o.quantity > 0 and o.quantity < 39)
            or
        (o.quantity > 39 and o.quantity < 69)
            or
        (o.quantity > 70 )
    )
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_items
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: select sum(quantity)
from llap_orders o, llap_items i
where
    o.itemid = i.itemid and i.price != 83000 and
    (
        (o.quantity > 0 and o.quantity < 39)
            or
        (o.quantity > 39 and o.quantity < 69)
            or
        (o.quantity > 70 )
    )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_items
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
774
PREHOOK: query: SELECT i.name, i.description, SUM(o.quantity) FROM llap_items i JOIN llap_orders o ON i.itemid = o.itemid  WHERE p1 = 'EU' and i.price >= 50000 GROUP BY i.name, i.description
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_items
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT i.name, i.description, SUM(o.quantity) FROM llap_items i JOIN llap_orders o ON i.itemid = o.itemid  WHERE p1 = 'EU' and i.price >= 50000 GROUP BY i.name, i.description
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_items
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
Model 3	Performance	42
Model S	Long range	213
Model S	Plaid	132
Model Y	Performance	163
PREHOOK: query: ALTER TABLE llap_items CHANGE category cat string AFTER description
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@llap_items
PREHOOK: Output: default@llap_items
POSTHOOK: query: ALTER TABLE llap_items CHANGE category cat string AFTER description
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@llap_items
POSTHOOK: Output: default@llap_items
PREHOOK: query: ALTER TABLE llap_items CHANGE price cost int AFTER name
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@llap_items
PREHOOK: Output: default@llap_items
POSTHOOK: query: ALTER TABLE llap_items CHANGE price cost int AFTER name
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@llap_items
POSTHOOK: Output: default@llap_items
PREHOOK: query: SELECT i.name, i.description, SUM(o.quantity) FROM llap_items i JOIN llap_orders o ON i.itemid = o.itemid  WHERE p1 = 'EU' and i.cost >= 100000 GROUP BY i.name, i.description
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_items
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT i.name, i.description, SUM(o.quantity) FROM llap_items i JOIN llap_orders o ON i.itemid = o.itemid  WHERE p1 = 'EU' and i.cost >= 100000 GROUP BY i.name, i.description
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_items
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
Model S	Plaid	132
PREHOOK: query: ALTER TABLE llap_items ADD COLUMNS (to60 float)
PREHOOK: type: ALTERTABLE_ADDCOLS
PREHOOK: Input: default@llap_items
PREHOOK: Output: default@llap_items
POSTHOOK: query: ALTER TABLE llap_items ADD COLUMNS (to60 float)
POSTHOOK: type: ALTERTABLE_ADDCOLS
POSTHOOK: Input: default@llap_items
POSTHOOK: Output: default@llap_items
PREHOOK: query: INSERT INTO llap_items VALUES
(7, 'Model X', 93000, 'Long range', 'SUV', 3.8),
(7, 'Model X', 113000, 'Plaid', 'SUV', 2.5)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@llap_items
POSTHOOK: query: INSERT INTO llap_items VALUES
(7, 'Model X', 93000, 'Long range', 'SUV', 3.8),
(7, 'Model X', 113000, 'Plaid', 'SUV', 2.5)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@llap_items
PREHOOK: query: SELECT cat, min(to60) from llap_items group by cat
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_items
#### A masked pattern was here ####
POSTHOOK: query: SELECT cat, min(to60) from llap_items group by cat
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_items
#### A masked pattern was here ####
Crossover	NULL
SUV	2.5
Sedan	NULL
Sports	NULL
PREHOOK: query: ALTER TABLE llap_items REPLACE COLUMNS (itemid int, name string, cost int, description string, to60 float)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@llap_items
PREHOOK: Output: default@llap_items
POSTHOOK: query: ALTER TABLE llap_items REPLACE COLUMNS (itemid int, name string, cost int, description string, to60 float)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@llap_items
POSTHOOK: Output: default@llap_items
PREHOOK: query: INSERT INTO llap_items VALUES
(8, 'Cybertruck', 40000, 'Single Motor RWD', 6.5),
(9, 'Cybertruck', 50000, 'Dual Motor AWD', 4.5)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@llap_items
POSTHOOK: query: INSERT INTO llap_items VALUES
(8, 'Cybertruck', 40000, 'Single Motor RWD', 6.5),
(9, 'Cybertruck', 50000, 'Dual Motor AWD', 4.5)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@llap_items
PREHOOK: query: SELECT name, min(to60), max(cost) FROM llap_items WHERE itemid > 3 GROUP BY name
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_items
#### A masked pattern was here ####
POSTHOOK: query: SELECT name, min(to60), max(cost) FROM llap_items WHERE itemid > 3 GROUP BY name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_items
#### A masked pattern was here ####
Cybertruck	4.5	50000
Model S	NULL	123000
Model X	2.5	113000
Model Y	NULL	55000
PREHOOK: query: ALTER TABLE llap_orders CHANGE tradets ordertime timestamp AFTER P2
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@llap_orders
PREHOOK: Output: default@llap_orders
POSTHOOK: query: ALTER TABLE llap_orders CHANGE tradets ordertime timestamp AFTER P2
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@llap_orders
POSTHOOK: Output: default@llap_orders
PREHOOK: query: ALTER TABLE llap_orders CHANGE p1 region string
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@llap_orders
PREHOOK: Output: default@llap_orders
POSTHOOK: query: ALTER TABLE llap_orders CHANGE p1 region string
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@llap_orders
POSTHOOK: Output: default@llap_orders
PREHOOK: query: INSERT INTO llap_orders VALUES
(21, 21, 8, 'EU', 'HU', timestamp('2000-01-04 19:55:46.129'))
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@llap_orders
POSTHOOK: query: INSERT INTO llap_orders VALUES
(21, 21, 8, 'EU', 'HU', timestamp('2000-01-04 19:55:46.129'))
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@llap_orders
PREHOOK: query: SELECT region, min(ordertime), sum(quantity) FROM llap_orders WHERE itemid > 5 GROUP BY region
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT region, min(ordertime), sum(quantity) FROM llap_orders WHERE itemid > 5 GROUP BY region
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
EU	2000-01-04 19:55:46.129	153
US	2007-06-24 19:23:22.829	12
PREHOOK: query: ALTER TABLE llap_orders CHANGE P2 state string
PREHOOK: type: ALTERTABLE_RENAMECOL
PREHOOK: Input: default@llap_orders
PREHOOK: Output: default@llap_orders
POSTHOOK: query: ALTER TABLE llap_orders CHANGE P2 state string
POSTHOOK: type: ALTERTABLE_RENAMECOL
POSTHOOK: Input: default@llap_orders
POSTHOOK: Output: default@llap_orders
PREHOOK: query: SELECT region, state, min(ordertime), sum(quantity) FROM llap_orders WHERE itemid > 5 GROUP BY region, state
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT region, state, min(ordertime), sum(quantity) FROM llap_orders WHERE itemid > 5 GROUP BY region, state
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
EU	ES	2007-12-02 22:30:39.302	18
EU	HU	2000-01-04 19:55:46.129	75
EU	IT	2012-08-28 01:35:54.283	60
US	TX	2007-06-24 19:23:22.829	12
PREHOOK: query: ALTER TABLE llap_orders ADD COLUMNS (city string)
PREHOOK: type: ALTERTABLE_ADDCOLS
PREHOOK: Input: default@llap_orders
PREHOOK: Output: default@llap_orders
POSTHOOK: query: ALTER TABLE llap_orders ADD COLUMNS (city string)
POSTHOOK: type: ALTERTABLE_ADDCOLS
POSTHOOK: Input: default@llap_orders
POSTHOOK: Output: default@llap_orders
PREHOOK: query: INSERT INTO llap_orders VALUES
(22, 99, 9, 'EU', 'DE', timestamp('2021-01-04 19:55:46.129'), 'München')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@llap_orders
POSTHOOK: query: INSERT INTO llap_orders VALUES
(22, 99, 9, 'EU', 'DE', timestamp('2021-01-04 19:55:46.129'), 'München')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@llap_orders
PREHOOK: query: SELECT state, max(city) from llap_orders WHERE region = 'EU' GROUP BY state
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT state, max(city) from llap_orders WHERE region = 'EU' GROUP BY state
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
DE	München
ES	NULL
FR	NULL
HU	NULL
IT	NULL
UK	NULL
PREHOOK: query: ALTER TABLE llap_orders SET PARTITION SPEC (region, state, city)
PREHOOK: type: ALTERTABLE_SETPARTSPEC
PREHOOK: Input: default@llap_orders
POSTHOOK: query: ALTER TABLE llap_orders SET PARTITION SPEC (region, state, city)
POSTHOOK: type: ALTERTABLE_SETPARTSPEC
POSTHOOK: Input: default@llap_orders
POSTHOOK: Output: default@llap_orders
PREHOOK: query: INSERT INTO llap_orders VALUES
(23, 89, 6, 'EU', 'IT', timestamp('2021-02-04 19:55:46.129'), 'Venezia')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@llap_orders
POSTHOOK: query: INSERT INTO llap_orders VALUES
(23, 89, 6, 'EU', 'IT', timestamp('2021-02-04 19:55:46.129'), 'Venezia')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@llap_orders
PREHOOK: query: SELECT state, max(city), avg(itemid) from llap_orders WHERE region = 'EU' GROUP BY state
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT state, max(city), avg(itemid) from llap_orders WHERE region = 'EU' GROUP BY state
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
DE	München	5.75
ES	NULL	5.0
FR	NULL	2.75
HU	NULL	7.0
IT	Venezia	6.0
UK	NULL	1.0
PREHOOK: query: ALTER TABLE llap_orders SET PARTITION SPEC (state, city)
PREHOOK: type: ALTERTABLE_SETPARTSPEC
PREHOOK: Input: default@llap_orders
POSTHOOK: query: ALTER TABLE llap_orders SET PARTITION SPEC (state, city)
POSTHOOK: type: ALTERTABLE_SETPARTSPEC
POSTHOOK: Input: default@llap_orders
POSTHOOK: Output: default@llap_orders
PREHOOK: query: INSERT INTO llap_orders VALUES
(24, 88, 5, 'EU', 'UK', timestamp('2006-02-04 19:55:46.129'), 'London')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@llap_orders
POSTHOOK: query: INSERT INTO llap_orders VALUES
(24, 88, 5, 'EU', 'UK', timestamp('2006-02-04 19:55:46.129'), 'London')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@llap_orders
PREHOOK: query: SELECT state, max(city), avg(itemid) from llap_orders WHERE region = 'EU' GROUP BY state
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT state, max(city), avg(itemid) from llap_orders WHERE region = 'EU' GROUP BY state
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
DE	München	5.75
ES	NULL	5.0
FR	NULL	2.75
HU	NULL	7.0
IT	Venezia	6.0
UK	London	2.0
PREHOOK: query: ALTER TABLE llap_orders REPLACE COLUMNS (quantity int, itemid int, region string, state string, ordertime timestamp, city string)
PREHOOK: type: ALTERTABLE_REPLACECOLS
PREHOOK: Input: default@llap_orders
PREHOOK: Output: default@llap_orders
POSTHOOK: query: ALTER TABLE llap_orders REPLACE COLUMNS (quantity int, itemid int, region string, state string, ordertime timestamp, city string)
POSTHOOK: type: ALTERTABLE_REPLACECOLS
POSTHOOK: Input: default@llap_orders
POSTHOOK: Output: default@llap_orders
PREHOOK: query: INSERT INTO llap_orders VALUES
(88, 5, 'EU', 'FR', timestamp('2006-02-04 19:55:46.129'), 'Paris')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@llap_orders
POSTHOOK: query: INSERT INTO llap_orders VALUES
(88, 5, 'EU', 'FR', timestamp('2006-02-04 19:55:46.129'), 'Paris')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@llap_orders
PREHOOK: query: SELECT state, max(city), avg(itemid) from llap_orders WHERE region = 'EU' GROUP BY state
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT state, max(city), avg(itemid) from llap_orders WHERE region = 'EU' GROUP BY state
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
DE	München	5.75
ES	NULL	5.0
FR	Paris	3.2
HU	NULL	7.0
IT	Venezia	6.0
UK	London	2.0
PREHOOK: query: SELECT o.city, i.name, min(i.cost), max(to60), sum(o.quantity) FROM llap_items i JOIN llap_orders o ON i.itemid = o.itemid  WHERE region = 'EU' and i.cost >= 50000 and ordertime > timestamp('2010-01-01') GROUP BY o.city, i.name
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_items
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT o.city, i.name, min(i.cost), max(to60), sum(o.quantity) FROM llap_items i JOIN llap_orders o ON i.itemid = o.itemid  WHERE region = 'EU' and i.cost >= 50000 and ordertime > timestamp('2010-01-01') GROUP BY o.city, i.name
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_items
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
München	Cybertruck	50000	4.5	99
NULL	Model 3	50000	NULL	42
NULL	Model S	83000	NULL	185
NULL	Model Y	55000	NULL	76
Venezia	Model S	123000	NULL	89
PREHOOK: query: SELECT i.name, i.description, SUM(o.quantity) FROM llap_items i JOIN llap_orders o ON i.itemid = o.itemid  WHERE region = 'EU' and i.cost >= 50000 GROUP BY i.name, i.description
PREHOOK: type: QUERY
PREHOOK: Input: default@llap_items
PREHOOK: Input: default@llap_orders
#### A masked pattern was here ####
POSTHOOK: query: SELECT i.name, i.description, SUM(o.quantity) FROM llap_items i JOIN llap_orders o ON i.itemid = o.itemid  WHERE region = 'EU' and i.cost >= 50000 GROUP BY i.name, i.description
POSTHOOK: type: QUERY
POSTHOOK: Input: default@llap_items
POSTHOOK: Input: default@llap_orders
#### A masked pattern was here ####
Cybertruck	Dual Motor AWD	99
Model 3	Performance	42
Model S	Long range	389
Model S	Plaid	221
Model Y	Performance	163
PREHOOK: query: CREATE EXTERNAL TABLE mig_source (id int) partitioned by (region string) stored as ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@mig_source
POSTHOOK: query: CREATE EXTERNAL TABLE mig_source (id int) partitioned by (region string) stored as ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mig_source
PREHOOK: query: INSERT INTO mig_source VALUES (1, 'EU'), (1, 'US'), (2, 'EU'), (3, 'EU'), (2, 'US')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@mig_source
POSTHOOK: query: INSERT INTO mig_source VALUES (1, 'EU'), (1, 'US'), (2, 'EU'), (3, 'EU'), (2, 'US')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@mig_source
POSTHOOK: Output: default@mig_source@region=EU
POSTHOOK: Output: default@mig_source@region=US
POSTHOOK: Lineage: mig_source PARTITION(region=EU).id SCRIPT []
POSTHOOK: Lineage: mig_source PARTITION(region=US).id SCRIPT []
PREHOOK: query: ALTER TABLE mig_source CONVERT TO ICEBERG
PREHOOK: type: ALTERTABLE_CONVERT
PREHOOK: Input: default@mig_source
POSTHOOK: query: ALTER TABLE mig_source CONVERT TO ICEBERG
POSTHOOK: type: ALTERTABLE_CONVERT
POSTHOOK: Input: default@mig_source
POSTHOOK: Output: default@mig_source
PREHOOK: query: SELECT region, SUM(id) from mig_source GROUP BY region
PREHOOK: type: QUERY
PREHOOK: Input: default@mig_source
#### A masked pattern was here ####
POSTHOOK: query: SELECT region, SUM(id) from mig_source GROUP BY region
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mig_source
#### A masked pattern was here ####
EU	6
US	3
PREHOOK: query: SELECT region, SUM(id) from mig_source GROUP BY region
PREHOOK: type: QUERY
PREHOOK: Input: default@mig_source
#### A masked pattern was here ####
POSTHOOK: query: SELECT region, SUM(id) from mig_source GROUP BY region
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mig_source
#### A masked pattern was here ####
EU	6
US	3
