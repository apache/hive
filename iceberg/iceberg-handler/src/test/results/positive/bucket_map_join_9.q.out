PREHOOK: query: CREATE TABLE tbl (foid string, part string, id string) PARTITIONED BY SPEC(bucket(10, id), bucket(10, part)) STORED BY ICEBERG
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl
POSTHOOK: query: CREATE TABLE tbl (foid string, part string, id string) PARTITIONED BY SPEC(bucket(10, id), bucket(10, part)) STORED BY ICEBERG
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl
PREHOOK: query: INSERT INTO tbl VALUES ('1234', 'PART_123', '1'), ('1235', 'PART_124', '2')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tbl
POSTHOOK: query: INSERT INTO tbl VALUES ('1234', 'PART_123', '1'), ('1235', 'PART_124', '2')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tbl
PREHOOK: query: EXPLAIN
SELECT * FROM tbl JOIN tbl tbl2 ON tbl.id = tbl2.id AND tbl.part = tbl2.part
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: EXPLAIN
SELECT * FROM tbl JOIN tbl tbl2 ON tbl.id = tbl2.id AND tbl.part = tbl2.part
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 2 (CUSTOM_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Map 1 vectorized
      File Output Operator [FS_53]
        Map Join Operator [MAPJOIN_52] (rows=2 width=530)
          BucketMapJoin:true,Conds:SEL_51._col1, _col2=RS_49._col1, _col2(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
        <-Map 2 [CUSTOM_EDGE] vectorized
          MULTICAST [RS_49]
            PartitionCols:_col2, _col1
            Select Operator [SEL_48] (rows=2 width=265)
              Output:["_col0","_col1","_col2"]
              Filter Operator [FIL_47] (rows=2 width=265)
                predicate:(id is not null and part is not null)
                TableScan [TS_3] (rows=2 width=265)
                  default@tbl,tbl2,Tbl:COMPLETE,Col:COMPLETE,Output:["foid","part","id"]
        <-Select Operator [SEL_51] (rows=2 width=265)
            Output:["_col0","_col1","_col2"]
            Filter Operator [FIL_50] (rows=2 width=265)
              predicate:(id is not null and part is not null)
              TableScan [TS_0] (rows=2 width=265)
                default@tbl,tbl,Tbl:COMPLETE,Col:COMPLETE,Grouping Num Buckets:100,Grouping Partition Columns:["id","part"],Output:["foid","part","id"]

PREHOOK: query: SELECT * FROM tbl JOIN tbl tbl2 ON tbl.id = tbl2.id AND tbl.part = tbl2.part
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: SELECT * FROM tbl JOIN tbl tbl2 ON tbl.id = tbl2.id AND tbl.part = tbl2.part
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl
POSTHOOK: Output: hdfs://### HDFS PATH ###
1234	PART_123	1	1234	PART_123	1
1235	PART_124	2	1235	PART_124	2
