PREHOOK: query: drop table if exists tbl_ice_puffin
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: drop table if exists tbl_ice_puffin
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: create external table tbl_ice_puffin(a int, b string, c int) stored by iceberg tblproperties ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: create external table tbl_ice_puffin(a int, b string, c int) stored by iceberg tblproperties ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: insert into tbl_ice_puffin values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: insert into tbl_ice_puffin values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: insert into tbl_ice_puffin values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: insert into tbl_ice_puffin values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: explain select * from tbl_ice_puffin order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select * from tbl_ice_puffin order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=18 width=95)
          Output:["_col0","_col1","_col2"]
        <-Map 1 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_6]
            Select Operator [SEL_5] (rows=18 width=95)
              Output:["_col0","_col1","_col2"]
              TableScan [TS_0] (rows=18 width=95)
                default@tbl_ice_puffin,tbl_ice_puffin,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b","c"]

PREHOOK: query: select * from tbl_ice_puffin order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from tbl_ice_puffin order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	one	50
1	one	50
2	two	51
2	two	51
2	two	51
2	two	51
2	two	51
2	two	51
3	three	52
3	three	52
4	four	53
4	four	53
5	five	54
5	five	54
111	one	55
111	one	55
333	two	56
333	two	56
PREHOOK: query: desc formatted tbl_ice_puffin b
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@tbl_ice_puffin
POSTHOOK: query: desc formatted tbl_ice_puffin b
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@tbl_ice_puffin
col_name            	b                   
data_type           	string              
min                 	                    
max                 	                    
num_nulls           	0                   
distinct_count      	5                   
avg_col_len         	3.4444444444444446  
max_col_len         	5                   
num_trues           	                    
num_falses          	                    
bit_vector          	                    
comment             	                    
COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"a\":\"true\",\"b\":\"true\",\"c\":\"true\"}}
PREHOOK: query: update tbl_ice_puffin set b='two' where b='one' or b='three'
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: default@tbl_ice_puffin
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: update tbl_ice_puffin set b='two' where b='one' or b='three'
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: default@tbl_ice_puffin
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: analyze table tbl_ice_puffin  compute statistics for columns
PREHOOK: type: ANALYZE_TABLE
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: analyze table tbl_ice_puffin  compute statistics for columns
POSTHOOK: type: ANALYZE_TABLE
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
PREHOOK: query: explain select * from tbl_ice_puffin order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select * from tbl_ice_puffin order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=18 width=95)
          Output:["_col0","_col1","_col2"]
        <-Map 1 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_6]
            Select Operator [SEL_5] (rows=18 width=95)
              Output:["_col0","_col1","_col2"]
              TableScan [TS_0] (rows=18 width=95)
                default@tbl_ice_puffin,tbl_ice_puffin,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b","c"]

PREHOOK: query: select * from tbl_ice_puffin order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from tbl_ice_puffin order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	two	50
1	two	50
2	two	51
2	two	51
2	two	51
2	two	51
2	two	51
2	two	51
3	two	52
3	two	52
4	four	53
4	four	53
5	five	54
5	five	54
111	two	55
111	two	55
333	two	56
333	two	56
PREHOOK: query: select count(*) from tbl_ice_puffin
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from tbl_ice_puffin
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
18
PREHOOK: query: desc formatted tbl_ice_puffin b
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@tbl_ice_puffin
POSTHOOK: query: desc formatted tbl_ice_puffin b
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@tbl_ice_puffin
col_name            	b                   
data_type           	string              
min                 	                    
max                 	                    
num_nulls           	0                   
distinct_count      	3                   
avg_col_len         	3.2222222222222223  
max_col_len         	4                   
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	                    
COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"a\":\"true\",\"b\":\"true\",\"c\":\"true\"}}
PREHOOK: query: drop table if exists tbl_ice_puffin
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: drop table if exists tbl_ice_puffin
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: create external table tbl_ice_puffin(a int, b string, c int) stored by iceberg tblproperties ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: create external table tbl_ice_puffin(a int, b string, c int) stored by iceberg tblproperties ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: insert into tbl_ice_puffin values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: insert into tbl_ice_puffin values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: explain select * from tbl_ice_puffin order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select * from tbl_ice_puffin order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=9 width=95)
          Output:["_col0","_col1","_col2"]
        <-Map 1 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_6]
            Select Operator [SEL_5] (rows=9 width=95)
              Output:["_col0","_col1","_col2"]
              TableScan [TS_0] (rows=9 width=95)
                default@tbl_ice_puffin,tbl_ice_puffin,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b","c"]

PREHOOK: query: drop table if exists tbl_ice_puffin
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: drop table if exists tbl_ice_puffin
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: create external table tbl_ice_puffin(a int, b string, c int) stored by iceberg tblproperties ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: create external table tbl_ice_puffin(a int, b string, c int) stored by iceberg tblproperties ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: insert into tbl_ice_puffin values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: insert into tbl_ice_puffin values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: explain select * from tbl_ice_puffin order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select * from tbl_ice_puffin order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=9 width=95)
          Output:["_col0","_col1","_col2"]
        <-Map 1 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_6]
            Select Operator [SEL_5] (rows=9 width=95)
              Output:["_col0","_col1","_col2"]
              TableScan [TS_0] (rows=9 width=95)
                default@tbl_ice_puffin,tbl_ice_puffin,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b","c"]

PREHOOK: query: select * from tbl_ice_puffin order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from tbl_ice_puffin order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	one	50
2	two	51
2	two	51
2	two	51
3	three	52
4	four	53
5	five	54
111	one	55
333	two	56
PREHOOK: query: select count(*) from tbl_ice_puffin
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from tbl_ice_puffin
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: hdfs://### HDFS PATH ###
9
PREHOOK: query: desc formatted tbl_ice_puffin a
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@tbl_ice_puffin
POSTHOOK: query: desc formatted tbl_ice_puffin a
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@tbl_ice_puffin
col_name            	a                   
data_type           	int                 
min                 	1                   
max                 	333                 
num_nulls           	0                   
distinct_count      	7                   
avg_col_len         	                    
max_col_len         	                    
num_trues           	                    
num_falses          	                    
bit_vector          	HL                  
comment             	                    
COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"a\":\"true\",\"b\":\"true\",\"c\":\"true\"}}
PREHOOK: query: drop table if exists tbl_ice
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: drop table if exists tbl_ice
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: create external table tbl_ice(a int, b string, c int) stored by iceberg tblproperties ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tbl_ice
POSTHOOK: query: create external table tbl_ice(a int, b string, c int) stored by iceberg tblproperties ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tbl_ice
PREHOOK: query: insert into tbl_ice values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@tbl_ice
POSTHOOK: query: insert into tbl_ice values (1, 'one', 50), (2, 'two', 51),(2, 'two', 51),(2, 'two', 51), (3, 'three', 52), (4, 'four', 53), (5, 'five', 54), (111, 'one', 55), (333, 'two', 56)
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@tbl_ice
PREHOOK: query: explain select * from tbl_ice order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select * from tbl_ice order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=9 width=95)
          Output:["_col0","_col1","_col2"]
        <-Map 1 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_6]
            Select Operator [SEL_5] (rows=9 width=95)
              Output:["_col0","_col1","_col2"]
              TableScan [TS_0] (rows=9 width=95)
                default@tbl_ice,tbl_ice,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b","c"]

PREHOOK: query: select * from tbl_ice order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select * from tbl_ice order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice
POSTHOOK: Output: hdfs://### HDFS PATH ###
1	one	50
2	two	51
2	two	51
2	two	51
3	three	52
4	four	53
5	five	54
111	one	55
333	two	56
PREHOOK: query: select count(*) from tbl_ice
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from tbl_ice
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice
POSTHOOK: Output: hdfs://### HDFS PATH ###
9
PREHOOK: query: delete from tbl_ice_puffin  where  a = 2
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice_puffin
PREHOOK: Output: default@tbl_ice_puffin
POSTHOOK: query: delete from tbl_ice_puffin  where  a = 2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice_puffin
POSTHOOK: Output: default@tbl_ice_puffin
PREHOOK: query: explain select * from tbl_ice order by a, b, c
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select * from tbl_ice order by a, b, c
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=9 width=95)
          Output:["_col0","_col1","_col2"]
        <-Map 1 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_6]
            Select Operator [SEL_5] (rows=9 width=95)
              Output:["_col0","_col1","_col2"]
              TableScan [TS_0] (rows=9 width=95)
                default@tbl_ice,tbl_ice,Tbl:COMPLETE,Col:COMPLETE,Output:["a","b","c"]

PREHOOK: query: select count(*) from tbl_ice
PREHOOK: type: QUERY
PREHOOK: Input: default@tbl_ice
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: select count(*) from tbl_ice
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tbl_ice
POSTHOOK: Output: hdfs://### HDFS PATH ###
9
PREHOOK: query: create table t1 (a int) stored by iceberg tblproperties ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t1
POSTHOOK: query: create table t1 (a int) stored by iceberg tblproperties ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t1
PREHOOK: query: create table t2 (b int) stored by iceberg tblproperties ('format-version'='2')
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@t2
POSTHOOK: query: create table t2 (b int) stored by iceberg tblproperties ('format-version'='2')
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@t2
PREHOOK: query: describe formatted t1
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@t1
POSTHOOK: query: describe formatted t1
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@t1
# col_name            	data_type           	comment             
a                   	int                 	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	EXTERNAL_TABLE      	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"a\":\"true\"}}
	EXTERNAL            	TRUE                
	bucketing_version   	2                   
	current-schema      	{\"type\":\"struct\",\"schema-id\":0,\"fields\":[{\"id\":1,\"name\":\"a\",\"required\":false,\"type\":\"int\"}]}
	engine.hive.enabled 	true                
	format-version      	2                   
	iceberg.orc.files.only	false               
	metadata_location   	hdfs://### HDFS PATH ###
	numFiles            	0                   
	numRows             	0                   
	rawDataSize         	0                   
	serialization.format	1                   
	snapshot-count      	0                   
	storage_handler     	org.apache.iceberg.mr.hive.HiveIcebergStorageHandler
	table_type          	ICEBERG             
	totalSize           	0                   
#### A masked pattern was here ####
	uuid                	#Masked#
	write.delete.mode   	merge-on-read       
	write.merge.mode    	merge-on-read       
	write.update.mode   	merge-on-read       
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.iceberg.mr.hive.HiveIcebergSerDe	 
InputFormat:        	org.apache.iceberg.mr.hive.HiveIcebergInputFormat	 
OutputFormat:       	org.apache.iceberg.mr.hive.HiveIcebergOutputFormat	 
Compressed:         	No                  	 
Sort Columns:       	[]                  	 
PREHOOK: query: describe formatted t2
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@t2
POSTHOOK: query: describe formatted t2
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@t2
# col_name            	data_type           	comment             
b                   	int                 	                    
	 	 
# Detailed Table Information	 	 
Database:           	default             	 
#### A masked pattern was here ####
Retention:          	0                   	 
#### A masked pattern was here ####
Table Type:         	EXTERNAL_TABLE      	 
Table Parameters:	 	 
	COLUMN_STATS_ACCURATE	{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"b\":\"true\"}}
	EXTERNAL            	TRUE                
	bucketing_version   	2                   
	current-schema      	{\"type\":\"struct\",\"schema-id\":0,\"fields\":[{\"id\":1,\"name\":\"b\",\"required\":false,\"type\":\"int\"}]}
	engine.hive.enabled 	true                
	format-version      	2                   
	iceberg.orc.files.only	false               
	metadata_location   	hdfs://### HDFS PATH ###
	numFiles            	0                   
	numRows             	0                   
	rawDataSize         	0                   
	serialization.format	1                   
	snapshot-count      	0                   
	storage_handler     	org.apache.iceberg.mr.hive.HiveIcebergStorageHandler
	table_type          	ICEBERG             
	totalSize           	0                   
#### A masked pattern was here ####
	uuid                	#Masked#
	write.delete.mode   	merge-on-read       
	write.merge.mode    	merge-on-read       
	write.update.mode   	merge-on-read       
	 	 
# Storage Information	 	 
SerDe Library:      	org.apache.iceberg.mr.hive.HiveIcebergSerDe	 
InputFormat:        	org.apache.iceberg.mr.hive.HiveIcebergInputFormat	 
OutputFormat:       	org.apache.iceberg.mr.hive.HiveIcebergOutputFormat	 
Compressed:         	No                  	 
Sort Columns:       	[]                  	 
PREHOOK: query: explain select * from t1 join t2 on t1.a = t2.b
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain select * from t1 join t2 on t1.a = t2.b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 3 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2
      File Output Operator [FS_10]
        Merge Join Operator [MERGEJOIN_25] (rows=1 width=4)
          Conds:RS_28._col0=RS_31._col0(Inner),Output:["_col0","_col1"]
        <-Map 1 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_28]
            PartitionCols:_col0
            Select Operator [SEL_27] (rows=1 width=4)
              Output:["_col0"]
              Filter Operator [FIL_26] (rows=1 width=4)
                predicate:a is not null
                TableScan [TS_0] (rows=1 width=4)
                  default@t1,t1,Tbl:COMPLETE,Col:NONE,Output:["a"]
        <-Map 3 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_31]
            PartitionCols:_col0
            Select Operator [SEL_30] (rows=1 width=4)
              Output:["_col0"]
              Filter Operator [FIL_29] (rows=1 width=4)
                predicate:b is not null
                TableScan [TS_3] (rows=1 width=4)
                  default@t2,t2,Tbl:COMPLETE,Col:NONE,Output:["b"]

