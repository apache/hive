app-introduction: {0} version {1} by {2}

jline-version: The version of the required {0} library is too old. Version \
				"{1}" was found, but "{2}" is required.

enter-for-more: [ Hit "enter" for more ("q" to exit) ]
no-manual: Could not find manual resource.
executing-command:	Executing command: {0}
unknown-command: Unknown command: {0}
unrecognized-argument: Unrecognized argument: {0}
autocommit-needs-off: Operation requires that autocommit be turned off.
no-current-connection: No current connection
connection-is-closed: Connection is closed
reconnecting: Reconnecting to "{0}"...
connecting: Connecting to "{0}"...
no-driver: No known driver to handle "{0}"
setting-prop: Setting property: {0}
saving-options: Saving preferences to: {0}
loaded-options: Loaded preferences from: {0}

jdbc-level: JDBC level
compliant: Compliant
jdbc-version: Version
driver-class: Driver Class

help-quit: Exits the program
help-dropall: Drop all tables in the current database
help-connect: Open a new connection to the database.
help-manual: Display the BeeLine manual
help-typeinfo: Display the type map for the current connection
help-describe: Describe a table
help-reconnect: Reconnect to the database
help-metadata: Obtain metadata information
help-dbinfo: Give metadata information about the database
help-rehash: Fetch table and column names for command completion
help-verbose: Set verbose mode on
help-run: Run a script from the specified file
help-list: List the current connections
help-all: Execute the specified SQL against all the current connections
help-go: Select the current connection
help-script: Start saving a script to a file
help-brief: Set verbose mode off
help-close: Close the current connection to the database
help-closeall: Close all current open connections
help-isolation: Set the transaction isolation for this connection
help-nativesql: Show the native SQL for the specified statement
help-call: Execute a callable statement
help-autocommit: Set autocommit mode on or off
help-commit: Commit the current transaction (if autocommit is off)
help-rollback: Roll back the current transaction (if autocommit is off)
help-batch: Start or execute a batch of statements
help-help: Print a summary of command usage
help-set: Set a beeline variable
help-save: Save the current variabes and aliases
help-native: Show the database''s native SQL for a command
help-alias: Create a new command alias
help-unalias: Unset a command alias
help-scan: Scan for installed JDBC drivers
help-sql: Execute a SQL command
help-sh: Execute a shell command
help-history: Display the command history
help-record: Record all output to the specified file
help-indexes: List all the indexes for the specified table
help-primarykeys: List all the primary keys for the specified table
help-exportedkeys: List all the exported keys for the specified table
help-importedkeys: List all the imported keys for the specified table
help-procedures: List all the procedures
help-tables: List all the tables in the database
help-columns: List all the columns for the specified table
help-properties: Connect to the database specified in the properties file(s)
help-outputformat: Set the output format for displaying results (table,vertical,csv2,dsv,tsv2,xmlattrs,xmlelements, and deprecated formats(csv, tsv))
help-delimiterForDSV: Set the delimiter for dsv output format
help-nullemptystring: Set to true to get historic behavior of printing null as empty string. Default is false.
help-addlocaldriverjar: Add driver jar file in the beeline client side.
help-addlocaldrivername: Add driver name that needs to be supported in the beeline client side.

jline-missing: The JLine jar was not found. Please ensure it is installed.

batch-start: Batching SQL statements. Run "batch" again to execute the batch.
running-batch: Running batched SQL statements...

arg-usage: Usage: {0} <{1}>

scanning: Scanning {0}...
no-such-method: No such method "{0}"
possible-methods: Possible methods:

closing: Closing: {0}: {1}
already-closed: Connection is already closed.
error-setting: Error setting configuration: {0}: {1}
no-method: No method matching "{0}" was found in {1}.


connected: Connected to: {0} (version {1})
driver: Driver: {0} (version {1})
autocommit-status: Autocommit status: {0}
isolation-status: Transaction isolation: {0}
unknown-format: Unknown output format "{0}". Possible values: {1}

closed: closed
open: open

executing-con: Executing SQL against: {0}
comments: Comments, bug reports, and patches go to {0}
building-tables: Building list of tables and columns for tab-completion \
	(set fastconnect to true to skip)...
done: Done
state: state
code: code

invalid-connections: Invalid connection: {0}

script-closed: Script closed. Enter "run {0}" to replay it.
script-already-running: Script ({0}) is already running. Enter "script" with no arguments to stop it.
script-started: Saving command script to "{0}". Enter "script" with no arguments to stop it.


record-closed: Recording stopped.
record-already-running: Output already being saved to ({0}). Enter "record" with no arguments to stop it.
record-started: Saving all output to "{0}". Enter "record" with no arguments to stop it.

autoloading-known-drivers: No known driver to handle "{0}". Searching for known drivers...

Warning: Warning: {0} (state={1},code={2,number,#})
Error: Error: {0} (state={1},code={2,number,#})

commit-complete: Commit complete
rollback-complete: Rollback complete

abort-on-error: Aborting command set because "force" is false and \
				 command failed: "{0}"

multiple-matches: Ambiguous command: {0}

really-drop-all: Really drop every table in the database? (y/n)\
abort-drop-all: Aborting drop all tables.

drivers-found-count: 0#No driver classes found|1#{0} driver class found|1<{0} driver classes found
rows-selected: 0#No rows selected|1#{0} row selected|1<{0} rows selected
rows-affected: 0#No rows affected|1#{0} row affected|1<{0} rows affected|0>Unknown rows affected
active-connections: 0#No active connections|1#{0} active connection:|1<{0} active connections:

time-ms: ({0,number,#.###} seconds)

hs2-connection-already-open: Socket already connected.
hs2-unexpected-end-of-file: Unexpected end of file when reading from HS2 server. The root \
cause might be too many concurrent connections. Please ask the administrator to check the number \
of active connections, and adjust hive.server2.thrift.max.worker.threads if applicable.
hs2-could-not-open-connection: Could not open connection to the HS2 server. Please check the \
server URI and if the URI is correct, then ask the administrator to check the server status.
hs2-connection-timed-out: Connection timeout when communicating with HS2 server.
hs2-unknown-connection-problem: Unknown HS2 problem when communicating with Thrift server.
hs2-unexpected-error: Unexpected HS2 error when communicating with the Thrift server.
interrupt-ctrl-c: Interrupting... Please be patient this may take some time.


cmd-usage: Usage: java org.apache.hive.cli.beeline.BeeLine \n \
\  -u <database url>               the JDBC URL to connect to\n \
\  -r                              reconnect to last saved connect url (in conjunction with !save)\n \
\  -n <username>                   the username to connect as\n \
\  -p <password>                   the password to connect as\n \
\  -d <driver class>               the driver class to use\n \
\  -i <init file>                  script file for initialization\n \
\  -e <query>                      query that should be executed\n \
\  -f <exec file>                  script file that should be executed\n \
\  -w (or) --password-file <password file>  the password file to read password from\n \
\  --hiveconf property=value       Use value for given property\n \
\  --hivevar name=value            hive variable name and value\n \
\                                  This is Hive specific settings in which variables\n \
\                                  can be set at session level and referenced in Hive\n \
\                                  commands or queries.\n \
\  --property-file=<property-file> the file to read connection properties (url, driver, user, password) from\n \
\  --color=[true/false]            control whether color is used for display\n \
\  --showHeader=[true/false]       show column names in query results\n \
\  --headerInterval=ROWS;          the interval between which heades are displayed\n \
\  --fastConnect=[true/false]      skip building table/column list for tab-completion\n \
\  --autoCommit=[true/false]       enable/disable automatic transaction commit\n \
\  --verbose=[true/false]          show verbose error messages and debug info\n \
\  --showWarnings=[true/false]     display connection warnings\n \
\  --showDbInPrompt=[true/false]   display the current database name in the prompt\n \
\  --showNestedErrs=[true/false]   display nested errors\n \
\  --numberFormat=[pattern]        format numbers using DecimalFormat pattern\n \
\  --force=[true/false]            continue running script even after errors\n \
\  --maxWidth=MAXWIDTH             the maximum width of the terminal\n \
\  --maxColumnWidth=MAXCOLWIDTH    the maximum width to use when displaying columns\n \
\  --silent=[true/false]           be more silent\n \
\  --autosave=[true/false]         automatically save preferences\n \
\  --outputformat=[table/vertical/csv2/tsv2/dsv/csv/tsv]  format mode for result display\n \
\                                  Note that csv, and tsv are deprecated - use csv2, tsv2 instead\n \
\  --incremental=[true/false]      Defaults to false. When set to false, the entire result set\n \
\                                  is fetched and buffered before being displayed, yielding optimal\n \
\                                  display column sizing. When set to true, result rows are displayed\n \
\                                  immediately as they are fetched, yielding lower latency and\n \
\                                  memory usage at the price of extra display column padding.\n \
\                                  Setting --incremental=true is recommended if you encounter an OutOfMemory\n \
\                                  on the client side (due to the fetched result set size being large).\n \
\                                  Only applicable if --outputformat=table.\n \
\  --incrementalBufferRows=NUMROWS the number of rows to buffer when printing rows on stdout,\n \
\                                  defaults to 1000; only applicable if --incremental=true\n \
\                                  and --outputformat=table\n \
\  --truncateTable=[true/false]    truncate table column when it exceeds length\n \
\  --delimiterForDSV=DELIMITER     specify the delimiter for delimiter-separated values output format (default: |)\n \
\  --isolation=LEVEL               set the transaction isolation level\n \
\  --nullemptystring=[true/false]  set to true to get historic behavior of printing null as empty string\n \
\  --maxHistoryRows=MAXHISTORYROWS The maximum number of rows to store beeline history.\n \
\  --help                          display this message\n \
\n \
\  Example:\n \
\   1. Connect using simple authentication to HiveServer2 on localhost:10000\n \
\   $ beeline -u jdbc:hive2://localhost:10000 username password\n\n \
\   2. Connect using simple authentication to HiveServer2 on hs.local:10000 using -n for username and -p for password\n \
\   $ beeline -n username -p password -u jdbc:hive2://hs2.local:10012\n\n \
\   3. Connect using Kerberos authentication with hive/localhost@mydomain.com as HiveServer2 principal\n \
\   $ beeline -u "jdbc:hive2://hs2.local:10013/default;principal=hive/localhost@mydomain.com"\n\n \
\   4. Connect using SSL connection to HiveServer2 on localhost at 10000\n \
\   $ beeline "jdbc:hive2://localhost:10000/default;ssl=true;sslTrustStore=/usr/local/truststore;trustStorePassword=mytruststorepassword"\n\n \
\   5. Connect using LDAP authentication\n \
\   $ beeline -u jdbc:hive2://hs2.local:10013/default <ldap-username> <ldap-password>\n \
