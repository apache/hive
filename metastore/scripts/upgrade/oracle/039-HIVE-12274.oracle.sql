-- change PARAM_VALUE to CLOBs
-- In order to change a VARCHAR(4000) into a CLOB, we must add a new column and drop
-- the old one or recreate the table with the new column type.

-- We clone the table
CREATE TABLE COLUMNS_V2_NEW
   ("CD_ID"       NUMBER              NOT NULL ENABLE, 
	"COMMENT"     VARCHAR2(256 BYTE), 
	"COLUMN_NAME" VARCHAR2(1000 BYTE) NOT NULL ENABLE, 
	"TYPE_NAME"   CLOB                NOT NULL ENABLE, 
	"INTEGER_IDX" NUMBER(10,0)        NOT NULL ENABLE, 
	 CONSTRAINT "COLUMNS_V2_NEW_PK" PRIMARY KEY ("CD_ID", "COLUMN_NAME") USING INDEX ENABLE, 
	 CONSTRAINT "COLUMNS_V2_NEW_FK1" FOREIGN KEY ("CD_ID")
	  REFERENCES CDS ("CD_ID") DEFERRABLE INITIALLY DEFERRED ENABLE) NOCOMPRESS LOGGING;
 
-- We clone the index
CREATE INDEX COLUMNS_V2_NEW_N49 ON COLUMNS_V2_NEW ("CD_ID");

-- We copy the content
INSERT INTO  COLUMNS_V2_NEW SELECT * FROM  COLUMNS_V2;
COMMIT; --Just in case.
 
-- Table name swap.
ALTER TABLE COLUMNS_V2 RENAME TO COLUMNS_V2_OLD;
ALTER TABLE COLUMNS_V2_NEW RENAME TO COLUMNS_V2;

-- Index and constraints rename. 
ALTER INDEX AWS_EMR.COLUMNS_V2_N49 RENAME TO COLUMNS_V2_N49_OLD; 
ALTER INDEX AWS_EMR.COLUMNS_V2_NEW_N49 RENAME TO COLUMNS_V2_N49; 
 
ALTER INDEX AWS_EMR.COLUMNS_V2_NEW_PK RENAME TO COLUMNS_V2_PK;
ALTER INDEX AWS_EMR.COLUMNS_V2_PK RENAME TO COLUMNS_V2_PK_OLD;
 
ALTER TABLE AWS_EMR.COLUMNS_V2_OLD RENAME CONSTRAINT COLUMNS_V2_PK TO COLUMNS_V2_PK_OLD;
ALTER TABLE AWS_EMR.COLUMNS_V2 RENAME CONSTRAINT COLUMNS_V2_NEW_PK TO COLUMNS_V2_PK;
 
ALTER TABLE AWS_EMR.COLUMNS_V2_OLD RENAME CONSTRAINT COLUMNS_V2_FK1 TO COLUMNS_V2_FK1_OLD;
ALTER TABLE AWS_EMR.COLUMNS_V2 RENAME CONSTRAINT COLUMNS_V2_NEW_FK1 TO COLUMNS_V2_FK1;
 
-- Once everything is completed, we drop the old table
DROP TABLE COLUMNS_V2_OLD; 

-- ALTER TABLE SERDE_PARAMS MODIFY (PARAM_VALUE CLOB);

-- We clone the table
ALTER TABLE TABLE_PARAMS MODIFY (PARAM_VALUE CLOB);
  CREATE TABLE TABLE_PARAMS_NEW
   ("TBL_ID"      NUMBER             NOT NULL ENABLE, 
	"PARAM_KEY"   VARCHAR2(256 BYTE) NOT NULL ENABLE, 
	"PARAM_VALUE" CLOB, 
	 CONSTRAINT "TABLE_PARAMS_PK_NEW" PRIMARY KEY ("TBL_ID", "PARAM_KEY") USING INDEX ENABLE, 
	 CONSTRAINT "TABLE_PARAMS_FK1_NEW" FOREIGN KEY ("TBL_ID")
	  REFERENCES TBLS ("TBL_ID") DEFERRABLE INITIALLY DEFERRED ENABLE) NOCOMPRESS LOGGING;

-- We clone the index.
CREATE INDEX TABLE_PARAMS_N49_NEW ON TABLE_PARAMS_NEW ("TBL_ID");

-- We copy the content
INSERT INTO TABLE_PARAMS_NEW SELECT * FROM TABLE_PARAMS;
COMMIT; --Just in case.

-- Table name swap.
ALTER TABLE TABLE_PARAMS RENAME TO TABLE_PARAMS_OLD;
ALTER TABLE TABLE_PARAMS_NEW RENAME TO TABLE_PARAMS;

-- Indexes and constraints rename.
ALTER INDEX TABLE_PARAMS_N49 RENAME TO TABLE_PARAMS_N49_OLD;
ALTER INDEX TABLE_PARAMS_N49_NEW RENAME TO TABLE_PARAMS_N49;

ALTER INDEX TABLE_PARAMS_PK RENAME TO TABLE_PARAMS_PK_OLD;
ALTER INDEX TABLE_PARAMS_PK_NEW RENAME TO TABLE_PARAMS_PK;

ALTER TABLE TABLE_PARAMS_OLD RENAME CONSTRAINT TABLE_PARAMS_PK TO TABLE_PARAMS_PK_OLD;
ALTER TABLE TABLE_PARAMS RENAME CONSTRAINT TABLE_PARAMS_PK_NEW TO TABLE_PARAMS_PK;

ALTER TABLE TABLE_PARAMS_OLD RENAME CONSTRAINT TABLE_PARAMS_FK1 TO TABLE_PARAMS_FK1_OLD;
ALTER TABLE TABLE_PARAMS RENAME CONSTRAINT TABLE_PARAMS_FK1_NEW TO TABLE_PARAMS_FK1;

-- Once everything is completed, we drop the old table
DROP TABLE TABLE_PARAMS_OLD;


-- ALTER TABLE SD_PARAMS MODIFY (PARAM_VALUE CLOB);
CREATE TABLE SD_PARAMS_NEW
   ("SD_ID"       NUMBER 			 NOT NULL ENABLE, 
	"PARAM_KEY"   VARCHAR2(256 BYTE) NOT NULL ENABLE, 
	"PARAM_VALUE" CLOB, 
	 CONSTRAINT "SD_PARAMS_PK_NEW" PRIMARY KEY ("SD_ID", "PARAM_KEY") USING INDEX ENABLE, 
	 CONSTRAINT "SD_PARAMS_FK1_NEW" FOREIGN KEY ("SD_ID")
	  REFERENCES SDS ("SD_ID") DEFERRABLE INITIALLY DEFERRED ENABLE) NOCOMPRESS LOGGING;

-- We clone the index.
CREATE INDEX SD_PARAMS_N49_NEW" ON SD_PARAMS_NEW" ("SD_ID");

-- We copy the content
INSERT INTO SD_PARAMS_NEW SELECT * FROM SD_PARAMS;
COMMIT; --Just in case.

-- Table name swap.
ALTER TABLE SD_PARAMS RENAME TO SD_PARAMS_OLD;
ALTER TABLE SD_PARAMS_NEW RENAME TO SD_PARAMS;

-- Indexes and constraints rename.
ALTER INDEX SD_PARAMS_N49 RENAME TO SD_PARAMS_N49_OLD;
ALTER INDEX SD_PARAMS_N49_NEW RENAME TO SD_PARAMS_N49;

ALTER INDEX SD_PARAMS_PK RENAME TO SD_PARAMS_PK_OLD;
ALTER INDEX SD_PARAMS_PK_NEW RENAME TO SD_PARAMS_PK;

ALTER TABLE SD_PARAMS_OLD RENAME CONSTRAINT SD_PARAMS_PK TO SD_PARAMS_PK_OLD;
ALTER TABLE SD_PARAMS RENAME CONSTRAINT SD_PARAMS_PK_NEW TO SD_PARAMS_PK;

ALTER TABLE SD_PARAMS_OLD RENAME CONSTRAINT SD_PARAMS_FK1 TO SD_PARAMS_FK1_OLD;
ALTER TABLE SD_PARAMS RENAME CONSTRAINT SD_PARAMS_FK1_NEW TO SD_PARAMS_FK1;

-- Once everything is completed, we drop the old table
DROP TABLE SD_PARAMS_OLD;

-- Expand the hive table name length to 256
ALTER TABLE TBLS MODIFY (TBL_NAME VARCHAR2(256));
ALTER TABLE NOTIFICATION_LOG MODIFY (TBL_NAME VARCHAR2(256));
ALTER TABLE PARTITION_EVENTS MODIFY (TBL_NAME VARCHAR2(256));
ALTER TABLE TAB_COL_STATS MODIFY (TABLE_NAME VARCHAR2(256));
ALTER TABLE PART_COL_STATS MODIFY (TABLE_NAME VARCHAR2(256));
ALTER TABLE COMPLETED_TXN_COMPONENTS MODIFY (CTC_TABLE VARCHAR2(256));

-- Expand the hive column name length to 767
ALTER TABLE COLUMNS_V2 MODIFY (COLUMN_NAME VARCHAR(767));
ALTER TABLE PART_COL_PRIVS MODIFY (COLUMN_NAME VARCHAR2(767));
ALTER TABLE TBL_COL_PRIVS MODIFY (COLUMN_NAME VARCHAR2(767));
ALTER TABLE SORT_COLS MODIFY (COLUMN_NAME VARCHAR2(767));
ALTER TABLE TAB_COL_STATS MODIFY (COLUMN_NAME VARCHAR2(767));
ALTER TABLE PART_COL_STATS MODIFY (COLUMN_NAME VARCHAR2(767));
