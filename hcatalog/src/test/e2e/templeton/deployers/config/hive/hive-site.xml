<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<configuration>
    <property>
        <name>javax.jdo.option.ConnectionURL</name>
        <!--databaseName should match $METASTORE_DB in ../../env.sh-->
        <value>jdbc:derby:;databaseName=/tmp/webhcat_e2e/logs/webhcat_e2e_metastore_db;create=true</value>
    </property>

    <property>
        <name>hive.metastore.uris</name>
        <value>thrift://localhost:9933</value>
        <description>For Hive CLI to connect to</description>
    </property>
    <!-- HIVE-27998: Make hcatalog tests run on Tez if needed -->
    <property>
        <name>hive.execution.engine</name>
        <value>mr</value>
    </property>
    <!--
    This enables client side Hive (RDBMS style) security
    <property>
        <name>hive.security.authorization.enabled</name>
        <value>true</value>
        <description>enable or disable the hive client authorization</description>
    </property>
    <property>
        <name>hive.security.authorization.createtable.owner.grants</name>
        <value>ALL</value>
        <description>the privileges automatically granted to the owner whenever a table gets created.
            An example like "select,drop" will grant select and drop privilege to the owner of the table
        </description>
    </property>
    -->
    <!--
    enable file based auth for Hive on metastore side, i.e. enforce metadata 
    security as if it were stored together with data
    https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Authorization
    <property>
        <name>hive.metastore.execute.setugi</name>
        <value>true</value>
        <description>Make metastore execute actions as doAs
            (rather than the UID which owns metastore process)
        </description>
    </property>
    <property>
        <name>hive.security.metastore.authorization.manager</name>
        <value>org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider</value>
        <description>the hive client authorization manager class name.
            The user defined authorization class should implement interface
            org.apache.hadoop.hive.ql.security.authorization.HiveAuthorizationProvider.
        </description>
    </property>
    <property>
        <name>hive.security.metastore.authenticator.manager</name>
        <value>org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator</value>
        <description>authenticator manager class name to be used in the metastore for authentication.
            The user defined authenticator should implement interface
            org.apache.hadoop.hive.ql.security.HiveAuthenticationProvider.
        </description>
    </property>
    <property>
        <name>hive.metastore.pre.event.listeners</name>
        <value>org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener</value>
        <description>pre-event listener classes to be loaded on the metastore side to run code
            whenever databases, tables, and partitions are created, altered, or dropped.
            Set to org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener
            if metastore-side authorization is desired.
        </description>
    </property>
    -->
       
</configuration>
